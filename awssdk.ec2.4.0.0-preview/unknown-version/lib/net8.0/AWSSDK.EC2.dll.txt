public class Amazon.EC2.AcceleratorManufacturer : ConstantClass {
    public static AcceleratorManufacturer AmazonWebServices;
    public static AcceleratorManufacturer Amd;
    public static AcceleratorManufacturer Habana;
    public static AcceleratorManufacturer Nvidia;
    public static AcceleratorManufacturer Xilinx;
    public AcceleratorManufacturer(string value);
    private static AcceleratorManufacturer();
    public static AcceleratorManufacturer FindValue(string value);
    public static AcceleratorManufacturer op_Implicit(string value);
}
public class Amazon.EC2.AcceleratorName : ConstantClass {
    public static AcceleratorName A100;
    public static AcceleratorName A10g;
    public static AcceleratorName H100;
    public static AcceleratorName Inferentia;
    public static AcceleratorName K520;
    public static AcceleratorName K80;
    public static AcceleratorName M60;
    public static AcceleratorName RadeonProV520;
    public static AcceleratorName T4;
    public static AcceleratorName T4g;
    public static AcceleratorName V100;
    public static AcceleratorName Vu9p;
    public AcceleratorName(string value);
    private static AcceleratorName();
    public static AcceleratorName FindValue(string value);
    public static AcceleratorName op_Implicit(string value);
}
public class Amazon.EC2.AcceleratorType : ConstantClass {
    public static AcceleratorType Fpga;
    public static AcceleratorType Gpu;
    public static AcceleratorType Inference;
    public AcceleratorType(string value);
    private static AcceleratorType();
    public static AcceleratorType FindValue(string value);
    public static AcceleratorType op_Implicit(string value);
}
public class Amazon.EC2.AccountAttributeName : ConstantClass {
    public static AccountAttributeName DefaultVpc;
    public static AccountAttributeName SupportedPlatforms;
    public AccountAttributeName(string value);
    private static AccountAttributeName();
    public static AccountAttributeName FindValue(string value);
    public static AccountAttributeName op_Implicit(string value);
}
public class Amazon.EC2.ActivityStatus : ConstantClass {
    public static ActivityStatus Error;
    public static ActivityStatus Fulfilled;
    public static ActivityStatus Pending_fulfillment;
    public static ActivityStatus Pending_termination;
    public ActivityStatus(string value);
    private static ActivityStatus();
    public static ActivityStatus FindValue(string value);
    public static ActivityStatus op_Implicit(string value);
}
public class Amazon.EC2.AddressAttributeName : ConstantClass {
    public static AddressAttributeName DomainName;
    public AddressAttributeName(string value);
    private static AddressAttributeName();
    public static AddressAttributeName FindValue(string value);
    public static AddressAttributeName op_Implicit(string value);
}
public class Amazon.EC2.AddressFamily : ConstantClass {
    public static AddressFamily Ipv4;
    public static AddressFamily Ipv6;
    public AddressFamily(string value);
    private static AddressFamily();
    public static AddressFamily FindValue(string value);
    public static AddressFamily op_Implicit(string value);
}
public class Amazon.EC2.AddressTransferStatus : ConstantClass {
    public static AddressTransferStatus Accepted;
    public static AddressTransferStatus Disabled;
    public static AddressTransferStatus Pending;
    public AddressTransferStatus(string value);
    private static AddressTransferStatus();
    public static AddressTransferStatus FindValue(string value);
    public static AddressTransferStatus op_Implicit(string value);
}
public class Amazon.EC2.Affinity : ConstantClass {
    public static Affinity Default;
    public static Affinity Host;
    public Affinity(string value);
    private static Affinity();
    public static Affinity FindValue(string value);
    public static Affinity op_Implicit(string value);
}
public class Amazon.EC2.AllocationState : ConstantClass {
    public static AllocationState Available;
    public static AllocationState Pending;
    public static AllocationState PermanentFailure;
    public static AllocationState Released;
    public static AllocationState ReleasedPermanentFailure;
    public static AllocationState UnderAssessment;
    public AllocationState(string value);
    private static AllocationState();
    public static AllocationState FindValue(string value);
    public static AllocationState op_Implicit(string value);
}
public class Amazon.EC2.AllocationStrategy : ConstantClass {
    public static AllocationStrategy CapacityOptimized;
    public static AllocationStrategy CapacityOptimizedPrioritized;
    public static AllocationStrategy Diversified;
    public static AllocationStrategy LowestPrice;
    public static AllocationStrategy PriceCapacityOptimized;
    public AllocationStrategy(string value);
    private static AllocationStrategy();
    public static AllocationStrategy FindValue(string value);
    public static AllocationStrategy op_Implicit(string value);
}
public class Amazon.EC2.AllocationType : ConstantClass {
    public static AllocationType Used;
    public AllocationType(string value);
    private static AllocationType();
    public static AllocationType FindValue(string value);
    public static AllocationType op_Implicit(string value);
}
public class Amazon.EC2.AllowsMultipleInstanceTypes : ConstantClass {
    public static AllowsMultipleInstanceTypes Off;
    public static AllowsMultipleInstanceTypes On;
    public AllowsMultipleInstanceTypes(string value);
    private static AllowsMultipleInstanceTypes();
    public static AllowsMultipleInstanceTypes FindValue(string value);
    public static AllowsMultipleInstanceTypes op_Implicit(string value);
}
public class Amazon.EC2.AmazonEC2Client : AmazonServiceClient {
    private static Dictionary`2<Type, DryRunInfo> _methodCache;
    private static IServiceMetadata serviceMetadata;
    private IEC2PaginatorFactory _paginators;
    private static Dictionary`2<Type, DryRunInfo> MethodCache { get; }
    public IEC2PaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonEC2Client(RegionEndpoint region);
    public AmazonEC2Client(AmazonEC2Config config);
    public AmazonEC2Client(AWSCredentials credentials);
    public AmazonEC2Client(AWSCredentials credentials, RegionEndpoint region);
    public AmazonEC2Client(AWSCredentials credentials, AmazonEC2Config clientConfig);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, AmazonEC2Config clientConfig);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonEC2Config clientConfig);
    private static AmazonEC2Client();
    private static Dictionary`2<Type, DryRunInfo> get_MethodCache();
    public DryRunResponse DryRun(AmazonEC2Request request);
    public sealed virtual IEC2PaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AcceptAddressTransferResponse AcceptAddressTransfer(AcceptAddressTransferRequest request);
    public virtual Task`1<AcceptAddressTransferResponse> AcceptAddressTransferAsync(AcceptAddressTransferRequest request, CancellationToken cancellationToken);
    internal virtual AcceptReservedInstancesExchangeQuoteResponse AcceptReservedInstancesExchangeQuote(AcceptReservedInstancesExchangeQuoteRequest request);
    public virtual Task`1<AcceptReservedInstancesExchangeQuoteResponse> AcceptReservedInstancesExchangeQuoteAsync(AcceptReservedInstancesExchangeQuoteRequest request, CancellationToken cancellationToken);
    internal virtual AcceptTransitGatewayMulticastDomainAssociationsResponse AcceptTransitGatewayMulticastDomainAssociations(AcceptTransitGatewayMulticastDomainAssociationsRequest request);
    public virtual Task`1<AcceptTransitGatewayMulticastDomainAssociationsResponse> AcceptTransitGatewayMulticastDomainAssociationsAsync(AcceptTransitGatewayMulticastDomainAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual AcceptTransitGatewayPeeringAttachmentResponse AcceptTransitGatewayPeeringAttachment(AcceptTransitGatewayPeeringAttachmentRequest request);
    public virtual Task`1<AcceptTransitGatewayPeeringAttachmentResponse> AcceptTransitGatewayPeeringAttachmentAsync(AcceptTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual AcceptTransitGatewayVpcAttachmentResponse AcceptTransitGatewayVpcAttachment(AcceptTransitGatewayVpcAttachmentRequest request);
    public virtual Task`1<AcceptTransitGatewayVpcAttachmentResponse> AcceptTransitGatewayVpcAttachmentAsync(AcceptTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual AcceptVpcEndpointConnectionsResponse AcceptVpcEndpointConnections(AcceptVpcEndpointConnectionsRequest request);
    public virtual Task`1<AcceptVpcEndpointConnectionsResponse> AcceptVpcEndpointConnectionsAsync(AcceptVpcEndpointConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual AcceptVpcPeeringConnectionResponse AcceptVpcPeeringConnection(AcceptVpcPeeringConnectionRequest request);
    public virtual Task`1<AcceptVpcPeeringConnectionResponse> AcceptVpcPeeringConnectionAsync(AcceptVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal virtual AdvertiseByoipCidrResponse AdvertiseByoipCidr(AdvertiseByoipCidrRequest request);
    public virtual Task`1<AdvertiseByoipCidrResponse> AdvertiseByoipCidrAsync(AdvertiseByoipCidrRequest request, CancellationToken cancellationToken);
    internal virtual AllocateAddressResponse AllocateAddress();
    internal virtual AllocateAddressResponse AllocateAddress(AllocateAddressRequest request);
    public virtual Task`1<AllocateAddressResponse> AllocateAddressAsync(CancellationToken cancellationToken);
    public virtual Task`1<AllocateAddressResponse> AllocateAddressAsync(AllocateAddressRequest request, CancellationToken cancellationToken);
    internal virtual AllocateHostsResponse AllocateHosts(AllocateHostsRequest request);
    public virtual Task`1<AllocateHostsResponse> AllocateHostsAsync(AllocateHostsRequest request, CancellationToken cancellationToken);
    internal virtual AllocateIpamPoolCidrResponse AllocateIpamPoolCidr(AllocateIpamPoolCidrRequest request);
    public virtual Task`1<AllocateIpamPoolCidrResponse> AllocateIpamPoolCidrAsync(AllocateIpamPoolCidrRequest request, CancellationToken cancellationToken);
    internal virtual ApplySecurityGroupsToClientVpnTargetNetworkResponse ApplySecurityGroupsToClientVpnTargetNetwork(ApplySecurityGroupsToClientVpnTargetNetworkRequest request);
    public virtual Task`1<ApplySecurityGroupsToClientVpnTargetNetworkResponse> ApplySecurityGroupsToClientVpnTargetNetworkAsync(ApplySecurityGroupsToClientVpnTargetNetworkRequest request, CancellationToken cancellationToken);
    internal virtual AssignIpv6AddressesResponse AssignIpv6Addresses(AssignIpv6AddressesRequest request);
    public virtual Task`1<AssignIpv6AddressesResponse> AssignIpv6AddressesAsync(AssignIpv6AddressesRequest request, CancellationToken cancellationToken);
    internal virtual AssignPrivateIpAddressesResponse AssignPrivateIpAddresses(AssignPrivateIpAddressesRequest request);
    public virtual Task`1<AssignPrivateIpAddressesResponse> AssignPrivateIpAddressesAsync(AssignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    internal virtual AssignPrivateNatGatewayAddressResponse AssignPrivateNatGatewayAddress(AssignPrivateNatGatewayAddressRequest request);
    public virtual Task`1<AssignPrivateNatGatewayAddressResponse> AssignPrivateNatGatewayAddressAsync(AssignPrivateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    internal virtual AssociateAddressResponse AssociateAddress(AssociateAddressRequest request);
    public virtual Task`1<AssociateAddressResponse> AssociateAddressAsync(AssociateAddressRequest request, CancellationToken cancellationToken);
    internal virtual AssociateClientVpnTargetNetworkResponse AssociateClientVpnTargetNetwork(AssociateClientVpnTargetNetworkRequest request);
    public virtual Task`1<AssociateClientVpnTargetNetworkResponse> AssociateClientVpnTargetNetworkAsync(AssociateClientVpnTargetNetworkRequest request, CancellationToken cancellationToken);
    internal virtual AssociateDhcpOptionsResponse AssociateDhcpOptions(AssociateDhcpOptionsRequest request);
    public virtual Task`1<AssociateDhcpOptionsResponse> AssociateDhcpOptionsAsync(AssociateDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal virtual AssociateEnclaveCertificateIamRoleResponse AssociateEnclaveCertificateIamRole(AssociateEnclaveCertificateIamRoleRequest request);
    public virtual Task`1<AssociateEnclaveCertificateIamRoleResponse> AssociateEnclaveCertificateIamRoleAsync(AssociateEnclaveCertificateIamRoleRequest request, CancellationToken cancellationToken);
    internal virtual AssociateIamInstanceProfileResponse AssociateIamInstanceProfile(AssociateIamInstanceProfileRequest request);
    public virtual Task`1<AssociateIamInstanceProfileResponse> AssociateIamInstanceProfileAsync(AssociateIamInstanceProfileRequest request, CancellationToken cancellationToken);
    internal virtual AssociateInstanceEventWindowResponse AssociateInstanceEventWindow(AssociateInstanceEventWindowRequest request);
    public virtual Task`1<AssociateInstanceEventWindowResponse> AssociateInstanceEventWindowAsync(AssociateInstanceEventWindowRequest request, CancellationToken cancellationToken);
    internal virtual AssociateIpamByoasnResponse AssociateIpamByoasn(AssociateIpamByoasnRequest request);
    public virtual Task`1<AssociateIpamByoasnResponse> AssociateIpamByoasnAsync(AssociateIpamByoasnRequest request, CancellationToken cancellationToken);
    internal virtual AssociateIpamResourceDiscoveryResponse AssociateIpamResourceDiscovery(AssociateIpamResourceDiscoveryRequest request);
    public virtual Task`1<AssociateIpamResourceDiscoveryResponse> AssociateIpamResourceDiscoveryAsync(AssociateIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    internal virtual AssociateNatGatewayAddressResponse AssociateNatGatewayAddress(AssociateNatGatewayAddressRequest request);
    public virtual Task`1<AssociateNatGatewayAddressResponse> AssociateNatGatewayAddressAsync(AssociateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    internal virtual AssociateRouteTableResponse AssociateRouteTable(AssociateRouteTableRequest request);
    public virtual Task`1<AssociateRouteTableResponse> AssociateRouteTableAsync(AssociateRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual AssociateSubnetCidrBlockResponse AssociateSubnetCidrBlock(AssociateSubnetCidrBlockRequest request);
    public virtual Task`1<AssociateSubnetCidrBlockResponse> AssociateSubnetCidrBlockAsync(AssociateSubnetCidrBlockRequest request, CancellationToken cancellationToken);
    internal virtual AssociateTransitGatewayMulticastDomainResponse AssociateTransitGatewayMulticastDomain(AssociateTransitGatewayMulticastDomainRequest request);
    public virtual Task`1<AssociateTransitGatewayMulticastDomainResponse> AssociateTransitGatewayMulticastDomainAsync(AssociateTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    internal virtual AssociateTransitGatewayPolicyTableResponse AssociateTransitGatewayPolicyTable(AssociateTransitGatewayPolicyTableRequest request);
    public virtual Task`1<AssociateTransitGatewayPolicyTableResponse> AssociateTransitGatewayPolicyTableAsync(AssociateTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    internal virtual AssociateTransitGatewayRouteTableResponse AssociateTransitGatewayRouteTable(AssociateTransitGatewayRouteTableRequest request);
    public virtual Task`1<AssociateTransitGatewayRouteTableResponse> AssociateTransitGatewayRouteTableAsync(AssociateTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual AssociateTrunkInterfaceResponse AssociateTrunkInterface(AssociateTrunkInterfaceRequest request);
    public virtual Task`1<AssociateTrunkInterfaceResponse> AssociateTrunkInterfaceAsync(AssociateTrunkInterfaceRequest request, CancellationToken cancellationToken);
    internal virtual AssociateVpcCidrBlockResponse AssociateVpcCidrBlock(AssociateVpcCidrBlockRequest request);
    public virtual Task`1<AssociateVpcCidrBlockResponse> AssociateVpcCidrBlockAsync(AssociateVpcCidrBlockRequest request, CancellationToken cancellationToken);
    internal virtual AttachClassicLinkVpcResponse AttachClassicLinkVpc(AttachClassicLinkVpcRequest request);
    public virtual Task`1<AttachClassicLinkVpcResponse> AttachClassicLinkVpcAsync(AttachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    internal virtual AttachInternetGatewayResponse AttachInternetGateway(AttachInternetGatewayRequest request);
    public virtual Task`1<AttachInternetGatewayResponse> AttachInternetGatewayAsync(AttachInternetGatewayRequest request, CancellationToken cancellationToken);
    internal virtual AttachNetworkInterfaceResponse AttachNetworkInterface(AttachNetworkInterfaceRequest request);
    public virtual Task`1<AttachNetworkInterfaceResponse> AttachNetworkInterfaceAsync(AttachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal virtual AttachVerifiedAccessTrustProviderResponse AttachVerifiedAccessTrustProvider(AttachVerifiedAccessTrustProviderRequest request);
    public virtual Task`1<AttachVerifiedAccessTrustProviderResponse> AttachVerifiedAccessTrustProviderAsync(AttachVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    internal virtual AttachVolumeResponse AttachVolume(AttachVolumeRequest request);
    public virtual Task`1<AttachVolumeResponse> AttachVolumeAsync(AttachVolumeRequest request, CancellationToken cancellationToken);
    internal virtual AttachVpnGatewayResponse AttachVpnGateway(AttachVpnGatewayRequest request);
    public virtual Task`1<AttachVpnGatewayResponse> AttachVpnGatewayAsync(AttachVpnGatewayRequest request, CancellationToken cancellationToken);
    internal virtual AuthorizeClientVpnIngressResponse AuthorizeClientVpnIngress(AuthorizeClientVpnIngressRequest request);
    public virtual Task`1<AuthorizeClientVpnIngressResponse> AuthorizeClientVpnIngressAsync(AuthorizeClientVpnIngressRequest request, CancellationToken cancellationToken);
    internal virtual AuthorizeSecurityGroupEgressResponse AuthorizeSecurityGroupEgress(AuthorizeSecurityGroupEgressRequest request);
    public virtual Task`1<AuthorizeSecurityGroupEgressResponse> AuthorizeSecurityGroupEgressAsync(AuthorizeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    internal virtual AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request);
    public virtual Task`1<AuthorizeSecurityGroupIngressResponse> AuthorizeSecurityGroupIngressAsync(AuthorizeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    internal virtual BundleInstanceResponse BundleInstance(BundleInstanceRequest request);
    public virtual Task`1<BundleInstanceResponse> BundleInstanceAsync(BundleInstanceRequest request, CancellationToken cancellationToken);
    internal virtual CancelBundleTaskResponse CancelBundleTask(CancelBundleTaskRequest request);
    public virtual Task`1<CancelBundleTaskResponse> CancelBundleTaskAsync(CancelBundleTaskRequest request, CancellationToken cancellationToken);
    internal virtual CancelCapacityReservationResponse CancelCapacityReservation(CancelCapacityReservationRequest request);
    public virtual Task`1<CancelCapacityReservationResponse> CancelCapacityReservationAsync(CancelCapacityReservationRequest request, CancellationToken cancellationToken);
    internal virtual CancelCapacityReservationFleetsResponse CancelCapacityReservationFleets(CancelCapacityReservationFleetsRequest request);
    public virtual Task`1<CancelCapacityReservationFleetsResponse> CancelCapacityReservationFleetsAsync(CancelCapacityReservationFleetsRequest request, CancellationToken cancellationToken);
    internal virtual CancelConversionTaskResponse CancelConversionTask(CancelConversionTaskRequest request);
    public virtual Task`1<CancelConversionTaskResponse> CancelConversionTaskAsync(CancelConversionTaskRequest request, CancellationToken cancellationToken);
    internal virtual CancelExportTaskResponse CancelExportTask(CancelExportTaskRequest request);
    public virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    internal virtual CancelImageLaunchPermissionResponse CancelImageLaunchPermission(CancelImageLaunchPermissionRequest request);
    public virtual Task`1<CancelImageLaunchPermissionResponse> CancelImageLaunchPermissionAsync(CancelImageLaunchPermissionRequest request, CancellationToken cancellationToken);
    internal virtual CancelImportTaskResponse CancelImportTask(CancelImportTaskRequest request);
    public virtual Task`1<CancelImportTaskResponse> CancelImportTaskAsync(CancelImportTaskRequest request, CancellationToken cancellationToken);
    internal virtual CancelReservedInstancesListingResponse CancelReservedInstancesListing(CancelReservedInstancesListingRequest request);
    public virtual Task`1<CancelReservedInstancesListingResponse> CancelReservedInstancesListingAsync(CancelReservedInstancesListingRequest request, CancellationToken cancellationToken);
    internal virtual CancelSpotFleetRequestsResponse CancelSpotFleetRequests(CancelSpotFleetRequestsRequest request);
    public virtual Task`1<CancelSpotFleetRequestsResponse> CancelSpotFleetRequestsAsync(CancelSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    internal virtual CancelSpotInstanceRequestsResponse CancelSpotInstanceRequests(CancelSpotInstanceRequestsRequest request);
    public virtual Task`1<CancelSpotInstanceRequestsResponse> CancelSpotInstanceRequestsAsync(CancelSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    internal virtual ConfirmProductInstanceResponse ConfirmProductInstance(ConfirmProductInstanceRequest request);
    public virtual Task`1<ConfirmProductInstanceResponse> ConfirmProductInstanceAsync(ConfirmProductInstanceRequest request, CancellationToken cancellationToken);
    internal virtual CopyFpgaImageResponse CopyFpgaImage(CopyFpgaImageRequest request);
    public virtual Task`1<CopyFpgaImageResponse> CopyFpgaImageAsync(CopyFpgaImageRequest request, CancellationToken cancellationToken);
    internal virtual CopyImageResponse CopyImage(CopyImageRequest request);
    public virtual Task`1<CopyImageResponse> CopyImageAsync(CopyImageRequest request, CancellationToken cancellationToken);
    internal virtual CopySnapshotResponse CopySnapshot(CopySnapshotRequest request);
    public virtual Task`1<CopySnapshotResponse> CopySnapshotAsync(CopySnapshotRequest request, CancellationToken cancellationToken);
    internal virtual CreateCapacityReservationResponse CreateCapacityReservation(CreateCapacityReservationRequest request);
    public virtual Task`1<CreateCapacityReservationResponse> CreateCapacityReservationAsync(CreateCapacityReservationRequest request, CancellationToken cancellationToken);
    internal virtual CreateCapacityReservationFleetResponse CreateCapacityReservationFleet(CreateCapacityReservationFleetRequest request);
    public virtual Task`1<CreateCapacityReservationFleetResponse> CreateCapacityReservationFleetAsync(CreateCapacityReservationFleetRequest request, CancellationToken cancellationToken);
    internal virtual CreateCarrierGatewayResponse CreateCarrierGateway(CreateCarrierGatewayRequest request);
    public virtual Task`1<CreateCarrierGatewayResponse> CreateCarrierGatewayAsync(CreateCarrierGatewayRequest request, CancellationToken cancellationToken);
    internal virtual CreateClientVpnEndpointResponse CreateClientVpnEndpoint(CreateClientVpnEndpointRequest request);
    public virtual Task`1<CreateClientVpnEndpointResponse> CreateClientVpnEndpointAsync(CreateClientVpnEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateClientVpnRouteResponse CreateClientVpnRoute(CreateClientVpnRouteRequest request);
    public virtual Task`1<CreateClientVpnRouteResponse> CreateClientVpnRouteAsync(CreateClientVpnRouteRequest request, CancellationToken cancellationToken);
    internal virtual CreateCoipCidrResponse CreateCoipCidr(CreateCoipCidrRequest request);
    public virtual Task`1<CreateCoipCidrResponse> CreateCoipCidrAsync(CreateCoipCidrRequest request, CancellationToken cancellationToken);
    internal virtual CreateCoipPoolResponse CreateCoipPool(CreateCoipPoolRequest request);
    public virtual Task`1<CreateCoipPoolResponse> CreateCoipPoolAsync(CreateCoipPoolRequest request, CancellationToken cancellationToken);
    internal virtual CreateCustomerGatewayResponse CreateCustomerGateway(CreateCustomerGatewayRequest request);
    public virtual Task`1<CreateCustomerGatewayResponse> CreateCustomerGatewayAsync(CreateCustomerGatewayRequest request, CancellationToken cancellationToken);
    internal virtual CreateDefaultSubnetResponse CreateDefaultSubnet(CreateDefaultSubnetRequest request);
    public virtual Task`1<CreateDefaultSubnetResponse> CreateDefaultSubnetAsync(CreateDefaultSubnetRequest request, CancellationToken cancellationToken);
    internal virtual CreateDefaultVpcResponse CreateDefaultVpc(CreateDefaultVpcRequest request);
    public virtual Task`1<CreateDefaultVpcResponse> CreateDefaultVpcAsync(CreateDefaultVpcRequest request, CancellationToken cancellationToken);
    internal virtual CreateDhcpOptionsResponse CreateDhcpOptions(CreateDhcpOptionsRequest request);
    public virtual Task`1<CreateDhcpOptionsResponse> CreateDhcpOptionsAsync(CreateDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal virtual CreateEgressOnlyInternetGatewayResponse CreateEgressOnlyInternetGateway(CreateEgressOnlyInternetGatewayRequest request);
    public virtual Task`1<CreateEgressOnlyInternetGatewayResponse> CreateEgressOnlyInternetGatewayAsync(CreateEgressOnlyInternetGatewayRequest request, CancellationToken cancellationToken);
    internal virtual CreateFleetResponse CreateFleet(CreateFleetRequest request);
    public virtual Task`1<CreateFleetResponse> CreateFleetAsync(CreateFleetRequest request, CancellationToken cancellationToken);
    internal virtual CreateFlowLogsResponse CreateFlowLogs(CreateFlowLogsRequest request);
    public virtual Task`1<CreateFlowLogsResponse> CreateFlowLogsAsync(CreateFlowLogsRequest request, CancellationToken cancellationToken);
    internal virtual CreateFpgaImageResponse CreateFpgaImage(CreateFpgaImageRequest request);
    public virtual Task`1<CreateFpgaImageResponse> CreateFpgaImageAsync(CreateFpgaImageRequest request, CancellationToken cancellationToken);
    internal virtual CreateImageResponse CreateImage(CreateImageRequest request);
    public virtual Task`1<CreateImageResponse> CreateImageAsync(CreateImageRequest request, CancellationToken cancellationToken);
    internal virtual CreateInstanceConnectEndpointResponse CreateInstanceConnectEndpoint(CreateInstanceConnectEndpointRequest request);
    public virtual Task`1<CreateInstanceConnectEndpointResponse> CreateInstanceConnectEndpointAsync(CreateInstanceConnectEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateInstanceEventWindowResponse CreateInstanceEventWindow(CreateInstanceEventWindowRequest request);
    public virtual Task`1<CreateInstanceEventWindowResponse> CreateInstanceEventWindowAsync(CreateInstanceEventWindowRequest request, CancellationToken cancellationToken);
    internal virtual CreateInstanceExportTaskResponse CreateInstanceExportTask(CreateInstanceExportTaskRequest request);
    public virtual Task`1<CreateInstanceExportTaskResponse> CreateInstanceExportTaskAsync(CreateInstanceExportTaskRequest request, CancellationToken cancellationToken);
    internal virtual CreateInternetGatewayResponse CreateInternetGateway();
    internal virtual CreateInternetGatewayResponse CreateInternetGateway(CreateInternetGatewayRequest request);
    public virtual Task`1<CreateInternetGatewayResponse> CreateInternetGatewayAsync(CancellationToken cancellationToken);
    public virtual Task`1<CreateInternetGatewayResponse> CreateInternetGatewayAsync(CreateInternetGatewayRequest request, CancellationToken cancellationToken);
    internal virtual CreateIpamResponse CreateIpam(CreateIpamRequest request);
    public virtual Task`1<CreateIpamResponse> CreateIpamAsync(CreateIpamRequest request, CancellationToken cancellationToken);
    internal virtual CreateIpamExternalResourceVerificationTokenResponse CreateIpamExternalResourceVerificationToken(CreateIpamExternalResourceVerificationTokenRequest request);
    public virtual Task`1<CreateIpamExternalResourceVerificationTokenResponse> CreateIpamExternalResourceVerificationTokenAsync(CreateIpamExternalResourceVerificationTokenRequest request, CancellationToken cancellationToken);
    internal virtual CreateIpamPoolResponse CreateIpamPool(CreateIpamPoolRequest request);
    public virtual Task`1<CreateIpamPoolResponse> CreateIpamPoolAsync(CreateIpamPoolRequest request, CancellationToken cancellationToken);
    internal virtual CreateIpamResourceDiscoveryResponse CreateIpamResourceDiscovery(CreateIpamResourceDiscoveryRequest request);
    public virtual Task`1<CreateIpamResourceDiscoveryResponse> CreateIpamResourceDiscoveryAsync(CreateIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    internal virtual CreateIpamScopeResponse CreateIpamScope(CreateIpamScopeRequest request);
    public virtual Task`1<CreateIpamScopeResponse> CreateIpamScopeAsync(CreateIpamScopeRequest request, CancellationToken cancellationToken);
    internal virtual CreateKeyPairResponse CreateKeyPair(CreateKeyPairRequest request);
    public virtual Task`1<CreateKeyPairResponse> CreateKeyPairAsync(CreateKeyPairRequest request, CancellationToken cancellationToken);
    internal virtual CreateLaunchTemplateResponse CreateLaunchTemplate(CreateLaunchTemplateRequest request);
    public virtual Task`1<CreateLaunchTemplateResponse> CreateLaunchTemplateAsync(CreateLaunchTemplateRequest request, CancellationToken cancellationToken);
    internal virtual CreateLaunchTemplateVersionResponse CreateLaunchTemplateVersion(CreateLaunchTemplateVersionRequest request);
    public virtual Task`1<CreateLaunchTemplateVersionResponse> CreateLaunchTemplateVersionAsync(CreateLaunchTemplateVersionRequest request, CancellationToken cancellationToken);
    internal virtual CreateLocalGatewayRouteResponse CreateLocalGatewayRoute(CreateLocalGatewayRouteRequest request);
    public virtual Task`1<CreateLocalGatewayRouteResponse> CreateLocalGatewayRouteAsync(CreateLocalGatewayRouteRequest request, CancellationToken cancellationToken);
    internal virtual CreateLocalGatewayRouteTableResponse CreateLocalGatewayRouteTable(CreateLocalGatewayRouteTableRequest request);
    public virtual Task`1<CreateLocalGatewayRouteTableResponse> CreateLocalGatewayRouteTableAsync(CreateLocalGatewayRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation(CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest request);
    public virtual Task`1<CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse> CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationAsync(CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest request, CancellationToken cancellationToken);
    internal virtual CreateLocalGatewayRouteTableVpcAssociationResponse CreateLocalGatewayRouteTableVpcAssociation(CreateLocalGatewayRouteTableVpcAssociationRequest request);
    public virtual Task`1<CreateLocalGatewayRouteTableVpcAssociationResponse> CreateLocalGatewayRouteTableVpcAssociationAsync(CreateLocalGatewayRouteTableVpcAssociationRequest request, CancellationToken cancellationToken);
    internal virtual CreateManagedPrefixListResponse CreateManagedPrefixList(CreateManagedPrefixListRequest request);
    public virtual Task`1<CreateManagedPrefixListResponse> CreateManagedPrefixListAsync(CreateManagedPrefixListRequest request, CancellationToken cancellationToken);
    internal virtual CreateNatGatewayResponse CreateNatGateway(CreateNatGatewayRequest request);
    public virtual Task`1<CreateNatGatewayResponse> CreateNatGatewayAsync(CreateNatGatewayRequest request, CancellationToken cancellationToken);
    internal virtual CreateNetworkAclResponse CreateNetworkAcl(CreateNetworkAclRequest request);
    public virtual Task`1<CreateNetworkAclResponse> CreateNetworkAclAsync(CreateNetworkAclRequest request, CancellationToken cancellationToken);
    internal virtual CreateNetworkAclEntryResponse CreateNetworkAclEntry(CreateNetworkAclEntryRequest request);
    public virtual Task`1<CreateNetworkAclEntryResponse> CreateNetworkAclEntryAsync(CreateNetworkAclEntryRequest request, CancellationToken cancellationToken);
    internal virtual CreateNetworkInsightsAccessScopeResponse CreateNetworkInsightsAccessScope(CreateNetworkInsightsAccessScopeRequest request);
    public virtual Task`1<CreateNetworkInsightsAccessScopeResponse> CreateNetworkInsightsAccessScopeAsync(CreateNetworkInsightsAccessScopeRequest request, CancellationToken cancellationToken);
    internal virtual CreateNetworkInsightsPathResponse CreateNetworkInsightsPath(CreateNetworkInsightsPathRequest request);
    public virtual Task`1<CreateNetworkInsightsPathResponse> CreateNetworkInsightsPathAsync(CreateNetworkInsightsPathRequest request, CancellationToken cancellationToken);
    internal virtual CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request);
    public virtual Task`1<CreateNetworkInterfaceResponse> CreateNetworkInterfaceAsync(CreateNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal virtual CreateNetworkInterfacePermissionResponse CreateNetworkInterfacePermission(CreateNetworkInterfacePermissionRequest request);
    public virtual Task`1<CreateNetworkInterfacePermissionResponse> CreateNetworkInterfacePermissionAsync(CreateNetworkInterfacePermissionRequest request, CancellationToken cancellationToken);
    internal virtual CreatePlacementGroupResponse CreatePlacementGroup(CreatePlacementGroupRequest request);
    public virtual Task`1<CreatePlacementGroupResponse> CreatePlacementGroupAsync(CreatePlacementGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreatePublicIpv4PoolResponse CreatePublicIpv4Pool(CreatePublicIpv4PoolRequest request);
    public virtual Task`1<CreatePublicIpv4PoolResponse> CreatePublicIpv4PoolAsync(CreatePublicIpv4PoolRequest request, CancellationToken cancellationToken);
    internal virtual CreateReplaceRootVolumeTaskResponse CreateReplaceRootVolumeTask(CreateReplaceRootVolumeTaskRequest request);
    public virtual Task`1<CreateReplaceRootVolumeTaskResponse> CreateReplaceRootVolumeTaskAsync(CreateReplaceRootVolumeTaskRequest request, CancellationToken cancellationToken);
    internal virtual CreateReservedInstancesListingResponse CreateReservedInstancesListing(CreateReservedInstancesListingRequest request);
    public virtual Task`1<CreateReservedInstancesListingResponse> CreateReservedInstancesListingAsync(CreateReservedInstancesListingRequest request, CancellationToken cancellationToken);
    internal virtual CreateRestoreImageTaskResponse CreateRestoreImageTask(CreateRestoreImageTaskRequest request);
    public virtual Task`1<CreateRestoreImageTaskResponse> CreateRestoreImageTaskAsync(CreateRestoreImageTaskRequest request, CancellationToken cancellationToken);
    internal virtual CreateRouteResponse CreateRoute(CreateRouteRequest request);
    public virtual Task`1<CreateRouteResponse> CreateRouteAsync(CreateRouteRequest request, CancellationToken cancellationToken);
    internal virtual CreateRouteTableResponse CreateRouteTable(CreateRouteTableRequest request);
    public virtual Task`1<CreateRouteTableResponse> CreateRouteTableAsync(CreateRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual CreateSecurityGroupResponse CreateSecurityGroup(CreateSecurityGroupRequest request);
    public virtual Task`1<CreateSecurityGroupResponse> CreateSecurityGroupAsync(CreateSecurityGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateSnapshotResponse CreateSnapshot(CreateSnapshotRequest request);
    public virtual Task`1<CreateSnapshotResponse> CreateSnapshotAsync(CreateSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual CreateSnapshotsResponse CreateSnapshots(CreateSnapshotsRequest request);
    public virtual Task`1<CreateSnapshotsResponse> CreateSnapshotsAsync(CreateSnapshotsRequest request, CancellationToken cancellationToken);
    internal virtual CreateSpotDatafeedSubscriptionResponse CreateSpotDatafeedSubscription(CreateSpotDatafeedSubscriptionRequest request);
    public virtual Task`1<CreateSpotDatafeedSubscriptionResponse> CreateSpotDatafeedSubscriptionAsync(CreateSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual CreateStoreImageTaskResponse CreateStoreImageTask(CreateStoreImageTaskRequest request);
    public virtual Task`1<CreateStoreImageTaskResponse> CreateStoreImageTaskAsync(CreateStoreImageTaskRequest request, CancellationToken cancellationToken);
    internal virtual CreateSubnetResponse CreateSubnet(CreateSubnetRequest request);
    public virtual Task`1<CreateSubnetResponse> CreateSubnetAsync(CreateSubnetRequest request, CancellationToken cancellationToken);
    internal virtual CreateSubnetCidrReservationResponse CreateSubnetCidrReservation(CreateSubnetCidrReservationRequest request);
    public virtual Task`1<CreateSubnetCidrReservationResponse> CreateSubnetCidrReservationAsync(CreateSubnetCidrReservationRequest request, CancellationToken cancellationToken);
    internal virtual CreateTagsResponse CreateTags(CreateTagsRequest request);
    public virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    internal virtual CreateTrafficMirrorFilterResponse CreateTrafficMirrorFilter(CreateTrafficMirrorFilterRequest request);
    public virtual Task`1<CreateTrafficMirrorFilterResponse> CreateTrafficMirrorFilterAsync(CreateTrafficMirrorFilterRequest request, CancellationToken cancellationToken);
    internal virtual CreateTrafficMirrorFilterRuleResponse CreateTrafficMirrorFilterRule(CreateTrafficMirrorFilterRuleRequest request);
    public virtual Task`1<CreateTrafficMirrorFilterRuleResponse> CreateTrafficMirrorFilterRuleAsync(CreateTrafficMirrorFilterRuleRequest request, CancellationToken cancellationToken);
    internal virtual CreateTrafficMirrorSessionResponse CreateTrafficMirrorSession(CreateTrafficMirrorSessionRequest request);
    public virtual Task`1<CreateTrafficMirrorSessionResponse> CreateTrafficMirrorSessionAsync(CreateTrafficMirrorSessionRequest request, CancellationToken cancellationToken);
    internal virtual CreateTrafficMirrorTargetResponse CreateTrafficMirrorTarget(CreateTrafficMirrorTargetRequest request);
    public virtual Task`1<CreateTrafficMirrorTargetResponse> CreateTrafficMirrorTargetAsync(CreateTrafficMirrorTargetRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayResponse CreateTransitGateway(CreateTransitGatewayRequest request);
    public virtual Task`1<CreateTransitGatewayResponse> CreateTransitGatewayAsync(CreateTransitGatewayRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayConnectResponse CreateTransitGatewayConnect(CreateTransitGatewayConnectRequest request);
    public virtual Task`1<CreateTransitGatewayConnectResponse> CreateTransitGatewayConnectAsync(CreateTransitGatewayConnectRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayConnectPeerResponse CreateTransitGatewayConnectPeer(CreateTransitGatewayConnectPeerRequest request);
    public virtual Task`1<CreateTransitGatewayConnectPeerResponse> CreateTransitGatewayConnectPeerAsync(CreateTransitGatewayConnectPeerRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayMulticastDomainResponse CreateTransitGatewayMulticastDomain(CreateTransitGatewayMulticastDomainRequest request);
    public virtual Task`1<CreateTransitGatewayMulticastDomainResponse> CreateTransitGatewayMulticastDomainAsync(CreateTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayPeeringAttachmentResponse CreateTransitGatewayPeeringAttachment(CreateTransitGatewayPeeringAttachmentRequest request);
    public virtual Task`1<CreateTransitGatewayPeeringAttachmentResponse> CreateTransitGatewayPeeringAttachmentAsync(CreateTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayPolicyTableResponse CreateTransitGatewayPolicyTable(CreateTransitGatewayPolicyTableRequest request);
    public virtual Task`1<CreateTransitGatewayPolicyTableResponse> CreateTransitGatewayPolicyTableAsync(CreateTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayPrefixListReferenceResponse CreateTransitGatewayPrefixListReference(CreateTransitGatewayPrefixListReferenceRequest request);
    public virtual Task`1<CreateTransitGatewayPrefixListReferenceResponse> CreateTransitGatewayPrefixListReferenceAsync(CreateTransitGatewayPrefixListReferenceRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayRouteResponse CreateTransitGatewayRoute(CreateTransitGatewayRouteRequest request);
    public virtual Task`1<CreateTransitGatewayRouteResponse> CreateTransitGatewayRouteAsync(CreateTransitGatewayRouteRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayRouteTableResponse CreateTransitGatewayRouteTable(CreateTransitGatewayRouteTableRequest request);
    public virtual Task`1<CreateTransitGatewayRouteTableResponse> CreateTransitGatewayRouteTableAsync(CreateTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayRouteTableAnnouncementResponse CreateTransitGatewayRouteTableAnnouncement(CreateTransitGatewayRouteTableAnnouncementRequest request);
    public virtual Task`1<CreateTransitGatewayRouteTableAnnouncementResponse> CreateTransitGatewayRouteTableAnnouncementAsync(CreateTransitGatewayRouteTableAnnouncementRequest request, CancellationToken cancellationToken);
    internal virtual CreateTransitGatewayVpcAttachmentResponse CreateTransitGatewayVpcAttachment(CreateTransitGatewayVpcAttachmentRequest request);
    public virtual Task`1<CreateTransitGatewayVpcAttachmentResponse> CreateTransitGatewayVpcAttachmentAsync(CreateTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual CreateVerifiedAccessEndpointResponse CreateVerifiedAccessEndpoint(CreateVerifiedAccessEndpointRequest request);
    public virtual Task`1<CreateVerifiedAccessEndpointResponse> CreateVerifiedAccessEndpointAsync(CreateVerifiedAccessEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateVerifiedAccessGroupResponse CreateVerifiedAccessGroup(CreateVerifiedAccessGroupRequest request);
    public virtual Task`1<CreateVerifiedAccessGroupResponse> CreateVerifiedAccessGroupAsync(CreateVerifiedAccessGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateVerifiedAccessInstanceResponse CreateVerifiedAccessInstance(CreateVerifiedAccessInstanceRequest request);
    public virtual Task`1<CreateVerifiedAccessInstanceResponse> CreateVerifiedAccessInstanceAsync(CreateVerifiedAccessInstanceRequest request, CancellationToken cancellationToken);
    internal virtual CreateVerifiedAccessTrustProviderResponse CreateVerifiedAccessTrustProvider(CreateVerifiedAccessTrustProviderRequest request);
    public virtual Task`1<CreateVerifiedAccessTrustProviderResponse> CreateVerifiedAccessTrustProviderAsync(CreateVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    internal virtual CreateVolumeResponse CreateVolume(CreateVolumeRequest request);
    public virtual Task`1<CreateVolumeResponse> CreateVolumeAsync(CreateVolumeRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpcResponse CreateVpc(CreateVpcRequest request);
    public virtual Task`1<CreateVpcResponse> CreateVpcAsync(CreateVpcRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request);
    public virtual Task`1<CreateVpcEndpointResponse> CreateVpcEndpointAsync(CreateVpcEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpcEndpointConnectionNotificationResponse CreateVpcEndpointConnectionNotification(CreateVpcEndpointConnectionNotificationRequest request);
    public virtual Task`1<CreateVpcEndpointConnectionNotificationResponse> CreateVpcEndpointConnectionNotificationAsync(CreateVpcEndpointConnectionNotificationRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpcEndpointServiceConfigurationResponse CreateVpcEndpointServiceConfiguration(CreateVpcEndpointServiceConfigurationRequest request);
    public virtual Task`1<CreateVpcEndpointServiceConfigurationResponse> CreateVpcEndpointServiceConfigurationAsync(CreateVpcEndpointServiceConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpcPeeringConnectionResponse CreateVpcPeeringConnection(CreateVpcPeeringConnectionRequest request);
    public virtual Task`1<CreateVpcPeeringConnectionResponse> CreateVpcPeeringConnectionAsync(CreateVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request);
    public virtual Task`1<CreateVpnConnectionResponse> CreateVpnConnectionAsync(CreateVpnConnectionRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpnConnectionRouteResponse CreateVpnConnectionRoute(CreateVpnConnectionRouteRequest request);
    public virtual Task`1<CreateVpnConnectionRouteResponse> CreateVpnConnectionRouteAsync(CreateVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpnGatewayResponse CreateVpnGateway(CreateVpnGatewayRequest request);
    public virtual Task`1<CreateVpnGatewayResponse> CreateVpnGatewayAsync(CreateVpnGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCarrierGatewayResponse DeleteCarrierGateway(DeleteCarrierGatewayRequest request);
    public virtual Task`1<DeleteCarrierGatewayResponse> DeleteCarrierGatewayAsync(DeleteCarrierGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteClientVpnEndpointResponse DeleteClientVpnEndpoint(DeleteClientVpnEndpointRequest request);
    public virtual Task`1<DeleteClientVpnEndpointResponse> DeleteClientVpnEndpointAsync(DeleteClientVpnEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteClientVpnRouteResponse DeleteClientVpnRoute(DeleteClientVpnRouteRequest request);
    public virtual Task`1<DeleteClientVpnRouteResponse> DeleteClientVpnRouteAsync(DeleteClientVpnRouteRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCoipCidrResponse DeleteCoipCidr(DeleteCoipCidrRequest request);
    public virtual Task`1<DeleteCoipCidrResponse> DeleteCoipCidrAsync(DeleteCoipCidrRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCoipPoolResponse DeleteCoipPool(DeleteCoipPoolRequest request);
    public virtual Task`1<DeleteCoipPoolResponse> DeleteCoipPoolAsync(DeleteCoipPoolRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCustomerGatewayResponse DeleteCustomerGateway(DeleteCustomerGatewayRequest request);
    public virtual Task`1<DeleteCustomerGatewayResponse> DeleteCustomerGatewayAsync(DeleteCustomerGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDhcpOptionsResponse DeleteDhcpOptions(DeleteDhcpOptionsRequest request);
    public virtual Task`1<DeleteDhcpOptionsResponse> DeleteDhcpOptionsAsync(DeleteDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteEgressOnlyInternetGatewayResponse DeleteEgressOnlyInternetGateway(DeleteEgressOnlyInternetGatewayRequest request);
    public virtual Task`1<DeleteEgressOnlyInternetGatewayResponse> DeleteEgressOnlyInternetGatewayAsync(DeleteEgressOnlyInternetGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFleetsResponse DeleteFleets(DeleteFleetsRequest request);
    public virtual Task`1<DeleteFleetsResponse> DeleteFleetsAsync(DeleteFleetsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFlowLogsResponse DeleteFlowLogs(DeleteFlowLogsRequest request);
    public virtual Task`1<DeleteFlowLogsResponse> DeleteFlowLogsAsync(DeleteFlowLogsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFpgaImageResponse DeleteFpgaImage(DeleteFpgaImageRequest request);
    public virtual Task`1<DeleteFpgaImageResponse> DeleteFpgaImageAsync(DeleteFpgaImageRequest request, CancellationToken cancellationToken);
    internal virtual DeleteInstanceConnectEndpointResponse DeleteInstanceConnectEndpoint(DeleteInstanceConnectEndpointRequest request);
    public virtual Task`1<DeleteInstanceConnectEndpointResponse> DeleteInstanceConnectEndpointAsync(DeleteInstanceConnectEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteInstanceEventWindowResponse DeleteInstanceEventWindow(DeleteInstanceEventWindowRequest request);
    public virtual Task`1<DeleteInstanceEventWindowResponse> DeleteInstanceEventWindowAsync(DeleteInstanceEventWindowRequest request, CancellationToken cancellationToken);
    internal virtual DeleteInternetGatewayResponse DeleteInternetGateway(DeleteInternetGatewayRequest request);
    public virtual Task`1<DeleteInternetGatewayResponse> DeleteInternetGatewayAsync(DeleteInternetGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIpamResponse DeleteIpam(DeleteIpamRequest request);
    public virtual Task`1<DeleteIpamResponse> DeleteIpamAsync(DeleteIpamRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIpamExternalResourceVerificationTokenResponse DeleteIpamExternalResourceVerificationToken(DeleteIpamExternalResourceVerificationTokenRequest request);
    public virtual Task`1<DeleteIpamExternalResourceVerificationTokenResponse> DeleteIpamExternalResourceVerificationTokenAsync(DeleteIpamExternalResourceVerificationTokenRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIpamPoolResponse DeleteIpamPool(DeleteIpamPoolRequest request);
    public virtual Task`1<DeleteIpamPoolResponse> DeleteIpamPoolAsync(DeleteIpamPoolRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIpamResourceDiscoveryResponse DeleteIpamResourceDiscovery(DeleteIpamResourceDiscoveryRequest request);
    public virtual Task`1<DeleteIpamResourceDiscoveryResponse> DeleteIpamResourceDiscoveryAsync(DeleteIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIpamScopeResponse DeleteIpamScope(DeleteIpamScopeRequest request);
    public virtual Task`1<DeleteIpamScopeResponse> DeleteIpamScopeAsync(DeleteIpamScopeRequest request, CancellationToken cancellationToken);
    internal virtual DeleteKeyPairResponse DeleteKeyPair(DeleteKeyPairRequest request);
    public virtual Task`1<DeleteKeyPairResponse> DeleteKeyPairAsync(DeleteKeyPairRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLaunchTemplateResponse DeleteLaunchTemplate(DeleteLaunchTemplateRequest request);
    public virtual Task`1<DeleteLaunchTemplateResponse> DeleteLaunchTemplateAsync(DeleteLaunchTemplateRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLaunchTemplateVersionsResponse DeleteLaunchTemplateVersions(DeleteLaunchTemplateVersionsRequest request);
    public virtual Task`1<DeleteLaunchTemplateVersionsResponse> DeleteLaunchTemplateVersionsAsync(DeleteLaunchTemplateVersionsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLocalGatewayRouteResponse DeleteLocalGatewayRoute(DeleteLocalGatewayRouteRequest request);
    public virtual Task`1<DeleteLocalGatewayRouteResponse> DeleteLocalGatewayRouteAsync(DeleteLocalGatewayRouteRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLocalGatewayRouteTableResponse DeleteLocalGatewayRouteTable(DeleteLocalGatewayRouteTableRequest request);
    public virtual Task`1<DeleteLocalGatewayRouteTableResponse> DeleteLocalGatewayRouteTableAsync(DeleteLocalGatewayRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation(DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest request);
    public virtual Task`1<DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse> DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationAsync(DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLocalGatewayRouteTableVpcAssociationResponse DeleteLocalGatewayRouteTableVpcAssociation(DeleteLocalGatewayRouteTableVpcAssociationRequest request);
    public virtual Task`1<DeleteLocalGatewayRouteTableVpcAssociationResponse> DeleteLocalGatewayRouteTableVpcAssociationAsync(DeleteLocalGatewayRouteTableVpcAssociationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteManagedPrefixListResponse DeleteManagedPrefixList(DeleteManagedPrefixListRequest request);
    public virtual Task`1<DeleteManagedPrefixListResponse> DeleteManagedPrefixListAsync(DeleteManagedPrefixListRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNatGatewayResponse DeleteNatGateway(DeleteNatGatewayRequest request);
    public virtual Task`1<DeleteNatGatewayResponse> DeleteNatGatewayAsync(DeleteNatGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkAclResponse DeleteNetworkAcl(DeleteNetworkAclRequest request);
    public virtual Task`1<DeleteNetworkAclResponse> DeleteNetworkAclAsync(DeleteNetworkAclRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request);
    public virtual Task`1<DeleteNetworkAclEntryResponse> DeleteNetworkAclEntryAsync(DeleteNetworkAclEntryRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkInsightsAccessScopeResponse DeleteNetworkInsightsAccessScope(DeleteNetworkInsightsAccessScopeRequest request);
    public virtual Task`1<DeleteNetworkInsightsAccessScopeResponse> DeleteNetworkInsightsAccessScopeAsync(DeleteNetworkInsightsAccessScopeRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkInsightsAccessScopeAnalysisResponse DeleteNetworkInsightsAccessScopeAnalysis(DeleteNetworkInsightsAccessScopeAnalysisRequest request);
    public virtual Task`1<DeleteNetworkInsightsAccessScopeAnalysisResponse> DeleteNetworkInsightsAccessScopeAnalysisAsync(DeleteNetworkInsightsAccessScopeAnalysisRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkInsightsAnalysisResponse DeleteNetworkInsightsAnalysis(DeleteNetworkInsightsAnalysisRequest request);
    public virtual Task`1<DeleteNetworkInsightsAnalysisResponse> DeleteNetworkInsightsAnalysisAsync(DeleteNetworkInsightsAnalysisRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkInsightsPathResponse DeleteNetworkInsightsPath(DeleteNetworkInsightsPathRequest request);
    public virtual Task`1<DeleteNetworkInsightsPathResponse> DeleteNetworkInsightsPathAsync(DeleteNetworkInsightsPathRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkInterfaceResponse DeleteNetworkInterface(DeleteNetworkInterfaceRequest request);
    public virtual Task`1<DeleteNetworkInterfaceResponse> DeleteNetworkInterfaceAsync(DeleteNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal virtual DeleteNetworkInterfacePermissionResponse DeleteNetworkInterfacePermission(DeleteNetworkInterfacePermissionRequest request);
    public virtual Task`1<DeleteNetworkInterfacePermissionResponse> DeleteNetworkInterfacePermissionAsync(DeleteNetworkInterfacePermissionRequest request, CancellationToken cancellationToken);
    internal virtual DeletePlacementGroupResponse DeletePlacementGroup(DeletePlacementGroupRequest request);
    public virtual Task`1<DeletePlacementGroupResponse> DeletePlacementGroupAsync(DeletePlacementGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeletePublicIpv4PoolResponse DeletePublicIpv4Pool(DeletePublicIpv4PoolRequest request);
    public virtual Task`1<DeletePublicIpv4PoolResponse> DeletePublicIpv4PoolAsync(DeletePublicIpv4PoolRequest request, CancellationToken cancellationToken);
    internal virtual DeleteQueuedReservedInstancesResponse DeleteQueuedReservedInstances(DeleteQueuedReservedInstancesRequest request);
    public virtual Task`1<DeleteQueuedReservedInstancesResponse> DeleteQueuedReservedInstancesAsync(DeleteQueuedReservedInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DeleteRouteResponse DeleteRoute(DeleteRouteRequest request);
    public virtual Task`1<DeleteRouteResponse> DeleteRouteAsync(DeleteRouteRequest request, CancellationToken cancellationToken);
    internal virtual DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request);
    public virtual Task`1<DeleteRouteTableResponse> DeleteRouteTableAsync(DeleteRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSecurityGroupResponse DeleteSecurityGroup(DeleteSecurityGroupRequest request);
    public virtual Task`1<DeleteSecurityGroupResponse> DeleteSecurityGroupAsync(DeleteSecurityGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSnapshotResponse DeleteSnapshot(DeleteSnapshotRequest request);
    public virtual Task`1<DeleteSnapshotResponse> DeleteSnapshotAsync(DeleteSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSpotDatafeedSubscriptionResponse DeleteSpotDatafeedSubscription();
    internal virtual DeleteSpotDatafeedSubscriptionResponse DeleteSpotDatafeedSubscription(DeleteSpotDatafeedSubscriptionRequest request);
    public virtual Task`1<DeleteSpotDatafeedSubscriptionResponse> DeleteSpotDatafeedSubscriptionAsync(CancellationToken cancellationToken);
    public virtual Task`1<DeleteSpotDatafeedSubscriptionResponse> DeleteSpotDatafeedSubscriptionAsync(DeleteSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSubnetResponse DeleteSubnet(DeleteSubnetRequest request);
    public virtual Task`1<DeleteSubnetResponse> DeleteSubnetAsync(DeleteSubnetRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSubnetCidrReservationResponse DeleteSubnetCidrReservation(DeleteSubnetCidrReservationRequest request);
    public virtual Task`1<DeleteSubnetCidrReservationResponse> DeleteSubnetCidrReservationAsync(DeleteSubnetCidrReservationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTagsResponse DeleteTags(DeleteTagsRequest request);
    public virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTrafficMirrorFilterResponse DeleteTrafficMirrorFilter(DeleteTrafficMirrorFilterRequest request);
    public virtual Task`1<DeleteTrafficMirrorFilterResponse> DeleteTrafficMirrorFilterAsync(DeleteTrafficMirrorFilterRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTrafficMirrorFilterRuleResponse DeleteTrafficMirrorFilterRule(DeleteTrafficMirrorFilterRuleRequest request);
    public virtual Task`1<DeleteTrafficMirrorFilterRuleResponse> DeleteTrafficMirrorFilterRuleAsync(DeleteTrafficMirrorFilterRuleRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTrafficMirrorSessionResponse DeleteTrafficMirrorSession(DeleteTrafficMirrorSessionRequest request);
    public virtual Task`1<DeleteTrafficMirrorSessionResponse> DeleteTrafficMirrorSessionAsync(DeleteTrafficMirrorSessionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTrafficMirrorTargetResponse DeleteTrafficMirrorTarget(DeleteTrafficMirrorTargetRequest request);
    public virtual Task`1<DeleteTrafficMirrorTargetResponse> DeleteTrafficMirrorTargetAsync(DeleteTrafficMirrorTargetRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request);
    public virtual Task`1<DeleteTransitGatewayResponse> DeleteTransitGatewayAsync(DeleteTransitGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayConnectResponse DeleteTransitGatewayConnect(DeleteTransitGatewayConnectRequest request);
    public virtual Task`1<DeleteTransitGatewayConnectResponse> DeleteTransitGatewayConnectAsync(DeleteTransitGatewayConnectRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayConnectPeerResponse DeleteTransitGatewayConnectPeer(DeleteTransitGatewayConnectPeerRequest request);
    public virtual Task`1<DeleteTransitGatewayConnectPeerResponse> DeleteTransitGatewayConnectPeerAsync(DeleteTransitGatewayConnectPeerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayMulticastDomainResponse DeleteTransitGatewayMulticastDomain(DeleteTransitGatewayMulticastDomainRequest request);
    public virtual Task`1<DeleteTransitGatewayMulticastDomainResponse> DeleteTransitGatewayMulticastDomainAsync(DeleteTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayPeeringAttachmentResponse DeleteTransitGatewayPeeringAttachment(DeleteTransitGatewayPeeringAttachmentRequest request);
    public virtual Task`1<DeleteTransitGatewayPeeringAttachmentResponse> DeleteTransitGatewayPeeringAttachmentAsync(DeleteTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayPolicyTableResponse DeleteTransitGatewayPolicyTable(DeleteTransitGatewayPolicyTableRequest request);
    public virtual Task`1<DeleteTransitGatewayPolicyTableResponse> DeleteTransitGatewayPolicyTableAsync(DeleteTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayPrefixListReferenceResponse DeleteTransitGatewayPrefixListReference(DeleteTransitGatewayPrefixListReferenceRequest request);
    public virtual Task`1<DeleteTransitGatewayPrefixListReferenceResponse> DeleteTransitGatewayPrefixListReferenceAsync(DeleteTransitGatewayPrefixListReferenceRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayRouteResponse DeleteTransitGatewayRoute(DeleteTransitGatewayRouteRequest request);
    public virtual Task`1<DeleteTransitGatewayRouteResponse> DeleteTransitGatewayRouteAsync(DeleteTransitGatewayRouteRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayRouteTableResponse DeleteTransitGatewayRouteTable(DeleteTransitGatewayRouteTableRequest request);
    public virtual Task`1<DeleteTransitGatewayRouteTableResponse> DeleteTransitGatewayRouteTableAsync(DeleteTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayRouteTableAnnouncementResponse DeleteTransitGatewayRouteTableAnnouncement(DeleteTransitGatewayRouteTableAnnouncementRequest request);
    public virtual Task`1<DeleteTransitGatewayRouteTableAnnouncementResponse> DeleteTransitGatewayRouteTableAnnouncementAsync(DeleteTransitGatewayRouteTableAnnouncementRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTransitGatewayVpcAttachmentResponse DeleteTransitGatewayVpcAttachment(DeleteTransitGatewayVpcAttachmentRequest request);
    public virtual Task`1<DeleteTransitGatewayVpcAttachmentResponse> DeleteTransitGatewayVpcAttachmentAsync(DeleteTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVerifiedAccessEndpointResponse DeleteVerifiedAccessEndpoint(DeleteVerifiedAccessEndpointRequest request);
    public virtual Task`1<DeleteVerifiedAccessEndpointResponse> DeleteVerifiedAccessEndpointAsync(DeleteVerifiedAccessEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVerifiedAccessGroupResponse DeleteVerifiedAccessGroup(DeleteVerifiedAccessGroupRequest request);
    public virtual Task`1<DeleteVerifiedAccessGroupResponse> DeleteVerifiedAccessGroupAsync(DeleteVerifiedAccessGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVerifiedAccessInstanceResponse DeleteVerifiedAccessInstance(DeleteVerifiedAccessInstanceRequest request);
    public virtual Task`1<DeleteVerifiedAccessInstanceResponse> DeleteVerifiedAccessInstanceAsync(DeleteVerifiedAccessInstanceRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVerifiedAccessTrustProviderResponse DeleteVerifiedAccessTrustProvider(DeleteVerifiedAccessTrustProviderRequest request);
    public virtual Task`1<DeleteVerifiedAccessTrustProviderResponse> DeleteVerifiedAccessTrustProviderAsync(DeleteVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVolumeResponse DeleteVolume(DeleteVolumeRequest request);
    public virtual Task`1<DeleteVolumeResponse> DeleteVolumeAsync(DeleteVolumeRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpcResponse DeleteVpc(DeleteVpcRequest request);
    public virtual Task`1<DeleteVpcResponse> DeleteVpcAsync(DeleteVpcRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpcEndpointConnectionNotificationsResponse DeleteVpcEndpointConnectionNotifications(DeleteVpcEndpointConnectionNotificationsRequest request);
    public virtual Task`1<DeleteVpcEndpointConnectionNotificationsResponse> DeleteVpcEndpointConnectionNotificationsAsync(DeleteVpcEndpointConnectionNotificationsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpcEndpointsResponse DeleteVpcEndpoints(DeleteVpcEndpointsRequest request);
    public virtual Task`1<DeleteVpcEndpointsResponse> DeleteVpcEndpointsAsync(DeleteVpcEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpcEndpointServiceConfigurationsResponse DeleteVpcEndpointServiceConfigurations(DeleteVpcEndpointServiceConfigurationsRequest request);
    public virtual Task`1<DeleteVpcEndpointServiceConfigurationsResponse> DeleteVpcEndpointServiceConfigurationsAsync(DeleteVpcEndpointServiceConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpcPeeringConnectionResponse DeleteVpcPeeringConnection(DeleteVpcPeeringConnectionRequest request);
    public virtual Task`1<DeleteVpcPeeringConnectionResponse> DeleteVpcPeeringConnectionAsync(DeleteVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpnConnectionResponse DeleteVpnConnection(DeleteVpnConnectionRequest request);
    public virtual Task`1<DeleteVpnConnectionResponse> DeleteVpnConnectionAsync(DeleteVpnConnectionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpnConnectionRouteResponse DeleteVpnConnectionRoute(DeleteVpnConnectionRouteRequest request);
    public virtual Task`1<DeleteVpnConnectionRouteResponse> DeleteVpnConnectionRouteAsync(DeleteVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpnGatewayResponse DeleteVpnGateway(DeleteVpnGatewayRequest request);
    public virtual Task`1<DeleteVpnGatewayResponse> DeleteVpnGatewayAsync(DeleteVpnGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeprovisionByoipCidrResponse DeprovisionByoipCidr(DeprovisionByoipCidrRequest request);
    public virtual Task`1<DeprovisionByoipCidrResponse> DeprovisionByoipCidrAsync(DeprovisionByoipCidrRequest request, CancellationToken cancellationToken);
    internal virtual DeprovisionIpamByoasnResponse DeprovisionIpamByoasn(DeprovisionIpamByoasnRequest request);
    public virtual Task`1<DeprovisionIpamByoasnResponse> DeprovisionIpamByoasnAsync(DeprovisionIpamByoasnRequest request, CancellationToken cancellationToken);
    internal virtual DeprovisionIpamPoolCidrResponse DeprovisionIpamPoolCidr(DeprovisionIpamPoolCidrRequest request);
    public virtual Task`1<DeprovisionIpamPoolCidrResponse> DeprovisionIpamPoolCidrAsync(DeprovisionIpamPoolCidrRequest request, CancellationToken cancellationToken);
    internal virtual DeprovisionPublicIpv4PoolCidrResponse DeprovisionPublicIpv4PoolCidr(DeprovisionPublicIpv4PoolCidrRequest request);
    public virtual Task`1<DeprovisionPublicIpv4PoolCidrResponse> DeprovisionPublicIpv4PoolCidrAsync(DeprovisionPublicIpv4PoolCidrRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterImageResponse DeregisterImage(DeregisterImageRequest request);
    public virtual Task`1<DeregisterImageResponse> DeregisterImageAsync(DeregisterImageRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterInstanceEventNotificationAttributesResponse DeregisterInstanceEventNotificationAttributes(DeregisterInstanceEventNotificationAttributesRequest request);
    public virtual Task`1<DeregisterInstanceEventNotificationAttributesResponse> DeregisterInstanceEventNotificationAttributesAsync(DeregisterInstanceEventNotificationAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request);
    public virtual Task`1<DeregisterTransitGatewayMulticastGroupMembersResponse> DeregisterTransitGatewayMulticastGroupMembersAsync(DeregisterTransitGatewayMulticastGroupMembersRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterTransitGatewayMulticastGroupSourcesResponse DeregisterTransitGatewayMulticastGroupSources(DeregisterTransitGatewayMulticastGroupSourcesRequest request);
    public virtual Task`1<DeregisterTransitGatewayMulticastGroupSourcesResponse> DeregisterTransitGatewayMulticastGroupSourcesAsync(DeregisterTransitGatewayMulticastGroupSourcesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAccountAttributesResponse DescribeAccountAttributes();
    internal virtual DescribeAccountAttributesResponse DescribeAccountAttributes(DescribeAccountAttributesRequest request);
    public virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAddressesResponse DescribeAddresses();
    internal virtual DescribeAddressesResponse DescribeAddresses(DescribeAddressesRequest request);
    public virtual Task`1<DescribeAddressesResponse> DescribeAddressesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeAddressesResponse> DescribeAddressesAsync(DescribeAddressesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAddressesAttributeResponse DescribeAddressesAttribute(DescribeAddressesAttributeRequest request);
    public virtual Task`1<DescribeAddressesAttributeResponse> DescribeAddressesAttributeAsync(DescribeAddressesAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAddressTransfersResponse DescribeAddressTransfers(DescribeAddressTransfersRequest request);
    public virtual Task`1<DescribeAddressTransfersResponse> DescribeAddressTransfersAsync(DescribeAddressTransfersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAggregateIdFormatResponse DescribeAggregateIdFormat(DescribeAggregateIdFormatRequest request);
    public virtual Task`1<DescribeAggregateIdFormatResponse> DescribeAggregateIdFormatAsync(DescribeAggregateIdFormatRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAvailabilityZonesResponse DescribeAvailabilityZones();
    internal virtual DescribeAvailabilityZonesResponse DescribeAvailabilityZones(DescribeAvailabilityZonesRequest request);
    public virtual Task`1<DescribeAvailabilityZonesResponse> DescribeAvailabilityZonesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeAvailabilityZonesResponse> DescribeAvailabilityZonesAsync(DescribeAvailabilityZonesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAwsNetworkPerformanceMetricSubscriptionsResponse DescribeAwsNetworkPerformanceMetricSubscriptions(DescribeAwsNetworkPerformanceMetricSubscriptionsRequest request);
    public virtual Task`1<DescribeAwsNetworkPerformanceMetricSubscriptionsResponse> DescribeAwsNetworkPerformanceMetricSubscriptionsAsync(DescribeAwsNetworkPerformanceMetricSubscriptionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBundleTasksResponse DescribeBundleTasks();
    internal virtual DescribeBundleTasksResponse DescribeBundleTasks(DescribeBundleTasksRequest request);
    public virtual Task`1<DescribeBundleTasksResponse> DescribeBundleTasksAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeBundleTasksResponse> DescribeBundleTasksAsync(DescribeBundleTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request);
    public virtual Task`1<DescribeByoipCidrsResponse> DescribeByoipCidrsAsync(DescribeByoipCidrsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCapacityBlockOfferingsResponse DescribeCapacityBlockOfferings(DescribeCapacityBlockOfferingsRequest request);
    public virtual Task`1<DescribeCapacityBlockOfferingsResponse> DescribeCapacityBlockOfferingsAsync(DescribeCapacityBlockOfferingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCapacityReservationFleetsResponse DescribeCapacityReservationFleets(DescribeCapacityReservationFleetsRequest request);
    public virtual Task`1<DescribeCapacityReservationFleetsResponse> DescribeCapacityReservationFleetsAsync(DescribeCapacityReservationFleetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request);
    public virtual Task`1<DescribeCapacityReservationsResponse> DescribeCapacityReservationsAsync(DescribeCapacityReservationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCarrierGatewaysResponse DescribeCarrierGateways(DescribeCarrierGatewaysRequest request);
    public virtual Task`1<DescribeCarrierGatewaysResponse> DescribeCarrierGatewaysAsync(DescribeCarrierGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClassicLinkInstancesResponse DescribeClassicLinkInstances(DescribeClassicLinkInstancesRequest request);
    public virtual Task`1<DescribeClassicLinkInstancesResponse> DescribeClassicLinkInstancesAsync(DescribeClassicLinkInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClientVpnAuthorizationRulesResponse DescribeClientVpnAuthorizationRules(DescribeClientVpnAuthorizationRulesRequest request);
    public virtual Task`1<DescribeClientVpnAuthorizationRulesResponse> DescribeClientVpnAuthorizationRulesAsync(DescribeClientVpnAuthorizationRulesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request);
    public virtual Task`1<DescribeClientVpnConnectionsResponse> DescribeClientVpnConnectionsAsync(DescribeClientVpnConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClientVpnEndpointsResponse DescribeClientVpnEndpoints(DescribeClientVpnEndpointsRequest request);
    public virtual Task`1<DescribeClientVpnEndpointsResponse> DescribeClientVpnEndpointsAsync(DescribeClientVpnEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClientVpnRoutesResponse DescribeClientVpnRoutes(DescribeClientVpnRoutesRequest request);
    public virtual Task`1<DescribeClientVpnRoutesResponse> DescribeClientVpnRoutesAsync(DescribeClientVpnRoutesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClientVpnTargetNetworksResponse DescribeClientVpnTargetNetworks(DescribeClientVpnTargetNetworksRequest request);
    public virtual Task`1<DescribeClientVpnTargetNetworksResponse> DescribeClientVpnTargetNetworksAsync(DescribeClientVpnTargetNetworksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCoipPoolsResponse DescribeCoipPools(DescribeCoipPoolsRequest request);
    public virtual Task`1<DescribeCoipPoolsResponse> DescribeCoipPoolsAsync(DescribeCoipPoolsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeConversionTasksResponse DescribeConversionTasks();
    internal virtual DescribeConversionTasksResponse DescribeConversionTasks(DescribeConversionTasksRequest request);
    public virtual Task`1<DescribeConversionTasksResponse> DescribeConversionTasksAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeConversionTasksResponse> DescribeConversionTasksAsync(DescribeConversionTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCustomerGatewaysResponse DescribeCustomerGateways();
    internal virtual DescribeCustomerGatewaysResponse DescribeCustomerGateways(DescribeCustomerGatewaysRequest request);
    public virtual Task`1<DescribeCustomerGatewaysResponse> DescribeCustomerGatewaysAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeCustomerGatewaysResponse> DescribeCustomerGatewaysAsync(DescribeCustomerGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDhcpOptionsResponse DescribeDhcpOptions();
    internal virtual DescribeDhcpOptionsResponse DescribeDhcpOptions(DescribeDhcpOptionsRequest request);
    public virtual Task`1<DescribeDhcpOptionsResponse> DescribeDhcpOptionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeDhcpOptionsResponse> DescribeDhcpOptionsAsync(DescribeDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEgressOnlyInternetGatewaysResponse DescribeEgressOnlyInternetGateways(DescribeEgressOnlyInternetGatewaysRequest request);
    public virtual Task`1<DescribeEgressOnlyInternetGatewaysResponse> DescribeEgressOnlyInternetGatewaysAsync(DescribeEgressOnlyInternetGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DescribeElasticGpusResponse DescribeElasticGpus(DescribeElasticGpusRequest request);
    public virtual Task`1<DescribeElasticGpusResponse> DescribeElasticGpusAsync(DescribeElasticGpusRequest request, CancellationToken cancellationToken);
    internal virtual DescribeExportImageTasksResponse DescribeExportImageTasks(DescribeExportImageTasksRequest request);
    public virtual Task`1<DescribeExportImageTasksResponse> DescribeExportImageTasksAsync(DescribeExportImageTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeExportTasksResponse DescribeExportTasks();
    internal virtual DescribeExportTasksResponse DescribeExportTasks(DescribeExportTasksRequest request);
    public virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFastLaunchImagesResponse DescribeFastLaunchImages(DescribeFastLaunchImagesRequest request);
    public virtual Task`1<DescribeFastLaunchImagesResponse> DescribeFastLaunchImagesAsync(DescribeFastLaunchImagesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFastSnapshotRestoresResponse DescribeFastSnapshotRestores(DescribeFastSnapshotRestoresRequest request);
    public virtual Task`1<DescribeFastSnapshotRestoresResponse> DescribeFastSnapshotRestoresAsync(DescribeFastSnapshotRestoresRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetHistoryResponse DescribeFleetHistory(DescribeFleetHistoryRequest request);
    public virtual Task`1<DescribeFleetHistoryResponse> DescribeFleetHistoryAsync(DescribeFleetHistoryRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetInstancesResponse DescribeFleetInstances(DescribeFleetInstancesRequest request);
    public virtual Task`1<DescribeFleetInstancesResponse> DescribeFleetInstancesAsync(DescribeFleetInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetsResponse DescribeFleets(DescribeFleetsRequest request);
    public virtual Task`1<DescribeFleetsResponse> DescribeFleetsAsync(DescribeFleetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFlowLogsResponse DescribeFlowLogs(DescribeFlowLogsRequest request);
    public virtual Task`1<DescribeFlowLogsResponse> DescribeFlowLogsAsync(DescribeFlowLogsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFpgaImageAttributeResponse DescribeFpgaImageAttribute(DescribeFpgaImageAttributeRequest request);
    public virtual Task`1<DescribeFpgaImageAttributeResponse> DescribeFpgaImageAttributeAsync(DescribeFpgaImageAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFpgaImagesResponse DescribeFpgaImages(DescribeFpgaImagesRequest request);
    public virtual Task`1<DescribeFpgaImagesResponse> DescribeFpgaImagesAsync(DescribeFpgaImagesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeHostReservationOfferingsResponse DescribeHostReservationOfferings(DescribeHostReservationOfferingsRequest request);
    public virtual Task`1<DescribeHostReservationOfferingsResponse> DescribeHostReservationOfferingsAsync(DescribeHostReservationOfferingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request);
    public virtual Task`1<DescribeHostReservationsResponse> DescribeHostReservationsAsync(DescribeHostReservationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeHostsResponse DescribeHosts(DescribeHostsRequest request);
    public virtual Task`1<DescribeHostsResponse> DescribeHostsAsync(DescribeHostsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIamInstanceProfileAssociationsResponse DescribeIamInstanceProfileAssociations(DescribeIamInstanceProfileAssociationsRequest request);
    public virtual Task`1<DescribeIamInstanceProfileAssociationsResponse> DescribeIamInstanceProfileAssociationsAsync(DescribeIamInstanceProfileAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIdentityIdFormatResponse DescribeIdentityIdFormat(DescribeIdentityIdFormatRequest request);
    public virtual Task`1<DescribeIdentityIdFormatResponse> DescribeIdentityIdFormatAsync(DescribeIdentityIdFormatRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIdFormatResponse DescribeIdFormat(DescribeIdFormatRequest request);
    public virtual Task`1<DescribeIdFormatResponse> DescribeIdFormatAsync(DescribeIdFormatRequest request, CancellationToken cancellationToken);
    internal virtual DescribeImageAttributeResponse DescribeImageAttribute(DescribeImageAttributeRequest request);
    public virtual Task`1<DescribeImageAttributeResponse> DescribeImageAttributeAsync(DescribeImageAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeImagesResponse DescribeImages();
    internal virtual DescribeImagesResponse DescribeImages(DescribeImagesRequest request);
    public virtual Task`1<DescribeImagesResponse> DescribeImagesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeImagesResponse> DescribeImagesAsync(DescribeImagesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request);
    public virtual Task`1<DescribeImportImageTasksResponse> DescribeImportImageTasksAsync(DescribeImportImageTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeImportSnapshotTasksResponse DescribeImportSnapshotTasks(DescribeImportSnapshotTasksRequest request);
    public virtual Task`1<DescribeImportSnapshotTasksResponse> DescribeImportSnapshotTasksAsync(DescribeImportSnapshotTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceAttributeResponse DescribeInstanceAttribute(DescribeInstanceAttributeRequest request);
    public virtual Task`1<DescribeInstanceAttributeResponse> DescribeInstanceAttributeAsync(DescribeInstanceAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceConnectEndpointsResponse DescribeInstanceConnectEndpoints(DescribeInstanceConnectEndpointsRequest request);
    public virtual Task`1<DescribeInstanceConnectEndpointsResponse> DescribeInstanceConnectEndpointsAsync(DescribeInstanceConnectEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceCreditSpecificationsResponse DescribeInstanceCreditSpecifications(DescribeInstanceCreditSpecificationsRequest request);
    public virtual Task`1<DescribeInstanceCreditSpecificationsResponse> DescribeInstanceCreditSpecificationsAsync(DescribeInstanceCreditSpecificationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceEventNotificationAttributesResponse DescribeInstanceEventNotificationAttributes(DescribeInstanceEventNotificationAttributesRequest request);
    public virtual Task`1<DescribeInstanceEventNotificationAttributesResponse> DescribeInstanceEventNotificationAttributesAsync(DescribeInstanceEventNotificationAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceEventWindowsResponse DescribeInstanceEventWindows(DescribeInstanceEventWindowsRequest request);
    public virtual Task`1<DescribeInstanceEventWindowsResponse> DescribeInstanceEventWindowsAsync(DescribeInstanceEventWindowsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstancesResponse DescribeInstances();
    internal virtual DescribeInstancesResponse DescribeInstances(DescribeInstancesRequest request);
    public virtual Task`1<DescribeInstancesResponse> DescribeInstancesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeInstancesResponse> DescribeInstancesAsync(DescribeInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceStatusResponse DescribeInstanceStatus();
    internal virtual DescribeInstanceStatusResponse DescribeInstanceStatus(DescribeInstanceStatusRequest request);
    public virtual Task`1<DescribeInstanceStatusResponse> DescribeInstanceStatusAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeInstanceStatusResponse> DescribeInstanceStatusAsync(DescribeInstanceStatusRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceTopologyResponse DescribeInstanceTopology(DescribeInstanceTopologyRequest request);
    public virtual Task`1<DescribeInstanceTopologyResponse> DescribeInstanceTopologyAsync(DescribeInstanceTopologyRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceTypeOfferingsResponse DescribeInstanceTypeOfferings(DescribeInstanceTypeOfferingsRequest request);
    public virtual Task`1<DescribeInstanceTypeOfferingsResponse> DescribeInstanceTypeOfferingsAsync(DescribeInstanceTypeOfferingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceTypesResponse DescribeInstanceTypes(DescribeInstanceTypesRequest request);
    public virtual Task`1<DescribeInstanceTypesResponse> DescribeInstanceTypesAsync(DescribeInstanceTypesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInternetGatewaysResponse DescribeInternetGateways();
    internal virtual DescribeInternetGatewaysResponse DescribeInternetGateways(DescribeInternetGatewaysRequest request);
    public virtual Task`1<DescribeInternetGatewaysResponse> DescribeInternetGatewaysAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeInternetGatewaysResponse> DescribeInternetGatewaysAsync(DescribeInternetGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpamByoasnResponse DescribeIpamByoasn(DescribeIpamByoasnRequest request);
    public virtual Task`1<DescribeIpamByoasnResponse> DescribeIpamByoasnAsync(DescribeIpamByoasnRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpamExternalResourceVerificationTokensResponse DescribeIpamExternalResourceVerificationTokens(DescribeIpamExternalResourceVerificationTokensRequest request);
    public virtual Task`1<DescribeIpamExternalResourceVerificationTokensResponse> DescribeIpamExternalResourceVerificationTokensAsync(DescribeIpamExternalResourceVerificationTokensRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpamPoolsResponse DescribeIpamPools(DescribeIpamPoolsRequest request);
    public virtual Task`1<DescribeIpamPoolsResponse> DescribeIpamPoolsAsync(DescribeIpamPoolsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpamResourceDiscoveriesResponse DescribeIpamResourceDiscoveries(DescribeIpamResourceDiscoveriesRequest request);
    public virtual Task`1<DescribeIpamResourceDiscoveriesResponse> DescribeIpamResourceDiscoveriesAsync(DescribeIpamResourceDiscoveriesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpamResourceDiscoveryAssociationsResponse DescribeIpamResourceDiscoveryAssociations(DescribeIpamResourceDiscoveryAssociationsRequest request);
    public virtual Task`1<DescribeIpamResourceDiscoveryAssociationsResponse> DescribeIpamResourceDiscoveryAssociationsAsync(DescribeIpamResourceDiscoveryAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpamsResponse DescribeIpams(DescribeIpamsRequest request);
    public virtual Task`1<DescribeIpamsResponse> DescribeIpamsAsync(DescribeIpamsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpamScopesResponse DescribeIpamScopes(DescribeIpamScopesRequest request);
    public virtual Task`1<DescribeIpamScopesResponse> DescribeIpamScopesAsync(DescribeIpamScopesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIpv6PoolsResponse DescribeIpv6Pools(DescribeIpv6PoolsRequest request);
    public virtual Task`1<DescribeIpv6PoolsResponse> DescribeIpv6PoolsAsync(DescribeIpv6PoolsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeKeyPairsResponse DescribeKeyPairs();
    internal virtual DescribeKeyPairsResponse DescribeKeyPairs(DescribeKeyPairsRequest request);
    public virtual Task`1<DescribeKeyPairsResponse> DescribeKeyPairsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeKeyPairsResponse> DescribeKeyPairsAsync(DescribeKeyPairsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLaunchTemplatesResponse DescribeLaunchTemplates(DescribeLaunchTemplatesRequest request);
    public virtual Task`1<DescribeLaunchTemplatesResponse> DescribeLaunchTemplatesAsync(DescribeLaunchTemplatesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLaunchTemplateVersionsResponse DescribeLaunchTemplateVersions(DescribeLaunchTemplateVersionsRequest request);
    public virtual Task`1<DescribeLaunchTemplateVersionsResponse> DescribeLaunchTemplateVersionsAsync(DescribeLaunchTemplateVersionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLocalGatewayRouteTablesResponse DescribeLocalGatewayRouteTables(DescribeLocalGatewayRouteTablesRequest request);
    public virtual Task`1<DescribeLocalGatewayRouteTablesResponse> DescribeLocalGatewayRouteTablesAsync(DescribeLocalGatewayRouteTablesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request);
    public virtual Task`1<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse> DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsync(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLocalGatewayRouteTableVpcAssociationsResponse DescribeLocalGatewayRouteTableVpcAssociations(DescribeLocalGatewayRouteTableVpcAssociationsRequest request);
    public virtual Task`1<DescribeLocalGatewayRouteTableVpcAssociationsResponse> DescribeLocalGatewayRouteTableVpcAssociationsAsync(DescribeLocalGatewayRouteTableVpcAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLocalGatewaysResponse DescribeLocalGateways(DescribeLocalGatewaysRequest request);
    public virtual Task`1<DescribeLocalGatewaysResponse> DescribeLocalGatewaysAsync(DescribeLocalGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLocalGatewayVirtualInterfaceGroupsResponse DescribeLocalGatewayVirtualInterfaceGroups(DescribeLocalGatewayVirtualInterfaceGroupsRequest request);
    public virtual Task`1<DescribeLocalGatewayVirtualInterfaceGroupsResponse> DescribeLocalGatewayVirtualInterfaceGroupsAsync(DescribeLocalGatewayVirtualInterfaceGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request);
    public virtual Task`1<DescribeLocalGatewayVirtualInterfacesResponse> DescribeLocalGatewayVirtualInterfacesAsync(DescribeLocalGatewayVirtualInterfacesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLockedSnapshotsResponse DescribeLockedSnapshots(DescribeLockedSnapshotsRequest request);
    public virtual Task`1<DescribeLockedSnapshotsResponse> DescribeLockedSnapshotsAsync(DescribeLockedSnapshotsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMacHostsResponse DescribeMacHosts(DescribeMacHostsRequest request);
    public virtual Task`1<DescribeMacHostsResponse> DescribeMacHostsAsync(DescribeMacHostsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeManagedPrefixListsResponse DescribeManagedPrefixLists(DescribeManagedPrefixListsRequest request);
    public virtual Task`1<DescribeManagedPrefixListsResponse> DescribeManagedPrefixListsAsync(DescribeManagedPrefixListsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMovingAddressesResponse DescribeMovingAddresses(DescribeMovingAddressesRequest request);
    public virtual Task`1<DescribeMovingAddressesResponse> DescribeMovingAddressesAsync(DescribeMovingAddressesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNatGatewaysResponse DescribeNatGateways(DescribeNatGatewaysRequest request);
    public virtual Task`1<DescribeNatGatewaysResponse> DescribeNatGatewaysAsync(DescribeNatGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkAclsResponse DescribeNetworkAcls();
    internal virtual DescribeNetworkAclsResponse DescribeNetworkAcls(DescribeNetworkAclsRequest request);
    public virtual Task`1<DescribeNetworkAclsResponse> DescribeNetworkAclsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeNetworkAclsResponse> DescribeNetworkAclsAsync(DescribeNetworkAclsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkInsightsAccessScopeAnalysesResponse DescribeNetworkInsightsAccessScopeAnalyses(DescribeNetworkInsightsAccessScopeAnalysesRequest request);
    public virtual Task`1<DescribeNetworkInsightsAccessScopeAnalysesResponse> DescribeNetworkInsightsAccessScopeAnalysesAsync(DescribeNetworkInsightsAccessScopeAnalysesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkInsightsAccessScopesResponse DescribeNetworkInsightsAccessScopes(DescribeNetworkInsightsAccessScopesRequest request);
    public virtual Task`1<DescribeNetworkInsightsAccessScopesResponse> DescribeNetworkInsightsAccessScopesAsync(DescribeNetworkInsightsAccessScopesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkInsightsAnalysesResponse DescribeNetworkInsightsAnalyses(DescribeNetworkInsightsAnalysesRequest request);
    public virtual Task`1<DescribeNetworkInsightsAnalysesResponse> DescribeNetworkInsightsAnalysesAsync(DescribeNetworkInsightsAnalysesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkInsightsPathsResponse DescribeNetworkInsightsPaths(DescribeNetworkInsightsPathsRequest request);
    public virtual Task`1<DescribeNetworkInsightsPathsResponse> DescribeNetworkInsightsPathsAsync(DescribeNetworkInsightsPathsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkInterfaceAttributeResponse DescribeNetworkInterfaceAttribute(DescribeNetworkInterfaceAttributeRequest request);
    public virtual Task`1<DescribeNetworkInterfaceAttributeResponse> DescribeNetworkInterfaceAttributeAsync(DescribeNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkInterfacePermissionsResponse DescribeNetworkInterfacePermissions(DescribeNetworkInterfacePermissionsRequest request);
    public virtual Task`1<DescribeNetworkInterfacePermissionsResponse> DescribeNetworkInterfacePermissionsAsync(DescribeNetworkInterfacePermissionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces();
    internal virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request);
    public virtual Task`1<DescribeNetworkInterfacesResponse> DescribeNetworkInterfacesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeNetworkInterfacesResponse> DescribeNetworkInterfacesAsync(DescribeNetworkInterfacesRequest request, CancellationToken cancellationToken);
    internal virtual DescribePlacementGroupsResponse DescribePlacementGroups();
    internal virtual DescribePlacementGroupsResponse DescribePlacementGroups(DescribePlacementGroupsRequest request);
    public virtual Task`1<DescribePlacementGroupsResponse> DescribePlacementGroupsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribePlacementGroupsResponse> DescribePlacementGroupsAsync(DescribePlacementGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribePrefixListsResponse DescribePrefixLists(DescribePrefixListsRequest request);
    public virtual Task`1<DescribePrefixListsResponse> DescribePrefixListsAsync(DescribePrefixListsRequest request, CancellationToken cancellationToken);
    internal virtual DescribePrincipalIdFormatResponse DescribePrincipalIdFormat(DescribePrincipalIdFormatRequest request);
    public virtual Task`1<DescribePrincipalIdFormatResponse> DescribePrincipalIdFormatAsync(DescribePrincipalIdFormatRequest request, CancellationToken cancellationToken);
    internal virtual DescribePublicIpv4PoolsResponse DescribePublicIpv4Pools(DescribePublicIpv4PoolsRequest request);
    public virtual Task`1<DescribePublicIpv4PoolsResponse> DescribePublicIpv4PoolsAsync(DescribePublicIpv4PoolsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRegionsResponse DescribeRegions();
    internal virtual DescribeRegionsResponse DescribeRegions(DescribeRegionsRequest request);
    public virtual Task`1<DescribeRegionsResponse> DescribeRegionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeRegionsResponse> DescribeRegionsAsync(DescribeRegionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplaceRootVolumeTasksResponse DescribeReplaceRootVolumeTasks(DescribeReplaceRootVolumeTasksRequest request);
    public virtual Task`1<DescribeReplaceRootVolumeTasksResponse> DescribeReplaceRootVolumeTasksAsync(DescribeReplaceRootVolumeTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReservedInstancesResponse DescribeReservedInstances();
    internal virtual DescribeReservedInstancesResponse DescribeReservedInstances(DescribeReservedInstancesRequest request);
    public virtual Task`1<DescribeReservedInstancesResponse> DescribeReservedInstancesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeReservedInstancesResponse> DescribeReservedInstancesAsync(DescribeReservedInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReservedInstancesListingsResponse DescribeReservedInstancesListings();
    internal virtual DescribeReservedInstancesListingsResponse DescribeReservedInstancesListings(DescribeReservedInstancesListingsRequest request);
    public virtual Task`1<DescribeReservedInstancesListingsResponse> DescribeReservedInstancesListingsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeReservedInstancesListingsResponse> DescribeReservedInstancesListingsAsync(DescribeReservedInstancesListingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReservedInstancesModificationsResponse DescribeReservedInstancesModifications();
    internal virtual DescribeReservedInstancesModificationsResponse DescribeReservedInstancesModifications(DescribeReservedInstancesModificationsRequest request);
    public virtual Task`1<DescribeReservedInstancesModificationsResponse> DescribeReservedInstancesModificationsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeReservedInstancesModificationsResponse> DescribeReservedInstancesModificationsAsync(DescribeReservedInstancesModificationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReservedInstancesOfferingsResponse DescribeReservedInstancesOfferings();
    internal virtual DescribeReservedInstancesOfferingsResponse DescribeReservedInstancesOfferings(DescribeReservedInstancesOfferingsRequest request);
    public virtual Task`1<DescribeReservedInstancesOfferingsResponse> DescribeReservedInstancesOfferingsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeReservedInstancesOfferingsResponse> DescribeReservedInstancesOfferingsAsync(DescribeReservedInstancesOfferingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRouteTablesResponse DescribeRouteTables();
    internal virtual DescribeRouteTablesResponse DescribeRouteTables(DescribeRouteTablesRequest request);
    public virtual Task`1<DescribeRouteTablesResponse> DescribeRouteTablesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeRouteTablesResponse> DescribeRouteTablesAsync(DescribeRouteTablesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeScheduledInstanceAvailabilityResponse DescribeScheduledInstanceAvailability(DescribeScheduledInstanceAvailabilityRequest request);
    public virtual Task`1<DescribeScheduledInstanceAvailabilityResponse> DescribeScheduledInstanceAvailabilityAsync(DescribeScheduledInstanceAvailabilityRequest request, CancellationToken cancellationToken);
    internal virtual DescribeScheduledInstancesResponse DescribeScheduledInstances(DescribeScheduledInstancesRequest request);
    public virtual Task`1<DescribeScheduledInstancesResponse> DescribeScheduledInstancesAsync(DescribeScheduledInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSecurityGroupReferencesResponse DescribeSecurityGroupReferences(DescribeSecurityGroupReferencesRequest request);
    public virtual Task`1<DescribeSecurityGroupReferencesResponse> DescribeSecurityGroupReferencesAsync(DescribeSecurityGroupReferencesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSecurityGroupRulesResponse DescribeSecurityGroupRules(DescribeSecurityGroupRulesRequest request);
    public virtual Task`1<DescribeSecurityGroupRulesResponse> DescribeSecurityGroupRulesAsync(DescribeSecurityGroupRulesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSecurityGroupsResponse DescribeSecurityGroups();
    internal virtual DescribeSecurityGroupsResponse DescribeSecurityGroups(DescribeSecurityGroupsRequest request);
    public virtual Task`1<DescribeSecurityGroupsResponse> DescribeSecurityGroupsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeSecurityGroupsResponse> DescribeSecurityGroupsAsync(DescribeSecurityGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSnapshotAttributeResponse DescribeSnapshotAttribute(DescribeSnapshotAttributeRequest request);
    public virtual Task`1<DescribeSnapshotAttributeResponse> DescribeSnapshotAttributeAsync(DescribeSnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSnapshotsResponse DescribeSnapshots();
    internal virtual DescribeSnapshotsResponse DescribeSnapshots(DescribeSnapshotsRequest request);
    public virtual Task`1<DescribeSnapshotsResponse> DescribeSnapshotsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeSnapshotsResponse> DescribeSnapshotsAsync(DescribeSnapshotsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSnapshotTierStatusResponse DescribeSnapshotTierStatus(DescribeSnapshotTierStatusRequest request);
    public virtual Task`1<DescribeSnapshotTierStatusResponse> DescribeSnapshotTierStatusAsync(DescribeSnapshotTierStatusRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSpotDatafeedSubscriptionResponse DescribeSpotDatafeedSubscription();
    internal virtual DescribeSpotDatafeedSubscriptionResponse DescribeSpotDatafeedSubscription(DescribeSpotDatafeedSubscriptionRequest request);
    public virtual Task`1<DescribeSpotDatafeedSubscriptionResponse> DescribeSpotDatafeedSubscriptionAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeSpotDatafeedSubscriptionResponse> DescribeSpotDatafeedSubscriptionAsync(DescribeSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSpotFleetInstancesResponse DescribeSpotFleetInstances(DescribeSpotFleetInstancesRequest request);
    public virtual Task`1<DescribeSpotFleetInstancesResponse> DescribeSpotFleetInstancesAsync(DescribeSpotFleetInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSpotFleetRequestHistoryResponse DescribeSpotFleetRequestHistory(DescribeSpotFleetRequestHistoryRequest request);
    public virtual Task`1<DescribeSpotFleetRequestHistoryResponse> DescribeSpotFleetRequestHistoryAsync(DescribeSpotFleetRequestHistoryRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request);
    public virtual Task`1<DescribeSpotFleetRequestsResponse> DescribeSpotFleetRequestsAsync(DescribeSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSpotInstanceRequestsResponse DescribeSpotInstanceRequests();
    internal virtual DescribeSpotInstanceRequestsResponse DescribeSpotInstanceRequests(DescribeSpotInstanceRequestsRequest request);
    public virtual Task`1<DescribeSpotInstanceRequestsResponse> DescribeSpotInstanceRequestsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeSpotInstanceRequestsResponse> DescribeSpotInstanceRequestsAsync(DescribeSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSpotPriceHistoryResponse DescribeSpotPriceHistory();
    internal virtual DescribeSpotPriceHistoryResponse DescribeSpotPriceHistory(DescribeSpotPriceHistoryRequest request);
    public virtual Task`1<DescribeSpotPriceHistoryResponse> DescribeSpotPriceHistoryAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeSpotPriceHistoryResponse> DescribeSpotPriceHistoryAsync(DescribeSpotPriceHistoryRequest request, CancellationToken cancellationToken);
    internal virtual DescribeStaleSecurityGroupsResponse DescribeStaleSecurityGroups(DescribeStaleSecurityGroupsRequest request);
    public virtual Task`1<DescribeStaleSecurityGroupsResponse> DescribeStaleSecurityGroupsAsync(DescribeStaleSecurityGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeStoreImageTasksResponse DescribeStoreImageTasks(DescribeStoreImageTasksRequest request);
    public virtual Task`1<DescribeStoreImageTasksResponse> DescribeStoreImageTasksAsync(DescribeStoreImageTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSubnetsResponse DescribeSubnets();
    internal virtual DescribeSubnetsResponse DescribeSubnets(DescribeSubnetsRequest request);
    public virtual Task`1<DescribeSubnetsResponse> DescribeSubnetsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeSubnetsResponse> DescribeSubnetsAsync(DescribeSubnetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTagsResponse DescribeTags();
    internal virtual DescribeTagsResponse DescribeTags(DescribeTagsRequest request);
    public virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrafficMirrorFilterRulesResponse DescribeTrafficMirrorFilterRules(DescribeTrafficMirrorFilterRulesRequest request);
    public virtual Task`1<DescribeTrafficMirrorFilterRulesResponse> DescribeTrafficMirrorFilterRulesAsync(DescribeTrafficMirrorFilterRulesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrafficMirrorFiltersResponse DescribeTrafficMirrorFilters(DescribeTrafficMirrorFiltersRequest request);
    public virtual Task`1<DescribeTrafficMirrorFiltersResponse> DescribeTrafficMirrorFiltersAsync(DescribeTrafficMirrorFiltersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrafficMirrorSessionsResponse DescribeTrafficMirrorSessions(DescribeTrafficMirrorSessionsRequest request);
    public virtual Task`1<DescribeTrafficMirrorSessionsResponse> DescribeTrafficMirrorSessionsAsync(DescribeTrafficMirrorSessionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrafficMirrorTargetsResponse DescribeTrafficMirrorTargets(DescribeTrafficMirrorTargetsRequest request);
    public virtual Task`1<DescribeTrafficMirrorTargetsResponse> DescribeTrafficMirrorTargetsAsync(DescribeTrafficMirrorTargetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayAttachmentsResponse DescribeTransitGatewayAttachments(DescribeTransitGatewayAttachmentsRequest request);
    public virtual Task`1<DescribeTransitGatewayAttachmentsResponse> DescribeTransitGatewayAttachmentsAsync(DescribeTransitGatewayAttachmentsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayConnectPeersResponse DescribeTransitGatewayConnectPeers(DescribeTransitGatewayConnectPeersRequest request);
    public virtual Task`1<DescribeTransitGatewayConnectPeersResponse> DescribeTransitGatewayConnectPeersAsync(DescribeTransitGatewayConnectPeersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayConnectsResponse DescribeTransitGatewayConnects(DescribeTransitGatewayConnectsRequest request);
    public virtual Task`1<DescribeTransitGatewayConnectsResponse> DescribeTransitGatewayConnectsAsync(DescribeTransitGatewayConnectsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayMulticastDomainsResponse DescribeTransitGatewayMulticastDomains(DescribeTransitGatewayMulticastDomainsRequest request);
    public virtual Task`1<DescribeTransitGatewayMulticastDomainsResponse> DescribeTransitGatewayMulticastDomainsAsync(DescribeTransitGatewayMulticastDomainsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayPeeringAttachmentsResponse DescribeTransitGatewayPeeringAttachments(DescribeTransitGatewayPeeringAttachmentsRequest request);
    public virtual Task`1<DescribeTransitGatewayPeeringAttachmentsResponse> DescribeTransitGatewayPeeringAttachmentsAsync(DescribeTransitGatewayPeeringAttachmentsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayPolicyTablesResponse DescribeTransitGatewayPolicyTables(DescribeTransitGatewayPolicyTablesRequest request);
    public virtual Task`1<DescribeTransitGatewayPolicyTablesResponse> DescribeTransitGatewayPolicyTablesAsync(DescribeTransitGatewayPolicyTablesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayRouteTableAnnouncementsResponse DescribeTransitGatewayRouteTableAnnouncements(DescribeTransitGatewayRouteTableAnnouncementsRequest request);
    public virtual Task`1<DescribeTransitGatewayRouteTableAnnouncementsResponse> DescribeTransitGatewayRouteTableAnnouncementsAsync(DescribeTransitGatewayRouteTableAnnouncementsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayRouteTablesResponse DescribeTransitGatewayRouteTables(DescribeTransitGatewayRouteTablesRequest request);
    public virtual Task`1<DescribeTransitGatewayRouteTablesResponse> DescribeTransitGatewayRouteTablesAsync(DescribeTransitGatewayRouteTablesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewaysResponse DescribeTransitGateways(DescribeTransitGatewaysRequest request);
    public virtual Task`1<DescribeTransitGatewaysResponse> DescribeTransitGatewaysAsync(DescribeTransitGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request);
    public virtual Task`1<DescribeTransitGatewayVpcAttachmentsResponse> DescribeTransitGatewayVpcAttachmentsAsync(DescribeTransitGatewayVpcAttachmentsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrunkInterfaceAssociationsResponse DescribeTrunkInterfaceAssociations(DescribeTrunkInterfaceAssociationsRequest request);
    public virtual Task`1<DescribeTrunkInterfaceAssociationsResponse> DescribeTrunkInterfaceAssociationsAsync(DescribeTrunkInterfaceAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVerifiedAccessEndpointsResponse DescribeVerifiedAccessEndpoints(DescribeVerifiedAccessEndpointsRequest request);
    public virtual Task`1<DescribeVerifiedAccessEndpointsResponse> DescribeVerifiedAccessEndpointsAsync(DescribeVerifiedAccessEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVerifiedAccessGroupsResponse DescribeVerifiedAccessGroups(DescribeVerifiedAccessGroupsRequest request);
    public virtual Task`1<DescribeVerifiedAccessGroupsResponse> DescribeVerifiedAccessGroupsAsync(DescribeVerifiedAccessGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVerifiedAccessInstanceLoggingConfigurationsResponse DescribeVerifiedAccessInstanceLoggingConfigurations(DescribeVerifiedAccessInstanceLoggingConfigurationsRequest request);
    public virtual Task`1<DescribeVerifiedAccessInstanceLoggingConfigurationsResponse> DescribeVerifiedAccessInstanceLoggingConfigurationsAsync(DescribeVerifiedAccessInstanceLoggingConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVerifiedAccessInstancesResponse DescribeVerifiedAccessInstances(DescribeVerifiedAccessInstancesRequest request);
    public virtual Task`1<DescribeVerifiedAccessInstancesResponse> DescribeVerifiedAccessInstancesAsync(DescribeVerifiedAccessInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVerifiedAccessTrustProvidersResponse DescribeVerifiedAccessTrustProviders(DescribeVerifiedAccessTrustProvidersRequest request);
    public virtual Task`1<DescribeVerifiedAccessTrustProvidersResponse> DescribeVerifiedAccessTrustProvidersAsync(DescribeVerifiedAccessTrustProvidersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVolumeAttributeResponse DescribeVolumeAttribute(DescribeVolumeAttributeRequest request);
    public virtual Task`1<DescribeVolumeAttributeResponse> DescribeVolumeAttributeAsync(DescribeVolumeAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVolumesResponse DescribeVolumes();
    internal virtual DescribeVolumesResponse DescribeVolumes(DescribeVolumesRequest request);
    public virtual Task`1<DescribeVolumesResponse> DescribeVolumesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeVolumesResponse> DescribeVolumesAsync(DescribeVolumesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVolumesModificationsResponse DescribeVolumesModifications(DescribeVolumesModificationsRequest request);
    public virtual Task`1<DescribeVolumesModificationsResponse> DescribeVolumesModificationsAsync(DescribeVolumesModificationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVolumeStatusResponse DescribeVolumeStatus();
    internal virtual DescribeVolumeStatusResponse DescribeVolumeStatus(DescribeVolumeStatusRequest request);
    public virtual Task`1<DescribeVolumeStatusResponse> DescribeVolumeStatusAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeVolumeStatusResponse> DescribeVolumeStatusAsync(DescribeVolumeStatusRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcAttributeResponse DescribeVpcAttribute(DescribeVpcAttributeRequest request);
    public virtual Task`1<DescribeVpcAttributeResponse> DescribeVpcAttributeAsync(DescribeVpcAttributeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcClassicLinkResponse DescribeVpcClassicLink(DescribeVpcClassicLinkRequest request);
    public virtual Task`1<DescribeVpcClassicLinkResponse> DescribeVpcClassicLinkAsync(DescribeVpcClassicLinkRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcClassicLinkDnsSupportResponse DescribeVpcClassicLinkDnsSupport(DescribeVpcClassicLinkDnsSupportRequest request);
    public virtual Task`1<DescribeVpcClassicLinkDnsSupportResponse> DescribeVpcClassicLinkDnsSupportAsync(DescribeVpcClassicLinkDnsSupportRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcEndpointConnectionNotificationsResponse DescribeVpcEndpointConnectionNotifications(DescribeVpcEndpointConnectionNotificationsRequest request);
    public virtual Task`1<DescribeVpcEndpointConnectionNotificationsResponse> DescribeVpcEndpointConnectionNotificationsAsync(DescribeVpcEndpointConnectionNotificationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcEndpointConnectionsResponse DescribeVpcEndpointConnections(DescribeVpcEndpointConnectionsRequest request);
    public virtual Task`1<DescribeVpcEndpointConnectionsResponse> DescribeVpcEndpointConnectionsAsync(DescribeVpcEndpointConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcEndpointsResponse DescribeVpcEndpoints(DescribeVpcEndpointsRequest request);
    public virtual Task`1<DescribeVpcEndpointsResponse> DescribeVpcEndpointsAsync(DescribeVpcEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcEndpointServiceConfigurationsResponse DescribeVpcEndpointServiceConfigurations(DescribeVpcEndpointServiceConfigurationsRequest request);
    public virtual Task`1<DescribeVpcEndpointServiceConfigurationsResponse> DescribeVpcEndpointServiceConfigurationsAsync(DescribeVpcEndpointServiceConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcEndpointServicePermissionsResponse DescribeVpcEndpointServicePermissions(DescribeVpcEndpointServicePermissionsRequest request);
    public virtual Task`1<DescribeVpcEndpointServicePermissionsResponse> DescribeVpcEndpointServicePermissionsAsync(DescribeVpcEndpointServicePermissionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request);
    public virtual Task`1<DescribeVpcEndpointServicesResponse> DescribeVpcEndpointServicesAsync(DescribeVpcEndpointServicesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections();
    internal virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(DescribeVpcPeeringConnectionsRequest request);
    public virtual Task`1<DescribeVpcPeeringConnectionsResponse> DescribeVpcPeeringConnectionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeVpcPeeringConnectionsResponse> DescribeVpcPeeringConnectionsAsync(DescribeVpcPeeringConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcsResponse DescribeVpcs();
    internal virtual DescribeVpcsResponse DescribeVpcs(DescribeVpcsRequest request);
    public virtual Task`1<DescribeVpcsResponse> DescribeVpcsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeVpcsResponse> DescribeVpcsAsync(DescribeVpcsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpnConnectionsResponse DescribeVpnConnections();
    internal virtual DescribeVpnConnectionsResponse DescribeVpnConnections(DescribeVpnConnectionsRequest request);
    public virtual Task`1<DescribeVpnConnectionsResponse> DescribeVpnConnectionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeVpnConnectionsResponse> DescribeVpnConnectionsAsync(DescribeVpnConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpnGatewaysResponse DescribeVpnGateways();
    internal virtual DescribeVpnGatewaysResponse DescribeVpnGateways(DescribeVpnGatewaysRequest request);
    public virtual Task`1<DescribeVpnGatewaysResponse> DescribeVpnGatewaysAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeVpnGatewaysResponse> DescribeVpnGatewaysAsync(DescribeVpnGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual DetachClassicLinkVpcResponse DetachClassicLinkVpc(DetachClassicLinkVpcRequest request);
    public virtual Task`1<DetachClassicLinkVpcResponse> DetachClassicLinkVpcAsync(DetachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    internal virtual DetachInternetGatewayResponse DetachInternetGateway(DetachInternetGatewayRequest request);
    public virtual Task`1<DetachInternetGatewayResponse> DetachInternetGatewayAsync(DetachInternetGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DetachNetworkInterfaceResponse DetachNetworkInterface(DetachNetworkInterfaceRequest request);
    public virtual Task`1<DetachNetworkInterfaceResponse> DetachNetworkInterfaceAsync(DetachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal virtual DetachVerifiedAccessTrustProviderResponse DetachVerifiedAccessTrustProvider(DetachVerifiedAccessTrustProviderRequest request);
    public virtual Task`1<DetachVerifiedAccessTrustProviderResponse> DetachVerifiedAccessTrustProviderAsync(DetachVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    internal virtual DetachVolumeResponse DetachVolume(DetachVolumeRequest request);
    public virtual Task`1<DetachVolumeResponse> DetachVolumeAsync(DetachVolumeRequest request, CancellationToken cancellationToken);
    internal virtual DetachVpnGatewayResponse DetachVpnGateway(DetachVpnGatewayRequest request);
    public virtual Task`1<DetachVpnGatewayResponse> DetachVpnGatewayAsync(DetachVpnGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DisableAddressTransferResponse DisableAddressTransfer(DisableAddressTransferRequest request);
    public virtual Task`1<DisableAddressTransferResponse> DisableAddressTransferAsync(DisableAddressTransferRequest request, CancellationToken cancellationToken);
    internal virtual DisableAwsNetworkPerformanceMetricSubscriptionResponse DisableAwsNetworkPerformanceMetricSubscription(DisableAwsNetworkPerformanceMetricSubscriptionRequest request);
    public virtual Task`1<DisableAwsNetworkPerformanceMetricSubscriptionResponse> DisableAwsNetworkPerformanceMetricSubscriptionAsync(DisableAwsNetworkPerformanceMetricSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual DisableEbsEncryptionByDefaultResponse DisableEbsEncryptionByDefault(DisableEbsEncryptionByDefaultRequest request);
    public virtual Task`1<DisableEbsEncryptionByDefaultResponse> DisableEbsEncryptionByDefaultAsync(DisableEbsEncryptionByDefaultRequest request, CancellationToken cancellationToken);
    internal virtual DisableFastLaunchResponse DisableFastLaunch(DisableFastLaunchRequest request);
    public virtual Task`1<DisableFastLaunchResponse> DisableFastLaunchAsync(DisableFastLaunchRequest request, CancellationToken cancellationToken);
    internal virtual DisableFastSnapshotRestoresResponse DisableFastSnapshotRestores(DisableFastSnapshotRestoresRequest request);
    public virtual Task`1<DisableFastSnapshotRestoresResponse> DisableFastSnapshotRestoresAsync(DisableFastSnapshotRestoresRequest request, CancellationToken cancellationToken);
    internal virtual DisableImageResponse DisableImage(DisableImageRequest request);
    public virtual Task`1<DisableImageResponse> DisableImageAsync(DisableImageRequest request, CancellationToken cancellationToken);
    internal virtual DisableImageBlockPublicAccessResponse DisableImageBlockPublicAccess(DisableImageBlockPublicAccessRequest request);
    public virtual Task`1<DisableImageBlockPublicAccessResponse> DisableImageBlockPublicAccessAsync(DisableImageBlockPublicAccessRequest request, CancellationToken cancellationToken);
    internal virtual DisableImageDeprecationResponse DisableImageDeprecation(DisableImageDeprecationRequest request);
    public virtual Task`1<DisableImageDeprecationResponse> DisableImageDeprecationAsync(DisableImageDeprecationRequest request, CancellationToken cancellationToken);
    internal virtual DisableImageDeregistrationProtectionResponse DisableImageDeregistrationProtection(DisableImageDeregistrationProtectionRequest request);
    public virtual Task`1<DisableImageDeregistrationProtectionResponse> DisableImageDeregistrationProtectionAsync(DisableImageDeregistrationProtectionRequest request, CancellationToken cancellationToken);
    internal virtual DisableIpamOrganizationAdminAccountResponse DisableIpamOrganizationAdminAccount(DisableIpamOrganizationAdminAccountRequest request);
    public virtual Task`1<DisableIpamOrganizationAdminAccountResponse> DisableIpamOrganizationAdminAccountAsync(DisableIpamOrganizationAdminAccountRequest request, CancellationToken cancellationToken);
    internal virtual DisableSerialConsoleAccessResponse DisableSerialConsoleAccess(DisableSerialConsoleAccessRequest request);
    public virtual Task`1<DisableSerialConsoleAccessResponse> DisableSerialConsoleAccessAsync(DisableSerialConsoleAccessRequest request, CancellationToken cancellationToken);
    internal virtual DisableSnapshotBlockPublicAccessResponse DisableSnapshotBlockPublicAccess(DisableSnapshotBlockPublicAccessRequest request);
    public virtual Task`1<DisableSnapshotBlockPublicAccessResponse> DisableSnapshotBlockPublicAccessAsync(DisableSnapshotBlockPublicAccessRequest request, CancellationToken cancellationToken);
    internal virtual DisableTransitGatewayRouteTablePropagationResponse DisableTransitGatewayRouteTablePropagation(DisableTransitGatewayRouteTablePropagationRequest request);
    public virtual Task`1<DisableTransitGatewayRouteTablePropagationResponse> DisableTransitGatewayRouteTablePropagationAsync(DisableTransitGatewayRouteTablePropagationRequest request, CancellationToken cancellationToken);
    internal virtual DisableVgwRoutePropagationResponse DisableVgwRoutePropagation(DisableVgwRoutePropagationRequest request);
    public virtual Task`1<DisableVgwRoutePropagationResponse> DisableVgwRoutePropagationAsync(DisableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    internal virtual DisableVpcClassicLinkResponse DisableVpcClassicLink(DisableVpcClassicLinkRequest request);
    public virtual Task`1<DisableVpcClassicLinkResponse> DisableVpcClassicLinkAsync(DisableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    internal virtual DisableVpcClassicLinkDnsSupportResponse DisableVpcClassicLinkDnsSupport(DisableVpcClassicLinkDnsSupportRequest request);
    public virtual Task`1<DisableVpcClassicLinkDnsSupportResponse> DisableVpcClassicLinkDnsSupportAsync(DisableVpcClassicLinkDnsSupportRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateAddressResponse DisassociateAddress(DisassociateAddressRequest request);
    public virtual Task`1<DisassociateAddressResponse> DisassociateAddressAsync(DisassociateAddressRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateClientVpnTargetNetworkResponse DisassociateClientVpnTargetNetwork(DisassociateClientVpnTargetNetworkRequest request);
    public virtual Task`1<DisassociateClientVpnTargetNetworkResponse> DisassociateClientVpnTargetNetworkAsync(DisassociateClientVpnTargetNetworkRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateEnclaveCertificateIamRoleResponse DisassociateEnclaveCertificateIamRole(DisassociateEnclaveCertificateIamRoleRequest request);
    public virtual Task`1<DisassociateEnclaveCertificateIamRoleResponse> DisassociateEnclaveCertificateIamRoleAsync(DisassociateEnclaveCertificateIamRoleRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateIamInstanceProfileResponse DisassociateIamInstanceProfile(DisassociateIamInstanceProfileRequest request);
    public virtual Task`1<DisassociateIamInstanceProfileResponse> DisassociateIamInstanceProfileAsync(DisassociateIamInstanceProfileRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateInstanceEventWindowResponse DisassociateInstanceEventWindow(DisassociateInstanceEventWindowRequest request);
    public virtual Task`1<DisassociateInstanceEventWindowResponse> DisassociateInstanceEventWindowAsync(DisassociateInstanceEventWindowRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateIpamByoasnResponse DisassociateIpamByoasn(DisassociateIpamByoasnRequest request);
    public virtual Task`1<DisassociateIpamByoasnResponse> DisassociateIpamByoasnAsync(DisassociateIpamByoasnRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateIpamResourceDiscoveryResponse DisassociateIpamResourceDiscovery(DisassociateIpamResourceDiscoveryRequest request);
    public virtual Task`1<DisassociateIpamResourceDiscoveryResponse> DisassociateIpamResourceDiscoveryAsync(DisassociateIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateNatGatewayAddressResponse DisassociateNatGatewayAddress(DisassociateNatGatewayAddressRequest request);
    public virtual Task`1<DisassociateNatGatewayAddressResponse> DisassociateNatGatewayAddressAsync(DisassociateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateRouteTableResponse DisassociateRouteTable(DisassociateRouteTableRequest request);
    public virtual Task`1<DisassociateRouteTableResponse> DisassociateRouteTableAsync(DisassociateRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateSubnetCidrBlockResponse DisassociateSubnetCidrBlock(DisassociateSubnetCidrBlockRequest request);
    public virtual Task`1<DisassociateSubnetCidrBlockResponse> DisassociateSubnetCidrBlockAsync(DisassociateSubnetCidrBlockRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateTransitGatewayMulticastDomainResponse DisassociateTransitGatewayMulticastDomain(DisassociateTransitGatewayMulticastDomainRequest request);
    public virtual Task`1<DisassociateTransitGatewayMulticastDomainResponse> DisassociateTransitGatewayMulticastDomainAsync(DisassociateTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateTransitGatewayPolicyTableResponse DisassociateTransitGatewayPolicyTable(DisassociateTransitGatewayPolicyTableRequest request);
    public virtual Task`1<DisassociateTransitGatewayPolicyTableResponse> DisassociateTransitGatewayPolicyTableAsync(DisassociateTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateTransitGatewayRouteTableResponse DisassociateTransitGatewayRouteTable(DisassociateTransitGatewayRouteTableRequest request);
    public virtual Task`1<DisassociateTransitGatewayRouteTableResponse> DisassociateTransitGatewayRouteTableAsync(DisassociateTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateTrunkInterfaceResponse DisassociateTrunkInterface(DisassociateTrunkInterfaceRequest request);
    public virtual Task`1<DisassociateTrunkInterfaceResponse> DisassociateTrunkInterfaceAsync(DisassociateTrunkInterfaceRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateVpcCidrBlockResponse DisassociateVpcCidrBlock(DisassociateVpcCidrBlockRequest request);
    public virtual Task`1<DisassociateVpcCidrBlockResponse> DisassociateVpcCidrBlockAsync(DisassociateVpcCidrBlockRequest request, CancellationToken cancellationToken);
    internal virtual EnableAddressTransferResponse EnableAddressTransfer(EnableAddressTransferRequest request);
    public virtual Task`1<EnableAddressTransferResponse> EnableAddressTransferAsync(EnableAddressTransferRequest request, CancellationToken cancellationToken);
    internal virtual EnableAwsNetworkPerformanceMetricSubscriptionResponse EnableAwsNetworkPerformanceMetricSubscription(EnableAwsNetworkPerformanceMetricSubscriptionRequest request);
    public virtual Task`1<EnableAwsNetworkPerformanceMetricSubscriptionResponse> EnableAwsNetworkPerformanceMetricSubscriptionAsync(EnableAwsNetworkPerformanceMetricSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual EnableEbsEncryptionByDefaultResponse EnableEbsEncryptionByDefault(EnableEbsEncryptionByDefaultRequest request);
    public virtual Task`1<EnableEbsEncryptionByDefaultResponse> EnableEbsEncryptionByDefaultAsync(EnableEbsEncryptionByDefaultRequest request, CancellationToken cancellationToken);
    internal virtual EnableFastLaunchResponse EnableFastLaunch(EnableFastLaunchRequest request);
    public virtual Task`1<EnableFastLaunchResponse> EnableFastLaunchAsync(EnableFastLaunchRequest request, CancellationToken cancellationToken);
    internal virtual EnableFastSnapshotRestoresResponse EnableFastSnapshotRestores(EnableFastSnapshotRestoresRequest request);
    public virtual Task`1<EnableFastSnapshotRestoresResponse> EnableFastSnapshotRestoresAsync(EnableFastSnapshotRestoresRequest request, CancellationToken cancellationToken);
    internal virtual EnableImageResponse EnableImage(EnableImageRequest request);
    public virtual Task`1<EnableImageResponse> EnableImageAsync(EnableImageRequest request, CancellationToken cancellationToken);
    internal virtual EnableImageBlockPublicAccessResponse EnableImageBlockPublicAccess(EnableImageBlockPublicAccessRequest request);
    public virtual Task`1<EnableImageBlockPublicAccessResponse> EnableImageBlockPublicAccessAsync(EnableImageBlockPublicAccessRequest request, CancellationToken cancellationToken);
    internal virtual EnableImageDeprecationResponse EnableImageDeprecation(EnableImageDeprecationRequest request);
    public virtual Task`1<EnableImageDeprecationResponse> EnableImageDeprecationAsync(EnableImageDeprecationRequest request, CancellationToken cancellationToken);
    internal virtual EnableImageDeregistrationProtectionResponse EnableImageDeregistrationProtection(EnableImageDeregistrationProtectionRequest request);
    public virtual Task`1<EnableImageDeregistrationProtectionResponse> EnableImageDeregistrationProtectionAsync(EnableImageDeregistrationProtectionRequest request, CancellationToken cancellationToken);
    internal virtual EnableIpamOrganizationAdminAccountResponse EnableIpamOrganizationAdminAccount(EnableIpamOrganizationAdminAccountRequest request);
    public virtual Task`1<EnableIpamOrganizationAdminAccountResponse> EnableIpamOrganizationAdminAccountAsync(EnableIpamOrganizationAdminAccountRequest request, CancellationToken cancellationToken);
    internal virtual EnableReachabilityAnalyzerOrganizationSharingResponse EnableReachabilityAnalyzerOrganizationSharing(EnableReachabilityAnalyzerOrganizationSharingRequest request);
    public virtual Task`1<EnableReachabilityAnalyzerOrganizationSharingResponse> EnableReachabilityAnalyzerOrganizationSharingAsync(EnableReachabilityAnalyzerOrganizationSharingRequest request, CancellationToken cancellationToken);
    internal virtual EnableSerialConsoleAccessResponse EnableSerialConsoleAccess(EnableSerialConsoleAccessRequest request);
    public virtual Task`1<EnableSerialConsoleAccessResponse> EnableSerialConsoleAccessAsync(EnableSerialConsoleAccessRequest request, CancellationToken cancellationToken);
    internal virtual EnableSnapshotBlockPublicAccessResponse EnableSnapshotBlockPublicAccess(EnableSnapshotBlockPublicAccessRequest request);
    public virtual Task`1<EnableSnapshotBlockPublicAccessResponse> EnableSnapshotBlockPublicAccessAsync(EnableSnapshotBlockPublicAccessRequest request, CancellationToken cancellationToken);
    internal virtual EnableTransitGatewayRouteTablePropagationResponse EnableTransitGatewayRouteTablePropagation(EnableTransitGatewayRouteTablePropagationRequest request);
    public virtual Task`1<EnableTransitGatewayRouteTablePropagationResponse> EnableTransitGatewayRouteTablePropagationAsync(EnableTransitGatewayRouteTablePropagationRequest request, CancellationToken cancellationToken);
    internal virtual EnableVgwRoutePropagationResponse EnableVgwRoutePropagation(EnableVgwRoutePropagationRequest request);
    public virtual Task`1<EnableVgwRoutePropagationResponse> EnableVgwRoutePropagationAsync(EnableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    internal virtual EnableVolumeIOResponse EnableVolumeIO(EnableVolumeIORequest request);
    public virtual Task`1<EnableVolumeIOResponse> EnableVolumeIOAsync(EnableVolumeIORequest request, CancellationToken cancellationToken);
    internal virtual EnableVpcClassicLinkResponse EnableVpcClassicLink(EnableVpcClassicLinkRequest request);
    public virtual Task`1<EnableVpcClassicLinkResponse> EnableVpcClassicLinkAsync(EnableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    internal virtual EnableVpcClassicLinkDnsSupportResponse EnableVpcClassicLinkDnsSupport(EnableVpcClassicLinkDnsSupportRequest request);
    public virtual Task`1<EnableVpcClassicLinkDnsSupportResponse> EnableVpcClassicLinkDnsSupportAsync(EnableVpcClassicLinkDnsSupportRequest request, CancellationToken cancellationToken);
    internal virtual ExportClientVpnClientCertificateRevocationListResponse ExportClientVpnClientCertificateRevocationList(ExportClientVpnClientCertificateRevocationListRequest request);
    public virtual Task`1<ExportClientVpnClientCertificateRevocationListResponse> ExportClientVpnClientCertificateRevocationListAsync(ExportClientVpnClientCertificateRevocationListRequest request, CancellationToken cancellationToken);
    internal virtual ExportClientVpnClientConfigurationResponse ExportClientVpnClientConfiguration(ExportClientVpnClientConfigurationRequest request);
    public virtual Task`1<ExportClientVpnClientConfigurationResponse> ExportClientVpnClientConfigurationAsync(ExportClientVpnClientConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual ExportImageResponse ExportImage(ExportImageRequest request);
    public virtual Task`1<ExportImageResponse> ExportImageAsync(ExportImageRequest request, CancellationToken cancellationToken);
    internal virtual ExportTransitGatewayRoutesResponse ExportTransitGatewayRoutes(ExportTransitGatewayRoutesRequest request);
    public virtual Task`1<ExportTransitGatewayRoutesResponse> ExportTransitGatewayRoutesAsync(ExportTransitGatewayRoutesRequest request, CancellationToken cancellationToken);
    internal virtual GetAssociatedEnclaveCertificateIamRolesResponse GetAssociatedEnclaveCertificateIamRoles(GetAssociatedEnclaveCertificateIamRolesRequest request);
    public virtual Task`1<GetAssociatedEnclaveCertificateIamRolesResponse> GetAssociatedEnclaveCertificateIamRolesAsync(GetAssociatedEnclaveCertificateIamRolesRequest request, CancellationToken cancellationToken);
    internal virtual GetAssociatedIpv6PoolCidrsResponse GetAssociatedIpv6PoolCidrs(GetAssociatedIpv6PoolCidrsRequest request);
    public virtual Task`1<GetAssociatedIpv6PoolCidrsResponse> GetAssociatedIpv6PoolCidrsAsync(GetAssociatedIpv6PoolCidrsRequest request, CancellationToken cancellationToken);
    internal virtual GetAwsNetworkPerformanceDataResponse GetAwsNetworkPerformanceData(GetAwsNetworkPerformanceDataRequest request);
    public virtual Task`1<GetAwsNetworkPerformanceDataResponse> GetAwsNetworkPerformanceDataAsync(GetAwsNetworkPerformanceDataRequest request, CancellationToken cancellationToken);
    internal virtual GetCapacityReservationUsageResponse GetCapacityReservationUsage(GetCapacityReservationUsageRequest request);
    public virtual Task`1<GetCapacityReservationUsageResponse> GetCapacityReservationUsageAsync(GetCapacityReservationUsageRequest request, CancellationToken cancellationToken);
    internal virtual GetCoipPoolUsageResponse GetCoipPoolUsage(GetCoipPoolUsageRequest request);
    public virtual Task`1<GetCoipPoolUsageResponse> GetCoipPoolUsageAsync(GetCoipPoolUsageRequest request, CancellationToken cancellationToken);
    internal virtual GetConsoleOutputResponse GetConsoleOutput(GetConsoleOutputRequest request);
    public virtual Task`1<GetConsoleOutputResponse> GetConsoleOutputAsync(GetConsoleOutputRequest request, CancellationToken cancellationToken);
    internal virtual GetConsoleScreenshotResponse GetConsoleScreenshot(GetConsoleScreenshotRequest request);
    public virtual Task`1<GetConsoleScreenshotResponse> GetConsoleScreenshotAsync(GetConsoleScreenshotRequest request, CancellationToken cancellationToken);
    internal virtual GetDefaultCreditSpecificationResponse GetDefaultCreditSpecification(GetDefaultCreditSpecificationRequest request);
    public virtual Task`1<GetDefaultCreditSpecificationResponse> GetDefaultCreditSpecificationAsync(GetDefaultCreditSpecificationRequest request, CancellationToken cancellationToken);
    internal virtual GetEbsDefaultKmsKeyIdResponse GetEbsDefaultKmsKeyId(GetEbsDefaultKmsKeyIdRequest request);
    public virtual Task`1<GetEbsDefaultKmsKeyIdResponse> GetEbsDefaultKmsKeyIdAsync(GetEbsDefaultKmsKeyIdRequest request, CancellationToken cancellationToken);
    internal virtual GetEbsEncryptionByDefaultResponse GetEbsEncryptionByDefault(GetEbsEncryptionByDefaultRequest request);
    public virtual Task`1<GetEbsEncryptionByDefaultResponse> GetEbsEncryptionByDefaultAsync(GetEbsEncryptionByDefaultRequest request, CancellationToken cancellationToken);
    internal virtual GetFlowLogsIntegrationTemplateResponse GetFlowLogsIntegrationTemplate(GetFlowLogsIntegrationTemplateRequest request);
    public virtual Task`1<GetFlowLogsIntegrationTemplateResponse> GetFlowLogsIntegrationTemplateAsync(GetFlowLogsIntegrationTemplateRequest request, CancellationToken cancellationToken);
    internal virtual GetGroupsForCapacityReservationResponse GetGroupsForCapacityReservation(GetGroupsForCapacityReservationRequest request);
    public virtual Task`1<GetGroupsForCapacityReservationResponse> GetGroupsForCapacityReservationAsync(GetGroupsForCapacityReservationRequest request, CancellationToken cancellationToken);
    internal virtual GetHostReservationPurchasePreviewResponse GetHostReservationPurchasePreview(GetHostReservationPurchasePreviewRequest request);
    public virtual Task`1<GetHostReservationPurchasePreviewResponse> GetHostReservationPurchasePreviewAsync(GetHostReservationPurchasePreviewRequest request, CancellationToken cancellationToken);
    internal virtual GetImageBlockPublicAccessStateResponse GetImageBlockPublicAccessState(GetImageBlockPublicAccessStateRequest request);
    public virtual Task`1<GetImageBlockPublicAccessStateResponse> GetImageBlockPublicAccessStateAsync(GetImageBlockPublicAccessStateRequest request, CancellationToken cancellationToken);
    internal virtual GetInstanceMetadataDefaultsResponse GetInstanceMetadataDefaults(GetInstanceMetadataDefaultsRequest request);
    public virtual Task`1<GetInstanceMetadataDefaultsResponse> GetInstanceMetadataDefaultsAsync(GetInstanceMetadataDefaultsRequest request, CancellationToken cancellationToken);
    internal virtual GetInstanceTpmEkPubResponse GetInstanceTpmEkPub(GetInstanceTpmEkPubRequest request);
    public virtual Task`1<GetInstanceTpmEkPubResponse> GetInstanceTpmEkPubAsync(GetInstanceTpmEkPubRequest request, CancellationToken cancellationToken);
    internal virtual GetInstanceTypesFromInstanceRequirementsResponse GetInstanceTypesFromInstanceRequirements(GetInstanceTypesFromInstanceRequirementsRequest request);
    public virtual Task`1<GetInstanceTypesFromInstanceRequirementsResponse> GetInstanceTypesFromInstanceRequirementsAsync(GetInstanceTypesFromInstanceRequirementsRequest request, CancellationToken cancellationToken);
    internal virtual GetInstanceUefiDataResponse GetInstanceUefiData(GetInstanceUefiDataRequest request);
    public virtual Task`1<GetInstanceUefiDataResponse> GetInstanceUefiDataAsync(GetInstanceUefiDataRequest request, CancellationToken cancellationToken);
    internal virtual GetIpamAddressHistoryResponse GetIpamAddressHistory(GetIpamAddressHistoryRequest request);
    public virtual Task`1<GetIpamAddressHistoryResponse> GetIpamAddressHistoryAsync(GetIpamAddressHistoryRequest request, CancellationToken cancellationToken);
    internal virtual GetIpamDiscoveredAccountsResponse GetIpamDiscoveredAccounts(GetIpamDiscoveredAccountsRequest request);
    public virtual Task`1<GetIpamDiscoveredAccountsResponse> GetIpamDiscoveredAccountsAsync(GetIpamDiscoveredAccountsRequest request, CancellationToken cancellationToken);
    internal virtual GetIpamDiscoveredPublicAddressesResponse GetIpamDiscoveredPublicAddresses(GetIpamDiscoveredPublicAddressesRequest request);
    public virtual Task`1<GetIpamDiscoveredPublicAddressesResponse> GetIpamDiscoveredPublicAddressesAsync(GetIpamDiscoveredPublicAddressesRequest request, CancellationToken cancellationToken);
    internal virtual GetIpamDiscoveredResourceCidrsResponse GetIpamDiscoveredResourceCidrs(GetIpamDiscoveredResourceCidrsRequest request);
    public virtual Task`1<GetIpamDiscoveredResourceCidrsResponse> GetIpamDiscoveredResourceCidrsAsync(GetIpamDiscoveredResourceCidrsRequest request, CancellationToken cancellationToken);
    internal virtual GetIpamPoolAllocationsResponse GetIpamPoolAllocations(GetIpamPoolAllocationsRequest request);
    public virtual Task`1<GetIpamPoolAllocationsResponse> GetIpamPoolAllocationsAsync(GetIpamPoolAllocationsRequest request, CancellationToken cancellationToken);
    internal virtual GetIpamPoolCidrsResponse GetIpamPoolCidrs(GetIpamPoolCidrsRequest request);
    public virtual Task`1<GetIpamPoolCidrsResponse> GetIpamPoolCidrsAsync(GetIpamPoolCidrsRequest request, CancellationToken cancellationToken);
    internal virtual GetIpamResourceCidrsResponse GetIpamResourceCidrs(GetIpamResourceCidrsRequest request);
    public virtual Task`1<GetIpamResourceCidrsResponse> GetIpamResourceCidrsAsync(GetIpamResourceCidrsRequest request, CancellationToken cancellationToken);
    internal virtual GetLaunchTemplateDataResponse GetLaunchTemplateData(GetLaunchTemplateDataRequest request);
    public virtual Task`1<GetLaunchTemplateDataResponse> GetLaunchTemplateDataAsync(GetLaunchTemplateDataRequest request, CancellationToken cancellationToken);
    internal virtual GetManagedPrefixListAssociationsResponse GetManagedPrefixListAssociations(GetManagedPrefixListAssociationsRequest request);
    public virtual Task`1<GetManagedPrefixListAssociationsResponse> GetManagedPrefixListAssociationsAsync(GetManagedPrefixListAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual GetManagedPrefixListEntriesResponse GetManagedPrefixListEntries(GetManagedPrefixListEntriesRequest request);
    public virtual Task`1<GetManagedPrefixListEntriesResponse> GetManagedPrefixListEntriesAsync(GetManagedPrefixListEntriesRequest request, CancellationToken cancellationToken);
    internal virtual GetNetworkInsightsAccessScopeAnalysisFindingsResponse GetNetworkInsightsAccessScopeAnalysisFindings(GetNetworkInsightsAccessScopeAnalysisFindingsRequest request);
    public virtual Task`1<GetNetworkInsightsAccessScopeAnalysisFindingsResponse> GetNetworkInsightsAccessScopeAnalysisFindingsAsync(GetNetworkInsightsAccessScopeAnalysisFindingsRequest request, CancellationToken cancellationToken);
    internal virtual GetNetworkInsightsAccessScopeContentResponse GetNetworkInsightsAccessScopeContent(GetNetworkInsightsAccessScopeContentRequest request);
    public virtual Task`1<GetNetworkInsightsAccessScopeContentResponse> GetNetworkInsightsAccessScopeContentAsync(GetNetworkInsightsAccessScopeContentRequest request, CancellationToken cancellationToken);
    internal virtual GetPasswordDataResponse GetPasswordData(GetPasswordDataRequest request);
    public virtual Task`1<GetPasswordDataResponse> GetPasswordDataAsync(GetPasswordDataRequest request, CancellationToken cancellationToken);
    internal virtual GetReservedInstancesExchangeQuoteResponse GetReservedInstancesExchangeQuote(GetReservedInstancesExchangeQuoteRequest request);
    public virtual Task`1<GetReservedInstancesExchangeQuoteResponse> GetReservedInstancesExchangeQuoteAsync(GetReservedInstancesExchangeQuoteRequest request, CancellationToken cancellationToken);
    internal virtual GetSecurityGroupsForVpcResponse GetSecurityGroupsForVpc(GetSecurityGroupsForVpcRequest request);
    public virtual Task`1<GetSecurityGroupsForVpcResponse> GetSecurityGroupsForVpcAsync(GetSecurityGroupsForVpcRequest request, CancellationToken cancellationToken);
    internal virtual GetSerialConsoleAccessStatusResponse GetSerialConsoleAccessStatus(GetSerialConsoleAccessStatusRequest request);
    public virtual Task`1<GetSerialConsoleAccessStatusResponse> GetSerialConsoleAccessStatusAsync(GetSerialConsoleAccessStatusRequest request, CancellationToken cancellationToken);
    internal virtual GetSnapshotBlockPublicAccessStateResponse GetSnapshotBlockPublicAccessState(GetSnapshotBlockPublicAccessStateRequest request);
    public virtual Task`1<GetSnapshotBlockPublicAccessStateResponse> GetSnapshotBlockPublicAccessStateAsync(GetSnapshotBlockPublicAccessStateRequest request, CancellationToken cancellationToken);
    internal virtual GetSpotPlacementScoresResponse GetSpotPlacementScores(GetSpotPlacementScoresRequest request);
    public virtual Task`1<GetSpotPlacementScoresResponse> GetSpotPlacementScoresAsync(GetSpotPlacementScoresRequest request, CancellationToken cancellationToken);
    internal virtual GetSubnetCidrReservationsResponse GetSubnetCidrReservations(GetSubnetCidrReservationsRequest request);
    public virtual Task`1<GetSubnetCidrReservationsResponse> GetSubnetCidrReservationsAsync(GetSubnetCidrReservationsRequest request, CancellationToken cancellationToken);
    internal virtual GetTransitGatewayAttachmentPropagationsResponse GetTransitGatewayAttachmentPropagations(GetTransitGatewayAttachmentPropagationsRequest request);
    public virtual Task`1<GetTransitGatewayAttachmentPropagationsResponse> GetTransitGatewayAttachmentPropagationsAsync(GetTransitGatewayAttachmentPropagationsRequest request, CancellationToken cancellationToken);
    internal virtual GetTransitGatewayMulticastDomainAssociationsResponse GetTransitGatewayMulticastDomainAssociations(GetTransitGatewayMulticastDomainAssociationsRequest request);
    public virtual Task`1<GetTransitGatewayMulticastDomainAssociationsResponse> GetTransitGatewayMulticastDomainAssociationsAsync(GetTransitGatewayMulticastDomainAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual GetTransitGatewayPolicyTableAssociationsResponse GetTransitGatewayPolicyTableAssociations(GetTransitGatewayPolicyTableAssociationsRequest request);
    public virtual Task`1<GetTransitGatewayPolicyTableAssociationsResponse> GetTransitGatewayPolicyTableAssociationsAsync(GetTransitGatewayPolicyTableAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual GetTransitGatewayPolicyTableEntriesResponse GetTransitGatewayPolicyTableEntries(GetTransitGatewayPolicyTableEntriesRequest request);
    public virtual Task`1<GetTransitGatewayPolicyTableEntriesResponse> GetTransitGatewayPolicyTableEntriesAsync(GetTransitGatewayPolicyTableEntriesRequest request, CancellationToken cancellationToken);
    internal virtual GetTransitGatewayPrefixListReferencesResponse GetTransitGatewayPrefixListReferences(GetTransitGatewayPrefixListReferencesRequest request);
    public virtual Task`1<GetTransitGatewayPrefixListReferencesResponse> GetTransitGatewayPrefixListReferencesAsync(GetTransitGatewayPrefixListReferencesRequest request, CancellationToken cancellationToken);
    internal virtual GetTransitGatewayRouteTableAssociationsResponse GetTransitGatewayRouteTableAssociations(GetTransitGatewayRouteTableAssociationsRequest request);
    public virtual Task`1<GetTransitGatewayRouteTableAssociationsResponse> GetTransitGatewayRouteTableAssociationsAsync(GetTransitGatewayRouteTableAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual GetTransitGatewayRouteTablePropagationsResponse GetTransitGatewayRouteTablePropagations(GetTransitGatewayRouteTablePropagationsRequest request);
    public virtual Task`1<GetTransitGatewayRouteTablePropagationsResponse> GetTransitGatewayRouteTablePropagationsAsync(GetTransitGatewayRouteTablePropagationsRequest request, CancellationToken cancellationToken);
    internal virtual GetVerifiedAccessEndpointPolicyResponse GetVerifiedAccessEndpointPolicy(GetVerifiedAccessEndpointPolicyRequest request);
    public virtual Task`1<GetVerifiedAccessEndpointPolicyResponse> GetVerifiedAccessEndpointPolicyAsync(GetVerifiedAccessEndpointPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetVerifiedAccessGroupPolicyResponse GetVerifiedAccessGroupPolicy(GetVerifiedAccessGroupPolicyRequest request);
    public virtual Task`1<GetVerifiedAccessGroupPolicyResponse> GetVerifiedAccessGroupPolicyAsync(GetVerifiedAccessGroupPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetVpnConnectionDeviceSampleConfigurationResponse GetVpnConnectionDeviceSampleConfiguration(GetVpnConnectionDeviceSampleConfigurationRequest request);
    public virtual Task`1<GetVpnConnectionDeviceSampleConfigurationResponse> GetVpnConnectionDeviceSampleConfigurationAsync(GetVpnConnectionDeviceSampleConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual GetVpnConnectionDeviceTypesResponse GetVpnConnectionDeviceTypes(GetVpnConnectionDeviceTypesRequest request);
    public virtual Task`1<GetVpnConnectionDeviceTypesResponse> GetVpnConnectionDeviceTypesAsync(GetVpnConnectionDeviceTypesRequest request, CancellationToken cancellationToken);
    internal virtual GetVpnTunnelReplacementStatusResponse GetVpnTunnelReplacementStatus(GetVpnTunnelReplacementStatusRequest request);
    public virtual Task`1<GetVpnTunnelReplacementStatusResponse> GetVpnTunnelReplacementStatusAsync(GetVpnTunnelReplacementStatusRequest request, CancellationToken cancellationToken);
    internal virtual ImportClientVpnClientCertificateRevocationListResponse ImportClientVpnClientCertificateRevocationList(ImportClientVpnClientCertificateRevocationListRequest request);
    public virtual Task`1<ImportClientVpnClientCertificateRevocationListResponse> ImportClientVpnClientCertificateRevocationListAsync(ImportClientVpnClientCertificateRevocationListRequest request, CancellationToken cancellationToken);
    internal virtual ImportImageResponse ImportImage(ImportImageRequest request);
    public virtual Task`1<ImportImageResponse> ImportImageAsync(ImportImageRequest request, CancellationToken cancellationToken);
    internal virtual ImportInstanceResponse ImportInstance(ImportInstanceRequest request);
    public virtual Task`1<ImportInstanceResponse> ImportInstanceAsync(ImportInstanceRequest request, CancellationToken cancellationToken);
    internal virtual ImportKeyPairResponse ImportKeyPair(ImportKeyPairRequest request);
    public virtual Task`1<ImportKeyPairResponse> ImportKeyPairAsync(ImportKeyPairRequest request, CancellationToken cancellationToken);
    internal virtual ImportSnapshotResponse ImportSnapshot(ImportSnapshotRequest request);
    public virtual Task`1<ImportSnapshotResponse> ImportSnapshotAsync(ImportSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual ImportVolumeResponse ImportVolume(ImportVolumeRequest request);
    public virtual Task`1<ImportVolumeResponse> ImportVolumeAsync(ImportVolumeRequest request, CancellationToken cancellationToken);
    internal virtual ListImagesInRecycleBinResponse ListImagesInRecycleBin(ListImagesInRecycleBinRequest request);
    public virtual Task`1<ListImagesInRecycleBinResponse> ListImagesInRecycleBinAsync(ListImagesInRecycleBinRequest request, CancellationToken cancellationToken);
    internal virtual ListSnapshotsInRecycleBinResponse ListSnapshotsInRecycleBin(ListSnapshotsInRecycleBinRequest request);
    public virtual Task`1<ListSnapshotsInRecycleBinResponse> ListSnapshotsInRecycleBinAsync(ListSnapshotsInRecycleBinRequest request, CancellationToken cancellationToken);
    internal virtual LockSnapshotResponse LockSnapshot(LockSnapshotRequest request);
    public virtual Task`1<LockSnapshotResponse> LockSnapshotAsync(LockSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual ModifyAddressAttributeResponse ModifyAddressAttribute(ModifyAddressAttributeRequest request);
    public virtual Task`1<ModifyAddressAttributeResponse> ModifyAddressAttributeAsync(ModifyAddressAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyAvailabilityZoneGroupResponse ModifyAvailabilityZoneGroup(ModifyAvailabilityZoneGroupRequest request);
    public virtual Task`1<ModifyAvailabilityZoneGroupResponse> ModifyAvailabilityZoneGroupAsync(ModifyAvailabilityZoneGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyCapacityReservationResponse ModifyCapacityReservation(ModifyCapacityReservationRequest request);
    public virtual Task`1<ModifyCapacityReservationResponse> ModifyCapacityReservationAsync(ModifyCapacityReservationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyCapacityReservationFleetResponse ModifyCapacityReservationFleet(ModifyCapacityReservationFleetRequest request);
    public virtual Task`1<ModifyCapacityReservationFleetResponse> ModifyCapacityReservationFleetAsync(ModifyCapacityReservationFleetRequest request, CancellationToken cancellationToken);
    internal virtual ModifyClientVpnEndpointResponse ModifyClientVpnEndpoint(ModifyClientVpnEndpointRequest request);
    public virtual Task`1<ModifyClientVpnEndpointResponse> ModifyClientVpnEndpointAsync(ModifyClientVpnEndpointRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDefaultCreditSpecificationResponse ModifyDefaultCreditSpecification(ModifyDefaultCreditSpecificationRequest request);
    public virtual Task`1<ModifyDefaultCreditSpecificationResponse> ModifyDefaultCreditSpecificationAsync(ModifyDefaultCreditSpecificationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyEbsDefaultKmsKeyIdResponse ModifyEbsDefaultKmsKeyId(ModifyEbsDefaultKmsKeyIdRequest request);
    public virtual Task`1<ModifyEbsDefaultKmsKeyIdResponse> ModifyEbsDefaultKmsKeyIdAsync(ModifyEbsDefaultKmsKeyIdRequest request, CancellationToken cancellationToken);
    internal virtual ModifyFleetResponse ModifyFleet(ModifyFleetRequest request);
    public virtual Task`1<ModifyFleetResponse> ModifyFleetAsync(ModifyFleetRequest request, CancellationToken cancellationToken);
    internal virtual ModifyFpgaImageAttributeResponse ModifyFpgaImageAttribute(ModifyFpgaImageAttributeRequest request);
    public virtual Task`1<ModifyFpgaImageAttributeResponse> ModifyFpgaImageAttributeAsync(ModifyFpgaImageAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyHostsResponse ModifyHosts(ModifyHostsRequest request);
    public virtual Task`1<ModifyHostsResponse> ModifyHostsAsync(ModifyHostsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIdentityIdFormatResponse ModifyIdentityIdFormat(ModifyIdentityIdFormatRequest request);
    public virtual Task`1<ModifyIdentityIdFormatResponse> ModifyIdentityIdFormatAsync(ModifyIdentityIdFormatRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIdFormatResponse ModifyIdFormat(ModifyIdFormatRequest request);
    public virtual Task`1<ModifyIdFormatResponse> ModifyIdFormatAsync(ModifyIdFormatRequest request, CancellationToken cancellationToken);
    internal virtual ModifyImageAttributeResponse ModifyImageAttribute(ModifyImageAttributeRequest request);
    public virtual Task`1<ModifyImageAttributeResponse> ModifyImageAttributeAsync(ModifyImageAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceAttributeResponse ModifyInstanceAttribute(ModifyInstanceAttributeRequest request);
    public virtual Task`1<ModifyInstanceAttributeResponse> ModifyInstanceAttributeAsync(ModifyInstanceAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceCapacityReservationAttributesResponse ModifyInstanceCapacityReservationAttributes(ModifyInstanceCapacityReservationAttributesRequest request);
    public virtual Task`1<ModifyInstanceCapacityReservationAttributesResponse> ModifyInstanceCapacityReservationAttributesAsync(ModifyInstanceCapacityReservationAttributesRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceCreditSpecificationResponse ModifyInstanceCreditSpecification(ModifyInstanceCreditSpecificationRequest request);
    public virtual Task`1<ModifyInstanceCreditSpecificationResponse> ModifyInstanceCreditSpecificationAsync(ModifyInstanceCreditSpecificationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceEventStartTimeResponse ModifyInstanceEventStartTime(ModifyInstanceEventStartTimeRequest request);
    public virtual Task`1<ModifyInstanceEventStartTimeResponse> ModifyInstanceEventStartTimeAsync(ModifyInstanceEventStartTimeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceEventWindowResponse ModifyInstanceEventWindow(ModifyInstanceEventWindowRequest request);
    public virtual Task`1<ModifyInstanceEventWindowResponse> ModifyInstanceEventWindowAsync(ModifyInstanceEventWindowRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceMaintenanceOptionsResponse ModifyInstanceMaintenanceOptions(ModifyInstanceMaintenanceOptionsRequest request);
    public virtual Task`1<ModifyInstanceMaintenanceOptionsResponse> ModifyInstanceMaintenanceOptionsAsync(ModifyInstanceMaintenanceOptionsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceMetadataDefaultsResponse ModifyInstanceMetadataDefaults(ModifyInstanceMetadataDefaultsRequest request);
    public virtual Task`1<ModifyInstanceMetadataDefaultsResponse> ModifyInstanceMetadataDefaultsAsync(ModifyInstanceMetadataDefaultsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceMetadataOptionsResponse ModifyInstanceMetadataOptions(ModifyInstanceMetadataOptionsRequest request);
    public virtual Task`1<ModifyInstanceMetadataOptionsResponse> ModifyInstanceMetadataOptionsAsync(ModifyInstanceMetadataOptionsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstancePlacementResponse ModifyInstancePlacement(ModifyInstancePlacementRequest request);
    public virtual Task`1<ModifyInstancePlacementResponse> ModifyInstancePlacementAsync(ModifyInstancePlacementRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIpamResponse ModifyIpam(ModifyIpamRequest request);
    public virtual Task`1<ModifyIpamResponse> ModifyIpamAsync(ModifyIpamRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIpamPoolResponse ModifyIpamPool(ModifyIpamPoolRequest request);
    public virtual Task`1<ModifyIpamPoolResponse> ModifyIpamPoolAsync(ModifyIpamPoolRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIpamResourceCidrResponse ModifyIpamResourceCidr(ModifyIpamResourceCidrRequest request);
    public virtual Task`1<ModifyIpamResourceCidrResponse> ModifyIpamResourceCidrAsync(ModifyIpamResourceCidrRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIpamResourceDiscoveryResponse ModifyIpamResourceDiscovery(ModifyIpamResourceDiscoveryRequest request);
    public virtual Task`1<ModifyIpamResourceDiscoveryResponse> ModifyIpamResourceDiscoveryAsync(ModifyIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIpamScopeResponse ModifyIpamScope(ModifyIpamScopeRequest request);
    public virtual Task`1<ModifyIpamScopeResponse> ModifyIpamScopeAsync(ModifyIpamScopeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyLaunchTemplateResponse ModifyLaunchTemplate(ModifyLaunchTemplateRequest request);
    public virtual Task`1<ModifyLaunchTemplateResponse> ModifyLaunchTemplateAsync(ModifyLaunchTemplateRequest request, CancellationToken cancellationToken);
    internal virtual ModifyLocalGatewayRouteResponse ModifyLocalGatewayRoute(ModifyLocalGatewayRouteRequest request);
    public virtual Task`1<ModifyLocalGatewayRouteResponse> ModifyLocalGatewayRouteAsync(ModifyLocalGatewayRouteRequest request, CancellationToken cancellationToken);
    internal virtual ModifyManagedPrefixListResponse ModifyManagedPrefixList(ModifyManagedPrefixListRequest request);
    public virtual Task`1<ModifyManagedPrefixListResponse> ModifyManagedPrefixListAsync(ModifyManagedPrefixListRequest request, CancellationToken cancellationToken);
    internal virtual ModifyNetworkInterfaceAttributeResponse ModifyNetworkInterfaceAttribute(ModifyNetworkInterfaceAttributeRequest request);
    public virtual Task`1<ModifyNetworkInterfaceAttributeResponse> ModifyNetworkInterfaceAttributeAsync(ModifyNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyPrivateDnsNameOptionsResponse ModifyPrivateDnsNameOptions(ModifyPrivateDnsNameOptionsRequest request);
    public virtual Task`1<ModifyPrivateDnsNameOptionsResponse> ModifyPrivateDnsNameOptionsAsync(ModifyPrivateDnsNameOptionsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyReservedInstancesResponse ModifyReservedInstances(ModifyReservedInstancesRequest request);
    public virtual Task`1<ModifyReservedInstancesResponse> ModifyReservedInstancesAsync(ModifyReservedInstancesRequest request, CancellationToken cancellationToken);
    internal virtual ModifySecurityGroupRulesResponse ModifySecurityGroupRules(ModifySecurityGroupRulesRequest request);
    public virtual Task`1<ModifySecurityGroupRulesResponse> ModifySecurityGroupRulesAsync(ModifySecurityGroupRulesRequest request, CancellationToken cancellationToken);
    internal virtual ModifySnapshotAttributeResponse ModifySnapshotAttribute(ModifySnapshotAttributeRequest request);
    public virtual Task`1<ModifySnapshotAttributeResponse> ModifySnapshotAttributeAsync(ModifySnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifySnapshotTierResponse ModifySnapshotTier(ModifySnapshotTierRequest request);
    public virtual Task`1<ModifySnapshotTierResponse> ModifySnapshotTierAsync(ModifySnapshotTierRequest request, CancellationToken cancellationToken);
    internal virtual ModifySpotFleetRequestResponse ModifySpotFleetRequest(ModifySpotFleetRequestRequest request);
    public virtual Task`1<ModifySpotFleetRequestResponse> ModifySpotFleetRequestAsync(ModifySpotFleetRequestRequest request, CancellationToken cancellationToken);
    internal virtual ModifySubnetAttributeResponse ModifySubnetAttribute(ModifySubnetAttributeRequest request);
    public virtual Task`1<ModifySubnetAttributeResponse> ModifySubnetAttributeAsync(ModifySubnetAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTrafficMirrorFilterNetworkServicesResponse ModifyTrafficMirrorFilterNetworkServices(ModifyTrafficMirrorFilterNetworkServicesRequest request);
    public virtual Task`1<ModifyTrafficMirrorFilterNetworkServicesResponse> ModifyTrafficMirrorFilterNetworkServicesAsync(ModifyTrafficMirrorFilterNetworkServicesRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTrafficMirrorFilterRuleResponse ModifyTrafficMirrorFilterRule(ModifyTrafficMirrorFilterRuleRequest request);
    public virtual Task`1<ModifyTrafficMirrorFilterRuleResponse> ModifyTrafficMirrorFilterRuleAsync(ModifyTrafficMirrorFilterRuleRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTrafficMirrorSessionResponse ModifyTrafficMirrorSession(ModifyTrafficMirrorSessionRequest request);
    public virtual Task`1<ModifyTrafficMirrorSessionResponse> ModifyTrafficMirrorSessionAsync(ModifyTrafficMirrorSessionRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTransitGatewayResponse ModifyTransitGateway(ModifyTransitGatewayRequest request);
    public virtual Task`1<ModifyTransitGatewayResponse> ModifyTransitGatewayAsync(ModifyTransitGatewayRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTransitGatewayPrefixListReferenceResponse ModifyTransitGatewayPrefixListReference(ModifyTransitGatewayPrefixListReferenceRequest request);
    public virtual Task`1<ModifyTransitGatewayPrefixListReferenceResponse> ModifyTransitGatewayPrefixListReferenceAsync(ModifyTransitGatewayPrefixListReferenceRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTransitGatewayVpcAttachmentResponse ModifyTransitGatewayVpcAttachment(ModifyTransitGatewayVpcAttachmentRequest request);
    public virtual Task`1<ModifyTransitGatewayVpcAttachmentResponse> ModifyTransitGatewayVpcAttachmentAsync(ModifyTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVerifiedAccessEndpointResponse ModifyVerifiedAccessEndpoint(ModifyVerifiedAccessEndpointRequest request);
    public virtual Task`1<ModifyVerifiedAccessEndpointResponse> ModifyVerifiedAccessEndpointAsync(ModifyVerifiedAccessEndpointRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVerifiedAccessEndpointPolicyResponse ModifyVerifiedAccessEndpointPolicy(ModifyVerifiedAccessEndpointPolicyRequest request);
    public virtual Task`1<ModifyVerifiedAccessEndpointPolicyResponse> ModifyVerifiedAccessEndpointPolicyAsync(ModifyVerifiedAccessEndpointPolicyRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVerifiedAccessGroupResponse ModifyVerifiedAccessGroup(ModifyVerifiedAccessGroupRequest request);
    public virtual Task`1<ModifyVerifiedAccessGroupResponse> ModifyVerifiedAccessGroupAsync(ModifyVerifiedAccessGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVerifiedAccessGroupPolicyResponse ModifyVerifiedAccessGroupPolicy(ModifyVerifiedAccessGroupPolicyRequest request);
    public virtual Task`1<ModifyVerifiedAccessGroupPolicyResponse> ModifyVerifiedAccessGroupPolicyAsync(ModifyVerifiedAccessGroupPolicyRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVerifiedAccessInstanceResponse ModifyVerifiedAccessInstance(ModifyVerifiedAccessInstanceRequest request);
    public virtual Task`1<ModifyVerifiedAccessInstanceResponse> ModifyVerifiedAccessInstanceAsync(ModifyVerifiedAccessInstanceRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVerifiedAccessInstanceLoggingConfigurationResponse ModifyVerifiedAccessInstanceLoggingConfiguration(ModifyVerifiedAccessInstanceLoggingConfigurationRequest request);
    public virtual Task`1<ModifyVerifiedAccessInstanceLoggingConfigurationResponse> ModifyVerifiedAccessInstanceLoggingConfigurationAsync(ModifyVerifiedAccessInstanceLoggingConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVerifiedAccessTrustProviderResponse ModifyVerifiedAccessTrustProvider(ModifyVerifiedAccessTrustProviderRequest request);
    public virtual Task`1<ModifyVerifiedAccessTrustProviderResponse> ModifyVerifiedAccessTrustProviderAsync(ModifyVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request);
    public virtual Task`1<ModifyVolumeResponse> ModifyVolumeAsync(ModifyVolumeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVolumeAttributeResponse ModifyVolumeAttribute(ModifyVolumeAttributeRequest request);
    public virtual Task`1<ModifyVolumeAttributeResponse> ModifyVolumeAttributeAsync(ModifyVolumeAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcAttributeResponse ModifyVpcAttribute(ModifyVpcAttributeRequest request);
    public virtual Task`1<ModifyVpcAttributeResponse> ModifyVpcAttributeAsync(ModifyVpcAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcEndpointResponse ModifyVpcEndpoint(ModifyVpcEndpointRequest request);
    public virtual Task`1<ModifyVpcEndpointResponse> ModifyVpcEndpointAsync(ModifyVpcEndpointRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcEndpointConnectionNotificationResponse ModifyVpcEndpointConnectionNotification(ModifyVpcEndpointConnectionNotificationRequest request);
    public virtual Task`1<ModifyVpcEndpointConnectionNotificationResponse> ModifyVpcEndpointConnectionNotificationAsync(ModifyVpcEndpointConnectionNotificationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcEndpointServiceConfigurationResponse ModifyVpcEndpointServiceConfiguration(ModifyVpcEndpointServiceConfigurationRequest request);
    public virtual Task`1<ModifyVpcEndpointServiceConfigurationResponse> ModifyVpcEndpointServiceConfigurationAsync(ModifyVpcEndpointServiceConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcEndpointServicePayerResponsibilityResponse ModifyVpcEndpointServicePayerResponsibility(ModifyVpcEndpointServicePayerResponsibilityRequest request);
    public virtual Task`1<ModifyVpcEndpointServicePayerResponsibilityResponse> ModifyVpcEndpointServicePayerResponsibilityAsync(ModifyVpcEndpointServicePayerResponsibilityRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcEndpointServicePermissionsResponse ModifyVpcEndpointServicePermissions(ModifyVpcEndpointServicePermissionsRequest request);
    public virtual Task`1<ModifyVpcEndpointServicePermissionsResponse> ModifyVpcEndpointServicePermissionsAsync(ModifyVpcEndpointServicePermissionsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcPeeringConnectionOptionsResponse ModifyVpcPeeringConnectionOptions(ModifyVpcPeeringConnectionOptionsRequest request);
    public virtual Task`1<ModifyVpcPeeringConnectionOptionsResponse> ModifyVpcPeeringConnectionOptionsAsync(ModifyVpcPeeringConnectionOptionsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpcTenancyResponse ModifyVpcTenancy(ModifyVpcTenancyRequest request);
    public virtual Task`1<ModifyVpcTenancyResponse> ModifyVpcTenancyAsync(ModifyVpcTenancyRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpnConnectionResponse ModifyVpnConnection(ModifyVpnConnectionRequest request);
    public virtual Task`1<ModifyVpnConnectionResponse> ModifyVpnConnectionAsync(ModifyVpnConnectionRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpnConnectionOptionsResponse ModifyVpnConnectionOptions(ModifyVpnConnectionOptionsRequest request);
    public virtual Task`1<ModifyVpnConnectionOptionsResponse> ModifyVpnConnectionOptionsAsync(ModifyVpnConnectionOptionsRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpnTunnelCertificateResponse ModifyVpnTunnelCertificate(ModifyVpnTunnelCertificateRequest request);
    public virtual Task`1<ModifyVpnTunnelCertificateResponse> ModifyVpnTunnelCertificateAsync(ModifyVpnTunnelCertificateRequest request, CancellationToken cancellationToken);
    internal virtual ModifyVpnTunnelOptionsResponse ModifyVpnTunnelOptions(ModifyVpnTunnelOptionsRequest request);
    public virtual Task`1<ModifyVpnTunnelOptionsResponse> ModifyVpnTunnelOptionsAsync(ModifyVpnTunnelOptionsRequest request, CancellationToken cancellationToken);
    internal virtual MonitorInstancesResponse MonitorInstances(MonitorInstancesRequest request);
    public virtual Task`1<MonitorInstancesResponse> MonitorInstancesAsync(MonitorInstancesRequest request, CancellationToken cancellationToken);
    internal virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request);
    public virtual Task`1<MoveAddressToVpcResponse> MoveAddressToVpcAsync(MoveAddressToVpcRequest request, CancellationToken cancellationToken);
    internal virtual MoveByoipCidrToIpamResponse MoveByoipCidrToIpam(MoveByoipCidrToIpamRequest request);
    public virtual Task`1<MoveByoipCidrToIpamResponse> MoveByoipCidrToIpamAsync(MoveByoipCidrToIpamRequest request, CancellationToken cancellationToken);
    internal virtual ProvisionByoipCidrResponse ProvisionByoipCidr(ProvisionByoipCidrRequest request);
    public virtual Task`1<ProvisionByoipCidrResponse> ProvisionByoipCidrAsync(ProvisionByoipCidrRequest request, CancellationToken cancellationToken);
    internal virtual ProvisionIpamByoasnResponse ProvisionIpamByoasn(ProvisionIpamByoasnRequest request);
    public virtual Task`1<ProvisionIpamByoasnResponse> ProvisionIpamByoasnAsync(ProvisionIpamByoasnRequest request, CancellationToken cancellationToken);
    internal virtual ProvisionIpamPoolCidrResponse ProvisionIpamPoolCidr(ProvisionIpamPoolCidrRequest request);
    public virtual Task`1<ProvisionIpamPoolCidrResponse> ProvisionIpamPoolCidrAsync(ProvisionIpamPoolCidrRequest request, CancellationToken cancellationToken);
    internal virtual ProvisionPublicIpv4PoolCidrResponse ProvisionPublicIpv4PoolCidr(ProvisionPublicIpv4PoolCidrRequest request);
    public virtual Task`1<ProvisionPublicIpv4PoolCidrResponse> ProvisionPublicIpv4PoolCidrAsync(ProvisionPublicIpv4PoolCidrRequest request, CancellationToken cancellationToken);
    internal virtual PurchaseCapacityBlockResponse PurchaseCapacityBlock(PurchaseCapacityBlockRequest request);
    public virtual Task`1<PurchaseCapacityBlockResponse> PurchaseCapacityBlockAsync(PurchaseCapacityBlockRequest request, CancellationToken cancellationToken);
    internal virtual PurchaseHostReservationResponse PurchaseHostReservation(PurchaseHostReservationRequest request);
    public virtual Task`1<PurchaseHostReservationResponse> PurchaseHostReservationAsync(PurchaseHostReservationRequest request, CancellationToken cancellationToken);
    internal virtual PurchaseReservedInstancesOfferingResponse PurchaseReservedInstancesOffering(PurchaseReservedInstancesOfferingRequest request);
    public virtual Task`1<PurchaseReservedInstancesOfferingResponse> PurchaseReservedInstancesOfferingAsync(PurchaseReservedInstancesOfferingRequest request, CancellationToken cancellationToken);
    internal virtual PurchaseScheduledInstancesResponse PurchaseScheduledInstances(PurchaseScheduledInstancesRequest request);
    public virtual Task`1<PurchaseScheduledInstancesResponse> PurchaseScheduledInstancesAsync(PurchaseScheduledInstancesRequest request, CancellationToken cancellationToken);
    internal virtual RebootInstancesResponse RebootInstances(RebootInstancesRequest request);
    public virtual Task`1<RebootInstancesResponse> RebootInstancesAsync(RebootInstancesRequest request, CancellationToken cancellationToken);
    internal virtual RegisterImageResponse RegisterImage(RegisterImageRequest request);
    public virtual Task`1<RegisterImageResponse> RegisterImageAsync(RegisterImageRequest request, CancellationToken cancellationToken);
    internal virtual RegisterInstanceEventNotificationAttributesResponse RegisterInstanceEventNotificationAttributes(RegisterInstanceEventNotificationAttributesRequest request);
    public virtual Task`1<RegisterInstanceEventNotificationAttributesResponse> RegisterInstanceEventNotificationAttributesAsync(RegisterInstanceEventNotificationAttributesRequest request, CancellationToken cancellationToken);
    internal virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request);
    public virtual Task`1<RegisterTransitGatewayMulticastGroupMembersResponse> RegisterTransitGatewayMulticastGroupMembersAsync(RegisterTransitGatewayMulticastGroupMembersRequest request, CancellationToken cancellationToken);
    internal virtual RegisterTransitGatewayMulticastGroupSourcesResponse RegisterTransitGatewayMulticastGroupSources(RegisterTransitGatewayMulticastGroupSourcesRequest request);
    public virtual Task`1<RegisterTransitGatewayMulticastGroupSourcesResponse> RegisterTransitGatewayMulticastGroupSourcesAsync(RegisterTransitGatewayMulticastGroupSourcesRequest request, CancellationToken cancellationToken);
    internal virtual RejectTransitGatewayMulticastDomainAssociationsResponse RejectTransitGatewayMulticastDomainAssociations(RejectTransitGatewayMulticastDomainAssociationsRequest request);
    public virtual Task`1<RejectTransitGatewayMulticastDomainAssociationsResponse> RejectTransitGatewayMulticastDomainAssociationsAsync(RejectTransitGatewayMulticastDomainAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual RejectTransitGatewayPeeringAttachmentResponse RejectTransitGatewayPeeringAttachment(RejectTransitGatewayPeeringAttachmentRequest request);
    public virtual Task`1<RejectTransitGatewayPeeringAttachmentResponse> RejectTransitGatewayPeeringAttachmentAsync(RejectTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual RejectTransitGatewayVpcAttachmentResponse RejectTransitGatewayVpcAttachment(RejectTransitGatewayVpcAttachmentRequest request);
    public virtual Task`1<RejectTransitGatewayVpcAttachmentResponse> RejectTransitGatewayVpcAttachmentAsync(RejectTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    internal virtual RejectVpcEndpointConnectionsResponse RejectVpcEndpointConnections(RejectVpcEndpointConnectionsRequest request);
    public virtual Task`1<RejectVpcEndpointConnectionsResponse> RejectVpcEndpointConnectionsAsync(RejectVpcEndpointConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual RejectVpcPeeringConnectionResponse RejectVpcPeeringConnection(RejectVpcPeeringConnectionRequest request);
    public virtual Task`1<RejectVpcPeeringConnectionResponse> RejectVpcPeeringConnectionAsync(RejectVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal virtual ReleaseAddressResponse ReleaseAddress(ReleaseAddressRequest request);
    public virtual Task`1<ReleaseAddressResponse> ReleaseAddressAsync(ReleaseAddressRequest request, CancellationToken cancellationToken);
    internal virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request);
    public virtual Task`1<ReleaseHostsResponse> ReleaseHostsAsync(ReleaseHostsRequest request, CancellationToken cancellationToken);
    internal virtual ReleaseIpamPoolAllocationResponse ReleaseIpamPoolAllocation(ReleaseIpamPoolAllocationRequest request);
    public virtual Task`1<ReleaseIpamPoolAllocationResponse> ReleaseIpamPoolAllocationAsync(ReleaseIpamPoolAllocationRequest request, CancellationToken cancellationToken);
    internal virtual ReplaceIamInstanceProfileAssociationResponse ReplaceIamInstanceProfileAssociation(ReplaceIamInstanceProfileAssociationRequest request);
    public virtual Task`1<ReplaceIamInstanceProfileAssociationResponse> ReplaceIamInstanceProfileAssociationAsync(ReplaceIamInstanceProfileAssociationRequest request, CancellationToken cancellationToken);
    internal virtual ReplaceNetworkAclAssociationResponse ReplaceNetworkAclAssociation(ReplaceNetworkAclAssociationRequest request);
    public virtual Task`1<ReplaceNetworkAclAssociationResponse> ReplaceNetworkAclAssociationAsync(ReplaceNetworkAclAssociationRequest request, CancellationToken cancellationToken);
    internal virtual ReplaceNetworkAclEntryResponse ReplaceNetworkAclEntry(ReplaceNetworkAclEntryRequest request);
    public virtual Task`1<ReplaceNetworkAclEntryResponse> ReplaceNetworkAclEntryAsync(ReplaceNetworkAclEntryRequest request, CancellationToken cancellationToken);
    internal virtual ReplaceRouteResponse ReplaceRoute(ReplaceRouteRequest request);
    public virtual Task`1<ReplaceRouteResponse> ReplaceRouteAsync(ReplaceRouteRequest request, CancellationToken cancellationToken);
    internal virtual ReplaceRouteTableAssociationResponse ReplaceRouteTableAssociation(ReplaceRouteTableAssociationRequest request);
    public virtual Task`1<ReplaceRouteTableAssociationResponse> ReplaceRouteTableAssociationAsync(ReplaceRouteTableAssociationRequest request, CancellationToken cancellationToken);
    internal virtual ReplaceTransitGatewayRouteResponse ReplaceTransitGatewayRoute(ReplaceTransitGatewayRouteRequest request);
    public virtual Task`1<ReplaceTransitGatewayRouteResponse> ReplaceTransitGatewayRouteAsync(ReplaceTransitGatewayRouteRequest request, CancellationToken cancellationToken);
    internal virtual ReplaceVpnTunnelResponse ReplaceVpnTunnel(ReplaceVpnTunnelRequest request);
    public virtual Task`1<ReplaceVpnTunnelResponse> ReplaceVpnTunnelAsync(ReplaceVpnTunnelRequest request, CancellationToken cancellationToken);
    internal virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request);
    public virtual Task`1<ReportInstanceStatusResponse> ReportInstanceStatusAsync(ReportInstanceStatusRequest request, CancellationToken cancellationToken);
    internal virtual RequestSpotFleetResponse RequestSpotFleet(RequestSpotFleetRequest request);
    public virtual Task`1<RequestSpotFleetResponse> RequestSpotFleetAsync(RequestSpotFleetRequest request, CancellationToken cancellationToken);
    internal virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request);
    public virtual Task`1<RequestSpotInstancesResponse> RequestSpotInstancesAsync(RequestSpotInstancesRequest request, CancellationToken cancellationToken);
    internal virtual ResetAddressAttributeResponse ResetAddressAttribute(ResetAddressAttributeRequest request);
    public virtual Task`1<ResetAddressAttributeResponse> ResetAddressAttributeAsync(ResetAddressAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ResetEbsDefaultKmsKeyIdResponse ResetEbsDefaultKmsKeyId(ResetEbsDefaultKmsKeyIdRequest request);
    public virtual Task`1<ResetEbsDefaultKmsKeyIdResponse> ResetEbsDefaultKmsKeyIdAsync(ResetEbsDefaultKmsKeyIdRequest request, CancellationToken cancellationToken);
    internal virtual ResetFpgaImageAttributeResponse ResetFpgaImageAttribute(ResetFpgaImageAttributeRequest request);
    public virtual Task`1<ResetFpgaImageAttributeResponse> ResetFpgaImageAttributeAsync(ResetFpgaImageAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ResetImageAttributeResponse ResetImageAttribute(ResetImageAttributeRequest request);
    public virtual Task`1<ResetImageAttributeResponse> ResetImageAttributeAsync(ResetImageAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ResetInstanceAttributeResponse ResetInstanceAttribute(ResetInstanceAttributeRequest request);
    public virtual Task`1<ResetInstanceAttributeResponse> ResetInstanceAttributeAsync(ResetInstanceAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ResetNetworkInterfaceAttributeResponse ResetNetworkInterfaceAttribute(ResetNetworkInterfaceAttributeRequest request);
    public virtual Task`1<ResetNetworkInterfaceAttributeResponse> ResetNetworkInterfaceAttributeAsync(ResetNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ResetSnapshotAttributeResponse ResetSnapshotAttribute(ResetSnapshotAttributeRequest request);
    public virtual Task`1<ResetSnapshotAttributeResponse> ResetSnapshotAttributeAsync(ResetSnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal virtual RestoreAddressToClassicResponse RestoreAddressToClassic(RestoreAddressToClassicRequest request);
    public virtual Task`1<RestoreAddressToClassicResponse> RestoreAddressToClassicAsync(RestoreAddressToClassicRequest request, CancellationToken cancellationToken);
    internal virtual RestoreImageFromRecycleBinResponse RestoreImageFromRecycleBin(RestoreImageFromRecycleBinRequest request);
    public virtual Task`1<RestoreImageFromRecycleBinResponse> RestoreImageFromRecycleBinAsync(RestoreImageFromRecycleBinRequest request, CancellationToken cancellationToken);
    internal virtual RestoreManagedPrefixListVersionResponse RestoreManagedPrefixListVersion(RestoreManagedPrefixListVersionRequest request);
    public virtual Task`1<RestoreManagedPrefixListVersionResponse> RestoreManagedPrefixListVersionAsync(RestoreManagedPrefixListVersionRequest request, CancellationToken cancellationToken);
    internal virtual RestoreSnapshotFromRecycleBinResponse RestoreSnapshotFromRecycleBin(RestoreSnapshotFromRecycleBinRequest request);
    public virtual Task`1<RestoreSnapshotFromRecycleBinResponse> RestoreSnapshotFromRecycleBinAsync(RestoreSnapshotFromRecycleBinRequest request, CancellationToken cancellationToken);
    internal virtual RestoreSnapshotTierResponse RestoreSnapshotTier(RestoreSnapshotTierRequest request);
    public virtual Task`1<RestoreSnapshotTierResponse> RestoreSnapshotTierAsync(RestoreSnapshotTierRequest request, CancellationToken cancellationToken);
    internal virtual RevokeClientVpnIngressResponse RevokeClientVpnIngress(RevokeClientVpnIngressRequest request);
    public virtual Task`1<RevokeClientVpnIngressResponse> RevokeClientVpnIngressAsync(RevokeClientVpnIngressRequest request, CancellationToken cancellationToken);
    internal virtual RevokeSecurityGroupEgressResponse RevokeSecurityGroupEgress(RevokeSecurityGroupEgressRequest request);
    public virtual Task`1<RevokeSecurityGroupEgressResponse> RevokeSecurityGroupEgressAsync(RevokeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    internal virtual RevokeSecurityGroupIngressResponse RevokeSecurityGroupIngress(RevokeSecurityGroupIngressRequest request);
    public virtual Task`1<RevokeSecurityGroupIngressResponse> RevokeSecurityGroupIngressAsync(RevokeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    internal virtual RunInstancesResponse RunInstances(RunInstancesRequest request);
    public virtual Task`1<RunInstancesResponse> RunInstancesAsync(RunInstancesRequest request, CancellationToken cancellationToken);
    internal virtual RunScheduledInstancesResponse RunScheduledInstances(RunScheduledInstancesRequest request);
    public virtual Task`1<RunScheduledInstancesResponse> RunScheduledInstancesAsync(RunScheduledInstancesRequest request, CancellationToken cancellationToken);
    internal virtual SearchLocalGatewayRoutesResponse SearchLocalGatewayRoutes(SearchLocalGatewayRoutesRequest request);
    public virtual Task`1<SearchLocalGatewayRoutesResponse> SearchLocalGatewayRoutesAsync(SearchLocalGatewayRoutesRequest request, CancellationToken cancellationToken);
    internal virtual SearchTransitGatewayMulticastGroupsResponse SearchTransitGatewayMulticastGroups(SearchTransitGatewayMulticastGroupsRequest request);
    public virtual Task`1<SearchTransitGatewayMulticastGroupsResponse> SearchTransitGatewayMulticastGroupsAsync(SearchTransitGatewayMulticastGroupsRequest request, CancellationToken cancellationToken);
    internal virtual SearchTransitGatewayRoutesResponse SearchTransitGatewayRoutes(SearchTransitGatewayRoutesRequest request);
    public virtual Task`1<SearchTransitGatewayRoutesResponse> SearchTransitGatewayRoutesAsync(SearchTransitGatewayRoutesRequest request, CancellationToken cancellationToken);
    internal virtual SendDiagnosticInterruptResponse SendDiagnosticInterrupt(SendDiagnosticInterruptRequest request);
    public virtual Task`1<SendDiagnosticInterruptResponse> SendDiagnosticInterruptAsync(SendDiagnosticInterruptRequest request, CancellationToken cancellationToken);
    internal virtual StartInstancesResponse StartInstances(StartInstancesRequest request);
    public virtual Task`1<StartInstancesResponse> StartInstancesAsync(StartInstancesRequest request, CancellationToken cancellationToken);
    internal virtual StartNetworkInsightsAccessScopeAnalysisResponse StartNetworkInsightsAccessScopeAnalysis(StartNetworkInsightsAccessScopeAnalysisRequest request);
    public virtual Task`1<StartNetworkInsightsAccessScopeAnalysisResponse> StartNetworkInsightsAccessScopeAnalysisAsync(StartNetworkInsightsAccessScopeAnalysisRequest request, CancellationToken cancellationToken);
    internal virtual StartNetworkInsightsAnalysisResponse StartNetworkInsightsAnalysis(StartNetworkInsightsAnalysisRequest request);
    public virtual Task`1<StartNetworkInsightsAnalysisResponse> StartNetworkInsightsAnalysisAsync(StartNetworkInsightsAnalysisRequest request, CancellationToken cancellationToken);
    internal virtual StartVpcEndpointServicePrivateDnsVerificationResponse StartVpcEndpointServicePrivateDnsVerification(StartVpcEndpointServicePrivateDnsVerificationRequest request);
    public virtual Task`1<StartVpcEndpointServicePrivateDnsVerificationResponse> StartVpcEndpointServicePrivateDnsVerificationAsync(StartVpcEndpointServicePrivateDnsVerificationRequest request, CancellationToken cancellationToken);
    internal virtual StopInstancesResponse StopInstances(StopInstancesRequest request);
    public virtual Task`1<StopInstancesResponse> StopInstancesAsync(StopInstancesRequest request, CancellationToken cancellationToken);
    internal virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request);
    public virtual Task`1<TerminateClientVpnConnectionsResponse> TerminateClientVpnConnectionsAsync(TerminateClientVpnConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual TerminateInstancesResponse TerminateInstances(TerminateInstancesRequest request);
    public virtual Task`1<TerminateInstancesResponse> TerminateInstancesAsync(TerminateInstancesRequest request, CancellationToken cancellationToken);
    internal virtual UnassignIpv6AddressesResponse UnassignIpv6Addresses(UnassignIpv6AddressesRequest request);
    public virtual Task`1<UnassignIpv6AddressesResponse> UnassignIpv6AddressesAsync(UnassignIpv6AddressesRequest request, CancellationToken cancellationToken);
    internal virtual UnassignPrivateIpAddressesResponse UnassignPrivateIpAddresses(UnassignPrivateIpAddressesRequest request);
    public virtual Task`1<UnassignPrivateIpAddressesResponse> UnassignPrivateIpAddressesAsync(UnassignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    internal virtual UnassignPrivateNatGatewayAddressResponse UnassignPrivateNatGatewayAddress(UnassignPrivateNatGatewayAddressRequest request);
    public virtual Task`1<UnassignPrivateNatGatewayAddressResponse> UnassignPrivateNatGatewayAddressAsync(UnassignPrivateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    internal virtual UnlockSnapshotResponse UnlockSnapshot(UnlockSnapshotRequest request);
    public virtual Task`1<UnlockSnapshotResponse> UnlockSnapshotAsync(UnlockSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual UnmonitorInstancesResponse UnmonitorInstances(UnmonitorInstancesRequest request);
    public virtual Task`1<UnmonitorInstancesResponse> UnmonitorInstancesAsync(UnmonitorInstancesRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSecurityGroupRuleDescriptionsEgressResponse UpdateSecurityGroupRuleDescriptionsEgress(UpdateSecurityGroupRuleDescriptionsEgressRequest request);
    public virtual Task`1<UpdateSecurityGroupRuleDescriptionsEgressResponse> UpdateSecurityGroupRuleDescriptionsEgressAsync(UpdateSecurityGroupRuleDescriptionsEgressRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSecurityGroupRuleDescriptionsIngressResponse UpdateSecurityGroupRuleDescriptionsIngress(UpdateSecurityGroupRuleDescriptionsIngressRequest request);
    public virtual Task`1<UpdateSecurityGroupRuleDescriptionsIngressResponse> UpdateSecurityGroupRuleDescriptionsIngressAsync(UpdateSecurityGroupRuleDescriptionsIngressRequest request, CancellationToken cancellationToken);
    internal virtual WithdrawByoipCidrResponse WithdrawByoipCidr(WithdrawByoipCidrRequest request);
    public virtual Task`1<WithdrawByoipCidrResponse> WithdrawByoipCidrAsync(WithdrawByoipCidrRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.EC2.AmazonEC2Config : ClientConfig {
    private static string UserAgentString;
    private static AmazonEC2EndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonEC2Config();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.EC2.AmazonEC2DefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonEC2DefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.EC2.AmazonEC2Exception : AmazonServiceException {
    public AmazonEC2Exception(string message);
    public AmazonEC2Exception(string message, Exception innerException);
    public AmazonEC2Exception(Exception innerException);
    public AmazonEC2Exception(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonEC2Exception(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.EC2.AmazonEC2Request : AmazonWebServiceRequest {
}
public class Amazon.EC2.AmdSevSnpSpecification : ConstantClass {
    public static AmdSevSnpSpecification Disabled;
    public static AmdSevSnpSpecification Enabled;
    public AmdSevSnpSpecification(string value);
    private static AmdSevSnpSpecification();
    public static AmdSevSnpSpecification FindValue(string value);
    public static AmdSevSnpSpecification op_Implicit(string value);
}
public class Amazon.EC2.AnalysisStatus : ConstantClass {
    public static AnalysisStatus Failed;
    public static AnalysisStatus Running;
    public static AnalysisStatus Succeeded;
    public AnalysisStatus(string value);
    private static AnalysisStatus();
    public static AnalysisStatus FindValue(string value);
    public static AnalysisStatus op_Implicit(string value);
}
public class Amazon.EC2.ApplianceModeSupportValue : ConstantClass {
    public static ApplianceModeSupportValue Disable;
    public static ApplianceModeSupportValue Enable;
    public ApplianceModeSupportValue(string value);
    private static ApplianceModeSupportValue();
    public static ApplianceModeSupportValue FindValue(string value);
    public static ApplianceModeSupportValue op_Implicit(string value);
}
public class Amazon.EC2.ArchitectureType : ConstantClass {
    public static ArchitectureType Arm64;
    public static ArchitectureType Arm64_mac;
    public static ArchitectureType I386;
    public static ArchitectureType X86_64;
    public static ArchitectureType X86_64_mac;
    public ArchitectureType(string value);
    private static ArchitectureType();
    public static ArchitectureType FindValue(string value);
    public static ArchitectureType op_Implicit(string value);
}
public class Amazon.EC2.ArchitectureValues : ConstantClass {
    public static ArchitectureValues Arm64;
    public static ArchitectureValues Arm64_mac;
    public static ArchitectureValues I386;
    public static ArchitectureValues X86_64;
    public static ArchitectureValues X86_64_mac;
    public ArchitectureValues(string value);
    private static ArchitectureValues();
    public static ArchitectureValues FindValue(string value);
    public static ArchitectureValues op_Implicit(string value);
}
public class Amazon.EC2.AsnAssociationState : ConstantClass {
    public static AsnAssociationState Associated;
    public static AsnAssociationState Disassociated;
    public static AsnAssociationState FailedAssociation;
    public static AsnAssociationState FailedDisassociation;
    public static AsnAssociationState PendingAssociation;
    public static AsnAssociationState PendingDisassociation;
    public AsnAssociationState(string value);
    private static AsnAssociationState();
    public static AsnAssociationState FindValue(string value);
    public static AsnAssociationState op_Implicit(string value);
}
public class Amazon.EC2.AsnState : ConstantClass {
    public static AsnState Deprovisioned;
    public static AsnState FailedDeprovision;
    public static AsnState FailedProvision;
    public static AsnState PendingDeprovision;
    public static AsnState PendingProvision;
    public static AsnState Provisioned;
    public AsnState(string value);
    private static AsnState();
    public static AsnState FindValue(string value);
    public static AsnState op_Implicit(string value);
}
public class Amazon.EC2.AssociatedNetworkType : ConstantClass {
    public static AssociatedNetworkType Vpc;
    public AssociatedNetworkType(string value);
    private static AssociatedNetworkType();
    public static AssociatedNetworkType FindValue(string value);
    public static AssociatedNetworkType op_Implicit(string value);
}
public class Amazon.EC2.AssociationStatusCode : ConstantClass {
    public static AssociationStatusCode Associated;
    public static AssociationStatusCode Associating;
    public static AssociationStatusCode AssociationFailed;
    public static AssociationStatusCode Disassociated;
    public static AssociationStatusCode Disassociating;
    public AssociationStatusCode(string value);
    private static AssociationStatusCode();
    public static AssociationStatusCode FindValue(string value);
    public static AssociationStatusCode op_Implicit(string value);
}
public class Amazon.EC2.AttachmentStatus : ConstantClass {
    public static AttachmentStatus Attached;
    public static AttachmentStatus Attaching;
    public static AttachmentStatus Detached;
    public static AttachmentStatus Detaching;
    public AttachmentStatus(string value);
    private static AttachmentStatus();
    public static AttachmentStatus FindValue(string value);
    public static AttachmentStatus op_Implicit(string value);
}
public class Amazon.EC2.AutoAcceptSharedAssociationsValue : ConstantClass {
    public static AutoAcceptSharedAssociationsValue Disable;
    public static AutoAcceptSharedAssociationsValue Enable;
    public AutoAcceptSharedAssociationsValue(string value);
    private static AutoAcceptSharedAssociationsValue();
    public static AutoAcceptSharedAssociationsValue FindValue(string value);
    public static AutoAcceptSharedAssociationsValue op_Implicit(string value);
}
public class Amazon.EC2.AutoAcceptSharedAttachmentsValue : ConstantClass {
    public static AutoAcceptSharedAttachmentsValue Disable;
    public static AutoAcceptSharedAttachmentsValue Enable;
    public AutoAcceptSharedAttachmentsValue(string value);
    private static AutoAcceptSharedAttachmentsValue();
    public static AutoAcceptSharedAttachmentsValue FindValue(string value);
    public static AutoAcceptSharedAttachmentsValue op_Implicit(string value);
}
public class Amazon.EC2.AutoPlacement : ConstantClass {
    public static AutoPlacement Off;
    public static AutoPlacement On;
    public AutoPlacement(string value);
    private static AutoPlacement();
    public static AutoPlacement FindValue(string value);
    public static AutoPlacement op_Implicit(string value);
}
public class Amazon.EC2.AvailabilityZoneOptInStatus : ConstantClass {
    public static AvailabilityZoneOptInStatus NotOptedIn;
    public static AvailabilityZoneOptInStatus OptedIn;
    public static AvailabilityZoneOptInStatus OptInNotRequired;
    public AvailabilityZoneOptInStatus(string value);
    private static AvailabilityZoneOptInStatus();
    public static AvailabilityZoneOptInStatus FindValue(string value);
    public static AvailabilityZoneOptInStatus op_Implicit(string value);
}
public class Amazon.EC2.AvailabilityZoneState : ConstantClass {
    public static AvailabilityZoneState Available;
    public static AvailabilityZoneState Constrained;
    public static AvailabilityZoneState Impaired;
    public static AvailabilityZoneState Information;
    public static AvailabilityZoneState Unavailable;
    public AvailabilityZoneState(string value);
    private static AvailabilityZoneState();
    public static AvailabilityZoneState FindValue(string value);
    public static AvailabilityZoneState op_Implicit(string value);
}
public class Amazon.EC2.BareMetal : ConstantClass {
    public static BareMetal Excluded;
    public static BareMetal Included;
    public static BareMetal Required;
    public BareMetal(string value);
    private static BareMetal();
    public static BareMetal FindValue(string value);
    public static BareMetal op_Implicit(string value);
}
public class Amazon.EC2.BatchState : ConstantClass {
    public static BatchState Active;
    public static BatchState Cancelled;
    public static BatchState Cancelled_running;
    public static BatchState Cancelled_terminating;
    public static BatchState Failed;
    public static BatchState Modifying;
    public static BatchState Submitted;
    public BatchState(string value);
    private static BatchState();
    public static BatchState FindValue(string value);
    public static BatchState op_Implicit(string value);
}
public class Amazon.EC2.BgpStatus : ConstantClass {
    public static BgpStatus Down;
    public static BgpStatus Up;
    public BgpStatus(string value);
    private static BgpStatus();
    public static BgpStatus FindValue(string value);
    public static BgpStatus op_Implicit(string value);
}
public class Amazon.EC2.BootModeType : ConstantClass {
    public static BootModeType LegacyBios;
    public static BootModeType Uefi;
    public BootModeType(string value);
    private static BootModeType();
    public static BootModeType FindValue(string value);
    public static BootModeType op_Implicit(string value);
}
public class Amazon.EC2.BootModeValues : ConstantClass {
    public static BootModeValues LegacyBios;
    public static BootModeValues Uefi;
    public static BootModeValues UefiPreferred;
    public BootModeValues(string value);
    private static BootModeValues();
    public static BootModeValues FindValue(string value);
    public static BootModeValues op_Implicit(string value);
}
public class Amazon.EC2.BundleTaskState : ConstantClass {
    public static BundleTaskState Bundling;
    public static BundleTaskState Cancelling;
    public static BundleTaskState Complete;
    public static BundleTaskState Failed;
    public static BundleTaskState Pending;
    public static BundleTaskState Storing;
    public static BundleTaskState WaitingForShutdown;
    public BundleTaskState(string value);
    private static BundleTaskState();
    public static BundleTaskState FindValue(string value);
    public static BundleTaskState op_Implicit(string value);
}
public class Amazon.EC2.BurstablePerformance : ConstantClass {
    public static BurstablePerformance Excluded;
    public static BurstablePerformance Included;
    public static BurstablePerformance Required;
    public BurstablePerformance(string value);
    private static BurstablePerformance();
    public static BurstablePerformance FindValue(string value);
    public static BurstablePerformance op_Implicit(string value);
}
public class Amazon.EC2.ByoipCidrState : ConstantClass {
    public static ByoipCidrState Advertised;
    public static ByoipCidrState Deprovisioned;
    public static ByoipCidrState FailedDeprovision;
    public static ByoipCidrState FailedProvision;
    public static ByoipCidrState PendingDeprovision;
    public static ByoipCidrState PendingProvision;
    public static ByoipCidrState Provisioned;
    public static ByoipCidrState ProvisionedNotPubliclyAdvertisable;
    public ByoipCidrState(string value);
    private static ByoipCidrState();
    public static ByoipCidrState FindValue(string value);
    public static ByoipCidrState op_Implicit(string value);
}
public class Amazon.EC2.CancelBatchErrorCode : ConstantClass {
    public static CancelBatchErrorCode FleetRequestIdDoesNotExist;
    public static CancelBatchErrorCode FleetRequestIdMalformed;
    public static CancelBatchErrorCode FleetRequestNotInCancellableState;
    public static CancelBatchErrorCode UnexpectedError;
    public CancelBatchErrorCode(string value);
    private static CancelBatchErrorCode();
    public static CancelBatchErrorCode FindValue(string value);
    public static CancelBatchErrorCode op_Implicit(string value);
}
public class Amazon.EC2.CancelSpotInstanceRequestState : ConstantClass {
    public static CancelSpotInstanceRequestState Active;
    public static CancelSpotInstanceRequestState Cancelled;
    public static CancelSpotInstanceRequestState Closed;
    public static CancelSpotInstanceRequestState Completed;
    public static CancelSpotInstanceRequestState Open;
    public CancelSpotInstanceRequestState(string value);
    private static CancelSpotInstanceRequestState();
    public static CancelSpotInstanceRequestState FindValue(string value);
    public static CancelSpotInstanceRequestState op_Implicit(string value);
}
public class Amazon.EC2.CapacityReservationFleetState : ConstantClass {
    public static CapacityReservationFleetState Active;
    public static CapacityReservationFleetState Cancelled;
    public static CapacityReservationFleetState Cancelling;
    public static CapacityReservationFleetState Expired;
    public static CapacityReservationFleetState Expiring;
    public static CapacityReservationFleetState Failed;
    public static CapacityReservationFleetState Modifying;
    public static CapacityReservationFleetState Partially_fulfilled;
    public static CapacityReservationFleetState Submitted;
    public CapacityReservationFleetState(string value);
    private static CapacityReservationFleetState();
    public static CapacityReservationFleetState FindValue(string value);
    public static CapacityReservationFleetState op_Implicit(string value);
}
public class Amazon.EC2.CapacityReservationInstancePlatform : ConstantClass {
    public static CapacityReservationInstancePlatform LinuxUNIX;
    public static CapacityReservationInstancePlatform LinuxWithSQLServerEnterprise;
    public static CapacityReservationInstancePlatform LinuxWithSQLServerStandard;
    public static CapacityReservationInstancePlatform LinuxWithSQLServerWeb;
    public static CapacityReservationInstancePlatform RedHatEnterpriseLinux;
    public static CapacityReservationInstancePlatform RHELWithHA;
    public static CapacityReservationInstancePlatform RHELWithHAAndSQLServerEnterprise;
    public static CapacityReservationInstancePlatform RHELWithHAAndSQLServerStandard;
    public static CapacityReservationInstancePlatform RHELWithSQLServerEnterprise;
    public static CapacityReservationInstancePlatform RHELWithSQLServerStandard;
    public static CapacityReservationInstancePlatform RHELWithSQLServerWeb;
    public static CapacityReservationInstancePlatform SUSELinux;
    public static CapacityReservationInstancePlatform UbuntuPro;
    public static CapacityReservationInstancePlatform Windows;
    public static CapacityReservationInstancePlatform WindowsWithSQLServer;
    public static CapacityReservationInstancePlatform WindowsWithSQLServerEnterprise;
    public static CapacityReservationInstancePlatform WindowsWithSQLServerStandard;
    public static CapacityReservationInstancePlatform WindowsWithSQLServerWeb;
    public CapacityReservationInstancePlatform(string value);
    private static CapacityReservationInstancePlatform();
    public static CapacityReservationInstancePlatform FindValue(string value);
    public static CapacityReservationInstancePlatform op_Implicit(string value);
}
public class Amazon.EC2.CapacityReservationPreference : ConstantClass {
    public static CapacityReservationPreference None;
    public static CapacityReservationPreference Open;
    public CapacityReservationPreference(string value);
    private static CapacityReservationPreference();
    public static CapacityReservationPreference FindValue(string value);
    public static CapacityReservationPreference op_Implicit(string value);
}
public class Amazon.EC2.CapacityReservationState : ConstantClass {
    public static CapacityReservationState Active;
    public static CapacityReservationState Cancelled;
    public static CapacityReservationState Expired;
    public static CapacityReservationState Failed;
    public static CapacityReservationState PaymentFailed;
    public static CapacityReservationState PaymentPending;
    public static CapacityReservationState Pending;
    public static CapacityReservationState Scheduled;
    public CapacityReservationState(string value);
    private static CapacityReservationState();
    public static CapacityReservationState FindValue(string value);
    public static CapacityReservationState op_Implicit(string value);
}
public class Amazon.EC2.CapacityReservationTenancy : ConstantClass {
    public static CapacityReservationTenancy Dedicated;
    public static CapacityReservationTenancy Default;
    public CapacityReservationTenancy(string value);
    private static CapacityReservationTenancy();
    public static CapacityReservationTenancy FindValue(string value);
    public static CapacityReservationTenancy op_Implicit(string value);
}
public class Amazon.EC2.CapacityReservationType : ConstantClass {
    public static CapacityReservationType CapacityBlock;
    public static CapacityReservationType Default;
    public CapacityReservationType(string value);
    private static CapacityReservationType();
    public static CapacityReservationType FindValue(string value);
    public static CapacityReservationType op_Implicit(string value);
}
public class Amazon.EC2.CarrierGatewayState : ConstantClass {
    public static CarrierGatewayState Available;
    public static CarrierGatewayState Deleted;
    public static CarrierGatewayState Deleting;
    public static CarrierGatewayState Pending;
    public CarrierGatewayState(string value);
    private static CarrierGatewayState();
    public static CarrierGatewayState FindValue(string value);
    public static CarrierGatewayState op_Implicit(string value);
}
public class Amazon.EC2.ClientCertificateRevocationListStatusCode : ConstantClass {
    public static ClientCertificateRevocationListStatusCode Active;
    public static ClientCertificateRevocationListStatusCode Pending;
    public ClientCertificateRevocationListStatusCode(string value);
    private static ClientCertificateRevocationListStatusCode();
    public static ClientCertificateRevocationListStatusCode FindValue(string value);
    public static ClientCertificateRevocationListStatusCode op_Implicit(string value);
}
public class Amazon.EC2.ClientVpnAuthenticationType : ConstantClass {
    public static ClientVpnAuthenticationType CertificateAuthentication;
    public static ClientVpnAuthenticationType DirectoryServiceAuthentication;
    public static ClientVpnAuthenticationType FederatedAuthentication;
    public ClientVpnAuthenticationType(string value);
    private static ClientVpnAuthenticationType();
    public static ClientVpnAuthenticationType FindValue(string value);
    public static ClientVpnAuthenticationType op_Implicit(string value);
}
public class Amazon.EC2.ClientVpnAuthorizationRuleStatusCode : ConstantClass {
    public static ClientVpnAuthorizationRuleStatusCode Active;
    public static ClientVpnAuthorizationRuleStatusCode Authorizing;
    public static ClientVpnAuthorizationRuleStatusCode Failed;
    public static ClientVpnAuthorizationRuleStatusCode Revoking;
    public ClientVpnAuthorizationRuleStatusCode(string value);
    private static ClientVpnAuthorizationRuleStatusCode();
    public static ClientVpnAuthorizationRuleStatusCode FindValue(string value);
    public static ClientVpnAuthorizationRuleStatusCode op_Implicit(string value);
}
public class Amazon.EC2.ClientVpnConnectionStatusCode : ConstantClass {
    public static ClientVpnConnectionStatusCode Active;
    public static ClientVpnConnectionStatusCode FailedToTerminate;
    public static ClientVpnConnectionStatusCode Terminated;
    public static ClientVpnConnectionStatusCode Terminating;
    public ClientVpnConnectionStatusCode(string value);
    private static ClientVpnConnectionStatusCode();
    public static ClientVpnConnectionStatusCode FindValue(string value);
    public static ClientVpnConnectionStatusCode op_Implicit(string value);
}
public class Amazon.EC2.ClientVpnEndpointAttributeStatusCode : ConstantClass {
    public static ClientVpnEndpointAttributeStatusCode Applied;
    public static ClientVpnEndpointAttributeStatusCode Applying;
    public ClientVpnEndpointAttributeStatusCode(string value);
    private static ClientVpnEndpointAttributeStatusCode();
    public static ClientVpnEndpointAttributeStatusCode FindValue(string value);
    public static ClientVpnEndpointAttributeStatusCode op_Implicit(string value);
}
public class Amazon.EC2.ClientVpnEndpointStatusCode : ConstantClass {
    public static ClientVpnEndpointStatusCode Available;
    public static ClientVpnEndpointStatusCode Deleted;
    public static ClientVpnEndpointStatusCode Deleting;
    public static ClientVpnEndpointStatusCode PendingAssociate;
    public ClientVpnEndpointStatusCode(string value);
    private static ClientVpnEndpointStatusCode();
    public static ClientVpnEndpointStatusCode FindValue(string value);
    public static ClientVpnEndpointStatusCode op_Implicit(string value);
}
public class Amazon.EC2.ClientVpnRouteStatusCode : ConstantClass {
    public static ClientVpnRouteStatusCode Active;
    public static ClientVpnRouteStatusCode Creating;
    public static ClientVpnRouteStatusCode Deleting;
    public static ClientVpnRouteStatusCode Failed;
    public ClientVpnRouteStatusCode(string value);
    private static ClientVpnRouteStatusCode();
    public static ClientVpnRouteStatusCode FindValue(string value);
    public static ClientVpnRouteStatusCode op_Implicit(string value);
}
public class Amazon.EC2.ConnectionNotificationState : ConstantClass {
    public static ConnectionNotificationState Disabled;
    public static ConnectionNotificationState Enabled;
    public ConnectionNotificationState(string value);
    private static ConnectionNotificationState();
    public static ConnectionNotificationState FindValue(string value);
    public static ConnectionNotificationState op_Implicit(string value);
}
public class Amazon.EC2.ConnectionNotificationType : ConstantClass {
    public static ConnectionNotificationType Topic;
    public ConnectionNotificationType(string value);
    private static ConnectionNotificationType();
    public static ConnectionNotificationType FindValue(string value);
    public static ConnectionNotificationType op_Implicit(string value);
}
public class Amazon.EC2.ConnectivityType : ConstantClass {
    public static ConnectivityType Private;
    public static ConnectivityType Public;
    public ConnectivityType(string value);
    private static ConnectivityType();
    public static ConnectivityType FindValue(string value);
    public static ConnectivityType op_Implicit(string value);
}
public class Amazon.EC2.ContainerFormat : ConstantClass {
    public static ContainerFormat Ova;
    public ContainerFormat(string value);
    private static ContainerFormat();
    public static ContainerFormat FindValue(string value);
    public static ContainerFormat op_Implicit(string value);
}
public class Amazon.EC2.ConversionTaskState : ConstantClass {
    public static ConversionTaskState Active;
    public static ConversionTaskState Cancelled;
    public static ConversionTaskState Cancelling;
    public static ConversionTaskState Completed;
    public ConversionTaskState(string value);
    private static ConversionTaskState();
    public static ConversionTaskState FindValue(string value);
    public static ConversionTaskState op_Implicit(string value);
}
public class Amazon.EC2.CopyTagsFromSource : ConstantClass {
    public static CopyTagsFromSource Volume;
    public CopyTagsFromSource(string value);
    private static CopyTagsFromSource();
    public static CopyTagsFromSource FindValue(string value);
    public static CopyTagsFromSource op_Implicit(string value);
}
public class Amazon.EC2.CpuManufacturer : ConstantClass {
    public static CpuManufacturer AmazonWebServices;
    public static CpuManufacturer Amd;
    public static CpuManufacturer Intel;
    public CpuManufacturer(string value);
    private static CpuManufacturer();
    public static CpuManufacturer FindValue(string value);
    public static CpuManufacturer op_Implicit(string value);
}
public class Amazon.EC2.CurrencyCodeValues : ConstantClass {
    public static CurrencyCodeValues USD;
    public CurrencyCodeValues(string value);
    private static CurrencyCodeValues();
    public static CurrencyCodeValues FindValue(string value);
    public static CurrencyCodeValues op_Implicit(string value);
}
public class Amazon.EC2.DatafeedSubscriptionState : ConstantClass {
    public static DatafeedSubscriptionState Active;
    public static DatafeedSubscriptionState Inactive;
    public DatafeedSubscriptionState(string value);
    private static DatafeedSubscriptionState();
    public static DatafeedSubscriptionState FindValue(string value);
    public static DatafeedSubscriptionState op_Implicit(string value);
}
public class Amazon.EC2.DefaultInstanceMetadataEndpointState : ConstantClass {
    public static DefaultInstanceMetadataEndpointState Disabled;
    public static DefaultInstanceMetadataEndpointState Enabled;
    public static DefaultInstanceMetadataEndpointState NoPreference;
    public DefaultInstanceMetadataEndpointState(string value);
    private static DefaultInstanceMetadataEndpointState();
    public static DefaultInstanceMetadataEndpointState FindValue(string value);
    public static DefaultInstanceMetadataEndpointState op_Implicit(string value);
}
public class Amazon.EC2.DefaultInstanceMetadataTagsState : ConstantClass {
    public static DefaultInstanceMetadataTagsState Disabled;
    public static DefaultInstanceMetadataTagsState Enabled;
    public static DefaultInstanceMetadataTagsState NoPreference;
    public DefaultInstanceMetadataTagsState(string value);
    private static DefaultInstanceMetadataTagsState();
    public static DefaultInstanceMetadataTagsState FindValue(string value);
    public static DefaultInstanceMetadataTagsState op_Implicit(string value);
}
public class Amazon.EC2.DefaultRouteTableAssociationValue : ConstantClass {
    public static DefaultRouteTableAssociationValue Disable;
    public static DefaultRouteTableAssociationValue Enable;
    public DefaultRouteTableAssociationValue(string value);
    private static DefaultRouteTableAssociationValue();
    public static DefaultRouteTableAssociationValue FindValue(string value);
    public static DefaultRouteTableAssociationValue op_Implicit(string value);
}
public class Amazon.EC2.DefaultRouteTablePropagationValue : ConstantClass {
    public static DefaultRouteTablePropagationValue Disable;
    public static DefaultRouteTablePropagationValue Enable;
    public DefaultRouteTablePropagationValue(string value);
    private static DefaultRouteTablePropagationValue();
    public static DefaultRouteTablePropagationValue FindValue(string value);
    public static DefaultRouteTablePropagationValue op_Implicit(string value);
}
public class Amazon.EC2.DefaultTargetCapacityType : ConstantClass {
    public static DefaultTargetCapacityType CapacityBlock;
    public static DefaultTargetCapacityType OnDemand;
    public static DefaultTargetCapacityType Spot;
    public DefaultTargetCapacityType(string value);
    private static DefaultTargetCapacityType();
    public static DefaultTargetCapacityType FindValue(string value);
    public static DefaultTargetCapacityType op_Implicit(string value);
}
public class Amazon.EC2.DeleteFleetErrorCode : ConstantClass {
    public static DeleteFleetErrorCode FleetIdDoesNotExist;
    public static DeleteFleetErrorCode FleetIdMalformed;
    public static DeleteFleetErrorCode FleetNotInDeletableState;
    public static DeleteFleetErrorCode UnexpectedError;
    public DeleteFleetErrorCode(string value);
    private static DeleteFleetErrorCode();
    public static DeleteFleetErrorCode FindValue(string value);
    public static DeleteFleetErrorCode op_Implicit(string value);
}
public class Amazon.EC2.DeleteQueuedReservedInstancesErrorCode : ConstantClass {
    public static DeleteQueuedReservedInstancesErrorCode ReservedInstancesIdInvalid;
    public static DeleteQueuedReservedInstancesErrorCode ReservedInstancesNotInQueuedState;
    public static DeleteQueuedReservedInstancesErrorCode UnexpectedError;
    public DeleteQueuedReservedInstancesErrorCode(string value);
    private static DeleteQueuedReservedInstancesErrorCode();
    public static DeleteQueuedReservedInstancesErrorCode FindValue(string value);
    public static DeleteQueuedReservedInstancesErrorCode op_Implicit(string value);
}
public class Amazon.EC2.DestinationFileFormat : ConstantClass {
    public static DestinationFileFormat Parquet;
    public static DestinationFileFormat PlainText;
    public DestinationFileFormat(string value);
    private static DestinationFileFormat();
    public static DestinationFileFormat FindValue(string value);
    public static DestinationFileFormat op_Implicit(string value);
}
public class Amazon.EC2.DeviceTrustProviderType : ConstantClass {
    public static DeviceTrustProviderType Crowdstrike;
    public static DeviceTrustProviderType Jamf;
    public static DeviceTrustProviderType Jumpcloud;
    public DeviceTrustProviderType(string value);
    private static DeviceTrustProviderType();
    public static DeviceTrustProviderType FindValue(string value);
    public static DeviceTrustProviderType op_Implicit(string value);
}
public class Amazon.EC2.DeviceType : ConstantClass {
    public static DeviceType Ebs;
    public static DeviceType InstanceStore;
    public DeviceType(string value);
    private static DeviceType();
    public static DeviceType FindValue(string value);
    public static DeviceType op_Implicit(string value);
}
public class Amazon.EC2.DiskImageFormat : ConstantClass {
    public static DiskImageFormat RAW;
    public static DiskImageFormat VHD;
    public static DiskImageFormat VMDK;
    public DiskImageFormat(string value);
    private static DiskImageFormat();
    public static DiskImageFormat FindValue(string value);
    public static DiskImageFormat op_Implicit(string value);
}
public class Amazon.EC2.DiskType : ConstantClass {
    public static DiskType Hdd;
    public static DiskType Ssd;
    public DiskType(string value);
    private static DiskType();
    public static DiskType FindValue(string value);
    public static DiskType op_Implicit(string value);
}
public class Amazon.EC2.DnsNameState : ConstantClass {
    public static DnsNameState Failed;
    public static DnsNameState PendingVerification;
    public static DnsNameState Verified;
    public DnsNameState(string value);
    private static DnsNameState();
    public static DnsNameState FindValue(string value);
    public static DnsNameState op_Implicit(string value);
}
public class Amazon.EC2.DnsRecordIpType : ConstantClass {
    public static DnsRecordIpType Dualstack;
    public static DnsRecordIpType Ipv4;
    public static DnsRecordIpType Ipv6;
    public static DnsRecordIpType ServiceDefined;
    public DnsRecordIpType(string value);
    private static DnsRecordIpType();
    public static DnsRecordIpType FindValue(string value);
    public static DnsRecordIpType op_Implicit(string value);
}
public class Amazon.EC2.DnsSupportValue : ConstantClass {
    public static DnsSupportValue Disable;
    public static DnsSupportValue Enable;
    public DnsSupportValue(string value);
    private static DnsSupportValue();
    public static DnsSupportValue FindValue(string value);
    public static DnsSupportValue op_Implicit(string value);
}
public class Amazon.EC2.DomainType : ConstantClass {
    public static DomainType Standard;
    public static DomainType Vpc;
    public DomainType(string value);
    private static DomainType();
    public static DomainType FindValue(string value);
    public static DomainType op_Implicit(string value);
}
public class Amazon.EC2.DynamicRoutingValue : ConstantClass {
    public static DynamicRoutingValue Disable;
    public static DynamicRoutingValue Enable;
    public DynamicRoutingValue(string value);
    private static DynamicRoutingValue();
    public static DynamicRoutingValue FindValue(string value);
    public static DynamicRoutingValue op_Implicit(string value);
}
public class Amazon.EC2.EbsEncryptionSupport : ConstantClass {
    public static EbsEncryptionSupport Supported;
    public static EbsEncryptionSupport Unsupported;
    public EbsEncryptionSupport(string value);
    private static EbsEncryptionSupport();
    public static EbsEncryptionSupport FindValue(string value);
    public static EbsEncryptionSupport op_Implicit(string value);
}
public class Amazon.EC2.EbsNvmeSupport : ConstantClass {
    public static EbsNvmeSupport Required;
    public static EbsNvmeSupport Supported;
    public static EbsNvmeSupport Unsupported;
    public EbsNvmeSupport(string value);
    private static EbsNvmeSupport();
    public static EbsNvmeSupport FindValue(string value);
    public static EbsNvmeSupport op_Implicit(string value);
}
public class Amazon.EC2.EbsOptimizedSupport : ConstantClass {
    public static EbsOptimizedSupport Default;
    public static EbsOptimizedSupport Supported;
    public static EbsOptimizedSupport Unsupported;
    public EbsOptimizedSupport(string value);
    private static EbsOptimizedSupport();
    public static EbsOptimizedSupport FindValue(string value);
    public static EbsOptimizedSupport op_Implicit(string value);
}
public class Amazon.EC2.Ec2InstanceConnectEndpointState : ConstantClass {
    public static Ec2InstanceConnectEndpointState CreateComplete;
    public static Ec2InstanceConnectEndpointState CreateFailed;
    public static Ec2InstanceConnectEndpointState CreateInProgress;
    public static Ec2InstanceConnectEndpointState DeleteComplete;
    public static Ec2InstanceConnectEndpointState DeleteFailed;
    public static Ec2InstanceConnectEndpointState DeleteInProgress;
    public Ec2InstanceConnectEndpointState(string value);
    private static Ec2InstanceConnectEndpointState();
    public static Ec2InstanceConnectEndpointState FindValue(string value);
    public static Ec2InstanceConnectEndpointState op_Implicit(string value);
}
public class Amazon.EC2.EkPubKeyFormat : ConstantClass {
    public static EkPubKeyFormat Der;
    public static EkPubKeyFormat Tpmt;
    public EkPubKeyFormat(string value);
    private static EkPubKeyFormat();
    public static EkPubKeyFormat FindValue(string value);
    public static EkPubKeyFormat op_Implicit(string value);
}
public class Amazon.EC2.EkPubKeyType : ConstantClass {
    public static EkPubKeyType EccSecP384;
    public static EkPubKeyType Rsa2048;
    public EkPubKeyType(string value);
    private static EkPubKeyType();
    public static EkPubKeyType FindValue(string value);
    public static EkPubKeyType op_Implicit(string value);
}
public class Amazon.EC2.ElasticGpuState : ConstantClass {
    public static ElasticGpuState ATTACHED;
    public ElasticGpuState(string value);
    private static ElasticGpuState();
    public static ElasticGpuState FindValue(string value);
    public static ElasticGpuState op_Implicit(string value);
}
public class Amazon.EC2.ElasticGpuStatus : ConstantClass {
    public static ElasticGpuStatus IMPAIRED;
    public static ElasticGpuStatus OK;
    public ElasticGpuStatus(string value);
    private static ElasticGpuStatus();
    public static ElasticGpuStatus FindValue(string value);
    public static ElasticGpuStatus op_Implicit(string value);
}
public class Amazon.EC2.EnaSupport : ConstantClass {
    public static EnaSupport Required;
    public static EnaSupport Supported;
    public static EnaSupport Unsupported;
    public EnaSupport(string value);
    private static EnaSupport();
    public static EnaSupport FindValue(string value);
    public static EnaSupport op_Implicit(string value);
}
public class Amazon.EC2.EndDateType : ConstantClass {
    public static EndDateType Limited;
    public static EndDateType Unlimited;
    public EndDateType(string value);
    private static EndDateType();
    public static EndDateType FindValue(string value);
    public static EndDateType op_Implicit(string value);
}
public class Amazon.EC2.Endpoints.EC2EndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.EC2.EphemeralNvmeSupport : ConstantClass {
    public static EphemeralNvmeSupport Required;
    public static EphemeralNvmeSupport Supported;
    public static EphemeralNvmeSupport Unsupported;
    public EphemeralNvmeSupport(string value);
    private static EphemeralNvmeSupport();
    public static EphemeralNvmeSupport FindValue(string value);
    public static EphemeralNvmeSupport op_Implicit(string value);
}
public class Amazon.EC2.EventCode : ConstantClass {
    public static EventCode InstanceReboot;
    public static EventCode InstanceRetirement;
    public static EventCode InstanceStop;
    public static EventCode SystemMaintenance;
    public static EventCode SystemReboot;
    public EventCode(string value);
    private static EventCode();
    public static EventCode FindValue(string value);
    public static EventCode op_Implicit(string value);
}
public class Amazon.EC2.EventType : ConstantClass {
    public static EventType Error;
    public static EventType FleetRequestChange;
    public static EventType Information;
    public static EventType InstanceChange;
    public EventType(string value);
    private static EventType();
    public static EventType FindValue(string value);
    public static EventType op_Implicit(string value);
}
public class Amazon.EC2.ExcessCapacityTerminationPolicy : ConstantClass {
    public static ExcessCapacityTerminationPolicy Default;
    public static ExcessCapacityTerminationPolicy NoTermination;
    public ExcessCapacityTerminationPolicy(string value);
    private static ExcessCapacityTerminationPolicy();
    public static ExcessCapacityTerminationPolicy FindValue(string value);
    public static ExcessCapacityTerminationPolicy op_Implicit(string value);
}
public class Amazon.EC2.ExportEnvironment : ConstantClass {
    public static ExportEnvironment Citrix;
    public static ExportEnvironment Microsoft;
    public static ExportEnvironment Vmware;
    public ExportEnvironment(string value);
    private static ExportEnvironment();
    public static ExportEnvironment FindValue(string value);
    public static ExportEnvironment op_Implicit(string value);
}
public class Amazon.EC2.ExportTaskState : ConstantClass {
    public static ExportTaskState Active;
    public static ExportTaskState Cancelled;
    public static ExportTaskState Cancelling;
    public static ExportTaskState Completed;
    public ExportTaskState(string value);
    private static ExportTaskState();
    public static ExportTaskState FindValue(string value);
    public static ExportTaskState op_Implicit(string value);
}
public class Amazon.EC2.FastLaunchResourceType : ConstantClass {
    public static FastLaunchResourceType Snapshot;
    public FastLaunchResourceType(string value);
    private static FastLaunchResourceType();
    public static FastLaunchResourceType FindValue(string value);
    public static FastLaunchResourceType op_Implicit(string value);
}
public class Amazon.EC2.FastLaunchStateCode : ConstantClass {
    public static FastLaunchStateCode Disabling;
    public static FastLaunchStateCode DisablingFailed;
    public static FastLaunchStateCode Enabled;
    public static FastLaunchStateCode EnabledFailed;
    public static FastLaunchStateCode Enabling;
    public static FastLaunchStateCode EnablingFailed;
    public FastLaunchStateCode(string value);
    private static FastLaunchStateCode();
    public static FastLaunchStateCode FindValue(string value);
    public static FastLaunchStateCode op_Implicit(string value);
}
public class Amazon.EC2.FastSnapshotRestoreStateCode : ConstantClass {
    public static FastSnapshotRestoreStateCode Disabled;
    public static FastSnapshotRestoreStateCode Disabling;
    public static FastSnapshotRestoreStateCode Enabled;
    public static FastSnapshotRestoreStateCode Enabling;
    public static FastSnapshotRestoreStateCode Optimizing;
    public FastSnapshotRestoreStateCode(string value);
    private static FastSnapshotRestoreStateCode();
    public static FastSnapshotRestoreStateCode FindValue(string value);
    public static FastSnapshotRestoreStateCode op_Implicit(string value);
}
public class Amazon.EC2.FindingsFound : ConstantClass {
    public static FindingsFound False;
    public static FindingsFound True;
    public static FindingsFound Unknown;
    public FindingsFound(string value);
    private static FindingsFound();
    public static FindingsFound FindValue(string value);
    public static FindingsFound op_Implicit(string value);
}
public class Amazon.EC2.FleetActivityStatus : ConstantClass {
    public static FleetActivityStatus Error;
    public static FleetActivityStatus Fulfilled;
    public static FleetActivityStatus Pending_fulfillment;
    public static FleetActivityStatus Pending_termination;
    public FleetActivityStatus(string value);
    private static FleetActivityStatus();
    public static FleetActivityStatus FindValue(string value);
    public static FleetActivityStatus op_Implicit(string value);
}
public class Amazon.EC2.FleetCapacityReservationTenancy : ConstantClass {
    public static FleetCapacityReservationTenancy Default;
    public FleetCapacityReservationTenancy(string value);
    private static FleetCapacityReservationTenancy();
    public static FleetCapacityReservationTenancy FindValue(string value);
    public static FleetCapacityReservationTenancy op_Implicit(string value);
}
public class Amazon.EC2.FleetCapacityReservationUsageStrategy : ConstantClass {
    public static FleetCapacityReservationUsageStrategy UseCapacityReservationsFirst;
    public FleetCapacityReservationUsageStrategy(string value);
    private static FleetCapacityReservationUsageStrategy();
    public static FleetCapacityReservationUsageStrategy FindValue(string value);
    public static FleetCapacityReservationUsageStrategy op_Implicit(string value);
}
public class Amazon.EC2.FleetEventType : ConstantClass {
    public static FleetEventType FleetChange;
    public static FleetEventType InstanceChange;
    public static FleetEventType ServiceError;
    public FleetEventType(string value);
    private static FleetEventType();
    public static FleetEventType FindValue(string value);
    public static FleetEventType op_Implicit(string value);
}
public class Amazon.EC2.FleetExcessCapacityTerminationPolicy : ConstantClass {
    public static FleetExcessCapacityTerminationPolicy NoTermination;
    public static FleetExcessCapacityTerminationPolicy Termination;
    public FleetExcessCapacityTerminationPolicy(string value);
    private static FleetExcessCapacityTerminationPolicy();
    public static FleetExcessCapacityTerminationPolicy FindValue(string value);
    public static FleetExcessCapacityTerminationPolicy op_Implicit(string value);
}
public class Amazon.EC2.FleetInstanceMatchCriteria : ConstantClass {
    public static FleetInstanceMatchCriteria Open;
    public FleetInstanceMatchCriteria(string value);
    private static FleetInstanceMatchCriteria();
    public static FleetInstanceMatchCriteria FindValue(string value);
    public static FleetInstanceMatchCriteria op_Implicit(string value);
}
public class Amazon.EC2.FleetOnDemandAllocationStrategy : ConstantClass {
    public static FleetOnDemandAllocationStrategy LowestPrice;
    public static FleetOnDemandAllocationStrategy Prioritized;
    public FleetOnDemandAllocationStrategy(string value);
    private static FleetOnDemandAllocationStrategy();
    public static FleetOnDemandAllocationStrategy FindValue(string value);
    public static FleetOnDemandAllocationStrategy op_Implicit(string value);
}
public class Amazon.EC2.FleetReplacementStrategy : ConstantClass {
    public static FleetReplacementStrategy Launch;
    public static FleetReplacementStrategy LaunchBeforeTerminate;
    public FleetReplacementStrategy(string value);
    private static FleetReplacementStrategy();
    public static FleetReplacementStrategy FindValue(string value);
    public static FleetReplacementStrategy op_Implicit(string value);
}
public class Amazon.EC2.FleetStateCode : ConstantClass {
    public static FleetStateCode Active;
    public static FleetStateCode Deleted;
    public static FleetStateCode Deleted_running;
    public static FleetStateCode Deleted_terminating;
    public static FleetStateCode Failed;
    public static FleetStateCode Modifying;
    public static FleetStateCode Submitted;
    public FleetStateCode(string value);
    private static FleetStateCode();
    public static FleetStateCode FindValue(string value);
    public static FleetStateCode op_Implicit(string value);
}
public class Amazon.EC2.FleetType : ConstantClass {
    public static FleetType Instant;
    public static FleetType Maintain;
    public static FleetType Request;
    public FleetType(string value);
    private static FleetType();
    public static FleetType FindValue(string value);
    public static FleetType op_Implicit(string value);
}
public class Amazon.EC2.FlowLogsResourceType : ConstantClass {
    public static FlowLogsResourceType NetworkInterface;
    public static FlowLogsResourceType Subnet;
    public static FlowLogsResourceType TransitGateway;
    public static FlowLogsResourceType TransitGatewayAttachment;
    public static FlowLogsResourceType VPC;
    public FlowLogsResourceType(string value);
    private static FlowLogsResourceType();
    public static FlowLogsResourceType FindValue(string value);
    public static FlowLogsResourceType op_Implicit(string value);
}
public class Amazon.EC2.FpgaImageAttributeName : ConstantClass {
    public static FpgaImageAttributeName Description;
    public static FpgaImageAttributeName LoadPermission;
    public static FpgaImageAttributeName Name;
    public static FpgaImageAttributeName ProductCodes;
    public FpgaImageAttributeName(string value);
    private static FpgaImageAttributeName();
    public static FpgaImageAttributeName FindValue(string value);
    public static FpgaImageAttributeName op_Implicit(string value);
}
public class Amazon.EC2.FpgaImageStateCode : ConstantClass {
    public static FpgaImageStateCode Available;
    public static FpgaImageStateCode Failed;
    public static FpgaImageStateCode Pending;
    public static FpgaImageStateCode Unavailable;
    public FpgaImageStateCode(string value);
    private static FpgaImageStateCode();
    public static FpgaImageStateCode FindValue(string value);
    public static FpgaImageStateCode op_Implicit(string value);
}
public class Amazon.EC2.GatewayAssociationState : ConstantClass {
    public static GatewayAssociationState Associated;
    public static GatewayAssociationState Associating;
    public static GatewayAssociationState Disassociating;
    public static GatewayAssociationState NotAssociated;
    public GatewayAssociationState(string value);
    private static GatewayAssociationState();
    public static GatewayAssociationState FindValue(string value);
    public static GatewayAssociationState op_Implicit(string value);
}
public class Amazon.EC2.GatewayType : ConstantClass {
    public static GatewayType Ipsec1;
    public GatewayType(string value);
    private static GatewayType();
    public static GatewayType FindValue(string value);
    public static GatewayType op_Implicit(string value);
}
public class Amazon.EC2.HostMaintenance : ConstantClass {
    public static HostMaintenance Off;
    public static HostMaintenance On;
    public HostMaintenance(string value);
    private static HostMaintenance();
    public static HostMaintenance FindValue(string value);
    public static HostMaintenance op_Implicit(string value);
}
public class Amazon.EC2.HostnameType : ConstantClass {
    public static HostnameType IpName;
    public static HostnameType ResourceName;
    public HostnameType(string value);
    private static HostnameType();
    public static HostnameType FindValue(string value);
    public static HostnameType op_Implicit(string value);
}
public class Amazon.EC2.HostRecovery : ConstantClass {
    public static HostRecovery Off;
    public static HostRecovery On;
    public HostRecovery(string value);
    private static HostRecovery();
    public static HostRecovery FindValue(string value);
    public static HostRecovery op_Implicit(string value);
}
public class Amazon.EC2.HostTenancy : ConstantClass {
    public static HostTenancy Dedicated;
    public static HostTenancy Default;
    public static HostTenancy Host;
    public HostTenancy(string value);
    private static HostTenancy();
    public static HostTenancy FindValue(string value);
    public static HostTenancy op_Implicit(string value);
}
public class Amazon.EC2.HttpTokensState : ConstantClass {
    public static HttpTokensState Optional;
    public static HttpTokensState Required;
    public HttpTokensState(string value);
    private static HttpTokensState();
    public static HttpTokensState FindValue(string value);
    public static HttpTokensState op_Implicit(string value);
}
public class Amazon.EC2.HypervisorType : ConstantClass {
    public static HypervisorType Ovm;
    public static HypervisorType Xen;
    public HypervisorType(string value);
    private static HypervisorType();
    public static HypervisorType FindValue(string value);
    public static HypervisorType op_Implicit(string value);
}
public interface Amazon.EC2.IAmazonEC2 {
    public IEC2PaginatorFactory Paginators { get; }
    public abstract virtual IEC2PaginatorFactory get_Paginators();
    public abstract virtual Task`1<AcceptAddressTransferResponse> AcceptAddressTransferAsync(AcceptAddressTransferRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AcceptReservedInstancesExchangeQuoteResponse> AcceptReservedInstancesExchangeQuoteAsync(AcceptReservedInstancesExchangeQuoteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AcceptTransitGatewayMulticastDomainAssociationsResponse> AcceptTransitGatewayMulticastDomainAssociationsAsync(AcceptTransitGatewayMulticastDomainAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AcceptTransitGatewayPeeringAttachmentResponse> AcceptTransitGatewayPeeringAttachmentAsync(AcceptTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AcceptTransitGatewayVpcAttachmentResponse> AcceptTransitGatewayVpcAttachmentAsync(AcceptTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AcceptVpcEndpointConnectionsResponse> AcceptVpcEndpointConnectionsAsync(AcceptVpcEndpointConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AcceptVpcPeeringConnectionResponse> AcceptVpcPeeringConnectionAsync(AcceptVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdvertiseByoipCidrResponse> AdvertiseByoipCidrAsync(AdvertiseByoipCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AllocateAddressResponse> AllocateAddressAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<AllocateAddressResponse> AllocateAddressAsync(AllocateAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AllocateHostsResponse> AllocateHostsAsync(AllocateHostsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AllocateIpamPoolCidrResponse> AllocateIpamPoolCidrAsync(AllocateIpamPoolCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ApplySecurityGroupsToClientVpnTargetNetworkResponse> ApplySecurityGroupsToClientVpnTargetNetworkAsync(ApplySecurityGroupsToClientVpnTargetNetworkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssignIpv6AddressesResponse> AssignIpv6AddressesAsync(AssignIpv6AddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssignPrivateIpAddressesResponse> AssignPrivateIpAddressesAsync(AssignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssignPrivateNatGatewayAddressResponse> AssignPrivateNatGatewayAddressAsync(AssignPrivateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateAddressResponse> AssociateAddressAsync(AssociateAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateClientVpnTargetNetworkResponse> AssociateClientVpnTargetNetworkAsync(AssociateClientVpnTargetNetworkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateDhcpOptionsResponse> AssociateDhcpOptionsAsync(AssociateDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateEnclaveCertificateIamRoleResponse> AssociateEnclaveCertificateIamRoleAsync(AssociateEnclaveCertificateIamRoleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateIamInstanceProfileResponse> AssociateIamInstanceProfileAsync(AssociateIamInstanceProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateInstanceEventWindowResponse> AssociateInstanceEventWindowAsync(AssociateInstanceEventWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateIpamByoasnResponse> AssociateIpamByoasnAsync(AssociateIpamByoasnRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateIpamResourceDiscoveryResponse> AssociateIpamResourceDiscoveryAsync(AssociateIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateNatGatewayAddressResponse> AssociateNatGatewayAddressAsync(AssociateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateRouteTableResponse> AssociateRouteTableAsync(AssociateRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateSubnetCidrBlockResponse> AssociateSubnetCidrBlockAsync(AssociateSubnetCidrBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateTransitGatewayMulticastDomainResponse> AssociateTransitGatewayMulticastDomainAsync(AssociateTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateTransitGatewayPolicyTableResponse> AssociateTransitGatewayPolicyTableAsync(AssociateTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateTransitGatewayRouteTableResponse> AssociateTransitGatewayRouteTableAsync(AssociateTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateTrunkInterfaceResponse> AssociateTrunkInterfaceAsync(AssociateTrunkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateVpcCidrBlockResponse> AssociateVpcCidrBlockAsync(AssociateVpcCidrBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachClassicLinkVpcResponse> AttachClassicLinkVpcAsync(AttachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachInternetGatewayResponse> AttachInternetGatewayAsync(AttachInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachNetworkInterfaceResponse> AttachNetworkInterfaceAsync(AttachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachVerifiedAccessTrustProviderResponse> AttachVerifiedAccessTrustProviderAsync(AttachVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachVolumeResponse> AttachVolumeAsync(AttachVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachVpnGatewayResponse> AttachVpnGatewayAsync(AttachVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthorizeClientVpnIngressResponse> AuthorizeClientVpnIngressAsync(AuthorizeClientVpnIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthorizeSecurityGroupEgressResponse> AuthorizeSecurityGroupEgressAsync(AuthorizeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthorizeSecurityGroupIngressResponse> AuthorizeSecurityGroupIngressAsync(AuthorizeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BundleInstanceResponse> BundleInstanceAsync(BundleInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelBundleTaskResponse> CancelBundleTaskAsync(CancelBundleTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelCapacityReservationResponse> CancelCapacityReservationAsync(CancelCapacityReservationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelCapacityReservationFleetsResponse> CancelCapacityReservationFleetsAsync(CancelCapacityReservationFleetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelConversionTaskResponse> CancelConversionTaskAsync(CancelConversionTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelImageLaunchPermissionResponse> CancelImageLaunchPermissionAsync(CancelImageLaunchPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelImportTaskResponse> CancelImportTaskAsync(CancelImportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelReservedInstancesListingResponse> CancelReservedInstancesListingAsync(CancelReservedInstancesListingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelSpotFleetRequestsResponse> CancelSpotFleetRequestsAsync(CancelSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelSpotInstanceRequestsResponse> CancelSpotInstanceRequestsAsync(CancelSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConfirmProductInstanceResponse> ConfirmProductInstanceAsync(ConfirmProductInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyFpgaImageResponse> CopyFpgaImageAsync(CopyFpgaImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyImageResponse> CopyImageAsync(CopyImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopySnapshotResponse> CopySnapshotAsync(CopySnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCapacityReservationResponse> CreateCapacityReservationAsync(CreateCapacityReservationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCapacityReservationFleetResponse> CreateCapacityReservationFleetAsync(CreateCapacityReservationFleetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCarrierGatewayResponse> CreateCarrierGatewayAsync(CreateCarrierGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateClientVpnEndpointResponse> CreateClientVpnEndpointAsync(CreateClientVpnEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateClientVpnRouteResponse> CreateClientVpnRouteAsync(CreateClientVpnRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCoipCidrResponse> CreateCoipCidrAsync(CreateCoipCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCoipPoolResponse> CreateCoipPoolAsync(CreateCoipPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCustomerGatewayResponse> CreateCustomerGatewayAsync(CreateCustomerGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDefaultSubnetResponse> CreateDefaultSubnetAsync(CreateDefaultSubnetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDefaultVpcResponse> CreateDefaultVpcAsync(CreateDefaultVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDhcpOptionsResponse> CreateDhcpOptionsAsync(CreateDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateEgressOnlyInternetGatewayResponse> CreateEgressOnlyInternetGatewayAsync(CreateEgressOnlyInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFleetResponse> CreateFleetAsync(CreateFleetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFlowLogsResponse> CreateFlowLogsAsync(CreateFlowLogsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFpgaImageResponse> CreateFpgaImageAsync(CreateFpgaImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateImageResponse> CreateImageAsync(CreateImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInstanceConnectEndpointResponse> CreateInstanceConnectEndpointAsync(CreateInstanceConnectEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInstanceEventWindowResponse> CreateInstanceEventWindowAsync(CreateInstanceEventWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInstanceExportTaskResponse> CreateInstanceExportTaskAsync(CreateInstanceExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInternetGatewayResponse> CreateInternetGatewayAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInternetGatewayResponse> CreateInternetGatewayAsync(CreateInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateIpamResponse> CreateIpamAsync(CreateIpamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateIpamExternalResourceVerificationTokenResponse> CreateIpamExternalResourceVerificationTokenAsync(CreateIpamExternalResourceVerificationTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateIpamPoolResponse> CreateIpamPoolAsync(CreateIpamPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateIpamResourceDiscoveryResponse> CreateIpamResourceDiscoveryAsync(CreateIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateIpamScopeResponse> CreateIpamScopeAsync(CreateIpamScopeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateKeyPairResponse> CreateKeyPairAsync(CreateKeyPairRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLaunchTemplateResponse> CreateLaunchTemplateAsync(CreateLaunchTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLaunchTemplateVersionResponse> CreateLaunchTemplateVersionAsync(CreateLaunchTemplateVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLocalGatewayRouteResponse> CreateLocalGatewayRouteAsync(CreateLocalGatewayRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLocalGatewayRouteTableResponse> CreateLocalGatewayRouteTableAsync(CreateLocalGatewayRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse> CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationAsync(CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLocalGatewayRouteTableVpcAssociationResponse> CreateLocalGatewayRouteTableVpcAssociationAsync(CreateLocalGatewayRouteTableVpcAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateManagedPrefixListResponse> CreateManagedPrefixListAsync(CreateManagedPrefixListRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNatGatewayResponse> CreateNatGatewayAsync(CreateNatGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkAclResponse> CreateNetworkAclAsync(CreateNetworkAclRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkAclEntryResponse> CreateNetworkAclEntryAsync(CreateNetworkAclEntryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkInsightsAccessScopeResponse> CreateNetworkInsightsAccessScopeAsync(CreateNetworkInsightsAccessScopeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkInsightsPathResponse> CreateNetworkInsightsPathAsync(CreateNetworkInsightsPathRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkInterfaceResponse> CreateNetworkInterfaceAsync(CreateNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkInterfacePermissionResponse> CreateNetworkInterfacePermissionAsync(CreateNetworkInterfacePermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePlacementGroupResponse> CreatePlacementGroupAsync(CreatePlacementGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePublicIpv4PoolResponse> CreatePublicIpv4PoolAsync(CreatePublicIpv4PoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReplaceRootVolumeTaskResponse> CreateReplaceRootVolumeTaskAsync(CreateReplaceRootVolumeTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReservedInstancesListingResponse> CreateReservedInstancesListingAsync(CreateReservedInstancesListingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRestoreImageTaskResponse> CreateRestoreImageTaskAsync(CreateRestoreImageTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRouteResponse> CreateRouteAsync(CreateRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRouteTableResponse> CreateRouteTableAsync(CreateRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSecurityGroupResponse> CreateSecurityGroupAsync(CreateSecurityGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSnapshotResponse> CreateSnapshotAsync(CreateSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSnapshotsResponse> CreateSnapshotsAsync(CreateSnapshotsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSpotDatafeedSubscriptionResponse> CreateSpotDatafeedSubscriptionAsync(CreateSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateStoreImageTaskResponse> CreateStoreImageTaskAsync(CreateStoreImageTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSubnetResponse> CreateSubnetAsync(CreateSubnetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSubnetCidrReservationResponse> CreateSubnetCidrReservationAsync(CreateSubnetCidrReservationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTrafficMirrorFilterResponse> CreateTrafficMirrorFilterAsync(CreateTrafficMirrorFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTrafficMirrorFilterRuleResponse> CreateTrafficMirrorFilterRuleAsync(CreateTrafficMirrorFilterRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTrafficMirrorSessionResponse> CreateTrafficMirrorSessionAsync(CreateTrafficMirrorSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTrafficMirrorTargetResponse> CreateTrafficMirrorTargetAsync(CreateTrafficMirrorTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayResponse> CreateTransitGatewayAsync(CreateTransitGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayConnectResponse> CreateTransitGatewayConnectAsync(CreateTransitGatewayConnectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayConnectPeerResponse> CreateTransitGatewayConnectPeerAsync(CreateTransitGatewayConnectPeerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayMulticastDomainResponse> CreateTransitGatewayMulticastDomainAsync(CreateTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayPeeringAttachmentResponse> CreateTransitGatewayPeeringAttachmentAsync(CreateTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayPolicyTableResponse> CreateTransitGatewayPolicyTableAsync(CreateTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayPrefixListReferenceResponse> CreateTransitGatewayPrefixListReferenceAsync(CreateTransitGatewayPrefixListReferenceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayRouteResponse> CreateTransitGatewayRouteAsync(CreateTransitGatewayRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayRouteTableResponse> CreateTransitGatewayRouteTableAsync(CreateTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayRouteTableAnnouncementResponse> CreateTransitGatewayRouteTableAnnouncementAsync(CreateTransitGatewayRouteTableAnnouncementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTransitGatewayVpcAttachmentResponse> CreateTransitGatewayVpcAttachmentAsync(CreateTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVerifiedAccessEndpointResponse> CreateVerifiedAccessEndpointAsync(CreateVerifiedAccessEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVerifiedAccessGroupResponse> CreateVerifiedAccessGroupAsync(CreateVerifiedAccessGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVerifiedAccessInstanceResponse> CreateVerifiedAccessInstanceAsync(CreateVerifiedAccessInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVerifiedAccessTrustProviderResponse> CreateVerifiedAccessTrustProviderAsync(CreateVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVolumeResponse> CreateVolumeAsync(CreateVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcResponse> CreateVpcAsync(CreateVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcEndpointResponse> CreateVpcEndpointAsync(CreateVpcEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcEndpointConnectionNotificationResponse> CreateVpcEndpointConnectionNotificationAsync(CreateVpcEndpointConnectionNotificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcEndpointServiceConfigurationResponse> CreateVpcEndpointServiceConfigurationAsync(CreateVpcEndpointServiceConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcPeeringConnectionResponse> CreateVpcPeeringConnectionAsync(CreateVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpnConnectionResponse> CreateVpnConnectionAsync(CreateVpnConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpnConnectionRouteResponse> CreateVpnConnectionRouteAsync(CreateVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpnGatewayResponse> CreateVpnGatewayAsync(CreateVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCarrierGatewayResponse> DeleteCarrierGatewayAsync(DeleteCarrierGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteClientVpnEndpointResponse> DeleteClientVpnEndpointAsync(DeleteClientVpnEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteClientVpnRouteResponse> DeleteClientVpnRouteAsync(DeleteClientVpnRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCoipCidrResponse> DeleteCoipCidrAsync(DeleteCoipCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCoipPoolResponse> DeleteCoipPoolAsync(DeleteCoipPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCustomerGatewayResponse> DeleteCustomerGatewayAsync(DeleteCustomerGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDhcpOptionsResponse> DeleteDhcpOptionsAsync(DeleteDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEgressOnlyInternetGatewayResponse> DeleteEgressOnlyInternetGatewayAsync(DeleteEgressOnlyInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFleetsResponse> DeleteFleetsAsync(DeleteFleetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFlowLogsResponse> DeleteFlowLogsAsync(DeleteFlowLogsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFpgaImageResponse> DeleteFpgaImageAsync(DeleteFpgaImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteInstanceConnectEndpointResponse> DeleteInstanceConnectEndpointAsync(DeleteInstanceConnectEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteInstanceEventWindowResponse> DeleteInstanceEventWindowAsync(DeleteInstanceEventWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteInternetGatewayResponse> DeleteInternetGatewayAsync(DeleteInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIpamResponse> DeleteIpamAsync(DeleteIpamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIpamExternalResourceVerificationTokenResponse> DeleteIpamExternalResourceVerificationTokenAsync(DeleteIpamExternalResourceVerificationTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIpamPoolResponse> DeleteIpamPoolAsync(DeleteIpamPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIpamResourceDiscoveryResponse> DeleteIpamResourceDiscoveryAsync(DeleteIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIpamScopeResponse> DeleteIpamScopeAsync(DeleteIpamScopeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteKeyPairResponse> DeleteKeyPairAsync(DeleteKeyPairRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLaunchTemplateResponse> DeleteLaunchTemplateAsync(DeleteLaunchTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLaunchTemplateVersionsResponse> DeleteLaunchTemplateVersionsAsync(DeleteLaunchTemplateVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLocalGatewayRouteResponse> DeleteLocalGatewayRouteAsync(DeleteLocalGatewayRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLocalGatewayRouteTableResponse> DeleteLocalGatewayRouteTableAsync(DeleteLocalGatewayRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse> DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationAsync(DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLocalGatewayRouteTableVpcAssociationResponse> DeleteLocalGatewayRouteTableVpcAssociationAsync(DeleteLocalGatewayRouteTableVpcAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteManagedPrefixListResponse> DeleteManagedPrefixListAsync(DeleteManagedPrefixListRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNatGatewayResponse> DeleteNatGatewayAsync(DeleteNatGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkAclResponse> DeleteNetworkAclAsync(DeleteNetworkAclRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkAclEntryResponse> DeleteNetworkAclEntryAsync(DeleteNetworkAclEntryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkInsightsAccessScopeResponse> DeleteNetworkInsightsAccessScopeAsync(DeleteNetworkInsightsAccessScopeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkInsightsAccessScopeAnalysisResponse> DeleteNetworkInsightsAccessScopeAnalysisAsync(DeleteNetworkInsightsAccessScopeAnalysisRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkInsightsAnalysisResponse> DeleteNetworkInsightsAnalysisAsync(DeleteNetworkInsightsAnalysisRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkInsightsPathResponse> DeleteNetworkInsightsPathAsync(DeleteNetworkInsightsPathRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkInterfaceResponse> DeleteNetworkInterfaceAsync(DeleteNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkInterfacePermissionResponse> DeleteNetworkInterfacePermissionAsync(DeleteNetworkInterfacePermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePlacementGroupResponse> DeletePlacementGroupAsync(DeletePlacementGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePublicIpv4PoolResponse> DeletePublicIpv4PoolAsync(DeletePublicIpv4PoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteQueuedReservedInstancesResponse> DeleteQueuedReservedInstancesAsync(DeleteQueuedReservedInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRouteResponse> DeleteRouteAsync(DeleteRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRouteTableResponse> DeleteRouteTableAsync(DeleteRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSecurityGroupResponse> DeleteSecurityGroupAsync(DeleteSecurityGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSnapshotResponse> DeleteSnapshotAsync(DeleteSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSpotDatafeedSubscriptionResponse> DeleteSpotDatafeedSubscriptionAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSpotDatafeedSubscriptionResponse> DeleteSpotDatafeedSubscriptionAsync(DeleteSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSubnetResponse> DeleteSubnetAsync(DeleteSubnetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSubnetCidrReservationResponse> DeleteSubnetCidrReservationAsync(DeleteSubnetCidrReservationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTrafficMirrorFilterResponse> DeleteTrafficMirrorFilterAsync(DeleteTrafficMirrorFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTrafficMirrorFilterRuleResponse> DeleteTrafficMirrorFilterRuleAsync(DeleteTrafficMirrorFilterRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTrafficMirrorSessionResponse> DeleteTrafficMirrorSessionAsync(DeleteTrafficMirrorSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTrafficMirrorTargetResponse> DeleteTrafficMirrorTargetAsync(DeleteTrafficMirrorTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayResponse> DeleteTransitGatewayAsync(DeleteTransitGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayConnectResponse> DeleteTransitGatewayConnectAsync(DeleteTransitGatewayConnectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayConnectPeerResponse> DeleteTransitGatewayConnectPeerAsync(DeleteTransitGatewayConnectPeerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayMulticastDomainResponse> DeleteTransitGatewayMulticastDomainAsync(DeleteTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayPeeringAttachmentResponse> DeleteTransitGatewayPeeringAttachmentAsync(DeleteTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayPolicyTableResponse> DeleteTransitGatewayPolicyTableAsync(DeleteTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayPrefixListReferenceResponse> DeleteTransitGatewayPrefixListReferenceAsync(DeleteTransitGatewayPrefixListReferenceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayRouteResponse> DeleteTransitGatewayRouteAsync(DeleteTransitGatewayRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayRouteTableResponse> DeleteTransitGatewayRouteTableAsync(DeleteTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayRouteTableAnnouncementResponse> DeleteTransitGatewayRouteTableAnnouncementAsync(DeleteTransitGatewayRouteTableAnnouncementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTransitGatewayVpcAttachmentResponse> DeleteTransitGatewayVpcAttachmentAsync(DeleteTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVerifiedAccessEndpointResponse> DeleteVerifiedAccessEndpointAsync(DeleteVerifiedAccessEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVerifiedAccessGroupResponse> DeleteVerifiedAccessGroupAsync(DeleteVerifiedAccessGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVerifiedAccessInstanceResponse> DeleteVerifiedAccessInstanceAsync(DeleteVerifiedAccessInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVerifiedAccessTrustProviderResponse> DeleteVerifiedAccessTrustProviderAsync(DeleteVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVolumeResponse> DeleteVolumeAsync(DeleteVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcResponse> DeleteVpcAsync(DeleteVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcEndpointConnectionNotificationsResponse> DeleteVpcEndpointConnectionNotificationsAsync(DeleteVpcEndpointConnectionNotificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcEndpointsResponse> DeleteVpcEndpointsAsync(DeleteVpcEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcEndpointServiceConfigurationsResponse> DeleteVpcEndpointServiceConfigurationsAsync(DeleteVpcEndpointServiceConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcPeeringConnectionResponse> DeleteVpcPeeringConnectionAsync(DeleteVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpnConnectionResponse> DeleteVpnConnectionAsync(DeleteVpnConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpnConnectionRouteResponse> DeleteVpnConnectionRouteAsync(DeleteVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpnGatewayResponse> DeleteVpnGatewayAsync(DeleteVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeprovisionByoipCidrResponse> DeprovisionByoipCidrAsync(DeprovisionByoipCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeprovisionIpamByoasnResponse> DeprovisionIpamByoasnAsync(DeprovisionIpamByoasnRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeprovisionIpamPoolCidrResponse> DeprovisionIpamPoolCidrAsync(DeprovisionIpamPoolCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeprovisionPublicIpv4PoolCidrResponse> DeprovisionPublicIpv4PoolCidrAsync(DeprovisionPublicIpv4PoolCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterImageResponse> DeregisterImageAsync(DeregisterImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterInstanceEventNotificationAttributesResponse> DeregisterInstanceEventNotificationAttributesAsync(DeregisterInstanceEventNotificationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterTransitGatewayMulticastGroupMembersResponse> DeregisterTransitGatewayMulticastGroupMembersAsync(DeregisterTransitGatewayMulticastGroupMembersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterTransitGatewayMulticastGroupSourcesResponse> DeregisterTransitGatewayMulticastGroupSourcesAsync(DeregisterTransitGatewayMulticastGroupSourcesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAddressesResponse> DescribeAddressesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAddressesResponse> DescribeAddressesAsync(DescribeAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAddressesAttributeResponse> DescribeAddressesAttributeAsync(DescribeAddressesAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAddressTransfersResponse> DescribeAddressTransfersAsync(DescribeAddressTransfersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAggregateIdFormatResponse> DescribeAggregateIdFormatAsync(DescribeAggregateIdFormatRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAvailabilityZonesResponse> DescribeAvailabilityZonesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAvailabilityZonesResponse> DescribeAvailabilityZonesAsync(DescribeAvailabilityZonesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAwsNetworkPerformanceMetricSubscriptionsResponse> DescribeAwsNetworkPerformanceMetricSubscriptionsAsync(DescribeAwsNetworkPerformanceMetricSubscriptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBundleTasksResponse> DescribeBundleTasksAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBundleTasksResponse> DescribeBundleTasksAsync(DescribeBundleTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeByoipCidrsResponse> DescribeByoipCidrsAsync(DescribeByoipCidrsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCapacityBlockOfferingsResponse> DescribeCapacityBlockOfferingsAsync(DescribeCapacityBlockOfferingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCapacityReservationFleetsResponse> DescribeCapacityReservationFleetsAsync(DescribeCapacityReservationFleetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCapacityReservationsResponse> DescribeCapacityReservationsAsync(DescribeCapacityReservationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCarrierGatewaysResponse> DescribeCarrierGatewaysAsync(DescribeCarrierGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClassicLinkInstancesResponse> DescribeClassicLinkInstancesAsync(DescribeClassicLinkInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClientVpnAuthorizationRulesResponse> DescribeClientVpnAuthorizationRulesAsync(DescribeClientVpnAuthorizationRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClientVpnConnectionsResponse> DescribeClientVpnConnectionsAsync(DescribeClientVpnConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClientVpnEndpointsResponse> DescribeClientVpnEndpointsAsync(DescribeClientVpnEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClientVpnRoutesResponse> DescribeClientVpnRoutesAsync(DescribeClientVpnRoutesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClientVpnTargetNetworksResponse> DescribeClientVpnTargetNetworksAsync(DescribeClientVpnTargetNetworksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCoipPoolsResponse> DescribeCoipPoolsAsync(DescribeCoipPoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConversionTasksResponse> DescribeConversionTasksAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConversionTasksResponse> DescribeConversionTasksAsync(DescribeConversionTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCustomerGatewaysResponse> DescribeCustomerGatewaysAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCustomerGatewaysResponse> DescribeCustomerGatewaysAsync(DescribeCustomerGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDhcpOptionsResponse> DescribeDhcpOptionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDhcpOptionsResponse> DescribeDhcpOptionsAsync(DescribeDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEgressOnlyInternetGatewaysResponse> DescribeEgressOnlyInternetGatewaysAsync(DescribeEgressOnlyInternetGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeElasticGpusResponse> DescribeElasticGpusAsync(DescribeElasticGpusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeExportImageTasksResponse> DescribeExportImageTasksAsync(DescribeExportImageTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFastLaunchImagesResponse> DescribeFastLaunchImagesAsync(DescribeFastLaunchImagesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFastSnapshotRestoresResponse> DescribeFastSnapshotRestoresAsync(DescribeFastSnapshotRestoresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetHistoryResponse> DescribeFleetHistoryAsync(DescribeFleetHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetInstancesResponse> DescribeFleetInstancesAsync(DescribeFleetInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetsResponse> DescribeFleetsAsync(DescribeFleetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFlowLogsResponse> DescribeFlowLogsAsync(DescribeFlowLogsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFpgaImageAttributeResponse> DescribeFpgaImageAttributeAsync(DescribeFpgaImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFpgaImagesResponse> DescribeFpgaImagesAsync(DescribeFpgaImagesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeHostReservationOfferingsResponse> DescribeHostReservationOfferingsAsync(DescribeHostReservationOfferingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeHostReservationsResponse> DescribeHostReservationsAsync(DescribeHostReservationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeHostsResponse> DescribeHostsAsync(DescribeHostsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIamInstanceProfileAssociationsResponse> DescribeIamInstanceProfileAssociationsAsync(DescribeIamInstanceProfileAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityIdFormatResponse> DescribeIdentityIdFormatAsync(DescribeIdentityIdFormatRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdFormatResponse> DescribeIdFormatAsync(DescribeIdFormatRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImageAttributeResponse> DescribeImageAttributeAsync(DescribeImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImagesResponse> DescribeImagesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImagesResponse> DescribeImagesAsync(DescribeImagesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImportImageTasksResponse> DescribeImportImageTasksAsync(DescribeImportImageTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImportSnapshotTasksResponse> DescribeImportSnapshotTasksAsync(DescribeImportSnapshotTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceAttributeResponse> DescribeInstanceAttributeAsync(DescribeInstanceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceConnectEndpointsResponse> DescribeInstanceConnectEndpointsAsync(DescribeInstanceConnectEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceCreditSpecificationsResponse> DescribeInstanceCreditSpecificationsAsync(DescribeInstanceCreditSpecificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceEventNotificationAttributesResponse> DescribeInstanceEventNotificationAttributesAsync(DescribeInstanceEventNotificationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceEventWindowsResponse> DescribeInstanceEventWindowsAsync(DescribeInstanceEventWindowsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstancesResponse> DescribeInstancesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstancesResponse> DescribeInstancesAsync(DescribeInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceStatusResponse> DescribeInstanceStatusAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceStatusResponse> DescribeInstanceStatusAsync(DescribeInstanceStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceTopologyResponse> DescribeInstanceTopologyAsync(DescribeInstanceTopologyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceTypeOfferingsResponse> DescribeInstanceTypeOfferingsAsync(DescribeInstanceTypeOfferingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceTypesResponse> DescribeInstanceTypesAsync(DescribeInstanceTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInternetGatewaysResponse> DescribeInternetGatewaysAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInternetGatewaysResponse> DescribeInternetGatewaysAsync(DescribeInternetGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpamByoasnResponse> DescribeIpamByoasnAsync(DescribeIpamByoasnRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpamExternalResourceVerificationTokensResponse> DescribeIpamExternalResourceVerificationTokensAsync(DescribeIpamExternalResourceVerificationTokensRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpamPoolsResponse> DescribeIpamPoolsAsync(DescribeIpamPoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpamResourceDiscoveriesResponse> DescribeIpamResourceDiscoveriesAsync(DescribeIpamResourceDiscoveriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpamResourceDiscoveryAssociationsResponse> DescribeIpamResourceDiscoveryAssociationsAsync(DescribeIpamResourceDiscoveryAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpamsResponse> DescribeIpamsAsync(DescribeIpamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpamScopesResponse> DescribeIpamScopesAsync(DescribeIpamScopesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIpv6PoolsResponse> DescribeIpv6PoolsAsync(DescribeIpv6PoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeKeyPairsResponse> DescribeKeyPairsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeKeyPairsResponse> DescribeKeyPairsAsync(DescribeKeyPairsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLaunchTemplatesResponse> DescribeLaunchTemplatesAsync(DescribeLaunchTemplatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLaunchTemplateVersionsResponse> DescribeLaunchTemplateVersionsAsync(DescribeLaunchTemplateVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLocalGatewayRouteTablesResponse> DescribeLocalGatewayRouteTablesAsync(DescribeLocalGatewayRouteTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse> DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsync(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLocalGatewayRouteTableVpcAssociationsResponse> DescribeLocalGatewayRouteTableVpcAssociationsAsync(DescribeLocalGatewayRouteTableVpcAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLocalGatewaysResponse> DescribeLocalGatewaysAsync(DescribeLocalGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLocalGatewayVirtualInterfaceGroupsResponse> DescribeLocalGatewayVirtualInterfaceGroupsAsync(DescribeLocalGatewayVirtualInterfaceGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLocalGatewayVirtualInterfacesResponse> DescribeLocalGatewayVirtualInterfacesAsync(DescribeLocalGatewayVirtualInterfacesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLockedSnapshotsResponse> DescribeLockedSnapshotsAsync(DescribeLockedSnapshotsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMacHostsResponse> DescribeMacHostsAsync(DescribeMacHostsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeManagedPrefixListsResponse> DescribeManagedPrefixListsAsync(DescribeManagedPrefixListsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMovingAddressesResponse> DescribeMovingAddressesAsync(DescribeMovingAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNatGatewaysResponse> DescribeNatGatewaysAsync(DescribeNatGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkAclsResponse> DescribeNetworkAclsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkAclsResponse> DescribeNetworkAclsAsync(DescribeNetworkAclsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInsightsAccessScopeAnalysesResponse> DescribeNetworkInsightsAccessScopeAnalysesAsync(DescribeNetworkInsightsAccessScopeAnalysesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInsightsAccessScopesResponse> DescribeNetworkInsightsAccessScopesAsync(DescribeNetworkInsightsAccessScopesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInsightsAnalysesResponse> DescribeNetworkInsightsAnalysesAsync(DescribeNetworkInsightsAnalysesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInsightsPathsResponse> DescribeNetworkInsightsPathsAsync(DescribeNetworkInsightsPathsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInterfaceAttributeResponse> DescribeNetworkInterfaceAttributeAsync(DescribeNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInterfacePermissionsResponse> DescribeNetworkInterfacePermissionsAsync(DescribeNetworkInterfacePermissionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInterfacesResponse> DescribeNetworkInterfacesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInterfacesResponse> DescribeNetworkInterfacesAsync(DescribeNetworkInterfacesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePlacementGroupsResponse> DescribePlacementGroupsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePlacementGroupsResponse> DescribePlacementGroupsAsync(DescribePlacementGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePrefixListsResponse> DescribePrefixListsAsync(DescribePrefixListsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePrincipalIdFormatResponse> DescribePrincipalIdFormatAsync(DescribePrincipalIdFormatRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePublicIpv4PoolsResponse> DescribePublicIpv4PoolsAsync(DescribePublicIpv4PoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRegionsResponse> DescribeRegionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRegionsResponse> DescribeRegionsAsync(DescribeRegionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplaceRootVolumeTasksResponse> DescribeReplaceRootVolumeTasksAsync(DescribeReplaceRootVolumeTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesResponse> DescribeReservedInstancesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesResponse> DescribeReservedInstancesAsync(DescribeReservedInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesListingsResponse> DescribeReservedInstancesListingsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesListingsResponse> DescribeReservedInstancesListingsAsync(DescribeReservedInstancesListingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesModificationsResponse> DescribeReservedInstancesModificationsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesModificationsResponse> DescribeReservedInstancesModificationsAsync(DescribeReservedInstancesModificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesOfferingsResponse> DescribeReservedInstancesOfferingsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesOfferingsResponse> DescribeReservedInstancesOfferingsAsync(DescribeReservedInstancesOfferingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRouteTablesResponse> DescribeRouteTablesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRouteTablesResponse> DescribeRouteTablesAsync(DescribeRouteTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeScheduledInstanceAvailabilityResponse> DescribeScheduledInstanceAvailabilityAsync(DescribeScheduledInstanceAvailabilityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeScheduledInstancesResponse> DescribeScheduledInstancesAsync(DescribeScheduledInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSecurityGroupReferencesResponse> DescribeSecurityGroupReferencesAsync(DescribeSecurityGroupReferencesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSecurityGroupRulesResponse> DescribeSecurityGroupRulesAsync(DescribeSecurityGroupRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSecurityGroupsResponse> DescribeSecurityGroupsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSecurityGroupsResponse> DescribeSecurityGroupsAsync(DescribeSecurityGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSnapshotAttributeResponse> DescribeSnapshotAttributeAsync(DescribeSnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSnapshotsResponse> DescribeSnapshotsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSnapshotsResponse> DescribeSnapshotsAsync(DescribeSnapshotsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSnapshotTierStatusResponse> DescribeSnapshotTierStatusAsync(DescribeSnapshotTierStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotDatafeedSubscriptionResponse> DescribeSpotDatafeedSubscriptionAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotDatafeedSubscriptionResponse> DescribeSpotDatafeedSubscriptionAsync(DescribeSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotFleetInstancesResponse> DescribeSpotFleetInstancesAsync(DescribeSpotFleetInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotFleetRequestHistoryResponse> DescribeSpotFleetRequestHistoryAsync(DescribeSpotFleetRequestHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotFleetRequestsResponse> DescribeSpotFleetRequestsAsync(DescribeSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotInstanceRequestsResponse> DescribeSpotInstanceRequestsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotInstanceRequestsResponse> DescribeSpotInstanceRequestsAsync(DescribeSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotPriceHistoryResponse> DescribeSpotPriceHistoryAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotPriceHistoryResponse> DescribeSpotPriceHistoryAsync(DescribeSpotPriceHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStaleSecurityGroupsResponse> DescribeStaleSecurityGroupsAsync(DescribeStaleSecurityGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStoreImageTasksResponse> DescribeStoreImageTasksAsync(DescribeStoreImageTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSubnetsResponse> DescribeSubnetsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSubnetsResponse> DescribeSubnetsAsync(DescribeSubnetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrafficMirrorFilterRulesResponse> DescribeTrafficMirrorFilterRulesAsync(DescribeTrafficMirrorFilterRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrafficMirrorFiltersResponse> DescribeTrafficMirrorFiltersAsync(DescribeTrafficMirrorFiltersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrafficMirrorSessionsResponse> DescribeTrafficMirrorSessionsAsync(DescribeTrafficMirrorSessionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrafficMirrorTargetsResponse> DescribeTrafficMirrorTargetsAsync(DescribeTrafficMirrorTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayAttachmentsResponse> DescribeTransitGatewayAttachmentsAsync(DescribeTransitGatewayAttachmentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayConnectPeersResponse> DescribeTransitGatewayConnectPeersAsync(DescribeTransitGatewayConnectPeersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayConnectsResponse> DescribeTransitGatewayConnectsAsync(DescribeTransitGatewayConnectsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayMulticastDomainsResponse> DescribeTransitGatewayMulticastDomainsAsync(DescribeTransitGatewayMulticastDomainsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayPeeringAttachmentsResponse> DescribeTransitGatewayPeeringAttachmentsAsync(DescribeTransitGatewayPeeringAttachmentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayPolicyTablesResponse> DescribeTransitGatewayPolicyTablesAsync(DescribeTransitGatewayPolicyTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayRouteTableAnnouncementsResponse> DescribeTransitGatewayRouteTableAnnouncementsAsync(DescribeTransitGatewayRouteTableAnnouncementsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayRouteTablesResponse> DescribeTransitGatewayRouteTablesAsync(DescribeTransitGatewayRouteTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewaysResponse> DescribeTransitGatewaysAsync(DescribeTransitGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTransitGatewayVpcAttachmentsResponse> DescribeTransitGatewayVpcAttachmentsAsync(DescribeTransitGatewayVpcAttachmentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrunkInterfaceAssociationsResponse> DescribeTrunkInterfaceAssociationsAsync(DescribeTrunkInterfaceAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVerifiedAccessEndpointsResponse> DescribeVerifiedAccessEndpointsAsync(DescribeVerifiedAccessEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVerifiedAccessGroupsResponse> DescribeVerifiedAccessGroupsAsync(DescribeVerifiedAccessGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVerifiedAccessInstanceLoggingConfigurationsResponse> DescribeVerifiedAccessInstanceLoggingConfigurationsAsync(DescribeVerifiedAccessInstanceLoggingConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVerifiedAccessInstancesResponse> DescribeVerifiedAccessInstancesAsync(DescribeVerifiedAccessInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVerifiedAccessTrustProvidersResponse> DescribeVerifiedAccessTrustProvidersAsync(DescribeVerifiedAccessTrustProvidersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumeAttributeResponse> DescribeVolumeAttributeAsync(DescribeVolumeAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumesResponse> DescribeVolumesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumesResponse> DescribeVolumesAsync(DescribeVolumesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumesModificationsResponse> DescribeVolumesModificationsAsync(DescribeVolumesModificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumeStatusResponse> DescribeVolumeStatusAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumeStatusResponse> DescribeVolumeStatusAsync(DescribeVolumeStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcAttributeResponse> DescribeVpcAttributeAsync(DescribeVpcAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcClassicLinkResponse> DescribeVpcClassicLinkAsync(DescribeVpcClassicLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcClassicLinkDnsSupportResponse> DescribeVpcClassicLinkDnsSupportAsync(DescribeVpcClassicLinkDnsSupportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointConnectionNotificationsResponse> DescribeVpcEndpointConnectionNotificationsAsync(DescribeVpcEndpointConnectionNotificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointConnectionsResponse> DescribeVpcEndpointConnectionsAsync(DescribeVpcEndpointConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointsResponse> DescribeVpcEndpointsAsync(DescribeVpcEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointServiceConfigurationsResponse> DescribeVpcEndpointServiceConfigurationsAsync(DescribeVpcEndpointServiceConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointServicePermissionsResponse> DescribeVpcEndpointServicePermissionsAsync(DescribeVpcEndpointServicePermissionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointServicesResponse> DescribeVpcEndpointServicesAsync(DescribeVpcEndpointServicesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcPeeringConnectionsResponse> DescribeVpcPeeringConnectionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcPeeringConnectionsResponse> DescribeVpcPeeringConnectionsAsync(DescribeVpcPeeringConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcsResponse> DescribeVpcsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcsResponse> DescribeVpcsAsync(DescribeVpcsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpnConnectionsResponse> DescribeVpnConnectionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpnConnectionsResponse> DescribeVpnConnectionsAsync(DescribeVpnConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpnGatewaysResponse> DescribeVpnGatewaysAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpnGatewaysResponse> DescribeVpnGatewaysAsync(DescribeVpnGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachClassicLinkVpcResponse> DetachClassicLinkVpcAsync(DetachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachInternetGatewayResponse> DetachInternetGatewayAsync(DetachInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachNetworkInterfaceResponse> DetachNetworkInterfaceAsync(DetachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachVerifiedAccessTrustProviderResponse> DetachVerifiedAccessTrustProviderAsync(DetachVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachVolumeResponse> DetachVolumeAsync(DetachVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachVpnGatewayResponse> DetachVpnGatewayAsync(DetachVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableAddressTransferResponse> DisableAddressTransferAsync(DisableAddressTransferRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableAwsNetworkPerformanceMetricSubscriptionResponse> DisableAwsNetworkPerformanceMetricSubscriptionAsync(DisableAwsNetworkPerformanceMetricSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableEbsEncryptionByDefaultResponse> DisableEbsEncryptionByDefaultAsync(DisableEbsEncryptionByDefaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableFastLaunchResponse> DisableFastLaunchAsync(DisableFastLaunchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableFastSnapshotRestoresResponse> DisableFastSnapshotRestoresAsync(DisableFastSnapshotRestoresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableImageResponse> DisableImageAsync(DisableImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableImageBlockPublicAccessResponse> DisableImageBlockPublicAccessAsync(DisableImageBlockPublicAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableImageDeprecationResponse> DisableImageDeprecationAsync(DisableImageDeprecationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableImageDeregistrationProtectionResponse> DisableImageDeregistrationProtectionAsync(DisableImageDeregistrationProtectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableIpamOrganizationAdminAccountResponse> DisableIpamOrganizationAdminAccountAsync(DisableIpamOrganizationAdminAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableSerialConsoleAccessResponse> DisableSerialConsoleAccessAsync(DisableSerialConsoleAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableSnapshotBlockPublicAccessResponse> DisableSnapshotBlockPublicAccessAsync(DisableSnapshotBlockPublicAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableTransitGatewayRouteTablePropagationResponse> DisableTransitGatewayRouteTablePropagationAsync(DisableTransitGatewayRouteTablePropagationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableVgwRoutePropagationResponse> DisableVgwRoutePropagationAsync(DisableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableVpcClassicLinkResponse> DisableVpcClassicLinkAsync(DisableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableVpcClassicLinkDnsSupportResponse> DisableVpcClassicLinkDnsSupportAsync(DisableVpcClassicLinkDnsSupportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateAddressResponse> DisassociateAddressAsync(DisassociateAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateClientVpnTargetNetworkResponse> DisassociateClientVpnTargetNetworkAsync(DisassociateClientVpnTargetNetworkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateEnclaveCertificateIamRoleResponse> DisassociateEnclaveCertificateIamRoleAsync(DisassociateEnclaveCertificateIamRoleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateIamInstanceProfileResponse> DisassociateIamInstanceProfileAsync(DisassociateIamInstanceProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateInstanceEventWindowResponse> DisassociateInstanceEventWindowAsync(DisassociateInstanceEventWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateIpamByoasnResponse> DisassociateIpamByoasnAsync(DisassociateIpamByoasnRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateIpamResourceDiscoveryResponse> DisassociateIpamResourceDiscoveryAsync(DisassociateIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateNatGatewayAddressResponse> DisassociateNatGatewayAddressAsync(DisassociateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateRouteTableResponse> DisassociateRouteTableAsync(DisassociateRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateSubnetCidrBlockResponse> DisassociateSubnetCidrBlockAsync(DisassociateSubnetCidrBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateTransitGatewayMulticastDomainResponse> DisassociateTransitGatewayMulticastDomainAsync(DisassociateTransitGatewayMulticastDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateTransitGatewayPolicyTableResponse> DisassociateTransitGatewayPolicyTableAsync(DisassociateTransitGatewayPolicyTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateTransitGatewayRouteTableResponse> DisassociateTransitGatewayRouteTableAsync(DisassociateTransitGatewayRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateTrunkInterfaceResponse> DisassociateTrunkInterfaceAsync(DisassociateTrunkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateVpcCidrBlockResponse> DisassociateVpcCidrBlockAsync(DisassociateVpcCidrBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableAddressTransferResponse> EnableAddressTransferAsync(EnableAddressTransferRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableAwsNetworkPerformanceMetricSubscriptionResponse> EnableAwsNetworkPerformanceMetricSubscriptionAsync(EnableAwsNetworkPerformanceMetricSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableEbsEncryptionByDefaultResponse> EnableEbsEncryptionByDefaultAsync(EnableEbsEncryptionByDefaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableFastLaunchResponse> EnableFastLaunchAsync(EnableFastLaunchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableFastSnapshotRestoresResponse> EnableFastSnapshotRestoresAsync(EnableFastSnapshotRestoresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableImageResponse> EnableImageAsync(EnableImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableImageBlockPublicAccessResponse> EnableImageBlockPublicAccessAsync(EnableImageBlockPublicAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableImageDeprecationResponse> EnableImageDeprecationAsync(EnableImageDeprecationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableImageDeregistrationProtectionResponse> EnableImageDeregistrationProtectionAsync(EnableImageDeregistrationProtectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableIpamOrganizationAdminAccountResponse> EnableIpamOrganizationAdminAccountAsync(EnableIpamOrganizationAdminAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableReachabilityAnalyzerOrganizationSharingResponse> EnableReachabilityAnalyzerOrganizationSharingAsync(EnableReachabilityAnalyzerOrganizationSharingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableSerialConsoleAccessResponse> EnableSerialConsoleAccessAsync(EnableSerialConsoleAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableSnapshotBlockPublicAccessResponse> EnableSnapshotBlockPublicAccessAsync(EnableSnapshotBlockPublicAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableTransitGatewayRouteTablePropagationResponse> EnableTransitGatewayRouteTablePropagationAsync(EnableTransitGatewayRouteTablePropagationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableVgwRoutePropagationResponse> EnableVgwRoutePropagationAsync(EnableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableVolumeIOResponse> EnableVolumeIOAsync(EnableVolumeIORequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableVpcClassicLinkResponse> EnableVpcClassicLinkAsync(EnableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableVpcClassicLinkDnsSupportResponse> EnableVpcClassicLinkDnsSupportAsync(EnableVpcClassicLinkDnsSupportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExportClientVpnClientCertificateRevocationListResponse> ExportClientVpnClientCertificateRevocationListAsync(ExportClientVpnClientCertificateRevocationListRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExportClientVpnClientConfigurationResponse> ExportClientVpnClientConfigurationAsync(ExportClientVpnClientConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExportImageResponse> ExportImageAsync(ExportImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExportTransitGatewayRoutesResponse> ExportTransitGatewayRoutesAsync(ExportTransitGatewayRoutesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAssociatedEnclaveCertificateIamRolesResponse> GetAssociatedEnclaveCertificateIamRolesAsync(GetAssociatedEnclaveCertificateIamRolesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAssociatedIpv6PoolCidrsResponse> GetAssociatedIpv6PoolCidrsAsync(GetAssociatedIpv6PoolCidrsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAwsNetworkPerformanceDataResponse> GetAwsNetworkPerformanceDataAsync(GetAwsNetworkPerformanceDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCapacityReservationUsageResponse> GetCapacityReservationUsageAsync(GetCapacityReservationUsageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCoipPoolUsageResponse> GetCoipPoolUsageAsync(GetCoipPoolUsageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetConsoleOutputResponse> GetConsoleOutputAsync(GetConsoleOutputRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetConsoleScreenshotResponse> GetConsoleScreenshotAsync(GetConsoleScreenshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDefaultCreditSpecificationResponse> GetDefaultCreditSpecificationAsync(GetDefaultCreditSpecificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetEbsDefaultKmsKeyIdResponse> GetEbsDefaultKmsKeyIdAsync(GetEbsDefaultKmsKeyIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetEbsEncryptionByDefaultResponse> GetEbsEncryptionByDefaultAsync(GetEbsEncryptionByDefaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFlowLogsIntegrationTemplateResponse> GetFlowLogsIntegrationTemplateAsync(GetFlowLogsIntegrationTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetGroupsForCapacityReservationResponse> GetGroupsForCapacityReservationAsync(GetGroupsForCapacityReservationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetHostReservationPurchasePreviewResponse> GetHostReservationPurchasePreviewAsync(GetHostReservationPurchasePreviewRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetImageBlockPublicAccessStateResponse> GetImageBlockPublicAccessStateAsync(GetImageBlockPublicAccessStateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInstanceMetadataDefaultsResponse> GetInstanceMetadataDefaultsAsync(GetInstanceMetadataDefaultsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInstanceTpmEkPubResponse> GetInstanceTpmEkPubAsync(GetInstanceTpmEkPubRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInstanceTypesFromInstanceRequirementsResponse> GetInstanceTypesFromInstanceRequirementsAsync(GetInstanceTypesFromInstanceRequirementsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInstanceUefiDataResponse> GetInstanceUefiDataAsync(GetInstanceUefiDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIpamAddressHistoryResponse> GetIpamAddressHistoryAsync(GetIpamAddressHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIpamDiscoveredAccountsResponse> GetIpamDiscoveredAccountsAsync(GetIpamDiscoveredAccountsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIpamDiscoveredPublicAddressesResponse> GetIpamDiscoveredPublicAddressesAsync(GetIpamDiscoveredPublicAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIpamDiscoveredResourceCidrsResponse> GetIpamDiscoveredResourceCidrsAsync(GetIpamDiscoveredResourceCidrsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIpamPoolAllocationsResponse> GetIpamPoolAllocationsAsync(GetIpamPoolAllocationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIpamPoolCidrsResponse> GetIpamPoolCidrsAsync(GetIpamPoolCidrsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIpamResourceCidrsResponse> GetIpamResourceCidrsAsync(GetIpamResourceCidrsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetLaunchTemplateDataResponse> GetLaunchTemplateDataAsync(GetLaunchTemplateDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetManagedPrefixListAssociationsResponse> GetManagedPrefixListAssociationsAsync(GetManagedPrefixListAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetManagedPrefixListEntriesResponse> GetManagedPrefixListEntriesAsync(GetManagedPrefixListEntriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetNetworkInsightsAccessScopeAnalysisFindingsResponse> GetNetworkInsightsAccessScopeAnalysisFindingsAsync(GetNetworkInsightsAccessScopeAnalysisFindingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetNetworkInsightsAccessScopeContentResponse> GetNetworkInsightsAccessScopeContentAsync(GetNetworkInsightsAccessScopeContentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPasswordDataResponse> GetPasswordDataAsync(GetPasswordDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetReservedInstancesExchangeQuoteResponse> GetReservedInstancesExchangeQuoteAsync(GetReservedInstancesExchangeQuoteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSecurityGroupsForVpcResponse> GetSecurityGroupsForVpcAsync(GetSecurityGroupsForVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSerialConsoleAccessStatusResponse> GetSerialConsoleAccessStatusAsync(GetSerialConsoleAccessStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSnapshotBlockPublicAccessStateResponse> GetSnapshotBlockPublicAccessStateAsync(GetSnapshotBlockPublicAccessStateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSpotPlacementScoresResponse> GetSpotPlacementScoresAsync(GetSpotPlacementScoresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSubnetCidrReservationsResponse> GetSubnetCidrReservationsAsync(GetSubnetCidrReservationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTransitGatewayAttachmentPropagationsResponse> GetTransitGatewayAttachmentPropagationsAsync(GetTransitGatewayAttachmentPropagationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTransitGatewayMulticastDomainAssociationsResponse> GetTransitGatewayMulticastDomainAssociationsAsync(GetTransitGatewayMulticastDomainAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTransitGatewayPolicyTableAssociationsResponse> GetTransitGatewayPolicyTableAssociationsAsync(GetTransitGatewayPolicyTableAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTransitGatewayPolicyTableEntriesResponse> GetTransitGatewayPolicyTableEntriesAsync(GetTransitGatewayPolicyTableEntriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTransitGatewayPrefixListReferencesResponse> GetTransitGatewayPrefixListReferencesAsync(GetTransitGatewayPrefixListReferencesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTransitGatewayRouteTableAssociationsResponse> GetTransitGatewayRouteTableAssociationsAsync(GetTransitGatewayRouteTableAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTransitGatewayRouteTablePropagationsResponse> GetTransitGatewayRouteTablePropagationsAsync(GetTransitGatewayRouteTablePropagationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVerifiedAccessEndpointPolicyResponse> GetVerifiedAccessEndpointPolicyAsync(GetVerifiedAccessEndpointPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVerifiedAccessGroupPolicyResponse> GetVerifiedAccessGroupPolicyAsync(GetVerifiedAccessGroupPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVpnConnectionDeviceSampleConfigurationResponse> GetVpnConnectionDeviceSampleConfigurationAsync(GetVpnConnectionDeviceSampleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVpnConnectionDeviceTypesResponse> GetVpnConnectionDeviceTypesAsync(GetVpnConnectionDeviceTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVpnTunnelReplacementStatusResponse> GetVpnTunnelReplacementStatusAsync(GetVpnTunnelReplacementStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportClientVpnClientCertificateRevocationListResponse> ImportClientVpnClientCertificateRevocationListAsync(ImportClientVpnClientCertificateRevocationListRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportImageResponse> ImportImageAsync(ImportImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportInstanceResponse> ImportInstanceAsync(ImportInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportKeyPairResponse> ImportKeyPairAsync(ImportKeyPairRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportSnapshotResponse> ImportSnapshotAsync(ImportSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportVolumeResponse> ImportVolumeAsync(ImportVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListImagesInRecycleBinResponse> ListImagesInRecycleBinAsync(ListImagesInRecycleBinRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSnapshotsInRecycleBinResponse> ListSnapshotsInRecycleBinAsync(ListSnapshotsInRecycleBinRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LockSnapshotResponse> LockSnapshotAsync(LockSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyAddressAttributeResponse> ModifyAddressAttributeAsync(ModifyAddressAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyAvailabilityZoneGroupResponse> ModifyAvailabilityZoneGroupAsync(ModifyAvailabilityZoneGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyCapacityReservationResponse> ModifyCapacityReservationAsync(ModifyCapacityReservationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyCapacityReservationFleetResponse> ModifyCapacityReservationFleetAsync(ModifyCapacityReservationFleetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyClientVpnEndpointResponse> ModifyClientVpnEndpointAsync(ModifyClientVpnEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDefaultCreditSpecificationResponse> ModifyDefaultCreditSpecificationAsync(ModifyDefaultCreditSpecificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyEbsDefaultKmsKeyIdResponse> ModifyEbsDefaultKmsKeyIdAsync(ModifyEbsDefaultKmsKeyIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyFleetResponse> ModifyFleetAsync(ModifyFleetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyFpgaImageAttributeResponse> ModifyFpgaImageAttributeAsync(ModifyFpgaImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyHostsResponse> ModifyHostsAsync(ModifyHostsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIdentityIdFormatResponse> ModifyIdentityIdFormatAsync(ModifyIdentityIdFormatRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIdFormatResponse> ModifyIdFormatAsync(ModifyIdFormatRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyImageAttributeResponse> ModifyImageAttributeAsync(ModifyImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceAttributeResponse> ModifyInstanceAttributeAsync(ModifyInstanceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceCapacityReservationAttributesResponse> ModifyInstanceCapacityReservationAttributesAsync(ModifyInstanceCapacityReservationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceCreditSpecificationResponse> ModifyInstanceCreditSpecificationAsync(ModifyInstanceCreditSpecificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceEventStartTimeResponse> ModifyInstanceEventStartTimeAsync(ModifyInstanceEventStartTimeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceEventWindowResponse> ModifyInstanceEventWindowAsync(ModifyInstanceEventWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceMaintenanceOptionsResponse> ModifyInstanceMaintenanceOptionsAsync(ModifyInstanceMaintenanceOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceMetadataDefaultsResponse> ModifyInstanceMetadataDefaultsAsync(ModifyInstanceMetadataDefaultsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceMetadataOptionsResponse> ModifyInstanceMetadataOptionsAsync(ModifyInstanceMetadataOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstancePlacementResponse> ModifyInstancePlacementAsync(ModifyInstancePlacementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIpamResponse> ModifyIpamAsync(ModifyIpamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIpamPoolResponse> ModifyIpamPoolAsync(ModifyIpamPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIpamResourceCidrResponse> ModifyIpamResourceCidrAsync(ModifyIpamResourceCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIpamResourceDiscoveryResponse> ModifyIpamResourceDiscoveryAsync(ModifyIpamResourceDiscoveryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIpamScopeResponse> ModifyIpamScopeAsync(ModifyIpamScopeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyLaunchTemplateResponse> ModifyLaunchTemplateAsync(ModifyLaunchTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyLocalGatewayRouteResponse> ModifyLocalGatewayRouteAsync(ModifyLocalGatewayRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyManagedPrefixListResponse> ModifyManagedPrefixListAsync(ModifyManagedPrefixListRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyNetworkInterfaceAttributeResponse> ModifyNetworkInterfaceAttributeAsync(ModifyNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyPrivateDnsNameOptionsResponse> ModifyPrivateDnsNameOptionsAsync(ModifyPrivateDnsNameOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyReservedInstancesResponse> ModifyReservedInstancesAsync(ModifyReservedInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifySecurityGroupRulesResponse> ModifySecurityGroupRulesAsync(ModifySecurityGroupRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifySnapshotAttributeResponse> ModifySnapshotAttributeAsync(ModifySnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifySnapshotTierResponse> ModifySnapshotTierAsync(ModifySnapshotTierRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifySpotFleetRequestResponse> ModifySpotFleetRequestAsync(ModifySpotFleetRequestRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifySubnetAttributeResponse> ModifySubnetAttributeAsync(ModifySubnetAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTrafficMirrorFilterNetworkServicesResponse> ModifyTrafficMirrorFilterNetworkServicesAsync(ModifyTrafficMirrorFilterNetworkServicesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTrafficMirrorFilterRuleResponse> ModifyTrafficMirrorFilterRuleAsync(ModifyTrafficMirrorFilterRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTrafficMirrorSessionResponse> ModifyTrafficMirrorSessionAsync(ModifyTrafficMirrorSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTransitGatewayResponse> ModifyTransitGatewayAsync(ModifyTransitGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTransitGatewayPrefixListReferenceResponse> ModifyTransitGatewayPrefixListReferenceAsync(ModifyTransitGatewayPrefixListReferenceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTransitGatewayVpcAttachmentResponse> ModifyTransitGatewayVpcAttachmentAsync(ModifyTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVerifiedAccessEndpointResponse> ModifyVerifiedAccessEndpointAsync(ModifyVerifiedAccessEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVerifiedAccessEndpointPolicyResponse> ModifyVerifiedAccessEndpointPolicyAsync(ModifyVerifiedAccessEndpointPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVerifiedAccessGroupResponse> ModifyVerifiedAccessGroupAsync(ModifyVerifiedAccessGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVerifiedAccessGroupPolicyResponse> ModifyVerifiedAccessGroupPolicyAsync(ModifyVerifiedAccessGroupPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVerifiedAccessInstanceResponse> ModifyVerifiedAccessInstanceAsync(ModifyVerifiedAccessInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVerifiedAccessInstanceLoggingConfigurationResponse> ModifyVerifiedAccessInstanceLoggingConfigurationAsync(ModifyVerifiedAccessInstanceLoggingConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVerifiedAccessTrustProviderResponse> ModifyVerifiedAccessTrustProviderAsync(ModifyVerifiedAccessTrustProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVolumeResponse> ModifyVolumeAsync(ModifyVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVolumeAttributeResponse> ModifyVolumeAttributeAsync(ModifyVolumeAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcAttributeResponse> ModifyVpcAttributeAsync(ModifyVpcAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcEndpointResponse> ModifyVpcEndpointAsync(ModifyVpcEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcEndpointConnectionNotificationResponse> ModifyVpcEndpointConnectionNotificationAsync(ModifyVpcEndpointConnectionNotificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcEndpointServiceConfigurationResponse> ModifyVpcEndpointServiceConfigurationAsync(ModifyVpcEndpointServiceConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcEndpointServicePayerResponsibilityResponse> ModifyVpcEndpointServicePayerResponsibilityAsync(ModifyVpcEndpointServicePayerResponsibilityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcEndpointServicePermissionsResponse> ModifyVpcEndpointServicePermissionsAsync(ModifyVpcEndpointServicePermissionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcPeeringConnectionOptionsResponse> ModifyVpcPeeringConnectionOptionsAsync(ModifyVpcPeeringConnectionOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcTenancyResponse> ModifyVpcTenancyAsync(ModifyVpcTenancyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpnConnectionResponse> ModifyVpnConnectionAsync(ModifyVpnConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpnConnectionOptionsResponse> ModifyVpnConnectionOptionsAsync(ModifyVpnConnectionOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpnTunnelCertificateResponse> ModifyVpnTunnelCertificateAsync(ModifyVpnTunnelCertificateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpnTunnelOptionsResponse> ModifyVpnTunnelOptionsAsync(ModifyVpnTunnelOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MonitorInstancesResponse> MonitorInstancesAsync(MonitorInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MoveAddressToVpcResponse> MoveAddressToVpcAsync(MoveAddressToVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MoveByoipCidrToIpamResponse> MoveByoipCidrToIpamAsync(MoveByoipCidrToIpamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ProvisionByoipCidrResponse> ProvisionByoipCidrAsync(ProvisionByoipCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ProvisionIpamByoasnResponse> ProvisionIpamByoasnAsync(ProvisionIpamByoasnRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ProvisionIpamPoolCidrResponse> ProvisionIpamPoolCidrAsync(ProvisionIpamPoolCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ProvisionPublicIpv4PoolCidrResponse> ProvisionPublicIpv4PoolCidrAsync(ProvisionPublicIpv4PoolCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurchaseCapacityBlockResponse> PurchaseCapacityBlockAsync(PurchaseCapacityBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurchaseHostReservationResponse> PurchaseHostReservationAsync(PurchaseHostReservationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurchaseReservedInstancesOfferingResponse> PurchaseReservedInstancesOfferingAsync(PurchaseReservedInstancesOfferingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurchaseScheduledInstancesResponse> PurchaseScheduledInstancesAsync(PurchaseScheduledInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootInstancesResponse> RebootInstancesAsync(RebootInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterImageResponse> RegisterImageAsync(RegisterImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterInstanceEventNotificationAttributesResponse> RegisterInstanceEventNotificationAttributesAsync(RegisterInstanceEventNotificationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterTransitGatewayMulticastGroupMembersResponse> RegisterTransitGatewayMulticastGroupMembersAsync(RegisterTransitGatewayMulticastGroupMembersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterTransitGatewayMulticastGroupSourcesResponse> RegisterTransitGatewayMulticastGroupSourcesAsync(RegisterTransitGatewayMulticastGroupSourcesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RejectTransitGatewayMulticastDomainAssociationsResponse> RejectTransitGatewayMulticastDomainAssociationsAsync(RejectTransitGatewayMulticastDomainAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RejectTransitGatewayPeeringAttachmentResponse> RejectTransitGatewayPeeringAttachmentAsync(RejectTransitGatewayPeeringAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RejectTransitGatewayVpcAttachmentResponse> RejectTransitGatewayVpcAttachmentAsync(RejectTransitGatewayVpcAttachmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RejectVpcEndpointConnectionsResponse> RejectVpcEndpointConnectionsAsync(RejectVpcEndpointConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RejectVpcPeeringConnectionResponse> RejectVpcPeeringConnectionAsync(RejectVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReleaseAddressResponse> ReleaseAddressAsync(ReleaseAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReleaseHostsResponse> ReleaseHostsAsync(ReleaseHostsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReleaseIpamPoolAllocationResponse> ReleaseIpamPoolAllocationAsync(ReleaseIpamPoolAllocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceIamInstanceProfileAssociationResponse> ReplaceIamInstanceProfileAssociationAsync(ReplaceIamInstanceProfileAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceNetworkAclAssociationResponse> ReplaceNetworkAclAssociationAsync(ReplaceNetworkAclAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceNetworkAclEntryResponse> ReplaceNetworkAclEntryAsync(ReplaceNetworkAclEntryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceRouteResponse> ReplaceRouteAsync(ReplaceRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceRouteTableAssociationResponse> ReplaceRouteTableAssociationAsync(ReplaceRouteTableAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceTransitGatewayRouteResponse> ReplaceTransitGatewayRouteAsync(ReplaceTransitGatewayRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceVpnTunnelResponse> ReplaceVpnTunnelAsync(ReplaceVpnTunnelRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReportInstanceStatusResponse> ReportInstanceStatusAsync(ReportInstanceStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RequestSpotFleetResponse> RequestSpotFleetAsync(RequestSpotFleetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RequestSpotInstancesResponse> RequestSpotInstancesAsync(RequestSpotInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetAddressAttributeResponse> ResetAddressAttributeAsync(ResetAddressAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetEbsDefaultKmsKeyIdResponse> ResetEbsDefaultKmsKeyIdAsync(ResetEbsDefaultKmsKeyIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetFpgaImageAttributeResponse> ResetFpgaImageAttributeAsync(ResetFpgaImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetImageAttributeResponse> ResetImageAttributeAsync(ResetImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetInstanceAttributeResponse> ResetInstanceAttributeAsync(ResetInstanceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetNetworkInterfaceAttributeResponse> ResetNetworkInterfaceAttributeAsync(ResetNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetSnapshotAttributeResponse> ResetSnapshotAttributeAsync(ResetSnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreAddressToClassicResponse> RestoreAddressToClassicAsync(RestoreAddressToClassicRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreImageFromRecycleBinResponse> RestoreImageFromRecycleBinAsync(RestoreImageFromRecycleBinRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreManagedPrefixListVersionResponse> RestoreManagedPrefixListVersionAsync(RestoreManagedPrefixListVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreSnapshotFromRecycleBinResponse> RestoreSnapshotFromRecycleBinAsync(RestoreSnapshotFromRecycleBinRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreSnapshotTierResponse> RestoreSnapshotTierAsync(RestoreSnapshotTierRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeClientVpnIngressResponse> RevokeClientVpnIngressAsync(RevokeClientVpnIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeSecurityGroupEgressResponse> RevokeSecurityGroupEgressAsync(RevokeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeSecurityGroupIngressResponse> RevokeSecurityGroupIngressAsync(RevokeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RunInstancesResponse> RunInstancesAsync(RunInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RunScheduledInstancesResponse> RunScheduledInstancesAsync(RunScheduledInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SearchLocalGatewayRoutesResponse> SearchLocalGatewayRoutesAsync(SearchLocalGatewayRoutesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SearchTransitGatewayMulticastGroupsResponse> SearchTransitGatewayMulticastGroupsAsync(SearchTransitGatewayMulticastGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SearchTransitGatewayRoutesResponse> SearchTransitGatewayRoutesAsync(SearchTransitGatewayRoutesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendDiagnosticInterruptResponse> SendDiagnosticInterruptAsync(SendDiagnosticInterruptRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartInstancesResponse> StartInstancesAsync(StartInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartNetworkInsightsAccessScopeAnalysisResponse> StartNetworkInsightsAccessScopeAnalysisAsync(StartNetworkInsightsAccessScopeAnalysisRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartNetworkInsightsAnalysisResponse> StartNetworkInsightsAnalysisAsync(StartNetworkInsightsAnalysisRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartVpcEndpointServicePrivateDnsVerificationResponse> StartVpcEndpointServicePrivateDnsVerificationAsync(StartVpcEndpointServicePrivateDnsVerificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopInstancesResponse> StopInstancesAsync(StopInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TerminateClientVpnConnectionsResponse> TerminateClientVpnConnectionsAsync(TerminateClientVpnConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TerminateInstancesResponse> TerminateInstancesAsync(TerminateInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnassignIpv6AddressesResponse> UnassignIpv6AddressesAsync(UnassignIpv6AddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnassignPrivateIpAddressesResponse> UnassignPrivateIpAddressesAsync(UnassignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnassignPrivateNatGatewayAddressResponse> UnassignPrivateNatGatewayAddressAsync(UnassignPrivateNatGatewayAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnlockSnapshotResponse> UnlockSnapshotAsync(UnlockSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnmonitorInstancesResponse> UnmonitorInstancesAsync(UnmonitorInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSecurityGroupRuleDescriptionsEgressResponse> UpdateSecurityGroupRuleDescriptionsEgressAsync(UpdateSecurityGroupRuleDescriptionsEgressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSecurityGroupRuleDescriptionsIngressResponse> UpdateSecurityGroupRuleDescriptionsIngressAsync(UpdateSecurityGroupRuleDescriptionsIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<WithdrawByoipCidrResponse> WithdrawByoipCidrAsync(WithdrawByoipCidrRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.EC2.AmazonEC2Config")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.EC2.IamInstanceProfileAssociationState : ConstantClass {
    public static IamInstanceProfileAssociationState Associated;
    public static IamInstanceProfileAssociationState Associating;
    public static IamInstanceProfileAssociationState Disassociated;
    public static IamInstanceProfileAssociationState Disassociating;
    public IamInstanceProfileAssociationState(string value);
    private static IamInstanceProfileAssociationState();
    public static IamInstanceProfileAssociationState FindValue(string value);
    public static IamInstanceProfileAssociationState op_Implicit(string value);
}
public class Amazon.EC2.Igmpv2SupportValue : ConstantClass {
    public static Igmpv2SupportValue Disable;
    public static Igmpv2SupportValue Enable;
    public Igmpv2SupportValue(string value);
    private static Igmpv2SupportValue();
    public static Igmpv2SupportValue FindValue(string value);
    public static Igmpv2SupportValue op_Implicit(string value);
}
public class Amazon.EC2.ImageAttributeName : ConstantClass {
    public static ImageAttributeName BlockDeviceMapping;
    public static ImageAttributeName BootMode;
    public static ImageAttributeName DeregistrationProtection;
    public static ImageAttributeName Description;
    public static ImageAttributeName ImdsSupport;
    public static ImageAttributeName Kernel;
    public static ImageAttributeName LastLaunchedTime;
    public static ImageAttributeName LaunchPermission;
    public static ImageAttributeName ProductCodes;
    public static ImageAttributeName Ramdisk;
    public static ImageAttributeName SriovNetSupport;
    public static ImageAttributeName TpmSupport;
    public static ImageAttributeName UefiData;
    public ImageAttributeName(string value);
    private static ImageAttributeName();
    public static ImageAttributeName FindValue(string value);
    public static ImageAttributeName op_Implicit(string value);
}
public class Amazon.EC2.ImageBlockPublicAccessDisabledState : ConstantClass {
    public static ImageBlockPublicAccessDisabledState Unblocked;
    public ImageBlockPublicAccessDisabledState(string value);
    private static ImageBlockPublicAccessDisabledState();
    public static ImageBlockPublicAccessDisabledState FindValue(string value);
    public static ImageBlockPublicAccessDisabledState op_Implicit(string value);
}
public class Amazon.EC2.ImageBlockPublicAccessEnabledState : ConstantClass {
    public static ImageBlockPublicAccessEnabledState BlockNewSharing;
    public ImageBlockPublicAccessEnabledState(string value);
    private static ImageBlockPublicAccessEnabledState();
    public static ImageBlockPublicAccessEnabledState FindValue(string value);
    public static ImageBlockPublicAccessEnabledState op_Implicit(string value);
}
public class Amazon.EC2.ImageState : ConstantClass {
    public static ImageState Available;
    public static ImageState Deregistered;
    public static ImageState Disabled;
    public static ImageState Error;
    public static ImageState Failed;
    public static ImageState Invalid;
    public static ImageState Pending;
    public static ImageState Transient;
    public ImageState(string value);
    private static ImageState();
    public static ImageState FindValue(string value);
    public static ImageState op_Implicit(string value);
}
public class Amazon.EC2.ImageTypeValues : ConstantClass {
    public static ImageTypeValues Kernel;
    public static ImageTypeValues Machine;
    public static ImageTypeValues Ramdisk;
    public ImageTypeValues(string value);
    private static ImageTypeValues();
    public static ImageTypeValues FindValue(string value);
    public static ImageTypeValues op_Implicit(string value);
}
public class Amazon.EC2.ImdsSupportValues : ConstantClass {
    public static ImdsSupportValues V20;
    public ImdsSupportValues(string value);
    private static ImdsSupportValues();
    public static ImdsSupportValues FindValue(string value);
    public static ImdsSupportValues op_Implicit(string value);
}
public class Amazon.EC2.InstanceAttributeName : ConstantClass {
    public static InstanceAttributeName BlockDeviceMapping;
    public static InstanceAttributeName DisableApiStop;
    public static InstanceAttributeName DisableApiTermination;
    public static InstanceAttributeName EbsOptimized;
    public static InstanceAttributeName EnaSupport;
    public static InstanceAttributeName EnclaveOptions;
    public static InstanceAttributeName GroupSet;
    public static InstanceAttributeName InstanceInitiatedShutdownBehavior;
    public static InstanceAttributeName InstanceType;
    public static InstanceAttributeName Kernel;
    public static InstanceAttributeName ProductCodes;
    public static InstanceAttributeName Ramdisk;
    public static InstanceAttributeName RootDeviceName;
    public static InstanceAttributeName SourceDestCheck;
    public static InstanceAttributeName SriovNetSupport;
    public static InstanceAttributeName UserData;
    public InstanceAttributeName(string value);
    private static InstanceAttributeName();
    public static InstanceAttributeName FindValue(string value);
    public static InstanceAttributeName op_Implicit(string value);
}
public class Amazon.EC2.InstanceAutoRecoveryState : ConstantClass {
    public static InstanceAutoRecoveryState Default;
    public static InstanceAutoRecoveryState Disabled;
    public InstanceAutoRecoveryState(string value);
    private static InstanceAutoRecoveryState();
    public static InstanceAutoRecoveryState FindValue(string value);
    public static InstanceAutoRecoveryState op_Implicit(string value);
}
public class Amazon.EC2.InstanceBootModeValues : ConstantClass {
    public static InstanceBootModeValues LegacyBios;
    public static InstanceBootModeValues Uefi;
    public InstanceBootModeValues(string value);
    private static InstanceBootModeValues();
    public static InstanceBootModeValues FindValue(string value);
    public static InstanceBootModeValues op_Implicit(string value);
}
public class Amazon.EC2.InstanceEventWindowState : ConstantClass {
    public static InstanceEventWindowState Active;
    public static InstanceEventWindowState Creating;
    public static InstanceEventWindowState Deleted;
    public static InstanceEventWindowState Deleting;
    public InstanceEventWindowState(string value);
    private static InstanceEventWindowState();
    public static InstanceEventWindowState FindValue(string value);
    public static InstanceEventWindowState op_Implicit(string value);
}
public class Amazon.EC2.InstanceGeneration : ConstantClass {
    public static InstanceGeneration Current;
    public static InstanceGeneration Previous;
    public InstanceGeneration(string value);
    private static InstanceGeneration();
    public static InstanceGeneration FindValue(string value);
    public static InstanceGeneration op_Implicit(string value);
}
public class Amazon.EC2.InstanceHealthStatus : ConstantClass {
    public static InstanceHealthStatus Healthy;
    public static InstanceHealthStatus Unhealthy;
    public InstanceHealthStatus(string value);
    private static InstanceHealthStatus();
    public static InstanceHealthStatus FindValue(string value);
    public static InstanceHealthStatus op_Implicit(string value);
}
public class Amazon.EC2.InstanceInterruptionBehavior : ConstantClass {
    public static InstanceInterruptionBehavior Hibernate;
    public static InstanceInterruptionBehavior Stop;
    public static InstanceInterruptionBehavior Terminate;
    public InstanceInterruptionBehavior(string value);
    private static InstanceInterruptionBehavior();
    public static InstanceInterruptionBehavior FindValue(string value);
    public static InstanceInterruptionBehavior op_Implicit(string value);
}
public class Amazon.EC2.InstanceLifecycle : ConstantClass {
    public static InstanceLifecycle OnDemand;
    public static InstanceLifecycle Spot;
    public InstanceLifecycle(string value);
    private static InstanceLifecycle();
    public static InstanceLifecycle FindValue(string value);
    public static InstanceLifecycle op_Implicit(string value);
}
public class Amazon.EC2.InstanceLifecycleType : ConstantClass {
    public static InstanceLifecycleType CapacityBlock;
    public static InstanceLifecycleType Scheduled;
    public static InstanceLifecycleType Spot;
    public InstanceLifecycleType(string value);
    private static InstanceLifecycleType();
    public static InstanceLifecycleType FindValue(string value);
    public static InstanceLifecycleType op_Implicit(string value);
}
public class Amazon.EC2.InstanceMatchCriteria : ConstantClass {
    public static InstanceMatchCriteria Open;
    public static InstanceMatchCriteria Targeted;
    public InstanceMatchCriteria(string value);
    private static InstanceMatchCriteria();
    public static InstanceMatchCriteria FindValue(string value);
    public static InstanceMatchCriteria op_Implicit(string value);
}
public class Amazon.EC2.InstanceMetadataEndpointState : ConstantClass {
    public static InstanceMetadataEndpointState Disabled;
    public static InstanceMetadataEndpointState Enabled;
    public InstanceMetadataEndpointState(string value);
    private static InstanceMetadataEndpointState();
    public static InstanceMetadataEndpointState FindValue(string value);
    public static InstanceMetadataEndpointState op_Implicit(string value);
}
public class Amazon.EC2.InstanceMetadataOptionsState : ConstantClass {
    public static InstanceMetadataOptionsState Applied;
    public static InstanceMetadataOptionsState Pending;
    public InstanceMetadataOptionsState(string value);
    private static InstanceMetadataOptionsState();
    public static InstanceMetadataOptionsState FindValue(string value);
    public static InstanceMetadataOptionsState op_Implicit(string value);
}
public class Amazon.EC2.InstanceMetadataProtocolState : ConstantClass {
    public static InstanceMetadataProtocolState Disabled;
    public static InstanceMetadataProtocolState Enabled;
    public InstanceMetadataProtocolState(string value);
    private static InstanceMetadataProtocolState();
    public static InstanceMetadataProtocolState FindValue(string value);
    public static InstanceMetadataProtocolState op_Implicit(string value);
}
public class Amazon.EC2.InstanceMetadataTagsState : ConstantClass {
    public static InstanceMetadataTagsState Disabled;
    public static InstanceMetadataTagsState Enabled;
    public InstanceMetadataTagsState(string value);
    private static InstanceMetadataTagsState();
    public static InstanceMetadataTagsState FindValue(string value);
    public static InstanceMetadataTagsState op_Implicit(string value);
}
public class Amazon.EC2.InstanceStateName : ConstantClass {
    public static InstanceStateName Pending;
    public static InstanceStateName Running;
    public static InstanceStateName ShuttingDown;
    public static InstanceStateName Stopped;
    public static InstanceStateName Stopping;
    public static InstanceStateName Terminated;
    public InstanceStateName(string value);
    private static InstanceStateName();
    public static InstanceStateName FindValue(string value);
    public static InstanceStateName op_Implicit(string value);
}
public class Amazon.EC2.InstanceStorageEncryptionSupport : ConstantClass {
    public static InstanceStorageEncryptionSupport Required;
    public static InstanceStorageEncryptionSupport Unsupported;
    public InstanceStorageEncryptionSupport(string value);
    private static InstanceStorageEncryptionSupport();
    public static InstanceStorageEncryptionSupport FindValue(string value);
    public static InstanceStorageEncryptionSupport op_Implicit(string value);
}
public class Amazon.EC2.InstanceType : ConstantClass {
    public static InstanceType A12xlarge;
    public static InstanceType A14xlarge;
    public static InstanceType A1Large;
    public static InstanceType A1Medium;
    public static InstanceType A1Metal;
    public static InstanceType A1Xlarge;
    public static InstanceType C1Medium;
    public static InstanceType C1Xlarge;
    public static InstanceType C32xlarge;
    public static InstanceType C34xlarge;
    public static InstanceType C38xlarge;
    public static InstanceType C3Large;
    public static InstanceType C3Xlarge;
    public static InstanceType C42xlarge;
    public static InstanceType C44xlarge;
    public static InstanceType C48xlarge;
    public static InstanceType C4Large;
    public static InstanceType C4Xlarge;
    public static InstanceType C512xlarge;
    public static InstanceType C518xlarge;
    public static InstanceType C524xlarge;
    public static InstanceType C52xlarge;
    public static InstanceType C54xlarge;
    public static InstanceType C59xlarge;
    public static InstanceType C5a12xlarge;
    public static InstanceType C5a16xlarge;
    public static InstanceType C5a24xlarge;
    public static InstanceType C5a2xlarge;
    public static InstanceType C5a4xlarge;
    public static InstanceType C5a8xlarge;
    public static InstanceType C5ad12xlarge;
    public static InstanceType C5ad16xlarge;
    public static InstanceType C5ad24xlarge;
    public static InstanceType C5ad2xlarge;
    public static InstanceType C5ad4xlarge;
    public static InstanceType C5ad8xlarge;
    public static InstanceType C5adLarge;
    public static InstanceType C5adXlarge;
    public static InstanceType C5aLarge;
    public static InstanceType C5aXlarge;
    public static InstanceType C5d12xlarge;
    public static InstanceType C5d18xlarge;
    public static InstanceType C5d24xlarge;
    public static InstanceType C5d2xlarge;
    public static InstanceType C5d4xlarge;
    public static InstanceType C5d9xlarge;
    public static InstanceType C5dLarge;
    public static InstanceType C5dMetal;
    public static InstanceType C5dXlarge;
    public static InstanceType C5Large;
    public static InstanceType C5Metal;
    public static InstanceType C5n18xlarge;
    public static InstanceType C5n2xlarge;
    public static InstanceType C5n4xlarge;
    public static InstanceType C5n9xlarge;
    public static InstanceType C5nLarge;
    public static InstanceType C5nMetal;
    public static InstanceType C5nXlarge;
    public static InstanceType C5Xlarge;
    public static InstanceType C6a12xlarge;
    public static InstanceType C6a16xlarge;
    public static InstanceType C6a24xlarge;
    public static InstanceType C6a2xlarge;
    public static InstanceType C6a32xlarge;
    public static InstanceType C6a48xlarge;
    public static InstanceType C6a4xlarge;
    public static InstanceType C6a8xlarge;
    public static InstanceType C6aLarge;
    public static InstanceType C6aMetal;
    public static InstanceType C6aXlarge;
    public static InstanceType C6g12xlarge;
    public static InstanceType C6g16xlarge;
    public static InstanceType C6g2xlarge;
    public static InstanceType C6g4xlarge;
    public static InstanceType C6g8xlarge;
    public static InstanceType C6gd12xlarge;
    public static InstanceType C6gd16xlarge;
    public static InstanceType C6gd2xlarge;
    public static InstanceType C6gd4xlarge;
    public static InstanceType C6gd8xlarge;
    public static InstanceType C6gdLarge;
    public static InstanceType C6gdMedium;
    public static InstanceType C6gdMetal;
    public static InstanceType C6gdXlarge;
    public static InstanceType C6gLarge;
    public static InstanceType C6gMedium;
    public static InstanceType C6gMetal;
    public static InstanceType C6gn12xlarge;
    public static InstanceType C6gn16xlarge;
    public static InstanceType C6gn2xlarge;
    public static InstanceType C6gn4xlarge;
    public static InstanceType C6gn8xlarge;
    public static InstanceType C6gnLarge;
    public static InstanceType C6gnMedium;
    public static InstanceType C6gnXlarge;
    public static InstanceType C6gXlarge;
    public static InstanceType C6i12xlarge;
    public static InstanceType C6i16xlarge;
    public static InstanceType C6i24xlarge;
    public static InstanceType C6i2xlarge;
    public static InstanceType C6i32xlarge;
    public static InstanceType C6i4xlarge;
    public static InstanceType C6i8xlarge;
    public static InstanceType C6id12xlarge;
    public static InstanceType C6id16xlarge;
    public static InstanceType C6id24xlarge;
    public static InstanceType C6id2xlarge;
    public static InstanceType C6id32xlarge;
    public static InstanceType C6id4xlarge;
    public static InstanceType C6id8xlarge;
    public static InstanceType C6idLarge;
    public static InstanceType C6idMetal;
    public static InstanceType C6idXlarge;
    public static InstanceType C6iLarge;
    public static InstanceType C6iMetal;
    public static InstanceType C6in12xlarge;
    public static InstanceType C6in16xlarge;
    public static InstanceType C6in24xlarge;
    public static InstanceType C6in2xlarge;
    public static InstanceType C6in32xlarge;
    public static InstanceType C6in4xlarge;
    public static InstanceType C6in8xlarge;
    public static InstanceType C6inLarge;
    public static InstanceType C6inMetal;
    public static InstanceType C6inXlarge;
    public static InstanceType C6iXlarge;
    public static InstanceType C7a12xlarge;
    public static InstanceType C7a16xlarge;
    public static InstanceType C7a24xlarge;
    public static InstanceType C7a2xlarge;
    public static InstanceType C7a32xlarge;
    public static InstanceType C7a48xlarge;
    public static InstanceType C7a4xlarge;
    public static InstanceType C7a8xlarge;
    public static InstanceType C7aLarge;
    public static InstanceType C7aMedium;
    public static InstanceType C7aMetal48xl;
    public static InstanceType C7aXlarge;
    public static InstanceType C7g12xlarge;
    public static InstanceType C7g16xlarge;
    public static InstanceType C7g2xlarge;
    public static InstanceType C7g4xlarge;
    public static InstanceType C7g8xlarge;
    public static InstanceType C7gd12xlarge;
    public static InstanceType C7gd16xlarge;
    public static InstanceType C7gd2xlarge;
    public static InstanceType C7gd4xlarge;
    public static InstanceType C7gd8xlarge;
    public static InstanceType C7gdLarge;
    public static InstanceType C7gdMedium;
    public static InstanceType C7gdMetal;
    public static InstanceType C7gdXlarge;
    public static InstanceType C7gLarge;
    public static InstanceType C7gMedium;
    public static InstanceType C7gMetal;
    public static InstanceType C7gn12xlarge;
    public static InstanceType C7gn16xlarge;
    public static InstanceType C7gn2xlarge;
    public static InstanceType C7gn4xlarge;
    public static InstanceType C7gn8xlarge;
    public static InstanceType C7gnLarge;
    public static InstanceType C7gnMedium;
    public static InstanceType C7gnMetal;
    public static InstanceType C7gnXlarge;
    public static InstanceType C7gXlarge;
    public static InstanceType C7i12xlarge;
    public static InstanceType C7i16xlarge;
    public static InstanceType C7i24xlarge;
    public static InstanceType C7i2xlarge;
    public static InstanceType C7i48xlarge;
    public static InstanceType C7i4xlarge;
    public static InstanceType C7i8xlarge;
    public static InstanceType C7iFlex2xlarge;
    public static InstanceType C7iFlex4xlarge;
    public static InstanceType C7iFlex8xlarge;
    public static InstanceType C7iFlexLarge;
    public static InstanceType C7iFlexXlarge;
    public static InstanceType C7iLarge;
    public static InstanceType C7iMetal24xl;
    public static InstanceType C7iMetal48xl;
    public static InstanceType C7iXlarge;
    public static InstanceType Cc14xlarge;
    public static InstanceType Cc28xlarge;
    public static InstanceType Cg14xlarge;
    public static InstanceType Cr18xlarge;
    public static InstanceType D22xlarge;
    public static InstanceType D24xlarge;
    public static InstanceType D28xlarge;
    public static InstanceType D2Xlarge;
    public static InstanceType D32xlarge;
    public static InstanceType D34xlarge;
    public static InstanceType D38xlarge;
    public static InstanceType D3en12xlarge;
    public static InstanceType D3en2xlarge;
    public static InstanceType D3en4xlarge;
    public static InstanceType D3en6xlarge;
    public static InstanceType D3en8xlarge;
    public static InstanceType D3enXlarge;
    public static InstanceType D3Xlarge;
    public static InstanceType Dl124xlarge;
    public static InstanceType Dl2q24xlarge;
    public static InstanceType F116xlarge;
    public static InstanceType F12xlarge;
    public static InstanceType F14xlarge;
    public static InstanceType G22xlarge;
    public static InstanceType G28xlarge;
    public static InstanceType G316xlarge;
    public static InstanceType G34xlarge;
    public static InstanceType G38xlarge;
    public static InstanceType G3sXlarge;
    public static InstanceType G4ad16xlarge;
    public static InstanceType G4ad2xlarge;
    public static InstanceType G4ad4xlarge;
    public static InstanceType G4ad8xlarge;
    public static InstanceType G4adXlarge;
    public static InstanceType G4dn12xlarge;
    public static InstanceType G4dn16xlarge;
    public static InstanceType G4dn2xlarge;
    public static InstanceType G4dn4xlarge;
    public static InstanceType G4dn8xlarge;
    public static InstanceType G4dnMetal;
    public static InstanceType G4dnXlarge;
    public static InstanceType G512xlarge;
    public static InstanceType G516xlarge;
    public static InstanceType G524xlarge;
    public static InstanceType G52xlarge;
    public static InstanceType G548xlarge;
    public static InstanceType G54xlarge;
    public static InstanceType G58xlarge;
    public static InstanceType G5g16xlarge;
    public static InstanceType G5g2xlarge;
    public static InstanceType G5g4xlarge;
    public static InstanceType G5g8xlarge;
    public static InstanceType G5gMetal;
    public static InstanceType G5gXlarge;
    public static InstanceType G5Xlarge;
    public static InstanceType G612xlarge;
    public static InstanceType G616xlarge;
    public static InstanceType G624xlarge;
    public static InstanceType G62xlarge;
    public static InstanceType G648xlarge;
    public static InstanceType G64xlarge;
    public static InstanceType G68xlarge;
    public static InstanceType G6Xlarge;
    public static InstanceType Gr64xlarge;
    public static InstanceType Gr68xlarge;
    public static InstanceType H116xlarge;
    public static InstanceType H12xlarge;
    public static InstanceType H14xlarge;
    public static InstanceType H18xlarge;
    public static InstanceType Hi14xlarge;
    public static InstanceType Hpc6a48xlarge;
    public static InstanceType Hpc6id32xlarge;
    public static InstanceType Hpc7a12xlarge;
    public static InstanceType Hpc7a24xlarge;
    public static InstanceType Hpc7a48xlarge;
    public static InstanceType Hpc7a96xlarge;
    public static InstanceType Hpc7g16xlarge;
    public static InstanceType Hpc7g4xlarge;
    public static InstanceType Hpc7g8xlarge;
    public static InstanceType Hs18xlarge;
    public static InstanceType I22xlarge;
    public static InstanceType I24xlarge;
    public static InstanceType I28xlarge;
    public static InstanceType I2Xlarge;
    public static InstanceType I316xlarge;
    public static InstanceType I32xlarge;
    public static InstanceType I34xlarge;
    public static InstanceType I38xlarge;
    public static InstanceType I3en12xlarge;
    public static InstanceType I3en24xlarge;
    public static InstanceType I3en2xlarge;
    public static InstanceType I3en3xlarge;
    public static InstanceType I3en6xlarge;
    public static InstanceType I3enLarge;
    public static InstanceType I3enMetal;
    public static InstanceType I3enXlarge;
    public static InstanceType I3Large;
    public static InstanceType I3Metal;
    public static InstanceType I3Xlarge;
    public static InstanceType I4g16xlarge;
    public static InstanceType I4g2xlarge;
    public static InstanceType I4g4xlarge;
    public static InstanceType I4g8xlarge;
    public static InstanceType I4gLarge;
    public static InstanceType I4gXlarge;
    public static InstanceType I4i12xlarge;
    public static InstanceType I4i16xlarge;
    public static InstanceType I4i24xlarge;
    public static InstanceType I4i2xlarge;
    public static InstanceType I4i32xlarge;
    public static InstanceType I4i4xlarge;
    public static InstanceType I4i8xlarge;
    public static InstanceType I4iLarge;
    public static InstanceType I4iMetal;
    public static InstanceType I4iXlarge;
    public static InstanceType Im4gn16xlarge;
    public static InstanceType Im4gn2xlarge;
    public static InstanceType Im4gn4xlarge;
    public static InstanceType Im4gn8xlarge;
    public static InstanceType Im4gnLarge;
    public static InstanceType Im4gnXlarge;
    public static InstanceType Inf124xlarge;
    public static InstanceType Inf12xlarge;
    public static InstanceType Inf16xlarge;
    public static InstanceType Inf1Xlarge;
    public static InstanceType Inf224xlarge;
    public static InstanceType Inf248xlarge;
    public static InstanceType Inf28xlarge;
    public static InstanceType Inf2Xlarge;
    public static InstanceType Is4gen2xlarge;
    public static InstanceType Is4gen4xlarge;
    public static InstanceType Is4gen8xlarge;
    public static InstanceType Is4genLarge;
    public static InstanceType Is4genMedium;
    public static InstanceType Is4genXlarge;
    public static InstanceType M1Large;
    public static InstanceType M1Medium;
    public static InstanceType M1Small;
    public static InstanceType M1Xlarge;
    public static InstanceType M22xlarge;
    public static InstanceType M24xlarge;
    public static InstanceType M2Xlarge;
    public static InstanceType M32xlarge;
    public static InstanceType M3Large;
    public static InstanceType M3Medium;
    public static InstanceType M3Xlarge;
    public static InstanceType M410xlarge;
    public static InstanceType M416xlarge;
    public static InstanceType M42xlarge;
    public static InstanceType M44xlarge;
    public static InstanceType M4Large;
    public static InstanceType M4Xlarge;
    public static InstanceType M512xlarge;
    public static InstanceType M516xlarge;
    public static InstanceType M524xlarge;
    public static InstanceType M52xlarge;
    public static InstanceType M54xlarge;
    public static InstanceType M58xlarge;
    public static InstanceType M5a12xlarge;
    public static InstanceType M5a16xlarge;
    public static InstanceType M5a24xlarge;
    public static InstanceType M5a2xlarge;
    public static InstanceType M5a4xlarge;
    public static InstanceType M5a8xlarge;
    public static InstanceType M5ad12xlarge;
    public static InstanceType M5ad16xlarge;
    public static InstanceType M5ad24xlarge;
    public static InstanceType M5ad2xlarge;
    public static InstanceType M5ad4xlarge;
    public static InstanceType M5ad8xlarge;
    public static InstanceType M5adLarge;
    public static InstanceType M5adXlarge;
    public static InstanceType M5aLarge;
    public static InstanceType M5aXlarge;
    public static InstanceType M5d12xlarge;
    public static InstanceType M5d16xlarge;
    public static InstanceType M5d24xlarge;
    public static InstanceType M5d2xlarge;
    public static InstanceType M5d4xlarge;
    public static InstanceType M5d8xlarge;
    public static InstanceType M5dLarge;
    public static InstanceType M5dMetal;
    public static InstanceType M5dn12xlarge;
    public static InstanceType M5dn16xlarge;
    public static InstanceType M5dn24xlarge;
    public static InstanceType M5dn2xlarge;
    public static InstanceType M5dn4xlarge;
    public static InstanceType M5dn8xlarge;
    public static InstanceType M5dnLarge;
    public static InstanceType M5dnMetal;
    public static InstanceType M5dnXlarge;
    public static InstanceType M5dXlarge;
    public static InstanceType M5Large;
    public static InstanceType M5Metal;
    public static InstanceType M5n12xlarge;
    public static InstanceType M5n16xlarge;
    public static InstanceType M5n24xlarge;
    public static InstanceType M5n2xlarge;
    public static InstanceType M5n4xlarge;
    public static InstanceType M5n8xlarge;
    public static InstanceType M5nLarge;
    public static InstanceType M5nMetal;
    public static InstanceType M5nXlarge;
    public static InstanceType M5Xlarge;
    public static InstanceType M5zn12xlarge;
    public static InstanceType M5zn2xlarge;
    public static InstanceType M5zn3xlarge;
    public static InstanceType M5zn6xlarge;
    public static InstanceType M5znLarge;
    public static InstanceType M5znMetal;
    public static InstanceType M5znXlarge;
    public static InstanceType M6a12xlarge;
    public static InstanceType M6a16xlarge;
    public static InstanceType M6a24xlarge;
    public static InstanceType M6a2xlarge;
    public static InstanceType M6a32xlarge;
    public static InstanceType M6a48xlarge;
    public static InstanceType M6a4xlarge;
    public static InstanceType M6a8xlarge;
    public static InstanceType M6aLarge;
    public static InstanceType M6aMetal;
    public static InstanceType M6aXlarge;
    public static InstanceType M6g12xlarge;
    public static InstanceType M6g16xlarge;
    public static InstanceType M6g2xlarge;
    public static InstanceType M6g4xlarge;
    public static InstanceType M6g8xlarge;
    public static InstanceType M6gd12xlarge;
    public static InstanceType M6gd16xlarge;
    public static InstanceType M6gd2xlarge;
    public static InstanceType M6gd4xlarge;
    public static InstanceType M6gd8xlarge;
    public static InstanceType M6gdLarge;
    public static InstanceType M6gdMedium;
    public static InstanceType M6gdMetal;
    public static InstanceType M6gdXlarge;
    public static InstanceType M6gLarge;
    public static InstanceType M6gMedium;
    public static InstanceType M6gMetal;
    public static InstanceType M6gXlarge;
    public static InstanceType M6i12xlarge;
    public static InstanceType M6i16xlarge;
    public static InstanceType M6i24xlarge;
    public static InstanceType M6i2xlarge;
    public static InstanceType M6i32xlarge;
    public static InstanceType M6i4xlarge;
    public static InstanceType M6i8xlarge;
    public static InstanceType M6id12xlarge;
    public static InstanceType M6id16xlarge;
    public static InstanceType M6id24xlarge;
    public static InstanceType M6id2xlarge;
    public static InstanceType M6id32xlarge;
    public static InstanceType M6id4xlarge;
    public static InstanceType M6id8xlarge;
    public static InstanceType M6idLarge;
    public static InstanceType M6idMetal;
    public static InstanceType M6idn12xlarge;
    public static InstanceType M6idn16xlarge;
    public static InstanceType M6idn24xlarge;
    public static InstanceType M6idn2xlarge;
    public static InstanceType M6idn32xlarge;
    public static InstanceType M6idn4xlarge;
    public static InstanceType M6idn8xlarge;
    public static InstanceType M6idnLarge;
    public static InstanceType M6idnMetal;
    public static InstanceType M6idnXlarge;
    public static InstanceType M6idXlarge;
    public static InstanceType M6iLarge;
    public static InstanceType M6iMetal;
    public static InstanceType M6in12xlarge;
    public static InstanceType M6in16xlarge;
    public static InstanceType M6in24xlarge;
    public static InstanceType M6in2xlarge;
    public static InstanceType M6in32xlarge;
    public static InstanceType M6in4xlarge;
    public static InstanceType M6in8xlarge;
    public static InstanceType M6inLarge;
    public static InstanceType M6inMetal;
    public static InstanceType M6inXlarge;
    public static InstanceType M6iXlarge;
    public static InstanceType M7a12xlarge;
    public static InstanceType M7a16xlarge;
    public static InstanceType M7a24xlarge;
    public static InstanceType M7a2xlarge;
    public static InstanceType M7a32xlarge;
    public static InstanceType M7a48xlarge;
    public static InstanceType M7a4xlarge;
    public static InstanceType M7a8xlarge;
    public static InstanceType M7aLarge;
    public static InstanceType M7aMedium;
    public static InstanceType M7aMetal48xl;
    public static InstanceType M7aXlarge;
    public static InstanceType M7g12xlarge;
    public static InstanceType M7g16xlarge;
    public static InstanceType M7g2xlarge;
    public static InstanceType M7g4xlarge;
    public static InstanceType M7g8xlarge;
    public static InstanceType M7gd12xlarge;
    public static InstanceType M7gd16xlarge;
    public static InstanceType M7gd2xlarge;
    public static InstanceType M7gd4xlarge;
    public static InstanceType M7gd8xlarge;
    public static InstanceType M7gdLarge;
    public static InstanceType M7gdMedium;
    public static InstanceType M7gdMetal;
    public static InstanceType M7gdXlarge;
    public static InstanceType M7gLarge;
    public static InstanceType M7gMedium;
    public static InstanceType M7gMetal;
    public static InstanceType M7gXlarge;
    public static InstanceType M7i12xlarge;
    public static InstanceType M7i16xlarge;
    public static InstanceType M7i24xlarge;
    public static InstanceType M7i2xlarge;
    public static InstanceType M7i48xlarge;
    public static InstanceType M7i4xlarge;
    public static InstanceType M7i8xlarge;
    public static InstanceType M7iFlex2xlarge;
    public static InstanceType M7iFlex4xlarge;
    public static InstanceType M7iFlex8xlarge;
    public static InstanceType M7iFlexLarge;
    public static InstanceType M7iFlexXlarge;
    public static InstanceType M7iLarge;
    public static InstanceType M7iMetal24xl;
    public static InstanceType M7iMetal48xl;
    public static InstanceType M7iXlarge;
    public static InstanceType Mac1Metal;
    public static InstanceType Mac2M1ultraMetal;
    public static InstanceType Mac2M2Metal;
    public static InstanceType Mac2M2proMetal;
    public static InstanceType Mac2Metal;
    public static InstanceType P216xlarge;
    public static InstanceType P28xlarge;
    public static InstanceType P2Xlarge;
    public static InstanceType P316xlarge;
    public static InstanceType P32xlarge;
    public static InstanceType P38xlarge;
    public static InstanceType P3dn24xlarge;
    public static InstanceType P4d24xlarge;
    public static InstanceType P4de24xlarge;
    public static InstanceType P548xlarge;
    public static InstanceType R32xlarge;
    public static InstanceType R34xlarge;
    public static InstanceType R38xlarge;
    public static InstanceType R3Large;
    public static InstanceType R3Xlarge;
    public static InstanceType R416xlarge;
    public static InstanceType R42xlarge;
    public static InstanceType R44xlarge;
    public static InstanceType R48xlarge;
    public static InstanceType R4Large;
    public static InstanceType R4Xlarge;
    public static InstanceType R512xlarge;
    public static InstanceType R516xlarge;
    public static InstanceType R524xlarge;
    public static InstanceType R52xlarge;
    public static InstanceType R54xlarge;
    public static InstanceType R58xlarge;
    public static InstanceType R5a12xlarge;
    public static InstanceType R5a16xlarge;
    public static InstanceType R5a24xlarge;
    public static InstanceType R5a2xlarge;
    public static InstanceType R5a4xlarge;
    public static InstanceType R5a8xlarge;
    public static InstanceType R5ad12xlarge;
    public static InstanceType R5ad16xlarge;
    public static InstanceType R5ad24xlarge;
    public static InstanceType R5ad2xlarge;
    public static InstanceType R5ad4xlarge;
    public static InstanceType R5ad8xlarge;
    public static InstanceType R5adLarge;
    public static InstanceType R5adXlarge;
    public static InstanceType R5aLarge;
    public static InstanceType R5aXlarge;
    public static InstanceType R5b12xlarge;
    public static InstanceType R5b16xlarge;
    public static InstanceType R5b24xlarge;
    public static InstanceType R5b2xlarge;
    public static InstanceType R5b4xlarge;
    public static InstanceType R5b8xlarge;
    public static InstanceType R5bLarge;
    public static InstanceType R5bMetal;
    public static InstanceType R5bXlarge;
    public static InstanceType R5d12xlarge;
    public static InstanceType R5d16xlarge;
    public static InstanceType R5d24xlarge;
    public static InstanceType R5d2xlarge;
    public static InstanceType R5d4xlarge;
    public static InstanceType R5d8xlarge;
    public static InstanceType R5dLarge;
    public static InstanceType R5dMetal;
    public static InstanceType R5dn12xlarge;
    public static InstanceType R5dn16xlarge;
    public static InstanceType R5dn24xlarge;
    public static InstanceType R5dn2xlarge;
    public static InstanceType R5dn4xlarge;
    public static InstanceType R5dn8xlarge;
    public static InstanceType R5dnLarge;
    public static InstanceType R5dnMetal;
    public static InstanceType R5dnXlarge;
    public static InstanceType R5dXlarge;
    public static InstanceType R5Large;
    public static InstanceType R5Metal;
    public static InstanceType R5n12xlarge;
    public static InstanceType R5n16xlarge;
    public static InstanceType R5n24xlarge;
    public static InstanceType R5n2xlarge;
    public static InstanceType R5n4xlarge;
    public static InstanceType R5n8xlarge;
    public static InstanceType R5nLarge;
    public static InstanceType R5nMetal;
    public static InstanceType R5nXlarge;
    public static InstanceType R5Xlarge;
    public static InstanceType R6a12xlarge;
    public static InstanceType R6a16xlarge;
    public static InstanceType R6a24xlarge;
    public static InstanceType R6a2xlarge;
    public static InstanceType R6a32xlarge;
    public static InstanceType R6a48xlarge;
    public static InstanceType R6a4xlarge;
    public static InstanceType R6a8xlarge;
    public static InstanceType R6aLarge;
    public static InstanceType R6aMetal;
    public static InstanceType R6aXlarge;
    public static InstanceType R6g12xlarge;
    public static InstanceType R6g16xlarge;
    public static InstanceType R6g2xlarge;
    public static InstanceType R6g4xlarge;
    public static InstanceType R6g8xlarge;
    public static InstanceType R6gd12xlarge;
    public static InstanceType R6gd16xlarge;
    public static InstanceType R6gd2xlarge;
    public static InstanceType R6gd4xlarge;
    public static InstanceType R6gd8xlarge;
    public static InstanceType R6gdLarge;
    public static InstanceType R6gdMedium;
    public static InstanceType R6gdMetal;
    public static InstanceType R6gdXlarge;
    public static InstanceType R6gLarge;
    public static InstanceType R6gMedium;
    public static InstanceType R6gMetal;
    public static InstanceType R6gXlarge;
    public static InstanceType R6i12xlarge;
    public static InstanceType R6i16xlarge;
    public static InstanceType R6i24xlarge;
    public static InstanceType R6i2xlarge;
    public static InstanceType R6i32xlarge;
    public static InstanceType R6i4xlarge;
    public static InstanceType R6i8xlarge;
    public static InstanceType R6id12xlarge;
    public static InstanceType R6id16xlarge;
    public static InstanceType R6id24xlarge;
    public static InstanceType R6id2xlarge;
    public static InstanceType R6id32xlarge;
    public static InstanceType R6id4xlarge;
    public static InstanceType R6id8xlarge;
    public static InstanceType R6idLarge;
    public static InstanceType R6idMetal;
    public static InstanceType R6idn12xlarge;
    public static InstanceType R6idn16xlarge;
    public static InstanceType R6idn24xlarge;
    public static InstanceType R6idn2xlarge;
    public static InstanceType R6idn32xlarge;
    public static InstanceType R6idn4xlarge;
    public static InstanceType R6idn8xlarge;
    public static InstanceType R6idnLarge;
    public static InstanceType R6idnMetal;
    public static InstanceType R6idnXlarge;
    public static InstanceType R6idXlarge;
    public static InstanceType R6iLarge;
    public static InstanceType R6iMetal;
    public static InstanceType R6in12xlarge;
    public static InstanceType R6in16xlarge;
    public static InstanceType R6in24xlarge;
    public static InstanceType R6in2xlarge;
    public static InstanceType R6in32xlarge;
    public static InstanceType R6in4xlarge;
    public static InstanceType R6in8xlarge;
    public static InstanceType R6inLarge;
    public static InstanceType R6inMetal;
    public static InstanceType R6inXlarge;
    public static InstanceType R6iXlarge;
    public static InstanceType R7a12xlarge;
    public static InstanceType R7a16xlarge;
    public static InstanceType R7a24xlarge;
    public static InstanceType R7a2xlarge;
    public static InstanceType R7a32xlarge;
    public static InstanceType R7a48xlarge;
    public static InstanceType R7a4xlarge;
    public static InstanceType R7a8xlarge;
    public static InstanceType R7aLarge;
    public static InstanceType R7aMedium;
    public static InstanceType R7aMetal48xl;
    public static InstanceType R7aXlarge;
    public static InstanceType R7g12xlarge;
    public static InstanceType R7g16xlarge;
    public static InstanceType R7g2xlarge;
    public static InstanceType R7g4xlarge;
    public static InstanceType R7g8xlarge;
    public static InstanceType R7gd12xlarge;
    public static InstanceType R7gd16xlarge;
    public static InstanceType R7gd2xlarge;
    public static InstanceType R7gd4xlarge;
    public static InstanceType R7gd8xlarge;
    public static InstanceType R7gdLarge;
    public static InstanceType R7gdMedium;
    public static InstanceType R7gdMetal;
    public static InstanceType R7gdXlarge;
    public static InstanceType R7gLarge;
    public static InstanceType R7gMedium;
    public static InstanceType R7gMetal;
    public static InstanceType R7gXlarge;
    public static InstanceType R7i12xlarge;
    public static InstanceType R7i16xlarge;
    public static InstanceType R7i24xlarge;
    public static InstanceType R7i2xlarge;
    public static InstanceType R7i48xlarge;
    public static InstanceType R7i4xlarge;
    public static InstanceType R7i8xlarge;
    public static InstanceType R7iLarge;
    public static InstanceType R7iMetal24xl;
    public static InstanceType R7iMetal48xl;
    public static InstanceType R7iXlarge;
    public static InstanceType R7iz12xlarge;
    public static InstanceType R7iz16xlarge;
    public static InstanceType R7iz2xlarge;
    public static InstanceType R7iz32xlarge;
    public static InstanceType R7iz4xlarge;
    public static InstanceType R7iz8xlarge;
    public static InstanceType R7izLarge;
    public static InstanceType R7izMetal16xl;
    public static InstanceType R7izMetal32xl;
    public static InstanceType R7izXlarge;
    public static InstanceType R8g12xlarge;
    public static InstanceType R8g16xlarge;
    public static InstanceType R8g24xlarge;
    public static InstanceType R8g2xlarge;
    public static InstanceType R8g48xlarge;
    public static InstanceType R8g4xlarge;
    public static InstanceType R8g8xlarge;
    public static InstanceType R8gLarge;
    public static InstanceType R8gMedium;
    public static InstanceType R8gMetal24xl;
    public static InstanceType R8gMetal48xl;
    public static InstanceType R8gXlarge;
    public static InstanceType T1Micro;
    public static InstanceType T22xlarge;
    public static InstanceType T2Large;
    public static InstanceType T2Medium;
    public static InstanceType T2Micro;
    public static InstanceType T2Nano;
    public static InstanceType T2Small;
    public static InstanceType T2Xlarge;
    public static InstanceType T32xlarge;
    public static InstanceType T3a2xlarge;
    public static InstanceType T3aLarge;
    public static InstanceType T3aMedium;
    public static InstanceType T3aMicro;
    public static InstanceType T3aNano;
    public static InstanceType T3aSmall;
    public static InstanceType T3aXlarge;
    public static InstanceType T3Large;
    public static InstanceType T3Medium;
    public static InstanceType T3Micro;
    public static InstanceType T3Nano;
    public static InstanceType T3Small;
    public static InstanceType T3Xlarge;
    public static InstanceType T4g2xlarge;
    public static InstanceType T4gLarge;
    public static InstanceType T4gMedium;
    public static InstanceType T4gMicro;
    public static InstanceType T4gNano;
    public static InstanceType T4gSmall;
    public static InstanceType T4gXlarge;
    public static InstanceType Trn12xlarge;
    public static InstanceType Trn132xlarge;
    public static InstanceType Trn1n32xlarge;
    public static InstanceType U12tb1112xlarge;
    public static InstanceType U12tb1Metal;
    public static InstanceType U18tb1112xlarge;
    public static InstanceType U18tb1Metal;
    public static InstanceType U24tb1112xlarge;
    public static InstanceType U24tb1Metal;
    public static InstanceType U3tb156xlarge;
    public static InstanceType U6tb1112xlarge;
    public static InstanceType U6tb156xlarge;
    public static InstanceType U6tb1Metal;
    public static InstanceType U7i12tb224xlarge;
    public static InstanceType U7ib12tb224xlarge;
    public static InstanceType U7in16tb224xlarge;
    public static InstanceType U7in24tb224xlarge;
    public static InstanceType U7in32tb224xlarge;
    public static InstanceType U9tb1112xlarge;
    public static InstanceType U9tb1Metal;
    public static InstanceType Vt124xlarge;
    public static InstanceType Vt13xlarge;
    public static InstanceType Vt16xlarge;
    public static InstanceType X116xlarge;
    public static InstanceType X132xlarge;
    public static InstanceType X1e16xlarge;
    public static InstanceType X1e2xlarge;
    public static InstanceType X1e32xlarge;
    public static InstanceType X1e4xlarge;
    public static InstanceType X1e8xlarge;
    public static InstanceType X1eXlarge;
    public static InstanceType X2gd12xlarge;
    public static InstanceType X2gd16xlarge;
    public static InstanceType X2gd2xlarge;
    public static InstanceType X2gd4xlarge;
    public static InstanceType X2gd8xlarge;
    public static InstanceType X2gdLarge;
    public static InstanceType X2gdMedium;
    public static InstanceType X2gdMetal;
    public static InstanceType X2gdXlarge;
    public static InstanceType X2idn16xlarge;
    public static InstanceType X2idn24xlarge;
    public static InstanceType X2idn32xlarge;
    public static InstanceType X2idnMetal;
    public static InstanceType X2iedn16xlarge;
    public static InstanceType X2iedn24xlarge;
    public static InstanceType X2iedn2xlarge;
    public static InstanceType X2iedn32xlarge;
    public static InstanceType X2iedn4xlarge;
    public static InstanceType X2iedn8xlarge;
    public static InstanceType X2iednMetal;
    public static InstanceType X2iednXlarge;
    public static InstanceType X2iezn12xlarge;
    public static InstanceType X2iezn2xlarge;
    public static InstanceType X2iezn4xlarge;
    public static InstanceType X2iezn6xlarge;
    public static InstanceType X2iezn8xlarge;
    public static InstanceType X2ieznMetal;
    public static InstanceType Z1d12xlarge;
    public static InstanceType Z1d2xlarge;
    public static InstanceType Z1d3xlarge;
    public static InstanceType Z1d6xlarge;
    public static InstanceType Z1dLarge;
    public static InstanceType Z1dMetal;
    public static InstanceType Z1dXlarge;
    public InstanceType(string value);
    private static InstanceType();
    public static InstanceType FindValue(string value);
    public static InstanceType op_Implicit(string value);
}
public class Amazon.EC2.InstanceTypeHypervisor : ConstantClass {
    public static InstanceTypeHypervisor Nitro;
    public static InstanceTypeHypervisor Xen;
    public InstanceTypeHypervisor(string value);
    private static InstanceTypeHypervisor();
    public static InstanceTypeHypervisor FindValue(string value);
    public static InstanceTypeHypervisor op_Implicit(string value);
}
public class Amazon.EC2.InterfacePermissionType : ConstantClass {
    public static InterfacePermissionType EIPASSOCIATE;
    public static InterfacePermissionType INSTANCEATTACH;
    public InterfacePermissionType(string value);
    private static InterfacePermissionType();
    public static InterfacePermissionType FindValue(string value);
    public static InterfacePermissionType op_Implicit(string value);
}
public class Amazon.EC2.InterfaceProtocolType : ConstantClass {
    public static InterfaceProtocolType GRE;
    public static InterfaceProtocolType VLAN;
    public InterfaceProtocolType(string value);
    private static InterfaceProtocolType();
    public static InterfaceProtocolType FindValue(string value);
    public static InterfaceProtocolType op_Implicit(string value);
}
public class Amazon.EC2.Internal.AmazonEC2EndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.EC2.Internal.AmazonEC2EndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.EC2.Internal.AmazonEC2Metadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.EC2.Internal.AmazonEC2PostMarshallHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.EC2.Internal.AmazonEC2PreMarshallHandler : PipelineHandler {
    private AWSCredentials _credentials;
    public AmazonEC2PreMarshallHandler(AWSCredentials credentials);
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected void PreInvoke(IExecutionContext executionContext);
    private static void SelectModifiedIpRange(List`1<IpPermission> IpPermissions);
}
public class Amazon.EC2.Internal.AmazonEC2ResponseHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.EC2.Internal.AmazonEC2ResponseHandler/<InvokeAsync>d__1`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PostInvoke(IExecutionContext executionContext);
    private static void SetIpRangesProperty(List`1<IpPermission> ipPermissions);
    private static void RestoreRequestIpPermissions(List`1<IpPermission> IpPermissions);
    private static void PopulateLaunchSpecificationSecurityGroupNames(LaunchSpecification launchSpecification);
    private static void PopulateReservationSecurityGroupNames(Reservation reservation);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<T> <>n__0(IExecutionContext executionContext);
}
public static class Amazon.EC2.Internal.CustomMarshallTransformations : object {
    [ObsoleteAttribute("This method doesn't handle correctly non-UTC DateTimes. Use ConvertDateTimeISOWithoutMillisecondsUtc instead.", "False")]
public static string ConvertDateTimeISOWithoutMilliseconds(DateTime dateTime);
    public static string ConvertDateTimeISOWithoutMillisecondsUtc(DateTime dateTime);
    public static string ConvertDateTimeISOWithoutMillisecondsUtc(Nullable`1<DateTime> dateTime);
}
public class Amazon.EC2.Internal.EC2AdaptiveRetryPolicy : AdaptiveRetryPolicy {
    public EC2AdaptiveRetryPolicy(IClientConfig config);
}
public class Amazon.EC2.Internal.EC2RetryPolicy : DefaultRetryPolicy {
    public EC2RetryPolicy(IClientConfig config);
}
public class Amazon.EC2.Internal.EC2StandardRetryPolicy : StandardRetryPolicy {
    public EC2StandardRetryPolicy(IClientConfig config);
}
public class Amazon.EC2.IpAddressType : ConstantClass {
    public static IpAddressType Dualstack;
    public static IpAddressType Ipv4;
    public static IpAddressType Ipv6;
    public IpAddressType(string value);
    private static IpAddressType();
    public static IpAddressType FindValue(string value);
    public static IpAddressType op_Implicit(string value);
}
public class Amazon.EC2.IpamAddressHistoryResourceType : ConstantClass {
    public static IpamAddressHistoryResourceType Eip;
    public static IpamAddressHistoryResourceType Instance;
    public static IpamAddressHistoryResourceType NetworkInterface;
    public static IpamAddressHistoryResourceType Subnet;
    public static IpamAddressHistoryResourceType Vpc;
    public IpamAddressHistoryResourceType(string value);
    private static IpamAddressHistoryResourceType();
    public static IpamAddressHistoryResourceType FindValue(string value);
    public static IpamAddressHistoryResourceType op_Implicit(string value);
}
public class Amazon.EC2.IpamAssociatedResourceDiscoveryStatus : ConstantClass {
    public static IpamAssociatedResourceDiscoveryStatus Active;
    public static IpamAssociatedResourceDiscoveryStatus NotFound;
    public IpamAssociatedResourceDiscoveryStatus(string value);
    private static IpamAssociatedResourceDiscoveryStatus();
    public static IpamAssociatedResourceDiscoveryStatus FindValue(string value);
    public static IpamAssociatedResourceDiscoveryStatus op_Implicit(string value);
}
public class Amazon.EC2.IpamComplianceStatus : ConstantClass {
    public static IpamComplianceStatus Compliant;
    public static IpamComplianceStatus Ignored;
    public static IpamComplianceStatus Noncompliant;
    public static IpamComplianceStatus Unmanaged;
    public IpamComplianceStatus(string value);
    private static IpamComplianceStatus();
    public static IpamComplianceStatus FindValue(string value);
    public static IpamComplianceStatus op_Implicit(string value);
}
public class Amazon.EC2.IpamDiscoveryFailureCode : ConstantClass {
    public static IpamDiscoveryFailureCode AssumeRoleFailure;
    public static IpamDiscoveryFailureCode ThrottlingFailure;
    public static IpamDiscoveryFailureCode UnauthorizedFailure;
    public IpamDiscoveryFailureCode(string value);
    private static IpamDiscoveryFailureCode();
    public static IpamDiscoveryFailureCode FindValue(string value);
    public static IpamDiscoveryFailureCode op_Implicit(string value);
}
public class Amazon.EC2.IpamExternalResourceVerificationTokenState : ConstantClass {
    public static IpamExternalResourceVerificationTokenState CreateComplete;
    public static IpamExternalResourceVerificationTokenState CreateFailed;
    public static IpamExternalResourceVerificationTokenState CreateInProgress;
    public static IpamExternalResourceVerificationTokenState DeleteComplete;
    public static IpamExternalResourceVerificationTokenState DeleteFailed;
    public static IpamExternalResourceVerificationTokenState DeleteInProgress;
    public IpamExternalResourceVerificationTokenState(string value);
    private static IpamExternalResourceVerificationTokenState();
    public static IpamExternalResourceVerificationTokenState FindValue(string value);
    public static IpamExternalResourceVerificationTokenState op_Implicit(string value);
}
public class Amazon.EC2.IpamManagementState : ConstantClass {
    public static IpamManagementState Ignored;
    public static IpamManagementState Managed;
    public static IpamManagementState Unmanaged;
    public IpamManagementState(string value);
    private static IpamManagementState();
    public static IpamManagementState FindValue(string value);
    public static IpamManagementState op_Implicit(string value);
}
public class Amazon.EC2.IpamNetworkInterfaceAttachmentStatus : ConstantClass {
    public static IpamNetworkInterfaceAttachmentStatus Available;
    public static IpamNetworkInterfaceAttachmentStatus InUse;
    public IpamNetworkInterfaceAttachmentStatus(string value);
    private static IpamNetworkInterfaceAttachmentStatus();
    public static IpamNetworkInterfaceAttachmentStatus FindValue(string value);
    public static IpamNetworkInterfaceAttachmentStatus op_Implicit(string value);
}
public class Amazon.EC2.IpamOverlapStatus : ConstantClass {
    public static IpamOverlapStatus Ignored;
    public static IpamOverlapStatus Nonoverlapping;
    public static IpamOverlapStatus Overlapping;
    public IpamOverlapStatus(string value);
    private static IpamOverlapStatus();
    public static IpamOverlapStatus FindValue(string value);
    public static IpamOverlapStatus op_Implicit(string value);
}
public class Amazon.EC2.IpamPoolAllocationResourceType : ConstantClass {
    public static IpamPoolAllocationResourceType Custom;
    public static IpamPoolAllocationResourceType Ec2PublicIpv4Pool;
    public static IpamPoolAllocationResourceType IpamPool;
    public static IpamPoolAllocationResourceType Subnet;
    public static IpamPoolAllocationResourceType Vpc;
    public IpamPoolAllocationResourceType(string value);
    private static IpamPoolAllocationResourceType();
    public static IpamPoolAllocationResourceType FindValue(string value);
    public static IpamPoolAllocationResourceType op_Implicit(string value);
}
public class Amazon.EC2.IpamPoolAwsService : ConstantClass {
    public static IpamPoolAwsService Ec2;
    public IpamPoolAwsService(string value);
    private static IpamPoolAwsService();
    public static IpamPoolAwsService FindValue(string value);
    public static IpamPoolAwsService op_Implicit(string value);
}
public class Amazon.EC2.IpamPoolCidrFailureCode : ConstantClass {
    public static IpamPoolCidrFailureCode CidrNotAvailable;
    public static IpamPoolCidrFailureCode LimitExceeded;
    public IpamPoolCidrFailureCode(string value);
    private static IpamPoolCidrFailureCode();
    public static IpamPoolCidrFailureCode FindValue(string value);
    public static IpamPoolCidrFailureCode op_Implicit(string value);
}
public class Amazon.EC2.IpamPoolCidrState : ConstantClass {
    public static IpamPoolCidrState Deprovisioned;
    public static IpamPoolCidrState FailedDeprovision;
    public static IpamPoolCidrState FailedImport;
    public static IpamPoolCidrState FailedProvision;
    public static IpamPoolCidrState PendingDeprovision;
    public static IpamPoolCidrState PendingImport;
    public static IpamPoolCidrState PendingProvision;
    public static IpamPoolCidrState Provisioned;
    public IpamPoolCidrState(string value);
    private static IpamPoolCidrState();
    public static IpamPoolCidrState FindValue(string value);
    public static IpamPoolCidrState op_Implicit(string value);
}
public class Amazon.EC2.IpamPoolPublicIpSource : ConstantClass {
    public static IpamPoolPublicIpSource Amazon;
    public static IpamPoolPublicIpSource Byoip;
    public IpamPoolPublicIpSource(string value);
    private static IpamPoolPublicIpSource();
    public static IpamPoolPublicIpSource FindValue(string value);
    public static IpamPoolPublicIpSource op_Implicit(string value);
}
public class Amazon.EC2.IpamPoolSourceResourceType : ConstantClass {
    public static IpamPoolSourceResourceType Vpc;
    public IpamPoolSourceResourceType(string value);
    private static IpamPoolSourceResourceType();
    public static IpamPoolSourceResourceType FindValue(string value);
    public static IpamPoolSourceResourceType op_Implicit(string value);
}
public class Amazon.EC2.IpamPoolState : ConstantClass {
    public static IpamPoolState CreateComplete;
    public static IpamPoolState CreateFailed;
    public static IpamPoolState CreateInProgress;
    public static IpamPoolState DeleteComplete;
    public static IpamPoolState DeleteFailed;
    public static IpamPoolState DeleteInProgress;
    public static IpamPoolState IsolateComplete;
    public static IpamPoolState IsolateInProgress;
    public static IpamPoolState ModifyComplete;
    public static IpamPoolState ModifyFailed;
    public static IpamPoolState ModifyInProgress;
    public static IpamPoolState RestoreInProgress;
    public IpamPoolState(string value);
    private static IpamPoolState();
    public static IpamPoolState FindValue(string value);
    public static IpamPoolState op_Implicit(string value);
}
public class Amazon.EC2.IpamPublicAddressAssociationStatus : ConstantClass {
    public static IpamPublicAddressAssociationStatus Associated;
    public static IpamPublicAddressAssociationStatus Disassociated;
    public IpamPublicAddressAssociationStatus(string value);
    private static IpamPublicAddressAssociationStatus();
    public static IpamPublicAddressAssociationStatus FindValue(string value);
    public static IpamPublicAddressAssociationStatus op_Implicit(string value);
}
public class Amazon.EC2.IpamPublicAddressAwsService : ConstantClass {
    public static IpamPublicAddressAwsService DatabaseMigrationService;
    public static IpamPublicAddressAwsService ElasticContainerService;
    public static IpamPublicAddressAwsService GlobalAccelerator;
    public static IpamPublicAddressAwsService LoadBalancer;
    public static IpamPublicAddressAwsService NatGateway;
    public static IpamPublicAddressAwsService Other;
    public static IpamPublicAddressAwsService Redshift;
    public static IpamPublicAddressAwsService RelationalDatabaseService;
    public static IpamPublicAddressAwsService SiteToSiteVpn;
    public IpamPublicAddressAwsService(string value);
    private static IpamPublicAddressAwsService();
    public static IpamPublicAddressAwsService FindValue(string value);
    public static IpamPublicAddressAwsService op_Implicit(string value);
}
public class Amazon.EC2.IpamPublicAddressType : ConstantClass {
    public static IpamPublicAddressType AmazonOwnedEip;
    public static IpamPublicAddressType Byoip;
    public static IpamPublicAddressType Ec2PublicIp;
    public static IpamPublicAddressType ServiceManagedByoip;
    public static IpamPublicAddressType ServiceManagedIp;
    public IpamPublicAddressType(string value);
    private static IpamPublicAddressType();
    public static IpamPublicAddressType FindValue(string value);
    public static IpamPublicAddressType op_Implicit(string value);
}
public class Amazon.EC2.IpamResourceDiscoveryAssociationState : ConstantClass {
    public static IpamResourceDiscoveryAssociationState AssociateComplete;
    public static IpamResourceDiscoveryAssociationState AssociateFailed;
    public static IpamResourceDiscoveryAssociationState AssociateInProgress;
    public static IpamResourceDiscoveryAssociationState DisassociateComplete;
    public static IpamResourceDiscoveryAssociationState DisassociateFailed;
    public static IpamResourceDiscoveryAssociationState DisassociateInProgress;
    public static IpamResourceDiscoveryAssociationState IsolateComplete;
    public static IpamResourceDiscoveryAssociationState IsolateInProgress;
    public static IpamResourceDiscoveryAssociationState RestoreInProgress;
    public IpamResourceDiscoveryAssociationState(string value);
    private static IpamResourceDiscoveryAssociationState();
    public static IpamResourceDiscoveryAssociationState FindValue(string value);
    public static IpamResourceDiscoveryAssociationState op_Implicit(string value);
}
public class Amazon.EC2.IpamResourceDiscoveryState : ConstantClass {
    public static IpamResourceDiscoveryState CreateComplete;
    public static IpamResourceDiscoveryState CreateFailed;
    public static IpamResourceDiscoveryState CreateInProgress;
    public static IpamResourceDiscoveryState DeleteComplete;
    public static IpamResourceDiscoveryState DeleteFailed;
    public static IpamResourceDiscoveryState DeleteInProgress;
    public static IpamResourceDiscoveryState IsolateComplete;
    public static IpamResourceDiscoveryState IsolateInProgress;
    public static IpamResourceDiscoveryState ModifyComplete;
    public static IpamResourceDiscoveryState ModifyFailed;
    public static IpamResourceDiscoveryState ModifyInProgress;
    public static IpamResourceDiscoveryState RestoreInProgress;
    public IpamResourceDiscoveryState(string value);
    private static IpamResourceDiscoveryState();
    public static IpamResourceDiscoveryState FindValue(string value);
    public static IpamResourceDiscoveryState op_Implicit(string value);
}
public class Amazon.EC2.IpamResourceType : ConstantClass {
    public static IpamResourceType Eip;
    public static IpamResourceType Eni;
    public static IpamResourceType Ipv6Pool;
    public static IpamResourceType PublicIpv4Pool;
    public static IpamResourceType Subnet;
    public static IpamResourceType Vpc;
    public IpamResourceType(string value);
    private static IpamResourceType();
    public static IpamResourceType FindValue(string value);
    public static IpamResourceType op_Implicit(string value);
}
public class Amazon.EC2.IpamScopeState : ConstantClass {
    public static IpamScopeState CreateComplete;
    public static IpamScopeState CreateFailed;
    public static IpamScopeState CreateInProgress;
    public static IpamScopeState DeleteComplete;
    public static IpamScopeState DeleteFailed;
    public static IpamScopeState DeleteInProgress;
    public static IpamScopeState IsolateComplete;
    public static IpamScopeState IsolateInProgress;
    public static IpamScopeState ModifyComplete;
    public static IpamScopeState ModifyFailed;
    public static IpamScopeState ModifyInProgress;
    public static IpamScopeState RestoreInProgress;
    public IpamScopeState(string value);
    private static IpamScopeState();
    public static IpamScopeState FindValue(string value);
    public static IpamScopeState op_Implicit(string value);
}
public class Amazon.EC2.IpamScopeType : ConstantClass {
    public static IpamScopeType Private;
    public static IpamScopeType Public;
    public IpamScopeType(string value);
    private static IpamScopeType();
    public static IpamScopeType FindValue(string value);
    public static IpamScopeType op_Implicit(string value);
}
public class Amazon.EC2.IpamState : ConstantClass {
    public static IpamState CreateComplete;
    public static IpamState CreateFailed;
    public static IpamState CreateInProgress;
    public static IpamState DeleteComplete;
    public static IpamState DeleteFailed;
    public static IpamState DeleteInProgress;
    public static IpamState IsolateComplete;
    public static IpamState IsolateInProgress;
    public static IpamState ModifyComplete;
    public static IpamState ModifyFailed;
    public static IpamState ModifyInProgress;
    public static IpamState RestoreInProgress;
    public IpamState(string value);
    private static IpamState();
    public static IpamState FindValue(string value);
    public static IpamState op_Implicit(string value);
}
public class Amazon.EC2.IpamTier : ConstantClass {
    public static IpamTier Advanced;
    public static IpamTier Free;
    public IpamTier(string value);
    private static IpamTier();
    public static IpamTier FindValue(string value);
    public static IpamTier op_Implicit(string value);
}
public class Amazon.EC2.Ipv6SupportValue : ConstantClass {
    public static Ipv6SupportValue Disable;
    public static Ipv6SupportValue Enable;
    public Ipv6SupportValue(string value);
    private static Ipv6SupportValue();
    public static Ipv6SupportValue FindValue(string value);
    public static Ipv6SupportValue op_Implicit(string value);
}
public class Amazon.EC2.KeyFormat : ConstantClass {
    public static KeyFormat Pem;
    public static KeyFormat Ppk;
    public KeyFormat(string value);
    private static KeyFormat();
    public static KeyFormat FindValue(string value);
    public static KeyFormat op_Implicit(string value);
}
public class Amazon.EC2.KeyType : ConstantClass {
    public static KeyType Ed25519;
    public static KeyType Rsa;
    public KeyType(string value);
    private static KeyType();
    public static KeyType FindValue(string value);
    public static KeyType op_Implicit(string value);
}
public class Amazon.EC2.LaunchTemplateAutoRecoveryState : ConstantClass {
    public static LaunchTemplateAutoRecoveryState Default;
    public static LaunchTemplateAutoRecoveryState Disabled;
    public LaunchTemplateAutoRecoveryState(string value);
    private static LaunchTemplateAutoRecoveryState();
    public static LaunchTemplateAutoRecoveryState FindValue(string value);
    public static LaunchTemplateAutoRecoveryState op_Implicit(string value);
}
public class Amazon.EC2.LaunchTemplateErrorCode : ConstantClass {
    public static LaunchTemplateErrorCode LaunchTemplateIdDoesNotExist;
    public static LaunchTemplateErrorCode LaunchTemplateIdMalformed;
    public static LaunchTemplateErrorCode LaunchTemplateNameDoesNotExist;
    public static LaunchTemplateErrorCode LaunchTemplateNameMalformed;
    public static LaunchTemplateErrorCode LaunchTemplateVersionDoesNotExist;
    public static LaunchTemplateErrorCode UnexpectedError;
    public LaunchTemplateErrorCode(string value);
    private static LaunchTemplateErrorCode();
    public static LaunchTemplateErrorCode FindValue(string value);
    public static LaunchTemplateErrorCode op_Implicit(string value);
}
public class Amazon.EC2.LaunchTemplateHttpTokensState : ConstantClass {
    public static LaunchTemplateHttpTokensState Optional;
    public static LaunchTemplateHttpTokensState Required;
    public LaunchTemplateHttpTokensState(string value);
    private static LaunchTemplateHttpTokensState();
    public static LaunchTemplateHttpTokensState FindValue(string value);
    public static LaunchTemplateHttpTokensState op_Implicit(string value);
}
public class Amazon.EC2.LaunchTemplateInstanceMetadataEndpointState : ConstantClass {
    public static LaunchTemplateInstanceMetadataEndpointState Disabled;
    public static LaunchTemplateInstanceMetadataEndpointState Enabled;
    public LaunchTemplateInstanceMetadataEndpointState(string value);
    private static LaunchTemplateInstanceMetadataEndpointState();
    public static LaunchTemplateInstanceMetadataEndpointState FindValue(string value);
    public static LaunchTemplateInstanceMetadataEndpointState op_Implicit(string value);
}
public class Amazon.EC2.LaunchTemplateInstanceMetadataOptionsState : ConstantClass {
    public static LaunchTemplateInstanceMetadataOptionsState Applied;
    public static LaunchTemplateInstanceMetadataOptionsState Pending;
    public LaunchTemplateInstanceMetadataOptionsState(string value);
    private static LaunchTemplateInstanceMetadataOptionsState();
    public static LaunchTemplateInstanceMetadataOptionsState FindValue(string value);
    public static LaunchTemplateInstanceMetadataOptionsState op_Implicit(string value);
}
public class Amazon.EC2.LaunchTemplateInstanceMetadataProtocolIpv6 : ConstantClass {
    public static LaunchTemplateInstanceMetadataProtocolIpv6 Disabled;
    public static LaunchTemplateInstanceMetadataProtocolIpv6 Enabled;
    public LaunchTemplateInstanceMetadataProtocolIpv6(string value);
    private static LaunchTemplateInstanceMetadataProtocolIpv6();
    public static LaunchTemplateInstanceMetadataProtocolIpv6 FindValue(string value);
    public static LaunchTemplateInstanceMetadataProtocolIpv6 op_Implicit(string value);
}
public class Amazon.EC2.LaunchTemplateInstanceMetadataTagsState : ConstantClass {
    public static LaunchTemplateInstanceMetadataTagsState Disabled;
    public static LaunchTemplateInstanceMetadataTagsState Enabled;
    public LaunchTemplateInstanceMetadataTagsState(string value);
    private static LaunchTemplateInstanceMetadataTagsState();
    public static LaunchTemplateInstanceMetadataTagsState FindValue(string value);
    public static LaunchTemplateInstanceMetadataTagsState op_Implicit(string value);
}
public class Amazon.EC2.ListingState : ConstantClass {
    public static ListingState Available;
    public static ListingState Cancelled;
    public static ListingState Pending;
    public static ListingState Sold;
    public ListingState(string value);
    private static ListingState();
    public static ListingState FindValue(string value);
    public static ListingState op_Implicit(string value);
}
public class Amazon.EC2.ListingStatus : ConstantClass {
    public static ListingStatus Active;
    public static ListingStatus Cancelled;
    public static ListingStatus Closed;
    public static ListingStatus Pending;
    public ListingStatus(string value);
    private static ListingStatus();
    public static ListingStatus FindValue(string value);
    public static ListingStatus op_Implicit(string value);
}
public class Amazon.EC2.LocalGatewayRouteState : ConstantClass {
    public static LocalGatewayRouteState Active;
    public static LocalGatewayRouteState Blackhole;
    public static LocalGatewayRouteState Deleted;
    public static LocalGatewayRouteState Deleting;
    public static LocalGatewayRouteState Pending;
    public LocalGatewayRouteState(string value);
    private static LocalGatewayRouteState();
    public static LocalGatewayRouteState FindValue(string value);
    public static LocalGatewayRouteState op_Implicit(string value);
}
public class Amazon.EC2.LocalGatewayRouteTableMode : ConstantClass {
    public static LocalGatewayRouteTableMode Coip;
    public static LocalGatewayRouteTableMode DirectVpcRouting;
    public LocalGatewayRouteTableMode(string value);
    private static LocalGatewayRouteTableMode();
    public static LocalGatewayRouteTableMode FindValue(string value);
    public static LocalGatewayRouteTableMode op_Implicit(string value);
}
public class Amazon.EC2.LocalGatewayRouteType : ConstantClass {
    public static LocalGatewayRouteType Propagated;
    public static LocalGatewayRouteType Static;
    public LocalGatewayRouteType(string value);
    private static LocalGatewayRouteType();
    public static LocalGatewayRouteType FindValue(string value);
    public static LocalGatewayRouteType op_Implicit(string value);
}
public class Amazon.EC2.LocalStorage : ConstantClass {
    public static LocalStorage Excluded;
    public static LocalStorage Included;
    public static LocalStorage Required;
    public LocalStorage(string value);
    private static LocalStorage();
    public static LocalStorage FindValue(string value);
    public static LocalStorage op_Implicit(string value);
}
public class Amazon.EC2.LocalStorageType : ConstantClass {
    public static LocalStorageType Hdd;
    public static LocalStorageType Ssd;
    public LocalStorageType(string value);
    private static LocalStorageType();
    public static LocalStorageType FindValue(string value);
    public static LocalStorageType op_Implicit(string value);
}
public class Amazon.EC2.LocationType : ConstantClass {
    public static LocationType AvailabilityZone;
    public static LocationType AvailabilityZoneId;
    public static LocationType Outpost;
    public static LocationType Region;
    public LocationType(string value);
    private static LocationType();
    public static LocationType FindValue(string value);
    public static LocationType op_Implicit(string value);
}
public class Amazon.EC2.LockMode : ConstantClass {
    public static LockMode Compliance;
    public static LockMode Governance;
    public LockMode(string value);
    private static LockMode();
    public static LockMode FindValue(string value);
    public static LockMode op_Implicit(string value);
}
public class Amazon.EC2.LockState : ConstantClass {
    public static LockState Compliance;
    public static LockState ComplianceCooloff;
    public static LockState Expired;
    public static LockState Governance;
    public LockState(string value);
    private static LockState();
    public static LockState FindValue(string value);
    public static LockState op_Implicit(string value);
}
public class Amazon.EC2.LogDestinationType : ConstantClass {
    public static LogDestinationType CloudWatchLogs;
    public static LogDestinationType KinesisDataFirehose;
    public static LogDestinationType S3;
    public LogDestinationType(string value);
    private static LogDestinationType();
    public static LogDestinationType FindValue(string value);
    public static LogDestinationType op_Implicit(string value);
}
public class Amazon.EC2.MarketType : ConstantClass {
    public static MarketType CapacityBlock;
    public static MarketType Spot;
    public MarketType(string value);
    private static MarketType();
    public static MarketType FindValue(string value);
    public static MarketType op_Implicit(string value);
}
public class Amazon.EC2.MembershipType : ConstantClass {
    public static MembershipType Igmp;
    public static MembershipType Static;
    public MembershipType(string value);
    private static MembershipType();
    public static MembershipType FindValue(string value);
    public static MembershipType op_Implicit(string value);
}
public class Amazon.EC2.MetadataDefaultHttpTokensState : ConstantClass {
    public static MetadataDefaultHttpTokensState NoPreference;
    public static MetadataDefaultHttpTokensState Optional;
    public static MetadataDefaultHttpTokensState Required;
    public MetadataDefaultHttpTokensState(string value);
    private static MetadataDefaultHttpTokensState();
    public static MetadataDefaultHttpTokensState FindValue(string value);
    public static MetadataDefaultHttpTokensState op_Implicit(string value);
}
public class Amazon.EC2.MetricType : ConstantClass {
    public static MetricType AggregateLatency;
    public MetricType(string value);
    private static MetricType();
    public static MetricType FindValue(string value);
    public static MetricType op_Implicit(string value);
}
public class Amazon.EC2.Model.AcceleratorCount : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.AcceleratorCountRequest : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.AcceleratorTotalMemoryMiB : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.AcceleratorTotalMemoryMiBRequest : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.AcceptAddressTransferRequest : AmazonEC2Request {
    private string _address;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string Address { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    internal bool IsSetAddress();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.AcceptAddressTransferResponse : AmazonWebServiceResponse {
    private AddressTransfer _addressTransfer;
    public AddressTransfer AddressTransfer { get; public set; }
    public AddressTransfer get_AddressTransfer();
    public void set_AddressTransfer(AddressTransfer value);
    internal bool IsSetAddressTransfer();
}
public class Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest : AmazonEC2Request {
    private List`1<string> _reservedInstanceIds;
    private List`1<TargetConfigurationRequest> _targetConfigurations;
    [AWSPropertyAttribute]
public List`1<string> ReservedInstanceIds { get; public set; }
    public List`1<TargetConfigurationRequest> TargetConfigurations { get; public set; }
    public List`1<string> get_ReservedInstanceIds();
    public void set_ReservedInstanceIds(List`1<string> value);
    internal bool IsSetReservedInstanceIds();
    public List`1<TargetConfigurationRequest> get_TargetConfigurations();
    public void set_TargetConfigurations(List`1<TargetConfigurationRequest> value);
    internal bool IsSetTargetConfigurations();
}
public class Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteResponse : AmazonWebServiceResponse {
    private string _exchangeId;
    public string ExchangeId { get; public set; }
    public string get_ExchangeId();
    public void set_ExchangeId(string value);
    internal bool IsSetExchangeId();
}
public class Amazon.EC2.Model.AcceptTransitGatewayMulticastDomainAssociationsRequest : AmazonEC2Request {
    private List`1<string> _subnetIds;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayMulticastDomainId;
    public List`1<string> SubnetIds { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.AcceptTransitGatewayMulticastDomainAssociationsResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDomainAssociations _associations;
    public TransitGatewayMulticastDomainAssociations Associations { get; public set; }
    public TransitGatewayMulticastDomainAssociations get_Associations();
    public void set_Associations(TransitGatewayMulticastDomainAssociations value);
    internal bool IsSetAssociations();
}
public class Amazon.EC2.Model.AcceptTransitGatewayPeeringAttachmentRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.AcceptTransitGatewayPeeringAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayPeeringAttachment _transitGatewayPeeringAttachment;
    public TransitGatewayPeeringAttachment TransitGatewayPeeringAttachment { get; public set; }
    public TransitGatewayPeeringAttachment get_TransitGatewayPeeringAttachment();
    public void set_TransitGatewayPeeringAttachment(TransitGatewayPeeringAttachment value);
    internal bool IsSetTransitGatewayPeeringAttachment();
}
public class Amazon.EC2.Model.AcceptTransitGatewayVpcAttachmentRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.AcceptTransitGatewayVpcAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayVpcAttachment _transitGatewayVpcAttachment;
    public TransitGatewayVpcAttachment TransitGatewayVpcAttachment { get; public set; }
    public TransitGatewayVpcAttachment get_TransitGatewayVpcAttachment();
    public void set_TransitGatewayVpcAttachment(TransitGatewayVpcAttachment value);
    internal bool IsSetTransitGatewayVpcAttachment();
}
public class Amazon.EC2.Model.AcceptVpcEndpointConnectionsRequest : AmazonEC2Request {
    private string _serviceId;
    private List`1<string> _vpcEndpointIds;
    [AWSPropertyAttribute]
public string ServiceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VpcEndpointIds { get; public set; }
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public List`1<string> get_VpcEndpointIds();
    public void set_VpcEndpointIds(List`1<string> value);
    internal bool IsSetVpcEndpointIds();
}
public class Amazon.EC2.Model.AcceptVpcEndpointConnectionsResponse : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _vpcPeeringConnectionId;
    [AWSPropertyAttribute]
public string VpcPeeringConnectionId { get; public set; }
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse : AmazonWebServiceResponse {
    private VpcPeeringConnection _vpcPeeringConnection;
    public VpcPeeringConnection VpcPeeringConnection { get; public set; }
    public VpcPeeringConnection get_VpcPeeringConnection();
    public void set_VpcPeeringConnection(VpcPeeringConnection value);
    internal bool IsSetVpcPeeringConnection();
}
public class Amazon.EC2.Model.AccessScopeAnalysisFinding : object {
    private List`1<PathComponent> _findingComponents;
    private string _findingId;
    private string _networkInsightsAccessScopeAnalysisId;
    private string _networkInsightsAccessScopeId;
    public List`1<PathComponent> FindingComponents { get; public set; }
    public string FindingId { get; public set; }
    public string NetworkInsightsAccessScopeAnalysisId { get; public set; }
    public string NetworkInsightsAccessScopeId { get; public set; }
    public List`1<PathComponent> get_FindingComponents();
    public void set_FindingComponents(List`1<PathComponent> value);
    internal bool IsSetFindingComponents();
    public string get_FindingId();
    public void set_FindingId(string value);
    internal bool IsSetFindingId();
    public string get_NetworkInsightsAccessScopeAnalysisId();
    public void set_NetworkInsightsAccessScopeAnalysisId(string value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisId();
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
}
public class Amazon.EC2.Model.AccessScopePath : object {
    private PathStatement _destination;
    private PathStatement _source;
    private List`1<ThroughResourcesStatement> _throughResources;
    public PathStatement Destination { get; public set; }
    public PathStatement Source { get; public set; }
    public List`1<ThroughResourcesStatement> ThroughResources { get; public set; }
    public PathStatement get_Destination();
    public void set_Destination(PathStatement value);
    internal bool IsSetDestination();
    public PathStatement get_Source();
    public void set_Source(PathStatement value);
    internal bool IsSetSource();
    public List`1<ThroughResourcesStatement> get_ThroughResources();
    public void set_ThroughResources(List`1<ThroughResourcesStatement> value);
    internal bool IsSetThroughResources();
}
public class Amazon.EC2.Model.AccessScopePathRequest : object {
    private PathStatementRequest _destination;
    private PathStatementRequest _source;
    private List`1<ThroughResourcesStatementRequest> _throughResources;
    public PathStatementRequest Destination { get; public set; }
    public PathStatementRequest Source { get; public set; }
    public List`1<ThroughResourcesStatementRequest> ThroughResources { get; public set; }
    public PathStatementRequest get_Destination();
    public void set_Destination(PathStatementRequest value);
    internal bool IsSetDestination();
    public PathStatementRequest get_Source();
    public void set_Source(PathStatementRequest value);
    internal bool IsSetSource();
    public List`1<ThroughResourcesStatementRequest> get_ThroughResources();
    public void set_ThroughResources(List`1<ThroughResourcesStatementRequest> value);
    internal bool IsSetThroughResources();
}
public class Amazon.EC2.Model.AccountAttribute : object {
    private string _attributeName;
    private List`1<AccountAttributeValue> _attributeValues;
    public string AttributeName { get; public set; }
    public List`1<AccountAttributeValue> AttributeValues { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public List`1<AccountAttributeValue> get_AttributeValues();
    public void set_AttributeValues(List`1<AccountAttributeValue> value);
    internal bool IsSetAttributeValues();
}
public class Amazon.EC2.Model.AccountAttributeValue : object {
    private string _attributeValue;
    public string AttributeValue { get; public set; }
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
}
public class Amazon.EC2.Model.ActiveInstance : object {
    private InstanceHealthStatus _instanceHealth;
    private string _instanceId;
    private string _instanceType;
    private string _spotInstanceRequestId;
    public InstanceHealthStatus InstanceHealth { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceType { get; public set; }
    public string SpotInstanceRequestId { get; public set; }
    public InstanceHealthStatus get_InstanceHealth();
    public void set_InstanceHealth(InstanceHealthStatus value);
    internal bool IsSetInstanceHealth();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
}
public class Amazon.EC2.Model.AddedPrincipal : object {
    private string _principal;
    private PrincipalType _principalType;
    private string _serviceId;
    private string _servicePermissionId;
    public string Principal { get; public set; }
    public PrincipalType PrincipalType { get; public set; }
    public string ServiceId { get; public set; }
    public string ServicePermissionId { get; public set; }
    public string get_Principal();
    public void set_Principal(string value);
    internal bool IsSetPrincipal();
    public PrincipalType get_PrincipalType();
    public void set_PrincipalType(PrincipalType value);
    internal bool IsSetPrincipalType();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public string get_ServicePermissionId();
    public void set_ServicePermissionId(string value);
    internal bool IsSetServicePermissionId();
}
public class Amazon.EC2.Model.AddIpamOperatingRegion : object {
    private string _regionName;
    public string RegionName { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.EC2.Model.AdditionalDetail : object {
    private string _additionalDetailType;
    private AnalysisComponent _component;
    private List`1<AnalysisComponent> _loadBalancers;
    private List`1<RuleGroupRuleOptionsPair> _ruleGroupRuleOptionsPairs;
    private List`1<RuleGroupTypePair> _ruleGroupTypePairs;
    private List`1<RuleOption> _ruleOptions;
    private string _serviceName;
    private AnalysisComponent _vpcEndpointService;
    public string AdditionalDetailType { get; public set; }
    public AnalysisComponent Component { get; public set; }
    public List`1<AnalysisComponent> LoadBalancers { get; public set; }
    public List`1<RuleGroupRuleOptionsPair> RuleGroupRuleOptionsPairs { get; public set; }
    public List`1<RuleGroupTypePair> RuleGroupTypePairs { get; public set; }
    public List`1<RuleOption> RuleOptions { get; public set; }
    public string ServiceName { get; public set; }
    public AnalysisComponent VpcEndpointService { get; public set; }
    public string get_AdditionalDetailType();
    public void set_AdditionalDetailType(string value);
    internal bool IsSetAdditionalDetailType();
    public AnalysisComponent get_Component();
    public void set_Component(AnalysisComponent value);
    internal bool IsSetComponent();
    public List`1<AnalysisComponent> get_LoadBalancers();
    public void set_LoadBalancers(List`1<AnalysisComponent> value);
    internal bool IsSetLoadBalancers();
    public List`1<RuleGroupRuleOptionsPair> get_RuleGroupRuleOptionsPairs();
    public void set_RuleGroupRuleOptionsPairs(List`1<RuleGroupRuleOptionsPair> value);
    internal bool IsSetRuleGroupRuleOptionsPairs();
    public List`1<RuleGroupTypePair> get_RuleGroupTypePairs();
    public void set_RuleGroupTypePairs(List`1<RuleGroupTypePair> value);
    internal bool IsSetRuleGroupTypePairs();
    public List`1<RuleOption> get_RuleOptions();
    public void set_RuleOptions(List`1<RuleOption> value);
    internal bool IsSetRuleOptions();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public AnalysisComponent get_VpcEndpointService();
    public void set_VpcEndpointService(AnalysisComponent value);
    internal bool IsSetVpcEndpointService();
}
public class Amazon.EC2.Model.AddPrefixListEntry : object {
    private string _cidr;
    private string _description;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string Description { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.EC2.Model.Address : object {
    private string _allocationId;
    private string _associationId;
    private string _carrierIp;
    private string _customerOwnedIp;
    private string _customerOwnedIpv4Pool;
    private DomainType _domain;
    private string _instanceId;
    private string _networkBorderGroup;
    private string _networkInterfaceId;
    private string _networkInterfaceOwnerId;
    private string _privateIpAddress;
    private string _publicIp;
    private string _publicIpv4Pool;
    private List`1<Tag> _tags;
    public string AllocationId { get; public set; }
    public string AssociationId { get; public set; }
    public string CarrierIp { get; public set; }
    public string CustomerOwnedIp { get; public set; }
    public string CustomerOwnedIpv4Pool { get; public set; }
    public DomainType Domain { get; public set; }
    public string InstanceId { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string NetworkInterfaceOwnerId { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string PublicIp { get; public set; }
    public string PublicIpv4Pool { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_CarrierIp();
    public void set_CarrierIp(string value);
    internal bool IsSetCarrierIp();
    public string get_CustomerOwnedIp();
    public void set_CustomerOwnedIp(string value);
    internal bool IsSetCustomerOwnedIp();
    public string get_CustomerOwnedIpv4Pool();
    public void set_CustomerOwnedIpv4Pool(string value);
    internal bool IsSetCustomerOwnedIpv4Pool();
    public DomainType get_Domain();
    public void set_Domain(DomainType value);
    internal bool IsSetDomain();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_NetworkInterfaceOwnerId();
    public void set_NetworkInterfaceOwnerId(string value);
    internal bool IsSetNetworkInterfaceOwnerId();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public string get_PublicIpv4Pool();
    public void set_PublicIpv4Pool(string value);
    internal bool IsSetPublicIpv4Pool();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.AddressAttribute : object {
    private string _allocationId;
    private string _ptrRecord;
    private PtrUpdateStatus _ptrRecordUpdate;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public string PtrRecord { get; public set; }
    public PtrUpdateStatus PtrRecordUpdate { get; public set; }
    public string PublicIp { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_PtrRecord();
    public void set_PtrRecord(string value);
    internal bool IsSetPtrRecord();
    public PtrUpdateStatus get_PtrRecordUpdate();
    public void set_PtrRecordUpdate(PtrUpdateStatus value);
    internal bool IsSetPtrRecordUpdate();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.AddressTransfer : object {
    private AddressTransferStatus _addressTransferStatus;
    private string _allocationId;
    private string _publicIp;
    private string _transferAccountId;
    private Nullable`1<DateTime> _transferOfferAcceptedTimestamp;
    private Nullable`1<DateTime> _transferOfferExpirationTimestamp;
    public AddressTransferStatus AddressTransferStatus { get; public set; }
    public string AllocationId { get; public set; }
    public string PublicIp { get; public set; }
    public string TransferAccountId { get; public set; }
    public Nullable`1<DateTime> TransferOfferAcceptedTimestamp { get; public set; }
    public Nullable`1<DateTime> TransferOfferExpirationTimestamp { get; public set; }
    public AddressTransferStatus get_AddressTransferStatus();
    public void set_AddressTransferStatus(AddressTransferStatus value);
    internal bool IsSetAddressTransferStatus();
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public string get_TransferAccountId();
    public void set_TransferAccountId(string value);
    internal bool IsSetTransferAccountId();
    public Nullable`1<DateTime> get_TransferOfferAcceptedTimestamp();
    public void set_TransferOfferAcceptedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetTransferOfferAcceptedTimestamp();
    public Nullable`1<DateTime> get_TransferOfferExpirationTimestamp();
    public void set_TransferOfferExpirationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetTransferOfferExpirationTimestamp();
}
public class Amazon.EC2.Model.AdvertiseByoipCidrRequest : AmazonEC2Request {
    private string _asn;
    private string _cidr;
    private string _networkBorderGroup;
    public string Asn { get; public set; }
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public string get_Asn();
    public void set_Asn(string value);
    internal bool IsSetAsn();
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
}
public class Amazon.EC2.Model.AdvertiseByoipCidrResponse : AmazonWebServiceResponse {
    private ByoipCidr _byoipCidr;
    public ByoipCidr ByoipCidr { get; public set; }
    public ByoipCidr get_ByoipCidr();
    public void set_ByoipCidr(ByoipCidr value);
    internal bool IsSetByoipCidr();
}
public class Amazon.EC2.Model.AllocateAddressRequest : AmazonEC2Request {
    private string _address;
    private string _customerOwnedIpv4Pool;
    private DomainType _domain;
    private string _networkBorderGroup;
    private string _publicIpv4Pool;
    private List`1<TagSpecification> _tagSpecifications;
    public string Address { get; public set; }
    public string CustomerOwnedIpv4Pool { get; public set; }
    public DomainType Domain { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public string PublicIpv4Pool { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    internal bool IsSetAddress();
    public string get_CustomerOwnedIpv4Pool();
    public void set_CustomerOwnedIpv4Pool(string value);
    internal bool IsSetCustomerOwnedIpv4Pool();
    public DomainType get_Domain();
    public void set_Domain(DomainType value);
    internal bool IsSetDomain();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public string get_PublicIpv4Pool();
    public void set_PublicIpv4Pool(string value);
    internal bool IsSetPublicIpv4Pool();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.AllocateAddressResponse : AmazonWebServiceResponse {
    private string _allocationId;
    private string _carrierIp;
    private string _customerOwnedIp;
    private string _customerOwnedIpv4Pool;
    private DomainType _domain;
    private string _networkBorderGroup;
    private string _publicIp;
    private string _publicIpv4Pool;
    public string AllocationId { get; public set; }
    public string CarrierIp { get; public set; }
    public string CustomerOwnedIp { get; public set; }
    public string CustomerOwnedIpv4Pool { get; public set; }
    public DomainType Domain { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public string PublicIp { get; public set; }
    public string PublicIpv4Pool { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_CarrierIp();
    public void set_CarrierIp(string value);
    internal bool IsSetCarrierIp();
    public string get_CustomerOwnedIp();
    public void set_CustomerOwnedIp(string value);
    internal bool IsSetCustomerOwnedIp();
    public string get_CustomerOwnedIpv4Pool();
    public void set_CustomerOwnedIpv4Pool(string value);
    internal bool IsSetCustomerOwnedIpv4Pool();
    public DomainType get_Domain();
    public void set_Domain(DomainType value);
    internal bool IsSetDomain();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public string get_PublicIpv4Pool();
    public void set_PublicIpv4Pool(string value);
    internal bool IsSetPublicIpv4Pool();
}
public class Amazon.EC2.Model.AllocateHostsRequest : AmazonEC2Request {
    private List`1<string> _assetIds;
    private AutoPlacement _autoPlacement;
    private string _availabilityZone;
    private string _clientToken;
    private HostMaintenance _hostMaintenance;
    private HostRecovery _hostRecovery;
    private string _instanceFamily;
    private string _instanceType;
    private string _outpostArn;
    private Nullable`1<int> _quantity;
    private List`1<TagSpecification> _tagSpecifications;
    public List`1<string> AssetIds { get; public set; }
    public AutoPlacement AutoPlacement { get; public set; }
    [AWSPropertyAttribute]
public string AvailabilityZone { get; public set; }
    public string ClientToken { get; public set; }
    public HostMaintenance HostMaintenance { get; public set; }
    public HostRecovery HostRecovery { get; public set; }
    public string InstanceFamily { get; public set; }
    public string InstanceType { get; public set; }
    public string OutpostArn { get; public set; }
    public Nullable`1<int> Quantity { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public List`1<string> get_AssetIds();
    public void set_AssetIds(List`1<string> value);
    internal bool IsSetAssetIds();
    public AutoPlacement get_AutoPlacement();
    public void set_AutoPlacement(AutoPlacement value);
    internal bool IsSetAutoPlacement();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public HostMaintenance get_HostMaintenance();
    public void set_HostMaintenance(HostMaintenance value);
    internal bool IsSetHostMaintenance();
    public HostRecovery get_HostRecovery();
    public void set_HostRecovery(HostRecovery value);
    internal bool IsSetHostRecovery();
    public string get_InstanceFamily();
    public void set_InstanceFamily(string value);
    internal bool IsSetInstanceFamily();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.AllocateHostsResponse : AmazonWebServiceResponse {
    private List`1<string> _hostIds;
    public List`1<string> HostIds { get; public set; }
    public List`1<string> get_HostIds();
    public void set_HostIds(List`1<string> value);
    internal bool IsSetHostIds();
}
public class Amazon.EC2.Model.AllocateIpamPoolCidrRequest : AmazonEC2Request {
    private List`1<string> _allowedCidrs;
    private string _cidr;
    private string _clientToken;
    private string _description;
    private List`1<string> _disallowedCidrs;
    private string _ipamPoolId;
    private Nullable`1<int> _netmaskLength;
    private Nullable`1<bool> _previewNextCidr;
    public List`1<string> AllowedCidrs { get; public set; }
    public string Cidr { get; public set; }
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public List`1<string> DisallowedCidrs { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    public Nullable`1<int> NetmaskLength { get; public set; }
    public Nullable`1<bool> PreviewNextCidr { get; public set; }
    public List`1<string> get_AllowedCidrs();
    public void set_AllowedCidrs(List`1<string> value);
    internal bool IsSetAllowedCidrs();
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_DisallowedCidrs();
    public void set_DisallowedCidrs(List`1<string> value);
    internal bool IsSetDisallowedCidrs();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public Nullable`1<int> get_NetmaskLength();
    public void set_NetmaskLength(Nullable`1<int> value);
    internal bool IsSetNetmaskLength();
    public Nullable`1<bool> get_PreviewNextCidr();
    public void set_PreviewNextCidr(Nullable`1<bool> value);
    internal bool IsSetPreviewNextCidr();
}
public class Amazon.EC2.Model.AllocateIpamPoolCidrResponse : AmazonWebServiceResponse {
    private IpamPoolAllocation _ipamPoolAllocation;
    public IpamPoolAllocation IpamPoolAllocation { get; public set; }
    public IpamPoolAllocation get_IpamPoolAllocation();
    public void set_IpamPoolAllocation(IpamPoolAllocation value);
    internal bool IsSetIpamPoolAllocation();
}
public class Amazon.EC2.Model.AllowedPrincipal : object {
    private string _principal;
    private PrincipalType _principalType;
    private string _serviceId;
    private string _servicePermissionId;
    private List`1<Tag> _tags;
    public string Principal { get; public set; }
    public PrincipalType PrincipalType { get; public set; }
    public string ServiceId { get; public set; }
    public string ServicePermissionId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Principal();
    public void set_Principal(string value);
    internal bool IsSetPrincipal();
    public PrincipalType get_PrincipalType();
    public void set_PrincipalType(PrincipalType value);
    internal bool IsSetPrincipalType();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public string get_ServicePermissionId();
    public void set_ServicePermissionId(string value);
    internal bool IsSetServicePermissionId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.AlternatePathHint : object {
    private string _componentArn;
    private string _componentId;
    public string ComponentArn { get; public set; }
    public string ComponentId { get; public set; }
    public string get_ComponentArn();
    public void set_ComponentArn(string value);
    internal bool IsSetComponentArn();
    public string get_ComponentId();
    public void set_ComponentId(string value);
    internal bool IsSetComponentId();
}
public class Amazon.EC2.Model.AnalysisAclRule : object {
    private string _cidr;
    private Nullable`1<bool> _egress;
    private PortRange _portRange;
    private string _protocol;
    private string _ruleAction;
    private Nullable`1<int> _ruleNumber;
    public string Cidr { get; public set; }
    public Nullable`1<bool> Egress { get; public set; }
    public PortRange PortRange { get; public set; }
    public string Protocol { get; public set; }
    public string RuleAction { get; public set; }
    public Nullable`1<int> RuleNumber { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public Nullable`1<bool> get_Egress();
    public void set_Egress(Nullable`1<bool> value);
    internal bool IsSetEgress();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_RuleAction();
    public void set_RuleAction(string value);
    internal bool IsSetRuleAction();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.AnalysisComponent : object {
    private string _arn;
    private string _id;
    private string _name;
    public string Arn { get; public set; }
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.AnalysisLoadBalancerListener : object {
    private Nullable`1<int> _instancePort;
    private Nullable`1<int> _loadBalancerPort;
    [AWSPropertyAttribute]
public Nullable`1<int> InstancePort { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> LoadBalancerPort { get; public set; }
    public Nullable`1<int> get_InstancePort();
    public void set_InstancePort(Nullable`1<int> value);
    internal bool IsSetInstancePort();
    public Nullable`1<int> get_LoadBalancerPort();
    public void set_LoadBalancerPort(Nullable`1<int> value);
    internal bool IsSetLoadBalancerPort();
}
public class Amazon.EC2.Model.AnalysisLoadBalancerTarget : object {
    private string _address;
    private string _availabilityZone;
    private AnalysisComponent _instance;
    private Nullable`1<int> _port;
    [AWSPropertyAttribute]
public string Address { get; public set; }
    public string AvailabilityZone { get; public set; }
    public AnalysisComponent Instance { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    internal bool IsSetAddress();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public AnalysisComponent get_Instance();
    public void set_Instance(AnalysisComponent value);
    internal bool IsSetInstance();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
}
public class Amazon.EC2.Model.AnalysisPacketHeader : object {
    private List`1<string> _destinationAddresses;
    private List`1<PortRange> _destinationPortRanges;
    private string _protocol;
    private List`1<string> _sourceAddresses;
    private List`1<PortRange> _sourcePortRanges;
    public List`1<string> DestinationAddresses { get; public set; }
    public List`1<PortRange> DestinationPortRanges { get; public set; }
    public string Protocol { get; public set; }
    public List`1<string> SourceAddresses { get; public set; }
    public List`1<PortRange> SourcePortRanges { get; public set; }
    public List`1<string> get_DestinationAddresses();
    public void set_DestinationAddresses(List`1<string> value);
    internal bool IsSetDestinationAddresses();
    public List`1<PortRange> get_DestinationPortRanges();
    public void set_DestinationPortRanges(List`1<PortRange> value);
    internal bool IsSetDestinationPortRanges();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public List`1<string> get_SourceAddresses();
    public void set_SourceAddresses(List`1<string> value);
    internal bool IsSetSourceAddresses();
    public List`1<PortRange> get_SourcePortRanges();
    public void set_SourcePortRanges(List`1<PortRange> value);
    internal bool IsSetSourcePortRanges();
}
public class Amazon.EC2.Model.AnalysisRouteTableRoute : object {
    private string _carrierGatewayId;
    private string _coreNetworkArn;
    private string _destinationCidr;
    private string _destinationPrefixListId;
    private string _egressOnlyInternetGatewayId;
    private string _gatewayId;
    private string _instanceId;
    private string _localGatewayId;
    private string _natGatewayId;
    private string _networkInterfaceId;
    private string _origin;
    private string _state;
    private string _transitGatewayId;
    private string _vpcPeeringConnectionId;
    public string CarrierGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string CoreNetworkArn { get; public set; }
    public string DestinationCidr { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    public string EgressOnlyInternetGatewayId { get; public set; }
    public string GatewayId { get; public set; }
    public string InstanceId { get; public set; }
    public string LocalGatewayId { get; public set; }
    public string NatGatewayId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string Origin { get; public set; }
    public string State { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_CarrierGatewayId();
    public void set_CarrierGatewayId(string value);
    internal bool IsSetCarrierGatewayId();
    public string get_CoreNetworkArn();
    public void set_CoreNetworkArn(string value);
    internal bool IsSetCoreNetworkArn();
    public string get_DestinationCidr();
    public void set_DestinationCidr(string value);
    internal bool IsSetDestinationCidr();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_EgressOnlyInternetGatewayId();
    public void set_EgressOnlyInternetGatewayId(string value);
    internal bool IsSetEgressOnlyInternetGatewayId();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_Origin();
    public void set_Origin(string value);
    internal bool IsSetOrigin();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.AnalysisSecurityGroupRule : object {
    private string _cidr;
    private string _direction;
    private PortRange _portRange;
    private string _prefixListId;
    private string _protocol;
    private string _securityGroupId;
    public string Cidr { get; public set; }
    public string Direction { get; public set; }
    public PortRange PortRange { get; public set; }
    public string PrefixListId { get; public set; }
    public string Protocol { get; public set; }
    public string SecurityGroupId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_Direction();
    public void set_Direction(string value);
    internal bool IsSetDirection();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_SecurityGroupId();
    public void set_SecurityGroupId(string value);
    internal bool IsSetSecurityGroupId();
}
public class Amazon.EC2.Model.ApplySecurityGroupsToClientVpnTargetNetworkRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    private List`1<string> _securityGroupIds;
    private string _vpcId;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.ApplySecurityGroupsToClientVpnTargetNetworkResponse : AmazonWebServiceResponse {
    private List`1<string> _securityGroupIds;
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
}
public class Amazon.EC2.Model.AsnAssociation : object {
    private string _asn;
    private string _cidr;
    private AsnAssociationState _state;
    private string _statusMessage;
    public string Asn { get; public set; }
    public string Cidr { get; public set; }
    public AsnAssociationState State { get; public set; }
    public string StatusMessage { get; public set; }
    public string get_Asn();
    public void set_Asn(string value);
    internal bool IsSetAsn();
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public AsnAssociationState get_State();
    public void set_State(AsnAssociationState value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.AsnAuthorizationContext : object {
    private string _message;
    private string _signature;
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public string Signature { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Signature();
    public void set_Signature(string value);
    internal bool IsSetSignature();
}
public class Amazon.EC2.Model.AssignedPrivateIpAddress : object {
    private string _privateIpAddress;
    public string PrivateIpAddress { get; public set; }
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
public class Amazon.EC2.Model.AssignIpv6AddressesRequest : AmazonEC2Request {
    private Nullable`1<int> _ipv6AddressCount;
    private List`1<string> _ipv6Addresses;
    private Nullable`1<int> _ipv6PrefixCount;
    private List`1<string> _ipv6Prefixes;
    private string _networkInterfaceId;
    public Nullable`1<int> Ipv6AddressCount { get; public set; }
    public List`1<string> Ipv6Addresses { get; public set; }
    public Nullable`1<int> Ipv6PrefixCount { get; public set; }
    public List`1<string> Ipv6Prefixes { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public Nullable`1<int> get_Ipv6AddressCount();
    public void set_Ipv6AddressCount(Nullable`1<int> value);
    internal bool IsSetIpv6AddressCount();
    public List`1<string> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<string> value);
    internal bool IsSetIpv6Addresses();
    public Nullable`1<int> get_Ipv6PrefixCount();
    public void set_Ipv6PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv6PrefixCount();
    public List`1<string> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<string> value);
    internal bool IsSetIpv6Prefixes();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.AssignIpv6AddressesResponse : AmazonWebServiceResponse {
    private List`1<string> _assignedIpv6Addresses;
    private List`1<string> _assignedIpv6Prefixes;
    private string _networkInterfaceId;
    public List`1<string> AssignedIpv6Addresses { get; public set; }
    public List`1<string> AssignedIpv6Prefixes { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public List`1<string> get_AssignedIpv6Addresses();
    public void set_AssignedIpv6Addresses(List`1<string> value);
    internal bool IsSetAssignedIpv6Addresses();
    public List`1<string> get_AssignedIpv6Prefixes();
    public void set_AssignedIpv6Prefixes(List`1<string> value);
    internal bool IsSetAssignedIpv6Prefixes();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.AssignPrivateIpAddressesRequest : AmazonEC2Request {
    private Nullable`1<bool> _allowReassignment;
    private Nullable`1<int> _ipv4PrefixCount;
    private List`1<string> _ipv4Prefixes;
    private string _networkInterfaceId;
    private List`1<string> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    public Nullable`1<bool> AllowReassignment { get; public set; }
    public Nullable`1<int> Ipv4PrefixCount { get; public set; }
    public List`1<string> Ipv4Prefixes { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public List`1<string> PrivateIpAddresses { get; public set; }
    public Nullable`1<int> SecondaryPrivateIpAddressCount { get; public set; }
    public Nullable`1<bool> get_AllowReassignment();
    public void set_AllowReassignment(Nullable`1<bool> value);
    internal bool IsSetAllowReassignment();
    public Nullable`1<int> get_Ipv4PrefixCount();
    public void set_Ipv4PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv4PrefixCount();
    public List`1<string> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<string> value);
    internal bool IsSetIpv4Prefixes();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public List`1<string> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<string> value);
    internal bool IsSetPrivateIpAddresses();
    public Nullable`1<int> get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
}
public class Amazon.EC2.Model.AssignPrivateIpAddressesResponse : AmazonWebServiceResponse {
    private List`1<Ipv4PrefixSpecification> _assignedIpv4Prefixes;
    private List`1<AssignedPrivateIpAddress> _assignedPrivateIpAddresses;
    private string _networkInterfaceId;
    public List`1<Ipv4PrefixSpecification> AssignedIpv4Prefixes { get; public set; }
    public List`1<AssignedPrivateIpAddress> AssignedPrivateIpAddresses { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public List`1<Ipv4PrefixSpecification> get_AssignedIpv4Prefixes();
    public void set_AssignedIpv4Prefixes(List`1<Ipv4PrefixSpecification> value);
    internal bool IsSetAssignedIpv4Prefixes();
    public List`1<AssignedPrivateIpAddress> get_AssignedPrivateIpAddresses();
    public void set_AssignedPrivateIpAddresses(List`1<AssignedPrivateIpAddress> value);
    internal bool IsSetAssignedPrivateIpAddresses();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.AssignPrivateNatGatewayAddressRequest : AmazonEC2Request {
    private string _natGatewayId;
    private Nullable`1<int> _privateIpAddressCount;
    private List`1<string> _privateIpAddresses;
    [AWSPropertyAttribute]
public string NatGatewayId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PrivateIpAddressCount { get; public set; }
    public List`1<string> PrivateIpAddresses { get; public set; }
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public Nullable`1<int> get_PrivateIpAddressCount();
    public void set_PrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetPrivateIpAddressCount();
    public List`1<string> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<string> value);
    internal bool IsSetPrivateIpAddresses();
}
public class Amazon.EC2.Model.AssignPrivateNatGatewayAddressResponse : AmazonWebServiceResponse {
    private List`1<NatGatewayAddress> _natGatewayAddresses;
    private string _natGatewayId;
    public List`1<NatGatewayAddress> NatGatewayAddresses { get; public set; }
    public string NatGatewayId { get; public set; }
    public List`1<NatGatewayAddress> get_NatGatewayAddresses();
    public void set_NatGatewayAddresses(List`1<NatGatewayAddress> value);
    internal bool IsSetNatGatewayAddresses();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
}
public class Amazon.EC2.Model.AssociateAddressRequest : AmazonEC2Request {
    private string _allocationId;
    private Nullable`1<bool> _allowReassociation;
    private string _instanceId;
    private string _networkInterfaceId;
    private string _privateIpAddress;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public Nullable`1<bool> AllowReassociation { get; public set; }
    public string InstanceId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string PublicIp { get; public set; }
    public AssociateAddressRequest(string instanceId, string publicIp);
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public Nullable`1<bool> get_AllowReassociation();
    public void set_AllowReassociation(Nullable`1<bool> value);
    internal bool IsSetAllowReassociation();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.AssociateAddressResponse : AmazonWebServiceResponse {
    private string _associationId;
    public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.AssociateClientVpnTargetNetworkRequest : AmazonEC2Request {
    private string _clientToken;
    private string _clientVpnEndpointId;
    private string _subnetId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.AssociateClientVpnTargetNetworkResponse : AmazonWebServiceResponse {
    private string _associationId;
    private AssociationStatus _status;
    public string AssociationId { get; public set; }
    public AssociationStatus Status { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public AssociationStatus get_Status();
    public void set_Status(AssociationStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.AssociateDhcpOptionsRequest : AmazonEC2Request {
    private string _dhcpOptionsId;
    private string _vpcId;
    [AWSPropertyAttribute]
public string DhcpOptionsId { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public AssociateDhcpOptionsRequest(string vpcId);
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AssociateDhcpOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.AssociatedRole : object {
    private string _associatedRoleArn;
    private string _certificateS3BucketName;
    private string _certificateS3ObjectKey;
    private string _encryptionKmsKeyId;
    [AWSPropertyAttribute]
public string AssociatedRoleArn { get; public set; }
    public string CertificateS3BucketName { get; public set; }
    public string CertificateS3ObjectKey { get; public set; }
    public string EncryptionKmsKeyId { get; public set; }
    public string get_AssociatedRoleArn();
    public void set_AssociatedRoleArn(string value);
    internal bool IsSetAssociatedRoleArn();
    public string get_CertificateS3BucketName();
    public void set_CertificateS3BucketName(string value);
    internal bool IsSetCertificateS3BucketName();
    public string get_CertificateS3ObjectKey();
    public void set_CertificateS3ObjectKey(string value);
    internal bool IsSetCertificateS3ObjectKey();
    public string get_EncryptionKmsKeyId();
    public void set_EncryptionKmsKeyId(string value);
    internal bool IsSetEncryptionKmsKeyId();
}
public class Amazon.EC2.Model.AssociatedTargetNetwork : object {
    private string _networkId;
    private AssociatedNetworkType _networkType;
    public string NetworkId { get; public set; }
    public AssociatedNetworkType NetworkType { get; public set; }
    public string get_NetworkId();
    public void set_NetworkId(string value);
    internal bool IsSetNetworkId();
    public AssociatedNetworkType get_NetworkType();
    public void set_NetworkType(AssociatedNetworkType value);
    internal bool IsSetNetworkType();
}
public class Amazon.EC2.Model.AssociateEnclaveCertificateIamRoleRequest : AmazonEC2Request {
    private string _certificateArn;
    private string _roleArn;
    [AWSPropertyAttribute]
public string CertificateArn { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.EC2.Model.AssociateEnclaveCertificateIamRoleResponse : AmazonWebServiceResponse {
    private string _certificateS3BucketName;
    private string _certificateS3ObjectKey;
    private string _encryptionKmsKeyId;
    public string CertificateS3BucketName { get; public set; }
    public string CertificateS3ObjectKey { get; public set; }
    public string EncryptionKmsKeyId { get; public set; }
    public string get_CertificateS3BucketName();
    public void set_CertificateS3BucketName(string value);
    internal bool IsSetCertificateS3BucketName();
    public string get_CertificateS3ObjectKey();
    public void set_CertificateS3ObjectKey(string value);
    internal bool IsSetCertificateS3ObjectKey();
    public string get_EncryptionKmsKeyId();
    public void set_EncryptionKmsKeyId(string value);
    internal bool IsSetEncryptionKmsKeyId();
}
public class Amazon.EC2.Model.AssociateIamInstanceProfileRequest : AmazonEC2Request {
    private IamInstanceProfileSpecification _iamInstanceProfile;
    private string _instanceId;
    [AWSPropertyAttribute]
public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.AssociateIamInstanceProfileResponse : AmazonWebServiceResponse {
    private IamInstanceProfileAssociation _iamInstanceProfileAssociation;
    public IamInstanceProfileAssociation IamInstanceProfileAssociation { get; public set; }
    public IamInstanceProfileAssociation get_IamInstanceProfileAssociation();
    public void set_IamInstanceProfileAssociation(IamInstanceProfileAssociation value);
    internal bool IsSetIamInstanceProfileAssociation();
}
public class Amazon.EC2.Model.AssociateInstanceEventWindowRequest : AmazonEC2Request {
    private InstanceEventWindowAssociationRequest _associationTarget;
    private string _instanceEventWindowId;
    [AWSPropertyAttribute]
public InstanceEventWindowAssociationRequest AssociationTarget { get; public set; }
    [AWSPropertyAttribute]
public string InstanceEventWindowId { get; public set; }
    public InstanceEventWindowAssociationRequest get_AssociationTarget();
    public void set_AssociationTarget(InstanceEventWindowAssociationRequest value);
    internal bool IsSetAssociationTarget();
    public string get_InstanceEventWindowId();
    public void set_InstanceEventWindowId(string value);
    internal bool IsSetInstanceEventWindowId();
}
public class Amazon.EC2.Model.AssociateInstanceEventWindowResponse : AmazonWebServiceResponse {
    private InstanceEventWindow _instanceEventWindow;
    public InstanceEventWindow InstanceEventWindow { get; public set; }
    public InstanceEventWindow get_InstanceEventWindow();
    public void set_InstanceEventWindow(InstanceEventWindow value);
    internal bool IsSetInstanceEventWindow();
}
public class Amazon.EC2.Model.AssociateIpamByoasnRequest : AmazonEC2Request {
    private string _asn;
    private string _cidr;
    [AWSPropertyAttribute]
public string Asn { get; public set; }
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string get_Asn();
    public void set_Asn(string value);
    internal bool IsSetAsn();
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
}
public class Amazon.EC2.Model.AssociateIpamByoasnResponse : AmazonWebServiceResponse {
    private AsnAssociation _asnAssociation;
    public AsnAssociation AsnAssociation { get; public set; }
    public AsnAssociation get_AsnAssociation();
    public void set_AsnAssociation(AsnAssociation value);
    internal bool IsSetAsnAssociation();
}
public class Amazon.EC2.Model.AssociateIpamResourceDiscoveryRequest : AmazonEC2Request {
    private string _clientToken;
    private string _ipamId;
    private string _ipamResourceDiscoveryId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string IpamId { get; public set; }
    [AWSPropertyAttribute]
public string IpamResourceDiscoveryId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.AssociateIpamResourceDiscoveryResponse : AmazonWebServiceResponse {
    private IpamResourceDiscoveryAssociation _ipamResourceDiscoveryAssociation;
    public IpamResourceDiscoveryAssociation IpamResourceDiscoveryAssociation { get; public set; }
    public IpamResourceDiscoveryAssociation get_IpamResourceDiscoveryAssociation();
    public void set_IpamResourceDiscoveryAssociation(IpamResourceDiscoveryAssociation value);
    internal bool IsSetIpamResourceDiscoveryAssociation();
}
public class Amazon.EC2.Model.AssociateNatGatewayAddressRequest : AmazonEC2Request {
    private List`1<string> _allocationIds;
    private string _natGatewayId;
    private List`1<string> _privateIpAddresses;
    [AWSPropertyAttribute]
public List`1<string> AllocationIds { get; public set; }
    [AWSPropertyAttribute]
public string NatGatewayId { get; public set; }
    public List`1<string> PrivateIpAddresses { get; public set; }
    public List`1<string> get_AllocationIds();
    public void set_AllocationIds(List`1<string> value);
    internal bool IsSetAllocationIds();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public List`1<string> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<string> value);
    internal bool IsSetPrivateIpAddresses();
}
public class Amazon.EC2.Model.AssociateNatGatewayAddressResponse : AmazonWebServiceResponse {
    private List`1<NatGatewayAddress> _natGatewayAddresses;
    private string _natGatewayId;
    public List`1<NatGatewayAddress> NatGatewayAddresses { get; public set; }
    public string NatGatewayId { get; public set; }
    public List`1<NatGatewayAddress> get_NatGatewayAddresses();
    public void set_NatGatewayAddresses(List`1<NatGatewayAddress> value);
    internal bool IsSetNatGatewayAddresses();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
}
public class Amazon.EC2.Model.AssociateRouteTableRequest : AmazonEC2Request {
    private string _gatewayId;
    private string _routeTableId;
    private string _subnetId;
    public string GatewayId { get; public set; }
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string SubnetId { get; public set; }
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.AssociateRouteTableResponse : AmazonWebServiceResponse {
    private string _associationId;
    private RouteTableAssociationState _associationState;
    public string AssociationId { get; public set; }
    public RouteTableAssociationState AssociationState { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public RouteTableAssociationState get_AssociationState();
    public void set_AssociationState(RouteTableAssociationState value);
    internal bool IsSetAssociationState();
}
public class Amazon.EC2.Model.AssociateSubnetCidrBlockRequest : AmazonEC2Request {
    private string _ipv6CidrBlock;
    private string _ipv6IpamPoolId;
    private Nullable`1<int> _ipv6NetmaskLength;
    private string _subnetId;
    public string Ipv6CidrBlock { get; public set; }
    public string Ipv6IpamPoolId { get; public set; }
    public Nullable`1<int> Ipv6NetmaskLength { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public string get_Ipv6IpamPoolId();
    public void set_Ipv6IpamPoolId(string value);
    internal bool IsSetIpv6IpamPoolId();
    public Nullable`1<int> get_Ipv6NetmaskLength();
    public void set_Ipv6NetmaskLength(Nullable`1<int> value);
    internal bool IsSetIpv6NetmaskLength();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.AssociateSubnetCidrBlockResponse : AmazonWebServiceResponse {
    private SubnetIpv6CidrBlockAssociation _ipv6CidrBlockAssociation;
    private string _subnetId;
    public SubnetIpv6CidrBlockAssociation Ipv6CidrBlockAssociation { get; public set; }
    public string SubnetId { get; public set; }
    public SubnetIpv6CidrBlockAssociation get_Ipv6CidrBlockAssociation();
    public void set_Ipv6CidrBlockAssociation(SubnetIpv6CidrBlockAssociation value);
    internal bool IsSetIpv6CidrBlockAssociation();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.AssociateTransitGatewayMulticastDomainRequest : AmazonEC2Request {
    private List`1<string> _subnetIds;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayMulticastDomainId;
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.AssociateTransitGatewayMulticastDomainResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDomainAssociations _associations;
    public TransitGatewayMulticastDomainAssociations Associations { get; public set; }
    public TransitGatewayMulticastDomainAssociations get_Associations();
    public void set_Associations(TransitGatewayMulticastDomainAssociations value);
    internal bool IsSetAssociations();
}
public class Amazon.EC2.Model.AssociateTransitGatewayPolicyTableRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    private string _transitGatewayPolicyTableId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayPolicyTableId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayPolicyTableId();
    public void set_TransitGatewayPolicyTableId(string value);
    internal bool IsSetTransitGatewayPolicyTableId();
}
public class Amazon.EC2.Model.AssociateTransitGatewayPolicyTableResponse : AmazonWebServiceResponse {
    private TransitGatewayPolicyTableAssociation _association;
    public TransitGatewayPolicyTableAssociation Association { get; public set; }
    public TransitGatewayPolicyTableAssociation get_Association();
    public void set_Association(TransitGatewayPolicyTableAssociation value);
    internal bool IsSetAssociation();
}
public class Amazon.EC2.Model.AssociateTransitGatewayRouteTableRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.AssociateTransitGatewayRouteTableResponse : AmazonWebServiceResponse {
    private TransitGatewayAssociation _association;
    public TransitGatewayAssociation Association { get; public set; }
    public TransitGatewayAssociation get_Association();
    public void set_Association(TransitGatewayAssociation value);
    internal bool IsSetAssociation();
}
public class Amazon.EC2.Model.AssociateTrunkInterfaceRequest : AmazonEC2Request {
    private string _branchInterfaceId;
    private string _clientToken;
    private Nullable`1<int> _greKey;
    private string _trunkInterfaceId;
    private Nullable`1<int> _vlanId;
    [AWSPropertyAttribute]
public string BranchInterfaceId { get; public set; }
    public string ClientToken { get; public set; }
    public Nullable`1<int> GreKey { get; public set; }
    [AWSPropertyAttribute]
public string TrunkInterfaceId { get; public set; }
    public Nullable`1<int> VlanId { get; public set; }
    public string get_BranchInterfaceId();
    public void set_BranchInterfaceId(string value);
    internal bool IsSetBranchInterfaceId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<int> get_GreKey();
    public void set_GreKey(Nullable`1<int> value);
    internal bool IsSetGreKey();
    public string get_TrunkInterfaceId();
    public void set_TrunkInterfaceId(string value);
    internal bool IsSetTrunkInterfaceId();
    public Nullable`1<int> get_VlanId();
    public void set_VlanId(Nullable`1<int> value);
    internal bool IsSetVlanId();
}
public class Amazon.EC2.Model.AssociateTrunkInterfaceResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private TrunkInterfaceAssociation _interfaceAssociation;
    public string ClientToken { get; public set; }
    public TrunkInterfaceAssociation InterfaceAssociation { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public TrunkInterfaceAssociation get_InterfaceAssociation();
    public void set_InterfaceAssociation(TrunkInterfaceAssociation value);
    internal bool IsSetInterfaceAssociation();
}
public class Amazon.EC2.Model.AssociateVpcCidrBlockRequest : AmazonEC2Request {
    private Nullable`1<bool> _amazonProvidedIpv6CidrBlock;
    private string _cidrBlock;
    private string _ipv4IpamPoolId;
    private Nullable`1<int> _ipv4NetmaskLength;
    private string _ipv6CidrBlock;
    private string _ipv6CidrBlockNetworkBorderGroup;
    private string _ipv6IpamPoolId;
    private Nullable`1<int> _ipv6NetmaskLength;
    private string _ipv6Pool;
    private string _vpcId;
    public Nullable`1<bool> AmazonProvidedIpv6CidrBlock { get; public set; }
    public string CidrBlock { get; public set; }
    public string Ipv4IpamPoolId { get; public set; }
    public Nullable`1<int> Ipv4NetmaskLength { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    public string Ipv6CidrBlockNetworkBorderGroup { get; public set; }
    public string Ipv6IpamPoolId { get; public set; }
    public Nullable`1<int> Ipv6NetmaskLength { get; public set; }
    public string Ipv6Pool { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public Nullable`1<bool> get_AmazonProvidedIpv6CidrBlock();
    public void set_AmazonProvidedIpv6CidrBlock(Nullable`1<bool> value);
    internal bool IsSetAmazonProvidedIpv6CidrBlock();
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public string get_Ipv4IpamPoolId();
    public void set_Ipv4IpamPoolId(string value);
    internal bool IsSetIpv4IpamPoolId();
    public Nullable`1<int> get_Ipv4NetmaskLength();
    public void set_Ipv4NetmaskLength(Nullable`1<int> value);
    internal bool IsSetIpv4NetmaskLength();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public string get_Ipv6CidrBlockNetworkBorderGroup();
    public void set_Ipv6CidrBlockNetworkBorderGroup(string value);
    internal bool IsSetIpv6CidrBlockNetworkBorderGroup();
    public string get_Ipv6IpamPoolId();
    public void set_Ipv6IpamPoolId(string value);
    internal bool IsSetIpv6IpamPoolId();
    public Nullable`1<int> get_Ipv6NetmaskLength();
    public void set_Ipv6NetmaskLength(Nullable`1<int> value);
    internal bool IsSetIpv6NetmaskLength();
    public string get_Ipv6Pool();
    public void set_Ipv6Pool(string value);
    internal bool IsSetIpv6Pool();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AssociateVpcCidrBlockResponse : AmazonWebServiceResponse {
    private VpcCidrBlockAssociation _cidrBlockAssociation;
    private VpcIpv6CidrBlockAssociation _ipv6CidrBlockAssociation;
    private string _vpcId;
    public VpcCidrBlockAssociation CidrBlockAssociation { get; public set; }
    public VpcIpv6CidrBlockAssociation Ipv6CidrBlockAssociation { get; public set; }
    public string VpcId { get; public set; }
    public VpcCidrBlockAssociation get_CidrBlockAssociation();
    public void set_CidrBlockAssociation(VpcCidrBlockAssociation value);
    internal bool IsSetCidrBlockAssociation();
    public VpcIpv6CidrBlockAssociation get_Ipv6CidrBlockAssociation();
    public void set_Ipv6CidrBlockAssociation(VpcIpv6CidrBlockAssociation value);
    internal bool IsSetIpv6CidrBlockAssociation();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AssociationStatus : object {
    private AssociationStatusCode _code;
    private string _message;
    public AssociationStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public AssociationStatusCode get_Code();
    public void set_Code(AssociationStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.AthenaIntegration : object {
    private string _integrationResultS3DestinationArn;
    private Nullable`1<DateTime> _partitionEndDate;
    private PartitionLoadFrequency _partitionLoadFrequency;
    private Nullable`1<DateTime> _partitionStartDate;
    [AWSPropertyAttribute]
public string IntegrationResultS3DestinationArn { get; public set; }
    public Nullable`1<DateTime> PartitionEndDate { get; public set; }
    [AWSPropertyAttribute]
public PartitionLoadFrequency PartitionLoadFrequency { get; public set; }
    public Nullable`1<DateTime> PartitionStartDate { get; public set; }
    public string get_IntegrationResultS3DestinationArn();
    public void set_IntegrationResultS3DestinationArn(string value);
    internal bool IsSetIntegrationResultS3DestinationArn();
    public Nullable`1<DateTime> get_PartitionEndDate();
    public void set_PartitionEndDate(Nullable`1<DateTime> value);
    internal bool IsSetPartitionEndDate();
    public PartitionLoadFrequency get_PartitionLoadFrequency();
    public void set_PartitionLoadFrequency(PartitionLoadFrequency value);
    internal bool IsSetPartitionLoadFrequency();
    public Nullable`1<DateTime> get_PartitionStartDate();
    public void set_PartitionStartDate(Nullable`1<DateTime> value);
    internal bool IsSetPartitionStartDate();
}
public class Amazon.EC2.Model.AttachClassicLinkVpcRequest : AmazonEC2Request {
    private List`1<string> _groups;
    private string _instanceId;
    private string _vpcId;
    [AWSPropertyAttribute]
public List`1<string> Groups { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AttachClassicLinkVpcResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.AttachInternetGatewayRequest : AmazonEC2Request {
    private string _internetGatewayId;
    private string _vpcId;
    [AWSPropertyAttribute]
public string InternetGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AttachInternetGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.AttachmentEnaSrdSpecification : object {
    private Nullable`1<bool> _enaSrdEnabled;
    private AttachmentEnaSrdUdpSpecification _enaSrdUdpSpecification;
    public Nullable`1<bool> EnaSrdEnabled { get; public set; }
    public AttachmentEnaSrdUdpSpecification EnaSrdUdpSpecification { get; public set; }
    public Nullable`1<bool> get_EnaSrdEnabled();
    public void set_EnaSrdEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdEnabled();
    public AttachmentEnaSrdUdpSpecification get_EnaSrdUdpSpecification();
    public void set_EnaSrdUdpSpecification(AttachmentEnaSrdUdpSpecification value);
    internal bool IsSetEnaSrdUdpSpecification();
}
public class Amazon.EC2.Model.AttachmentEnaSrdUdpSpecification : object {
    private Nullable`1<bool> _enaSrdUdpEnabled;
    public Nullable`1<bool> EnaSrdUdpEnabled { get; public set; }
    public Nullable`1<bool> get_EnaSrdUdpEnabled();
    public void set_EnaSrdUdpEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdUdpEnabled();
}
public class Amazon.EC2.Model.AttachNetworkInterfaceRequest : AmazonEC2Request {
    private Nullable`1<int> _deviceIndex;
    private EnaSrdSpecification _enaSrdSpecification;
    private string _instanceId;
    private Nullable`1<int> _networkCardIndex;
    private string _networkInterfaceId;
    [AWSPropertyAttribute]
public Nullable`1<int> DeviceIndex { get; public set; }
    public EnaSrdSpecification EnaSrdSpecification { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public Nullable`1<int> get_DeviceIndex();
    public void set_DeviceIndex(Nullable`1<int> value);
    internal bool IsSetDeviceIndex();
    public EnaSrdSpecification get_EnaSrdSpecification();
    public void set_EnaSrdSpecification(EnaSrdSpecification value);
    internal bool IsSetEnaSrdSpecification();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.AttachNetworkInterfaceResponse : AmazonWebServiceResponse {
    private string _attachmentId;
    private Nullable`1<int> _networkCardIndex;
    public string AttachmentId { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
}
public class Amazon.EC2.Model.AttachVerifiedAccessTrustProviderRequest : AmazonEC2Request {
    private string _clientToken;
    private string _verifiedAccessInstanceId;
    private string _verifiedAccessTrustProviderId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessInstanceId { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessTrustProviderId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
    public string get_VerifiedAccessTrustProviderId();
    public void set_VerifiedAccessTrustProviderId(string value);
    internal bool IsSetVerifiedAccessTrustProviderId();
}
public class Amazon.EC2.Model.AttachVerifiedAccessTrustProviderResponse : AmazonWebServiceResponse {
    private VerifiedAccessInstance _verifiedAccessInstance;
    private VerifiedAccessTrustProvider _verifiedAccessTrustProvider;
    public VerifiedAccessInstance VerifiedAccessInstance { get; public set; }
    public VerifiedAccessTrustProvider VerifiedAccessTrustProvider { get; public set; }
    public VerifiedAccessInstance get_VerifiedAccessInstance();
    public void set_VerifiedAccessInstance(VerifiedAccessInstance value);
    internal bool IsSetVerifiedAccessInstance();
    public VerifiedAccessTrustProvider get_VerifiedAccessTrustProvider();
    public void set_VerifiedAccessTrustProvider(VerifiedAccessTrustProvider value);
    internal bool IsSetVerifiedAccessTrustProvider();
}
public class Amazon.EC2.Model.AttachVolumeRequest : AmazonEC2Request {
    private string _device;
    private string _instanceId;
    private string _volumeId;
    [AWSPropertyAttribute]
public string Device { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public AttachVolumeRequest(string volumeId, string instanceId, string device);
    public string get_Device();
    public void set_Device(string value);
    internal bool IsSetDevice();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.AttachVolumeResponse : AmazonWebServiceResponse {
    private VolumeAttachment _volumeAttachment;
    public VolumeAttachment Attachment { get; public set; }
    public VolumeAttachment get_Attachment();
    public void set_Attachment(VolumeAttachment value);
    internal bool IsSetAttachment();
}
public class Amazon.EC2.Model.AttachVpnGatewayRequest : AmazonEC2Request {
    private string _vpcId;
    private string _vpnGatewayId;
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    [AWSPropertyAttribute]
public string VpnGatewayId { get; public set; }
    public AttachVpnGatewayRequest(string vpnGatewayId, string vpcId);
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.AttachVpnGatewayResponse : AmazonWebServiceResponse {
    private VpcAttachment _vpcAttachment;
    public VpcAttachment VpcAttachment { get; public set; }
    public VpcAttachment get_VpcAttachment();
    public void set_VpcAttachment(VpcAttachment value);
    internal bool IsSetVpcAttachment();
}
public class Amazon.EC2.Model.AuthorizationRule : object {
    private Nullable`1<bool> _accessAll;
    private string _clientVpnEndpointId;
    private string _description;
    private string _destinationCidr;
    private string _groupId;
    private ClientVpnAuthorizationRuleStatus _status;
    public Nullable`1<bool> AccessAll { get; public set; }
    public string ClientVpnEndpointId { get; public set; }
    public string Description { get; public set; }
    public string DestinationCidr { get; public set; }
    public string GroupId { get; public set; }
    public ClientVpnAuthorizationRuleStatus Status { get; public set; }
    public Nullable`1<bool> get_AccessAll();
    public void set_AccessAll(Nullable`1<bool> value);
    internal bool IsSetAccessAll();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationCidr();
    public void set_DestinationCidr(string value);
    internal bool IsSetDestinationCidr();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public ClientVpnAuthorizationRuleStatus get_Status();
    public void set_Status(ClientVpnAuthorizationRuleStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.AuthorizeClientVpnIngressRequest : AmazonEC2Request {
    private string _accessGroupId;
    private Nullable`1<bool> _authorizeAllGroups;
    private string _clientToken;
    private string _clientVpnEndpointId;
    private string _description;
    private string _targetNetworkCidr;
    public string AccessGroupId { get; public set; }
    public Nullable`1<bool> AuthorizeAllGroups { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string TargetNetworkCidr { get; public set; }
    public string get_AccessGroupId();
    public void set_AccessGroupId(string value);
    internal bool IsSetAccessGroupId();
    public Nullable`1<bool> get_AuthorizeAllGroups();
    public void set_AuthorizeAllGroups(Nullable`1<bool> value);
    internal bool IsSetAuthorizeAllGroups();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_TargetNetworkCidr();
    public void set_TargetNetworkCidr(string value);
    internal bool IsSetTargetNetworkCidr();
}
public class Amazon.EC2.Model.AuthorizeClientVpnIngressResponse : AmazonWebServiceResponse {
    private ClientVpnAuthorizationRuleStatus _status;
    public ClientVpnAuthorizationRuleStatus Status { get; public set; }
    public ClientVpnAuthorizationRuleStatus get_Status();
    public void set_Status(ClientVpnAuthorizationRuleStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest : AmazonEC2Request {
    private string _groupId;
    private List`1<IpPermission> _ipPermissions;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string GroupId { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupEgressResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    private List`1<SecurityGroupRule> _securityGroupRules;
    public Nullable`1<bool> Return { get; public set; }
    public List`1<SecurityGroupRule> SecurityGroupRules { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
    public List`1<SecurityGroupRule> get_SecurityGroupRules();
    public void set_SecurityGroupRules(List`1<SecurityGroupRule> value);
    internal bool IsSetSecurityGroupRules();
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    private List`1<TagSpecification> _tagSpecifications;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public AuthorizeSecurityGroupIngressRequest(string groupName, List`1<IpPermission> ipPermissions);
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupIngressResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    private List`1<SecurityGroupRule> _securityGroupRules;
    public Nullable`1<bool> Return { get; public set; }
    public List`1<SecurityGroupRule> SecurityGroupRules { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
    public List`1<SecurityGroupRule> get_SecurityGroupRules();
    public void set_SecurityGroupRules(List`1<SecurityGroupRule> value);
    internal bool IsSetSecurityGroupRules();
}
public class Amazon.EC2.Model.AvailabilityZone : object {
    private string _groupName;
    private List`1<AvailabilityZoneMessage> _messages;
    private string _networkBorderGroup;
    private AvailabilityZoneOptInStatus _optInStatus;
    private string _parentZoneId;
    private string _parentZoneName;
    private string _regionName;
    private AvailabilityZoneState _state;
    private string _zoneId;
    private string _zoneName;
    private string _zoneType;
    public string GroupName { get; public set; }
    public List`1<AvailabilityZoneMessage> Messages { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public AvailabilityZoneOptInStatus OptInStatus { get; public set; }
    public string ParentZoneId { get; public set; }
    public string ParentZoneName { get; public set; }
    public string RegionName { get; public set; }
    public AvailabilityZoneState State { get; public set; }
    public string ZoneId { get; public set; }
    public string ZoneName { get; public set; }
    public string ZoneType { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<AvailabilityZoneMessage> get_Messages();
    public void set_Messages(List`1<AvailabilityZoneMessage> value);
    internal bool IsSetMessages();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public AvailabilityZoneOptInStatus get_OptInStatus();
    public void set_OptInStatus(AvailabilityZoneOptInStatus value);
    internal bool IsSetOptInStatus();
    public string get_ParentZoneId();
    public void set_ParentZoneId(string value);
    internal bool IsSetParentZoneId();
    public string get_ParentZoneName();
    public void set_ParentZoneName(string value);
    internal bool IsSetParentZoneName();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public AvailabilityZoneState get_State();
    public void set_State(AvailabilityZoneState value);
    internal bool IsSetState();
    public string get_ZoneId();
    public void set_ZoneId(string value);
    internal bool IsSetZoneId();
    public string get_ZoneName();
    public void set_ZoneName(string value);
    internal bool IsSetZoneName();
    public string get_ZoneType();
    public void set_ZoneType(string value);
    internal bool IsSetZoneType();
}
public class Amazon.EC2.Model.AvailabilityZoneMessage : object {
    private string _message;
    public string Message { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.AvailableCapacity : object {
    private List`1<InstanceCapacity> _availableInstanceCapacity;
    private Nullable`1<int> _availableVCpus;
    public List`1<InstanceCapacity> AvailableInstanceCapacity { get; public set; }
    public Nullable`1<int> AvailableVCpus { get; public set; }
    public List`1<InstanceCapacity> get_AvailableInstanceCapacity();
    public void set_AvailableInstanceCapacity(List`1<InstanceCapacity> value);
    internal bool IsSetAvailableInstanceCapacity();
    public Nullable`1<int> get_AvailableVCpus();
    public void set_AvailableVCpus(Nullable`1<int> value);
    internal bool IsSetAvailableVCpus();
}
public class Amazon.EC2.Model.BaselineEbsBandwidthMbps : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.BaselineEbsBandwidthMbpsRequest : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.BlockDeviceMapping : object {
    private string _deviceName;
    private EbsBlockDevice _ebs;
    private string _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public EbsBlockDevice Ebs { get; public set; }
    public string NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public EbsBlockDevice get_Ebs();
    public void set_Ebs(EbsBlockDevice value);
    internal bool IsSetEbs();
    public string get_NoDevice();
    public void set_NoDevice(string value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.EC2.Model.BundleInstanceRequest : AmazonEC2Request {
    private string _instanceId;
    private Storage _storage;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Storage Storage { get; public set; }
    public BundleInstanceRequest(string instanceId, Storage storage);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Storage get_Storage();
    public void set_Storage(Storage value);
    internal bool IsSetStorage();
}
public class Amazon.EC2.Model.BundleInstanceResponse : AmazonWebServiceResponse {
    private BundleTask _bundleTask;
    public BundleTask BundleTask { get; public set; }
    public BundleTask get_BundleTask();
    public void set_BundleTask(BundleTask value);
    internal bool IsSetBundleTask();
}
public class Amazon.EC2.Model.BundleTask : object {
    private string _bundleId;
    private BundleTaskError _bundleTaskError;
    private string _instanceId;
    private string _progress;
    private Nullable`1<DateTime> _startTime;
    private BundleTaskState _state;
    private Storage _storage;
    private Nullable`1<DateTime> _updateTime;
    public string BundleId { get; public set; }
    public BundleTaskError BundleTaskError { get; public set; }
    public string InstanceId { get; public set; }
    public string Progress { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public BundleTaskState State { get; public set; }
    public Storage Storage { get; public set; }
    public Nullable`1<DateTime> UpdateTime { get; public set; }
    public string get_BundleId();
    public void set_BundleId(string value);
    internal bool IsSetBundleId();
    public BundleTaskError get_BundleTaskError();
    public void set_BundleTaskError(BundleTaskError value);
    internal bool IsSetBundleTaskError();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public BundleTaskState get_State();
    public void set_State(BundleTaskState value);
    internal bool IsSetState();
    public Storage get_Storage();
    public void set_Storage(Storage value);
    internal bool IsSetStorage();
    public Nullable`1<DateTime> get_UpdateTime();
    public void set_UpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdateTime();
}
public class Amazon.EC2.Model.BundleTaskError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.Byoasn : object {
    private string _asn;
    private string _ipamId;
    private AsnState _state;
    private string _statusMessage;
    public string Asn { get; public set; }
    public string IpamId { get; public set; }
    public AsnState State { get; public set; }
    public string StatusMessage { get; public set; }
    public string get_Asn();
    public void set_Asn(string value);
    internal bool IsSetAsn();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public AsnState get_State();
    public void set_State(AsnState value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.ByoipCidr : object {
    private List`1<AsnAssociation> _asnAssociations;
    private string _cidr;
    private string _description;
    private string _networkBorderGroup;
    private ByoipCidrState _state;
    private string _statusMessage;
    public List`1<AsnAssociation> AsnAssociations { get; public set; }
    public string Cidr { get; public set; }
    public string Description { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public ByoipCidrState State { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<AsnAssociation> get_AsnAssociations();
    public void set_AsnAssociations(List`1<AsnAssociation> value);
    internal bool IsSetAsnAssociations();
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public ByoipCidrState get_State();
    public void set_State(ByoipCidrState value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.CancelBundleTaskRequest : AmazonEC2Request {
    private string _bundleId;
    [AWSPropertyAttribute]
public string BundleId { get; public set; }
    public CancelBundleTaskRequest(string bundleId);
    public string get_BundleId();
    public void set_BundleId(string value);
    internal bool IsSetBundleId();
}
public class Amazon.EC2.Model.CancelBundleTaskResponse : AmazonWebServiceResponse {
    private BundleTask _bundleTask;
    public BundleTask BundleTask { get; public set; }
    public BundleTask get_BundleTask();
    public void set_BundleTask(BundleTask value);
    internal bool IsSetBundleTask();
}
public class Amazon.EC2.Model.CancelCapacityReservationFleetError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.CancelCapacityReservationFleetsRequest : AmazonEC2Request {
    private List`1<string> _capacityReservationFleetIds;
    [AWSPropertyAttribute]
public List`1<string> CapacityReservationFleetIds { get; public set; }
    public List`1<string> get_CapacityReservationFleetIds();
    public void set_CapacityReservationFleetIds(List`1<string> value);
    internal bool IsSetCapacityReservationFleetIds();
}
public class Amazon.EC2.Model.CancelCapacityReservationFleetsResponse : AmazonWebServiceResponse {
    private List`1<FailedCapacityReservationFleetCancellationResult> _failedFleetCancellations;
    private List`1<CapacityReservationFleetCancellationState> _successfulFleetCancellations;
    public List`1<FailedCapacityReservationFleetCancellationResult> FailedFleetCancellations { get; public set; }
    public List`1<CapacityReservationFleetCancellationState> SuccessfulFleetCancellations { get; public set; }
    public List`1<FailedCapacityReservationFleetCancellationResult> get_FailedFleetCancellations();
    public void set_FailedFleetCancellations(List`1<FailedCapacityReservationFleetCancellationResult> value);
    internal bool IsSetFailedFleetCancellations();
    public List`1<CapacityReservationFleetCancellationState> get_SuccessfulFleetCancellations();
    public void set_SuccessfulFleetCancellations(List`1<CapacityReservationFleetCancellationState> value);
    internal bool IsSetSuccessfulFleetCancellations();
}
public class Amazon.EC2.Model.CancelCapacityReservationRequest : AmazonEC2Request {
    private string _capacityReservationId;
    [AWSPropertyAttribute]
public string CapacityReservationId { get; public set; }
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
}
public class Amazon.EC2.Model.CancelCapacityReservationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.CancelConversionTaskRequest : AmazonEC2Request {
    private string _conversionTaskId;
    private string _reasonMessage;
    [AWSPropertyAttribute]
public string ConversionTaskId { get; public set; }
    public string ReasonMessage { get; public set; }
    public string get_ConversionTaskId();
    public void set_ConversionTaskId(string value);
    internal bool IsSetConversionTaskId();
    public string get_ReasonMessage();
    public void set_ReasonMessage(string value);
    internal bool IsSetReasonMessage();
}
public class Amazon.EC2.Model.CancelConversionTaskResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CancelExportTaskRequest : AmazonEC2Request {
    private string _exportTaskId;
    [AWSPropertyAttribute]
public string ExportTaskId { get; public set; }
    public string get_ExportTaskId();
    public void set_ExportTaskId(string value);
    internal bool IsSetExportTaskId();
}
public class Amazon.EC2.Model.CancelExportTaskResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CancelImageLaunchPermissionRequest : AmazonEC2Request {
    private string _imageId;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.CancelImageLaunchPermissionResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.CancelImportTaskRequest : AmazonEC2Request {
    private string _cancelReason;
    private string _importTaskId;
    public string CancelReason { get; public set; }
    public string ImportTaskId { get; public set; }
    public string get_CancelReason();
    public void set_CancelReason(string value);
    internal bool IsSetCancelReason();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
}
public class Amazon.EC2.Model.CancelImportTaskResponse : AmazonWebServiceResponse {
    private string _importTaskId;
    private string _previousState;
    private string _state;
    public string ImportTaskId { get; public set; }
    public string PreviousState { get; public set; }
    public string State { get; public set; }
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public string get_PreviousState();
    public void set_PreviousState(string value);
    internal bool IsSetPreviousState();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.CancelledSpotInstanceRequest : object {
    private string _spotInstanceRequestId;
    private CancelSpotInstanceRequestState _state;
    public string SpotInstanceRequestId { get; public set; }
    public CancelSpotInstanceRequestState State { get; public set; }
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
    public CancelSpotInstanceRequestState get_State();
    public void set_State(CancelSpotInstanceRequestState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.CancelReservedInstancesListingRequest : AmazonEC2Request {
    private string _reservedInstancesListingId;
    [AWSPropertyAttribute]
public string ReservedInstancesListingId { get; public set; }
    public string get_ReservedInstancesListingId();
    public void set_ReservedInstancesListingId(string value);
    internal bool IsSetReservedInstancesListingId();
}
public class Amazon.EC2.Model.CancelReservedInstancesListingResponse : AmazonWebServiceResponse {
    private List`1<ReservedInstancesListing> _reservedInstancesListings;
    public List`1<ReservedInstancesListing> ReservedInstancesListings { get; public set; }
    public List`1<ReservedInstancesListing> get_ReservedInstancesListings();
    public void set_ReservedInstancesListings(List`1<ReservedInstancesListing> value);
    internal bool IsSetReservedInstancesListings();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsError : object {
    private CancelBatchErrorCode _code;
    private string _message;
    public CancelBatchErrorCode Code { get; public set; }
    public string Message { get; public set; }
    public CancelBatchErrorCode get_Code();
    public void set_Code(CancelBatchErrorCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsErrorItem : object {
    private CancelSpotFleetRequestsError _error;
    private string _spotFleetRequestId;
    public CancelSpotFleetRequestsError Error { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public CancelSpotFleetRequestsError get_Error();
    public void set_Error(CancelSpotFleetRequestsError value);
    internal bool IsSetError();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsRequest : AmazonEC2Request {
    private List`1<string> _spotFleetRequestIds;
    private Nullable`1<bool> _terminateInstances;
    [AWSPropertyAttribute]
public List`1<string> SpotFleetRequestIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> TerminateInstances { get; public set; }
    public List`1<string> get_SpotFleetRequestIds();
    public void set_SpotFleetRequestIds(List`1<string> value);
    internal bool IsSetSpotFleetRequestIds();
    public Nullable`1<bool> get_TerminateInstances();
    public void set_TerminateInstances(Nullable`1<bool> value);
    internal bool IsSetTerminateInstances();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsResponse : AmazonWebServiceResponse {
    private List`1<CancelSpotFleetRequestsSuccessItem> _successfulFleetRequests;
    private List`1<CancelSpotFleetRequestsErrorItem> _unsuccessfulFleetRequests;
    public List`1<CancelSpotFleetRequestsSuccessItem> SuccessfulFleetRequests { get; public set; }
    public List`1<CancelSpotFleetRequestsErrorItem> UnsuccessfulFleetRequests { get; public set; }
    public List`1<CancelSpotFleetRequestsSuccessItem> get_SuccessfulFleetRequests();
    public void set_SuccessfulFleetRequests(List`1<CancelSpotFleetRequestsSuccessItem> value);
    internal bool IsSetSuccessfulFleetRequests();
    public List`1<CancelSpotFleetRequestsErrorItem> get_UnsuccessfulFleetRequests();
    public void set_UnsuccessfulFleetRequests(List`1<CancelSpotFleetRequestsErrorItem> value);
    internal bool IsSetUnsuccessfulFleetRequests();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsSuccessItem : object {
    private BatchState _currentSpotFleetRequestState;
    private BatchState _previousSpotFleetRequestState;
    private string _spotFleetRequestId;
    public BatchState CurrentSpotFleetRequestState { get; public set; }
    public BatchState PreviousSpotFleetRequestState { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public BatchState get_CurrentSpotFleetRequestState();
    public void set_CurrentSpotFleetRequestState(BatchState value);
    internal bool IsSetCurrentSpotFleetRequestState();
    public BatchState get_PreviousSpotFleetRequestState();
    public void set_PreviousSpotFleetRequestState(BatchState value);
    internal bool IsSetPreviousSpotFleetRequestState();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.CancelSpotInstanceRequestsRequest : AmazonEC2Request {
    private List`1<string> _spotInstanceRequestIds;
    [AWSPropertyAttribute]
public List`1<string> SpotInstanceRequestIds { get; public set; }
    public CancelSpotInstanceRequestsRequest(List`1<string> spotInstanceRequestIds);
    public List`1<string> get_SpotInstanceRequestIds();
    public void set_SpotInstanceRequestIds(List`1<string> value);
    internal bool IsSetSpotInstanceRequestIds();
}
public class Amazon.EC2.Model.CancelSpotInstanceRequestsResponse : AmazonWebServiceResponse {
    private List`1<CancelledSpotInstanceRequest> _cancelledSpotInstanceRequests;
    public List`1<CancelledSpotInstanceRequest> CancelledSpotInstanceRequests { get; public set; }
    public List`1<CancelledSpotInstanceRequest> get_CancelledSpotInstanceRequests();
    public void set_CancelledSpotInstanceRequests(List`1<CancelledSpotInstanceRequest> value);
    internal bool IsSetCancelledSpotInstanceRequests();
}
public class Amazon.EC2.Model.CapacityAllocation : object {
    private AllocationType _allocationType;
    private Nullable`1<int> _count;
    public AllocationType AllocationType { get; public set; }
    public Nullable`1<int> Count { get; public set; }
    public AllocationType get_AllocationType();
    public void set_AllocationType(AllocationType value);
    internal bool IsSetAllocationType();
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
}
public class Amazon.EC2.Model.CapacityBlockOffering : object {
    private string _availabilityZone;
    private Nullable`1<int> _capacityBlockDurationHours;
    private string _capacityBlockOfferingId;
    private string _currencyCode;
    private Nullable`1<DateTime> _endDate;
    private Nullable`1<int> _instanceCount;
    private string _instanceType;
    private Nullable`1<DateTime> _startDate;
    private CapacityReservationTenancy _tenancy;
    private string _upfrontFee;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<int> CapacityBlockDurationHours { get; public set; }
    public string CapacityBlockOfferingId { get; public set; }
    public string CurrencyCode { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public Nullable`1<int> InstanceCount { get; public set; }
    public string InstanceType { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public CapacityReservationTenancy Tenancy { get; public set; }
    public string UpfrontFee { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<int> get_CapacityBlockDurationHours();
    public void set_CapacityBlockDurationHours(Nullable`1<int> value);
    internal bool IsSetCapacityBlockDurationHours();
    public string get_CapacityBlockOfferingId();
    public void set_CapacityBlockOfferingId(string value);
    internal bool IsSetCapacityBlockOfferingId();
    public string get_CurrencyCode();
    public void set_CurrencyCode(string value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public CapacityReservationTenancy get_Tenancy();
    public void set_Tenancy(CapacityReservationTenancy value);
    internal bool IsSetTenancy();
    public string get_UpfrontFee();
    public void set_UpfrontFee(string value);
    internal bool IsSetUpfrontFee();
}
public class Amazon.EC2.Model.CapacityReservation : object {
    private string _availabilityZone;
    private string _availabilityZoneId;
    private Nullable`1<int> _availableInstanceCount;
    private List`1<CapacityAllocation> _capacityAllocations;
    private string _capacityReservationArn;
    private string _capacityReservationFleetId;
    private string _capacityReservationId;
    private Nullable`1<DateTime> _createDate;
    private Nullable`1<bool> _ebsOptimized;
    private Nullable`1<DateTime> _endDate;
    private EndDateType _endDateType;
    private Nullable`1<bool> _ephemeralStorage;
    private InstanceMatchCriteria _instanceMatchCriteria;
    private CapacityReservationInstancePlatform _instancePlatform;
    private string _instanceType;
    private string _outpostArn;
    private string _ownerId;
    private string _placementGroupArn;
    private CapacityReservationType _reservationType;
    private Nullable`1<DateTime> _startDate;
    private CapacityReservationState _state;
    private List`1<Tag> _tags;
    private CapacityReservationTenancy _tenancy;
    private Nullable`1<int> _totalInstanceCount;
    public string AvailabilityZone { get; public set; }
    public string AvailabilityZoneId { get; public set; }
    public Nullable`1<int> AvailableInstanceCount { get; public set; }
    public List`1<CapacityAllocation> CapacityAllocations { get; public set; }
    public string CapacityReservationArn { get; public set; }
    public string CapacityReservationFleetId { get; public set; }
    public string CapacityReservationId { get; public set; }
    public Nullable`1<DateTime> CreateDate { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public EndDateType EndDateType { get; public set; }
    public Nullable`1<bool> EphemeralStorage { get; public set; }
    public InstanceMatchCriteria InstanceMatchCriteria { get; public set; }
    public CapacityReservationInstancePlatform InstancePlatform { get; public set; }
    public string InstanceType { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public string PlacementGroupArn { get; public set; }
    public CapacityReservationType ReservationType { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public CapacityReservationState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public CapacityReservationTenancy Tenancy { get; public set; }
    public Nullable`1<int> TotalInstanceCount { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public Nullable`1<int> get_AvailableInstanceCount();
    public void set_AvailableInstanceCount(Nullable`1<int> value);
    internal bool IsSetAvailableInstanceCount();
    public List`1<CapacityAllocation> get_CapacityAllocations();
    public void set_CapacityAllocations(List`1<CapacityAllocation> value);
    internal bool IsSetCapacityAllocations();
    public string get_CapacityReservationArn();
    public void set_CapacityReservationArn(string value);
    internal bool IsSetCapacityReservationArn();
    public string get_CapacityReservationFleetId();
    public void set_CapacityReservationFleetId(string value);
    internal bool IsSetCapacityReservationFleetId();
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public Nullable`1<DateTime> get_CreateDate();
    public void set_CreateDate(Nullable`1<DateTime> value);
    internal bool IsSetCreateDate();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public EndDateType get_EndDateType();
    public void set_EndDateType(EndDateType value);
    internal bool IsSetEndDateType();
    public Nullable`1<bool> get_EphemeralStorage();
    public void set_EphemeralStorage(Nullable`1<bool> value);
    internal bool IsSetEphemeralStorage();
    public InstanceMatchCriteria get_InstanceMatchCriteria();
    public void set_InstanceMatchCriteria(InstanceMatchCriteria value);
    internal bool IsSetInstanceMatchCriteria();
    public CapacityReservationInstancePlatform get_InstancePlatform();
    public void set_InstancePlatform(CapacityReservationInstancePlatform value);
    internal bool IsSetInstancePlatform();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PlacementGroupArn();
    public void set_PlacementGroupArn(string value);
    internal bool IsSetPlacementGroupArn();
    public CapacityReservationType get_ReservationType();
    public void set_ReservationType(CapacityReservationType value);
    internal bool IsSetReservationType();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public CapacityReservationState get_State();
    public void set_State(CapacityReservationState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public CapacityReservationTenancy get_Tenancy();
    public void set_Tenancy(CapacityReservationTenancy value);
    internal bool IsSetTenancy();
    public Nullable`1<int> get_TotalInstanceCount();
    public void set_TotalInstanceCount(Nullable`1<int> value);
    internal bool IsSetTotalInstanceCount();
}
public class Amazon.EC2.Model.CapacityReservationFleet : object {
    private string _allocationStrategy;
    private string _capacityReservationFleetArn;
    private string _capacityReservationFleetId;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<DateTime> _endDate;
    private FleetInstanceMatchCriteria _instanceMatchCriteria;
    private List`1<FleetCapacityReservation> _instanceTypeSpecifications;
    private CapacityReservationFleetState _state;
    private List`1<Tag> _tags;
    private FleetCapacityReservationTenancy _tenancy;
    private Nullable`1<double> _totalFulfilledCapacity;
    private Nullable`1<int> _totalTargetCapacity;
    public string AllocationStrategy { get; public set; }
    public string CapacityReservationFleetArn { get; public set; }
    public string CapacityReservationFleetId { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public FleetInstanceMatchCriteria InstanceMatchCriteria { get; public set; }
    public List`1<FleetCapacityReservation> InstanceTypeSpecifications { get; public set; }
    public CapacityReservationFleetState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public FleetCapacityReservationTenancy Tenancy { get; public set; }
    public Nullable`1<double> TotalFulfilledCapacity { get; public set; }
    public Nullable`1<int> TotalTargetCapacity { get; public set; }
    public string get_AllocationStrategy();
    public void set_AllocationStrategy(string value);
    internal bool IsSetAllocationStrategy();
    public string get_CapacityReservationFleetArn();
    public void set_CapacityReservationFleetArn(string value);
    internal bool IsSetCapacityReservationFleetArn();
    public string get_CapacityReservationFleetId();
    public void set_CapacityReservationFleetId(string value);
    internal bool IsSetCapacityReservationFleetId();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public FleetInstanceMatchCriteria get_InstanceMatchCriteria();
    public void set_InstanceMatchCriteria(FleetInstanceMatchCriteria value);
    internal bool IsSetInstanceMatchCriteria();
    public List`1<FleetCapacityReservation> get_InstanceTypeSpecifications();
    public void set_InstanceTypeSpecifications(List`1<FleetCapacityReservation> value);
    internal bool IsSetInstanceTypeSpecifications();
    public CapacityReservationFleetState get_State();
    public void set_State(CapacityReservationFleetState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public FleetCapacityReservationTenancy get_Tenancy();
    public void set_Tenancy(FleetCapacityReservationTenancy value);
    internal bool IsSetTenancy();
    public Nullable`1<double> get_TotalFulfilledCapacity();
    public void set_TotalFulfilledCapacity(Nullable`1<double> value);
    internal bool IsSetTotalFulfilledCapacity();
    public Nullable`1<int> get_TotalTargetCapacity();
    public void set_TotalTargetCapacity(Nullable`1<int> value);
    internal bool IsSetTotalTargetCapacity();
}
public class Amazon.EC2.Model.CapacityReservationFleetCancellationState : object {
    private string _capacityReservationFleetId;
    private CapacityReservationFleetState _currentFleetState;
    private CapacityReservationFleetState _previousFleetState;
    public string CapacityReservationFleetId { get; public set; }
    public CapacityReservationFleetState CurrentFleetState { get; public set; }
    public CapacityReservationFleetState PreviousFleetState { get; public set; }
    public string get_CapacityReservationFleetId();
    public void set_CapacityReservationFleetId(string value);
    internal bool IsSetCapacityReservationFleetId();
    public CapacityReservationFleetState get_CurrentFleetState();
    public void set_CurrentFleetState(CapacityReservationFleetState value);
    internal bool IsSetCurrentFleetState();
    public CapacityReservationFleetState get_PreviousFleetState();
    public void set_PreviousFleetState(CapacityReservationFleetState value);
    internal bool IsSetPreviousFleetState();
}
public class Amazon.EC2.Model.CapacityReservationGroup : object {
    private string _groupArn;
    private string _ownerId;
    public string GroupArn { get; public set; }
    public string OwnerId { get; public set; }
    public string get_GroupArn();
    public void set_GroupArn(string value);
    internal bool IsSetGroupArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
}
public class Amazon.EC2.Model.CapacityReservationOptions : object {
    private FleetCapacityReservationUsageStrategy _usageStrategy;
    public FleetCapacityReservationUsageStrategy UsageStrategy { get; public set; }
    public FleetCapacityReservationUsageStrategy get_UsageStrategy();
    public void set_UsageStrategy(FleetCapacityReservationUsageStrategy value);
    internal bool IsSetUsageStrategy();
}
public class Amazon.EC2.Model.CapacityReservationOptionsRequest : object {
    private FleetCapacityReservationUsageStrategy _usageStrategy;
    public FleetCapacityReservationUsageStrategy UsageStrategy { get; public set; }
    public FleetCapacityReservationUsageStrategy get_UsageStrategy();
    public void set_UsageStrategy(FleetCapacityReservationUsageStrategy value);
    internal bool IsSetUsageStrategy();
}
public class Amazon.EC2.Model.CapacityReservationSpecification : object {
    private CapacityReservationPreference _capacityReservationPreference;
    private CapacityReservationTarget _capacityReservationTarget;
    public CapacityReservationPreference CapacityReservationPreference { get; public set; }
    public CapacityReservationTarget CapacityReservationTarget { get; public set; }
    public CapacityReservationPreference get_CapacityReservationPreference();
    public void set_CapacityReservationPreference(CapacityReservationPreference value);
    internal bool IsSetCapacityReservationPreference();
    public CapacityReservationTarget get_CapacityReservationTarget();
    public void set_CapacityReservationTarget(CapacityReservationTarget value);
    internal bool IsSetCapacityReservationTarget();
}
public class Amazon.EC2.Model.CapacityReservationSpecificationResponse : object {
    private CapacityReservationPreference _capacityReservationPreference;
    private CapacityReservationTargetResponse _capacityReservationTarget;
    public CapacityReservationPreference CapacityReservationPreference { get; public set; }
    public CapacityReservationTargetResponse CapacityReservationTarget { get; public set; }
    public CapacityReservationPreference get_CapacityReservationPreference();
    public void set_CapacityReservationPreference(CapacityReservationPreference value);
    internal bool IsSetCapacityReservationPreference();
    public CapacityReservationTargetResponse get_CapacityReservationTarget();
    public void set_CapacityReservationTarget(CapacityReservationTargetResponse value);
    internal bool IsSetCapacityReservationTarget();
}
public class Amazon.EC2.Model.CapacityReservationTarget : object {
    private string _capacityReservationId;
    private string _capacityReservationResourceGroupArn;
    public string CapacityReservationId { get; public set; }
    public string CapacityReservationResourceGroupArn { get; public set; }
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public string get_CapacityReservationResourceGroupArn();
    public void set_CapacityReservationResourceGroupArn(string value);
    internal bool IsSetCapacityReservationResourceGroupArn();
}
public class Amazon.EC2.Model.CapacityReservationTargetResponse : object {
    private string _capacityReservationId;
    private string _capacityReservationResourceGroupArn;
    public string CapacityReservationId { get; public set; }
    public string CapacityReservationResourceGroupArn { get; public set; }
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public string get_CapacityReservationResourceGroupArn();
    public void set_CapacityReservationResourceGroupArn(string value);
    internal bool IsSetCapacityReservationResourceGroupArn();
}
public class Amazon.EC2.Model.CarrierGateway : object {
    private string _carrierGatewayId;
    private string _ownerId;
    private CarrierGatewayState _state;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string CarrierGatewayId { get; public set; }
    public string OwnerId { get; public set; }
    public CarrierGatewayState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_CarrierGatewayId();
    public void set_CarrierGatewayId(string value);
    internal bool IsSetCarrierGatewayId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public CarrierGatewayState get_State();
    public void set_State(CarrierGatewayState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CertificateAuthentication : object {
    private string _clientRootCertificateChain;
    public string ClientRootCertificateChain { get; public set; }
    public string get_ClientRootCertificateChain();
    public void set_ClientRootCertificateChain(string value);
    internal bool IsSetClientRootCertificateChain();
}
public class Amazon.EC2.Model.CertificateAuthenticationRequest : object {
    private string _clientRootCertificateChainArn;
    public string ClientRootCertificateChainArn { get; public set; }
    public string get_ClientRootCertificateChainArn();
    public void set_ClientRootCertificateChainArn(string value);
    internal bool IsSetClientRootCertificateChainArn();
}
public class Amazon.EC2.Model.CidrAuthorizationContext : object {
    private string _message;
    private string _signature;
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public string Signature { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Signature();
    public void set_Signature(string value);
    internal bool IsSetSignature();
}
public class Amazon.EC2.Model.CidrBlock : object {
    private string _cidr;
    public string Cidr { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
}
public class Amazon.EC2.Model.ClassicLinkDnsSupport : object {
    private Nullable`1<bool> _classicLinkDnsSupported;
    private string _vpcId;
    public Nullable`1<bool> ClassicLinkDnsSupported { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_ClassicLinkDnsSupported();
    public void set_ClassicLinkDnsSupported(Nullable`1<bool> value);
    internal bool IsSetClassicLinkDnsSupported();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.ClassicLinkInstance : object {
    private List`1<GroupIdentifier> _groups;
    private string _instanceId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string InstanceId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.ClassicLoadBalancer : object {
    private string _name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.ClassicLoadBalancersConfig : object {
    private List`1<ClassicLoadBalancer> _classicLoadBalancers;
    [AWSPropertyAttribute]
public List`1<ClassicLoadBalancer> ClassicLoadBalancers { get; public set; }
    public List`1<ClassicLoadBalancer> get_ClassicLoadBalancers();
    public void set_ClassicLoadBalancers(List`1<ClassicLoadBalancer> value);
    internal bool IsSetClassicLoadBalancers();
}
public class Amazon.EC2.Model.ClientCertificateRevocationListStatus : object {
    private ClientCertificateRevocationListStatusCode _code;
    private string _message;
    public ClientCertificateRevocationListStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public ClientCertificateRevocationListStatusCode get_Code();
    public void set_Code(ClientCertificateRevocationListStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.ClientConnectOptions : object {
    private Nullable`1<bool> _enabled;
    private string _lambdaFunctionArn;
    public Nullable`1<bool> Enabled { get; public set; }
    public string LambdaFunctionArn { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_LambdaFunctionArn();
    public void set_LambdaFunctionArn(string value);
    internal bool IsSetLambdaFunctionArn();
}
public class Amazon.EC2.Model.ClientConnectResponseOptions : object {
    private Nullable`1<bool> _enabled;
    private string _lambdaFunctionArn;
    private ClientVpnEndpointAttributeStatus _status;
    public Nullable`1<bool> Enabled { get; public set; }
    public string LambdaFunctionArn { get; public set; }
    public ClientVpnEndpointAttributeStatus Status { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_LambdaFunctionArn();
    public void set_LambdaFunctionArn(string value);
    internal bool IsSetLambdaFunctionArn();
    public ClientVpnEndpointAttributeStatus get_Status();
    public void set_Status(ClientVpnEndpointAttributeStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.ClientData : object {
    private string _comment;
    private Nullable`1<DateTime> _uploadEndUtc;
    private Nullable`1<double> _uploadSize;
    private Nullable`1<DateTime> _uploadStartUtc;
    private Nullable`1<DateTime> _uploadEnd;
    private Nullable`1<DateTime> _uploadStart;
    public string Comment { get; public set; }
    public Nullable`1<DateTime> UploadEndUtc { get; public set; }
    public Nullable`1<double> UploadSize { get; public set; }
    public Nullable`1<DateTime> UploadStartUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use UploadEndUtc instead. Setting either UploadEnd or UploadEndUtc results in both UploadEnd and UploadEndUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. UploadEnd is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> UploadEnd { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use UploadStartUtc instead. Setting either UploadStart or UploadStartUtc results in both UploadStart and UploadStartUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. UploadStart is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> UploadStart { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public Nullable`1<DateTime> get_UploadEndUtc();
    public void set_UploadEndUtc(Nullable`1<DateTime> value);
    internal bool IsSetUploadEndUtc();
    public Nullable`1<double> get_UploadSize();
    public void set_UploadSize(Nullable`1<double> value);
    internal bool IsSetUploadSize();
    public Nullable`1<DateTime> get_UploadStartUtc();
    public void set_UploadStartUtc(Nullable`1<DateTime> value);
    internal bool IsSetUploadStartUtc();
    public Nullable`1<DateTime> get_UploadEnd();
    public void set_UploadEnd(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_UploadStart();
    public void set_UploadStart(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.ClientLoginBannerOptions : object {
    private string _bannerText;
    private Nullable`1<bool> _enabled;
    public string BannerText { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string get_BannerText();
    public void set_BannerText(string value);
    internal bool IsSetBannerText();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.ClientLoginBannerResponseOptions : object {
    private string _bannerText;
    private Nullable`1<bool> _enabled;
    public string BannerText { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string get_BannerText();
    public void set_BannerText(string value);
    internal bool IsSetBannerText();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.ClientVpnAuthentication : object {
    private DirectoryServiceAuthentication _activeDirectory;
    private FederatedAuthentication _federatedAuthentication;
    private CertificateAuthentication _mutualAuthentication;
    private ClientVpnAuthenticationType _type;
    public DirectoryServiceAuthentication ActiveDirectory { get; public set; }
    public FederatedAuthentication FederatedAuthentication { get; public set; }
    public CertificateAuthentication MutualAuthentication { get; public set; }
    public ClientVpnAuthenticationType Type { get; public set; }
    public DirectoryServiceAuthentication get_ActiveDirectory();
    public void set_ActiveDirectory(DirectoryServiceAuthentication value);
    internal bool IsSetActiveDirectory();
    public FederatedAuthentication get_FederatedAuthentication();
    public void set_FederatedAuthentication(FederatedAuthentication value);
    internal bool IsSetFederatedAuthentication();
    public CertificateAuthentication get_MutualAuthentication();
    public void set_MutualAuthentication(CertificateAuthentication value);
    internal bool IsSetMutualAuthentication();
    public ClientVpnAuthenticationType get_Type();
    public void set_Type(ClientVpnAuthenticationType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.ClientVpnAuthenticationRequest : object {
    private DirectoryServiceAuthenticationRequest _activeDirectory;
    private FederatedAuthenticationRequest _federatedAuthentication;
    private CertificateAuthenticationRequest _mutualAuthentication;
    private ClientVpnAuthenticationType _type;
    public DirectoryServiceAuthenticationRequest ActiveDirectory { get; public set; }
    public FederatedAuthenticationRequest FederatedAuthentication { get; public set; }
    public CertificateAuthenticationRequest MutualAuthentication { get; public set; }
    public ClientVpnAuthenticationType Type { get; public set; }
    public DirectoryServiceAuthenticationRequest get_ActiveDirectory();
    public void set_ActiveDirectory(DirectoryServiceAuthenticationRequest value);
    internal bool IsSetActiveDirectory();
    public FederatedAuthenticationRequest get_FederatedAuthentication();
    public void set_FederatedAuthentication(FederatedAuthenticationRequest value);
    internal bool IsSetFederatedAuthentication();
    public CertificateAuthenticationRequest get_MutualAuthentication();
    public void set_MutualAuthentication(CertificateAuthenticationRequest value);
    internal bool IsSetMutualAuthentication();
    public ClientVpnAuthenticationType get_Type();
    public void set_Type(ClientVpnAuthenticationType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.ClientVpnAuthorizationRuleStatus : object {
    private ClientVpnAuthorizationRuleStatusCode _code;
    private string _message;
    public ClientVpnAuthorizationRuleStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public ClientVpnAuthorizationRuleStatusCode get_Code();
    public void set_Code(ClientVpnAuthorizationRuleStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.ClientVpnConnection : object {
    private string _clientIp;
    private string _clientVpnEndpointId;
    private string _commonName;
    private string _connectionEndTime;
    private string _connectionEstablishedTime;
    private string _connectionId;
    private string _egressBytes;
    private string _egressPackets;
    private string _ingressBytes;
    private string _ingressPackets;
    private List`1<string> _postureComplianceStatuses;
    private ClientVpnConnectionStatus _status;
    private string _timestamp;
    private string _username;
    public string ClientIp { get; public set; }
    public string ClientVpnEndpointId { get; public set; }
    public string CommonName { get; public set; }
    public string ConnectionEndTime { get; public set; }
    public string ConnectionEstablishedTime { get; public set; }
    public string ConnectionId { get; public set; }
    public string EgressBytes { get; public set; }
    public string EgressPackets { get; public set; }
    public string IngressBytes { get; public set; }
    public string IngressPackets { get; public set; }
    public List`1<string> PostureComplianceStatuses { get; public set; }
    public ClientVpnConnectionStatus Status { get; public set; }
    public string Timestamp { get; public set; }
    public string Username { get; public set; }
    public string get_ClientIp();
    public void set_ClientIp(string value);
    internal bool IsSetClientIp();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_CommonName();
    public void set_CommonName(string value);
    internal bool IsSetCommonName();
    public string get_ConnectionEndTime();
    public void set_ConnectionEndTime(string value);
    internal bool IsSetConnectionEndTime();
    public string get_ConnectionEstablishedTime();
    public void set_ConnectionEstablishedTime(string value);
    internal bool IsSetConnectionEstablishedTime();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public string get_EgressBytes();
    public void set_EgressBytes(string value);
    internal bool IsSetEgressBytes();
    public string get_EgressPackets();
    public void set_EgressPackets(string value);
    internal bool IsSetEgressPackets();
    public string get_IngressBytes();
    public void set_IngressBytes(string value);
    internal bool IsSetIngressBytes();
    public string get_IngressPackets();
    public void set_IngressPackets(string value);
    internal bool IsSetIngressPackets();
    public List`1<string> get_PostureComplianceStatuses();
    public void set_PostureComplianceStatuses(List`1<string> value);
    internal bool IsSetPostureComplianceStatuses();
    public ClientVpnConnectionStatus get_Status();
    public void set_Status(ClientVpnConnectionStatus value);
    internal bool IsSetStatus();
    public string get_Timestamp();
    public void set_Timestamp(string value);
    internal bool IsSetTimestamp();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.EC2.Model.ClientVpnConnectionStatus : object {
    private ClientVpnConnectionStatusCode _code;
    private string _message;
    public ClientVpnConnectionStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public ClientVpnConnectionStatusCode get_Code();
    public void set_Code(ClientVpnConnectionStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.ClientVpnEndpoint : object {
    private List`1<AssociatedTargetNetwork> _associatedTargetNetworks;
    private List`1<ClientVpnAuthentication> _authenticationOptions;
    private string _clientCidrBlock;
    private ClientConnectResponseOptions _clientConnectOptions;
    private ClientLoginBannerResponseOptions _clientLoginBannerOptions;
    private string _clientVpnEndpointId;
    private ConnectionLogResponseOptions _connectionLogOptions;
    private string _creationTime;
    private string _deletionTime;
    private string _description;
    private string _dnsName;
    private List`1<string> _dnsServers;
    private List`1<string> _securityGroupIds;
    private string _selfServicePortalUrl;
    private string _serverCertificateArn;
    private Nullable`1<int> _sessionTimeoutHours;
    private Nullable`1<bool> _splitTunnel;
    private ClientVpnEndpointStatus _status;
    private List`1<Tag> _tags;
    private TransportProtocol _transportProtocol;
    private string _vpcId;
    private Nullable`1<int> _vpnPort;
    private VpnProtocol _vpnProtocol;
    [ObsoleteAttribute("This property is deprecated. To view the target networks associated with a Client VPN endpoint, call DescribeClientVpnTargetNetworks and inspect the clientVpnTargetNetworks response element.")]
public List`1<AssociatedTargetNetwork> AssociatedTargetNetworks { get; public set; }
    public List`1<ClientVpnAuthentication> AuthenticationOptions { get; public set; }
    public string ClientCidrBlock { get; public set; }
    public ClientConnectResponseOptions ClientConnectOptions { get; public set; }
    public ClientLoginBannerResponseOptions ClientLoginBannerOptions { get; public set; }
    public string ClientVpnEndpointId { get; public set; }
    public ConnectionLogResponseOptions ConnectionLogOptions { get; public set; }
    public string CreationTime { get; public set; }
    public string DeletionTime { get; public set; }
    public string Description { get; public set; }
    public string DnsName { get; public set; }
    public List`1<string> DnsServers { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public string SelfServicePortalUrl { get; public set; }
    public string ServerCertificateArn { get; public set; }
    public Nullable`1<int> SessionTimeoutHours { get; public set; }
    public Nullable`1<bool> SplitTunnel { get; public set; }
    public ClientVpnEndpointStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public TransportProtocol TransportProtocol { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> VpnPort { get; public set; }
    public VpnProtocol VpnProtocol { get; public set; }
    public List`1<AssociatedTargetNetwork> get_AssociatedTargetNetworks();
    public void set_AssociatedTargetNetworks(List`1<AssociatedTargetNetwork> value);
    internal bool IsSetAssociatedTargetNetworks();
    public List`1<ClientVpnAuthentication> get_AuthenticationOptions();
    public void set_AuthenticationOptions(List`1<ClientVpnAuthentication> value);
    internal bool IsSetAuthenticationOptions();
    public string get_ClientCidrBlock();
    public void set_ClientCidrBlock(string value);
    internal bool IsSetClientCidrBlock();
    public ClientConnectResponseOptions get_ClientConnectOptions();
    public void set_ClientConnectOptions(ClientConnectResponseOptions value);
    internal bool IsSetClientConnectOptions();
    public ClientLoginBannerResponseOptions get_ClientLoginBannerOptions();
    public void set_ClientLoginBannerOptions(ClientLoginBannerResponseOptions value);
    internal bool IsSetClientLoginBannerOptions();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public ConnectionLogResponseOptions get_ConnectionLogOptions();
    public void set_ConnectionLogOptions(ConnectionLogResponseOptions value);
    internal bool IsSetConnectionLogOptions();
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_DeletionTime();
    public void set_DeletionTime(string value);
    internal bool IsSetDeletionTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DnsName();
    public void set_DnsName(string value);
    internal bool IsSetDnsName();
    public List`1<string> get_DnsServers();
    public void set_DnsServers(List`1<string> value);
    internal bool IsSetDnsServers();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_SelfServicePortalUrl();
    public void set_SelfServicePortalUrl(string value);
    internal bool IsSetSelfServicePortalUrl();
    public string get_ServerCertificateArn();
    public void set_ServerCertificateArn(string value);
    internal bool IsSetServerCertificateArn();
    public Nullable`1<int> get_SessionTimeoutHours();
    public void set_SessionTimeoutHours(Nullable`1<int> value);
    internal bool IsSetSessionTimeoutHours();
    public Nullable`1<bool> get_SplitTunnel();
    public void set_SplitTunnel(Nullable`1<bool> value);
    internal bool IsSetSplitTunnel();
    public ClientVpnEndpointStatus get_Status();
    public void set_Status(ClientVpnEndpointStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TransportProtocol get_TransportProtocol();
    public void set_TransportProtocol(TransportProtocol value);
    internal bool IsSetTransportProtocol();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public Nullable`1<int> get_VpnPort();
    public void set_VpnPort(Nullable`1<int> value);
    internal bool IsSetVpnPort();
    public VpnProtocol get_VpnProtocol();
    public void set_VpnProtocol(VpnProtocol value);
    internal bool IsSetVpnProtocol();
}
public class Amazon.EC2.Model.ClientVpnEndpointAttributeStatus : object {
    private ClientVpnEndpointAttributeStatusCode _code;
    private string _message;
    public ClientVpnEndpointAttributeStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public ClientVpnEndpointAttributeStatusCode get_Code();
    public void set_Code(ClientVpnEndpointAttributeStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.ClientVpnEndpointStatus : object {
    private ClientVpnEndpointStatusCode _code;
    private string _message;
    public ClientVpnEndpointStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public ClientVpnEndpointStatusCode get_Code();
    public void set_Code(ClientVpnEndpointStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.ClientVpnRoute : object {
    private string _clientVpnEndpointId;
    private string _description;
    private string _destinationCidr;
    private string _origin;
    private ClientVpnRouteStatus _status;
    private string _targetSubnet;
    private string _type;
    public string ClientVpnEndpointId { get; public set; }
    public string Description { get; public set; }
    public string DestinationCidr { get; public set; }
    public string Origin { get; public set; }
    public ClientVpnRouteStatus Status { get; public set; }
    public string TargetSubnet { get; public set; }
    public string Type { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationCidr();
    public void set_DestinationCidr(string value);
    internal bool IsSetDestinationCidr();
    public string get_Origin();
    public void set_Origin(string value);
    internal bool IsSetOrigin();
    public ClientVpnRouteStatus get_Status();
    public void set_Status(ClientVpnRouteStatus value);
    internal bool IsSetStatus();
    public string get_TargetSubnet();
    public void set_TargetSubnet(string value);
    internal bool IsSetTargetSubnet();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.ClientVpnRouteStatus : object {
    private ClientVpnRouteStatusCode _code;
    private string _message;
    public ClientVpnRouteStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public ClientVpnRouteStatusCode get_Code();
    public void set_Code(ClientVpnRouteStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.CloudWatchLogOptions : object {
    private Nullable`1<bool> _logEnabled;
    private string _logGroupArn;
    private string _logOutputFormat;
    public Nullable`1<bool> LogEnabled { get; public set; }
    public string LogGroupArn { get; public set; }
    public string LogOutputFormat { get; public set; }
    public Nullable`1<bool> get_LogEnabled();
    public void set_LogEnabled(Nullable`1<bool> value);
    internal bool IsSetLogEnabled();
    public string get_LogGroupArn();
    public void set_LogGroupArn(string value);
    internal bool IsSetLogGroupArn();
    public string get_LogOutputFormat();
    public void set_LogOutputFormat(string value);
    internal bool IsSetLogOutputFormat();
}
public class Amazon.EC2.Model.CloudWatchLogOptionsSpecification : object {
    private Nullable`1<bool> _logEnabled;
    private string _logGroupArn;
    private string _logOutputFormat;
    public Nullable`1<bool> LogEnabled { get; public set; }
    public string LogGroupArn { get; public set; }
    public string LogOutputFormat { get; public set; }
    public Nullable`1<bool> get_LogEnabled();
    public void set_LogEnabled(Nullable`1<bool> value);
    internal bool IsSetLogEnabled();
    public string get_LogGroupArn();
    public void set_LogGroupArn(string value);
    internal bool IsSetLogGroupArn();
    public string get_LogOutputFormat();
    public void set_LogOutputFormat(string value);
    internal bool IsSetLogOutputFormat();
}
public class Amazon.EC2.Model.CoipAddressUsage : object {
    private string _allocationId;
    private string _awsAccountId;
    private string _awsService;
    private string _coIp;
    public string AllocationId { get; public set; }
    public string AwsAccountId { get; public set; }
    public string AwsService { get; public set; }
    public string CoIp { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_AwsAccountId();
    public void set_AwsAccountId(string value);
    internal bool IsSetAwsAccountId();
    public string get_AwsService();
    public void set_AwsService(string value);
    internal bool IsSetAwsService();
    public string get_CoIp();
    public void set_CoIp(string value);
    internal bool IsSetCoIp();
}
public class Amazon.EC2.Model.CoipCidr : object {
    private string _cidr;
    private string _coipPoolId;
    private string _localGatewayRouteTableId;
    public string Cidr { get; public set; }
    public string CoipPoolId { get; public set; }
    public string LocalGatewayRouteTableId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_CoipPoolId();
    public void set_CoipPoolId(string value);
    internal bool IsSetCoipPoolId();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
}
public class Amazon.EC2.Model.CoipPool : object {
    private string _localGatewayRouteTableId;
    private string _poolArn;
    private List`1<string> _poolCidrs;
    private string _poolId;
    private List`1<Tag> _tags;
    public string LocalGatewayRouteTableId { get; public set; }
    [AWSPropertyAttribute]
public string PoolArn { get; public set; }
    public List`1<string> PoolCidrs { get; public set; }
    public string PoolId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_PoolArn();
    public void set_PoolArn(string value);
    internal bool IsSetPoolArn();
    public List`1<string> get_PoolCidrs();
    public void set_PoolCidrs(List`1<string> value);
    internal bool IsSetPoolCidrs();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ConfirmProductInstanceRequest : AmazonEC2Request {
    private string _instanceId;
    private string _productCode;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string ProductCode { get; public set; }
    public ConfirmProductInstanceRequest(string productCode, string instanceId);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_ProductCode();
    public void set_ProductCode(string value);
    internal bool IsSetProductCode();
}
public class Amazon.EC2.Model.ConfirmProductInstanceResponse : AmazonWebServiceResponse {
    private string _ownerId;
    private Nullable`1<bool> _return;
    public string OwnerId { get; public set; }
    public Nullable`1<bool> Return { get; public set; }
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ConnectionLogOptions : object {
    private string _cloudwatchLogGroup;
    private string _cloudwatchLogStream;
    private Nullable`1<bool> _enabled;
    public string CloudwatchLogGroup { get; public set; }
    public string CloudwatchLogStream { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string get_CloudwatchLogGroup();
    public void set_CloudwatchLogGroup(string value);
    internal bool IsSetCloudwatchLogGroup();
    public string get_CloudwatchLogStream();
    public void set_CloudwatchLogStream(string value);
    internal bool IsSetCloudwatchLogStream();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.ConnectionLogResponseOptions : object {
    private string _cloudwatchLogGroup;
    private string _cloudwatchLogStream;
    private Nullable`1<bool> _enabled;
    public string CloudwatchLogGroup { get; public set; }
    public string CloudwatchLogStream { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string get_CloudwatchLogGroup();
    public void set_CloudwatchLogGroup(string value);
    internal bool IsSetCloudwatchLogGroup();
    public string get_CloudwatchLogStream();
    public void set_CloudwatchLogStream(string value);
    internal bool IsSetCloudwatchLogStream();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.ConnectionNotification : object {
    private List`1<string> _connectionEvents;
    private string _connectionNotificationArn;
    private string _connectionNotificationId;
    private ConnectionNotificationState _connectionNotificationState;
    private ConnectionNotificationType _connectionNotificationType;
    private string _serviceId;
    private string _vpcEndpointId;
    public List`1<string> ConnectionEvents { get; public set; }
    public string ConnectionNotificationArn { get; public set; }
    public string ConnectionNotificationId { get; public set; }
    public ConnectionNotificationState ConnectionNotificationState { get; public set; }
    public ConnectionNotificationType ConnectionNotificationType { get; public set; }
    public string ServiceId { get; public set; }
    public string VpcEndpointId { get; public set; }
    public List`1<string> get_ConnectionEvents();
    public void set_ConnectionEvents(List`1<string> value);
    internal bool IsSetConnectionEvents();
    public string get_ConnectionNotificationArn();
    public void set_ConnectionNotificationArn(string value);
    internal bool IsSetConnectionNotificationArn();
    public string get_ConnectionNotificationId();
    public void set_ConnectionNotificationId(string value);
    internal bool IsSetConnectionNotificationId();
    public ConnectionNotificationState get_ConnectionNotificationState();
    public void set_ConnectionNotificationState(ConnectionNotificationState value);
    internal bool IsSetConnectionNotificationState();
    public ConnectionNotificationType get_ConnectionNotificationType();
    public void set_ConnectionNotificationType(ConnectionNotificationType value);
    internal bool IsSetConnectionNotificationType();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
}
public class Amazon.EC2.Model.ConnectionTrackingConfiguration : object {
    private Nullable`1<int> _tcpEstablishedTimeout;
    private Nullable`1<int> _udpStreamTimeout;
    private Nullable`1<int> _udpTimeout;
    public Nullable`1<int> TcpEstablishedTimeout { get; public set; }
    public Nullable`1<int> UdpStreamTimeout { get; public set; }
    public Nullable`1<int> UdpTimeout { get; public set; }
    public Nullable`1<int> get_TcpEstablishedTimeout();
    public void set_TcpEstablishedTimeout(Nullable`1<int> value);
    internal bool IsSetTcpEstablishedTimeout();
    public Nullable`1<int> get_UdpStreamTimeout();
    public void set_UdpStreamTimeout(Nullable`1<int> value);
    internal bool IsSetUdpStreamTimeout();
    public Nullable`1<int> get_UdpTimeout();
    public void set_UdpTimeout(Nullable`1<int> value);
    internal bool IsSetUdpTimeout();
}
public class Amazon.EC2.Model.ConnectionTrackingSpecification : object {
    private Nullable`1<int> _tcpEstablishedTimeout;
    private Nullable`1<int> _udpStreamTimeout;
    private Nullable`1<int> _udpTimeout;
    public Nullable`1<int> TcpEstablishedTimeout { get; public set; }
    public Nullable`1<int> UdpStreamTimeout { get; public set; }
    public Nullable`1<int> UdpTimeout { get; public set; }
    public Nullable`1<int> get_TcpEstablishedTimeout();
    public void set_TcpEstablishedTimeout(Nullable`1<int> value);
    internal bool IsSetTcpEstablishedTimeout();
    public Nullable`1<int> get_UdpStreamTimeout();
    public void set_UdpStreamTimeout(Nullable`1<int> value);
    internal bool IsSetUdpStreamTimeout();
    public Nullable`1<int> get_UdpTimeout();
    public void set_UdpTimeout(Nullable`1<int> value);
    internal bool IsSetUdpTimeout();
}
public class Amazon.EC2.Model.ConnectionTrackingSpecificationRequest : object {
    private Nullable`1<int> _tcpEstablishedTimeout;
    private Nullable`1<int> _udpStreamTimeout;
    private Nullable`1<int> _udpTimeout;
    public Nullable`1<int> TcpEstablishedTimeout { get; public set; }
    public Nullable`1<int> UdpStreamTimeout { get; public set; }
    public Nullable`1<int> UdpTimeout { get; public set; }
    public Nullable`1<int> get_TcpEstablishedTimeout();
    public void set_TcpEstablishedTimeout(Nullable`1<int> value);
    internal bool IsSetTcpEstablishedTimeout();
    public Nullable`1<int> get_UdpStreamTimeout();
    public void set_UdpStreamTimeout(Nullable`1<int> value);
    internal bool IsSetUdpStreamTimeout();
    public Nullable`1<int> get_UdpTimeout();
    public void set_UdpTimeout(Nullable`1<int> value);
    internal bool IsSetUdpTimeout();
}
public class Amazon.EC2.Model.ConnectionTrackingSpecificationResponse : object {
    private Nullable`1<int> _tcpEstablishedTimeout;
    private Nullable`1<int> _udpStreamTimeout;
    private Nullable`1<int> _udpTimeout;
    public Nullable`1<int> TcpEstablishedTimeout { get; public set; }
    public Nullable`1<int> UdpStreamTimeout { get; public set; }
    public Nullable`1<int> UdpTimeout { get; public set; }
    public Nullable`1<int> get_TcpEstablishedTimeout();
    public void set_TcpEstablishedTimeout(Nullable`1<int> value);
    internal bool IsSetTcpEstablishedTimeout();
    public Nullable`1<int> get_UdpStreamTimeout();
    public void set_UdpStreamTimeout(Nullable`1<int> value);
    internal bool IsSetUdpStreamTimeout();
    public Nullable`1<int> get_UdpTimeout();
    public void set_UdpTimeout(Nullable`1<int> value);
    internal bool IsSetUdpTimeout();
}
public class Amazon.EC2.Model.ConversionTask : object {
    private string _conversionTaskId;
    private string _expirationTime;
    private ImportInstanceTaskDetails _importInstance;
    private ImportVolumeTaskDetails _importVolume;
    private ConversionTaskState _state;
    private string _statusMessage;
    private List`1<Tag> _tags;
    public string ConversionTaskId { get; public set; }
    public string ExpirationTime { get; public set; }
    public ImportInstanceTaskDetails ImportInstance { get; public set; }
    public ImportVolumeTaskDetails ImportVolume { get; public set; }
    public ConversionTaskState State { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_ConversionTaskId();
    public void set_ConversionTaskId(string value);
    internal bool IsSetConversionTaskId();
    public string get_ExpirationTime();
    public void set_ExpirationTime(string value);
    internal bool IsSetExpirationTime();
    public ImportInstanceTaskDetails get_ImportInstance();
    public void set_ImportInstance(ImportInstanceTaskDetails value);
    internal bool IsSetImportInstance();
    public ImportVolumeTaskDetails get_ImportVolume();
    public void set_ImportVolume(ImportVolumeTaskDetails value);
    internal bool IsSetImportVolume();
    public ConversionTaskState get_State();
    public void set_State(ConversionTaskState value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.CopyFpgaImageRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _name;
    private string _sourceFpgaImageId;
    private string _sourceRegion;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public string SourceFpgaImageId { get; public set; }
    [AWSPropertyAttribute]
public string SourceRegion { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_SourceFpgaImageId();
    public void set_SourceFpgaImageId(string value);
    internal bool IsSetSourceFpgaImageId();
    public string get_SourceRegion();
    public void set_SourceRegion(string value);
    internal bool IsSetSourceRegion();
}
public class Amazon.EC2.Model.CopyFpgaImageResponse : AmazonWebServiceResponse {
    private string _fpgaImageId;
    public string FpgaImageId { get; public set; }
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
}
public class Amazon.EC2.Model.CopyImageRequest : AmazonEC2Request {
    private string _clientToken;
    private Nullable`1<bool> _copyImageTags;
    private string _description;
    private string _destinationOutpostArn;
    private Nullable`1<bool> _encrypted;
    private string _kmsKeyId;
    private string _name;
    private string _sourceImageId;
    private string _sourceRegion;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public Nullable`1<bool> CopyImageTags { get; public set; }
    public string Description { get; public set; }
    public string DestinationOutpostArn { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string SourceImageId { get; public set; }
    [AWSPropertyAttribute]
public string SourceRegion { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<bool> get_CopyImageTags();
    public void set_CopyImageTags(Nullable`1<bool> value);
    internal bool IsSetCopyImageTags();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationOutpostArn();
    public void set_DestinationOutpostArn(string value);
    internal bool IsSetDestinationOutpostArn();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_SourceImageId();
    public void set_SourceImageId(string value);
    internal bool IsSetSourceImageId();
    public string get_SourceRegion();
    public void set_SourceRegion(string value);
    internal bool IsSetSourceRegion();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CopyImageResponse : AmazonWebServiceResponse {
    private string _imageId;
    public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.CopySnapshotRequest : AmazonEC2Request {
    private string _description;
    private string _destinationOutpostArn;
    private string _destinationRegion;
    private Nullable`1<bool> _encrypted;
    private string _kmsKeyId;
    private string _presignedUrl;
    private string _sourceRegion;
    private string _sourceSnapshotId;
    private List`1<TagSpecification> _tagSpecifications;
    public string Description { get; public set; }
    public string DestinationOutpostArn { get; public set; }
    public string DestinationRegion { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
internal string PresignedUrl { get; internal set; }
    [AWSPropertyAttribute]
public string SourceRegion { get; public set; }
    [AWSPropertyAttribute]
public string SourceSnapshotId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationOutpostArn();
    public void set_DestinationOutpostArn(string value);
    internal bool IsSetDestinationOutpostArn();
    public string get_DestinationRegion();
    public void set_DestinationRegion(string value);
    internal bool IsSetDestinationRegion();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    internal string get_PresignedUrl();
    internal void set_PresignedUrl(string value);
    internal bool IsSetPresignedUrl();
    public string get_SourceRegion();
    public void set_SourceRegion(string value);
    internal bool IsSetSourceRegion();
    public string get_SourceSnapshotId();
    public void set_SourceSnapshotId(string value);
    internal bool IsSetSourceSnapshotId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CopySnapshotResponse : AmazonWebServiceResponse {
    private string _snapshotId;
    private List`1<Tag> _tags;
    public string SnapshotId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.CpuOptions : object {
    private AmdSevSnpSpecification _amdSevSnp;
    private Nullable`1<int> _coreCount;
    private Nullable`1<int> _threadsPerCore;
    public AmdSevSnpSpecification AmdSevSnp { get; public set; }
    public Nullable`1<int> CoreCount { get; public set; }
    public Nullable`1<int> ThreadsPerCore { get; public set; }
    public AmdSevSnpSpecification get_AmdSevSnp();
    public void set_AmdSevSnp(AmdSevSnpSpecification value);
    internal bool IsSetAmdSevSnp();
    public Nullable`1<int> get_CoreCount();
    public void set_CoreCount(Nullable`1<int> value);
    internal bool IsSetCoreCount();
    public Nullable`1<int> get_ThreadsPerCore();
    public void set_ThreadsPerCore(Nullable`1<int> value);
    internal bool IsSetThreadsPerCore();
}
public class Amazon.EC2.Model.CpuOptionsRequest : object {
    private AmdSevSnpSpecification _amdSevSnp;
    private Nullable`1<int> _coreCount;
    private Nullable`1<int> _threadsPerCore;
    public AmdSevSnpSpecification AmdSevSnp { get; public set; }
    public Nullable`1<int> CoreCount { get; public set; }
    public Nullable`1<int> ThreadsPerCore { get; public set; }
    public AmdSevSnpSpecification get_AmdSevSnp();
    public void set_AmdSevSnp(AmdSevSnpSpecification value);
    internal bool IsSetAmdSevSnp();
    public Nullable`1<int> get_CoreCount();
    public void set_CoreCount(Nullable`1<int> value);
    internal bool IsSetCoreCount();
    public Nullable`1<int> get_ThreadsPerCore();
    public void set_ThreadsPerCore(Nullable`1<int> value);
    internal bool IsSetThreadsPerCore();
}
public class Amazon.EC2.Model.CreateCapacityReservationFleetRequest : AmazonEC2Request {
    private string _allocationStrategy;
    private string _clientToken;
    private Nullable`1<DateTime> _endDate;
    private FleetInstanceMatchCriteria _instanceMatchCriteria;
    private List`1<ReservationFleetInstanceSpecification> _instanceTypeSpecifications;
    private List`1<TagSpecification> _tagSpecifications;
    private FleetCapacityReservationTenancy _tenancy;
    private Nullable`1<int> _totalTargetCapacity;
    public string AllocationStrategy { get; public set; }
    public string ClientToken { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public FleetInstanceMatchCriteria InstanceMatchCriteria { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReservationFleetInstanceSpecification> InstanceTypeSpecifications { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public FleetCapacityReservationTenancy Tenancy { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TotalTargetCapacity { get; public set; }
    public string get_AllocationStrategy();
    public void set_AllocationStrategy(string value);
    internal bool IsSetAllocationStrategy();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public FleetInstanceMatchCriteria get_InstanceMatchCriteria();
    public void set_InstanceMatchCriteria(FleetInstanceMatchCriteria value);
    internal bool IsSetInstanceMatchCriteria();
    public List`1<ReservationFleetInstanceSpecification> get_InstanceTypeSpecifications();
    public void set_InstanceTypeSpecifications(List`1<ReservationFleetInstanceSpecification> value);
    internal bool IsSetInstanceTypeSpecifications();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public FleetCapacityReservationTenancy get_Tenancy();
    public void set_Tenancy(FleetCapacityReservationTenancy value);
    internal bool IsSetTenancy();
    public Nullable`1<int> get_TotalTargetCapacity();
    public void set_TotalTargetCapacity(Nullable`1<int> value);
    internal bool IsSetTotalTargetCapacity();
}
public class Amazon.EC2.Model.CreateCapacityReservationFleetResponse : AmazonWebServiceResponse {
    private string _allocationStrategy;
    private string _capacityReservationFleetId;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<DateTime> _endDate;
    private List`1<FleetCapacityReservation> _fleetCapacityReservations;
    private FleetInstanceMatchCriteria _instanceMatchCriteria;
    private CapacityReservationFleetState _state;
    private List`1<Tag> _tags;
    private FleetCapacityReservationTenancy _tenancy;
    private Nullable`1<double> _totalFulfilledCapacity;
    private Nullable`1<int> _totalTargetCapacity;
    public string AllocationStrategy { get; public set; }
    public string CapacityReservationFleetId { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public List`1<FleetCapacityReservation> FleetCapacityReservations { get; public set; }
    public FleetInstanceMatchCriteria InstanceMatchCriteria { get; public set; }
    public CapacityReservationFleetState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public FleetCapacityReservationTenancy Tenancy { get; public set; }
    public Nullable`1<double> TotalFulfilledCapacity { get; public set; }
    public Nullable`1<int> TotalTargetCapacity { get; public set; }
    public string get_AllocationStrategy();
    public void set_AllocationStrategy(string value);
    internal bool IsSetAllocationStrategy();
    public string get_CapacityReservationFleetId();
    public void set_CapacityReservationFleetId(string value);
    internal bool IsSetCapacityReservationFleetId();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public List`1<FleetCapacityReservation> get_FleetCapacityReservations();
    public void set_FleetCapacityReservations(List`1<FleetCapacityReservation> value);
    internal bool IsSetFleetCapacityReservations();
    public FleetInstanceMatchCriteria get_InstanceMatchCriteria();
    public void set_InstanceMatchCriteria(FleetInstanceMatchCriteria value);
    internal bool IsSetInstanceMatchCriteria();
    public CapacityReservationFleetState get_State();
    public void set_State(CapacityReservationFleetState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public FleetCapacityReservationTenancy get_Tenancy();
    public void set_Tenancy(FleetCapacityReservationTenancy value);
    internal bool IsSetTenancy();
    public Nullable`1<double> get_TotalFulfilledCapacity();
    public void set_TotalFulfilledCapacity(Nullable`1<double> value);
    internal bool IsSetTotalFulfilledCapacity();
    public Nullable`1<int> get_TotalTargetCapacity();
    public void set_TotalTargetCapacity(Nullable`1<int> value);
    internal bool IsSetTotalTargetCapacity();
}
public class Amazon.EC2.Model.CreateCapacityReservationRequest : AmazonEC2Request {
    private string _availabilityZone;
    private string _availabilityZoneId;
    private string _clientToken;
    private Nullable`1<bool> _ebsOptimized;
    private Nullable`1<DateTime> _endDate;
    private EndDateType _endDateType;
    private Nullable`1<bool> _ephemeralStorage;
    private Nullable`1<int> _instanceCount;
    private InstanceMatchCriteria _instanceMatchCriteria;
    private CapacityReservationInstancePlatform _instancePlatform;
    private string _instanceType;
    private string _outpostArn;
    private string _placementGroupArn;
    private List`1<TagSpecification> _tagSpecifications;
    private CapacityReservationTenancy _tenancy;
    public string AvailabilityZone { get; public set; }
    public string AvailabilityZoneId { get; public set; }
    public string ClientToken { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public EndDateType EndDateType { get; public set; }
    public Nullable`1<bool> EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> InstanceCount { get; public set; }
    public InstanceMatchCriteria InstanceMatchCriteria { get; public set; }
    [AWSPropertyAttribute]
public CapacityReservationInstancePlatform InstancePlatform { get; public set; }
    [AWSPropertyAttribute]
public string InstanceType { get; public set; }
    public string OutpostArn { get; public set; }
    public string PlacementGroupArn { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public CapacityReservationTenancy Tenancy { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public EndDateType get_EndDateType();
    public void set_EndDateType(EndDateType value);
    internal bool IsSetEndDateType();
    public Nullable`1<bool> get_EphemeralStorage();
    public void set_EphemeralStorage(Nullable`1<bool> value);
    internal bool IsSetEphemeralStorage();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public InstanceMatchCriteria get_InstanceMatchCriteria();
    public void set_InstanceMatchCriteria(InstanceMatchCriteria value);
    internal bool IsSetInstanceMatchCriteria();
    public CapacityReservationInstancePlatform get_InstancePlatform();
    public void set_InstancePlatform(CapacityReservationInstancePlatform value);
    internal bool IsSetInstancePlatform();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_PlacementGroupArn();
    public void set_PlacementGroupArn(string value);
    internal bool IsSetPlacementGroupArn();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public CapacityReservationTenancy get_Tenancy();
    public void set_Tenancy(CapacityReservationTenancy value);
    internal bool IsSetTenancy();
}
public class Amazon.EC2.Model.CreateCapacityReservationResponse : AmazonWebServiceResponse {
    private CapacityReservation _capacityReservation;
    public CapacityReservation CapacityReservation { get; public set; }
    public CapacityReservation get_CapacityReservation();
    public void set_CapacityReservation(CapacityReservation value);
    internal bool IsSetCapacityReservation();
}
public class Amazon.EC2.Model.CreateCarrierGatewayRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    public string ClientToken { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateCarrierGatewayResponse : AmazonWebServiceResponse {
    private CarrierGateway _carrierGateway;
    public CarrierGateway CarrierGateway { get; public set; }
    public CarrierGateway get_CarrierGateway();
    public void set_CarrierGateway(CarrierGateway value);
    internal bool IsSetCarrierGateway();
}
public class Amazon.EC2.Model.CreateClientVpnEndpointRequest : AmazonEC2Request {
    private List`1<ClientVpnAuthenticationRequest> _authenticationOptions;
    private string _clientCidrBlock;
    private ClientConnectOptions _clientConnectOptions;
    private ClientLoginBannerOptions _clientLoginBannerOptions;
    private string _clientToken;
    private ConnectionLogOptions _connectionLogOptions;
    private string _description;
    private List`1<string> _dnsServers;
    private List`1<string> _securityGroupIds;
    private SelfServicePortal _selfServicePortal;
    private string _serverCertificateArn;
    private Nullable`1<int> _sessionTimeoutHours;
    private Nullable`1<bool> _splitTunnel;
    private List`1<TagSpecification> _tagSpecifications;
    private TransportProtocol _transportProtocol;
    private string _vpcId;
    private Nullable`1<int> _vpnPort;
    [AWSPropertyAttribute]
public List`1<ClientVpnAuthenticationRequest> AuthenticationOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClientCidrBlock { get; public set; }
    public ClientConnectOptions ClientConnectOptions { get; public set; }
    public ClientLoginBannerOptions ClientLoginBannerOptions { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public ConnectionLogOptions ConnectionLogOptions { get; public set; }
    public string Description { get; public set; }
    public List`1<string> DnsServers { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public SelfServicePortal SelfServicePortal { get; public set; }
    [AWSPropertyAttribute]
public string ServerCertificateArn { get; public set; }
    public Nullable`1<int> SessionTimeoutHours { get; public set; }
    public Nullable`1<bool> SplitTunnel { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public TransportProtocol TransportProtocol { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> VpnPort { get; public set; }
    public List`1<ClientVpnAuthenticationRequest> get_AuthenticationOptions();
    public void set_AuthenticationOptions(List`1<ClientVpnAuthenticationRequest> value);
    internal bool IsSetAuthenticationOptions();
    public string get_ClientCidrBlock();
    public void set_ClientCidrBlock(string value);
    internal bool IsSetClientCidrBlock();
    public ClientConnectOptions get_ClientConnectOptions();
    public void set_ClientConnectOptions(ClientConnectOptions value);
    internal bool IsSetClientConnectOptions();
    public ClientLoginBannerOptions get_ClientLoginBannerOptions();
    public void set_ClientLoginBannerOptions(ClientLoginBannerOptions value);
    internal bool IsSetClientLoginBannerOptions();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public ConnectionLogOptions get_ConnectionLogOptions();
    public void set_ConnectionLogOptions(ConnectionLogOptions value);
    internal bool IsSetConnectionLogOptions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_DnsServers();
    public void set_DnsServers(List`1<string> value);
    internal bool IsSetDnsServers();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public SelfServicePortal get_SelfServicePortal();
    public void set_SelfServicePortal(SelfServicePortal value);
    internal bool IsSetSelfServicePortal();
    public string get_ServerCertificateArn();
    public void set_ServerCertificateArn(string value);
    internal bool IsSetServerCertificateArn();
    public Nullable`1<int> get_SessionTimeoutHours();
    public void set_SessionTimeoutHours(Nullable`1<int> value);
    internal bool IsSetSessionTimeoutHours();
    public Nullable`1<bool> get_SplitTunnel();
    public void set_SplitTunnel(Nullable`1<bool> value);
    internal bool IsSetSplitTunnel();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public TransportProtocol get_TransportProtocol();
    public void set_TransportProtocol(TransportProtocol value);
    internal bool IsSetTransportProtocol();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public Nullable`1<int> get_VpnPort();
    public void set_VpnPort(Nullable`1<int> value);
    internal bool IsSetVpnPort();
}
public class Amazon.EC2.Model.CreateClientVpnEndpointResponse : AmazonWebServiceResponse {
    private string _clientVpnEndpointId;
    private string _dnsName;
    private ClientVpnEndpointStatus _status;
    public string ClientVpnEndpointId { get; public set; }
    public string DnsName { get; public set; }
    public ClientVpnEndpointStatus Status { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_DnsName();
    public void set_DnsName(string value);
    internal bool IsSetDnsName();
    public ClientVpnEndpointStatus get_Status();
    public void set_Status(ClientVpnEndpointStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.CreateClientVpnRouteRequest : AmazonEC2Request {
    private string _clientToken;
    private string _clientVpnEndpointId;
    private string _description;
    private string _destinationCidrBlock;
    private string _targetVpcSubnetId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    [AWSPropertyAttribute]
public string TargetVpcSubnetId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_TargetVpcSubnetId();
    public void set_TargetVpcSubnetId(string value);
    internal bool IsSetTargetVpcSubnetId();
}
public class Amazon.EC2.Model.CreateClientVpnRouteResponse : AmazonWebServiceResponse {
    private ClientVpnRouteStatus _status;
    public ClientVpnRouteStatus Status { get; public set; }
    public ClientVpnRouteStatus get_Status();
    public void set_Status(ClientVpnRouteStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.CreateCoipCidrRequest : AmazonEC2Request {
    private string _cidr;
    private string _coipPoolId;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    [AWSPropertyAttribute]
public string CoipPoolId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_CoipPoolId();
    public void set_CoipPoolId(string value);
    internal bool IsSetCoipPoolId();
}
public class Amazon.EC2.Model.CreateCoipCidrResponse : AmazonWebServiceResponse {
    private CoipCidr _coipCidr;
    public CoipCidr CoipCidr { get; public set; }
    public CoipCidr get_CoipCidr();
    public void set_CoipCidr(CoipCidr value);
    internal bool IsSetCoipCidr();
}
public class Amazon.EC2.Model.CreateCoipPoolRequest : AmazonEC2Request {
    private string _localGatewayRouteTableId;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateCoipPoolResponse : AmazonWebServiceResponse {
    private CoipPool _coipPool;
    public CoipPool CoipPool { get; public set; }
    public CoipPool get_CoipPool();
    public void set_CoipPool(CoipPool value);
    internal bool IsSetCoipPool();
}
public class Amazon.EC2.Model.CreateCustomerGatewayRequest : AmazonEC2Request {
    private Nullable`1<int> _bgpAsn;
    private Nullable`1<long> _bgpAsnExtended;
    private string _certificateArn;
    private string _deviceName;
    private string _ipAddress;
    private string _publicIp;
    private List`1<TagSpecification> _tagSpecifications;
    private GatewayType _type;
    public Nullable`1<int> BgpAsn { get; public set; }
    public Nullable`1<long> BgpAsnExtended { get; public set; }
    public string CertificateArn { get; public set; }
    public string DeviceName { get; public set; }
    public string IpAddress { get; public set; }
    public string PublicIp { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public GatewayType Type { get; public set; }
    public CreateCustomerGatewayRequest(GatewayType type, string publicIp, Nullable`1<int> bgpAsn);
    public Nullable`1<int> get_BgpAsn();
    public void set_BgpAsn(Nullable`1<int> value);
    internal bool IsSetBgpAsn();
    public Nullable`1<long> get_BgpAsnExtended();
    public void set_BgpAsnExtended(Nullable`1<long> value);
    internal bool IsSetBgpAsnExtended();
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.CreateCustomerGatewayResponse : AmazonWebServiceResponse {
    private CustomerGateway _customerGateway;
    public CustomerGateway CustomerGateway { get; public set; }
    public CustomerGateway get_CustomerGateway();
    public void set_CustomerGateway(CustomerGateway value);
    internal bool IsSetCustomerGateway();
}
public class Amazon.EC2.Model.CreateDefaultSubnetRequest : AmazonEC2Request {
    private string _availabilityZone;
    private Nullable`1<bool> _ipv6Native;
    [AWSPropertyAttribute]
public string AvailabilityZone { get; public set; }
    public Nullable`1<bool> Ipv6Native { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<bool> get_Ipv6Native();
    public void set_Ipv6Native(Nullable`1<bool> value);
    internal bool IsSetIpv6Native();
}
public class Amazon.EC2.Model.CreateDefaultSubnetResponse : AmazonWebServiceResponse {
    private Subnet _subnet;
    public Subnet Subnet { get; public set; }
    public Subnet get_Subnet();
    public void set_Subnet(Subnet value);
    internal bool IsSetSubnet();
}
public class Amazon.EC2.Model.CreateDefaultVpcRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.CreateDefaultVpcResponse : AmazonWebServiceResponse {
    private Vpc _vpc;
    public Vpc Vpc { get; public set; }
    public Vpc get_Vpc();
    public void set_Vpc(Vpc value);
    internal bool IsSetVpc();
}
public class Amazon.EC2.Model.CreateDhcpOptionsRequest : AmazonEC2Request {
    private List`1<DhcpConfiguration> _dhcpConfigurations;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public List`1<DhcpConfiguration> DhcpConfigurations { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public CreateDhcpOptionsRequest(List`1<DhcpConfiguration> dhcpConfigurations);
    public List`1<DhcpConfiguration> get_DhcpConfigurations();
    public void set_DhcpConfigurations(List`1<DhcpConfiguration> value);
    internal bool IsSetDhcpConfigurations();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateDhcpOptionsResponse : AmazonWebServiceResponse {
    private DhcpOptions _dhcpOptions;
    public DhcpOptions DhcpOptions { get; public set; }
    public DhcpOptions get_DhcpOptions();
    public void set_DhcpOptions(DhcpOptions value);
    internal bool IsSetDhcpOptions();
}
public class Amazon.EC2.Model.CreateEgressOnlyInternetGatewayRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    public string ClientToken { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateEgressOnlyInternetGatewayResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private EgressOnlyInternetGateway _egressOnlyInternetGateway;
    public string ClientToken { get; public set; }
    public EgressOnlyInternetGateway EgressOnlyInternetGateway { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public EgressOnlyInternetGateway get_EgressOnlyInternetGateway();
    public void set_EgressOnlyInternetGateway(EgressOnlyInternetGateway value);
    internal bool IsSetEgressOnlyInternetGateway();
}
public class Amazon.EC2.Model.CreateFleetError : object {
    private string _errorCode;
    private string _errorMessage;
    private LaunchTemplateAndOverridesResponse _launchTemplateAndOverrides;
    private InstanceLifecycle _lifecycle;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public LaunchTemplateAndOverridesResponse LaunchTemplateAndOverrides { get; public set; }
    public InstanceLifecycle Lifecycle { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public LaunchTemplateAndOverridesResponse get_LaunchTemplateAndOverrides();
    public void set_LaunchTemplateAndOverrides(LaunchTemplateAndOverridesResponse value);
    internal bool IsSetLaunchTemplateAndOverrides();
    public InstanceLifecycle get_Lifecycle();
    public void set_Lifecycle(InstanceLifecycle value);
    internal bool IsSetLifecycle();
}
public class Amazon.EC2.Model.CreateFleetInstance : object {
    private List`1<string> _instanceIds;
    private InstanceType _instanceType;
    private LaunchTemplateAndOverridesResponse _launchTemplateAndOverrides;
    private InstanceLifecycle _lifecycle;
    private PlatformValues _platform;
    public List`1<string> InstanceIds { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public LaunchTemplateAndOverridesResponse LaunchTemplateAndOverrides { get; public set; }
    public InstanceLifecycle Lifecycle { get; public set; }
    public PlatformValues Platform { get; public set; }
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public LaunchTemplateAndOverridesResponse get_LaunchTemplateAndOverrides();
    public void set_LaunchTemplateAndOverrides(LaunchTemplateAndOverridesResponse value);
    internal bool IsSetLaunchTemplateAndOverrides();
    public InstanceLifecycle get_Lifecycle();
    public void set_Lifecycle(InstanceLifecycle value);
    internal bool IsSetLifecycle();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
}
public class Amazon.EC2.Model.CreateFleetRequest : AmazonEC2Request {
    private string _clientToken;
    private string _context;
    private FleetExcessCapacityTerminationPolicy _excessCapacityTerminationPolicy;
    private List`1<FleetLaunchTemplateConfigRequest> _launchTemplateConfigs;
    private OnDemandOptionsRequest _onDemandOptions;
    private Nullable`1<bool> _replaceUnhealthyInstances;
    private SpotOptionsRequest _spotOptions;
    private List`1<TagSpecification> _tagSpecifications;
    private TargetCapacitySpecificationRequest _targetCapacitySpecification;
    private Nullable`1<bool> _terminateInstancesWithExpiration;
    private FleetType _type;
    private Nullable`1<DateTime> _validFromUtc;
    private Nullable`1<DateTime> _validUntilUtc;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public string ClientToken { get; public set; }
    public string Context { get; public set; }
    public FleetExcessCapacityTerminationPolicy ExcessCapacityTerminationPolicy { get; public set; }
    [AWSPropertyAttribute]
public List`1<FleetLaunchTemplateConfigRequest> LaunchTemplateConfigs { get; public set; }
    public OnDemandOptionsRequest OnDemandOptions { get; public set; }
    public Nullable`1<bool> ReplaceUnhealthyInstances { get; public set; }
    public SpotOptionsRequest SpotOptions { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public TargetCapacitySpecificationRequest TargetCapacitySpecification { get; public set; }
    public Nullable`1<bool> TerminateInstancesWithExpiration { get; public set; }
    public FleetType Type { get; public set; }
    public Nullable`1<DateTime> ValidFromUtc { get; public set; }
    public Nullable`1<DateTime> ValidUntilUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidFromUtc instead. Setting either ValidFrom or ValidFromUtc results in both ValidFrom and ValidFromUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidFrom is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidFrom { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidUntil is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidUntil { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Context();
    public void set_Context(string value);
    internal bool IsSetContext();
    public FleetExcessCapacityTerminationPolicy get_ExcessCapacityTerminationPolicy();
    public void set_ExcessCapacityTerminationPolicy(FleetExcessCapacityTerminationPolicy value);
    internal bool IsSetExcessCapacityTerminationPolicy();
    public List`1<FleetLaunchTemplateConfigRequest> get_LaunchTemplateConfigs();
    public void set_LaunchTemplateConfigs(List`1<FleetLaunchTemplateConfigRequest> value);
    internal bool IsSetLaunchTemplateConfigs();
    public OnDemandOptionsRequest get_OnDemandOptions();
    public void set_OnDemandOptions(OnDemandOptionsRequest value);
    internal bool IsSetOnDemandOptions();
    public Nullable`1<bool> get_ReplaceUnhealthyInstances();
    public void set_ReplaceUnhealthyInstances(Nullable`1<bool> value);
    internal bool IsSetReplaceUnhealthyInstances();
    public SpotOptionsRequest get_SpotOptions();
    public void set_SpotOptions(SpotOptionsRequest value);
    internal bool IsSetSpotOptions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public TargetCapacitySpecificationRequest get_TargetCapacitySpecification();
    public void set_TargetCapacitySpecification(TargetCapacitySpecificationRequest value);
    internal bool IsSetTargetCapacitySpecification();
    public Nullable`1<bool> get_TerminateInstancesWithExpiration();
    public void set_TerminateInstancesWithExpiration(Nullable`1<bool> value);
    internal bool IsSetTerminateInstancesWithExpiration();
    public FleetType get_Type();
    public void set_Type(FleetType value);
    internal bool IsSetType();
    public Nullable`1<DateTime> get_ValidFromUtc();
    public void set_ValidFromUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidFromUtc();
    public Nullable`1<DateTime> get_ValidUntilUtc();
    public void set_ValidUntilUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidUntilUtc();
    public Nullable`1<DateTime> get_ValidFrom();
    public void set_ValidFrom(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.CreateFleetResponse : AmazonWebServiceResponse {
    private List`1<CreateFleetError> _errors;
    private string _fleetId;
    private List`1<CreateFleetInstance> _instances;
    public List`1<CreateFleetError> Errors { get; public set; }
    public string FleetId { get; public set; }
    public List`1<CreateFleetInstance> Instances { get; public set; }
    public List`1<CreateFleetError> get_Errors();
    public void set_Errors(List`1<CreateFleetError> value);
    internal bool IsSetErrors();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public List`1<CreateFleetInstance> get_Instances();
    public void set_Instances(List`1<CreateFleetInstance> value);
    internal bool IsSetInstances();
}
public class Amazon.EC2.Model.CreateFlowLogsRequest : AmazonEC2Request {
    private string _clientToken;
    private string _deliverCrossAccountRole;
    private string _deliverLogsPermissionArn;
    private DestinationOptionsRequest _destinationOptions;
    private string _logDestination;
    private LogDestinationType _logDestinationType;
    private string _logFormat;
    private string _logGroupName;
    private Nullable`1<int> _maxAggregationInterval;
    private List`1<string> _resourceIds;
    private FlowLogsResourceType _resourceType;
    private List`1<TagSpecification> _tagSpecifications;
    private TrafficType _trafficType;
    public string ClientToken { get; public set; }
    public string DeliverCrossAccountRole { get; public set; }
    public string DeliverLogsPermissionArn { get; public set; }
    public DestinationOptionsRequest DestinationOptions { get; public set; }
    public string LogDestination { get; public set; }
    public LogDestinationType LogDestinationType { get; public set; }
    public string LogFormat { get; public set; }
    public string LogGroupName { get; public set; }
    public Nullable`1<int> MaxAggregationInterval { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ResourceIds { get; public set; }
    [AWSPropertyAttribute]
public FlowLogsResourceType ResourceType { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public TrafficType TrafficType { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DeliverCrossAccountRole();
    public void set_DeliverCrossAccountRole(string value);
    internal bool IsSetDeliverCrossAccountRole();
    public string get_DeliverLogsPermissionArn();
    public void set_DeliverLogsPermissionArn(string value);
    internal bool IsSetDeliverLogsPermissionArn();
    public DestinationOptionsRequest get_DestinationOptions();
    public void set_DestinationOptions(DestinationOptionsRequest value);
    internal bool IsSetDestinationOptions();
    public string get_LogDestination();
    public void set_LogDestination(string value);
    internal bool IsSetLogDestination();
    public LogDestinationType get_LogDestinationType();
    public void set_LogDestinationType(LogDestinationType value);
    internal bool IsSetLogDestinationType();
    public string get_LogFormat();
    public void set_LogFormat(string value);
    internal bool IsSetLogFormat();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Nullable`1<int> get_MaxAggregationInterval();
    public void set_MaxAggregationInterval(Nullable`1<int> value);
    internal bool IsSetMaxAggregationInterval();
    public List`1<string> get_ResourceIds();
    public void set_ResourceIds(List`1<string> value);
    internal bool IsSetResourceIds();
    public FlowLogsResourceType get_ResourceType();
    public void set_ResourceType(FlowLogsResourceType value);
    internal bool IsSetResourceType();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public TrafficType get_TrafficType();
    public void set_TrafficType(TrafficType value);
    internal bool IsSetTrafficType();
}
public class Amazon.EC2.Model.CreateFlowLogsResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private List`1<string> _flowLogIds;
    private List`1<UnsuccessfulItem> _unsuccessful;
    public string ClientToken { get; public set; }
    public List`1<string> FlowLogIds { get; public set; }
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_FlowLogIds();
    public void set_FlowLogIds(List`1<string> value);
    internal bool IsSetFlowLogIds();
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.CreateFpgaImageRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private StorageLocation _inputStorageLocation;
    private StorageLocation _logsStorageLocation;
    private string _name;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public StorageLocation InputStorageLocation { get; public set; }
    public StorageLocation LogsStorageLocation { get; public set; }
    public string Name { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public StorageLocation get_InputStorageLocation();
    public void set_InputStorageLocation(StorageLocation value);
    internal bool IsSetInputStorageLocation();
    public StorageLocation get_LogsStorageLocation();
    public void set_LogsStorageLocation(StorageLocation value);
    internal bool IsSetLogsStorageLocation();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateFpgaImageResponse : AmazonWebServiceResponse {
    private string _fpgaImageGlobalId;
    private string _fpgaImageId;
    public string FpgaImageGlobalId { get; public set; }
    public string FpgaImageId { get; public set; }
    public string get_FpgaImageGlobalId();
    public void set_FpgaImageGlobalId(string value);
    internal bool IsSetFpgaImageGlobalId();
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
}
public class Amazon.EC2.Model.CreateImageRequest : AmazonEC2Request {
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _description;
    private string _instanceId;
    private string _name;
    private Nullable`1<bool> _noReboot;
    private List`1<TagSpecification> _tagSpecifications;
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> NoReboot { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public CreateImageRequest(string instanceId, string name);
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_NoReboot();
    public void set_NoReboot(Nullable`1<bool> value);
    internal bool IsSetNoReboot();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateImageResponse : AmazonWebServiceResponse {
    private string _imageId;
    public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.CreateInstanceConnectEndpointRequest : AmazonEC2Request {
    private string _clientToken;
    private Nullable`1<bool> _preserveClientIp;
    private List`1<string> _securityGroupIds;
    private string _subnetId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public Nullable`1<bool> PreserveClientIp { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<bool> get_PreserveClientIp();
    public void set_PreserveClientIp(Nullable`1<bool> value);
    internal bool IsSetPreserveClientIp();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateInstanceConnectEndpointResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private Ec2InstanceConnectEndpoint _instanceConnectEndpoint;
    public string ClientToken { get; public set; }
    public Ec2InstanceConnectEndpoint InstanceConnectEndpoint { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Ec2InstanceConnectEndpoint get_InstanceConnectEndpoint();
    public void set_InstanceConnectEndpoint(Ec2InstanceConnectEndpoint value);
    internal bool IsSetInstanceConnectEndpoint();
}
public class Amazon.EC2.Model.CreateInstanceEventWindowRequest : AmazonEC2Request {
    private string _cronExpression;
    private string _name;
    private List`1<TagSpecification> _tagSpecifications;
    private List`1<InstanceEventWindowTimeRangeRequest> _timeRanges;
    public string CronExpression { get; public set; }
    public string Name { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public List`1<InstanceEventWindowTimeRangeRequest> TimeRanges { get; public set; }
    public string get_CronExpression();
    public void set_CronExpression(string value);
    internal bool IsSetCronExpression();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public List`1<InstanceEventWindowTimeRangeRequest> get_TimeRanges();
    public void set_TimeRanges(List`1<InstanceEventWindowTimeRangeRequest> value);
    internal bool IsSetTimeRanges();
}
public class Amazon.EC2.Model.CreateInstanceEventWindowResponse : AmazonWebServiceResponse {
    private InstanceEventWindow _instanceEventWindow;
    public InstanceEventWindow InstanceEventWindow { get; public set; }
    public InstanceEventWindow get_InstanceEventWindow();
    public void set_InstanceEventWindow(InstanceEventWindow value);
    internal bool IsSetInstanceEventWindow();
}
public class Amazon.EC2.Model.CreateInstanceExportTaskRequest : AmazonEC2Request {
    private string _description;
    private ExportToS3TaskSpecification _exportToS3Task;
    private string _instanceId;
    private List`1<TagSpecification> _tagSpecifications;
    private ExportEnvironment _targetEnvironment;
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public ExportToS3TaskSpecification ExportToS3Task { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public ExportEnvironment TargetEnvironment { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ExportToS3TaskSpecification get_ExportToS3Task();
    public void set_ExportToS3Task(ExportToS3TaskSpecification value);
    internal bool IsSetExportToS3Task();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public ExportEnvironment get_TargetEnvironment();
    public void set_TargetEnvironment(ExportEnvironment value);
    internal bool IsSetTargetEnvironment();
}
public class Amazon.EC2.Model.CreateInstanceExportTaskResponse : AmazonWebServiceResponse {
    private ExportTask _exportTask;
    public ExportTask ExportTask { get; public set; }
    public ExportTask get_ExportTask();
    public void set_ExportTask(ExportTask value);
    internal bool IsSetExportTask();
}
public class Amazon.EC2.Model.CreateInternetGatewayRequest : AmazonEC2Request {
    private List`1<TagSpecification> _tagSpecifications;
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateInternetGatewayResponse : AmazonWebServiceResponse {
    private InternetGateway _internetGateway;
    public InternetGateway InternetGateway { get; public set; }
    public InternetGateway get_InternetGateway();
    public void set_InternetGateway(InternetGateway value);
    internal bool IsSetInternetGateway();
}
public class Amazon.EC2.Model.CreateIpamExternalResourceVerificationTokenRequest : AmazonEC2Request {
    private string _clientToken;
    private string _ipamId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string IpamId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateIpamExternalResourceVerificationTokenResponse : AmazonWebServiceResponse {
    private IpamExternalResourceVerificationToken _ipamExternalResourceVerificationToken;
    public IpamExternalResourceVerificationToken IpamExternalResourceVerificationToken { get; public set; }
    public IpamExternalResourceVerificationToken get_IpamExternalResourceVerificationToken();
    public void set_IpamExternalResourceVerificationToken(IpamExternalResourceVerificationToken value);
    internal bool IsSetIpamExternalResourceVerificationToken();
}
public class Amazon.EC2.Model.CreateIpamPoolRequest : AmazonEC2Request {
    private AddressFamily _addressFamily;
    private Nullable`1<int> _allocationDefaultNetmaskLength;
    private Nullable`1<int> _allocationMaxNetmaskLength;
    private Nullable`1<int> _allocationMinNetmaskLength;
    private List`1<RequestIpamResourceTag> _allocationResourceTags;
    private Nullable`1<bool> _autoImport;
    private IpamPoolAwsService _awsService;
    private string _clientToken;
    private string _description;
    private string _ipamScopeId;
    private string _locale;
    private IpamPoolPublicIpSource _publicIpSource;
    private Nullable`1<bool> _publiclyAdvertisable;
    private string _sourceIpamPoolId;
    private IpamPoolSourceResourceRequest _sourceResource;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public AddressFamily AddressFamily { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationDefaultNetmaskLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationMaxNetmaskLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationMinNetmaskLength { get; public set; }
    public List`1<RequestIpamResourceTag> AllocationResourceTags { get; public set; }
    public Nullable`1<bool> AutoImport { get; public set; }
    public IpamPoolAwsService AwsService { get; public set; }
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamScopeId { get; public set; }
    public string Locale { get; public set; }
    public IpamPoolPublicIpSource PublicIpSource { get; public set; }
    public Nullable`1<bool> PubliclyAdvertisable { get; public set; }
    public string SourceIpamPoolId { get; public set; }
    public IpamPoolSourceResourceRequest SourceResource { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public AddressFamily get_AddressFamily();
    public void set_AddressFamily(AddressFamily value);
    internal bool IsSetAddressFamily();
    public Nullable`1<int> get_AllocationDefaultNetmaskLength();
    public void set_AllocationDefaultNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationDefaultNetmaskLength();
    public Nullable`1<int> get_AllocationMaxNetmaskLength();
    public void set_AllocationMaxNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationMaxNetmaskLength();
    public Nullable`1<int> get_AllocationMinNetmaskLength();
    public void set_AllocationMinNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationMinNetmaskLength();
    public List`1<RequestIpamResourceTag> get_AllocationResourceTags();
    public void set_AllocationResourceTags(List`1<RequestIpamResourceTag> value);
    internal bool IsSetAllocationResourceTags();
    public Nullable`1<bool> get_AutoImport();
    public void set_AutoImport(Nullable`1<bool> value);
    internal bool IsSetAutoImport();
    public IpamPoolAwsService get_AwsService();
    public void set_AwsService(IpamPoolAwsService value);
    internal bool IsSetAwsService();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamScopeId();
    public void set_IpamScopeId(string value);
    internal bool IsSetIpamScopeId();
    public string get_Locale();
    public void set_Locale(string value);
    internal bool IsSetLocale();
    public IpamPoolPublicIpSource get_PublicIpSource();
    public void set_PublicIpSource(IpamPoolPublicIpSource value);
    internal bool IsSetPublicIpSource();
    public Nullable`1<bool> get_PubliclyAdvertisable();
    public void set_PubliclyAdvertisable(Nullable`1<bool> value);
    internal bool IsSetPubliclyAdvertisable();
    public string get_SourceIpamPoolId();
    public void set_SourceIpamPoolId(string value);
    internal bool IsSetSourceIpamPoolId();
    public IpamPoolSourceResourceRequest get_SourceResource();
    public void set_SourceResource(IpamPoolSourceResourceRequest value);
    internal bool IsSetSourceResource();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateIpamPoolResponse : AmazonWebServiceResponse {
    private IpamPool _ipamPool;
    public IpamPool IpamPool { get; public set; }
    public IpamPool get_IpamPool();
    public void set_IpamPool(IpamPool value);
    internal bool IsSetIpamPool();
}
public class Amazon.EC2.Model.CreateIpamRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private List`1<AddIpamOperatingRegion> _operatingRegions;
    private List`1<TagSpecification> _tagSpecifications;
    private IpamTier _tier;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public List`1<AddIpamOperatingRegion> OperatingRegions { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public IpamTier Tier { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<AddIpamOperatingRegion> get_OperatingRegions();
    public void set_OperatingRegions(List`1<AddIpamOperatingRegion> value);
    internal bool IsSetOperatingRegions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public IpamTier get_Tier();
    public void set_Tier(IpamTier value);
    internal bool IsSetTier();
}
public class Amazon.EC2.Model.CreateIpamResourceDiscoveryRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private List`1<AddIpamOperatingRegion> _operatingRegions;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public List`1<AddIpamOperatingRegion> OperatingRegions { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<AddIpamOperatingRegion> get_OperatingRegions();
    public void set_OperatingRegions(List`1<AddIpamOperatingRegion> value);
    internal bool IsSetOperatingRegions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateIpamResourceDiscoveryResponse : AmazonWebServiceResponse {
    private IpamResourceDiscovery _ipamResourceDiscovery;
    public IpamResourceDiscovery IpamResourceDiscovery { get; public set; }
    public IpamResourceDiscovery get_IpamResourceDiscovery();
    public void set_IpamResourceDiscovery(IpamResourceDiscovery value);
    internal bool IsSetIpamResourceDiscovery();
}
public class Amazon.EC2.Model.CreateIpamResponse : AmazonWebServiceResponse {
    private Ipam _ipam;
    public Ipam Ipam { get; public set; }
    public Ipam get_Ipam();
    public void set_Ipam(Ipam value);
    internal bool IsSetIpam();
}
public class Amazon.EC2.Model.CreateIpamScopeRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _ipamId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateIpamScopeResponse : AmazonWebServiceResponse {
    private IpamScope _ipamScope;
    public IpamScope IpamScope { get; public set; }
    public IpamScope get_IpamScope();
    public void set_IpamScope(IpamScope value);
    internal bool IsSetIpamScope();
}
public class Amazon.EC2.Model.CreateKeyPairRequest : AmazonEC2Request {
    private KeyFormat _keyFormat;
    private string _keyName;
    private KeyType _keyType;
    private List`1<TagSpecification> _tagSpecifications;
    public KeyFormat KeyFormat { get; public set; }
    [AWSPropertyAttribute]
public string KeyName { get; public set; }
    public KeyType KeyType { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public CreateKeyPairRequest(string keyName);
    public KeyFormat get_KeyFormat();
    public void set_KeyFormat(KeyFormat value);
    internal bool IsSetKeyFormat();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public KeyType get_KeyType();
    public void set_KeyType(KeyType value);
    internal bool IsSetKeyType();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateKeyPairResponse : AmazonWebServiceResponse {
    private KeyPair _keyPair;
    public KeyPair KeyPair { get; public set; }
    public KeyPair get_KeyPair();
    public void set_KeyPair(KeyPair value);
    internal bool IsSetKeyPair();
}
public class Amazon.EC2.Model.CreateLaunchTemplateRequest : AmazonEC2Request {
    private string _clientToken;
    private RequestLaunchTemplateData _launchTemplateData;
    private string _launchTemplateName;
    private List`1<TagSpecification> _tagSpecifications;
    private string _versionDescription;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public RequestLaunchTemplateData LaunchTemplateData { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VersionDescription { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public RequestLaunchTemplateData get_LaunchTemplateData();
    public void set_LaunchTemplateData(RequestLaunchTemplateData value);
    internal bool IsSetLaunchTemplateData();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VersionDescription();
    public void set_VersionDescription(string value);
    internal bool IsSetVersionDescription();
}
public class Amazon.EC2.Model.CreateLaunchTemplateResponse : AmazonWebServiceResponse {
    private LaunchTemplate _launchTemplate;
    private ValidationWarning _warning;
    public LaunchTemplate LaunchTemplate { get; public set; }
    public ValidationWarning Warning { get; public set; }
    public LaunchTemplate get_LaunchTemplate();
    public void set_LaunchTemplate(LaunchTemplate value);
    internal bool IsSetLaunchTemplate();
    public ValidationWarning get_Warning();
    public void set_Warning(ValidationWarning value);
    internal bool IsSetWarning();
}
public class Amazon.EC2.Model.CreateLaunchTemplateVersionRequest : AmazonEC2Request {
    private string _clientToken;
    private RequestLaunchTemplateData _launchTemplateData;
    private string _launchTemplateId;
    private string _launchTemplateName;
    private Nullable`1<bool> _resolveAlias;
    private string _sourceVersion;
    private string _versionDescription;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public RequestLaunchTemplateData LaunchTemplateData { get; public set; }
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public Nullable`1<bool> ResolveAlias { get; public set; }
    public string SourceVersion { get; public set; }
    [AWSPropertyAttribute]
public string VersionDescription { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public RequestLaunchTemplateData get_LaunchTemplateData();
    public void set_LaunchTemplateData(RequestLaunchTemplateData value);
    internal bool IsSetLaunchTemplateData();
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public Nullable`1<bool> get_ResolveAlias();
    public void set_ResolveAlias(Nullable`1<bool> value);
    internal bool IsSetResolveAlias();
    public string get_SourceVersion();
    public void set_SourceVersion(string value);
    internal bool IsSetSourceVersion();
    public string get_VersionDescription();
    public void set_VersionDescription(string value);
    internal bool IsSetVersionDescription();
}
public class Amazon.EC2.Model.CreateLaunchTemplateVersionResponse : AmazonWebServiceResponse {
    private LaunchTemplateVersion _launchTemplateVersion;
    private ValidationWarning _warning;
    public LaunchTemplateVersion LaunchTemplateVersion { get; public set; }
    public ValidationWarning Warning { get; public set; }
    public LaunchTemplateVersion get_LaunchTemplateVersion();
    public void set_LaunchTemplateVersion(LaunchTemplateVersion value);
    internal bool IsSetLaunchTemplateVersion();
    public ValidationWarning get_Warning();
    public void set_Warning(ValidationWarning value);
    internal bool IsSetWarning();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _destinationPrefixListId;
    private string _localGatewayRouteTableId;
    private string _localGatewayVirtualInterfaceGroupId;
    private string _networkInterfaceId;
    public string DestinationCidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    public string LocalGatewayVirtualInterfaceGroupId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_LocalGatewayVirtualInterfaceGroupId();
    public void set_LocalGatewayVirtualInterfaceGroupId(string value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroupId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteResponse : AmazonWebServiceResponse {
    private LocalGatewayRoute _route;
    public LocalGatewayRoute Route { get; public set; }
    public LocalGatewayRoute get_Route();
    public void set_Route(LocalGatewayRoute value);
    internal bool IsSetRoute();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteTableRequest : AmazonEC2Request {
    private string _localGatewayId;
    private LocalGatewayRouteTableMode _mode;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string LocalGatewayId { get; public set; }
    public LocalGatewayRouteTableMode Mode { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public LocalGatewayRouteTableMode get_Mode();
    public void set_Mode(LocalGatewayRouteTableMode value);
    internal bool IsSetMode();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteTableResponse : AmazonWebServiceResponse {
    private LocalGatewayRouteTable _localGatewayRouteTable;
    public LocalGatewayRouteTable LocalGatewayRouteTable { get; public set; }
    public LocalGatewayRouteTable get_LocalGatewayRouteTable();
    public void set_LocalGatewayRouteTable(LocalGatewayRouteTable value);
    internal bool IsSetLocalGatewayRouteTable();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest : AmazonEC2Request {
    private string _localGatewayRouteTableId;
    private string _localGatewayVirtualInterfaceGroupId;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayVirtualInterfaceGroupId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_LocalGatewayVirtualInterfaceGroupId();
    public void set_LocalGatewayVirtualInterfaceGroupId(string value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroupId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse : AmazonWebServiceResponse {
    private LocalGatewayRouteTableVirtualInterfaceGroupAssociation _localGatewayRouteTableVirtualInterfaceGroupAssociation;
    public LocalGatewayRouteTableVirtualInterfaceGroupAssociation LocalGatewayRouteTableVirtualInterfaceGroupAssociation { get; public set; }
    public LocalGatewayRouteTableVirtualInterfaceGroupAssociation get_LocalGatewayRouteTableVirtualInterfaceGroupAssociation();
    public void set_LocalGatewayRouteTableVirtualInterfaceGroupAssociation(LocalGatewayRouteTableVirtualInterfaceGroupAssociation value);
    internal bool IsSetLocalGatewayRouteTableVirtualInterfaceGroupAssociation();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteTableVpcAssociationRequest : AmazonEC2Request {
    private string _localGatewayRouteTableId;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateLocalGatewayRouteTableVpcAssociationResponse : AmazonWebServiceResponse {
    private LocalGatewayRouteTableVpcAssociation _localGatewayRouteTableVpcAssociation;
    public LocalGatewayRouteTableVpcAssociation LocalGatewayRouteTableVpcAssociation { get; public set; }
    public LocalGatewayRouteTableVpcAssociation get_LocalGatewayRouteTableVpcAssociation();
    public void set_LocalGatewayRouteTableVpcAssociation(LocalGatewayRouteTableVpcAssociation value);
    internal bool IsSetLocalGatewayRouteTableVpcAssociation();
}
public class Amazon.EC2.Model.CreateManagedPrefixListRequest : AmazonEC2Request {
    private string _addressFamily;
    private string _clientToken;
    private List`1<AddPrefixListEntry> _entries;
    private Nullable`1<int> _maxEntries;
    private string _prefixListName;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string AddressFamily { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<AddPrefixListEntry> Entries { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxEntries { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListName { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_AddressFamily();
    public void set_AddressFamily(string value);
    internal bool IsSetAddressFamily();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<AddPrefixListEntry> get_Entries();
    public void set_Entries(List`1<AddPrefixListEntry> value);
    internal bool IsSetEntries();
    public Nullable`1<int> get_MaxEntries();
    public void set_MaxEntries(Nullable`1<int> value);
    internal bool IsSetMaxEntries();
    public string get_PrefixListName();
    public void set_PrefixListName(string value);
    internal bool IsSetPrefixListName();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateManagedPrefixListResponse : AmazonWebServiceResponse {
    private ManagedPrefixList _prefixList;
    public ManagedPrefixList PrefixList { get; public set; }
    public ManagedPrefixList get_PrefixList();
    public void set_PrefixList(ManagedPrefixList value);
    internal bool IsSetPrefixList();
}
public class Amazon.EC2.Model.CreateNatGatewayRequest : AmazonEC2Request {
    private string _allocationId;
    private string _clientToken;
    private ConnectivityType _connectivityType;
    private string _privateIpAddress;
    private List`1<string> _secondaryAllocationIds;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private List`1<string> _secondaryPrivateIpAddresses;
    private string _subnetId;
    private List`1<TagSpecification> _tagSpecifications;
    public string AllocationId { get; public set; }
    public string ClientToken { get; public set; }
    public ConnectivityType ConnectivityType { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<string> SecondaryAllocationIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SecondaryPrivateIpAddressCount { get; public set; }
    public List`1<string> SecondaryPrivateIpAddresses { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public ConnectivityType get_ConnectivityType();
    public void set_ConnectivityType(ConnectivityType value);
    internal bool IsSetConnectivityType();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<string> get_SecondaryAllocationIds();
    public void set_SecondaryAllocationIds(List`1<string> value);
    internal bool IsSetSecondaryAllocationIds();
    public Nullable`1<int> get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public List`1<string> get_SecondaryPrivateIpAddresses();
    public void set_SecondaryPrivateIpAddresses(List`1<string> value);
    internal bool IsSetSecondaryPrivateIpAddresses();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateNatGatewayResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private NatGateway _natGateway;
    public string ClientToken { get; public set; }
    public NatGateway NatGateway { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public NatGateway get_NatGateway();
    public void set_NatGateway(NatGateway value);
    internal bool IsSetNatGateway();
}
public class Amazon.EC2.Model.CreateNetworkAclEntryRequest : AmazonEC2Request {
    private string _cidrBlock;
    private Nullable`1<bool> _egress;
    private IcmpTypeCode _icmpTypeCode;
    private string _ipv6CidrBlock;
    private string _networkAclId;
    private PortRange _portRange;
    private string _protocol;
    private RuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    public string CidrBlock { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Egress { get; public set; }
    public IcmpTypeCode IcmpTypeCode { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    [AWSPropertyAttribute]
public string NetworkAclId { get; public set; }
    public PortRange PortRange { get; public set; }
    [AWSPropertyAttribute]
public string Protocol { get; public set; }
    [AWSPropertyAttribute]
public RuleAction RuleAction { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RuleNumber { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public Nullable`1<bool> get_Egress();
    public void set_Egress(Nullable`1<bool> value);
    internal bool IsSetEgress();
    public IcmpTypeCode get_IcmpTypeCode();
    public void set_IcmpTypeCode(IcmpTypeCode value);
    internal bool IsSetIcmpTypeCode();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public RuleAction get_RuleAction();
    public void set_RuleAction(RuleAction value);
    internal bool IsSetRuleAction();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.CreateNetworkAclEntryResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CreateNetworkAclRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    public string ClientToken { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateNetworkAclResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private NetworkAcl _networkAcl;
    public string ClientToken { get; public set; }
    public NetworkAcl NetworkAcl { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public NetworkAcl get_NetworkAcl();
    public void set_NetworkAcl(NetworkAcl value);
    internal bool IsSetNetworkAcl();
}
public class Amazon.EC2.Model.CreateNetworkInsightsAccessScopeRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<AccessScopePathRequest> _excludePaths;
    private List`1<AccessScopePathRequest> _matchPaths;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public List`1<AccessScopePathRequest> ExcludePaths { get; public set; }
    public List`1<AccessScopePathRequest> MatchPaths { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<AccessScopePathRequest> get_ExcludePaths();
    public void set_ExcludePaths(List`1<AccessScopePathRequest> value);
    internal bool IsSetExcludePaths();
    public List`1<AccessScopePathRequest> get_MatchPaths();
    public void set_MatchPaths(List`1<AccessScopePathRequest> value);
    internal bool IsSetMatchPaths();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateNetworkInsightsAccessScopeResponse : AmazonWebServiceResponse {
    private NetworkInsightsAccessScope _networkInsightsAccessScope;
    private NetworkInsightsAccessScopeContent _networkInsightsAccessScopeContent;
    public NetworkInsightsAccessScope NetworkInsightsAccessScope { get; public set; }
    public NetworkInsightsAccessScopeContent NetworkInsightsAccessScopeContent { get; public set; }
    public NetworkInsightsAccessScope get_NetworkInsightsAccessScope();
    public void set_NetworkInsightsAccessScope(NetworkInsightsAccessScope value);
    internal bool IsSetNetworkInsightsAccessScope();
    public NetworkInsightsAccessScopeContent get_NetworkInsightsAccessScopeContent();
    public void set_NetworkInsightsAccessScopeContent(NetworkInsightsAccessScopeContent value);
    internal bool IsSetNetworkInsightsAccessScopeContent();
}
public class Amazon.EC2.Model.CreateNetworkInsightsPathRequest : AmazonEC2Request {
    private string _clientToken;
    private string _destination;
    private string _destinationIp;
    private Nullable`1<int> _destinationPort;
    private PathRequestFilter _filterAtDestination;
    private PathRequestFilter _filterAtSource;
    private Protocol _protocol;
    private string _source;
    private string _sourceIp;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Destination { get; public set; }
    [AWSPropertyAttribute]
public string DestinationIp { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> DestinationPort { get; public set; }
    public PathRequestFilter FilterAtDestination { get; public set; }
    public PathRequestFilter FilterAtSource { get; public set; }
    [AWSPropertyAttribute]
public Protocol Protocol { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    [AWSPropertyAttribute]
public string SourceIp { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public string get_DestinationIp();
    public void set_DestinationIp(string value);
    internal bool IsSetDestinationIp();
    public Nullable`1<int> get_DestinationPort();
    public void set_DestinationPort(Nullable`1<int> value);
    internal bool IsSetDestinationPort();
    public PathRequestFilter get_FilterAtDestination();
    public void set_FilterAtDestination(PathRequestFilter value);
    internal bool IsSetFilterAtDestination();
    public PathRequestFilter get_FilterAtSource();
    public void set_FilterAtSource(PathRequestFilter value);
    internal bool IsSetFilterAtSource();
    public Protocol get_Protocol();
    public void set_Protocol(Protocol value);
    internal bool IsSetProtocol();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceIp();
    public void set_SourceIp(string value);
    internal bool IsSetSourceIp();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateNetworkInsightsPathResponse : AmazonWebServiceResponse {
    private NetworkInsightsPath _networkInsightsPath;
    public NetworkInsightsPath NetworkInsightsPath { get; public set; }
    public NetworkInsightsPath get_NetworkInsightsPath();
    public void set_NetworkInsightsPath(NetworkInsightsPath value);
    internal bool IsSetNetworkInsightsPath();
}
public class Amazon.EC2.Model.CreateNetworkInterfacePermissionRequest : AmazonEC2Request {
    private string _awsAccountId;
    private string _awsService;
    private string _networkInterfaceId;
    private InterfacePermissionType _permission;
    public string AwsAccountId { get; public set; }
    public string AwsService { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public InterfacePermissionType Permission { get; public set; }
    public string get_AwsAccountId();
    public void set_AwsAccountId(string value);
    internal bool IsSetAwsAccountId();
    public string get_AwsService();
    public void set_AwsService(string value);
    internal bool IsSetAwsService();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public InterfacePermissionType get_Permission();
    public void set_Permission(InterfacePermissionType value);
    internal bool IsSetPermission();
}
public class Amazon.EC2.Model.CreateNetworkInterfacePermissionResponse : AmazonWebServiceResponse {
    private NetworkInterfacePermission _interfacePermission;
    public NetworkInterfacePermission InterfacePermission { get; public set; }
    public NetworkInterfacePermission get_InterfacePermission();
    public void set_InterfacePermission(NetworkInterfacePermission value);
    internal bool IsSetInterfacePermission();
}
public class Amazon.EC2.Model.CreateNetworkInterfaceRequest : AmazonEC2Request {
    private string _clientToken;
    private ConnectionTrackingSpecificationRequest _connectionTrackingSpecification;
    private string _description;
    private Nullable`1<bool> _enablePrimaryIpv6;
    private List`1<string> _groups;
    private NetworkInterfaceCreationType _interfaceType;
    private Nullable`1<int> _ipv4PrefixCount;
    private List`1<Ipv4PrefixSpecificationRequest> _ipv4Prefixes;
    private Nullable`1<int> _ipv6AddressCount;
    private List`1<InstanceIpv6Address> _ipv6Addresses;
    private Nullable`1<int> _ipv6PrefixCount;
    private List`1<Ipv6PrefixSpecificationRequest> _ipv6Prefixes;
    private string _privateIpAddress;
    private List`1<PrivateIpAddressSpecification> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private string _subnetId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public ConnectionTrackingSpecificationRequest ConnectionTrackingSpecification { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> EnablePrimaryIpv6 { get; public set; }
    public List`1<string> Groups { get; public set; }
    public NetworkInterfaceCreationType InterfaceType { get; public set; }
    public Nullable`1<int> Ipv4PrefixCount { get; public set; }
    public List`1<Ipv4PrefixSpecificationRequest> Ipv4Prefixes { get; public set; }
    public Nullable`1<int> Ipv6AddressCount { get; public set; }
    public List`1<InstanceIpv6Address> Ipv6Addresses { get; public set; }
    public Nullable`1<int> Ipv6PrefixCount { get; public set; }
    public List`1<Ipv6PrefixSpecificationRequest> Ipv6Prefixes { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<PrivateIpAddressSpecification> PrivateIpAddresses { get; public set; }
    public Nullable`1<int> SecondaryPrivateIpAddressCount { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public ConnectionTrackingSpecificationRequest get_ConnectionTrackingSpecification();
    public void set_ConnectionTrackingSpecification(ConnectionTrackingSpecificationRequest value);
    internal bool IsSetConnectionTrackingSpecification();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_EnablePrimaryIpv6();
    public void set_EnablePrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetEnablePrimaryIpv6();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public NetworkInterfaceCreationType get_InterfaceType();
    public void set_InterfaceType(NetworkInterfaceCreationType value);
    internal bool IsSetInterfaceType();
    public Nullable`1<int> get_Ipv4PrefixCount();
    public void set_Ipv4PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv4PrefixCount();
    public List`1<Ipv4PrefixSpecificationRequest> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<Ipv4PrefixSpecificationRequest> value);
    internal bool IsSetIpv4Prefixes();
    public Nullable`1<int> get_Ipv6AddressCount();
    public void set_Ipv6AddressCount(Nullable`1<int> value);
    internal bool IsSetIpv6AddressCount();
    public List`1<InstanceIpv6Address> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<InstanceIpv6Address> value);
    internal bool IsSetIpv6Addresses();
    public Nullable`1<int> get_Ipv6PrefixCount();
    public void set_Ipv6PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv6PrefixCount();
    public List`1<Ipv6PrefixSpecificationRequest> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<Ipv6PrefixSpecificationRequest> value);
    internal bool IsSetIpv6Prefixes();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<PrivateIpAddressSpecification> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<PrivateIpAddressSpecification> value);
    internal bool IsSetPrivateIpAddresses();
    public Nullable`1<int> get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateNetworkInterfaceResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private NetworkInterface _networkInterface;
    public string ClientToken { get; public set; }
    public NetworkInterface NetworkInterface { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public NetworkInterface get_NetworkInterface();
    public void set_NetworkInterface(NetworkInterface value);
    internal bool IsSetNetworkInterface();
}
public class Amazon.EC2.Model.CreatePlacementGroupRequest : AmazonEC2Request {
    private string _groupName;
    private Nullable`1<int> _partitionCount;
    private SpreadLevel _spreadLevel;
    private PlacementStrategy _strategy;
    private List`1<TagSpecification> _tagSpecifications;
    public string GroupName { get; public set; }
    public Nullable`1<int> PartitionCount { get; public set; }
    public SpreadLevel SpreadLevel { get; public set; }
    public PlacementStrategy Strategy { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public CreatePlacementGroupRequest(string groupName, PlacementStrategy strategy);
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Nullable`1<int> get_PartitionCount();
    public void set_PartitionCount(Nullable`1<int> value);
    internal bool IsSetPartitionCount();
    public SpreadLevel get_SpreadLevel();
    public void set_SpreadLevel(SpreadLevel value);
    internal bool IsSetSpreadLevel();
    public PlacementStrategy get_Strategy();
    public void set_Strategy(PlacementStrategy value);
    internal bool IsSetStrategy();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreatePlacementGroupResponse : AmazonWebServiceResponse {
    private PlacementGroup _placementGroup;
    public PlacementGroup PlacementGroup { get; public set; }
    public PlacementGroup get_PlacementGroup();
    public void set_PlacementGroup(PlacementGroup value);
    internal bool IsSetPlacementGroup();
}
public class Amazon.EC2.Model.CreatePublicIpv4PoolRequest : AmazonEC2Request {
    private string _networkBorderGroup;
    private List`1<TagSpecification> _tagSpecifications;
    public string NetworkBorderGroup { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreatePublicIpv4PoolResponse : AmazonWebServiceResponse {
    private string _poolId;
    public string PoolId { get; public set; }
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.CreateReplaceRootVolumeTaskRequest : AmazonEC2Request {
    private string _clientToken;
    private Nullable`1<bool> _deleteReplacedRootVolume;
    private string _imageId;
    private string _instanceId;
    private string _snapshotId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public Nullable`1<bool> DeleteReplacedRootVolume { get; public set; }
    public string ImageId { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<bool> get_DeleteReplacedRootVolume();
    public void set_DeleteReplacedRootVolume(Nullable`1<bool> value);
    internal bool IsSetDeleteReplacedRootVolume();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateReplaceRootVolumeTaskResponse : AmazonWebServiceResponse {
    private ReplaceRootVolumeTask _replaceRootVolumeTask;
    public ReplaceRootVolumeTask ReplaceRootVolumeTask { get; public set; }
    public ReplaceRootVolumeTask get_ReplaceRootVolumeTask();
    public void set_ReplaceRootVolumeTask(ReplaceRootVolumeTask value);
    internal bool IsSetReplaceRootVolumeTask();
}
public class Amazon.EC2.Model.CreateReservedInstancesListingRequest : AmazonEC2Request {
    private string _clientToken;
    private Nullable`1<int> _instanceCount;
    private List`1<PriceScheduleSpecification> _priceSchedules;
    private string _reservedInstancesId;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> InstanceCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<PriceScheduleSpecification> PriceSchedules { get; public set; }
    [AWSPropertyAttribute]
public string ReservedInstancesId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public List`1<PriceScheduleSpecification> get_PriceSchedules();
    public void set_PriceSchedules(List`1<PriceScheduleSpecification> value);
    internal bool IsSetPriceSchedules();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
}
public class Amazon.EC2.Model.CreateReservedInstancesListingResponse : AmazonWebServiceResponse {
    private List`1<ReservedInstancesListing> _reservedInstancesListings;
    public List`1<ReservedInstancesListing> ReservedInstancesListings { get; public set; }
    public List`1<ReservedInstancesListing> get_ReservedInstancesListings();
    public void set_ReservedInstancesListings(List`1<ReservedInstancesListing> value);
    internal bool IsSetReservedInstancesListings();
}
public class Amazon.EC2.Model.CreateRestoreImageTaskRequest : AmazonEC2Request {
    private string _bucket;
    private string _name;
    private string _objectKey;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public string ObjectKey { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_ObjectKey();
    public void set_ObjectKey(string value);
    internal bool IsSetObjectKey();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateRestoreImageTaskResponse : AmazonWebServiceResponse {
    private string _imageId;
    public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.CreateRouteRequest : AmazonEC2Request {
    private string _carrierGatewayId;
    private string _coreNetworkArn;
    private string _destinationCidrBlock;
    private string _destinationIpv6CidrBlock;
    private string _destinationPrefixListId;
    private string _egressOnlyInternetGatewayId;
    private string _gatewayId;
    private string _instanceId;
    private string _localGatewayId;
    private string _natGatewayId;
    private string _networkInterfaceId;
    private string _routeTableId;
    private string _transitGatewayId;
    private string _vpcEndpointId;
    private string _vpcPeeringConnectionId;
    public string CarrierGatewayId { get; public set; }
    public string CoreNetworkArn { get; public set; }
    public string DestinationCidrBlock { get; public set; }
    public string DestinationIpv6CidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    public string EgressOnlyInternetGatewayId { get; public set; }
    public string GatewayId { get; public set; }
    public string InstanceId { get; public set; }
    public string LocalGatewayId { get; public set; }
    public string NatGatewayId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string VpcEndpointId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_CarrierGatewayId();
    public void set_CarrierGatewayId(string value);
    internal bool IsSetCarrierGatewayId();
    public string get_CoreNetworkArn();
    public void set_CoreNetworkArn(string value);
    internal bool IsSetCoreNetworkArn();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationIpv6CidrBlock();
    public void set_DestinationIpv6CidrBlock(string value);
    internal bool IsSetDestinationIpv6CidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_EgressOnlyInternetGatewayId();
    public void set_EgressOnlyInternetGatewayId(string value);
    internal bool IsSetEgressOnlyInternetGatewayId();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.CreateRouteResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.CreateRouteTableRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    public string ClientToken { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateRouteTableResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private RouteTable _routeTable;
    public string ClientToken { get; public set; }
    public RouteTable RouteTable { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public RouteTable get_RouteTable();
    public void set_RouteTable(RouteTable value);
    internal bool IsSetRouteTable();
}
public class Amazon.EC2.Model.CreateSecurityGroupRequest : AmazonEC2Request {
    private string _description;
    private string _groupName;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string VpcId { get; public set; }
    public CreateSecurityGroupRequest(string groupName, string description);
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateSecurityGroupResponse : AmazonWebServiceResponse {
    private string _groupId;
    private List`1<Tag> _tags;
    public string GroupId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.CreateSnapshotRequest : AmazonEC2Request {
    private string _description;
    private string _outpostArn;
    private List`1<TagSpecification> _tagSpecifications;
    private string _volumeId;
    public string Description { get; public set; }
    public string OutpostArn { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public CreateSnapshotRequest(string volumeId, string description);
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.CreateSnapshotResponse : AmazonWebServiceResponse {
    private Snapshot _snapshot;
    public Snapshot Snapshot { get; public set; }
    public Snapshot get_Snapshot();
    public void set_Snapshot(Snapshot value);
    internal bool IsSetSnapshot();
}
public class Amazon.EC2.Model.CreateSnapshotsRequest : AmazonEC2Request {
    private CopyTagsFromSource _copyTagsFromSource;
    private string _description;
    private InstanceSpecification _instanceSpecification;
    private string _outpostArn;
    private List`1<TagSpecification> _tagSpecifications;
    public CopyTagsFromSource CopyTagsFromSource { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public InstanceSpecification InstanceSpecification { get; public set; }
    public string OutpostArn { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public CopyTagsFromSource get_CopyTagsFromSource();
    public void set_CopyTagsFromSource(CopyTagsFromSource value);
    internal bool IsSetCopyTagsFromSource();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public InstanceSpecification get_InstanceSpecification();
    public void set_InstanceSpecification(InstanceSpecification value);
    internal bool IsSetInstanceSpecification();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateSnapshotsResponse : AmazonWebServiceResponse {
    private List`1<SnapshotInfo> _snapshots;
    public List`1<SnapshotInfo> Snapshots { get; public set; }
    public List`1<SnapshotInfo> get_Snapshots();
    public void set_Snapshots(List`1<SnapshotInfo> value);
    internal bool IsSetSnapshots();
}
public class Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest : AmazonEC2Request {
    private string _bucket;
    private string _prefix;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string Prefix { get; public set; }
    public CreateSpotDatafeedSubscriptionRequest(string bucket);
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse : AmazonWebServiceResponse {
    private SpotDatafeedSubscription _spotDatafeedSubscription;
    public SpotDatafeedSubscription SpotDatafeedSubscription { get; public set; }
    public SpotDatafeedSubscription get_SpotDatafeedSubscription();
    public void set_SpotDatafeedSubscription(SpotDatafeedSubscription value);
    internal bool IsSetSpotDatafeedSubscription();
}
public class Amazon.EC2.Model.CreateStoreImageTaskRequest : AmazonEC2Request {
    private string _bucket;
    private string _imageId;
    private List`1<S3ObjectTag> _s3ObjectTags;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public List`1<S3ObjectTag> S3ObjectTags { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public List`1<S3ObjectTag> get_S3ObjectTags();
    public void set_S3ObjectTags(List`1<S3ObjectTag> value);
    internal bool IsSetS3ObjectTags();
}
public class Amazon.EC2.Model.CreateStoreImageTaskResponse : AmazonWebServiceResponse {
    private string _objectKey;
    public string ObjectKey { get; public set; }
    public string get_ObjectKey();
    public void set_ObjectKey(string value);
    internal bool IsSetObjectKey();
}
public class Amazon.EC2.Model.CreateSubnetCidrReservationRequest : AmazonEC2Request {
    private string _cidr;
    private string _description;
    private SubnetCidrReservationType _reservationType;
    private string _subnetId;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public SubnetCidrReservationType ReservationType { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public SubnetCidrReservationType get_ReservationType();
    public void set_ReservationType(SubnetCidrReservationType value);
    internal bool IsSetReservationType();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateSubnetCidrReservationResponse : AmazonWebServiceResponse {
    private SubnetCidrReservation _subnetCidrReservation;
    public SubnetCidrReservation SubnetCidrReservation { get; public set; }
    public SubnetCidrReservation get_SubnetCidrReservation();
    public void set_SubnetCidrReservation(SubnetCidrReservation value);
    internal bool IsSetSubnetCidrReservation();
}
public class Amazon.EC2.Model.CreateSubnetRequest : AmazonEC2Request {
    private string _availabilityZone;
    private string _availabilityZoneId;
    private string _cidrBlock;
    private string _ipv4IpamPoolId;
    private Nullable`1<int> _ipv4NetmaskLength;
    private string _ipv6CidrBlock;
    private string _ipv6IpamPoolId;
    private Nullable`1<bool> _ipv6Native;
    private Nullable`1<int> _ipv6NetmaskLength;
    private string _outpostArn;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    public string AvailabilityZone { get; public set; }
    public string AvailabilityZoneId { get; public set; }
    public string CidrBlock { get; public set; }
    public string Ipv4IpamPoolId { get; public set; }
    public Nullable`1<int> Ipv4NetmaskLength { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    public string Ipv6IpamPoolId { get; public set; }
    public Nullable`1<bool> Ipv6Native { get; public set; }
    public Nullable`1<int> Ipv6NetmaskLength { get; public set; }
    public string OutpostArn { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public CreateSubnetRequest(string vpcId, string cidrBlock);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public string get_Ipv4IpamPoolId();
    public void set_Ipv4IpamPoolId(string value);
    internal bool IsSetIpv4IpamPoolId();
    public Nullable`1<int> get_Ipv4NetmaskLength();
    public void set_Ipv4NetmaskLength(Nullable`1<int> value);
    internal bool IsSetIpv4NetmaskLength();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public string get_Ipv6IpamPoolId();
    public void set_Ipv6IpamPoolId(string value);
    internal bool IsSetIpv6IpamPoolId();
    public Nullable`1<bool> get_Ipv6Native();
    public void set_Ipv6Native(Nullable`1<bool> value);
    internal bool IsSetIpv6Native();
    public Nullable`1<int> get_Ipv6NetmaskLength();
    public void set_Ipv6NetmaskLength(Nullable`1<int> value);
    internal bool IsSetIpv6NetmaskLength();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateSubnetResponse : AmazonWebServiceResponse {
    private Subnet _subnet;
    public Subnet Subnet { get; public set; }
    public Subnet get_Subnet();
    public void set_Subnet(Subnet value);
    internal bool IsSetSubnet();
}
public class Amazon.EC2.Model.CreateTagsRequest : AmazonEC2Request {
    private List`1<string> _resources;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<string> Resources { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public CreateTagsRequest(List`1<string> resources, List`1<Tag> tags);
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.CreateTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CreateTrafficMirrorFilterRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateTrafficMirrorFilterResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private TrafficMirrorFilter _trafficMirrorFilter;
    public string ClientToken { get; public set; }
    public TrafficMirrorFilter TrafficMirrorFilter { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public TrafficMirrorFilter get_TrafficMirrorFilter();
    public void set_TrafficMirrorFilter(TrafficMirrorFilter value);
    internal bool IsSetTrafficMirrorFilter();
}
public class Amazon.EC2.Model.CreateTrafficMirrorFilterRuleRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _destinationCidrBlock;
    private TrafficMirrorPortRangeRequest _destinationPortRange;
    private Nullable`1<int> _protocol;
    private TrafficMirrorRuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    private string _sourceCidrBlock;
    private TrafficMirrorPortRangeRequest _sourcePortRange;
    private List`1<TagSpecification> _tagSpecifications;
    private TrafficDirection _trafficDirection;
    private string _trafficMirrorFilterId;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    public TrafficMirrorPortRangeRequest DestinationPortRange { get; public set; }
    public Nullable`1<int> Protocol { get; public set; }
    [AWSPropertyAttribute]
public TrafficMirrorRuleAction RuleAction { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RuleNumber { get; public set; }
    [AWSPropertyAttribute]
public string SourceCidrBlock { get; public set; }
    public TrafficMirrorPortRangeRequest SourcePortRange { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public TrafficDirection TrafficDirection { get; public set; }
    [AWSPropertyAttribute]
public string TrafficMirrorFilterId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public TrafficMirrorPortRangeRequest get_DestinationPortRange();
    public void set_DestinationPortRange(TrafficMirrorPortRangeRequest value);
    internal bool IsSetDestinationPortRange();
    public Nullable`1<int> get_Protocol();
    public void set_Protocol(Nullable`1<int> value);
    internal bool IsSetProtocol();
    public TrafficMirrorRuleAction get_RuleAction();
    public void set_RuleAction(TrafficMirrorRuleAction value);
    internal bool IsSetRuleAction();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
    public string get_SourceCidrBlock();
    public void set_SourceCidrBlock(string value);
    internal bool IsSetSourceCidrBlock();
    public TrafficMirrorPortRangeRequest get_SourcePortRange();
    public void set_SourcePortRange(TrafficMirrorPortRangeRequest value);
    internal bool IsSetSourcePortRange();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public TrafficDirection get_TrafficDirection();
    public void set_TrafficDirection(TrafficDirection value);
    internal bool IsSetTrafficDirection();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
}
public class Amazon.EC2.Model.CreateTrafficMirrorFilterRuleResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private TrafficMirrorFilterRule _trafficMirrorFilterRule;
    public string ClientToken { get; public set; }
    public TrafficMirrorFilterRule TrafficMirrorFilterRule { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public TrafficMirrorFilterRule get_TrafficMirrorFilterRule();
    public void set_TrafficMirrorFilterRule(TrafficMirrorFilterRule value);
    internal bool IsSetTrafficMirrorFilterRule();
}
public class Amazon.EC2.Model.CreateTrafficMirrorSessionRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _networkInterfaceId;
    private Nullable`1<int> _packetLength;
    private Nullable`1<int> _sessionNumber;
    private List`1<TagSpecification> _tagSpecifications;
    private string _trafficMirrorFilterId;
    private string _trafficMirrorTargetId;
    private Nullable`1<int> _virtualNetworkId;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public Nullable`1<int> PacketLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SessionNumber { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TrafficMirrorFilterId { get; public set; }
    [AWSPropertyAttribute]
public string TrafficMirrorTargetId { get; public set; }
    public Nullable`1<int> VirtualNetworkId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<int> get_PacketLength();
    public void set_PacketLength(Nullable`1<int> value);
    internal bool IsSetPacketLength();
    public Nullable`1<int> get_SessionNumber();
    public void set_SessionNumber(Nullable`1<int> value);
    internal bool IsSetSessionNumber();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
    public string get_TrafficMirrorTargetId();
    public void set_TrafficMirrorTargetId(string value);
    internal bool IsSetTrafficMirrorTargetId();
    public Nullable`1<int> get_VirtualNetworkId();
    public void set_VirtualNetworkId(Nullable`1<int> value);
    internal bool IsSetVirtualNetworkId();
}
public class Amazon.EC2.Model.CreateTrafficMirrorSessionResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private TrafficMirrorSession _trafficMirrorSession;
    public string ClientToken { get; public set; }
    public TrafficMirrorSession TrafficMirrorSession { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public TrafficMirrorSession get_TrafficMirrorSession();
    public void set_TrafficMirrorSession(TrafficMirrorSession value);
    internal bool IsSetTrafficMirrorSession();
}
public class Amazon.EC2.Model.CreateTrafficMirrorTargetRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _gatewayLoadBalancerEndpointId;
    private string _networkInterfaceId;
    private string _networkLoadBalancerArn;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public string GatewayLoadBalancerEndpointId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string NetworkLoadBalancerArn { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GatewayLoadBalancerEndpointId();
    public void set_GatewayLoadBalancerEndpointId(string value);
    internal bool IsSetGatewayLoadBalancerEndpointId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_NetworkLoadBalancerArn();
    public void set_NetworkLoadBalancerArn(string value);
    internal bool IsSetNetworkLoadBalancerArn();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateTrafficMirrorTargetResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private TrafficMirrorTarget _trafficMirrorTarget;
    public string ClientToken { get; public set; }
    public TrafficMirrorTarget TrafficMirrorTarget { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public TrafficMirrorTarget get_TrafficMirrorTarget();
    public void set_TrafficMirrorTarget(TrafficMirrorTarget value);
    internal bool IsSetTrafficMirrorTarget();
}
public class Amazon.EC2.Model.CreateTransitGatewayConnectPeerRequest : AmazonEC2Request {
    private TransitGatewayConnectRequestBgpOptions _bgpOptions;
    private List`1<string> _insideCidrBlocks;
    private string _peerAddress;
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayAddress;
    private string _transitGatewayAttachmentId;
    public TransitGatewayConnectRequestBgpOptions BgpOptions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InsideCidrBlocks { get; public set; }
    [AWSPropertyAttribute]
public string PeerAddress { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string TransitGatewayAddress { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public TransitGatewayConnectRequestBgpOptions get_BgpOptions();
    public void set_BgpOptions(TransitGatewayConnectRequestBgpOptions value);
    internal bool IsSetBgpOptions();
    public List`1<string> get_InsideCidrBlocks();
    public void set_InsideCidrBlocks(List`1<string> value);
    internal bool IsSetInsideCidrBlocks();
    public string get_PeerAddress();
    public void set_PeerAddress(string value);
    internal bool IsSetPeerAddress();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayAddress();
    public void set_TransitGatewayAddress(string value);
    internal bool IsSetTransitGatewayAddress();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.CreateTransitGatewayConnectPeerResponse : AmazonWebServiceResponse {
    private TransitGatewayConnectPeer _transitGatewayConnectPeer;
    public TransitGatewayConnectPeer TransitGatewayConnectPeer { get; public set; }
    public TransitGatewayConnectPeer get_TransitGatewayConnectPeer();
    public void set_TransitGatewayConnectPeer(TransitGatewayConnectPeer value);
    internal bool IsSetTransitGatewayConnectPeer();
}
public class Amazon.EC2.Model.CreateTransitGatewayConnectRequest : AmazonEC2Request {
    private CreateTransitGatewayConnectRequestOptions _options;
    private List`1<TagSpecification> _tagSpecifications;
    private string _transportTransitGatewayAttachmentId;
    [AWSPropertyAttribute]
public CreateTransitGatewayConnectRequestOptions Options { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TransportTransitGatewayAttachmentId { get; public set; }
    public CreateTransitGatewayConnectRequestOptions get_Options();
    public void set_Options(CreateTransitGatewayConnectRequestOptions value);
    internal bool IsSetOptions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransportTransitGatewayAttachmentId();
    public void set_TransportTransitGatewayAttachmentId(string value);
    internal bool IsSetTransportTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.CreateTransitGatewayConnectRequestOptions : object {
    private ProtocolValue _protocol;
    [AWSPropertyAttribute]
public ProtocolValue Protocol { get; public set; }
    public ProtocolValue get_Protocol();
    public void set_Protocol(ProtocolValue value);
    internal bool IsSetProtocol();
}
public class Amazon.EC2.Model.CreateTransitGatewayConnectResponse : AmazonWebServiceResponse {
    private TransitGatewayConnect _transitGatewayConnect;
    public TransitGatewayConnect TransitGatewayConnect { get; public set; }
    public TransitGatewayConnect get_TransitGatewayConnect();
    public void set_TransitGatewayConnect(TransitGatewayConnect value);
    internal bool IsSetTransitGatewayConnect();
}
public class Amazon.EC2.Model.CreateTransitGatewayMulticastDomainRequest : AmazonEC2Request {
    private CreateTransitGatewayMulticastDomainRequestOptions _options;
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayId;
    public CreateTransitGatewayMulticastDomainRequestOptions Options { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayId { get; public set; }
    public CreateTransitGatewayMulticastDomainRequestOptions get_Options();
    public void set_Options(CreateTransitGatewayMulticastDomainRequestOptions value);
    internal bool IsSetOptions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.CreateTransitGatewayMulticastDomainRequestOptions : object {
    private AutoAcceptSharedAssociationsValue _autoAcceptSharedAssociations;
    private Igmpv2SupportValue _igmpv2Support;
    private StaticSourcesSupportValue _staticSourcesSupport;
    public AutoAcceptSharedAssociationsValue AutoAcceptSharedAssociations { get; public set; }
    public Igmpv2SupportValue Igmpv2Support { get; public set; }
    public StaticSourcesSupportValue StaticSourcesSupport { get; public set; }
    public AutoAcceptSharedAssociationsValue get_AutoAcceptSharedAssociations();
    public void set_AutoAcceptSharedAssociations(AutoAcceptSharedAssociationsValue value);
    internal bool IsSetAutoAcceptSharedAssociations();
    public Igmpv2SupportValue get_Igmpv2Support();
    public void set_Igmpv2Support(Igmpv2SupportValue value);
    internal bool IsSetIgmpv2Support();
    public StaticSourcesSupportValue get_StaticSourcesSupport();
    public void set_StaticSourcesSupport(StaticSourcesSupportValue value);
    internal bool IsSetStaticSourcesSupport();
}
public class Amazon.EC2.Model.CreateTransitGatewayMulticastDomainResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDomain _transitGatewayMulticastDomain;
    public TransitGatewayMulticastDomain TransitGatewayMulticastDomain { get; public set; }
    public TransitGatewayMulticastDomain get_TransitGatewayMulticastDomain();
    public void set_TransitGatewayMulticastDomain(TransitGatewayMulticastDomain value);
    internal bool IsSetTransitGatewayMulticastDomain();
}
public class Amazon.EC2.Model.CreateTransitGatewayPeeringAttachmentRequest : AmazonEC2Request {
    private CreateTransitGatewayPeeringAttachmentRequestOptions _options;
    private string _peerAccountId;
    private string _peerRegion;
    private string _peerTransitGatewayId;
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayId;
    public CreateTransitGatewayPeeringAttachmentRequestOptions Options { get; public set; }
    [AWSPropertyAttribute]
public string PeerAccountId { get; public set; }
    [AWSPropertyAttribute]
public string PeerRegion { get; public set; }
    [AWSPropertyAttribute]
public string PeerTransitGatewayId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayId { get; public set; }
    public CreateTransitGatewayPeeringAttachmentRequestOptions get_Options();
    public void set_Options(CreateTransitGatewayPeeringAttachmentRequestOptions value);
    internal bool IsSetOptions();
    public string get_PeerAccountId();
    public void set_PeerAccountId(string value);
    internal bool IsSetPeerAccountId();
    public string get_PeerRegion();
    public void set_PeerRegion(string value);
    internal bool IsSetPeerRegion();
    public string get_PeerTransitGatewayId();
    public void set_PeerTransitGatewayId(string value);
    internal bool IsSetPeerTransitGatewayId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.CreateTransitGatewayPeeringAttachmentRequestOptions : object {
    private DynamicRoutingValue _dynamicRouting;
    public DynamicRoutingValue DynamicRouting { get; public set; }
    public DynamicRoutingValue get_DynamicRouting();
    public void set_DynamicRouting(DynamicRoutingValue value);
    internal bool IsSetDynamicRouting();
}
public class Amazon.EC2.Model.CreateTransitGatewayPeeringAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayPeeringAttachment _transitGatewayPeeringAttachment;
    public TransitGatewayPeeringAttachment TransitGatewayPeeringAttachment { get; public set; }
    public TransitGatewayPeeringAttachment get_TransitGatewayPeeringAttachment();
    public void set_TransitGatewayPeeringAttachment(TransitGatewayPeeringAttachment value);
    internal bool IsSetTransitGatewayPeeringAttachment();
}
public class Amazon.EC2.Model.CreateTransitGatewayPolicyTableRequest : AmazonEC2Request {
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayId;
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayId { get; public set; }
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.CreateTransitGatewayPolicyTableResponse : AmazonWebServiceResponse {
    private TransitGatewayPolicyTable _transitGatewayPolicyTable;
    public TransitGatewayPolicyTable TransitGatewayPolicyTable { get; public set; }
    public TransitGatewayPolicyTable get_TransitGatewayPolicyTable();
    public void set_TransitGatewayPolicyTable(TransitGatewayPolicyTable value);
    internal bool IsSetTransitGatewayPolicyTable();
}
public class Amazon.EC2.Model.CreateTransitGatewayPrefixListReferenceRequest : AmazonEC2Request {
    private Nullable`1<bool> _blackhole;
    private string _prefixListId;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableId;
    public Nullable`1<bool> Blackhole { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public Nullable`1<bool> get_Blackhole();
    public void set_Blackhole(Nullable`1<bool> value);
    internal bool IsSetBlackhole();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.CreateTransitGatewayPrefixListReferenceResponse : AmazonWebServiceResponse {
    private TransitGatewayPrefixListReference _transitGatewayPrefixListReference;
    public TransitGatewayPrefixListReference TransitGatewayPrefixListReference { get; public set; }
    public TransitGatewayPrefixListReference get_TransitGatewayPrefixListReference();
    public void set_TransitGatewayPrefixListReference(TransitGatewayPrefixListReference value);
    internal bool IsSetTransitGatewayPrefixListReference();
}
public class Amazon.EC2.Model.CreateTransitGatewayRequest : AmazonEC2Request {
    private string _description;
    private TransitGatewayRequestOptions _options;
    private List`1<TagSpecification> _tagSpecifications;
    public string Description { get; public set; }
    public TransitGatewayRequestOptions Options { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public TransitGatewayRequestOptions get_Options();
    public void set_Options(TransitGatewayRequestOptions value);
    internal bool IsSetOptions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateTransitGatewayResponse : AmazonWebServiceResponse {
    private TransitGateway _transitGateway;
    public TransitGateway TransitGateway { get; public set; }
    public TransitGateway get_TransitGateway();
    public void set_TransitGateway(TransitGateway value);
    internal bool IsSetTransitGateway();
}
public class Amazon.EC2.Model.CreateTransitGatewayRouteRequest : AmazonEC2Request {
    private Nullable`1<bool> _blackhole;
    private string _destinationCidrBlock;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableId;
    public Nullable`1<bool> Blackhole { get; public set; }
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public Nullable`1<bool> get_Blackhole();
    public void set_Blackhole(Nullable`1<bool> value);
    internal bool IsSetBlackhole();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.CreateTransitGatewayRouteResponse : AmazonWebServiceResponse {
    private TransitGatewayRoute _route;
    public TransitGatewayRoute Route { get; public set; }
    public TransitGatewayRoute get_Route();
    public void set_Route(TransitGatewayRoute value);
    internal bool IsSetRoute();
}
public class Amazon.EC2.Model.CreateTransitGatewayRouteTableAnnouncementRequest : AmazonEC2Request {
    private string _peeringAttachmentId;
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayRouteTableId;
    [AWSPropertyAttribute]
public string PeeringAttachmentId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_PeeringAttachmentId();
    public void set_PeeringAttachmentId(string value);
    internal bool IsSetPeeringAttachmentId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.CreateTransitGatewayRouteTableAnnouncementResponse : AmazonWebServiceResponse {
    private TransitGatewayRouteTableAnnouncement _transitGatewayRouteTableAnnouncement;
    public TransitGatewayRouteTableAnnouncement TransitGatewayRouteTableAnnouncement { get; public set; }
    public TransitGatewayRouteTableAnnouncement get_TransitGatewayRouteTableAnnouncement();
    public void set_TransitGatewayRouteTableAnnouncement(TransitGatewayRouteTableAnnouncement value);
    internal bool IsSetTransitGatewayRouteTableAnnouncement();
}
public class Amazon.EC2.Model.CreateTransitGatewayRouteTableRequest : AmazonEC2Request {
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayId;
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayId { get; public set; }
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.CreateTransitGatewayRouteTableResponse : AmazonWebServiceResponse {
    private TransitGatewayRouteTable _transitGatewayRouteTable;
    public TransitGatewayRouteTable TransitGatewayRouteTable { get; public set; }
    public TransitGatewayRouteTable get_TransitGatewayRouteTable();
    public void set_TransitGatewayRouteTable(TransitGatewayRouteTable value);
    internal bool IsSetTransitGatewayRouteTable();
}
public class Amazon.EC2.Model.CreateTransitGatewayVpcAttachmentRequest : AmazonEC2Request {
    private CreateTransitGatewayVpcAttachmentRequestOptions _options;
    private List`1<string> _subnetIds;
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayId;
    private string _vpcId;
    public CreateTransitGatewayVpcAttachmentRequestOptions Options { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public CreateTransitGatewayVpcAttachmentRequestOptions get_Options();
    public void set_Options(CreateTransitGatewayVpcAttachmentRequestOptions value);
    internal bool IsSetOptions();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateTransitGatewayVpcAttachmentRequestOptions : object {
    private ApplianceModeSupportValue _applianceModeSupport;
    private DnsSupportValue _dnsSupport;
    private Ipv6SupportValue _ipv6Support;
    private SecurityGroupReferencingSupportValue _securityGroupReferencingSupport;
    public ApplianceModeSupportValue ApplianceModeSupport { get; public set; }
    public DnsSupportValue DnsSupport { get; public set; }
    public Ipv6SupportValue Ipv6Support { get; public set; }
    public SecurityGroupReferencingSupportValue SecurityGroupReferencingSupport { get; public set; }
    public ApplianceModeSupportValue get_ApplianceModeSupport();
    public void set_ApplianceModeSupport(ApplianceModeSupportValue value);
    internal bool IsSetApplianceModeSupport();
    public DnsSupportValue get_DnsSupport();
    public void set_DnsSupport(DnsSupportValue value);
    internal bool IsSetDnsSupport();
    public Ipv6SupportValue get_Ipv6Support();
    public void set_Ipv6Support(Ipv6SupportValue value);
    internal bool IsSetIpv6Support();
    public SecurityGroupReferencingSupportValue get_SecurityGroupReferencingSupport();
    public void set_SecurityGroupReferencingSupport(SecurityGroupReferencingSupportValue value);
    internal bool IsSetSecurityGroupReferencingSupport();
}
public class Amazon.EC2.Model.CreateTransitGatewayVpcAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayVpcAttachment _transitGatewayVpcAttachment;
    public TransitGatewayVpcAttachment TransitGatewayVpcAttachment { get; public set; }
    public TransitGatewayVpcAttachment get_TransitGatewayVpcAttachment();
    public void set_TransitGatewayVpcAttachment(TransitGatewayVpcAttachment value);
    internal bool IsSetTransitGatewayVpcAttachment();
}
public class Amazon.EC2.Model.CreateVerifiedAccessEndpointEniOptions : object {
    private string _networkInterfaceId;
    private Nullable`1<int> _port;
    private VerifiedAccessEndpointProtocol _protocol;
    public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public VerifiedAccessEndpointProtocol Protocol { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public VerifiedAccessEndpointProtocol get_Protocol();
    public void set_Protocol(VerifiedAccessEndpointProtocol value);
    internal bool IsSetProtocol();
}
public class Amazon.EC2.Model.CreateVerifiedAccessEndpointLoadBalancerOptions : object {
    private string _loadBalancerArn;
    private Nullable`1<int> _port;
    private VerifiedAccessEndpointProtocol _protocol;
    private List`1<string> _subnetIds;
    public string LoadBalancerArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public VerifiedAccessEndpointProtocol Protocol { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public VerifiedAccessEndpointProtocol get_Protocol();
    public void set_Protocol(VerifiedAccessEndpointProtocol value);
    internal bool IsSetProtocol();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.EC2.Model.CreateVerifiedAccessEndpointRequest : AmazonEC2Request {
    private string _applicationDomain;
    private VerifiedAccessEndpointAttachmentType _attachmentType;
    private string _clientToken;
    private string _description;
    private string _domainCertificateArn;
    private string _endpointDomainPrefix;
    private VerifiedAccessEndpointType _endpointType;
    private CreateVerifiedAccessEndpointLoadBalancerOptions _loadBalancerOptions;
    private CreateVerifiedAccessEndpointEniOptions _networkInterfaceOptions;
    private string _policyDocument;
    private List`1<string> _securityGroupIds;
    private VerifiedAccessSseSpecificationRequest _sseSpecification;
    private List`1<TagSpecification> _tagSpecifications;
    private string _verifiedAccessGroupId;
    [AWSPropertyAttribute]
public string ApplicationDomain { get; public set; }
    [AWSPropertyAttribute]
public VerifiedAccessEndpointAttachmentType AttachmentType { get; public set; }
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string DomainCertificateArn { get; public set; }
    [AWSPropertyAttribute]
public string EndpointDomainPrefix { get; public set; }
    [AWSPropertyAttribute]
public VerifiedAccessEndpointType EndpointType { get; public set; }
    public CreateVerifiedAccessEndpointLoadBalancerOptions LoadBalancerOptions { get; public set; }
    public CreateVerifiedAccessEndpointEniOptions NetworkInterfaceOptions { get; public set; }
    public string PolicyDocument { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public VerifiedAccessSseSpecificationRequest SseSpecification { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessGroupId { get; public set; }
    public string get_ApplicationDomain();
    public void set_ApplicationDomain(string value);
    internal bool IsSetApplicationDomain();
    public VerifiedAccessEndpointAttachmentType get_AttachmentType();
    public void set_AttachmentType(VerifiedAccessEndpointAttachmentType value);
    internal bool IsSetAttachmentType();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DomainCertificateArn();
    public void set_DomainCertificateArn(string value);
    internal bool IsSetDomainCertificateArn();
    public string get_EndpointDomainPrefix();
    public void set_EndpointDomainPrefix(string value);
    internal bool IsSetEndpointDomainPrefix();
    public VerifiedAccessEndpointType get_EndpointType();
    public void set_EndpointType(VerifiedAccessEndpointType value);
    internal bool IsSetEndpointType();
    public CreateVerifiedAccessEndpointLoadBalancerOptions get_LoadBalancerOptions();
    public void set_LoadBalancerOptions(CreateVerifiedAccessEndpointLoadBalancerOptions value);
    internal bool IsSetLoadBalancerOptions();
    public CreateVerifiedAccessEndpointEniOptions get_NetworkInterfaceOptions();
    public void set_NetworkInterfaceOptions(CreateVerifiedAccessEndpointEniOptions value);
    internal bool IsSetNetworkInterfaceOptions();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public VerifiedAccessSseSpecificationRequest get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationRequest value);
    internal bool IsSetSseSpecification();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
}
public class Amazon.EC2.Model.CreateVerifiedAccessEndpointResponse : AmazonWebServiceResponse {
    private VerifiedAccessEndpoint _verifiedAccessEndpoint;
    public VerifiedAccessEndpoint VerifiedAccessEndpoint { get; public set; }
    public VerifiedAccessEndpoint get_VerifiedAccessEndpoint();
    public void set_VerifiedAccessEndpoint(VerifiedAccessEndpoint value);
    internal bool IsSetVerifiedAccessEndpoint();
}
public class Amazon.EC2.Model.CreateVerifiedAccessGroupRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _policyDocument;
    private VerifiedAccessSseSpecificationRequest _sseSpecification;
    private List`1<TagSpecification> _tagSpecifications;
    private string _verifiedAccessInstanceId;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public string PolicyDocument { get; public set; }
    public VerifiedAccessSseSpecificationRequest SseSpecification { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessInstanceId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public VerifiedAccessSseSpecificationRequest get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationRequest value);
    internal bool IsSetSseSpecification();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.CreateVerifiedAccessGroupResponse : AmazonWebServiceResponse {
    private VerifiedAccessGroup _verifiedAccessGroup;
    public VerifiedAccessGroup VerifiedAccessGroup { get; public set; }
    public VerifiedAccessGroup get_VerifiedAccessGroup();
    public void set_VerifiedAccessGroup(VerifiedAccessGroup value);
    internal bool IsSetVerifiedAccessGroup();
}
public class Amazon.EC2.Model.CreateVerifiedAccessInstanceRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private Nullable`1<bool> _fipsEnabled;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> FIPSEnabled { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_FIPSEnabled();
    public void set_FIPSEnabled(Nullable`1<bool> value);
    internal bool IsSetFIPSEnabled();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateVerifiedAccessInstanceResponse : AmazonWebServiceResponse {
    private VerifiedAccessInstance _verifiedAccessInstance;
    public VerifiedAccessInstance VerifiedAccessInstance { get; public set; }
    public VerifiedAccessInstance get_VerifiedAccessInstance();
    public void set_VerifiedAccessInstance(VerifiedAccessInstance value);
    internal bool IsSetVerifiedAccessInstance();
}
public class Amazon.EC2.Model.CreateVerifiedAccessTrustProviderDeviceOptions : object {
    private string _publicSigningKeyUrl;
    private string _tenantId;
    public string PublicSigningKeyUrl { get; public set; }
    public string TenantId { get; public set; }
    public string get_PublicSigningKeyUrl();
    public void set_PublicSigningKeyUrl(string value);
    internal bool IsSetPublicSigningKeyUrl();
    public string get_TenantId();
    public void set_TenantId(string value);
    internal bool IsSetTenantId();
}
public class Amazon.EC2.Model.CreateVerifiedAccessTrustProviderOidcOptions : object {
    private string _authorizationEndpoint;
    private string _clientId;
    private string _clientSecret;
    private string _issuer;
    private string _scope;
    private string _tokenEndpoint;
    private string _userInfoEndpoint;
    public string AuthorizationEndpoint { get; public set; }
    public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ClientSecret { get; public set; }
    public string Issuer { get; public set; }
    public string Scope { get; public set; }
    public string TokenEndpoint { get; public set; }
    public string UserInfoEndpoint { get; public set; }
    public string get_AuthorizationEndpoint();
    public void set_AuthorizationEndpoint(string value);
    internal bool IsSetAuthorizationEndpoint();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientSecret();
    public void set_ClientSecret(string value);
    internal bool IsSetClientSecret();
    public string get_Issuer();
    public void set_Issuer(string value);
    internal bool IsSetIssuer();
    public string get_Scope();
    public void set_Scope(string value);
    internal bool IsSetScope();
    public string get_TokenEndpoint();
    public void set_TokenEndpoint(string value);
    internal bool IsSetTokenEndpoint();
    public string get_UserInfoEndpoint();
    public void set_UserInfoEndpoint(string value);
    internal bool IsSetUserInfoEndpoint();
}
public class Amazon.EC2.Model.CreateVerifiedAccessTrustProviderRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private CreateVerifiedAccessTrustProviderDeviceOptions _deviceOptions;
    private DeviceTrustProviderType _deviceTrustProviderType;
    private CreateVerifiedAccessTrustProviderOidcOptions _oidcOptions;
    private string _policyReferenceName;
    private VerifiedAccessSseSpecificationRequest _sseSpecification;
    private List`1<TagSpecification> _tagSpecifications;
    private TrustProviderType _trustProviderType;
    private UserTrustProviderType _userTrustProviderType;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public CreateVerifiedAccessTrustProviderDeviceOptions DeviceOptions { get; public set; }
    public DeviceTrustProviderType DeviceTrustProviderType { get; public set; }
    public CreateVerifiedAccessTrustProviderOidcOptions OidcOptions { get; public set; }
    [AWSPropertyAttribute]
public string PolicyReferenceName { get; public set; }
    public VerifiedAccessSseSpecificationRequest SseSpecification { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public TrustProviderType TrustProviderType { get; public set; }
    public UserTrustProviderType UserTrustProviderType { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public CreateVerifiedAccessTrustProviderDeviceOptions get_DeviceOptions();
    public void set_DeviceOptions(CreateVerifiedAccessTrustProviderDeviceOptions value);
    internal bool IsSetDeviceOptions();
    public DeviceTrustProviderType get_DeviceTrustProviderType();
    public void set_DeviceTrustProviderType(DeviceTrustProviderType value);
    internal bool IsSetDeviceTrustProviderType();
    public CreateVerifiedAccessTrustProviderOidcOptions get_OidcOptions();
    public void set_OidcOptions(CreateVerifiedAccessTrustProviderOidcOptions value);
    internal bool IsSetOidcOptions();
    public string get_PolicyReferenceName();
    public void set_PolicyReferenceName(string value);
    internal bool IsSetPolicyReferenceName();
    public VerifiedAccessSseSpecificationRequest get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationRequest value);
    internal bool IsSetSseSpecification();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public TrustProviderType get_TrustProviderType();
    public void set_TrustProviderType(TrustProviderType value);
    internal bool IsSetTrustProviderType();
    public UserTrustProviderType get_UserTrustProviderType();
    public void set_UserTrustProviderType(UserTrustProviderType value);
    internal bool IsSetUserTrustProviderType();
}
public class Amazon.EC2.Model.CreateVerifiedAccessTrustProviderResponse : AmazonWebServiceResponse {
    private VerifiedAccessTrustProvider _verifiedAccessTrustProvider;
    public VerifiedAccessTrustProvider VerifiedAccessTrustProvider { get; public set; }
    public VerifiedAccessTrustProvider get_VerifiedAccessTrustProvider();
    public void set_VerifiedAccessTrustProvider(VerifiedAccessTrustProvider value);
    internal bool IsSetVerifiedAccessTrustProvider();
}
public class Amazon.EC2.Model.CreateVolumePermission : object {
    private PermissionGroup _group;
    private string _userId;
    public PermissionGroup Group { get; public set; }
    public string UserId { get; public set; }
    public PermissionGroup get_Group();
    public void set_Group(PermissionGroup value);
    internal bool IsSetGroup();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
}
public class Amazon.EC2.Model.CreateVolumePermissionModifications : object {
    private List`1<CreateVolumePermission> _add;
    private List`1<CreateVolumePermission> _remove;
    public List`1<CreateVolumePermission> Add { get; public set; }
    public List`1<CreateVolumePermission> Remove { get; public set; }
    public List`1<CreateVolumePermission> get_Add();
    public void set_Add(List`1<CreateVolumePermission> value);
    internal bool IsSetAdd();
    public List`1<CreateVolumePermission> get_Remove();
    public void set_Remove(List`1<CreateVolumePermission> value);
    internal bool IsSetRemove();
}
public class Amazon.EC2.Model.CreateVolumeRequest : AmazonEC2Request {
    private string _availabilityZone;
    private string _clientToken;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiAttachEnabled;
    private string _outpostArn;
    private Nullable`1<int> _size;
    private string _snapshotId;
    private List`1<TagSpecification> _tagSpecifications;
    private Nullable`1<int> _throughput;
    private VolumeType _volumeType;
    [AWSPropertyAttribute]
public string AvailabilityZone { get; public set; }
    public string ClientToken { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiAttachEnabled { get; public set; }
    public string OutpostArn { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public Nullable`1<int> Throughput { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public CreateVolumeRequest(string availabilityZone, Nullable`1<int> size);
    public CreateVolumeRequest(string availabilityZone, string snapshotId);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiAttachEnabled();
    public void set_MultiAttachEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiAttachEnabled();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public Nullable`1<int> get_Size();
    public void set_Size(Nullable`1<int> value);
    internal bool IsSetSize();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public Nullable`1<int> get_Throughput();
    public void set_Throughput(Nullable`1<int> value);
    internal bool IsSetThroughput();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.CreateVolumeResponse : AmazonWebServiceResponse {
    private Volume _volume;
    public Volume Volume { get; public set; }
    public Volume get_Volume();
    public void set_Volume(Volume value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.CreateVpcEndpointConnectionNotificationRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<string> _connectionEvents;
    private string _connectionNotificationArn;
    private string _serviceId;
    private string _vpcEndpointId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ConnectionEvents { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionNotificationArn { get; public set; }
    public string ServiceId { get; public set; }
    public string VpcEndpointId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_ConnectionEvents();
    public void set_ConnectionEvents(List`1<string> value);
    internal bool IsSetConnectionEvents();
    public string get_ConnectionNotificationArn();
    public void set_ConnectionNotificationArn(string value);
    internal bool IsSetConnectionNotificationArn();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
}
public class Amazon.EC2.Model.CreateVpcEndpointConnectionNotificationResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private ConnectionNotification _connectionNotification;
    public string ClientToken { get; public set; }
    public ConnectionNotification ConnectionNotification { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public ConnectionNotification get_ConnectionNotification();
    public void set_ConnectionNotification(ConnectionNotification value);
    internal bool IsSetConnectionNotification();
}
public class Amazon.EC2.Model.CreateVpcEndpointRequest : AmazonEC2Request {
    private string _clientToken;
    private DnsOptionsSpecification _dnsOptions;
    private IpAddressType _ipAddressType;
    private string _policyDocument;
    private Nullable`1<bool> _privateDnsEnabled;
    private List`1<string> _routeTableIds;
    private List`1<string> _securityGroupIds;
    private string _serviceName;
    private List`1<SubnetConfiguration> _subnetConfigurations;
    private List`1<string> _subnetIds;
    private List`1<TagSpecification> _tagSpecifications;
    private VpcEndpointType _vpcEndpointType;
    private string _vpcId;
    public string ClientToken { get; public set; }
    public DnsOptionsSpecification DnsOptions { get; public set; }
    public IpAddressType IpAddressType { get; public set; }
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PrivateDnsEnabled { get; public set; }
    public List`1<string> RouteTableIds { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public string ServiceName { get; public set; }
    public List`1<SubnetConfiguration> SubnetConfigurations { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public VpcEndpointType VpcEndpointType { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public DnsOptionsSpecification get_DnsOptions();
    public void set_DnsOptions(DnsOptionsSpecification value);
    internal bool IsSetDnsOptions();
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PrivateDnsEnabled();
    public void set_PrivateDnsEnabled(Nullable`1<bool> value);
    internal bool IsSetPrivateDnsEnabled();
    public List`1<string> get_RouteTableIds();
    public void set_RouteTableIds(List`1<string> value);
    internal bool IsSetRouteTableIds();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public List`1<SubnetConfiguration> get_SubnetConfigurations();
    public void set_SubnetConfigurations(List`1<SubnetConfiguration> value);
    internal bool IsSetSubnetConfigurations();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public VpcEndpointType get_VpcEndpointType();
    public void set_VpcEndpointType(VpcEndpointType value);
    internal bool IsSetVpcEndpointType();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateVpcEndpointResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private VpcEndpoint _vpcEndpoint;
    public string ClientToken { get; public set; }
    public VpcEndpoint VpcEndpoint { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public VpcEndpoint get_VpcEndpoint();
    public void set_VpcEndpoint(VpcEndpoint value);
    internal bool IsSetVpcEndpoint();
}
public class Amazon.EC2.Model.CreateVpcEndpointServiceConfigurationRequest : AmazonEC2Request {
    private Nullable`1<bool> _acceptanceRequired;
    private string _clientToken;
    private List`1<string> _gatewayLoadBalancerArns;
    private List`1<string> _networkLoadBalancerArns;
    private string _privateDnsName;
    private List`1<string> _supportedIpAddressTypes;
    private List`1<TagSpecification> _tagSpecifications;
    public Nullable`1<bool> AcceptanceRequired { get; public set; }
    public string ClientToken { get; public set; }
    public List`1<string> GatewayLoadBalancerArns { get; public set; }
    public List`1<string> NetworkLoadBalancerArns { get; public set; }
    public string PrivateDnsName { get; public set; }
    public List`1<string> SupportedIpAddressTypes { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public Nullable`1<bool> get_AcceptanceRequired();
    public void set_AcceptanceRequired(Nullable`1<bool> value);
    internal bool IsSetAcceptanceRequired();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_GatewayLoadBalancerArns();
    public void set_GatewayLoadBalancerArns(List`1<string> value);
    internal bool IsSetGatewayLoadBalancerArns();
    public List`1<string> get_NetworkLoadBalancerArns();
    public void set_NetworkLoadBalancerArns(List`1<string> value);
    internal bool IsSetNetworkLoadBalancerArns();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public List`1<string> get_SupportedIpAddressTypes();
    public void set_SupportedIpAddressTypes(List`1<string> value);
    internal bool IsSetSupportedIpAddressTypes();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateVpcEndpointServiceConfigurationResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private ServiceConfiguration _serviceConfiguration;
    public string ClientToken { get; public set; }
    public ServiceConfiguration ServiceConfiguration { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public ServiceConfiguration get_ServiceConfiguration();
    public void set_ServiceConfiguration(ServiceConfiguration value);
    internal bool IsSetServiceConfiguration();
}
public class Amazon.EC2.Model.CreateVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _peerOwnerId;
    private string _peerRegion;
    private string _peerVpcId;
    private List`1<TagSpecification> _tagSpecifications;
    private string _vpcId;
    public string PeerOwnerId { get; public set; }
    public string PeerRegion { get; public set; }
    public string PeerVpcId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_PeerOwnerId();
    public void set_PeerOwnerId(string value);
    internal bool IsSetPeerOwnerId();
    public string get_PeerRegion();
    public void set_PeerRegion(string value);
    internal bool IsSetPeerRegion();
    public string get_PeerVpcId();
    public void set_PeerVpcId(string value);
    internal bool IsSetPeerVpcId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateVpcPeeringConnectionResponse : AmazonWebServiceResponse {
    private VpcPeeringConnection _vpcPeeringConnection;
    public VpcPeeringConnection VpcPeeringConnection { get; public set; }
    public VpcPeeringConnection get_VpcPeeringConnection();
    public void set_VpcPeeringConnection(VpcPeeringConnection value);
    internal bool IsSetVpcPeeringConnection();
}
public class Amazon.EC2.Model.CreateVpcRequest : AmazonEC2Request {
    private Nullable`1<bool> _amazonProvidedIpv6CidrBlock;
    private string _cidrBlock;
    private Tenancy _instanceTenancy;
    private string _ipv4IpamPoolId;
    private Nullable`1<int> _ipv4NetmaskLength;
    private string _ipv6CidrBlock;
    private string _ipv6CidrBlockNetworkBorderGroup;
    private string _ipv6IpamPoolId;
    private Nullable`1<int> _ipv6NetmaskLength;
    private string _ipv6Pool;
    private List`1<TagSpecification> _tagSpecifications;
    public Nullable`1<bool> AmazonProvidedIpv6CidrBlock { get; public set; }
    public string CidrBlock { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public string Ipv4IpamPoolId { get; public set; }
    public Nullable`1<int> Ipv4NetmaskLength { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    public string Ipv6CidrBlockNetworkBorderGroup { get; public set; }
    public string Ipv6IpamPoolId { get; public set; }
    public Nullable`1<int> Ipv6NetmaskLength { get; public set; }
    public string Ipv6Pool { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public CreateVpcRequest(string cidrBlock);
    public Nullable`1<bool> get_AmazonProvidedIpv6CidrBlock();
    public void set_AmazonProvidedIpv6CidrBlock(Nullable`1<bool> value);
    internal bool IsSetAmazonProvidedIpv6CidrBlock();
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public string get_Ipv4IpamPoolId();
    public void set_Ipv4IpamPoolId(string value);
    internal bool IsSetIpv4IpamPoolId();
    public Nullable`1<int> get_Ipv4NetmaskLength();
    public void set_Ipv4NetmaskLength(Nullable`1<int> value);
    internal bool IsSetIpv4NetmaskLength();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public string get_Ipv6CidrBlockNetworkBorderGroup();
    public void set_Ipv6CidrBlockNetworkBorderGroup(string value);
    internal bool IsSetIpv6CidrBlockNetworkBorderGroup();
    public string get_Ipv6IpamPoolId();
    public void set_Ipv6IpamPoolId(string value);
    internal bool IsSetIpv6IpamPoolId();
    public Nullable`1<int> get_Ipv6NetmaskLength();
    public void set_Ipv6NetmaskLength(Nullable`1<int> value);
    internal bool IsSetIpv6NetmaskLength();
    public string get_Ipv6Pool();
    public void set_Ipv6Pool(string value);
    internal bool IsSetIpv6Pool();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.CreateVpcResponse : AmazonWebServiceResponse {
    private Vpc _vpc;
    public Vpc Vpc { get; public set; }
    public Vpc get_Vpc();
    public void set_Vpc(Vpc value);
    internal bool IsSetVpc();
}
public class Amazon.EC2.Model.CreateVpnConnectionRequest : AmazonEC2Request {
    private string _customerGatewayId;
    private VpnConnectionOptionsSpecification _options;
    private List`1<TagSpecification> _tagSpecifications;
    private string _transitGatewayId;
    private string _type;
    private string _vpnGatewayId;
    [AWSPropertyAttribute]
public string CustomerGatewayId { get; public set; }
    public VpnConnectionOptionsSpecification Options { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string TransitGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public string VpnGatewayId { get; public set; }
    public CreateVpnConnectionRequest(string type, string customerGatewayId, string vpnGatewayId);
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public VpnConnectionOptionsSpecification get_Options();
    public void set_Options(VpnConnectionOptionsSpecification value);
    internal bool IsSetOptions();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.CreateVpnConnectionResponse : AmazonWebServiceResponse {
    private VpnConnection _vpnConnection;
    public VpnConnection VpnConnection { get; public set; }
    public VpnConnection get_VpnConnection();
    public void set_VpnConnection(VpnConnection value);
    internal bool IsSetVpnConnection();
}
public class Amazon.EC2.Model.CreateVpnConnectionRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _vpnConnectionId;
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.CreateVpnConnectionRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CreateVpnGatewayRequest : AmazonEC2Request {
    private Nullable`1<long> _amazonSideAsn;
    private string _availabilityZone;
    private List`1<TagSpecification> _tagSpecifications;
    private GatewayType _type;
    public Nullable`1<long> AmazonSideAsn { get; public set; }
    public string AvailabilityZone { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public GatewayType Type { get; public set; }
    public CreateVpnGatewayRequest(GatewayType type);
    public Nullable`1<long> get_AmazonSideAsn();
    public void set_AmazonSideAsn(Nullable`1<long> value);
    internal bool IsSetAmazonSideAsn();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.CreateVpnGatewayResponse : AmazonWebServiceResponse {
    private VpnGateway _vpnGateway;
    public VpnGateway VpnGateway { get; public set; }
    public VpnGateway get_VpnGateway();
    public void set_VpnGateway(VpnGateway value);
    internal bool IsSetVpnGateway();
}
public class Amazon.EC2.Model.CreditSpecification : object {
    private string _cpuCredits;
    public string CpuCredits { get; public set; }
    public string get_CpuCredits();
    public void set_CpuCredits(string value);
    internal bool IsSetCpuCredits();
}
public class Amazon.EC2.Model.CreditSpecificationRequest : object {
    private string _cpuCredits;
    [AWSPropertyAttribute]
public string CpuCredits { get; public set; }
    public string get_CpuCredits();
    public void set_CpuCredits(string value);
    internal bool IsSetCpuCredits();
}
public class Amazon.EC2.Model.CustomerGateway : object {
    private string _bgpAsn;
    private string _bgpAsnExtended;
    private string _certificateArn;
    private string _customerGatewayId;
    private string _deviceName;
    private string _ipAddress;
    private string _state;
    private List`1<Tag> _tags;
    private string _type;
    public string BgpAsn { get; public set; }
    public string BgpAsnExtended { get; public set; }
    public string CertificateArn { get; public set; }
    public string CustomerGatewayId { get; public set; }
    public string DeviceName { get; public set; }
    public string IpAddress { get; public set; }
    public string State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string Type { get; public set; }
    public string get_BgpAsn();
    public void set_BgpAsn(string value);
    internal bool IsSetBgpAsn();
    public string get_BgpAsnExtended();
    public void set_BgpAsnExtended(string value);
    internal bool IsSetBgpAsnExtended();
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.DataQuery : object {
    private string _destination;
    private string _id;
    private MetricType _metric;
    private PeriodType _period;
    private string _source;
    private StatisticType _statistic;
    public string Destination { get; public set; }
    public string Id { get; public set; }
    public MetricType Metric { get; public set; }
    public PeriodType Period { get; public set; }
    public string Source { get; public set; }
    public StatisticType Statistic { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public MetricType get_Metric();
    public void set_Metric(MetricType value);
    internal bool IsSetMetric();
    public PeriodType get_Period();
    public void set_Period(PeriodType value);
    internal bool IsSetPeriod();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public StatisticType get_Statistic();
    public void set_Statistic(StatisticType value);
    internal bool IsSetStatistic();
}
public class Amazon.EC2.Model.DataResponse : object {
    private string _destination;
    private string _id;
    private MetricType _metric;
    private List`1<MetricPoint> _metricPoints;
    private PeriodType _period;
    private string _source;
    private StatisticType _statistic;
    public string Destination { get; public set; }
    public string Id { get; public set; }
    public MetricType Metric { get; public set; }
    public List`1<MetricPoint> MetricPoints { get; public set; }
    public PeriodType Period { get; public set; }
    public string Source { get; public set; }
    public StatisticType Statistic { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public MetricType get_Metric();
    public void set_Metric(MetricType value);
    internal bool IsSetMetric();
    public List`1<MetricPoint> get_MetricPoints();
    public void set_MetricPoints(List`1<MetricPoint> value);
    internal bool IsSetMetricPoints();
    public PeriodType get_Period();
    public void set_Period(PeriodType value);
    internal bool IsSetPeriod();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public StatisticType get_Statistic();
    public void set_Statistic(StatisticType value);
    internal bool IsSetStatistic();
}
public class Amazon.EC2.Model.DeleteCarrierGatewayRequest : AmazonEC2Request {
    private string _carrierGatewayId;
    [AWSPropertyAttribute]
public string CarrierGatewayId { get; public set; }
    public string get_CarrierGatewayId();
    public void set_CarrierGatewayId(string value);
    internal bool IsSetCarrierGatewayId();
}
public class Amazon.EC2.Model.DeleteCarrierGatewayResponse : AmazonWebServiceResponse {
    private CarrierGateway _carrierGateway;
    public CarrierGateway CarrierGateway { get; public set; }
    public CarrierGateway get_CarrierGateway();
    public void set_CarrierGateway(CarrierGateway value);
    internal bool IsSetCarrierGateway();
}
public class Amazon.EC2.Model.DeleteClientVpnEndpointRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
}
public class Amazon.EC2.Model.DeleteClientVpnEndpointResponse : AmazonWebServiceResponse {
    private ClientVpnEndpointStatus _status;
    public ClientVpnEndpointStatus Status { get; public set; }
    public ClientVpnEndpointStatus get_Status();
    public void set_Status(ClientVpnEndpointStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.DeleteClientVpnRouteRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    private string _destinationCidrBlock;
    private string _targetVpcSubnetId;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    public string TargetVpcSubnetId { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_TargetVpcSubnetId();
    public void set_TargetVpcSubnetId(string value);
    internal bool IsSetTargetVpcSubnetId();
}
public class Amazon.EC2.Model.DeleteClientVpnRouteResponse : AmazonWebServiceResponse {
    private ClientVpnRouteStatus _status;
    public ClientVpnRouteStatus Status { get; public set; }
    public ClientVpnRouteStatus get_Status();
    public void set_Status(ClientVpnRouteStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.DeleteCoipCidrRequest : AmazonEC2Request {
    private string _cidr;
    private string _coipPoolId;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    [AWSPropertyAttribute]
public string CoipPoolId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_CoipPoolId();
    public void set_CoipPoolId(string value);
    internal bool IsSetCoipPoolId();
}
public class Amazon.EC2.Model.DeleteCoipCidrResponse : AmazonWebServiceResponse {
    private CoipCidr _coipCidr;
    public CoipCidr CoipCidr { get; public set; }
    public CoipCidr get_CoipCidr();
    public void set_CoipCidr(CoipCidr value);
    internal bool IsSetCoipCidr();
}
public class Amazon.EC2.Model.DeleteCoipPoolRequest : AmazonEC2Request {
    private string _coipPoolId;
    [AWSPropertyAttribute]
public string CoipPoolId { get; public set; }
    public string get_CoipPoolId();
    public void set_CoipPoolId(string value);
    internal bool IsSetCoipPoolId();
}
public class Amazon.EC2.Model.DeleteCoipPoolResponse : AmazonWebServiceResponse {
    private CoipPool _coipPool;
    public CoipPool CoipPool { get; public set; }
    public CoipPool get_CoipPool();
    public void set_CoipPool(CoipPool value);
    internal bool IsSetCoipPool();
}
public class Amazon.EC2.Model.DeleteCustomerGatewayRequest : AmazonEC2Request {
    private string _customerGatewayId;
    [AWSPropertyAttribute]
public string CustomerGatewayId { get; public set; }
    public DeleteCustomerGatewayRequest(string customerGatewayId);
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
}
public class Amazon.EC2.Model.DeleteCustomerGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteDhcpOptionsRequest : AmazonEC2Request {
    private string _dhcpOptionsId;
    [AWSPropertyAttribute]
public string DhcpOptionsId { get; public set; }
    public DeleteDhcpOptionsRequest(string dhcpOptionsId);
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
}
public class Amazon.EC2.Model.DeleteDhcpOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteEgressOnlyInternetGatewayRequest : AmazonEC2Request {
    private string _egressOnlyInternetGatewayId;
    [AWSPropertyAttribute]
public string EgressOnlyInternetGatewayId { get; public set; }
    public string get_EgressOnlyInternetGatewayId();
    public void set_EgressOnlyInternetGatewayId(string value);
    internal bool IsSetEgressOnlyInternetGatewayId();
}
public class Amazon.EC2.Model.DeleteEgressOnlyInternetGatewayResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _returnCode;
    public Nullable`1<bool> ReturnCode { get; public set; }
    public Nullable`1<bool> get_ReturnCode();
    public void set_ReturnCode(Nullable`1<bool> value);
    internal bool IsSetReturnCode();
}
public class Amazon.EC2.Model.DeleteFleetError : object {
    private DeleteFleetErrorCode _code;
    private string _message;
    public DeleteFleetErrorCode Code { get; public set; }
    public string Message { get; public set; }
    public DeleteFleetErrorCode get_Code();
    public void set_Code(DeleteFleetErrorCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.DeleteFleetErrorItem : object {
    private DeleteFleetError _error;
    private string _fleetId;
    public DeleteFleetError Error { get; public set; }
    public string FleetId { get; public set; }
    public DeleteFleetError get_Error();
    public void set_Error(DeleteFleetError value);
    internal bool IsSetError();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
}
public class Amazon.EC2.Model.DeleteFleetsRequest : AmazonEC2Request {
    private List`1<string> _fleetIds;
    private Nullable`1<bool> _terminateInstances;
    [AWSPropertyAttribute]
public List`1<string> FleetIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> TerminateInstances { get; public set; }
    public List`1<string> get_FleetIds();
    public void set_FleetIds(List`1<string> value);
    internal bool IsSetFleetIds();
    public Nullable`1<bool> get_TerminateInstances();
    public void set_TerminateInstances(Nullable`1<bool> value);
    internal bool IsSetTerminateInstances();
}
public class Amazon.EC2.Model.DeleteFleetsResponse : AmazonWebServiceResponse {
    private List`1<DeleteFleetSuccessItem> _successfulFleetDeletions;
    private List`1<DeleteFleetErrorItem> _unsuccessfulFleetDeletions;
    public List`1<DeleteFleetSuccessItem> SuccessfulFleetDeletions { get; public set; }
    public List`1<DeleteFleetErrorItem> UnsuccessfulFleetDeletions { get; public set; }
    public List`1<DeleteFleetSuccessItem> get_SuccessfulFleetDeletions();
    public void set_SuccessfulFleetDeletions(List`1<DeleteFleetSuccessItem> value);
    internal bool IsSetSuccessfulFleetDeletions();
    public List`1<DeleteFleetErrorItem> get_UnsuccessfulFleetDeletions();
    public void set_UnsuccessfulFleetDeletions(List`1<DeleteFleetErrorItem> value);
    internal bool IsSetUnsuccessfulFleetDeletions();
}
public class Amazon.EC2.Model.DeleteFleetSuccessItem : object {
    private FleetStateCode _currentFleetState;
    private string _fleetId;
    private FleetStateCode _previousFleetState;
    public FleetStateCode CurrentFleetState { get; public set; }
    public string FleetId { get; public set; }
    public FleetStateCode PreviousFleetState { get; public set; }
    public FleetStateCode get_CurrentFleetState();
    public void set_CurrentFleetState(FleetStateCode value);
    internal bool IsSetCurrentFleetState();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public FleetStateCode get_PreviousFleetState();
    public void set_PreviousFleetState(FleetStateCode value);
    internal bool IsSetPreviousFleetState();
}
public class Amazon.EC2.Model.DeleteFlowLogsRequest : AmazonEC2Request {
    private List`1<string> _flowLogIds;
    [AWSPropertyAttribute]
public List`1<string> FlowLogIds { get; public set; }
    public List`1<string> get_FlowLogIds();
    public void set_FlowLogIds(List`1<string> value);
    internal bool IsSetFlowLogIds();
}
public class Amazon.EC2.Model.DeleteFlowLogsResponse : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.DeleteFpgaImageRequest : AmazonEC2Request {
    private string _fpgaImageId;
    [AWSPropertyAttribute]
public string FpgaImageId { get; public set; }
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
}
public class Amazon.EC2.Model.DeleteFpgaImageResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DeleteInstanceConnectEndpointRequest : AmazonEC2Request {
    private string _instanceConnectEndpointId;
    [AWSPropertyAttribute]
public string InstanceConnectEndpointId { get; public set; }
    public string get_InstanceConnectEndpointId();
    public void set_InstanceConnectEndpointId(string value);
    internal bool IsSetInstanceConnectEndpointId();
}
public class Amazon.EC2.Model.DeleteInstanceConnectEndpointResponse : AmazonWebServiceResponse {
    private Ec2InstanceConnectEndpoint _instanceConnectEndpoint;
    public Ec2InstanceConnectEndpoint InstanceConnectEndpoint { get; public set; }
    public Ec2InstanceConnectEndpoint get_InstanceConnectEndpoint();
    public void set_InstanceConnectEndpoint(Ec2InstanceConnectEndpoint value);
    internal bool IsSetInstanceConnectEndpoint();
}
public class Amazon.EC2.Model.DeleteInstanceEventWindowRequest : AmazonEC2Request {
    private Nullable`1<bool> _forceDelete;
    private string _instanceEventWindowId;
    public Nullable`1<bool> ForceDelete { get; public set; }
    [AWSPropertyAttribute]
public string InstanceEventWindowId { get; public set; }
    public Nullable`1<bool> get_ForceDelete();
    public void set_ForceDelete(Nullable`1<bool> value);
    internal bool IsSetForceDelete();
    public string get_InstanceEventWindowId();
    public void set_InstanceEventWindowId(string value);
    internal bool IsSetInstanceEventWindowId();
}
public class Amazon.EC2.Model.DeleteInstanceEventWindowResponse : AmazonWebServiceResponse {
    private InstanceEventWindowStateChange _instanceEventWindowState;
    public InstanceEventWindowStateChange InstanceEventWindowState { get; public set; }
    public InstanceEventWindowStateChange get_InstanceEventWindowState();
    public void set_InstanceEventWindowState(InstanceEventWindowStateChange value);
    internal bool IsSetInstanceEventWindowState();
}
public class Amazon.EC2.Model.DeleteInternetGatewayRequest : AmazonEC2Request {
    private string _internetGatewayId;
    [AWSPropertyAttribute]
public string InternetGatewayId { get; public set; }
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
}
public class Amazon.EC2.Model.DeleteInternetGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteIpamExternalResourceVerificationTokenRequest : AmazonEC2Request {
    private string _ipamExternalResourceVerificationTokenId;
    [AWSPropertyAttribute]
public string IpamExternalResourceVerificationTokenId { get; public set; }
    public string get_IpamExternalResourceVerificationTokenId();
    public void set_IpamExternalResourceVerificationTokenId(string value);
    internal bool IsSetIpamExternalResourceVerificationTokenId();
}
public class Amazon.EC2.Model.DeleteIpamExternalResourceVerificationTokenResponse : AmazonWebServiceResponse {
    private IpamExternalResourceVerificationToken _ipamExternalResourceVerificationToken;
    public IpamExternalResourceVerificationToken IpamExternalResourceVerificationToken { get; public set; }
    public IpamExternalResourceVerificationToken get_IpamExternalResourceVerificationToken();
    public void set_IpamExternalResourceVerificationToken(IpamExternalResourceVerificationToken value);
    internal bool IsSetIpamExternalResourceVerificationToken();
}
public class Amazon.EC2.Model.DeleteIpamPoolRequest : AmazonEC2Request {
    private Nullable`1<bool> _cascade;
    private string _ipamPoolId;
    public Nullable`1<bool> Cascade { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    public Nullable`1<bool> get_Cascade();
    public void set_Cascade(Nullable`1<bool> value);
    internal bool IsSetCascade();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
}
public class Amazon.EC2.Model.DeleteIpamPoolResponse : AmazonWebServiceResponse {
    private IpamPool _ipamPool;
    public IpamPool IpamPool { get; public set; }
    public IpamPool get_IpamPool();
    public void set_IpamPool(IpamPool value);
    internal bool IsSetIpamPool();
}
public class Amazon.EC2.Model.DeleteIpamRequest : AmazonEC2Request {
    private Nullable`1<bool> _cascade;
    private string _ipamId;
    public Nullable`1<bool> Cascade { get; public set; }
    [AWSPropertyAttribute]
public string IpamId { get; public set; }
    public Nullable`1<bool> get_Cascade();
    public void set_Cascade(Nullable`1<bool> value);
    internal bool IsSetCascade();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
}
public class Amazon.EC2.Model.DeleteIpamResourceDiscoveryRequest : AmazonEC2Request {
    private string _ipamResourceDiscoveryId;
    [AWSPropertyAttribute]
public string IpamResourceDiscoveryId { get; public set; }
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
}
public class Amazon.EC2.Model.DeleteIpamResourceDiscoveryResponse : AmazonWebServiceResponse {
    private IpamResourceDiscovery _ipamResourceDiscovery;
    public IpamResourceDiscovery IpamResourceDiscovery { get; public set; }
    public IpamResourceDiscovery get_IpamResourceDiscovery();
    public void set_IpamResourceDiscovery(IpamResourceDiscovery value);
    internal bool IsSetIpamResourceDiscovery();
}
public class Amazon.EC2.Model.DeleteIpamResponse : AmazonWebServiceResponse {
    private Ipam _ipam;
    public Ipam Ipam { get; public set; }
    public Ipam get_Ipam();
    public void set_Ipam(Ipam value);
    internal bool IsSetIpam();
}
public class Amazon.EC2.Model.DeleteIpamScopeRequest : AmazonEC2Request {
    private string _ipamScopeId;
    [AWSPropertyAttribute]
public string IpamScopeId { get; public set; }
    public string get_IpamScopeId();
    public void set_IpamScopeId(string value);
    internal bool IsSetIpamScopeId();
}
public class Amazon.EC2.Model.DeleteIpamScopeResponse : AmazonWebServiceResponse {
    private IpamScope _ipamScope;
    public IpamScope IpamScope { get; public set; }
    public IpamScope get_IpamScope();
    public void set_IpamScope(IpamScope value);
    internal bool IsSetIpamScope();
}
public class Amazon.EC2.Model.DeleteKeyPairRequest : AmazonEC2Request {
    private string _keyName;
    private string _keyPairId;
    public string KeyName { get; public set; }
    public string KeyPairId { get; public set; }
    public DeleteKeyPairRequest(string keyName);
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_KeyPairId();
    public void set_KeyPairId(string value);
    internal bool IsSetKeyPairId();
}
public class Amazon.EC2.Model.DeleteKeyPairResponse : AmazonWebServiceResponse {
    private string _keyPairId;
    private Nullable`1<bool> _return;
    public string KeyPairId { get; public set; }
    public Nullable`1<bool> Return { get; public set; }
    public string get_KeyPairId();
    public void set_KeyPairId(string value);
    internal bool IsSetKeyPairId();
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DeleteLaunchTemplateRequest : AmazonEC2Request {
    private string _launchTemplateId;
    private string _launchTemplateName;
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
}
public class Amazon.EC2.Model.DeleteLaunchTemplateResponse : AmazonWebServiceResponse {
    private LaunchTemplate _launchTemplate;
    public LaunchTemplate LaunchTemplate { get; public set; }
    public LaunchTemplate get_LaunchTemplate();
    public void set_LaunchTemplate(LaunchTemplate value);
    internal bool IsSetLaunchTemplate();
}
public class Amazon.EC2.Model.DeleteLaunchTemplateVersionsRequest : AmazonEC2Request {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private List`1<string> _versions;
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Versions { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public List`1<string> get_Versions();
    public void set_Versions(List`1<string> value);
    internal bool IsSetVersions();
}
public class Amazon.EC2.Model.DeleteLaunchTemplateVersionsResponse : AmazonWebServiceResponse {
    private List`1<DeleteLaunchTemplateVersionsResponseSuccessItem> _successfullyDeletedLaunchTemplateVersions;
    private List`1<DeleteLaunchTemplateVersionsResponseErrorItem> _unsuccessfullyDeletedLaunchTemplateVersions;
    public List`1<DeleteLaunchTemplateVersionsResponseSuccessItem> SuccessfullyDeletedLaunchTemplateVersions { get; public set; }
    public List`1<DeleteLaunchTemplateVersionsResponseErrorItem> UnsuccessfullyDeletedLaunchTemplateVersions { get; public set; }
    public List`1<DeleteLaunchTemplateVersionsResponseSuccessItem> get_SuccessfullyDeletedLaunchTemplateVersions();
    public void set_SuccessfullyDeletedLaunchTemplateVersions(List`1<DeleteLaunchTemplateVersionsResponseSuccessItem> value);
    internal bool IsSetSuccessfullyDeletedLaunchTemplateVersions();
    public List`1<DeleteLaunchTemplateVersionsResponseErrorItem> get_UnsuccessfullyDeletedLaunchTemplateVersions();
    public void set_UnsuccessfullyDeletedLaunchTemplateVersions(List`1<DeleteLaunchTemplateVersionsResponseErrorItem> value);
    internal bool IsSetUnsuccessfullyDeletedLaunchTemplateVersions();
}
public class Amazon.EC2.Model.DeleteLaunchTemplateVersionsResponseErrorItem : object {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private ResponseError _responseError;
    private Nullable`1<long> _versionNumber;
    public string LaunchTemplateId { get; public set; }
    public string LaunchTemplateName { get; public set; }
    public ResponseError ResponseError { get; public set; }
    public Nullable`1<long> VersionNumber { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public ResponseError get_ResponseError();
    public void set_ResponseError(ResponseError value);
    internal bool IsSetResponseError();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.EC2.Model.DeleteLaunchTemplateVersionsResponseSuccessItem : object {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private Nullable`1<long> _versionNumber;
    public string LaunchTemplateId { get; public set; }
    public string LaunchTemplateName { get; public set; }
    public Nullable`1<long> VersionNumber { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _destinationPrefixListId;
    private string _localGatewayRouteTableId;
    public string DestinationCidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteResponse : AmazonWebServiceResponse {
    private LocalGatewayRoute _route;
    public LocalGatewayRoute Route { get; public set; }
    public LocalGatewayRoute get_Route();
    public void set_Route(LocalGatewayRoute value);
    internal bool IsSetRoute();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteTableRequest : AmazonEC2Request {
    private string _localGatewayRouteTableId;
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteTableResponse : AmazonWebServiceResponse {
    private LocalGatewayRouteTable _localGatewayRouteTable;
    public LocalGatewayRouteTable LocalGatewayRouteTable { get; public set; }
    public LocalGatewayRouteTable get_LocalGatewayRouteTable();
    public void set_LocalGatewayRouteTable(LocalGatewayRouteTable value);
    internal bool IsSetLocalGatewayRouteTable();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest : AmazonEC2Request {
    private string _localGatewayRouteTableVirtualInterfaceGroupAssociationId;
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableVirtualInterfaceGroupAssociationId { get; public set; }
    public string get_LocalGatewayRouteTableVirtualInterfaceGroupAssociationId();
    public void set_LocalGatewayRouteTableVirtualInterfaceGroupAssociationId(string value);
    internal bool IsSetLocalGatewayRouteTableVirtualInterfaceGroupAssociationId();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse : AmazonWebServiceResponse {
    private LocalGatewayRouteTableVirtualInterfaceGroupAssociation _localGatewayRouteTableVirtualInterfaceGroupAssociation;
    public LocalGatewayRouteTableVirtualInterfaceGroupAssociation LocalGatewayRouteTableVirtualInterfaceGroupAssociation { get; public set; }
    public LocalGatewayRouteTableVirtualInterfaceGroupAssociation get_LocalGatewayRouteTableVirtualInterfaceGroupAssociation();
    public void set_LocalGatewayRouteTableVirtualInterfaceGroupAssociation(LocalGatewayRouteTableVirtualInterfaceGroupAssociation value);
    internal bool IsSetLocalGatewayRouteTableVirtualInterfaceGroupAssociation();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteTableVpcAssociationRequest : AmazonEC2Request {
    private string _localGatewayRouteTableVpcAssociationId;
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableVpcAssociationId { get; public set; }
    public string get_LocalGatewayRouteTableVpcAssociationId();
    public void set_LocalGatewayRouteTableVpcAssociationId(string value);
    internal bool IsSetLocalGatewayRouteTableVpcAssociationId();
}
public class Amazon.EC2.Model.DeleteLocalGatewayRouteTableVpcAssociationResponse : AmazonWebServiceResponse {
    private LocalGatewayRouteTableVpcAssociation _localGatewayRouteTableVpcAssociation;
    public LocalGatewayRouteTableVpcAssociation LocalGatewayRouteTableVpcAssociation { get; public set; }
    public LocalGatewayRouteTableVpcAssociation get_LocalGatewayRouteTableVpcAssociation();
    public void set_LocalGatewayRouteTableVpcAssociation(LocalGatewayRouteTableVpcAssociation value);
    internal bool IsSetLocalGatewayRouteTableVpcAssociation();
}
public class Amazon.EC2.Model.DeleteManagedPrefixListRequest : AmazonEC2Request {
    private string _prefixListId;
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
}
public class Amazon.EC2.Model.DeleteManagedPrefixListResponse : AmazonWebServiceResponse {
    private ManagedPrefixList _prefixList;
    public ManagedPrefixList PrefixList { get; public set; }
    public ManagedPrefixList get_PrefixList();
    public void set_PrefixList(ManagedPrefixList value);
    internal bool IsSetPrefixList();
}
public class Amazon.EC2.Model.DeleteNatGatewayRequest : AmazonEC2Request {
    private string _natGatewayId;
    [AWSPropertyAttribute]
public string NatGatewayId { get; public set; }
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
}
public class Amazon.EC2.Model.DeleteNatGatewayResponse : AmazonWebServiceResponse {
    private string _natGatewayId;
    public string NatGatewayId { get; public set; }
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
}
public class Amazon.EC2.Model.DeleteNetworkAclEntryRequest : AmazonEC2Request {
    private Nullable`1<bool> _egress;
    private string _networkAclId;
    private Nullable`1<int> _ruleNumber;
    [AWSPropertyAttribute]
public Nullable`1<bool> Egress { get; public set; }
    [AWSPropertyAttribute]
public string NetworkAclId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RuleNumber { get; public set; }
    public Nullable`1<bool> get_Egress();
    public void set_Egress(Nullable`1<bool> value);
    internal bool IsSetEgress();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.DeleteNetworkAclEntryResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteNetworkAclRequest : AmazonEC2Request {
    private string _networkAclId;
    [AWSPropertyAttribute]
public string NetworkAclId { get; public set; }
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
}
public class Amazon.EC2.Model.DeleteNetworkAclResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteNetworkInsightsAccessScopeAnalysisRequest : AmazonEC2Request {
    private string _networkInsightsAccessScopeAnalysisId;
    [AWSPropertyAttribute]
public string NetworkInsightsAccessScopeAnalysisId { get; public set; }
    public string get_NetworkInsightsAccessScopeAnalysisId();
    public void set_NetworkInsightsAccessScopeAnalysisId(string value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisId();
}
public class Amazon.EC2.Model.DeleteNetworkInsightsAccessScopeAnalysisResponse : AmazonWebServiceResponse {
    private string _networkInsightsAccessScopeAnalysisId;
    public string NetworkInsightsAccessScopeAnalysisId { get; public set; }
    public string get_NetworkInsightsAccessScopeAnalysisId();
    public void set_NetworkInsightsAccessScopeAnalysisId(string value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisId();
}
public class Amazon.EC2.Model.DeleteNetworkInsightsAccessScopeRequest : AmazonEC2Request {
    private string _networkInsightsAccessScopeId;
    [AWSPropertyAttribute]
public string NetworkInsightsAccessScopeId { get; public set; }
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
}
public class Amazon.EC2.Model.DeleteNetworkInsightsAccessScopeResponse : AmazonWebServiceResponse {
    private string _networkInsightsAccessScopeId;
    public string NetworkInsightsAccessScopeId { get; public set; }
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
}
public class Amazon.EC2.Model.DeleteNetworkInsightsAnalysisRequest : AmazonEC2Request {
    private string _networkInsightsAnalysisId;
    [AWSPropertyAttribute]
public string NetworkInsightsAnalysisId { get; public set; }
    public string get_NetworkInsightsAnalysisId();
    public void set_NetworkInsightsAnalysisId(string value);
    internal bool IsSetNetworkInsightsAnalysisId();
}
public class Amazon.EC2.Model.DeleteNetworkInsightsAnalysisResponse : AmazonWebServiceResponse {
    private string _networkInsightsAnalysisId;
    public string NetworkInsightsAnalysisId { get; public set; }
    public string get_NetworkInsightsAnalysisId();
    public void set_NetworkInsightsAnalysisId(string value);
    internal bool IsSetNetworkInsightsAnalysisId();
}
public class Amazon.EC2.Model.DeleteNetworkInsightsPathRequest : AmazonEC2Request {
    private string _networkInsightsPathId;
    [AWSPropertyAttribute]
public string NetworkInsightsPathId { get; public set; }
    public string get_NetworkInsightsPathId();
    public void set_NetworkInsightsPathId(string value);
    internal bool IsSetNetworkInsightsPathId();
}
public class Amazon.EC2.Model.DeleteNetworkInsightsPathResponse : AmazonWebServiceResponse {
    private string _networkInsightsPathId;
    public string NetworkInsightsPathId { get; public set; }
    public string get_NetworkInsightsPathId();
    public void set_NetworkInsightsPathId(string value);
    internal bool IsSetNetworkInsightsPathId();
}
public class Amazon.EC2.Model.DeleteNetworkInterfacePermissionRequest : AmazonEC2Request {
    private Nullable`1<bool> _force;
    private string _networkInterfacePermissionId;
    public Nullable`1<bool> Force { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfacePermissionId { get; public set; }
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
    public string get_NetworkInterfacePermissionId();
    public void set_NetworkInterfacePermissionId(string value);
    internal bool IsSetNetworkInterfacePermissionId();
}
public class Amazon.EC2.Model.DeleteNetworkInterfacePermissionResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DeleteNetworkInterfaceRequest : AmazonEC2Request {
    private string _networkInterfaceId;
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.DeleteNetworkInterfaceResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeletePlacementGroupRequest : AmazonEC2Request {
    private string _groupName;
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public DeletePlacementGroupRequest(string groupName);
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.DeletePlacementGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeletePublicIpv4PoolRequest : AmazonEC2Request {
    private string _networkBorderGroup;
    private string _poolId;
    public string NetworkBorderGroup { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.DeletePublicIpv4PoolResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _returnValue;
    public Nullable`1<bool> ReturnValue { get; public set; }
    public Nullable`1<bool> get_ReturnValue();
    public void set_ReturnValue(Nullable`1<bool> value);
    internal bool IsSetReturnValue();
}
public class Amazon.EC2.Model.DeleteQueuedReservedInstancesError : object {
    private DeleteQueuedReservedInstancesErrorCode _code;
    private string _message;
    public DeleteQueuedReservedInstancesErrorCode Code { get; public set; }
    public string Message { get; public set; }
    public DeleteQueuedReservedInstancesErrorCode get_Code();
    public void set_Code(DeleteQueuedReservedInstancesErrorCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.DeleteQueuedReservedInstancesRequest : AmazonEC2Request {
    private List`1<string> _reservedInstancesIds;
    [AWSPropertyAttribute]
public List`1<string> ReservedInstancesIds { get; public set; }
    public List`1<string> get_ReservedInstancesIds();
    public void set_ReservedInstancesIds(List`1<string> value);
    internal bool IsSetReservedInstancesIds();
}
public class Amazon.EC2.Model.DeleteQueuedReservedInstancesResponse : AmazonWebServiceResponse {
    private List`1<FailedQueuedPurchaseDeletion> _failedQueuedPurchaseDeletions;
    private List`1<SuccessfulQueuedPurchaseDeletion> _successfulQueuedPurchaseDeletions;
    public List`1<FailedQueuedPurchaseDeletion> FailedQueuedPurchaseDeletions { get; public set; }
    public List`1<SuccessfulQueuedPurchaseDeletion> SuccessfulQueuedPurchaseDeletions { get; public set; }
    public List`1<FailedQueuedPurchaseDeletion> get_FailedQueuedPurchaseDeletions();
    public void set_FailedQueuedPurchaseDeletions(List`1<FailedQueuedPurchaseDeletion> value);
    internal bool IsSetFailedQueuedPurchaseDeletions();
    public List`1<SuccessfulQueuedPurchaseDeletion> get_SuccessfulQueuedPurchaseDeletions();
    public void set_SuccessfulQueuedPurchaseDeletions(List`1<SuccessfulQueuedPurchaseDeletion> value);
    internal bool IsSetSuccessfulQueuedPurchaseDeletions();
}
public class Amazon.EC2.Model.DeleteRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _destinationIpv6CidrBlock;
    private string _destinationPrefixListId;
    private string _routeTableId;
    public string DestinationCidrBlock { get; public set; }
    public string DestinationIpv6CidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationIpv6CidrBlock();
    public void set_DestinationIpv6CidrBlock(string value);
    internal bool IsSetDestinationIpv6CidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.DeleteRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteRouteTableRequest : AmazonEC2Request {
    private string _routeTableId;
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.DeleteRouteTableResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSecurityGroupRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public DeleteSecurityGroupRequest(string groupName);
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.DeleteSecurityGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSnapshotRequest : AmazonEC2Request {
    private string _snapshotId;
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public DeleteSnapshotRequest(string snapshotId);
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.DeleteSnapshotResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSubnetCidrReservationRequest : AmazonEC2Request {
    private string _subnetCidrReservationId;
    [AWSPropertyAttribute]
public string SubnetCidrReservationId { get; public set; }
    public string get_SubnetCidrReservationId();
    public void set_SubnetCidrReservationId(string value);
    internal bool IsSetSubnetCidrReservationId();
}
public class Amazon.EC2.Model.DeleteSubnetCidrReservationResponse : AmazonWebServiceResponse {
    private SubnetCidrReservation _deletedSubnetCidrReservation;
    public SubnetCidrReservation DeletedSubnetCidrReservation { get; public set; }
    public SubnetCidrReservation get_DeletedSubnetCidrReservation();
    public void set_DeletedSubnetCidrReservation(SubnetCidrReservation value);
    internal bool IsSetDeletedSubnetCidrReservation();
}
public class Amazon.EC2.Model.DeleteSubnetRequest : AmazonEC2Request {
    private string _subnetId;
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public DeleteSubnetRequest(string subnetId);
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.DeleteSubnetResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteTagsRequest : AmazonEC2Request {
    private List`1<string> _resources;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<string> Resources { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public DeleteTagsRequest(List`1<string> resources);
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.DeleteTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteTrafficMirrorFilterRequest : AmazonEC2Request {
    private string _trafficMirrorFilterId;
    [AWSPropertyAttribute]
public string TrafficMirrorFilterId { get; public set; }
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
}
public class Amazon.EC2.Model.DeleteTrafficMirrorFilterResponse : AmazonWebServiceResponse {
    private string _trafficMirrorFilterId;
    public string TrafficMirrorFilterId { get; public set; }
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
}
public class Amazon.EC2.Model.DeleteTrafficMirrorFilterRuleRequest : AmazonEC2Request {
    private string _trafficMirrorFilterRuleId;
    [AWSPropertyAttribute]
public string TrafficMirrorFilterRuleId { get; public set; }
    public string get_TrafficMirrorFilterRuleId();
    public void set_TrafficMirrorFilterRuleId(string value);
    internal bool IsSetTrafficMirrorFilterRuleId();
}
public class Amazon.EC2.Model.DeleteTrafficMirrorFilterRuleResponse : AmazonWebServiceResponse {
    private string _trafficMirrorFilterRuleId;
    public string TrafficMirrorFilterRuleId { get; public set; }
    public string get_TrafficMirrorFilterRuleId();
    public void set_TrafficMirrorFilterRuleId(string value);
    internal bool IsSetTrafficMirrorFilterRuleId();
}
public class Amazon.EC2.Model.DeleteTrafficMirrorSessionRequest : AmazonEC2Request {
    private string _trafficMirrorSessionId;
    [AWSPropertyAttribute]
public string TrafficMirrorSessionId { get; public set; }
    public string get_TrafficMirrorSessionId();
    public void set_TrafficMirrorSessionId(string value);
    internal bool IsSetTrafficMirrorSessionId();
}
public class Amazon.EC2.Model.DeleteTrafficMirrorSessionResponse : AmazonWebServiceResponse {
    private string _trafficMirrorSessionId;
    public string TrafficMirrorSessionId { get; public set; }
    public string get_TrafficMirrorSessionId();
    public void set_TrafficMirrorSessionId(string value);
    internal bool IsSetTrafficMirrorSessionId();
}
public class Amazon.EC2.Model.DeleteTrafficMirrorTargetRequest : AmazonEC2Request {
    private string _trafficMirrorTargetId;
    [AWSPropertyAttribute]
public string TrafficMirrorTargetId { get; public set; }
    public string get_TrafficMirrorTargetId();
    public void set_TrafficMirrorTargetId(string value);
    internal bool IsSetTrafficMirrorTargetId();
}
public class Amazon.EC2.Model.DeleteTrafficMirrorTargetResponse : AmazonWebServiceResponse {
    private string _trafficMirrorTargetId;
    public string TrafficMirrorTargetId { get; public set; }
    public string get_TrafficMirrorTargetId();
    public void set_TrafficMirrorTargetId(string value);
    internal bool IsSetTrafficMirrorTargetId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayConnectPeerRequest : AmazonEC2Request {
    private string _transitGatewayConnectPeerId;
    [AWSPropertyAttribute]
public string TransitGatewayConnectPeerId { get; public set; }
    public string get_TransitGatewayConnectPeerId();
    public void set_TransitGatewayConnectPeerId(string value);
    internal bool IsSetTransitGatewayConnectPeerId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayConnectPeerResponse : AmazonWebServiceResponse {
    private TransitGatewayConnectPeer _transitGatewayConnectPeer;
    public TransitGatewayConnectPeer TransitGatewayConnectPeer { get; public set; }
    public TransitGatewayConnectPeer get_TransitGatewayConnectPeer();
    public void set_TransitGatewayConnectPeer(TransitGatewayConnectPeer value);
    internal bool IsSetTransitGatewayConnectPeer();
}
public class Amazon.EC2.Model.DeleteTransitGatewayConnectRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayConnectResponse : AmazonWebServiceResponse {
    private TransitGatewayConnect _transitGatewayConnect;
    public TransitGatewayConnect TransitGatewayConnect { get; public set; }
    public TransitGatewayConnect get_TransitGatewayConnect();
    public void set_TransitGatewayConnect(TransitGatewayConnect value);
    internal bool IsSetTransitGatewayConnect();
}
public class Amazon.EC2.Model.DeleteTransitGatewayMulticastDomainRequest : AmazonEC2Request {
    private string _transitGatewayMulticastDomainId;
    [AWSPropertyAttribute]
public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayMulticastDomainResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDomain _transitGatewayMulticastDomain;
    public TransitGatewayMulticastDomain TransitGatewayMulticastDomain { get; public set; }
    public TransitGatewayMulticastDomain get_TransitGatewayMulticastDomain();
    public void set_TransitGatewayMulticastDomain(TransitGatewayMulticastDomain value);
    internal bool IsSetTransitGatewayMulticastDomain();
}
public class Amazon.EC2.Model.DeleteTransitGatewayPeeringAttachmentRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayPeeringAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayPeeringAttachment _transitGatewayPeeringAttachment;
    public TransitGatewayPeeringAttachment TransitGatewayPeeringAttachment { get; public set; }
    public TransitGatewayPeeringAttachment get_TransitGatewayPeeringAttachment();
    public void set_TransitGatewayPeeringAttachment(TransitGatewayPeeringAttachment value);
    internal bool IsSetTransitGatewayPeeringAttachment();
}
public class Amazon.EC2.Model.DeleteTransitGatewayPolicyTableRequest : AmazonEC2Request {
    private string _transitGatewayPolicyTableId;
    [AWSPropertyAttribute]
public string TransitGatewayPolicyTableId { get; public set; }
    public string get_TransitGatewayPolicyTableId();
    public void set_TransitGatewayPolicyTableId(string value);
    internal bool IsSetTransitGatewayPolicyTableId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayPolicyTableResponse : AmazonWebServiceResponse {
    private TransitGatewayPolicyTable _transitGatewayPolicyTable;
    public TransitGatewayPolicyTable TransitGatewayPolicyTable { get; public set; }
    public TransitGatewayPolicyTable get_TransitGatewayPolicyTable();
    public void set_TransitGatewayPolicyTable(TransitGatewayPolicyTable value);
    internal bool IsSetTransitGatewayPolicyTable();
}
public class Amazon.EC2.Model.DeleteTransitGatewayPrefixListReferenceRequest : AmazonEC2Request {
    private string _prefixListId;
    private string _transitGatewayRouteTableId;
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayPrefixListReferenceResponse : AmazonWebServiceResponse {
    private TransitGatewayPrefixListReference _transitGatewayPrefixListReference;
    public TransitGatewayPrefixListReference TransitGatewayPrefixListReference { get; public set; }
    public TransitGatewayPrefixListReference get_TransitGatewayPrefixListReference();
    public void set_TransitGatewayPrefixListReference(TransitGatewayPrefixListReference value);
    internal bool IsSetTransitGatewayPrefixListReference();
}
public class Amazon.EC2.Model.DeleteTransitGatewayRequest : AmazonEC2Request {
    private string _transitGatewayId;
    [AWSPropertyAttribute]
public string TransitGatewayId { get; public set; }
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayResponse : AmazonWebServiceResponse {
    private TransitGateway _transitGateway;
    public TransitGateway TransitGateway { get; public set; }
    public TransitGateway get_TransitGateway();
    public void set_TransitGateway(TransitGateway value);
    internal bool IsSetTransitGateway();
}
public class Amazon.EC2.Model.DeleteTransitGatewayRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _transitGatewayRouteTableId;
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayRouteResponse : AmazonWebServiceResponse {
    private TransitGatewayRoute _route;
    public TransitGatewayRoute Route { get; public set; }
    public TransitGatewayRoute get_Route();
    public void set_Route(TransitGatewayRoute value);
    internal bool IsSetRoute();
}
public class Amazon.EC2.Model.DeleteTransitGatewayRouteTableAnnouncementRequest : AmazonEC2Request {
    private string _transitGatewayRouteTableAnnouncementId;
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableAnnouncementId { get; public set; }
    public string get_TransitGatewayRouteTableAnnouncementId();
    public void set_TransitGatewayRouteTableAnnouncementId(string value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayRouteTableAnnouncementResponse : AmazonWebServiceResponse {
    private TransitGatewayRouteTableAnnouncement _transitGatewayRouteTableAnnouncement;
    public TransitGatewayRouteTableAnnouncement TransitGatewayRouteTableAnnouncement { get; public set; }
    public TransitGatewayRouteTableAnnouncement get_TransitGatewayRouteTableAnnouncement();
    public void set_TransitGatewayRouteTableAnnouncement(TransitGatewayRouteTableAnnouncement value);
    internal bool IsSetTransitGatewayRouteTableAnnouncement();
}
public class Amazon.EC2.Model.DeleteTransitGatewayRouteTableRequest : AmazonEC2Request {
    private string _transitGatewayRouteTableId;
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayRouteTableResponse : AmazonWebServiceResponse {
    private TransitGatewayRouteTable _transitGatewayRouteTable;
    public TransitGatewayRouteTable TransitGatewayRouteTable { get; public set; }
    public TransitGatewayRouteTable get_TransitGatewayRouteTable();
    public void set_TransitGatewayRouteTable(TransitGatewayRouteTable value);
    internal bool IsSetTransitGatewayRouteTable();
}
public class Amazon.EC2.Model.DeleteTransitGatewayVpcAttachmentRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.DeleteTransitGatewayVpcAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayVpcAttachment _transitGatewayVpcAttachment;
    public TransitGatewayVpcAttachment TransitGatewayVpcAttachment { get; public set; }
    public TransitGatewayVpcAttachment get_TransitGatewayVpcAttachment();
    public void set_TransitGatewayVpcAttachment(TransitGatewayVpcAttachment value);
    internal bool IsSetTransitGatewayVpcAttachment();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessEndpointRequest : AmazonEC2Request {
    private string _clientToken;
    private string _verifiedAccessEndpointId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessEndpointId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_VerifiedAccessEndpointId();
    public void set_VerifiedAccessEndpointId(string value);
    internal bool IsSetVerifiedAccessEndpointId();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessEndpointResponse : AmazonWebServiceResponse {
    private VerifiedAccessEndpoint _verifiedAccessEndpoint;
    public VerifiedAccessEndpoint VerifiedAccessEndpoint { get; public set; }
    public VerifiedAccessEndpoint get_VerifiedAccessEndpoint();
    public void set_VerifiedAccessEndpoint(VerifiedAccessEndpoint value);
    internal bool IsSetVerifiedAccessEndpoint();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessGroupRequest : AmazonEC2Request {
    private string _clientToken;
    private string _verifiedAccessGroupId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessGroupId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessGroupResponse : AmazonWebServiceResponse {
    private VerifiedAccessGroup _verifiedAccessGroup;
    public VerifiedAccessGroup VerifiedAccessGroup { get; public set; }
    public VerifiedAccessGroup get_VerifiedAccessGroup();
    public void set_VerifiedAccessGroup(VerifiedAccessGroup value);
    internal bool IsSetVerifiedAccessGroup();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessInstanceRequest : AmazonEC2Request {
    private string _clientToken;
    private string _verifiedAccessInstanceId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessInstanceId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessInstanceResponse : AmazonWebServiceResponse {
    private VerifiedAccessInstance _verifiedAccessInstance;
    public VerifiedAccessInstance VerifiedAccessInstance { get; public set; }
    public VerifiedAccessInstance get_VerifiedAccessInstance();
    public void set_VerifiedAccessInstance(VerifiedAccessInstance value);
    internal bool IsSetVerifiedAccessInstance();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessTrustProviderRequest : AmazonEC2Request {
    private string _clientToken;
    private string _verifiedAccessTrustProviderId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessTrustProviderId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_VerifiedAccessTrustProviderId();
    public void set_VerifiedAccessTrustProviderId(string value);
    internal bool IsSetVerifiedAccessTrustProviderId();
}
public class Amazon.EC2.Model.DeleteVerifiedAccessTrustProviderResponse : AmazonWebServiceResponse {
    private VerifiedAccessTrustProvider _verifiedAccessTrustProvider;
    public VerifiedAccessTrustProvider VerifiedAccessTrustProvider { get; public set; }
    public VerifiedAccessTrustProvider get_VerifiedAccessTrustProvider();
    public void set_VerifiedAccessTrustProvider(VerifiedAccessTrustProvider value);
    internal bool IsSetVerifiedAccessTrustProvider();
}
public class Amazon.EC2.Model.DeleteVolumeRequest : AmazonEC2Request {
    private string _volumeId;
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public DeleteVolumeRequest(string volumeId);
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.DeleteVolumeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpcEndpointConnectionNotificationsRequest : AmazonEC2Request {
    private List`1<string> _connectionNotificationIds;
    [AWSPropertyAttribute]
public List`1<string> ConnectionNotificationIds { get; public set; }
    public List`1<string> get_ConnectionNotificationIds();
    public void set_ConnectionNotificationIds(List`1<string> value);
    internal bool IsSetConnectionNotificationIds();
}
public class Amazon.EC2.Model.DeleteVpcEndpointConnectionNotificationsResponse : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.DeleteVpcEndpointServiceConfigurationsRequest : AmazonEC2Request {
    private List`1<string> _serviceIds;
    [AWSPropertyAttribute]
public List`1<string> ServiceIds { get; public set; }
    public List`1<string> get_ServiceIds();
    public void set_ServiceIds(List`1<string> value);
    internal bool IsSetServiceIds();
}
public class Amazon.EC2.Model.DeleteVpcEndpointServiceConfigurationsResponse : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.DeleteVpcEndpointsRequest : AmazonEC2Request {
    private List`1<string> _vpcEndpointIds;
    [AWSPropertyAttribute]
public List`1<string> VpcEndpointIds { get; public set; }
    public List`1<string> get_VpcEndpointIds();
    public void set_VpcEndpointIds(List`1<string> value);
    internal bool IsSetVpcEndpointIds();
}
public class Amazon.EC2.Model.DeleteVpcEndpointsResponse : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _vpcPeeringConnectionId;
    [AWSPropertyAttribute]
public string VpcPeeringConnectionId { get; public set; }
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.DeleteVpcPeeringConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpcRequest : AmazonEC2Request {
    private string _vpcId;
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public DeleteVpcRequest(string vpcId);
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DeleteVpcResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpnConnectionRequest : AmazonEC2Request {
    private string _vpnConnectionId;
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    public DeleteVpnConnectionRequest(string vpnConnectionId);
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.DeleteVpnConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpnConnectionRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _vpnConnectionId;
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.DeleteVpnConnectionRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpnGatewayRequest : AmazonEC2Request {
    private string _vpnGatewayId;
    [AWSPropertyAttribute]
public string VpnGatewayId { get; public set; }
    public DeleteVpnGatewayRequest(string vpnGatewayId);
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.DeleteVpnGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeprovisionByoipCidrRequest : AmazonEC2Request {
    private string _cidr;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
}
public class Amazon.EC2.Model.DeprovisionByoipCidrResponse : AmazonWebServiceResponse {
    private ByoipCidr _byoipCidr;
    public ByoipCidr ByoipCidr { get; public set; }
    public ByoipCidr get_ByoipCidr();
    public void set_ByoipCidr(ByoipCidr value);
    internal bool IsSetByoipCidr();
}
public class Amazon.EC2.Model.DeprovisionIpamByoasnRequest : AmazonEC2Request {
    private string _asn;
    private string _ipamId;
    [AWSPropertyAttribute]
public string Asn { get; public set; }
    [AWSPropertyAttribute]
public string IpamId { get; public set; }
    public string get_Asn();
    public void set_Asn(string value);
    internal bool IsSetAsn();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
}
public class Amazon.EC2.Model.DeprovisionIpamByoasnResponse : AmazonWebServiceResponse {
    private Byoasn _byoasn;
    public Byoasn Byoasn { get; public set; }
    public Byoasn get_Byoasn();
    public void set_Byoasn(Byoasn value);
    internal bool IsSetByoasn();
}
public class Amazon.EC2.Model.DeprovisionIpamPoolCidrRequest : AmazonEC2Request {
    private string _cidr;
    private string _ipamPoolId;
    public string Cidr { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
}
public class Amazon.EC2.Model.DeprovisionIpamPoolCidrResponse : AmazonWebServiceResponse {
    private IpamPoolCidr _ipamPoolCidr;
    public IpamPoolCidr IpamPoolCidr { get; public set; }
    public IpamPoolCidr get_IpamPoolCidr();
    public void set_IpamPoolCidr(IpamPoolCidr value);
    internal bool IsSetIpamPoolCidr();
}
public class Amazon.EC2.Model.DeprovisionPublicIpv4PoolCidrRequest : AmazonEC2Request {
    private string _cidr;
    private string _poolId;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.DeprovisionPublicIpv4PoolCidrResponse : AmazonWebServiceResponse {
    private List`1<string> _deprovisionedAddresses;
    private string _poolId;
    public List`1<string> DeprovisionedAddresses { get; public set; }
    public string PoolId { get; public set; }
    public List`1<string> get_DeprovisionedAddresses();
    public void set_DeprovisionedAddresses(List`1<string> value);
    internal bool IsSetDeprovisionedAddresses();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.DeregisterImageRequest : AmazonEC2Request {
    private string _imageId;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public DeregisterImageRequest(string imageId);
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DeregisterImageResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeregisterInstanceEventNotificationAttributesRequest : AmazonEC2Request {
    private DeregisterInstanceTagAttributeRequest _instanceTagAttribute;
    [AWSPropertyAttribute]
public DeregisterInstanceTagAttributeRequest InstanceTagAttribute { get; public set; }
    public DeregisterInstanceTagAttributeRequest get_InstanceTagAttribute();
    public void set_InstanceTagAttribute(DeregisterInstanceTagAttributeRequest value);
    internal bool IsSetInstanceTagAttribute();
}
public class Amazon.EC2.Model.DeregisterInstanceEventNotificationAttributesResponse : AmazonWebServiceResponse {
    private InstanceTagNotificationAttribute _instanceTagAttribute;
    public InstanceTagNotificationAttribute InstanceTagAttribute { get; public set; }
    public InstanceTagNotificationAttribute get_InstanceTagAttribute();
    public void set_InstanceTagAttribute(InstanceTagNotificationAttribute value);
    internal bool IsSetInstanceTagAttribute();
}
public class Amazon.EC2.Model.DeregisterInstanceTagAttributeRequest : object {
    private Nullable`1<bool> _includeAllTagsOfInstance;
    private List`1<string> _instanceTagKeys;
    public Nullable`1<bool> IncludeAllTagsOfInstance { get; public set; }
    public List`1<string> InstanceTagKeys { get; public set; }
    public Nullable`1<bool> get_IncludeAllTagsOfInstance();
    public void set_IncludeAllTagsOfInstance(Nullable`1<bool> value);
    internal bool IsSetIncludeAllTagsOfInstance();
    public List`1<string> get_InstanceTagKeys();
    public void set_InstanceTagKeys(List`1<string> value);
    internal bool IsSetInstanceTagKeys();
}
public class Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupMembersRequest : AmazonEC2Request {
    private string _groupIpAddress;
    private List`1<string> _networkInterfaceIds;
    private string _transitGatewayMulticastDomainId;
    public string GroupIpAddress { get; public set; }
    public List`1<string> NetworkInterfaceIds { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupMembersResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDeregisteredGroupMembers _deregisteredMulticastGroupMembers;
    public TransitGatewayMulticastDeregisteredGroupMembers DeregisteredMulticastGroupMembers { get; public set; }
    public TransitGatewayMulticastDeregisteredGroupMembers get_DeregisteredMulticastGroupMembers();
    public void set_DeregisteredMulticastGroupMembers(TransitGatewayMulticastDeregisteredGroupMembers value);
    internal bool IsSetDeregisteredMulticastGroupMembers();
}
public class Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupSourcesRequest : AmazonEC2Request {
    private string _groupIpAddress;
    private List`1<string> _networkInterfaceIds;
    private string _transitGatewayMulticastDomainId;
    public string GroupIpAddress { get; public set; }
    public List`1<string> NetworkInterfaceIds { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupSourcesResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDeregisteredGroupSources _deregisteredMulticastGroupSources;
    public TransitGatewayMulticastDeregisteredGroupSources DeregisteredMulticastGroupSources { get; public set; }
    public TransitGatewayMulticastDeregisteredGroupSources get_DeregisteredMulticastGroupSources();
    public void set_DeregisteredMulticastGroupSources(TransitGatewayMulticastDeregisteredGroupSources value);
    internal bool IsSetDeregisteredMulticastGroupSources();
}
public class Amazon.EC2.Model.DescribeAccountAttributesRequest : AmazonEC2Request {
    private List`1<string> _attributeNames;
    public List`1<string> AttributeNames { get; public set; }
    public List`1<string> get_AttributeNames();
    public void set_AttributeNames(List`1<string> value);
    internal bool IsSetAttributeNames();
}
public class Amazon.EC2.Model.DescribeAccountAttributesResponse : AmazonWebServiceResponse {
    private List`1<AccountAttribute> _accountAttributes;
    public List`1<AccountAttribute> AccountAttributes { get; public set; }
    public List`1<AccountAttribute> get_AccountAttributes();
    public void set_AccountAttributes(List`1<AccountAttribute> value);
    internal bool IsSetAccountAttributes();
}
internal class Amazon.EC2.Model.DescribeAddressesAttributePaginator : object {
    private IAmazonEC2 _client;
    private DescribeAddressesAttributeRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAddressesAttributeResponse> Responses { get; }
    public IPaginatedEnumerable`1<AddressAttribute> Addresses { get; }
    internal DescribeAddressesAttributePaginator(IAmazonEC2 client, DescribeAddressesAttributeRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAddressesAttributeResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AddressAttribute> get_Addresses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeAddressesAttributePaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeAddressesAttributeResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAddressesAttributeResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeAddressesAttributeResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeAddressesAttributeRequest : AmazonEC2Request {
    private List`1<string> _allocationIds;
    private AddressAttributeName _attribute;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> AllocationIds { get; public set; }
    public AddressAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AllocationIds();
    public void set_AllocationIds(List`1<string> value);
    internal bool IsSetAllocationIds();
    public AddressAttributeName get_Attribute();
    public void set_Attribute(AddressAttributeName value);
    internal bool IsSetAttribute();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeAddressesAttributeResponse : AmazonWebServiceResponse {
    private List`1<AddressAttribute> _addresses;
    private string _nextToken;
    public List`1<AddressAttribute> Addresses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AddressAttribute> get_Addresses();
    public void set_Addresses(List`1<AddressAttribute> value);
    internal bool IsSetAddresses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeAddressesRequest : AmazonEC2Request {
    private List`1<string> _allocationIds;
    private List`1<Filter> _filters;
    private List`1<string> _publicIps;
    public List`1<string> AllocationIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> PublicIps { get; public set; }
    public List`1<string> get_AllocationIds();
    public void set_AllocationIds(List`1<string> value);
    internal bool IsSetAllocationIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_PublicIps();
    public void set_PublicIps(List`1<string> value);
    internal bool IsSetPublicIps();
}
public class Amazon.EC2.Model.DescribeAddressesResponse : AmazonWebServiceResponse {
    private List`1<Address> _addresses;
    public List`1<Address> Addresses { get; public set; }
    public List`1<Address> get_Addresses();
    public void set_Addresses(List`1<Address> value);
    internal bool IsSetAddresses();
}
internal class Amazon.EC2.Model.DescribeAddressTransfersPaginator : object {
    private IAmazonEC2 _client;
    private DescribeAddressTransfersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAddressTransfersResponse> Responses { get; }
    public IPaginatedEnumerable`1<AddressTransfer> AddressTransfers { get; }
    internal DescribeAddressTransfersPaginator(IAmazonEC2 client, DescribeAddressTransfersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAddressTransfersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AddressTransfer> get_AddressTransfers();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeAddressTransfersPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeAddressTransfersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAddressTransfersResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeAddressTransfersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeAddressTransfersRequest : AmazonEC2Request {
    private List`1<string> _allocationIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> AllocationIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AllocationIds();
    public void set_AllocationIds(List`1<string> value);
    internal bool IsSetAllocationIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeAddressTransfersResponse : AmazonWebServiceResponse {
    private List`1<AddressTransfer> _addressTransfers;
    private string _nextToken;
    public List`1<AddressTransfer> AddressTransfers { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AddressTransfer> get_AddressTransfers();
    public void set_AddressTransfers(List`1<AddressTransfer> value);
    internal bool IsSetAddressTransfers();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeAggregateIdFormatRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DescribeAggregateIdFormatResponse : AmazonWebServiceResponse {
    private List`1<IdFormat> _statuses;
    private Nullable`1<bool> _useLongIdsAggregated;
    public List`1<IdFormat> Statuses { get; public set; }
    public Nullable`1<bool> UseLongIdsAggregated { get; public set; }
    public List`1<IdFormat> get_Statuses();
    public void set_Statuses(List`1<IdFormat> value);
    internal bool IsSetStatuses();
    public Nullable`1<bool> get_UseLongIdsAggregated();
    public void set_UseLongIdsAggregated(Nullable`1<bool> value);
    internal bool IsSetUseLongIdsAggregated();
}
public class Amazon.EC2.Model.DescribeAvailabilityZonesRequest : AmazonEC2Request {
    private Nullable`1<bool> _allAvailabilityZones;
    private List`1<Filter> _filters;
    private List`1<string> _zoneIds;
    private List`1<string> _zoneNames;
    public Nullable`1<bool> AllAvailabilityZones { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ZoneIds { get; public set; }
    public List`1<string> ZoneNames { get; public set; }
    public Nullable`1<bool> get_AllAvailabilityZones();
    public void set_AllAvailabilityZones(Nullable`1<bool> value);
    internal bool IsSetAllAvailabilityZones();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ZoneIds();
    public void set_ZoneIds(List`1<string> value);
    internal bool IsSetZoneIds();
    public List`1<string> get_ZoneNames();
    public void set_ZoneNames(List`1<string> value);
    internal bool IsSetZoneNames();
}
public class Amazon.EC2.Model.DescribeAvailabilityZonesResponse : AmazonWebServiceResponse {
    private List`1<AvailabilityZone> _availabilityZones;
    public List`1<AvailabilityZone> AvailabilityZones { get; public set; }
    public List`1<AvailabilityZone> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<AvailabilityZone> value);
    internal bool IsSetAvailabilityZones();
}
internal class Amazon.EC2.Model.DescribeAwsNetworkPerformanceMetricSubscriptionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeAwsNetworkPerformanceMetricSubscriptionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAwsNetworkPerformanceMetricSubscriptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Subscription> Subscriptions { get; }
    internal DescribeAwsNetworkPerformanceMetricSubscriptionsPaginator(IAmazonEC2 client, DescribeAwsNetworkPerformanceMetricSubscriptionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAwsNetworkPerformanceMetricSubscriptionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Subscription> get_Subscriptions();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeAwsNetworkPerformanceMetricSubscriptionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeAwsNetworkPerformanceMetricSubscriptionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAwsNetworkPerformanceMetricSubscriptionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeAwsNetworkPerformanceMetricSubscriptionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeAwsNetworkPerformanceMetricSubscriptionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeAwsNetworkPerformanceMetricSubscriptionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Subscription> _subscriptions;
    public string NextToken { get; public set; }
    public List`1<Subscription> Subscriptions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Subscription> get_Subscriptions();
    public void set_Subscriptions(List`1<Subscription> value);
    internal bool IsSetSubscriptions();
}
public class Amazon.EC2.Model.DescribeBundleTasksRequest : AmazonEC2Request {
    private List`1<string> _bundleIds;
    private List`1<Filter> _filters;
    public List`1<string> BundleIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> get_BundleIds();
    public void set_BundleIds(List`1<string> value);
    internal bool IsSetBundleIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.EC2.Model.DescribeBundleTasksResponse : AmazonWebServiceResponse {
    private List`1<BundleTask> _bundleTasks;
    public List`1<BundleTask> BundleTasks { get; public set; }
    public List`1<BundleTask> get_BundleTasks();
    public void set_BundleTasks(List`1<BundleTask> value);
    internal bool IsSetBundleTasks();
}
internal class Amazon.EC2.Model.DescribeByoipCidrsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeByoipCidrsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeByoipCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ByoipCidr> ByoipCidrs { get; }
    internal DescribeByoipCidrsPaginator(IAmazonEC2 client, DescribeByoipCidrsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeByoipCidrsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ByoipCidr> get_ByoipCidrs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeByoipCidrsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeByoipCidrsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeByoipCidrsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeByoipCidrsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeByoipCidrsRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeByoipCidrsResponse : AmazonWebServiceResponse {
    private List`1<ByoipCidr> _byoipCidrs;
    private string _nextToken;
    public List`1<ByoipCidr> ByoipCidrs { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ByoipCidr> get_ByoipCidrs();
    public void set_ByoipCidrs(List`1<ByoipCidr> value);
    internal bool IsSetByoipCidrs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeCapacityBlockOfferingsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeCapacityBlockOfferingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeCapacityBlockOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityBlockOffering> CapacityBlockOfferings { get; }
    internal DescribeCapacityBlockOfferingsPaginator(IAmazonEC2 client, DescribeCapacityBlockOfferingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeCapacityBlockOfferingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CapacityBlockOffering> get_CapacityBlockOfferings();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeCapacityBlockOfferingsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeCapacityBlockOfferingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeCapacityBlockOfferingsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeCapacityBlockOfferingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeCapacityBlockOfferingsRequest : AmazonEC2Request {
    private Nullable`1<int> _capacityDurationHours;
    private Nullable`1<DateTime> _endDateRange;
    private Nullable`1<int> _instanceCount;
    private string _instanceType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _startDateRange;
    [AWSPropertyAttribute]
public Nullable`1<int> CapacityDurationHours { get; public set; }
    public Nullable`1<DateTime> EndDateRange { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> InstanceCount { get; public set; }
    [AWSPropertyAttribute]
public string InstanceType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> StartDateRange { get; public set; }
    public Nullable`1<int> get_CapacityDurationHours();
    public void set_CapacityDurationHours(Nullable`1<int> value);
    internal bool IsSetCapacityDurationHours();
    public Nullable`1<DateTime> get_EndDateRange();
    public void set_EndDateRange(Nullable`1<DateTime> value);
    internal bool IsSetEndDateRange();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartDateRange();
    public void set_StartDateRange(Nullable`1<DateTime> value);
    internal bool IsSetStartDateRange();
}
public class Amazon.EC2.Model.DescribeCapacityBlockOfferingsResponse : AmazonWebServiceResponse {
    private List`1<CapacityBlockOffering> _capacityBlockOfferings;
    private string _nextToken;
    public List`1<CapacityBlockOffering> CapacityBlockOfferings { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CapacityBlockOffering> get_CapacityBlockOfferings();
    public void set_CapacityBlockOfferings(List`1<CapacityBlockOffering> value);
    internal bool IsSetCapacityBlockOfferings();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeCapacityReservationFleetsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeCapacityReservationFleetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeCapacityReservationFleetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityReservationFleet> CapacityReservationFleets { get; }
    internal DescribeCapacityReservationFleetsPaginator(IAmazonEC2 client, DescribeCapacityReservationFleetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeCapacityReservationFleetsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CapacityReservationFleet> get_CapacityReservationFleets();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeCapacityReservationFleetsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeCapacityReservationFleetsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeCapacityReservationFleetsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeCapacityReservationFleetsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeCapacityReservationFleetsRequest : AmazonEC2Request {
    private List`1<string> _capacityReservationFleetIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> CapacityReservationFleetIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_CapacityReservationFleetIds();
    public void set_CapacityReservationFleetIds(List`1<string> value);
    internal bool IsSetCapacityReservationFleetIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeCapacityReservationFleetsResponse : AmazonWebServiceResponse {
    private List`1<CapacityReservationFleet> _capacityReservationFleets;
    private string _nextToken;
    public List`1<CapacityReservationFleet> CapacityReservationFleets { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CapacityReservationFleet> get_CapacityReservationFleets();
    public void set_CapacityReservationFleets(List`1<CapacityReservationFleet> value);
    internal bool IsSetCapacityReservationFleets();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeCapacityReservationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeCapacityReservationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeCapacityReservationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityReservation> CapacityReservations { get; }
    internal DescribeCapacityReservationsPaginator(IAmazonEC2 client, DescribeCapacityReservationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeCapacityReservationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CapacityReservation> get_CapacityReservations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeCapacityReservationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeCapacityReservationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeCapacityReservationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeCapacityReservationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeCapacityReservationsRequest : AmazonEC2Request {
    private List`1<string> _capacityReservationIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> CapacityReservationIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_CapacityReservationIds();
    public void set_CapacityReservationIds(List`1<string> value);
    internal bool IsSetCapacityReservationIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeCapacityReservationsResponse : AmazonWebServiceResponse {
    private List`1<CapacityReservation> _capacityReservations;
    private string _nextToken;
    public List`1<CapacityReservation> CapacityReservations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CapacityReservation> get_CapacityReservations();
    public void set_CapacityReservations(List`1<CapacityReservation> value);
    internal bool IsSetCapacityReservations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeCarrierGatewaysPaginator : object {
    private IAmazonEC2 _client;
    private DescribeCarrierGatewaysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeCarrierGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<CarrierGateway> CarrierGateways { get; }
    internal DescribeCarrierGatewaysPaginator(IAmazonEC2 client, DescribeCarrierGatewaysRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeCarrierGatewaysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CarrierGateway> get_CarrierGateways();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeCarrierGatewaysPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeCarrierGatewaysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeCarrierGatewaysResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeCarrierGatewaysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeCarrierGatewaysRequest : AmazonEC2Request {
    private List`1<string> _carrierGatewayIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> CarrierGatewayIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_CarrierGatewayIds();
    public void set_CarrierGatewayIds(List`1<string> value);
    internal bool IsSetCarrierGatewayIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeCarrierGatewaysResponse : AmazonWebServiceResponse {
    private List`1<CarrierGateway> _carrierGateways;
    private string _nextToken;
    public List`1<CarrierGateway> CarrierGateways { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CarrierGateway> get_CarrierGateways();
    public void set_CarrierGateways(List`1<CarrierGateway> value);
    internal bool IsSetCarrierGateways();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeClassicLinkInstancesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeClassicLinkInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeClassicLinkInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClassicLinkInstance> Instances { get; }
    internal DescribeClassicLinkInstancesPaginator(IAmazonEC2 client, DescribeClassicLinkInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeClassicLinkInstancesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClassicLinkInstance> get_Instances();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeClassicLinkInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeClassicLinkInstancesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeClassicLinkInstancesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeClassicLinkInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeClassicLinkInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeClassicLinkInstancesResponse : AmazonWebServiceResponse {
    private List`1<ClassicLinkInstance> _instances;
    private string _nextToken;
    public List`1<ClassicLinkInstance> Instances { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClassicLinkInstance> get_Instances();
    public void set_Instances(List`1<ClassicLinkInstance> value);
    internal bool IsSetInstances();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeClientVpnAuthorizationRulesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeClientVpnAuthorizationRulesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeClientVpnAuthorizationRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<AuthorizationRule> AuthorizationRules { get; }
    internal DescribeClientVpnAuthorizationRulesPaginator(IAmazonEC2 client, DescribeClientVpnAuthorizationRulesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeClientVpnAuthorizationRulesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AuthorizationRule> get_AuthorizationRules();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeClientVpnAuthorizationRulesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeClientVpnAuthorizationRulesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeClientVpnAuthorizationRulesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeClientVpnAuthorizationRulesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeClientVpnAuthorizationRulesRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeClientVpnAuthorizationRulesResponse : AmazonWebServiceResponse {
    private List`1<AuthorizationRule> _authorizationRules;
    private string _nextToken;
    public List`1<AuthorizationRule> AuthorizationRules { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AuthorizationRule> get_AuthorizationRules();
    public void set_AuthorizationRules(List`1<AuthorizationRule> value);
    internal bool IsSetAuthorizationRules();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeClientVpnConnectionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeClientVpnConnectionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeClientVpnConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpnConnection> Connections { get; }
    internal DescribeClientVpnConnectionsPaginator(IAmazonEC2 client, DescribeClientVpnConnectionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeClientVpnConnectionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClientVpnConnection> get_Connections();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeClientVpnConnectionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeClientVpnConnectionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeClientVpnConnectionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeClientVpnConnectionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeClientVpnConnectionsRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeClientVpnConnectionsResponse : AmazonWebServiceResponse {
    private List`1<ClientVpnConnection> _connections;
    private string _nextToken;
    public List`1<ClientVpnConnection> Connections { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClientVpnConnection> get_Connections();
    public void set_Connections(List`1<ClientVpnConnection> value);
    internal bool IsSetConnections();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeClientVpnEndpointsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeClientVpnEndpointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeClientVpnEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpnEndpoint> ClientVpnEndpoints { get; }
    internal DescribeClientVpnEndpointsPaginator(IAmazonEC2 client, DescribeClientVpnEndpointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeClientVpnEndpointsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClientVpnEndpoint> get_ClientVpnEndpoints();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeClientVpnEndpointsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeClientVpnEndpointsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeClientVpnEndpointsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeClientVpnEndpointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeClientVpnEndpointsRequest : AmazonEC2Request {
    private List`1<string> _clientVpnEndpointIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> ClientVpnEndpointIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_ClientVpnEndpointIds();
    public void set_ClientVpnEndpointIds(List`1<string> value);
    internal bool IsSetClientVpnEndpointIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeClientVpnEndpointsResponse : AmazonWebServiceResponse {
    private List`1<ClientVpnEndpoint> _clientVpnEndpoints;
    private string _nextToken;
    public List`1<ClientVpnEndpoint> ClientVpnEndpoints { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClientVpnEndpoint> get_ClientVpnEndpoints();
    public void set_ClientVpnEndpoints(List`1<ClientVpnEndpoint> value);
    internal bool IsSetClientVpnEndpoints();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeClientVpnRoutesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeClientVpnRoutesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeClientVpnRoutesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpnRoute> Routes { get; }
    internal DescribeClientVpnRoutesPaginator(IAmazonEC2 client, DescribeClientVpnRoutesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeClientVpnRoutesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClientVpnRoute> get_Routes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeClientVpnRoutesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeClientVpnRoutesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeClientVpnRoutesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeClientVpnRoutesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeClientVpnRoutesRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeClientVpnRoutesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ClientVpnRoute> _routes;
    public string NextToken { get; public set; }
    public List`1<ClientVpnRoute> Routes { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ClientVpnRoute> get_Routes();
    public void set_Routes(List`1<ClientVpnRoute> value);
    internal bool IsSetRoutes();
}
internal class Amazon.EC2.Model.DescribeClientVpnTargetNetworksPaginator : object {
    private IAmazonEC2 _client;
    private DescribeClientVpnTargetNetworksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeClientVpnTargetNetworksResponse> Responses { get; }
    public IPaginatedEnumerable`1<TargetNetwork> ClientVpnTargetNetworks { get; }
    internal DescribeClientVpnTargetNetworksPaginator(IAmazonEC2 client, DescribeClientVpnTargetNetworksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeClientVpnTargetNetworksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TargetNetwork> get_ClientVpnTargetNetworks();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeClientVpnTargetNetworksPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeClientVpnTargetNetworksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeClientVpnTargetNetworksResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeClientVpnTargetNetworksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeClientVpnTargetNetworksRequest : AmazonEC2Request {
    private List`1<string> _associationIds;
    private string _clientVpnEndpointId;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> AssociationIds { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AssociationIds();
    public void set_AssociationIds(List`1<string> value);
    internal bool IsSetAssociationIds();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeClientVpnTargetNetworksResponse : AmazonWebServiceResponse {
    private List`1<TargetNetwork> _clientVpnTargetNetworks;
    private string _nextToken;
    public List`1<TargetNetwork> ClientVpnTargetNetworks { get; public set; }
    public string NextToken { get; public set; }
    public List`1<TargetNetwork> get_ClientVpnTargetNetworks();
    public void set_ClientVpnTargetNetworks(List`1<TargetNetwork> value);
    internal bool IsSetClientVpnTargetNetworks();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeCoipPoolsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeCoipPoolsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeCoipPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CoipPool> CoipPools { get; }
    internal DescribeCoipPoolsPaginator(IAmazonEC2 client, DescribeCoipPoolsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeCoipPoolsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CoipPool> get_CoipPools();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeCoipPoolsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeCoipPoolsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeCoipPoolsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeCoipPoolsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeCoipPoolsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _poolIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PoolIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PoolIds();
    public void set_PoolIds(List`1<string> value);
    internal bool IsSetPoolIds();
}
public class Amazon.EC2.Model.DescribeCoipPoolsResponse : AmazonWebServiceResponse {
    private List`1<CoipPool> _coipPools;
    private string _nextToken;
    public List`1<CoipPool> CoipPools { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CoipPool> get_CoipPools();
    public void set_CoipPools(List`1<CoipPool> value);
    internal bool IsSetCoipPools();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeConversionTasksRequest : AmazonEC2Request {
    private List`1<string> _conversionTaskIds;
    public List`1<string> ConversionTaskIds { get; public set; }
    public List`1<string> get_ConversionTaskIds();
    public void set_ConversionTaskIds(List`1<string> value);
    internal bool IsSetConversionTaskIds();
}
public class Amazon.EC2.Model.DescribeConversionTasksResponse : AmazonWebServiceResponse {
    private List`1<ConversionTask> _conversionTasks;
    public List`1<ConversionTask> ConversionTasks { get; public set; }
    public List`1<ConversionTask> get_ConversionTasks();
    public void set_ConversionTasks(List`1<ConversionTask> value);
    internal bool IsSetConversionTasks();
}
public class Amazon.EC2.Model.DescribeCustomerGatewaysRequest : AmazonEC2Request {
    private List`1<string> _customerGatewayIds;
    private List`1<Filter> _filters;
    public List`1<string> CustomerGatewayIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> get_CustomerGatewayIds();
    public void set_CustomerGatewayIds(List`1<string> value);
    internal bool IsSetCustomerGatewayIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.EC2.Model.DescribeCustomerGatewaysResponse : AmazonWebServiceResponse {
    private List`1<CustomerGateway> _customerGateways;
    public List`1<CustomerGateway> CustomerGateways { get; public set; }
    public List`1<CustomerGateway> get_CustomerGateways();
    public void set_CustomerGateways(List`1<CustomerGateway> value);
    internal bool IsSetCustomerGateways();
}
internal class Amazon.EC2.Model.DescribeDhcpOptionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeDhcpOptionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDhcpOptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DhcpOptions> DhcpOptions { get; }
    internal DescribeDhcpOptionsPaginator(IAmazonEC2 client, DescribeDhcpOptionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDhcpOptionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DhcpOptions> get_DhcpOptions();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeDhcpOptionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeDhcpOptionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDhcpOptionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeDhcpOptionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeDhcpOptionsRequest : AmazonEC2Request {
    private List`1<string> _dhcpOptionsIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> DhcpOptionsIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_DhcpOptionsIds();
    public void set_DhcpOptionsIds(List`1<string> value);
    internal bool IsSetDhcpOptionsIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeDhcpOptionsResponse : AmazonWebServiceResponse {
    private List`1<DhcpOptions> _dhcpOptions;
    private string _nextToken;
    public List`1<DhcpOptions> DhcpOptions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DhcpOptions> get_DhcpOptions();
    public void set_DhcpOptions(List`1<DhcpOptions> value);
    internal bool IsSetDhcpOptions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeEgressOnlyInternetGatewaysPaginator : object {
    private IAmazonEC2 _client;
    private DescribeEgressOnlyInternetGatewaysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEgressOnlyInternetGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<EgressOnlyInternetGateway> EgressOnlyInternetGateways { get; }
    internal DescribeEgressOnlyInternetGatewaysPaginator(IAmazonEC2 client, DescribeEgressOnlyInternetGatewaysRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEgressOnlyInternetGatewaysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<EgressOnlyInternetGateway> get_EgressOnlyInternetGateways();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeEgressOnlyInternetGatewaysPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeEgressOnlyInternetGatewaysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeEgressOnlyInternetGatewaysResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeEgressOnlyInternetGatewaysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeEgressOnlyInternetGatewaysRequest : AmazonEC2Request {
    private List`1<string> _egressOnlyInternetGatewayIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> EgressOnlyInternetGatewayIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_EgressOnlyInternetGatewayIds();
    public void set_EgressOnlyInternetGatewayIds(List`1<string> value);
    internal bool IsSetEgressOnlyInternetGatewayIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeEgressOnlyInternetGatewaysResponse : AmazonWebServiceResponse {
    private List`1<EgressOnlyInternetGateway> _egressOnlyInternetGateways;
    private string _nextToken;
    public List`1<EgressOnlyInternetGateway> EgressOnlyInternetGateways { get; public set; }
    public string NextToken { get; public set; }
    public List`1<EgressOnlyInternetGateway> get_EgressOnlyInternetGateways();
    public void set_EgressOnlyInternetGateways(List`1<EgressOnlyInternetGateway> value);
    internal bool IsSetEgressOnlyInternetGateways();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeElasticGpusRequest : AmazonEC2Request {
    private List`1<string> _elasticGpuIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> ElasticGpuIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_ElasticGpuIds();
    public void set_ElasticGpuIds(List`1<string> value);
    internal bool IsSetElasticGpuIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeElasticGpusResponse : AmazonWebServiceResponse {
    private List`1<ElasticGpus> _elasticGpuSet;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<ElasticGpus> ElasticGpuSet { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ElasticGpus> get_ElasticGpuSet();
    public void set_ElasticGpuSet(List`1<ElasticGpus> value);
    internal bool IsSetElasticGpuSet();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeExportImageTasksPaginator : object {
    private IAmazonEC2 _client;
    private DescribeExportImageTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeExportImageTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ExportImageTask> ExportImageTasks { get; }
    internal DescribeExportImageTasksPaginator(IAmazonEC2 client, DescribeExportImageTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeExportImageTasksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ExportImageTask> get_ExportImageTasks();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeExportImageTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeExportImageTasksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeExportImageTasksResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeExportImageTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeExportImageTasksRequest : AmazonEC2Request {
    private List`1<string> _exportImageTaskIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> ExportImageTaskIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_ExportImageTaskIds();
    public void set_ExportImageTaskIds(List`1<string> value);
    internal bool IsSetExportImageTaskIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeExportImageTasksResponse : AmazonWebServiceResponse {
    private List`1<ExportImageTask> _exportImageTasks;
    private string _nextToken;
    public List`1<ExportImageTask> ExportImageTasks { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ExportImageTask> get_ExportImageTasks();
    public void set_ExportImageTasks(List`1<ExportImageTask> value);
    internal bool IsSetExportImageTasks();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeExportTasksRequest : AmazonEC2Request {
    private List`1<string> _exportTaskIds;
    private List`1<Filter> _filters;
    public List`1<string> ExportTaskIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> get_ExportTaskIds();
    public void set_ExportTaskIds(List`1<string> value);
    internal bool IsSetExportTaskIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.EC2.Model.DescribeExportTasksResponse : AmazonWebServiceResponse {
    private List`1<ExportTask> _exportTasks;
    public List`1<ExportTask> ExportTasks { get; public set; }
    public List`1<ExportTask> get_ExportTasks();
    public void set_ExportTasks(List`1<ExportTask> value);
    internal bool IsSetExportTasks();
}
internal class Amazon.EC2.Model.DescribeFastLaunchImagesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeFastLaunchImagesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFastLaunchImagesResponse> Responses { get; }
    public IPaginatedEnumerable`1<DescribeFastLaunchImagesSuccessItem> FastLaunchImages { get; }
    internal DescribeFastLaunchImagesPaginator(IAmazonEC2 client, DescribeFastLaunchImagesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFastLaunchImagesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DescribeFastLaunchImagesSuccessItem> get_FastLaunchImages();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeFastLaunchImagesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeFastLaunchImagesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeFastLaunchImagesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeFastLaunchImagesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeFastLaunchImagesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _imageIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImageIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImageIds();
    public void set_ImageIds(List`1<string> value);
    internal bool IsSetImageIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFastLaunchImagesResponse : AmazonWebServiceResponse {
    private List`1<DescribeFastLaunchImagesSuccessItem> _fastLaunchImages;
    private string _nextToken;
    public List`1<DescribeFastLaunchImagesSuccessItem> FastLaunchImages { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DescribeFastLaunchImagesSuccessItem> get_FastLaunchImages();
    public void set_FastLaunchImages(List`1<DescribeFastLaunchImagesSuccessItem> value);
    internal bool IsSetFastLaunchImages();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFastLaunchImagesSuccessItem : object {
    private string _imageId;
    private FastLaunchLaunchTemplateSpecificationResponse _launchTemplate;
    private Nullable`1<int> _maxParallelLaunches;
    private string _ownerId;
    private FastLaunchResourceType _resourceType;
    private FastLaunchSnapshotConfigurationResponse _snapshotConfiguration;
    private FastLaunchStateCode _state;
    private string _stateTransitionReason;
    private Nullable`1<DateTime> _stateTransitionTime;
    public string ImageId { get; public set; }
    public FastLaunchLaunchTemplateSpecificationResponse LaunchTemplate { get; public set; }
    public Nullable`1<int> MaxParallelLaunches { get; public set; }
    public string OwnerId { get; public set; }
    public FastLaunchResourceType ResourceType { get; public set; }
    public FastLaunchSnapshotConfigurationResponse SnapshotConfiguration { get; public set; }
    public FastLaunchStateCode State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public Nullable`1<DateTime> StateTransitionTime { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public FastLaunchLaunchTemplateSpecificationResponse get_LaunchTemplate();
    public void set_LaunchTemplate(FastLaunchLaunchTemplateSpecificationResponse value);
    internal bool IsSetLaunchTemplate();
    public Nullable`1<int> get_MaxParallelLaunches();
    public void set_MaxParallelLaunches(Nullable`1<int> value);
    internal bool IsSetMaxParallelLaunches();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public FastLaunchResourceType get_ResourceType();
    public void set_ResourceType(FastLaunchResourceType value);
    internal bool IsSetResourceType();
    public FastLaunchSnapshotConfigurationResponse get_SnapshotConfiguration();
    public void set_SnapshotConfiguration(FastLaunchSnapshotConfigurationResponse value);
    internal bool IsSetSnapshotConfiguration();
    public FastLaunchStateCode get_State();
    public void set_State(FastLaunchStateCode value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public Nullable`1<DateTime> get_StateTransitionTime();
    public void set_StateTransitionTime(Nullable`1<DateTime> value);
    internal bool IsSetStateTransitionTime();
}
internal class Amazon.EC2.Model.DescribeFastSnapshotRestoresPaginator : object {
    private IAmazonEC2 _client;
    private DescribeFastSnapshotRestoresRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFastSnapshotRestoresResponse> Responses { get; }
    public IPaginatedEnumerable`1<DescribeFastSnapshotRestoreSuccessItem> FastSnapshotRestores { get; }
    internal DescribeFastSnapshotRestoresPaginator(IAmazonEC2 client, DescribeFastSnapshotRestoresRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFastSnapshotRestoresResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DescribeFastSnapshotRestoreSuccessItem> get_FastSnapshotRestores();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeFastSnapshotRestoresPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeFastSnapshotRestoresResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeFastSnapshotRestoresResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeFastSnapshotRestoresResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeFastSnapshotRestoresRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFastSnapshotRestoresResponse : AmazonWebServiceResponse {
    private List`1<DescribeFastSnapshotRestoreSuccessItem> _fastSnapshotRestores;
    private string _nextToken;
    public List`1<DescribeFastSnapshotRestoreSuccessItem> FastSnapshotRestores { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DescribeFastSnapshotRestoreSuccessItem> get_FastSnapshotRestores();
    public void set_FastSnapshotRestores(List`1<DescribeFastSnapshotRestoreSuccessItem> value);
    internal bool IsSetFastSnapshotRestores();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFastSnapshotRestoreSuccessItem : object {
    private string _availabilityZone;
    private Nullable`1<DateTime> _disabledTime;
    private Nullable`1<DateTime> _disablingTime;
    private Nullable`1<DateTime> _enabledTime;
    private Nullable`1<DateTime> _enablingTime;
    private Nullable`1<DateTime> _optimizingTime;
    private string _ownerAlias;
    private string _ownerId;
    private string _snapshotId;
    private FastSnapshotRestoreStateCode _state;
    private string _stateTransitionReason;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> DisabledTime { get; public set; }
    public Nullable`1<DateTime> DisablingTime { get; public set; }
    public Nullable`1<DateTime> EnabledTime { get; public set; }
    public Nullable`1<DateTime> EnablingTime { get; public set; }
    public Nullable`1<DateTime> OptimizingTime { get; public set; }
    public string OwnerAlias { get; public set; }
    public string OwnerId { get; public set; }
    public string SnapshotId { get; public set; }
    public FastSnapshotRestoreStateCode State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_DisabledTime();
    public void set_DisabledTime(Nullable`1<DateTime> value);
    internal bool IsSetDisabledTime();
    public Nullable`1<DateTime> get_DisablingTime();
    public void set_DisablingTime(Nullable`1<DateTime> value);
    internal bool IsSetDisablingTime();
    public Nullable`1<DateTime> get_EnabledTime();
    public void set_EnabledTime(Nullable`1<DateTime> value);
    internal bool IsSetEnabledTime();
    public Nullable`1<DateTime> get_EnablingTime();
    public void set_EnablingTime(Nullable`1<DateTime> value);
    internal bool IsSetEnablingTime();
    public Nullable`1<DateTime> get_OptimizingTime();
    public void set_OptimizingTime(Nullable`1<DateTime> value);
    internal bool IsSetOptimizingTime();
    public string get_OwnerAlias();
    public void set_OwnerAlias(string value);
    internal bool IsSetOwnerAlias();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public FastSnapshotRestoreStateCode get_State();
    public void set_State(FastSnapshotRestoreStateCode value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
}
public class Amazon.EC2.Model.DescribeFleetError : object {
    private string _errorCode;
    private string _errorMessage;
    private LaunchTemplateAndOverridesResponse _launchTemplateAndOverrides;
    private InstanceLifecycle _lifecycle;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public LaunchTemplateAndOverridesResponse LaunchTemplateAndOverrides { get; public set; }
    public InstanceLifecycle Lifecycle { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public LaunchTemplateAndOverridesResponse get_LaunchTemplateAndOverrides();
    public void set_LaunchTemplateAndOverrides(LaunchTemplateAndOverridesResponse value);
    internal bool IsSetLaunchTemplateAndOverrides();
    public InstanceLifecycle get_Lifecycle();
    public void set_Lifecycle(InstanceLifecycle value);
    internal bool IsSetLifecycle();
}
public class Amazon.EC2.Model.DescribeFleetHistoryRequest : AmazonEC2Request {
    private FleetEventType _eventType;
    private string _fleetId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _startTimeUtc;
    private Nullable`1<DateTime> _startTime;
    public FleetEventType EventType { get; public set; }
    [AWSPropertyAttribute]
public string FleetId { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public FleetEventType get_EventType();
    public void set_EventType(FleetEventType value);
    internal bool IsSetEventType();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTimeUtc();
    public void set_StartTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartTimeUtc();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.DescribeFleetHistoryResponse : AmazonWebServiceResponse {
    private string _fleetId;
    private List`1<HistoryRecordEntry> _historyRecords;
    private Nullable`1<DateTime> _lastEvaluatedTime;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    public string FleetId { get; public set; }
    public List`1<HistoryRecordEntry> HistoryRecords { get; public set; }
    public Nullable`1<DateTime> LastEvaluatedTime { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public List`1<HistoryRecordEntry> get_HistoryRecords();
    public void set_HistoryRecords(List`1<HistoryRecordEntry> value);
    internal bool IsSetHistoryRecords();
    public Nullable`1<DateTime> get_LastEvaluatedTime();
    public void set_LastEvaluatedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastEvaluatedTime();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.EC2.Model.DescribeFleetInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _fleetId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string FleetId { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFleetInstancesResponse : AmazonWebServiceResponse {
    private List`1<ActiveInstance> _activeInstances;
    private string _fleetId;
    private string _nextToken;
    public List`1<ActiveInstance> ActiveInstances { get; public set; }
    public string FleetId { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ActiveInstance> get_ActiveInstances();
    public void set_ActiveInstances(List`1<ActiveInstance> value);
    internal bool IsSetActiveInstances();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFleetsInstances : object {
    private List`1<string> _instanceIds;
    private InstanceType _instanceType;
    private LaunchTemplateAndOverridesResponse _launchTemplateAndOverrides;
    private InstanceLifecycle _lifecycle;
    private PlatformValues _platform;
    public List`1<string> InstanceIds { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public LaunchTemplateAndOverridesResponse LaunchTemplateAndOverrides { get; public set; }
    public InstanceLifecycle Lifecycle { get; public set; }
    public PlatformValues Platform { get; public set; }
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public LaunchTemplateAndOverridesResponse get_LaunchTemplateAndOverrides();
    public void set_LaunchTemplateAndOverrides(LaunchTemplateAndOverridesResponse value);
    internal bool IsSetLaunchTemplateAndOverrides();
    public InstanceLifecycle get_Lifecycle();
    public void set_Lifecycle(InstanceLifecycle value);
    internal bool IsSetLifecycle();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
}
internal class Amazon.EC2.Model.DescribeFleetsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeFleetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFleetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FleetData> Fleets { get; }
    internal DescribeFleetsPaginator(IAmazonEC2 client, DescribeFleetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFleetsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FleetData> get_Fleets();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeFleetsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeFleetsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeFleetsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeFleetsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeFleetsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _fleetIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> FleetIds { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_FleetIds();
    public void set_FleetIds(List`1<string> value);
    internal bool IsSetFleetIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFleetsResponse : AmazonWebServiceResponse {
    private List`1<FleetData> _fleets;
    private string _nextToken;
    public List`1<FleetData> Fleets { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FleetData> get_Fleets();
    public void set_Fleets(List`1<FleetData> value);
    internal bool IsSetFleets();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeFlowLogsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeFlowLogsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFlowLogsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FlowLog> FlowLogs { get; }
    internal DescribeFlowLogsPaginator(IAmazonEC2 client, DescribeFlowLogsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFlowLogsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FlowLog> get_FlowLogs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeFlowLogsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeFlowLogsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeFlowLogsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeFlowLogsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeFlowLogsRequest : AmazonEC2Request {
    private List`1<Filter> _filter;
    private List`1<string> _flowLogIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filter { get; public set; }
    public List`1<string> FlowLogIds { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filter();
    public void set_Filter(List`1<Filter> value);
    internal bool IsSetFilter();
    public List`1<string> get_FlowLogIds();
    public void set_FlowLogIds(List`1<string> value);
    internal bool IsSetFlowLogIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFlowLogsResponse : AmazonWebServiceResponse {
    private List`1<FlowLog> _flowLogs;
    private string _nextToken;
    public List`1<FlowLog> FlowLogs { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FlowLog> get_FlowLogs();
    public void set_FlowLogs(List`1<FlowLog> value);
    internal bool IsSetFlowLogs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFpgaImageAttributeRequest : AmazonEC2Request {
    private FpgaImageAttributeName _attribute;
    private string _fpgaImageId;
    [AWSPropertyAttribute]
public FpgaImageAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string FpgaImageId { get; public set; }
    public FpgaImageAttributeName get_Attribute();
    public void set_Attribute(FpgaImageAttributeName value);
    internal bool IsSetAttribute();
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
}
public class Amazon.EC2.Model.DescribeFpgaImageAttributeResponse : AmazonWebServiceResponse {
    private FpgaImageAttribute _fpgaImageAttribute;
    public FpgaImageAttribute FpgaImageAttribute { get; public set; }
    public FpgaImageAttribute get_FpgaImageAttribute();
    public void set_FpgaImageAttribute(FpgaImageAttribute value);
    internal bool IsSetFpgaImageAttribute();
}
internal class Amazon.EC2.Model.DescribeFpgaImagesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeFpgaImagesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFpgaImagesResponse> Responses { get; }
    public IPaginatedEnumerable`1<FpgaImage> FpgaImages { get; }
    internal DescribeFpgaImagesPaginator(IAmazonEC2 client, DescribeFpgaImagesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFpgaImagesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FpgaImage> get_FpgaImages();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeFpgaImagesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeFpgaImagesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeFpgaImagesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeFpgaImagesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeFpgaImagesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _fpgaImageIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _owners;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> FpgaImageIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> Owners { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_FpgaImageIds();
    public void set_FpgaImageIds(List`1<string> value);
    internal bool IsSetFpgaImageIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_Owners();
    public void set_Owners(List`1<string> value);
    internal bool IsSetOwners();
}
public class Amazon.EC2.Model.DescribeFpgaImagesResponse : AmazonWebServiceResponse {
    private List`1<FpgaImage> _fpgaImages;
    private string _nextToken;
    public List`1<FpgaImage> FpgaImages { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FpgaImage> get_FpgaImages();
    public void set_FpgaImages(List`1<FpgaImage> value);
    internal bool IsSetFpgaImages();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeHostReservationOfferingsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeHostReservationOfferingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeHostReservationOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<HostOffering> OfferingSet { get; }
    internal DescribeHostReservationOfferingsPaginator(IAmazonEC2 client, DescribeHostReservationOfferingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeHostReservationOfferingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<HostOffering> get_OfferingSet();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeHostReservationOfferingsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeHostReservationOfferingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeHostReservationOfferingsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeHostReservationOfferingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeHostReservationOfferingsRequest : AmazonEC2Request {
    private List`1<Filter> _filter;
    private Nullable`1<int> _maxDuration;
    private Nullable`1<int> _maxResults;
    private Nullable`1<int> _minDuration;
    private string _nextToken;
    private string _offeringId;
    public List`1<Filter> Filter { get; public set; }
    public Nullable`1<int> MaxDuration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public Nullable`1<int> MinDuration { get; public set; }
    public string NextToken { get; public set; }
    public string OfferingId { get; public set; }
    public List`1<Filter> get_Filter();
    public void set_Filter(List`1<Filter> value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxDuration();
    public void set_MaxDuration(Nullable`1<int> value);
    internal bool IsSetMaxDuration();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public Nullable`1<int> get_MinDuration();
    public void set_MinDuration(Nullable`1<int> value);
    internal bool IsSetMinDuration();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_OfferingId();
    public void set_OfferingId(string value);
    internal bool IsSetOfferingId();
}
public class Amazon.EC2.Model.DescribeHostReservationOfferingsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<HostOffering> _offeringSet;
    public string NextToken { get; public set; }
    public List`1<HostOffering> OfferingSet { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<HostOffering> get_OfferingSet();
    public void set_OfferingSet(List`1<HostOffering> value);
    internal bool IsSetOfferingSet();
}
internal class Amazon.EC2.Model.DescribeHostReservationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeHostReservationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeHostReservationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<HostReservation> HostReservationSet { get; }
    internal DescribeHostReservationsPaginator(IAmazonEC2 client, DescribeHostReservationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeHostReservationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<HostReservation> get_HostReservationSet();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeHostReservationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeHostReservationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeHostReservationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeHostReservationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeHostReservationsRequest : AmazonEC2Request {
    private List`1<Filter> _filter;
    private List`1<string> _hostReservationIdSet;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filter { get; public set; }
    public List`1<string> HostReservationIdSet { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filter();
    public void set_Filter(List`1<Filter> value);
    internal bool IsSetFilter();
    public List`1<string> get_HostReservationIdSet();
    public void set_HostReservationIdSet(List`1<string> value);
    internal bool IsSetHostReservationIdSet();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeHostReservationsResponse : AmazonWebServiceResponse {
    private List`1<HostReservation> _hostReservationSet;
    private string _nextToken;
    public List`1<HostReservation> HostReservationSet { get; public set; }
    public string NextToken { get; public set; }
    public List`1<HostReservation> get_HostReservationSet();
    public void set_HostReservationSet(List`1<HostReservation> value);
    internal bool IsSetHostReservationSet();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeHostsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeHostsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeHostsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Host> Hosts { get; }
    internal DescribeHostsPaginator(IAmazonEC2 client, DescribeHostsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeHostsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Host> get_Hosts();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeHostsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeHostsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeHostsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeHostsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeHostsRequest : AmazonEC2Request {
    private List`1<Filter> _filter;
    private List`1<string> _hostIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filter { get; public set; }
    public List`1<string> HostIds { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filter();
    public void set_Filter(List`1<Filter> value);
    internal bool IsSetFilter();
    public List`1<string> get_HostIds();
    public void set_HostIds(List`1<string> value);
    internal bool IsSetHostIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeHostsResponse : AmazonWebServiceResponse {
    private List`1<Host> _hosts;
    private string _nextToken;
    public List`1<Host> Hosts { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Host> get_Hosts();
    public void set_Hosts(List`1<Host> value);
    internal bool IsSetHosts();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeIamInstanceProfileAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeIamInstanceProfileAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeIamInstanceProfileAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IamInstanceProfileAssociation> IamInstanceProfileAssociations { get; }
    internal DescribeIamInstanceProfileAssociationsPaginator(IAmazonEC2 client, DescribeIamInstanceProfileAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeIamInstanceProfileAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IamInstanceProfileAssociation> get_IamInstanceProfileAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeIamInstanceProfileAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeIamInstanceProfileAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeIamInstanceProfileAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeIamInstanceProfileAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeIamInstanceProfileAssociationsRequest : AmazonEC2Request {
    private List`1<string> _associationIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> AssociationIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AssociationIds();
    public void set_AssociationIds(List`1<string> value);
    internal bool IsSetAssociationIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIamInstanceProfileAssociationsResponse : AmazonWebServiceResponse {
    private List`1<IamInstanceProfileAssociation> _iamInstanceProfileAssociations;
    private string _nextToken;
    public List`1<IamInstanceProfileAssociation> IamInstanceProfileAssociations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IamInstanceProfileAssociation> get_IamInstanceProfileAssociations();
    public void set_IamInstanceProfileAssociations(List`1<IamInstanceProfileAssociation> value);
    internal bool IsSetIamInstanceProfileAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIdentityIdFormatRequest : AmazonEC2Request {
    private string _principalArn;
    private string _resource;
    [AWSPropertyAttribute]
public string PrincipalArn { get; public set; }
    public string Resource { get; public set; }
    public string get_PrincipalArn();
    public void set_PrincipalArn(string value);
    internal bool IsSetPrincipalArn();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
}
public class Amazon.EC2.Model.DescribeIdentityIdFormatResponse : AmazonWebServiceResponse {
    private List`1<IdFormat> _statuses;
    public List`1<IdFormat> Statuses { get; public set; }
    public List`1<IdFormat> get_Statuses();
    public void set_Statuses(List`1<IdFormat> value);
    internal bool IsSetStatuses();
}
public class Amazon.EC2.Model.DescribeIdFormatRequest : AmazonEC2Request {
    private string _resource;
    public string Resource { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
}
public class Amazon.EC2.Model.DescribeIdFormatResponse : AmazonWebServiceResponse {
    private List`1<IdFormat> _statuses;
    public List`1<IdFormat> Statuses { get; public set; }
    public List`1<IdFormat> get_Statuses();
    public void set_Statuses(List`1<IdFormat> value);
    internal bool IsSetStatuses();
}
public class Amazon.EC2.Model.DescribeImageAttributeRequest : AmazonEC2Request {
    private ImageAttributeName _attribute;
    private string _imageId;
    [AWSPropertyAttribute]
public ImageAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public DescribeImageAttributeRequest(string imageId, ImageAttributeName attribute);
    public ImageAttributeName get_Attribute();
    public void set_Attribute(ImageAttributeName value);
    internal bool IsSetAttribute();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DescribeImageAttributeResponse : AmazonWebServiceResponse {
    private ImageAttribute _imageAttribute;
    public ImageAttribute ImageAttribute { get; public set; }
    public ImageAttribute get_ImageAttribute();
    public void set_ImageAttribute(ImageAttribute value);
    internal bool IsSetImageAttribute();
}
internal class Amazon.EC2.Model.DescribeImagesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeImagesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeImagesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Image> Images { get; }
    internal DescribeImagesPaginator(IAmazonEC2 client, DescribeImagesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeImagesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Image> get_Images();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeImagesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeImagesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeImagesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeImagesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeImagesRequest : AmazonEC2Request {
    private List`1<string> _executableUsers;
    private List`1<Filter> _filters;
    private List`1<string> _imageIds;
    private Nullable`1<bool> _includeDeprecated;
    private Nullable`1<bool> _includeDisabled;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _owners;
    public List`1<string> ExecutableUsers { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImageIds { get; public set; }
    public Nullable`1<bool> IncludeDeprecated { get; public set; }
    public Nullable`1<bool> IncludeDisabled { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> Owners { get; public set; }
    public List`1<string> get_ExecutableUsers();
    public void set_ExecutableUsers(List`1<string> value);
    internal bool IsSetExecutableUsers();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImageIds();
    public void set_ImageIds(List`1<string> value);
    internal bool IsSetImageIds();
    public Nullable`1<bool> get_IncludeDeprecated();
    public void set_IncludeDeprecated(Nullable`1<bool> value);
    internal bool IsSetIncludeDeprecated();
    public Nullable`1<bool> get_IncludeDisabled();
    public void set_IncludeDisabled(Nullable`1<bool> value);
    internal bool IsSetIncludeDisabled();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_Owners();
    public void set_Owners(List`1<string> value);
    internal bool IsSetOwners();
}
public class Amazon.EC2.Model.DescribeImagesResponse : AmazonWebServiceResponse {
    private List`1<Image> _images;
    private string _nextToken;
    public List`1<Image> Images { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Image> get_Images();
    public void set_Images(List`1<Image> value);
    internal bool IsSetImages();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeImportImageTasksPaginator : object {
    private IAmazonEC2 _client;
    private DescribeImportImageTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeImportImageTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportImageTask> ImportImageTasks { get; }
    internal DescribeImportImageTasksPaginator(IAmazonEC2 client, DescribeImportImageTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeImportImageTasksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ImportImageTask> get_ImportImageTasks();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeImportImageTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeImportImageTasksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeImportImageTasksResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeImportImageTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeImportImageTasksRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _importTaskIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImportTaskIds { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImportTaskIds();
    public void set_ImportTaskIds(List`1<string> value);
    internal bool IsSetImportTaskIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeImportImageTasksResponse : AmazonWebServiceResponse {
    private List`1<ImportImageTask> _importImageTasks;
    private string _nextToken;
    public List`1<ImportImageTask> ImportImageTasks { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ImportImageTask> get_ImportImageTasks();
    public void set_ImportImageTasks(List`1<ImportImageTask> value);
    internal bool IsSetImportImageTasks();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeImportSnapshotTasksPaginator : object {
    private IAmazonEC2 _client;
    private DescribeImportSnapshotTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeImportSnapshotTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportSnapshotTask> ImportSnapshotTasks { get; }
    internal DescribeImportSnapshotTasksPaginator(IAmazonEC2 client, DescribeImportSnapshotTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeImportSnapshotTasksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ImportSnapshotTask> get_ImportSnapshotTasks();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeImportSnapshotTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeImportSnapshotTasksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeImportSnapshotTasksResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeImportSnapshotTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeImportSnapshotTasksRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _importTaskIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImportTaskIds { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImportTaskIds();
    public void set_ImportTaskIds(List`1<string> value);
    internal bool IsSetImportTaskIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeImportSnapshotTasksResponse : AmazonWebServiceResponse {
    private List`1<ImportSnapshotTask> _importSnapshotTasks;
    private string _nextToken;
    public List`1<ImportSnapshotTask> ImportSnapshotTasks { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ImportSnapshotTask> get_ImportSnapshotTasks();
    public void set_ImportSnapshotTasks(List`1<ImportSnapshotTask> value);
    internal bool IsSetImportSnapshotTasks();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceAttributeRequest : AmazonEC2Request {
    private InstanceAttributeName _attribute;
    private string _instanceId;
    [AWSPropertyAttribute]
public InstanceAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public DescribeInstanceAttributeRequest(string instanceId, InstanceAttributeName attribute);
    public InstanceAttributeName get_Attribute();
    public void set_Attribute(InstanceAttributeName value);
    internal bool IsSetAttribute();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.DescribeInstanceAttributeResponse : AmazonWebServiceResponse {
    private InstanceAttribute _instanceAttribute;
    public InstanceAttribute InstanceAttribute { get; public set; }
    public InstanceAttribute get_InstanceAttribute();
    public void set_InstanceAttribute(InstanceAttribute value);
    internal bool IsSetInstanceAttribute();
}
internal class Amazon.EC2.Model.DescribeInstanceConnectEndpointsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstanceConnectEndpointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceConnectEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ec2InstanceConnectEndpoint> InstanceConnectEndpoints { get; }
    internal DescribeInstanceConnectEndpointsPaginator(IAmazonEC2 client, DescribeInstanceConnectEndpointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceConnectEndpointsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Ec2InstanceConnectEndpoint> get_InstanceConnectEndpoints();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstanceConnectEndpointsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstanceConnectEndpointsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceConnectEndpointsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstanceConnectEndpointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstanceConnectEndpointsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceConnectEndpointIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceConnectEndpointIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceConnectEndpointIds();
    public void set_InstanceConnectEndpointIds(List`1<string> value);
    internal bool IsSetInstanceConnectEndpointIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceConnectEndpointsResponse : AmazonWebServiceResponse {
    private List`1<Ec2InstanceConnectEndpoint> _instanceConnectEndpoints;
    private string _nextToken;
    public List`1<Ec2InstanceConnectEndpoint> InstanceConnectEndpoints { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Ec2InstanceConnectEndpoint> get_InstanceConnectEndpoints();
    public void set_InstanceConnectEndpoints(List`1<Ec2InstanceConnectEndpoint> value);
    internal bool IsSetInstanceConnectEndpoints();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeInstanceCreditSpecificationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstanceCreditSpecificationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceCreditSpecificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceCreditSpecification> InstanceCreditSpecifications { get; }
    internal DescribeInstanceCreditSpecificationsPaginator(IAmazonEC2 client, DescribeInstanceCreditSpecificationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceCreditSpecificationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceCreditSpecification> get_InstanceCreditSpecifications();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstanceCreditSpecificationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstanceCreditSpecificationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceCreditSpecificationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstanceCreditSpecificationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstanceCreditSpecificationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceCreditSpecificationsResponse : AmazonWebServiceResponse {
    private List`1<InstanceCreditSpecification> _instanceCreditSpecifications;
    private string _nextToken;
    public List`1<InstanceCreditSpecification> InstanceCreditSpecifications { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceCreditSpecification> get_InstanceCreditSpecifications();
    public void set_InstanceCreditSpecifications(List`1<InstanceCreditSpecification> value);
    internal bool IsSetInstanceCreditSpecifications();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceEventNotificationAttributesRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DescribeInstanceEventNotificationAttributesResponse : AmazonWebServiceResponse {
    private InstanceTagNotificationAttribute _instanceTagAttribute;
    public InstanceTagNotificationAttribute InstanceTagAttribute { get; public set; }
    public InstanceTagNotificationAttribute get_InstanceTagAttribute();
    public void set_InstanceTagAttribute(InstanceTagNotificationAttribute value);
    internal bool IsSetInstanceTagAttribute();
}
internal class Amazon.EC2.Model.DescribeInstanceEventWindowsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstanceEventWindowsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceEventWindowsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceEventWindow> InstanceEventWindows { get; }
    internal DescribeInstanceEventWindowsPaginator(IAmazonEC2 client, DescribeInstanceEventWindowsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceEventWindowsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceEventWindow> get_InstanceEventWindows();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstanceEventWindowsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstanceEventWindowsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceEventWindowsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstanceEventWindowsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstanceEventWindowsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceEventWindowIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceEventWindowIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceEventWindowIds();
    public void set_InstanceEventWindowIds(List`1<string> value);
    internal bool IsSetInstanceEventWindowIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceEventWindowsResponse : AmazonWebServiceResponse {
    private List`1<InstanceEventWindow> _instanceEventWindows;
    private string _nextToken;
    public List`1<InstanceEventWindow> InstanceEventWindows { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceEventWindow> get_InstanceEventWindows();
    public void set_InstanceEventWindows(List`1<InstanceEventWindow> value);
    internal bool IsSetInstanceEventWindows();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeInstancesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Reservation> Reservations { get; }
    internal DescribeInstancesPaginator(IAmazonEC2 client, DescribeInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstancesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Reservation> get_Reservations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstancesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstancesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstancesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Reservation> _reservations;
    public string NextToken { get; public set; }
    public List`1<Reservation> Reservations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Reservation> get_Reservations();
    public void set_Reservations(List`1<Reservation> value);
    internal bool IsSetReservations();
}
internal class Amazon.EC2.Model.DescribeInstanceStatusPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstanceStatusRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceStatus> InstanceStatuses { get; }
    internal DescribeInstanceStatusPaginator(IAmazonEC2 client, DescribeInstanceStatusRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceStatusResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceStatus> get_InstanceStatuses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstanceStatusPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstanceStatusResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceStatusResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstanceStatusResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstanceStatusRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includeAllInstances;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludeAllInstances { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludeAllInstances();
    public void set_IncludeAllInstances(Nullable`1<bool> value);
    internal bool IsSetIncludeAllInstances();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceStatusResponse : AmazonWebServiceResponse {
    private List`1<InstanceStatus> _instanceStatuses;
    private string _nextToken;
    public List`1<InstanceStatus> InstanceStatuses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceStatus> get_InstanceStatuses();
    public void set_InstanceStatuses(List`1<InstanceStatus> value);
    internal bool IsSetInstanceStatuses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeInstanceTopologyPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstanceTopologyRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceTopologyResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTopology> Instances { get; }
    internal DescribeInstanceTopologyPaginator(IAmazonEC2 client, DescribeInstanceTopologyRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceTopologyResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceTopology> get_Instances();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstanceTopologyPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstanceTopologyResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceTopologyResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstanceTopologyResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstanceTopologyRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _groupNames;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceTopologyResponse : AmazonWebServiceResponse {
    private List`1<InstanceTopology> _instances;
    private string _nextToken;
    public List`1<InstanceTopology> Instances { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceTopology> get_Instances();
    public void set_Instances(List`1<InstanceTopology> value);
    internal bool IsSetInstances();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeInstanceTypeOfferingsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstanceTypeOfferingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceTypeOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTypeOffering> InstanceTypeOfferings { get; }
    internal DescribeInstanceTypeOfferingsPaginator(IAmazonEC2 client, DescribeInstanceTypeOfferingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceTypeOfferingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceTypeOffering> get_InstanceTypeOfferings();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstanceTypeOfferingsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstanceTypeOfferingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceTypeOfferingsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstanceTypeOfferingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstanceTypeOfferingsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private LocationType _locationType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public LocationType LocationType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public LocationType get_LocationType();
    public void set_LocationType(LocationType value);
    internal bool IsSetLocationType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceTypeOfferingsResponse : AmazonWebServiceResponse {
    private List`1<InstanceTypeOffering> _instanceTypeOfferings;
    private string _nextToken;
    public List`1<InstanceTypeOffering> InstanceTypeOfferings { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceTypeOffering> get_InstanceTypeOfferings();
    public void set_InstanceTypeOfferings(List`1<InstanceTypeOffering> value);
    internal bool IsSetInstanceTypeOfferings();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeInstanceTypesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInstanceTypesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceTypesResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTypeInfo> InstanceTypes { get; }
    internal DescribeInstanceTypesPaginator(IAmazonEC2 client, DescribeInstanceTypesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceTypesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceTypeInfo> get_InstanceTypes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInstanceTypesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInstanceTypesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceTypesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInstanceTypesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInstanceTypesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceTypes;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InstanceTypes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceTypes();
    public void set_InstanceTypes(List`1<string> value);
    internal bool IsSetInstanceTypes();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceTypesResponse : AmazonWebServiceResponse {
    private List`1<InstanceTypeInfo> _instanceTypes;
    private string _nextToken;
    public List`1<InstanceTypeInfo> InstanceTypes { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceTypeInfo> get_InstanceTypes();
    public void set_InstanceTypes(List`1<InstanceTypeInfo> value);
    internal bool IsSetInstanceTypes();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeInternetGatewaysPaginator : object {
    private IAmazonEC2 _client;
    private DescribeInternetGatewaysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInternetGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<InternetGateway> InternetGateways { get; }
    internal DescribeInternetGatewaysPaginator(IAmazonEC2 client, DescribeInternetGatewaysRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInternetGatewaysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InternetGateway> get_InternetGateways();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeInternetGatewaysPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeInternetGatewaysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInternetGatewaysResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeInternetGatewaysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeInternetGatewaysRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _internetGatewayIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InternetGatewayIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InternetGatewayIds();
    public void set_InternetGatewayIds(List`1<string> value);
    internal bool IsSetInternetGatewayIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInternetGatewaysResponse : AmazonWebServiceResponse {
    private List`1<InternetGateway> _internetGateways;
    private string _nextToken;
    public List`1<InternetGateway> InternetGateways { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InternetGateway> get_InternetGateways();
    public void set_InternetGateways(List`1<InternetGateway> value);
    internal bool IsSetInternetGateways();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamByoasnRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamByoasnResponse : AmazonWebServiceResponse {
    private List`1<Byoasn> _byoasns;
    private string _nextToken;
    public List`1<Byoasn> Byoasns { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Byoasn> get_Byoasns();
    public void set_Byoasns(List`1<Byoasn> value);
    internal bool IsSetByoasns();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamExternalResourceVerificationTokensRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _ipamExternalResourceVerificationTokenIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> IpamExternalResourceVerificationTokenIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_IpamExternalResourceVerificationTokenIds();
    public void set_IpamExternalResourceVerificationTokenIds(List`1<string> value);
    internal bool IsSetIpamExternalResourceVerificationTokenIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamExternalResourceVerificationTokensResponse : AmazonWebServiceResponse {
    private List`1<IpamExternalResourceVerificationToken> _ipamExternalResourceVerificationTokens;
    private string _nextToken;
    public List`1<IpamExternalResourceVerificationToken> IpamExternalResourceVerificationTokens { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamExternalResourceVerificationToken> get_IpamExternalResourceVerificationTokens();
    public void set_IpamExternalResourceVerificationTokens(List`1<IpamExternalResourceVerificationToken> value);
    internal bool IsSetIpamExternalResourceVerificationTokens();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeIpamPoolsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeIpamPoolsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeIpamPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamPool> IpamPools { get; }
    internal DescribeIpamPoolsPaginator(IAmazonEC2 client, DescribeIpamPoolsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeIpamPoolsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamPool> get_IpamPools();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeIpamPoolsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeIpamPoolsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeIpamPoolsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeIpamPoolsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeIpamPoolsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _ipamPoolIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> IpamPoolIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_IpamPoolIds();
    public void set_IpamPoolIds(List`1<string> value);
    internal bool IsSetIpamPoolIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamPoolsResponse : AmazonWebServiceResponse {
    private List`1<IpamPool> _ipamPools;
    private string _nextToken;
    public List`1<IpamPool> IpamPools { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamPool> get_IpamPools();
    public void set_IpamPools(List`1<IpamPool> value);
    internal bool IsSetIpamPools();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeIpamResourceDiscoveriesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeIpamResourceDiscoveriesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeIpamResourceDiscoveriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamResourceDiscovery> IpamResourceDiscoveries { get; }
    internal DescribeIpamResourceDiscoveriesPaginator(IAmazonEC2 client, DescribeIpamResourceDiscoveriesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeIpamResourceDiscoveriesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamResourceDiscovery> get_IpamResourceDiscoveries();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeIpamResourceDiscoveriesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeIpamResourceDiscoveriesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeIpamResourceDiscoveriesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeIpamResourceDiscoveriesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeIpamResourceDiscoveriesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _ipamResourceDiscoveryIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> IpamResourceDiscoveryIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_IpamResourceDiscoveryIds();
    public void set_IpamResourceDiscoveryIds(List`1<string> value);
    internal bool IsSetIpamResourceDiscoveryIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamResourceDiscoveriesResponse : AmazonWebServiceResponse {
    private List`1<IpamResourceDiscovery> _ipamResourceDiscoveries;
    private string _nextToken;
    public List`1<IpamResourceDiscovery> IpamResourceDiscoveries { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamResourceDiscovery> get_IpamResourceDiscoveries();
    public void set_IpamResourceDiscoveries(List`1<IpamResourceDiscovery> value);
    internal bool IsSetIpamResourceDiscoveries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeIpamResourceDiscoveryAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeIpamResourceDiscoveryAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeIpamResourceDiscoveryAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamResourceDiscoveryAssociation> IpamResourceDiscoveryAssociations { get; }
    internal DescribeIpamResourceDiscoveryAssociationsPaginator(IAmazonEC2 client, DescribeIpamResourceDiscoveryAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeIpamResourceDiscoveryAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamResourceDiscoveryAssociation> get_IpamResourceDiscoveryAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeIpamResourceDiscoveryAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeIpamResourceDiscoveryAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeIpamResourceDiscoveryAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeIpamResourceDiscoveryAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeIpamResourceDiscoveryAssociationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _ipamResourceDiscoveryAssociationIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> IpamResourceDiscoveryAssociationIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_IpamResourceDiscoveryAssociationIds();
    public void set_IpamResourceDiscoveryAssociationIds(List`1<string> value);
    internal bool IsSetIpamResourceDiscoveryAssociationIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamResourceDiscoveryAssociationsResponse : AmazonWebServiceResponse {
    private List`1<IpamResourceDiscoveryAssociation> _ipamResourceDiscoveryAssociations;
    private string _nextToken;
    public List`1<IpamResourceDiscoveryAssociation> IpamResourceDiscoveryAssociations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamResourceDiscoveryAssociation> get_IpamResourceDiscoveryAssociations();
    public void set_IpamResourceDiscoveryAssociations(List`1<IpamResourceDiscoveryAssociation> value);
    internal bool IsSetIpamResourceDiscoveryAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeIpamScopesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeIpamScopesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeIpamScopesResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamScope> IpamScopes { get; }
    internal DescribeIpamScopesPaginator(IAmazonEC2 client, DescribeIpamScopesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeIpamScopesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamScope> get_IpamScopes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeIpamScopesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeIpamScopesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeIpamScopesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeIpamScopesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeIpamScopesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _ipamScopeIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> IpamScopeIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_IpamScopeIds();
    public void set_IpamScopeIds(List`1<string> value);
    internal bool IsSetIpamScopeIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamScopesResponse : AmazonWebServiceResponse {
    private List`1<IpamScope> _ipamScopes;
    private string _nextToken;
    public List`1<IpamScope> IpamScopes { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamScope> get_IpamScopes();
    public void set_IpamScopes(List`1<IpamScope> value);
    internal bool IsSetIpamScopes();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeIpamsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeIpamsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeIpamsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ipam> Ipams { get; }
    internal DescribeIpamsPaginator(IAmazonEC2 client, DescribeIpamsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeIpamsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Ipam> get_Ipams();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeIpamsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeIpamsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeIpamsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeIpamsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeIpamsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _ipamIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> IpamIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_IpamIds();
    public void set_IpamIds(List`1<string> value);
    internal bool IsSetIpamIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeIpamsResponse : AmazonWebServiceResponse {
    private List`1<Ipam> _ipams;
    private string _nextToken;
    public List`1<Ipam> Ipams { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Ipam> get_Ipams();
    public void set_Ipams(List`1<Ipam> value);
    internal bool IsSetIpams();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeIpv6PoolsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeIpv6PoolsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeIpv6PoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ipv6Pool> Ipv6Pools { get; }
    internal DescribeIpv6PoolsPaginator(IAmazonEC2 client, DescribeIpv6PoolsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeIpv6PoolsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Ipv6Pool> get_Ipv6Pools();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeIpv6PoolsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeIpv6PoolsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeIpv6PoolsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeIpv6PoolsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeIpv6PoolsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _poolIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PoolIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PoolIds();
    public void set_PoolIds(List`1<string> value);
    internal bool IsSetPoolIds();
}
public class Amazon.EC2.Model.DescribeIpv6PoolsResponse : AmazonWebServiceResponse {
    private List`1<Ipv6Pool> _ipv6Pools;
    private string _nextToken;
    public List`1<Ipv6Pool> Ipv6Pools { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Ipv6Pool> get_Ipv6Pools();
    public void set_Ipv6Pools(List`1<Ipv6Pool> value);
    internal bool IsSetIpv6Pools();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeKeyPairsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includePublicKey;
    private List`1<string> _keyNames;
    private List`1<string> _keyPairIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludePublicKey { get; public set; }
    public List`1<string> KeyNames { get; public set; }
    public List`1<string> KeyPairIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludePublicKey();
    public void set_IncludePublicKey(Nullable`1<bool> value);
    internal bool IsSetIncludePublicKey();
    public List`1<string> get_KeyNames();
    public void set_KeyNames(List`1<string> value);
    internal bool IsSetKeyNames();
    public List`1<string> get_KeyPairIds();
    public void set_KeyPairIds(List`1<string> value);
    internal bool IsSetKeyPairIds();
}
public class Amazon.EC2.Model.DescribeKeyPairsResponse : AmazonWebServiceResponse {
    private List`1<KeyPairInfo> _keyPairs;
    public List`1<KeyPairInfo> KeyPairs { get; public set; }
    public List`1<KeyPairInfo> get_KeyPairs();
    public void set_KeyPairs(List`1<KeyPairInfo> value);
    internal bool IsSetKeyPairs();
}
internal class Amazon.EC2.Model.DescribeLaunchTemplatesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLaunchTemplatesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLaunchTemplatesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LaunchTemplate> LaunchTemplates { get; }
    internal DescribeLaunchTemplatesPaginator(IAmazonEC2 client, DescribeLaunchTemplatesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLaunchTemplatesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LaunchTemplate> get_LaunchTemplates();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLaunchTemplatesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLaunchTemplatesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLaunchTemplatesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLaunchTemplatesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLaunchTemplatesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _launchTemplateIds;
    private List`1<string> _launchTemplateNames;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> LaunchTemplateIds { get; public set; }
    public List`1<string> LaunchTemplateNames { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_LaunchTemplateIds();
    public void set_LaunchTemplateIds(List`1<string> value);
    internal bool IsSetLaunchTemplateIds();
    public List`1<string> get_LaunchTemplateNames();
    public void set_LaunchTemplateNames(List`1<string> value);
    internal bool IsSetLaunchTemplateNames();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLaunchTemplatesResponse : AmazonWebServiceResponse {
    private List`1<LaunchTemplate> _launchTemplates;
    private string _nextToken;
    public List`1<LaunchTemplate> LaunchTemplates { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LaunchTemplate> get_LaunchTemplates();
    public void set_LaunchTemplates(List`1<LaunchTemplate> value);
    internal bool IsSetLaunchTemplates();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeLaunchTemplateVersionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLaunchTemplateVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLaunchTemplateVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LaunchTemplateVersion> LaunchTemplateVersions { get; }
    internal DescribeLaunchTemplateVersionsPaginator(IAmazonEC2 client, DescribeLaunchTemplateVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLaunchTemplateVersionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LaunchTemplateVersion> get_LaunchTemplateVersions();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLaunchTemplateVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLaunchTemplateVersionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLaunchTemplateVersionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLaunchTemplateVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLaunchTemplateVersionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _launchTemplateId;
    private string _launchTemplateName;
    private Nullable`1<int> _maxResults;
    private string _maxVersion;
    private string _minVersion;
    private string _nextToken;
    private Nullable`1<bool> _resolveAlias;
    private List`1<string> _versions;
    public List`1<Filter> Filters { get; public set; }
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string MaxVersion { get; public set; }
    public string MinVersion { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<bool> ResolveAlias { get; public set; }
    public List`1<string> Versions { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_MaxVersion();
    public void set_MaxVersion(string value);
    internal bool IsSetMaxVersion();
    public string get_MinVersion();
    public void set_MinVersion(string value);
    internal bool IsSetMinVersion();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<bool> get_ResolveAlias();
    public void set_ResolveAlias(Nullable`1<bool> value);
    internal bool IsSetResolveAlias();
    public List`1<string> get_Versions();
    public void set_Versions(List`1<string> value);
    internal bool IsSetVersions();
}
public class Amazon.EC2.Model.DescribeLaunchTemplateVersionsResponse : AmazonWebServiceResponse {
    private List`1<LaunchTemplateVersion> _launchTemplateVersions;
    private string _nextToken;
    public List`1<LaunchTemplateVersion> LaunchTemplateVersions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LaunchTemplateVersion> get_LaunchTemplateVersions();
    public void set_LaunchTemplateVersions(List`1<LaunchTemplateVersion> value);
    internal bool IsSetLaunchTemplateVersions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeLocalGatewayRouteTablesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLocalGatewayRouteTablesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLocalGatewayRouteTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRouteTable> LocalGatewayRouteTables { get; }
    internal DescribeLocalGatewayRouteTablesPaginator(IAmazonEC2 client, DescribeLocalGatewayRouteTablesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLocalGatewayRouteTablesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LocalGatewayRouteTable> get_LocalGatewayRouteTables();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLocalGatewayRouteTablesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLocalGatewayRouteTablesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLocalGatewayRouteTablesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLocalGatewayRouteTablesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLocalGatewayRouteTablesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _localGatewayRouteTableIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> LocalGatewayRouteTableIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_LocalGatewayRouteTableIds();
    public void set_LocalGatewayRouteTableIds(List`1<string> value);
    internal bool IsSetLocalGatewayRouteTableIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLocalGatewayRouteTablesResponse : AmazonWebServiceResponse {
    private List`1<LocalGatewayRouteTable> _localGatewayRouteTables;
    private string _nextToken;
    public List`1<LocalGatewayRouteTable> LocalGatewayRouteTables { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LocalGatewayRouteTable> get_LocalGatewayRouteTables();
    public void set_LocalGatewayRouteTables(List`1<LocalGatewayRouteTable> value);
    internal bool IsSetLocalGatewayRouteTables();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> LocalGatewayRouteTableVirtualInterfaceGroupAssociations { get; }
    internal DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsPaginator(IAmazonEC2 client, DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> get_LocalGatewayRouteTableVirtualInterfaceGroupAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _localGatewayRouteTableVirtualInterfaceGroupAssociationIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds();
    public void set_LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds(List`1<string> value);
    internal bool IsSetLocalGatewayRouteTableVirtualInterfaceGroupAssociationIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse : AmazonWebServiceResponse {
    private List`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> _localGatewayRouteTableVirtualInterfaceGroupAssociations;
    private string _nextToken;
    public List`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> LocalGatewayRouteTableVirtualInterfaceGroupAssociations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> get_LocalGatewayRouteTableVirtualInterfaceGroupAssociations();
    public void set_LocalGatewayRouteTableVirtualInterfaceGroupAssociations(List`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> value);
    internal bool IsSetLocalGatewayRouteTableVirtualInterfaceGroupAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeLocalGatewayRouteTableVpcAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLocalGatewayRouteTableVpcAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVpcAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRouteTableVpcAssociation> LocalGatewayRouteTableVpcAssociations { get; }
    internal DescribeLocalGatewayRouteTableVpcAssociationsPaginator(IAmazonEC2 client, DescribeLocalGatewayRouteTableVpcAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVpcAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LocalGatewayRouteTableVpcAssociation> get_LocalGatewayRouteTableVpcAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLocalGatewayRouteTableVpcAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLocalGatewayRouteTableVpcAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLocalGatewayRouteTableVpcAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLocalGatewayRouteTableVpcAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLocalGatewayRouteTableVpcAssociationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _localGatewayRouteTableVpcAssociationIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> LocalGatewayRouteTableVpcAssociationIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_LocalGatewayRouteTableVpcAssociationIds();
    public void set_LocalGatewayRouteTableVpcAssociationIds(List`1<string> value);
    internal bool IsSetLocalGatewayRouteTableVpcAssociationIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLocalGatewayRouteTableVpcAssociationsResponse : AmazonWebServiceResponse {
    private List`1<LocalGatewayRouteTableVpcAssociation> _localGatewayRouteTableVpcAssociations;
    private string _nextToken;
    public List`1<LocalGatewayRouteTableVpcAssociation> LocalGatewayRouteTableVpcAssociations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LocalGatewayRouteTableVpcAssociation> get_LocalGatewayRouteTableVpcAssociations();
    public void set_LocalGatewayRouteTableVpcAssociations(List`1<LocalGatewayRouteTableVpcAssociation> value);
    internal bool IsSetLocalGatewayRouteTableVpcAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeLocalGatewaysPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLocalGatewaysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLocalGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGateway> LocalGateways { get; }
    internal DescribeLocalGatewaysPaginator(IAmazonEC2 client, DescribeLocalGatewaysRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLocalGatewaysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LocalGateway> get_LocalGateways();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLocalGatewaysPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLocalGatewaysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLocalGatewaysResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLocalGatewaysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLocalGatewaysRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _localGatewayIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> LocalGatewayIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_LocalGatewayIds();
    public void set_LocalGatewayIds(List`1<string> value);
    internal bool IsSetLocalGatewayIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLocalGatewaysResponse : AmazonWebServiceResponse {
    private List`1<LocalGateway> _localGateways;
    private string _nextToken;
    public List`1<LocalGateway> LocalGateways { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LocalGateway> get_LocalGateways();
    public void set_LocalGateways(List`1<LocalGateway> value);
    internal bool IsSetLocalGateways();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfaceGroupsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLocalGatewayVirtualInterfaceGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfaceGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayVirtualInterfaceGroup> LocalGatewayVirtualInterfaceGroups { get; }
    internal DescribeLocalGatewayVirtualInterfaceGroupsPaginator(IAmazonEC2 client, DescribeLocalGatewayVirtualInterfaceGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfaceGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LocalGatewayVirtualInterfaceGroup> get_LocalGatewayVirtualInterfaceGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfaceGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLocalGatewayVirtualInterfaceGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLocalGatewayVirtualInterfaceGroupsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfaceGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfaceGroupsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _localGatewayVirtualInterfaceGroupIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> LocalGatewayVirtualInterfaceGroupIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_LocalGatewayVirtualInterfaceGroupIds();
    public void set_LocalGatewayVirtualInterfaceGroupIds(List`1<string> value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroupIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfaceGroupsResponse : AmazonWebServiceResponse {
    private List`1<LocalGatewayVirtualInterfaceGroup> _localGatewayVirtualInterfaceGroups;
    private string _nextToken;
    public List`1<LocalGatewayVirtualInterfaceGroup> LocalGatewayVirtualInterfaceGroups { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LocalGatewayVirtualInterfaceGroup> get_LocalGatewayVirtualInterfaceGroups();
    public void set_LocalGatewayVirtualInterfaceGroups(List`1<LocalGatewayVirtualInterfaceGroup> value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfacesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeLocalGatewayVirtualInterfacesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfacesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayVirtualInterface> LocalGatewayVirtualInterfaces { get; }
    internal DescribeLocalGatewayVirtualInterfacesPaginator(IAmazonEC2 client, DescribeLocalGatewayVirtualInterfacesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfacesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LocalGatewayVirtualInterface> get_LocalGatewayVirtualInterfaces();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfacesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeLocalGatewayVirtualInterfacesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLocalGatewayVirtualInterfacesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfacesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfacesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _localGatewayVirtualInterfaceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> LocalGatewayVirtualInterfaceIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_LocalGatewayVirtualInterfaceIds();
    public void set_LocalGatewayVirtualInterfaceIds(List`1<string> value);
    internal bool IsSetLocalGatewayVirtualInterfaceIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfacesResponse : AmazonWebServiceResponse {
    private List`1<LocalGatewayVirtualInterface> _localGatewayVirtualInterfaces;
    private string _nextToken;
    public List`1<LocalGatewayVirtualInterface> LocalGatewayVirtualInterfaces { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LocalGatewayVirtualInterface> get_LocalGatewayVirtualInterfaces();
    public void set_LocalGatewayVirtualInterfaces(List`1<LocalGatewayVirtualInterface> value);
    internal bool IsSetLocalGatewayVirtualInterfaces();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeLockedSnapshotsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _snapshotIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> SnapshotIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SnapshotIds();
    public void set_SnapshotIds(List`1<string> value);
    internal bool IsSetSnapshotIds();
}
public class Amazon.EC2.Model.DescribeLockedSnapshotsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<LockedSnapshotsInfo> _snapshots;
    public string NextToken { get; public set; }
    public List`1<LockedSnapshotsInfo> Snapshots { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<LockedSnapshotsInfo> get_Snapshots();
    public void set_Snapshots(List`1<LockedSnapshotsInfo> value);
    internal bool IsSetSnapshots();
}
internal class Amazon.EC2.Model.DescribeMacHostsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeMacHostsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMacHostsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MacHost> MacHosts { get; }
    internal DescribeMacHostsPaginator(IAmazonEC2 client, DescribeMacHostsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMacHostsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MacHost> get_MacHosts();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeMacHostsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeMacHostsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMacHostsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeMacHostsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeMacHostsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _hostIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> HostIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_HostIds();
    public void set_HostIds(List`1<string> value);
    internal bool IsSetHostIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeMacHostsResponse : AmazonWebServiceResponse {
    private List`1<MacHost> _macHosts;
    private string _nextToken;
    public List`1<MacHost> MacHosts { get; public set; }
    public string NextToken { get; public set; }
    public List`1<MacHost> get_MacHosts();
    public void set_MacHosts(List`1<MacHost> value);
    internal bool IsSetMacHosts();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeManagedPrefixListsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeManagedPrefixListsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeManagedPrefixListsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ManagedPrefixList> PrefixLists { get; }
    internal DescribeManagedPrefixListsPaginator(IAmazonEC2 client, DescribeManagedPrefixListsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeManagedPrefixListsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ManagedPrefixList> get_PrefixLists();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeManagedPrefixListsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeManagedPrefixListsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeManagedPrefixListsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeManagedPrefixListsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeManagedPrefixListsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _prefixListIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PrefixListIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PrefixListIds();
    public void set_PrefixListIds(List`1<string> value);
    internal bool IsSetPrefixListIds();
}
public class Amazon.EC2.Model.DescribeManagedPrefixListsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ManagedPrefixList> _prefixLists;
    public string NextToken { get; public set; }
    public List`1<ManagedPrefixList> PrefixLists { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ManagedPrefixList> get_PrefixLists();
    public void set_PrefixLists(List`1<ManagedPrefixList> value);
    internal bool IsSetPrefixLists();
}
internal class Amazon.EC2.Model.DescribeMovingAddressesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeMovingAddressesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMovingAddressesResponse> Responses { get; }
    public IPaginatedEnumerable`1<MovingAddressStatus> MovingAddressStatuses { get; }
    internal DescribeMovingAddressesPaginator(IAmazonEC2 client, DescribeMovingAddressesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMovingAddressesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MovingAddressStatus> get_MovingAddressStatuses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeMovingAddressesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeMovingAddressesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMovingAddressesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeMovingAddressesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeMovingAddressesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _publicIps;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PublicIps { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PublicIps();
    public void set_PublicIps(List`1<string> value);
    internal bool IsSetPublicIps();
}
public class Amazon.EC2.Model.DescribeMovingAddressesResponse : AmazonWebServiceResponse {
    private List`1<MovingAddressStatus> _movingAddressStatuses;
    private string _nextToken;
    public List`1<MovingAddressStatus> MovingAddressStatuses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<MovingAddressStatus> get_MovingAddressStatuses();
    public void set_MovingAddressStatuses(List`1<MovingAddressStatus> value);
    internal bool IsSetMovingAddressStatuses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeNatGatewaysPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNatGatewaysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNatGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<NatGateway> NatGateways { get; }
    internal DescribeNatGatewaysPaginator(IAmazonEC2 client, DescribeNatGatewaysRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNatGatewaysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NatGateway> get_NatGateways();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNatGatewaysPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNatGatewaysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNatGatewaysResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNatGatewaysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNatGatewaysRequest : AmazonEC2Request {
    private List`1<Filter> _filter;
    private Nullable`1<int> _maxResults;
    private List`1<string> _natGatewayIds;
    private string _nextToken;
    public List`1<Filter> Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NatGatewayIds { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filter();
    public void set_Filter(List`1<Filter> value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NatGatewayIds();
    public void set_NatGatewayIds(List`1<string> value);
    internal bool IsSetNatGatewayIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNatGatewaysResponse : AmazonWebServiceResponse {
    private List`1<NatGateway> _natGateways;
    private string _nextToken;
    public List`1<NatGateway> NatGateways { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NatGateway> get_NatGateways();
    public void set_NatGateways(List`1<NatGateway> value);
    internal bool IsSetNatGateways();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeNetworkAclsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNetworkAclsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNetworkAclsResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkAcl> NetworkAcls { get; }
    internal DescribeNetworkAclsPaginator(IAmazonEC2 client, DescribeNetworkAclsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNetworkAclsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NetworkAcl> get_NetworkAcls();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNetworkAclsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNetworkAclsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNetworkAclsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNetworkAclsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNetworkAclsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private List`1<string> _networkAclIds;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NetworkAclIds { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NetworkAclIds();
    public void set_NetworkAclIds(List`1<string> value);
    internal bool IsSetNetworkAclIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkAclsResponse : AmazonWebServiceResponse {
    private List`1<NetworkAcl> _networkAcls;
    private string _nextToken;
    public List`1<NetworkAcl> NetworkAcls { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NetworkAcl> get_NetworkAcls();
    public void set_NetworkAcls(List`1<NetworkAcl> value);
    internal bool IsSetNetworkAcls();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeNetworkInsightsAccessScopeAnalysesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNetworkInsightsAccessScopeAnalysesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopeAnalysesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsAccessScopeAnalysis> NetworkInsightsAccessScopeAnalyses { get; }
    internal DescribeNetworkInsightsAccessScopeAnalysesPaginator(IAmazonEC2 client, DescribeNetworkInsightsAccessScopeAnalysesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopeAnalysesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NetworkInsightsAccessScopeAnalysis> get_NetworkInsightsAccessScopeAnalyses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNetworkInsightsAccessScopeAnalysesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNetworkInsightsAccessScopeAnalysesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNetworkInsightsAccessScopeAnalysesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNetworkInsightsAccessScopeAnalysesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNetworkInsightsAccessScopeAnalysesRequest : AmazonEC2Request {
    private Nullable`1<DateTime> _analysisStartTimeBegin;
    private Nullable`1<DateTime> _analysisStartTimeEnd;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private List`1<string> _networkInsightsAccessScopeAnalysisIds;
    private string _networkInsightsAccessScopeId;
    private string _nextToken;
    public Nullable`1<DateTime> AnalysisStartTimeBegin { get; public set; }
    public Nullable`1<DateTime> AnalysisStartTimeEnd { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NetworkInsightsAccessScopeAnalysisIds { get; public set; }
    public string NetworkInsightsAccessScopeId { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> get_AnalysisStartTimeBegin();
    public void set_AnalysisStartTimeBegin(Nullable`1<DateTime> value);
    internal bool IsSetAnalysisStartTimeBegin();
    public Nullable`1<DateTime> get_AnalysisStartTimeEnd();
    public void set_AnalysisStartTimeEnd(Nullable`1<DateTime> value);
    internal bool IsSetAnalysisStartTimeEnd();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NetworkInsightsAccessScopeAnalysisIds();
    public void set_NetworkInsightsAccessScopeAnalysisIds(List`1<string> value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisIds();
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkInsightsAccessScopeAnalysesResponse : AmazonWebServiceResponse {
    private List`1<NetworkInsightsAccessScopeAnalysis> _networkInsightsAccessScopeAnalyses;
    private string _nextToken;
    public List`1<NetworkInsightsAccessScopeAnalysis> NetworkInsightsAccessScopeAnalyses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NetworkInsightsAccessScopeAnalysis> get_NetworkInsightsAccessScopeAnalyses();
    public void set_NetworkInsightsAccessScopeAnalyses(List`1<NetworkInsightsAccessScopeAnalysis> value);
    internal bool IsSetNetworkInsightsAccessScopeAnalyses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeNetworkInsightsAccessScopesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNetworkInsightsAccessScopesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsAccessScope> NetworkInsightsAccessScopes { get; }
    internal DescribeNetworkInsightsAccessScopesPaginator(IAmazonEC2 client, DescribeNetworkInsightsAccessScopesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NetworkInsightsAccessScope> get_NetworkInsightsAccessScopes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNetworkInsightsAccessScopesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNetworkInsightsAccessScopesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNetworkInsightsAccessScopesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNetworkInsightsAccessScopesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNetworkInsightsAccessScopesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private List`1<string> _networkInsightsAccessScopeIds;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NetworkInsightsAccessScopeIds { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NetworkInsightsAccessScopeIds();
    public void set_NetworkInsightsAccessScopeIds(List`1<string> value);
    internal bool IsSetNetworkInsightsAccessScopeIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkInsightsAccessScopesResponse : AmazonWebServiceResponse {
    private List`1<NetworkInsightsAccessScope> _networkInsightsAccessScopes;
    private string _nextToken;
    public List`1<NetworkInsightsAccessScope> NetworkInsightsAccessScopes { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NetworkInsightsAccessScope> get_NetworkInsightsAccessScopes();
    public void set_NetworkInsightsAccessScopes(List`1<NetworkInsightsAccessScope> value);
    internal bool IsSetNetworkInsightsAccessScopes();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeNetworkInsightsAnalysesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNetworkInsightsAnalysesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNetworkInsightsAnalysesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsAnalysis> NetworkInsightsAnalyses { get; }
    internal DescribeNetworkInsightsAnalysesPaginator(IAmazonEC2 client, DescribeNetworkInsightsAnalysesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNetworkInsightsAnalysesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NetworkInsightsAnalysis> get_NetworkInsightsAnalyses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNetworkInsightsAnalysesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNetworkInsightsAnalysesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNetworkInsightsAnalysesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNetworkInsightsAnalysesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNetworkInsightsAnalysesRequest : AmazonEC2Request {
    private Nullable`1<DateTime> _analysisEndTime;
    private Nullable`1<DateTime> _analysisStartTime;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private List`1<string> _networkInsightsAnalysisIds;
    private string _networkInsightsPathId;
    private string _nextToken;
    public Nullable`1<DateTime> AnalysisEndTime { get; public set; }
    public Nullable`1<DateTime> AnalysisStartTime { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NetworkInsightsAnalysisIds { get; public set; }
    public string NetworkInsightsPathId { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> get_AnalysisEndTime();
    public void set_AnalysisEndTime(Nullable`1<DateTime> value);
    internal bool IsSetAnalysisEndTime();
    public Nullable`1<DateTime> get_AnalysisStartTime();
    public void set_AnalysisStartTime(Nullable`1<DateTime> value);
    internal bool IsSetAnalysisStartTime();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NetworkInsightsAnalysisIds();
    public void set_NetworkInsightsAnalysisIds(List`1<string> value);
    internal bool IsSetNetworkInsightsAnalysisIds();
    public string get_NetworkInsightsPathId();
    public void set_NetworkInsightsPathId(string value);
    internal bool IsSetNetworkInsightsPathId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkInsightsAnalysesResponse : AmazonWebServiceResponse {
    private List`1<NetworkInsightsAnalysis> _networkInsightsAnalyses;
    private string _nextToken;
    public List`1<NetworkInsightsAnalysis> NetworkInsightsAnalyses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NetworkInsightsAnalysis> get_NetworkInsightsAnalyses();
    public void set_NetworkInsightsAnalyses(List`1<NetworkInsightsAnalysis> value);
    internal bool IsSetNetworkInsightsAnalyses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeNetworkInsightsPathsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNetworkInsightsPathsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNetworkInsightsPathsResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsPath> NetworkInsightsPaths { get; }
    internal DescribeNetworkInsightsPathsPaginator(IAmazonEC2 client, DescribeNetworkInsightsPathsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNetworkInsightsPathsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NetworkInsightsPath> get_NetworkInsightsPaths();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNetworkInsightsPathsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNetworkInsightsPathsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNetworkInsightsPathsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNetworkInsightsPathsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNetworkInsightsPathsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private List`1<string> _networkInsightsPathIds;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NetworkInsightsPathIds { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NetworkInsightsPathIds();
    public void set_NetworkInsightsPathIds(List`1<string> value);
    internal bool IsSetNetworkInsightsPathIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkInsightsPathsResponse : AmazonWebServiceResponse {
    private List`1<NetworkInsightsPath> _networkInsightsPaths;
    private string _nextToken;
    public List`1<NetworkInsightsPath> NetworkInsightsPaths { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NetworkInsightsPath> get_NetworkInsightsPaths();
    public void set_NetworkInsightsPaths(List`1<NetworkInsightsPath> value);
    internal bool IsSetNetworkInsightsPaths();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest : AmazonEC2Request {
    private NetworkInterfaceAttribute _attribute;
    private string _networkInterfaceId;
    public NetworkInterfaceAttribute Attribute { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public NetworkInterfaceAttribute get_Attribute();
    public void set_Attribute(NetworkInterfaceAttribute value);
    internal bool IsSetAttribute();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _associatePublicIpAddress;
    private NetworkInterfaceAttachment _attachment;
    private string _description;
    private List`1<GroupIdentifier> _groups;
    private string _networkInterfaceId;
    private Nullable`1<bool> _sourceDestCheck;
    public Nullable`1<bool> AssociatePublicIpAddress { get; public set; }
    public NetworkInterfaceAttachment Attachment { get; public set; }
    public string Description { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public Nullable`1<bool> SourceDestCheck { get; public set; }
    public Nullable`1<bool> get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociatePublicIpAddress();
    public NetworkInterfaceAttachment get_Attachment();
    public void set_Attachment(NetworkInterfaceAttachment value);
    internal bool IsSetAttachment();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<bool> get_SourceDestCheck();
    public void set_SourceDestCheck(Nullable`1<bool> value);
    internal bool IsSetSourceDestCheck();
}
internal class Amazon.EC2.Model.DescribeNetworkInterfacePermissionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNetworkInterfacePermissionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNetworkInterfacePermissionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInterfacePermission> NetworkInterfacePermissions { get; }
    internal DescribeNetworkInterfacePermissionsPaginator(IAmazonEC2 client, DescribeNetworkInterfacePermissionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNetworkInterfacePermissionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NetworkInterfacePermission> get_NetworkInterfacePermissions();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNetworkInterfacePermissionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNetworkInterfacePermissionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNetworkInterfacePermissionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNetworkInterfacePermissionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNetworkInterfacePermissionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private List`1<string> _networkInterfacePermissionIds;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NetworkInterfacePermissionIds { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NetworkInterfacePermissionIds();
    public void set_NetworkInterfacePermissionIds(List`1<string> value);
    internal bool IsSetNetworkInterfacePermissionIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkInterfacePermissionsResponse : AmazonWebServiceResponse {
    private List`1<NetworkInterfacePermission> _networkInterfacePermissions;
    private string _nextToken;
    public List`1<NetworkInterfacePermission> NetworkInterfacePermissions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NetworkInterfacePermission> get_NetworkInterfacePermissions();
    public void set_NetworkInterfacePermissions(List`1<NetworkInterfacePermission> value);
    internal bool IsSetNetworkInterfacePermissions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeNetworkInterfacesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeNetworkInterfacesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeNetworkInterfacesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInterface> NetworkInterfaces { get; }
    internal DescribeNetworkInterfacesPaginator(IAmazonEC2 client, DescribeNetworkInterfacesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeNetworkInterfacesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NetworkInterface> get_NetworkInterfaces();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeNetworkInterfacesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeNetworkInterfacesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeNetworkInterfacesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeNetworkInterfacesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeNetworkInterfacesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private List`1<string> _networkInterfaceIds;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<string> NetworkInterfaceIds { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkInterfacesResponse : AmazonWebServiceResponse {
    private List`1<NetworkInterface> _networkInterfaces;
    private string _nextToken;
    public List`1<NetworkInterface> NetworkInterfaces { get; public set; }
    public string NextToken { get; public set; }
    public List`1<NetworkInterface> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<NetworkInterface> value);
    internal bool IsSetNetworkInterfaces();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribePlacementGroupsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _groupIds;
    private List`1<string> _groupNames;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> GroupIds { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_GroupIds();
    public void set_GroupIds(List`1<string> value);
    internal bool IsSetGroupIds();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
}
public class Amazon.EC2.Model.DescribePlacementGroupsResponse : AmazonWebServiceResponse {
    private List`1<PlacementGroup> _placementGroups;
    public List`1<PlacementGroup> PlacementGroups { get; public set; }
    public List`1<PlacementGroup> get_PlacementGroups();
    public void set_PlacementGroups(List`1<PlacementGroup> value);
    internal bool IsSetPlacementGroups();
}
internal class Amazon.EC2.Model.DescribePrefixListsPaginator : object {
    private IAmazonEC2 _client;
    private DescribePrefixListsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribePrefixListsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrefixList> PrefixLists { get; }
    internal DescribePrefixListsPaginator(IAmazonEC2 client, DescribePrefixListsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribePrefixListsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PrefixList> get_PrefixLists();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribePrefixListsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribePrefixListsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribePrefixListsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribePrefixListsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribePrefixListsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _prefixListIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PrefixListIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PrefixListIds();
    public void set_PrefixListIds(List`1<string> value);
    internal bool IsSetPrefixListIds();
}
public class Amazon.EC2.Model.DescribePrefixListsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PrefixList> _prefixLists;
    public string NextToken { get; public set; }
    public List`1<PrefixList> PrefixLists { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PrefixList> get_PrefixLists();
    public void set_PrefixLists(List`1<PrefixList> value);
    internal bool IsSetPrefixLists();
}
internal class Amazon.EC2.Model.DescribePrincipalIdFormatPaginator : object {
    private IAmazonEC2 _client;
    private DescribePrincipalIdFormatRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribePrincipalIdFormatResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrincipalIdFormat> Principals { get; }
    internal DescribePrincipalIdFormatPaginator(IAmazonEC2 client, DescribePrincipalIdFormatRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribePrincipalIdFormatResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PrincipalIdFormat> get_Principals();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribePrincipalIdFormatPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribePrincipalIdFormatResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribePrincipalIdFormatResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribePrincipalIdFormatResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribePrincipalIdFormatRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _resources;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> Resources { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
}
public class Amazon.EC2.Model.DescribePrincipalIdFormatResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PrincipalIdFormat> _principals;
    public string NextToken { get; public set; }
    public List`1<PrincipalIdFormat> Principals { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PrincipalIdFormat> get_Principals();
    public void set_Principals(List`1<PrincipalIdFormat> value);
    internal bool IsSetPrincipals();
}
internal class Amazon.EC2.Model.DescribePublicIpv4PoolsPaginator : object {
    private IAmazonEC2 _client;
    private DescribePublicIpv4PoolsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribePublicIpv4PoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PublicIpv4Pool> PublicIpv4Pools { get; }
    internal DescribePublicIpv4PoolsPaginator(IAmazonEC2 client, DescribePublicIpv4PoolsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribePublicIpv4PoolsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PublicIpv4Pool> get_PublicIpv4Pools();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribePublicIpv4PoolsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribePublicIpv4PoolsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribePublicIpv4PoolsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribePublicIpv4PoolsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribePublicIpv4PoolsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _poolIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PoolIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PoolIds();
    public void set_PoolIds(List`1<string> value);
    internal bool IsSetPoolIds();
}
public class Amazon.EC2.Model.DescribePublicIpv4PoolsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PublicIpv4Pool> _publicIpv4Pools;
    public string NextToken { get; public set; }
    public List`1<PublicIpv4Pool> PublicIpv4Pools { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PublicIpv4Pool> get_PublicIpv4Pools();
    public void set_PublicIpv4Pools(List`1<PublicIpv4Pool> value);
    internal bool IsSetPublicIpv4Pools();
}
public class Amazon.EC2.Model.DescribeRegionsRequest : AmazonEC2Request {
    private Nullable`1<bool> _allRegions;
    private List`1<Filter> _filters;
    private List`1<string> _regionNames;
    public Nullable`1<bool> AllRegions { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> RegionNames { get; public set; }
    public Nullable`1<bool> get_AllRegions();
    public void set_AllRegions(Nullable`1<bool> value);
    internal bool IsSetAllRegions();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_RegionNames();
    public void set_RegionNames(List`1<string> value);
    internal bool IsSetRegionNames();
}
public class Amazon.EC2.Model.DescribeRegionsResponse : AmazonWebServiceResponse {
    private List`1<Region> _regions;
    public List`1<Region> Regions { get; public set; }
    public List`1<Region> get_Regions();
    public void set_Regions(List`1<Region> value);
    internal bool IsSetRegions();
}
internal class Amazon.EC2.Model.DescribeReplaceRootVolumeTasksPaginator : object {
    private IAmazonEC2 _client;
    private DescribeReplaceRootVolumeTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplaceRootVolumeTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReplaceRootVolumeTask> ReplaceRootVolumeTasks { get; }
    internal DescribeReplaceRootVolumeTasksPaginator(IAmazonEC2 client, DescribeReplaceRootVolumeTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplaceRootVolumeTasksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ReplaceRootVolumeTask> get_ReplaceRootVolumeTasks();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeReplaceRootVolumeTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeReplaceRootVolumeTasksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplaceRootVolumeTasksResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeReplaceRootVolumeTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeReplaceRootVolumeTasksRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _replaceRootVolumeTaskIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ReplaceRootVolumeTaskIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ReplaceRootVolumeTaskIds();
    public void set_ReplaceRootVolumeTaskIds(List`1<string> value);
    internal bool IsSetReplaceRootVolumeTaskIds();
}
public class Amazon.EC2.Model.DescribeReplaceRootVolumeTasksResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReplaceRootVolumeTask> _replaceRootVolumeTasks;
    public string NextToken { get; public set; }
    public List`1<ReplaceRootVolumeTask> ReplaceRootVolumeTasks { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReplaceRootVolumeTask> get_ReplaceRootVolumeTasks();
    public void set_ReplaceRootVolumeTasks(List`1<ReplaceRootVolumeTask> value);
    internal bool IsSetReplaceRootVolumeTasks();
}
public class Amazon.EC2.Model.DescribeReservedInstancesListingsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _reservedInstancesId;
    private string _reservedInstancesListingId;
    public List`1<Filter> Filters { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public string ReservedInstancesListingId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public string get_ReservedInstancesListingId();
    public void set_ReservedInstancesListingId(string value);
    internal bool IsSetReservedInstancesListingId();
}
public class Amazon.EC2.Model.DescribeReservedInstancesListingsResponse : AmazonWebServiceResponse {
    private List`1<ReservedInstancesListing> _reservedInstancesListings;
    public List`1<ReservedInstancesListing> ReservedInstancesListings { get; public set; }
    public List`1<ReservedInstancesListing> get_ReservedInstancesListings();
    public void set_ReservedInstancesListings(List`1<ReservedInstancesListing> value);
    internal bool IsSetReservedInstancesListings();
}
internal class Amazon.EC2.Model.DescribeReservedInstancesModificationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeReservedInstancesModificationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReservedInstancesModificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedInstancesModification> ReservedInstancesModifications { get; }
    internal DescribeReservedInstancesModificationsPaginator(IAmazonEC2 client, DescribeReservedInstancesModificationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReservedInstancesModificationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ReservedInstancesModification> get_ReservedInstancesModifications();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeReservedInstancesModificationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeReservedInstancesModificationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeReservedInstancesModificationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _nextToken;
    private List`1<string> _reservedInstancesModificationIds;
    public List`1<Filter> Filters { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ReservedInstancesModificationIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ReservedInstancesModificationIds();
    public void set_ReservedInstancesModificationIds(List`1<string> value);
    internal bool IsSetReservedInstancesModificationIds();
}
public class Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReservedInstancesModification> _reservedInstancesModifications;
    public string NextToken { get; public set; }
    public List`1<ReservedInstancesModification> ReservedInstancesModifications { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReservedInstancesModification> get_ReservedInstancesModifications();
    public void set_ReservedInstancesModifications(List`1<ReservedInstancesModification> value);
    internal bool IsSetReservedInstancesModifications();
}
internal class Amazon.EC2.Model.DescribeReservedInstancesOfferingsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeReservedInstancesOfferingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReservedInstancesOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedInstancesOffering> ReservedInstancesOfferings { get; }
    internal DescribeReservedInstancesOfferingsPaginator(IAmazonEC2 client, DescribeReservedInstancesOfferingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReservedInstancesOfferingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ReservedInstancesOffering> get_ReservedInstancesOfferings();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeReservedInstancesOfferingsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeReservedInstancesOfferingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeReservedInstancesOfferingsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest : AmazonEC2Request {
    private string _availabilityZone;
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includeMarketplace;
    private Tenancy _instanceTenancy;
    private InstanceType _instanceType;
    private Nullable`1<long> _maxDuration;
    private Nullable`1<int> _maxInstanceCount;
    private Nullable`1<int> _maxResults;
    private Nullable`1<long> _minDuration;
    private string _nextToken;
    private OfferingClassType _offeringClass;
    private OfferingTypeValues _offeringType;
    private RIProductDescription _productDescription;
    private List`1<string> _reservedInstancesOfferingIds;
    public string AvailabilityZone { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludeMarketplace { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public Nullable`1<long> MaxDuration { get; public set; }
    public Nullable`1<int> MaxInstanceCount { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public Nullable`1<long> MinDuration { get; public set; }
    public string NextToken { get; public set; }
    public OfferingClassType OfferingClass { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public List`1<string> ReservedInstancesOfferingIds { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludeMarketplace();
    public void set_IncludeMarketplace(Nullable`1<bool> value);
    internal bool IsSetIncludeMarketplace();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public Nullable`1<long> get_MaxDuration();
    public void set_MaxDuration(Nullable`1<long> value);
    internal bool IsSetMaxDuration();
    public Nullable`1<int> get_MaxInstanceCount();
    public void set_MaxInstanceCount(Nullable`1<int> value);
    internal bool IsSetMaxInstanceCount();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public Nullable`1<long> get_MinDuration();
    public void set_MinDuration(Nullable`1<long> value);
    internal bool IsSetMinDuration();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public OfferingClassType get_OfferingClass();
    public void set_OfferingClass(OfferingClassType value);
    internal bool IsSetOfferingClass();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public List`1<string> get_ReservedInstancesOfferingIds();
    public void set_ReservedInstancesOfferingIds(List`1<string> value);
    internal bool IsSetReservedInstancesOfferingIds();
}
public class Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReservedInstancesOffering> _reservedInstancesOfferings;
    public string NextToken { get; public set; }
    public List`1<ReservedInstancesOffering> ReservedInstancesOfferings { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReservedInstancesOffering> get_ReservedInstancesOfferings();
    public void set_ReservedInstancesOfferings(List`1<ReservedInstancesOffering> value);
    internal bool IsSetReservedInstancesOfferings();
}
public class Amazon.EC2.Model.DescribeReservedInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private OfferingClassType _offeringClass;
    private OfferingTypeValues _offeringType;
    private List`1<string> _reservedInstancesIds;
    public List`1<Filter> Filters { get; public set; }
    public OfferingClassType OfferingClass { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public List`1<string> ReservedInstancesIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public OfferingClassType get_OfferingClass();
    public void set_OfferingClass(OfferingClassType value);
    internal bool IsSetOfferingClass();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public List`1<string> get_ReservedInstancesIds();
    public void set_ReservedInstancesIds(List`1<string> value);
    internal bool IsSetReservedInstancesIds();
}
public class Amazon.EC2.Model.DescribeReservedInstancesResponse : AmazonWebServiceResponse {
    private List`1<ReservedInstances> _reservedInstances;
    public List`1<ReservedInstances> ReservedInstances { get; public set; }
    public List`1<ReservedInstances> get_ReservedInstances();
    public void set_ReservedInstances(List`1<ReservedInstances> value);
    internal bool IsSetReservedInstances();
}
internal class Amazon.EC2.Model.DescribeRouteTablesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeRouteTablesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeRouteTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<RouteTable> RouteTables { get; }
    internal DescribeRouteTablesPaginator(IAmazonEC2 client, DescribeRouteTablesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeRouteTablesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<RouteTable> get_RouteTables();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeRouteTablesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeRouteTablesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeRouteTablesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeRouteTablesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeRouteTablesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _routeTableIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> RouteTableIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_RouteTableIds();
    public void set_RouteTableIds(List`1<string> value);
    internal bool IsSetRouteTableIds();
}
public class Amazon.EC2.Model.DescribeRouteTablesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<RouteTable> _routeTables;
    public string NextToken { get; public set; }
    public List`1<RouteTable> RouteTables { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<RouteTable> get_RouteTables();
    public void set_RouteTables(List`1<RouteTable> value);
    internal bool IsSetRouteTables();
}
internal class Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityPaginator : object {
    private IAmazonEC2 _client;
    private DescribeScheduledInstanceAvailabilityRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeScheduledInstanceAvailabilityResponse> Responses { get; }
    public IPaginatedEnumerable`1<ScheduledInstanceAvailability> ScheduledInstanceAvailabilitySet { get; }
    internal DescribeScheduledInstanceAvailabilityPaginator(IAmazonEC2 client, DescribeScheduledInstanceAvailabilityRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeScheduledInstanceAvailabilityResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ScheduledInstanceAvailability> get_ScheduledInstanceAvailabilitySet();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeScheduledInstanceAvailabilityResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeScheduledInstanceAvailabilityResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private SlotDateTimeRangeRequest _firstSlotStartTimeRange;
    private Nullable`1<int> _maxResults;
    private Nullable`1<int> _maxSlotDurationInHours;
    private Nullable`1<int> _minSlotDurationInHours;
    private string _nextToken;
    private ScheduledInstanceRecurrenceRequest _recurrence;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public SlotDateTimeRangeRequest FirstSlotStartTimeRange { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public Nullable`1<int> MaxSlotDurationInHours { get; public set; }
    public Nullable`1<int> MinSlotDurationInHours { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public ScheduledInstanceRecurrenceRequest Recurrence { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public SlotDateTimeRangeRequest get_FirstSlotStartTimeRange();
    public void set_FirstSlotStartTimeRange(SlotDateTimeRangeRequest value);
    internal bool IsSetFirstSlotStartTimeRange();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public Nullable`1<int> get_MaxSlotDurationInHours();
    public void set_MaxSlotDurationInHours(Nullable`1<int> value);
    internal bool IsSetMaxSlotDurationInHours();
    public Nullable`1<int> get_MinSlotDurationInHours();
    public void set_MinSlotDurationInHours(Nullable`1<int> value);
    internal bool IsSetMinSlotDurationInHours();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ScheduledInstanceRecurrenceRequest get_Recurrence();
    public void set_Recurrence(ScheduledInstanceRecurrenceRequest value);
    internal bool IsSetRecurrence();
}
public class Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ScheduledInstanceAvailability> _scheduledInstanceAvailabilitySet;
    public string NextToken { get; public set; }
    public List`1<ScheduledInstanceAvailability> ScheduledInstanceAvailabilitySet { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ScheduledInstanceAvailability> get_ScheduledInstanceAvailabilitySet();
    public void set_ScheduledInstanceAvailabilitySet(List`1<ScheduledInstanceAvailability> value);
    internal bool IsSetScheduledInstanceAvailabilitySet();
}
internal class Amazon.EC2.Model.DescribeScheduledInstancesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeScheduledInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeScheduledInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ScheduledInstance> ScheduledInstanceSet { get; }
    internal DescribeScheduledInstancesPaginator(IAmazonEC2 client, DescribeScheduledInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeScheduledInstancesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ScheduledInstance> get_ScheduledInstanceSet();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeScheduledInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeScheduledInstancesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeScheduledInstancesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeScheduledInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeScheduledInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _scheduledInstanceIds;
    private SlotStartTimeRangeRequest _slotStartTimeRange;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ScheduledInstanceIds { get; public set; }
    public SlotStartTimeRangeRequest SlotStartTimeRange { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ScheduledInstanceIds();
    public void set_ScheduledInstanceIds(List`1<string> value);
    internal bool IsSetScheduledInstanceIds();
    public SlotStartTimeRangeRequest get_SlotStartTimeRange();
    public void set_SlotStartTimeRange(SlotStartTimeRangeRequest value);
    internal bool IsSetSlotStartTimeRange();
}
public class Amazon.EC2.Model.DescribeScheduledInstancesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ScheduledInstance> _scheduledInstanceSet;
    public string NextToken { get; public set; }
    public List`1<ScheduledInstance> ScheduledInstanceSet { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ScheduledInstance> get_ScheduledInstanceSet();
    public void set_ScheduledInstanceSet(List`1<ScheduledInstance> value);
    internal bool IsSetScheduledInstanceSet();
}
public class Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest : AmazonEC2Request {
    private List`1<string> _groupId;
    [AWSPropertyAttribute]
public List`1<string> GroupId { get; public set; }
    public List`1<string> get_GroupId();
    public void set_GroupId(List`1<string> value);
    internal bool IsSetGroupId();
}
public class Amazon.EC2.Model.DescribeSecurityGroupReferencesResponse : AmazonWebServiceResponse {
    private List`1<SecurityGroupReference> _securityGroupReferenceSet;
    public List`1<SecurityGroupReference> SecurityGroupReferenceSet { get; public set; }
    public List`1<SecurityGroupReference> get_SecurityGroupReferenceSet();
    public void set_SecurityGroupReferenceSet(List`1<SecurityGroupReference> value);
    internal bool IsSetSecurityGroupReferenceSet();
}
internal class Amazon.EC2.Model.DescribeSecurityGroupRulesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSecurityGroupRulesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSecurityGroupRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityGroupRule> SecurityGroupRules { get; }
    internal DescribeSecurityGroupRulesPaginator(IAmazonEC2 client, DescribeSecurityGroupRulesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSecurityGroupRulesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SecurityGroupRule> get_SecurityGroupRules();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSecurityGroupRulesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSecurityGroupRulesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSecurityGroupRulesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSecurityGroupRulesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSecurityGroupRulesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _securityGroupRuleIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> SecurityGroupRuleIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SecurityGroupRuleIds();
    public void set_SecurityGroupRuleIds(List`1<string> value);
    internal bool IsSetSecurityGroupRuleIds();
}
public class Amazon.EC2.Model.DescribeSecurityGroupRulesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SecurityGroupRule> _securityGroupRules;
    public string NextToken { get; public set; }
    public List`1<SecurityGroupRule> SecurityGroupRules { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SecurityGroupRule> get_SecurityGroupRules();
    public void set_SecurityGroupRules(List`1<SecurityGroupRule> value);
    internal bool IsSetSecurityGroupRules();
}
internal class Amazon.EC2.Model.DescribeSecurityGroupsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSecurityGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSecurityGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityGroup> SecurityGroups { get; }
    internal DescribeSecurityGroupsPaginator(IAmazonEC2 client, DescribeSecurityGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSecurityGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SecurityGroup> get_SecurityGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSecurityGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSecurityGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSecurityGroupsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSecurityGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSecurityGroupsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _groupIds;
    private List`1<string> _groupNames;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> GroupIds { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_GroupIds();
    public void set_GroupIds(List`1<string> value);
    internal bool IsSetGroupIds();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeSecurityGroupsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SecurityGroup> _securityGroups;
    public string NextToken { get; public set; }
    public List`1<SecurityGroup> SecurityGroups { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SecurityGroup> get_SecurityGroups();
    public void set_SecurityGroups(List`1<SecurityGroup> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.EC2.Model.DescribeSnapshotAttributeRequest : AmazonEC2Request {
    private SnapshotAttributeName _attribute;
    private string _snapshotId;
    [AWSPropertyAttribute]
public SnapshotAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public DescribeSnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute);
    public SnapshotAttributeName get_Attribute();
    public void set_Attribute(SnapshotAttributeName value);
    internal bool IsSetAttribute();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.DescribeSnapshotAttributeResponse : AmazonWebServiceResponse {
    private List`1<CreateVolumePermission> _createVolumePermissions;
    private List`1<ProductCode> _productCodes;
    private string _snapshotId;
    public List`1<CreateVolumePermission> CreateVolumePermissions { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<CreateVolumePermission> get_CreateVolumePermissions();
    public void set_CreateVolumePermissions(List`1<CreateVolumePermission> value);
    internal bool IsSetCreateVolumePermissions();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
internal class Amazon.EC2.Model.DescribeSnapshotsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSnapshotsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSnapshotsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Snapshot> Snapshots { get; }
    internal DescribeSnapshotsPaginator(IAmazonEC2 client, DescribeSnapshotsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSnapshotsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Snapshot> get_Snapshots();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSnapshotsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSnapshotsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSnapshotsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSnapshotsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSnapshotsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _ownerIds;
    private List`1<string> _restorableByUserIds;
    private List`1<string> _snapshotIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> OwnerIds { get; public set; }
    public List`1<string> RestorableByUserIds { get; public set; }
    public List`1<string> SnapshotIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_OwnerIds();
    public void set_OwnerIds(List`1<string> value);
    internal bool IsSetOwnerIds();
    public List`1<string> get_RestorableByUserIds();
    public void set_RestorableByUserIds(List`1<string> value);
    internal bool IsSetRestorableByUserIds();
    public List`1<string> get_SnapshotIds();
    public void set_SnapshotIds(List`1<string> value);
    internal bool IsSetSnapshotIds();
}
public class Amazon.EC2.Model.DescribeSnapshotsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Snapshot> _snapshots;
    public string NextToken { get; public set; }
    public List`1<Snapshot> Snapshots { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Snapshot> get_Snapshots();
    public void set_Snapshots(List`1<Snapshot> value);
    internal bool IsSetSnapshots();
}
internal class Amazon.EC2.Model.DescribeSnapshotTierStatusPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSnapshotTierStatusRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSnapshotTierStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<SnapshotTierStatus> SnapshotTierStatuses { get; }
    internal DescribeSnapshotTierStatusPaginator(IAmazonEC2 client, DescribeSnapshotTierStatusRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSnapshotTierStatusResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SnapshotTierStatus> get_SnapshotTierStatuses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSnapshotTierStatusPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSnapshotTierStatusResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSnapshotTierStatusResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSnapshotTierStatusResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSnapshotTierStatusRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeSnapshotTierStatusResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SnapshotTierStatus> _snapshotTierStatuses;
    public string NextToken { get; public set; }
    public List`1<SnapshotTierStatus> SnapshotTierStatuses { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SnapshotTierStatus> get_SnapshotTierStatuses();
    public void set_SnapshotTierStatuses(List`1<SnapshotTierStatus> value);
    internal bool IsSetSnapshotTierStatuses();
}
public class Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse : AmazonWebServiceResponse {
    private SpotDatafeedSubscription _spotDatafeedSubscription;
    public SpotDatafeedSubscription SpotDatafeedSubscription { get; public set; }
    public SpotDatafeedSubscription get_SpotDatafeedSubscription();
    public void set_SpotDatafeedSubscription(SpotDatafeedSubscription value);
    internal bool IsSetSpotDatafeedSubscription();
}
public class Amazon.EC2.Model.DescribeSpotFleetInstancesRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _spotFleetRequestId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string SpotFleetRequestId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.DescribeSpotFleetInstancesResponse : AmazonWebServiceResponse {
    private List`1<ActiveInstance> _activeInstances;
    private string _nextToken;
    private string _spotFleetRequestId;
    public List`1<ActiveInstance> ActiveInstances { get; public set; }
    public string NextToken { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public List`1<ActiveInstance> get_ActiveInstances();
    public void set_ActiveInstances(List`1<ActiveInstance> value);
    internal bool IsSetActiveInstances();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest : AmazonEC2Request {
    private EventType _eventType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _spotFleetRequestId;
    private Nullable`1<DateTime> _startTimeUtc;
    private Nullable`1<DateTime> _startTime;
    public EventType EventType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string SpotFleetRequestId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public EventType get_EventType();
    public void set_EventType(EventType value);
    internal bool IsSetEventType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
    public Nullable`1<DateTime> get_StartTimeUtc();
    public void set_StartTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartTimeUtc();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse : AmazonWebServiceResponse {
    private List`1<HistoryRecord> _historyRecords;
    private Nullable`1<DateTime> _lastEvaluatedTime;
    private string _nextToken;
    private string _spotFleetRequestId;
    private Nullable`1<DateTime> _startTime;
    public List`1<HistoryRecord> HistoryRecords { get; public set; }
    public Nullable`1<DateTime> LastEvaluatedTime { get; public set; }
    public string NextToken { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public List`1<HistoryRecord> get_HistoryRecords();
    public void set_HistoryRecords(List`1<HistoryRecord> value);
    internal bool IsSetHistoryRecords();
    public Nullable`1<DateTime> get_LastEvaluatedTime();
    public void set_LastEvaluatedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastEvaluatedTime();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
internal class Amazon.EC2.Model.DescribeSpotFleetRequestsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSpotFleetRequestsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSpotFleetRequestsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotFleetRequestConfig> SpotFleetRequestConfigs { get; }
    internal DescribeSpotFleetRequestsPaginator(IAmazonEC2 client, DescribeSpotFleetRequestsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSpotFleetRequestsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SpotFleetRequestConfig> get_SpotFleetRequestConfigs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSpotFleetRequestsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSpotFleetRequestsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSpotFleetRequestsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSpotFleetRequestsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestsRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _spotFleetRequestIds;
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> SpotFleetRequestIds { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SpotFleetRequestIds();
    public void set_SpotFleetRequestIds(List`1<string> value);
    internal bool IsSetSpotFleetRequestIds();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SpotFleetRequestConfig> _spotFleetRequestConfigs;
    public string NextToken { get; public set; }
    public List`1<SpotFleetRequestConfig> SpotFleetRequestConfigs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SpotFleetRequestConfig> get_SpotFleetRequestConfigs();
    public void set_SpotFleetRequestConfigs(List`1<SpotFleetRequestConfig> value);
    internal bool IsSetSpotFleetRequestConfigs();
}
internal class Amazon.EC2.Model.DescribeSpotInstanceRequestsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSpotInstanceRequestsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSpotInstanceRequestsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotInstanceRequest> SpotInstanceRequests { get; }
    internal DescribeSpotInstanceRequestsPaginator(IAmazonEC2 client, DescribeSpotInstanceRequestsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSpotInstanceRequestsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SpotInstanceRequest> get_SpotInstanceRequests();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSpotInstanceRequestsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSpotInstanceRequestsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSpotInstanceRequestsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _spotInstanceRequestIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> SpotInstanceRequestIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SpotInstanceRequestIds();
    public void set_SpotInstanceRequestIds(List`1<string> value);
    internal bool IsSetSpotInstanceRequestIds();
}
public class Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SpotInstanceRequest> _spotInstanceRequests;
    public string NextToken { get; public set; }
    public List`1<SpotInstanceRequest> SpotInstanceRequests { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SpotInstanceRequest> get_SpotInstanceRequests();
    public void set_SpotInstanceRequests(List`1<SpotInstanceRequest> value);
    internal bool IsSetSpotInstanceRequests();
}
internal class Amazon.EC2.Model.DescribeSpotPriceHistoryPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSpotPriceHistoryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSpotPriceHistoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotPrice> SpotPriceHistory { get; }
    internal DescribeSpotPriceHistoryPaginator(IAmazonEC2 client, DescribeSpotPriceHistoryRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSpotPriceHistoryResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SpotPrice> get_SpotPriceHistory();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSpotPriceHistoryPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSpotPriceHistoryResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSpotPriceHistoryResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSpotPriceHistoryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSpotPriceHistoryRequest : AmazonEC2Request {
    private string _availabilityZone;
    private Nullable`1<DateTime> _endTimeUtc;
    private List`1<Filter> _filters;
    private List`1<string> _instanceTypes;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _productDescriptions;
    private Nullable`1<DateTime> _startTimeUtc;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> EndTimeUtc { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceTypes { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ProductDescriptions { get; public set; }
    public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc results in both EndTime and EndTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EndTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EndTime { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_EndTimeUtc();
    public void set_EndTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetEndTimeUtc();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceTypes();
    public void set_InstanceTypes(List`1<string> value);
    internal bool IsSetInstanceTypes();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ProductDescriptions();
    public void set_ProductDescriptions(List`1<string> value);
    internal bool IsSetProductDescriptions();
    public Nullable`1<DateTime> get_StartTimeUtc();
    public void set_StartTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartTimeUtc();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.DescribeSpotPriceHistoryResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SpotPrice> _spotPriceHistory;
    public string NextToken { get; public set; }
    public List`1<SpotPrice> SpotPriceHistory { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SpotPrice> get_SpotPriceHistory();
    public void set_SpotPriceHistory(List`1<SpotPrice> value);
    internal bool IsSetSpotPriceHistory();
}
internal class Amazon.EC2.Model.DescribeStaleSecurityGroupsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeStaleSecurityGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeStaleSecurityGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<StaleSecurityGroup> StaleSecurityGroupSet { get; }
    internal DescribeStaleSecurityGroupsPaginator(IAmazonEC2 client, DescribeStaleSecurityGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeStaleSecurityGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<StaleSecurityGroup> get_StaleSecurityGroupSet();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeStaleSecurityGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeStaleSecurityGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeStaleSecurityGroupsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeStaleSecurityGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _vpcId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DescribeStaleSecurityGroupsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<StaleSecurityGroup> _staleSecurityGroupSet;
    public string NextToken { get; public set; }
    public List`1<StaleSecurityGroup> StaleSecurityGroupSet { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<StaleSecurityGroup> get_StaleSecurityGroupSet();
    public void set_StaleSecurityGroupSet(List`1<StaleSecurityGroup> value);
    internal bool IsSetStaleSecurityGroupSet();
}
internal class Amazon.EC2.Model.DescribeStoreImageTasksPaginator : object {
    private IAmazonEC2 _client;
    private DescribeStoreImageTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeStoreImageTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<StoreImageTaskResult> StoreImageTaskResults { get; }
    internal DescribeStoreImageTasksPaginator(IAmazonEC2 client, DescribeStoreImageTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeStoreImageTasksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<StoreImageTaskResult> get_StoreImageTaskResults();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeStoreImageTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeStoreImageTasksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeStoreImageTasksResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeStoreImageTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeStoreImageTasksRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _imageIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImageIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImageIds();
    public void set_ImageIds(List`1<string> value);
    internal bool IsSetImageIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeStoreImageTasksResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<StoreImageTaskResult> _storeImageTaskResults;
    public string NextToken { get; public set; }
    public List`1<StoreImageTaskResult> StoreImageTaskResults { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<StoreImageTaskResult> get_StoreImageTaskResults();
    public void set_StoreImageTaskResults(List`1<StoreImageTaskResult> value);
    internal bool IsSetStoreImageTaskResults();
}
internal class Amazon.EC2.Model.DescribeSubnetsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeSubnetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSubnetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Subnet> Subnets { get; }
    internal DescribeSubnetsPaginator(IAmazonEC2 client, DescribeSubnetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSubnetsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Subnet> get_Subnets();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeSubnetsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeSubnetsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSubnetsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeSubnetsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeSubnetsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _subnetIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.EC2.Model.DescribeSubnetsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Subnet> _subnets;
    public string NextToken { get; public set; }
    public List`1<Subnet> Subnets { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Subnet> get_Subnets();
    public void set_Subnets(List`1<Subnet> value);
    internal bool IsSetSubnets();
}
internal class Amazon.EC2.Model.DescribeTagsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTagsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTagsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TagDescription> Tags { get; }
    internal DescribeTagsPaginator(IAmazonEC2 client, DescribeTagsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTagsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TagDescription> get_Tags();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTagsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTagsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTagsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTagsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTagsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public DescribeTagsRequest(List`1<Filter> filters);
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeTagsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TagDescription> _tags;
    public string NextToken { get; public set; }
    public List`1<TagDescription> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TagDescription> get_Tags();
    public void set_Tags(List`1<TagDescription> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.DescribeTrafficMirrorFilterRulesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _trafficMirrorFilterId;
    private List`1<string> _trafficMirrorFilterRuleIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string TrafficMirrorFilterId { get; public set; }
    public List`1<string> TrafficMirrorFilterRuleIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
    public List`1<string> get_TrafficMirrorFilterRuleIds();
    public void set_TrafficMirrorFilterRuleIds(List`1<string> value);
    internal bool IsSetTrafficMirrorFilterRuleIds();
}
public class Amazon.EC2.Model.DescribeTrafficMirrorFilterRulesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TrafficMirrorFilterRule> _trafficMirrorFilterRules;
    public string NextToken { get; public set; }
    public List`1<TrafficMirrorFilterRule> TrafficMirrorFilterRules { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TrafficMirrorFilterRule> get_TrafficMirrorFilterRules();
    public void set_TrafficMirrorFilterRules(List`1<TrafficMirrorFilterRule> value);
    internal bool IsSetTrafficMirrorFilterRules();
}
internal class Amazon.EC2.Model.DescribeTrafficMirrorFiltersPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTrafficMirrorFiltersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTrafficMirrorFiltersResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrafficMirrorFilter> TrafficMirrorFilters { get; }
    internal DescribeTrafficMirrorFiltersPaginator(IAmazonEC2 client, DescribeTrafficMirrorFiltersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTrafficMirrorFiltersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TrafficMirrorFilter> get_TrafficMirrorFilters();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTrafficMirrorFiltersPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTrafficMirrorFiltersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTrafficMirrorFiltersResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTrafficMirrorFiltersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTrafficMirrorFiltersRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _trafficMirrorFilterIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TrafficMirrorFilterIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TrafficMirrorFilterIds();
    public void set_TrafficMirrorFilterIds(List`1<string> value);
    internal bool IsSetTrafficMirrorFilterIds();
}
public class Amazon.EC2.Model.DescribeTrafficMirrorFiltersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TrafficMirrorFilter> _trafficMirrorFilters;
    public string NextToken { get; public set; }
    public List`1<TrafficMirrorFilter> TrafficMirrorFilters { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TrafficMirrorFilter> get_TrafficMirrorFilters();
    public void set_TrafficMirrorFilters(List`1<TrafficMirrorFilter> value);
    internal bool IsSetTrafficMirrorFilters();
}
internal class Amazon.EC2.Model.DescribeTrafficMirrorSessionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTrafficMirrorSessionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTrafficMirrorSessionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrafficMirrorSession> TrafficMirrorSessions { get; }
    internal DescribeTrafficMirrorSessionsPaginator(IAmazonEC2 client, DescribeTrafficMirrorSessionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTrafficMirrorSessionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TrafficMirrorSession> get_TrafficMirrorSessions();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTrafficMirrorSessionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTrafficMirrorSessionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTrafficMirrorSessionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTrafficMirrorSessionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTrafficMirrorSessionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _trafficMirrorSessionIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TrafficMirrorSessionIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TrafficMirrorSessionIds();
    public void set_TrafficMirrorSessionIds(List`1<string> value);
    internal bool IsSetTrafficMirrorSessionIds();
}
public class Amazon.EC2.Model.DescribeTrafficMirrorSessionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TrafficMirrorSession> _trafficMirrorSessions;
    public string NextToken { get; public set; }
    public List`1<TrafficMirrorSession> TrafficMirrorSessions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TrafficMirrorSession> get_TrafficMirrorSessions();
    public void set_TrafficMirrorSessions(List`1<TrafficMirrorSession> value);
    internal bool IsSetTrafficMirrorSessions();
}
internal class Amazon.EC2.Model.DescribeTrafficMirrorTargetsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTrafficMirrorTargetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTrafficMirrorTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrafficMirrorTarget> TrafficMirrorTargets { get; }
    internal DescribeTrafficMirrorTargetsPaginator(IAmazonEC2 client, DescribeTrafficMirrorTargetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTrafficMirrorTargetsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TrafficMirrorTarget> get_TrafficMirrorTargets();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTrafficMirrorTargetsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTrafficMirrorTargetsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTrafficMirrorTargetsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTrafficMirrorTargetsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTrafficMirrorTargetsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _trafficMirrorTargetIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TrafficMirrorTargetIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TrafficMirrorTargetIds();
    public void set_TrafficMirrorTargetIds(List`1<string> value);
    internal bool IsSetTrafficMirrorTargetIds();
}
public class Amazon.EC2.Model.DescribeTrafficMirrorTargetsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TrafficMirrorTarget> _trafficMirrorTargets;
    public string NextToken { get; public set; }
    public List`1<TrafficMirrorTarget> TrafficMirrorTargets { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TrafficMirrorTarget> get_TrafficMirrorTargets();
    public void set_TrafficMirrorTargets(List`1<TrafficMirrorTarget> value);
    internal bool IsSetTrafficMirrorTargets();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayAttachmentsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayAttachmentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayAttachmentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayAttachment> TransitGatewayAttachments { get; }
    internal DescribeTransitGatewayAttachmentsPaginator(IAmazonEC2 client, DescribeTransitGatewayAttachmentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayAttachmentsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayAttachment> get_TransitGatewayAttachments();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayAttachmentsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayAttachmentsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayAttachmentsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayAttachmentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayAttachmentsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayAttachmentIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayAttachmentIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayAttachmentIds();
    public void set_TransitGatewayAttachmentIds(List`1<string> value);
    internal bool IsSetTransitGatewayAttachmentIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayAttachmentsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayAttachment> _transitGatewayAttachments;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayAttachment> TransitGatewayAttachments { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayAttachment> get_TransitGatewayAttachments();
    public void set_TransitGatewayAttachments(List`1<TransitGatewayAttachment> value);
    internal bool IsSetTransitGatewayAttachments();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayConnectPeersPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayConnectPeersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayConnectPeersResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayConnectPeer> TransitGatewayConnectPeers { get; }
    internal DescribeTransitGatewayConnectPeersPaginator(IAmazonEC2 client, DescribeTransitGatewayConnectPeersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayConnectPeersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayConnectPeer> get_TransitGatewayConnectPeers();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayConnectPeersPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayConnectPeersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayConnectPeersResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayConnectPeersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayConnectPeersRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayConnectPeerIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayConnectPeerIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayConnectPeerIds();
    public void set_TransitGatewayConnectPeerIds(List`1<string> value);
    internal bool IsSetTransitGatewayConnectPeerIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayConnectPeersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayConnectPeer> _transitGatewayConnectPeers;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayConnectPeer> TransitGatewayConnectPeers { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayConnectPeer> get_TransitGatewayConnectPeers();
    public void set_TransitGatewayConnectPeers(List`1<TransitGatewayConnectPeer> value);
    internal bool IsSetTransitGatewayConnectPeers();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayConnectsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayConnectsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayConnectsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayConnect> TransitGatewayConnects { get; }
    internal DescribeTransitGatewayConnectsPaginator(IAmazonEC2 client, DescribeTransitGatewayConnectsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayConnectsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayConnect> get_TransitGatewayConnects();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayConnectsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayConnectsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayConnectsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayConnectsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayConnectsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayAttachmentIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayAttachmentIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayAttachmentIds();
    public void set_TransitGatewayAttachmentIds(List`1<string> value);
    internal bool IsSetTransitGatewayAttachmentIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayConnectsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayConnect> _transitGatewayConnects;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayConnect> TransitGatewayConnects { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayConnect> get_TransitGatewayConnects();
    public void set_TransitGatewayConnects(List`1<TransitGatewayConnect> value);
    internal bool IsSetTransitGatewayConnects();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayMulticastDomainsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayMulticastDomainsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayMulticastDomainsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayMulticastDomain> TransitGatewayMulticastDomains { get; }
    internal DescribeTransitGatewayMulticastDomainsPaginator(IAmazonEC2 client, DescribeTransitGatewayMulticastDomainsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayMulticastDomainsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayMulticastDomain> get_TransitGatewayMulticastDomains();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayMulticastDomainsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayMulticastDomainsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayMulticastDomainsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayMulticastDomainsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayMulticastDomainsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayMulticastDomainIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayMulticastDomainIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayMulticastDomainIds();
    public void set_TransitGatewayMulticastDomainIds(List`1<string> value);
    internal bool IsSetTransitGatewayMulticastDomainIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayMulticastDomainsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayMulticastDomain> _transitGatewayMulticastDomains;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayMulticastDomain> TransitGatewayMulticastDomains { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayMulticastDomain> get_TransitGatewayMulticastDomains();
    public void set_TransitGatewayMulticastDomains(List`1<TransitGatewayMulticastDomain> value);
    internal bool IsSetTransitGatewayMulticastDomains();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayPeeringAttachmentsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayPeeringAttachmentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayPeeringAttachmentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPeeringAttachment> TransitGatewayPeeringAttachments { get; }
    internal DescribeTransitGatewayPeeringAttachmentsPaginator(IAmazonEC2 client, DescribeTransitGatewayPeeringAttachmentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayPeeringAttachmentsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayPeeringAttachment> get_TransitGatewayPeeringAttachments();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayPeeringAttachmentsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayPeeringAttachmentsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayPeeringAttachmentsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayPeeringAttachmentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayPeeringAttachmentsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayAttachmentIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayAttachmentIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayAttachmentIds();
    public void set_TransitGatewayAttachmentIds(List`1<string> value);
    internal bool IsSetTransitGatewayAttachmentIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayPeeringAttachmentsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayPeeringAttachment> _transitGatewayPeeringAttachments;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayPeeringAttachment> TransitGatewayPeeringAttachments { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayPeeringAttachment> get_TransitGatewayPeeringAttachments();
    public void set_TransitGatewayPeeringAttachments(List`1<TransitGatewayPeeringAttachment> value);
    internal bool IsSetTransitGatewayPeeringAttachments();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayPolicyTablesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayPolicyTablesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayPolicyTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPolicyTable> TransitGatewayPolicyTables { get; }
    internal DescribeTransitGatewayPolicyTablesPaginator(IAmazonEC2 client, DescribeTransitGatewayPolicyTablesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayPolicyTablesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayPolicyTable> get_TransitGatewayPolicyTables();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayPolicyTablesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayPolicyTablesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayPolicyTablesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayPolicyTablesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayPolicyTablesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayPolicyTableIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayPolicyTableIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayPolicyTableIds();
    public void set_TransitGatewayPolicyTableIds(List`1<string> value);
    internal bool IsSetTransitGatewayPolicyTableIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayPolicyTablesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayPolicyTable> _transitGatewayPolicyTables;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayPolicyTable> TransitGatewayPolicyTables { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayPolicyTable> get_TransitGatewayPolicyTables();
    public void set_TransitGatewayPolicyTables(List`1<TransitGatewayPolicyTable> value);
    internal bool IsSetTransitGatewayPolicyTables();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayRouteTableAnnouncementsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayRouteTableAnnouncementsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayRouteTableAnnouncementsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTableAnnouncement> TransitGatewayRouteTableAnnouncements { get; }
    internal DescribeTransitGatewayRouteTableAnnouncementsPaginator(IAmazonEC2 client, DescribeTransitGatewayRouteTableAnnouncementsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayRouteTableAnnouncementsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayRouteTableAnnouncement> get_TransitGatewayRouteTableAnnouncements();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayRouteTableAnnouncementsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayRouteTableAnnouncementsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayRouteTableAnnouncementsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayRouteTableAnnouncementsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayRouteTableAnnouncementsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayRouteTableAnnouncementIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayRouteTableAnnouncementIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayRouteTableAnnouncementIds();
    public void set_TransitGatewayRouteTableAnnouncementIds(List`1<string> value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayRouteTableAnnouncementsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayRouteTableAnnouncement> _transitGatewayRouteTableAnnouncements;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayRouteTableAnnouncement> TransitGatewayRouteTableAnnouncements { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayRouteTableAnnouncement> get_TransitGatewayRouteTableAnnouncements();
    public void set_TransitGatewayRouteTableAnnouncements(List`1<TransitGatewayRouteTableAnnouncement> value);
    internal bool IsSetTransitGatewayRouteTableAnnouncements();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayRouteTablesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayRouteTablesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayRouteTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTable> TransitGatewayRouteTables { get; }
    internal DescribeTransitGatewayRouteTablesPaginator(IAmazonEC2 client, DescribeTransitGatewayRouteTablesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayRouteTablesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayRouteTable> get_TransitGatewayRouteTables();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayRouteTablesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayRouteTablesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayRouteTablesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayRouteTablesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayRouteTablesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayRouteTableIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayRouteTableIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayRouteTableIds();
    public void set_TransitGatewayRouteTableIds(List`1<string> value);
    internal bool IsSetTransitGatewayRouteTableIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayRouteTablesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayRouteTable> _transitGatewayRouteTables;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayRouteTable> TransitGatewayRouteTables { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayRouteTable> get_TransitGatewayRouteTables();
    public void set_TransitGatewayRouteTables(List`1<TransitGatewayRouteTable> value);
    internal bool IsSetTransitGatewayRouteTables();
}
internal class Amazon.EC2.Model.DescribeTransitGatewaysPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewaysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGateway> TransitGateways { get; }
    internal DescribeTransitGatewaysPaginator(IAmazonEC2 client, DescribeTransitGatewaysRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewaysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGateway> get_TransitGateways();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewaysPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewaysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewaysResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewaysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewaysRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayIds();
    public void set_TransitGatewayIds(List`1<string> value);
    internal bool IsSetTransitGatewayIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewaysResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGateway> _transitGateways;
    public string NextToken { get; public set; }
    public List`1<TransitGateway> TransitGateways { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGateway> get_TransitGateways();
    public void set_TransitGateways(List`1<TransitGateway> value);
    internal bool IsSetTransitGateways();
}
internal class Amazon.EC2.Model.DescribeTransitGatewayVpcAttachmentsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTransitGatewayVpcAttachmentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTransitGatewayVpcAttachmentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayVpcAttachment> TransitGatewayVpcAttachments { get; }
    internal DescribeTransitGatewayVpcAttachmentsPaginator(IAmazonEC2 client, DescribeTransitGatewayVpcAttachmentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTransitGatewayVpcAttachmentsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayVpcAttachment> get_TransitGatewayVpcAttachments();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTransitGatewayVpcAttachmentsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTransitGatewayVpcAttachmentsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTransitGatewayVpcAttachmentsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTransitGatewayVpcAttachmentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTransitGatewayVpcAttachmentsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _transitGatewayAttachmentIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> TransitGatewayAttachmentIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransitGatewayAttachmentIds();
    public void set_TransitGatewayAttachmentIds(List`1<string> value);
    internal bool IsSetTransitGatewayAttachmentIds();
}
public class Amazon.EC2.Model.DescribeTransitGatewayVpcAttachmentsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayVpcAttachment> _transitGatewayVpcAttachments;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayVpcAttachment> TransitGatewayVpcAttachments { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayVpcAttachment> get_TransitGatewayVpcAttachments();
    public void set_TransitGatewayVpcAttachments(List`1<TransitGatewayVpcAttachment> value);
    internal bool IsSetTransitGatewayVpcAttachments();
}
internal class Amazon.EC2.Model.DescribeTrunkInterfaceAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeTrunkInterfaceAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTrunkInterfaceAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrunkInterfaceAssociation> InterfaceAssociations { get; }
    internal DescribeTrunkInterfaceAssociationsPaginator(IAmazonEC2 client, DescribeTrunkInterfaceAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTrunkInterfaceAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TrunkInterfaceAssociation> get_InterfaceAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeTrunkInterfaceAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeTrunkInterfaceAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTrunkInterfaceAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeTrunkInterfaceAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeTrunkInterfaceAssociationsRequest : AmazonEC2Request {
    private List`1<string> _associationIds;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> AssociationIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AssociationIds();
    public void set_AssociationIds(List`1<string> value);
    internal bool IsSetAssociationIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeTrunkInterfaceAssociationsResponse : AmazonWebServiceResponse {
    private List`1<TrunkInterfaceAssociation> _interfaceAssociations;
    private string _nextToken;
    public List`1<TrunkInterfaceAssociation> InterfaceAssociations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<TrunkInterfaceAssociation> get_InterfaceAssociations();
    public void set_InterfaceAssociations(List`1<TrunkInterfaceAssociation> value);
    internal bool IsSetInterfaceAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeVerifiedAccessEndpointsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVerifiedAccessEndpointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVerifiedAccessEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessEndpoint> VerifiedAccessEndpoints { get; }
    internal DescribeVerifiedAccessEndpointsPaginator(IAmazonEC2 client, DescribeVerifiedAccessEndpointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVerifiedAccessEndpointsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VerifiedAccessEndpoint> get_VerifiedAccessEndpoints();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVerifiedAccessEndpointsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVerifiedAccessEndpointsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVerifiedAccessEndpointsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVerifiedAccessEndpointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVerifiedAccessEndpointsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _verifiedAccessEndpointIds;
    private string _verifiedAccessGroupId;
    private string _verifiedAccessInstanceId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VerifiedAccessEndpointIds { get; public set; }
    public string VerifiedAccessGroupId { get; public set; }
    public string VerifiedAccessInstanceId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VerifiedAccessEndpointIds();
    public void set_VerifiedAccessEndpointIds(List`1<string> value);
    internal bool IsSetVerifiedAccessEndpointIds();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.DescribeVerifiedAccessEndpointsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VerifiedAccessEndpoint> _verifiedAccessEndpoints;
    public string NextToken { get; public set; }
    public List`1<VerifiedAccessEndpoint> VerifiedAccessEndpoints { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VerifiedAccessEndpoint> get_VerifiedAccessEndpoints();
    public void set_VerifiedAccessEndpoints(List`1<VerifiedAccessEndpoint> value);
    internal bool IsSetVerifiedAccessEndpoints();
}
internal class Amazon.EC2.Model.DescribeVerifiedAccessGroupsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVerifiedAccessGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVerifiedAccessGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessGroup> VerifiedAccessGroups { get; }
    internal DescribeVerifiedAccessGroupsPaginator(IAmazonEC2 client, DescribeVerifiedAccessGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVerifiedAccessGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VerifiedAccessGroup> get_VerifiedAccessGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVerifiedAccessGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVerifiedAccessGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVerifiedAccessGroupsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVerifiedAccessGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVerifiedAccessGroupsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _verifiedAccessGroupIds;
    private string _verifiedAccessInstanceId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VerifiedAccessGroupIds { get; public set; }
    public string VerifiedAccessInstanceId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VerifiedAccessGroupIds();
    public void set_VerifiedAccessGroupIds(List`1<string> value);
    internal bool IsSetVerifiedAccessGroupIds();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.DescribeVerifiedAccessGroupsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VerifiedAccessGroup> _verifiedAccessGroups;
    public string NextToken { get; public set; }
    public List`1<VerifiedAccessGroup> VerifiedAccessGroups { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VerifiedAccessGroup> get_VerifiedAccessGroups();
    public void set_VerifiedAccessGroups(List`1<VerifiedAccessGroup> value);
    internal bool IsSetVerifiedAccessGroups();
}
internal class Amazon.EC2.Model.DescribeVerifiedAccessInstanceLoggingConfigurationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVerifiedAccessInstanceLoggingConfigurationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVerifiedAccessInstanceLoggingConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessInstanceLoggingConfiguration> LoggingConfigurations { get; }
    internal DescribeVerifiedAccessInstanceLoggingConfigurationsPaginator(IAmazonEC2 client, DescribeVerifiedAccessInstanceLoggingConfigurationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVerifiedAccessInstanceLoggingConfigurationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VerifiedAccessInstanceLoggingConfiguration> get_LoggingConfigurations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVerifiedAccessInstanceLoggingConfigurationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVerifiedAccessInstanceLoggingConfigurationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVerifiedAccessInstanceLoggingConfigurationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVerifiedAccessInstanceLoggingConfigurationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVerifiedAccessInstanceLoggingConfigurationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _verifiedAccessInstanceIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VerifiedAccessInstanceIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VerifiedAccessInstanceIds();
    public void set_VerifiedAccessInstanceIds(List`1<string> value);
    internal bool IsSetVerifiedAccessInstanceIds();
}
public class Amazon.EC2.Model.DescribeVerifiedAccessInstanceLoggingConfigurationsResponse : AmazonWebServiceResponse {
    private List`1<VerifiedAccessInstanceLoggingConfiguration> _loggingConfigurations;
    private string _nextToken;
    public List`1<VerifiedAccessInstanceLoggingConfiguration> LoggingConfigurations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<VerifiedAccessInstanceLoggingConfiguration> get_LoggingConfigurations();
    public void set_LoggingConfigurations(List`1<VerifiedAccessInstanceLoggingConfiguration> value);
    internal bool IsSetLoggingConfigurations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeVerifiedAccessInstancesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVerifiedAccessInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVerifiedAccessInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessInstance> VerifiedAccessInstances { get; }
    internal DescribeVerifiedAccessInstancesPaginator(IAmazonEC2 client, DescribeVerifiedAccessInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVerifiedAccessInstancesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VerifiedAccessInstance> get_VerifiedAccessInstances();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVerifiedAccessInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVerifiedAccessInstancesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVerifiedAccessInstancesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVerifiedAccessInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVerifiedAccessInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _verifiedAccessInstanceIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VerifiedAccessInstanceIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VerifiedAccessInstanceIds();
    public void set_VerifiedAccessInstanceIds(List`1<string> value);
    internal bool IsSetVerifiedAccessInstanceIds();
}
public class Amazon.EC2.Model.DescribeVerifiedAccessInstancesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VerifiedAccessInstance> _verifiedAccessInstances;
    public string NextToken { get; public set; }
    public List`1<VerifiedAccessInstance> VerifiedAccessInstances { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VerifiedAccessInstance> get_VerifiedAccessInstances();
    public void set_VerifiedAccessInstances(List`1<VerifiedAccessInstance> value);
    internal bool IsSetVerifiedAccessInstances();
}
internal class Amazon.EC2.Model.DescribeVerifiedAccessTrustProvidersPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVerifiedAccessTrustProvidersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVerifiedAccessTrustProvidersResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessTrustProvider> VerifiedAccessTrustProviders { get; }
    internal DescribeVerifiedAccessTrustProvidersPaginator(IAmazonEC2 client, DescribeVerifiedAccessTrustProvidersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVerifiedAccessTrustProvidersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VerifiedAccessTrustProvider> get_VerifiedAccessTrustProviders();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVerifiedAccessTrustProvidersPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVerifiedAccessTrustProvidersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVerifiedAccessTrustProvidersResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVerifiedAccessTrustProvidersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVerifiedAccessTrustProvidersRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _verifiedAccessTrustProviderIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VerifiedAccessTrustProviderIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VerifiedAccessTrustProviderIds();
    public void set_VerifiedAccessTrustProviderIds(List`1<string> value);
    internal bool IsSetVerifiedAccessTrustProviderIds();
}
public class Amazon.EC2.Model.DescribeVerifiedAccessTrustProvidersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VerifiedAccessTrustProvider> _verifiedAccessTrustProviders;
    public string NextToken { get; public set; }
    public List`1<VerifiedAccessTrustProvider> VerifiedAccessTrustProviders { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VerifiedAccessTrustProvider> get_VerifiedAccessTrustProviders();
    public void set_VerifiedAccessTrustProviders(List`1<VerifiedAccessTrustProvider> value);
    internal bool IsSetVerifiedAccessTrustProviders();
}
public class Amazon.EC2.Model.DescribeVolumeAttributeRequest : AmazonEC2Request {
    private VolumeAttributeName _attribute;
    private string _volumeId;
    [AWSPropertyAttribute]
public VolumeAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public VolumeAttributeName get_Attribute();
    public void set_Attribute(VolumeAttributeName value);
    internal bool IsSetAttribute();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.DescribeVolumeAttributeResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _autoEnableIO;
    private List`1<ProductCode> _productCodes;
    private string _volumeId;
    public Nullable`1<bool> AutoEnableIO { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string VolumeId { get; public set; }
    public Nullable`1<bool> get_AutoEnableIO();
    public void set_AutoEnableIO(Nullable`1<bool> value);
    internal bool IsSetAutoEnableIO();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
internal class Amazon.EC2.Model.DescribeVolumesModificationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVolumesModificationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVolumesModificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VolumeModification> VolumesModifications { get; }
    internal DescribeVolumesModificationsPaginator(IAmazonEC2 client, DescribeVolumesModificationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVolumesModificationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VolumeModification> get_VolumesModifications();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVolumesModificationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVolumesModificationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVolumesModificationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVolumesModificationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVolumesModificationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _volumeIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VolumeIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VolumeIds();
    public void set_VolumeIds(List`1<string> value);
    internal bool IsSetVolumeIds();
}
public class Amazon.EC2.Model.DescribeVolumesModificationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VolumeModification> _volumesModifications;
    public string NextToken { get; public set; }
    public List`1<VolumeModification> VolumesModifications { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VolumeModification> get_VolumesModifications();
    public void set_VolumesModifications(List`1<VolumeModification> value);
    internal bool IsSetVolumesModifications();
}
internal class Amazon.EC2.Model.DescribeVolumesPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVolumesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVolumesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Volume> Volumes { get; }
    internal DescribeVolumesPaginator(IAmazonEC2 client, DescribeVolumesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVolumesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Volume> get_Volumes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVolumesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVolumesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVolumesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVolumesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVolumesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _volumeIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VolumeIds { get; public set; }
    public DescribeVolumesRequest(List`1<string> volumeIds);
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VolumeIds();
    public void set_VolumeIds(List`1<string> value);
    internal bool IsSetVolumeIds();
}
public class Amazon.EC2.Model.DescribeVolumesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Volume> _volumes;
    public string NextToken { get; public set; }
    public List`1<Volume> Volumes { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Volume> get_Volumes();
    public void set_Volumes(List`1<Volume> value);
    internal bool IsSetVolumes();
}
internal class Amazon.EC2.Model.DescribeVolumeStatusPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVolumeStatusRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVolumeStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<VolumeStatusItem> VolumeStatuses { get; }
    internal DescribeVolumeStatusPaginator(IAmazonEC2 client, DescribeVolumeStatusRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVolumeStatusResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VolumeStatusItem> get_VolumeStatuses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVolumeStatusPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVolumeStatusResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVolumeStatusResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVolumeStatusResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVolumeStatusRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _volumeIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VolumeIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VolumeIds();
    public void set_VolumeIds(List`1<string> value);
    internal bool IsSetVolumeIds();
}
public class Amazon.EC2.Model.DescribeVolumeStatusResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VolumeStatusItem> _volumeStatuses;
    public string NextToken { get; public set; }
    public List`1<VolumeStatusItem> VolumeStatuses { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VolumeStatusItem> get_VolumeStatuses();
    public void set_VolumeStatuses(List`1<VolumeStatusItem> value);
    internal bool IsSetVolumeStatuses();
}
public class Amazon.EC2.Model.DescribeVpcAttributeRequest : AmazonEC2Request {
    private VpcAttributeName _attribute;
    private string _vpcId;
    [AWSPropertyAttribute]
public VpcAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public VpcAttributeName get_Attribute();
    public void set_Attribute(VpcAttributeName value);
    internal bool IsSetAttribute();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DescribeVpcAttributeResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _enableDnsHostnames;
    private Nullable`1<bool> _enableDnsSupport;
    private Nullable`1<bool> _enableNetworkAddressUsageMetrics;
    private string _vpcId;
    public Nullable`1<bool> EnableDnsHostnames { get; public set; }
    public Nullable`1<bool> EnableDnsSupport { get; public set; }
    public Nullable`1<bool> EnableNetworkAddressUsageMetrics { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_EnableDnsHostnames();
    public void set_EnableDnsHostnames(Nullable`1<bool> value);
    internal bool IsSetEnableDnsHostnames();
    public Nullable`1<bool> get_EnableDnsSupport();
    public void set_EnableDnsSupport(Nullable`1<bool> value);
    internal bool IsSetEnableDnsSupport();
    public Nullable`1<bool> get_EnableNetworkAddressUsageMetrics();
    public void set_EnableNetworkAddressUsageMetrics(Nullable`1<bool> value);
    internal bool IsSetEnableNetworkAddressUsageMetrics();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
internal class Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcClassicLinkDnsSupportRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcClassicLinkDnsSupportResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClassicLinkDnsSupport> Vpcs { get; }
    internal DescribeVpcClassicLinkDnsSupportPaginator(IAmazonEC2 client, DescribeVpcClassicLinkDnsSupportRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcClassicLinkDnsSupportResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClassicLinkDnsSupport> get_Vpcs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcClassicLinkDnsSupportResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcClassicLinkDnsSupportResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _vpcIds;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<string> VpcIds { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VpcIds();
    public void set_VpcIds(List`1<string> value);
    internal bool IsSetVpcIds();
}
public class Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ClassicLinkDnsSupport> _vpcs;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ClassicLinkDnsSupport> Vpcs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ClassicLinkDnsSupport> get_Vpcs();
    public void set_Vpcs(List`1<ClassicLinkDnsSupport> value);
    internal bool IsSetVpcs();
}
public class Amazon.EC2.Model.DescribeVpcClassicLinkRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpcIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpcIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpcIds();
    public void set_VpcIds(List`1<string> value);
    internal bool IsSetVpcIds();
}
public class Amazon.EC2.Model.DescribeVpcClassicLinkResponse : AmazonWebServiceResponse {
    private List`1<VpcClassicLink> _vpcs;
    public List`1<VpcClassicLink> Vpcs { get; public set; }
    public List`1<VpcClassicLink> get_Vpcs();
    public void set_Vpcs(List`1<VpcClassicLink> value);
    internal bool IsSetVpcs();
}
internal class Amazon.EC2.Model.DescribeVpcEndpointConnectionNotificationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcEndpointConnectionNotificationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcEndpointConnectionNotificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ConnectionNotification> ConnectionNotificationSet { get; }
    internal DescribeVpcEndpointConnectionNotificationsPaginator(IAmazonEC2 client, DescribeVpcEndpointConnectionNotificationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcEndpointConnectionNotificationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ConnectionNotification> get_ConnectionNotificationSet();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcEndpointConnectionNotificationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcEndpointConnectionNotificationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcEndpointConnectionNotificationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcEndpointConnectionNotificationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcEndpointConnectionNotificationsRequest : AmazonEC2Request {
    private string _connectionNotificationId;
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public string ConnectionNotificationId { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ConnectionNotificationId();
    public void set_ConnectionNotificationId(string value);
    internal bool IsSetConnectionNotificationId();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeVpcEndpointConnectionNotificationsResponse : AmazonWebServiceResponse {
    private List`1<ConnectionNotification> _connectionNotificationSet;
    private string _nextToken;
    public List`1<ConnectionNotification> ConnectionNotificationSet { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ConnectionNotification> get_ConnectionNotificationSet();
    public void set_ConnectionNotificationSet(List`1<ConnectionNotification> value);
    internal bool IsSetConnectionNotificationSet();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.DescribeVpcEndpointConnectionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcEndpointConnectionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcEndpointConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcEndpointConnection> VpcEndpointConnections { get; }
    internal DescribeVpcEndpointConnectionsPaginator(IAmazonEC2 client, DescribeVpcEndpointConnectionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcEndpointConnectionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VpcEndpointConnection> get_VpcEndpointConnections();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcEndpointConnectionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcEndpointConnectionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcEndpointConnectionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcEndpointConnectionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcEndpointConnectionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeVpcEndpointConnectionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VpcEndpointConnection> _vpcEndpointConnections;
    public string NextToken { get; public set; }
    public List`1<VpcEndpointConnection> VpcEndpointConnections { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VpcEndpointConnection> get_VpcEndpointConnections();
    public void set_VpcEndpointConnections(List`1<VpcEndpointConnection> value);
    internal bool IsSetVpcEndpointConnections();
}
internal class Amazon.EC2.Model.DescribeVpcEndpointServiceConfigurationsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcEndpointServiceConfigurationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcEndpointServiceConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ServiceConfiguration> ServiceConfigurations { get; }
    internal DescribeVpcEndpointServiceConfigurationsPaginator(IAmazonEC2 client, DescribeVpcEndpointServiceConfigurationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcEndpointServiceConfigurationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ServiceConfiguration> get_ServiceConfigurations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcEndpointServiceConfigurationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcEndpointServiceConfigurationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcEndpointServiceConfigurationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcEndpointServiceConfigurationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcEndpointServiceConfigurationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _serviceIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ServiceIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ServiceIds();
    public void set_ServiceIds(List`1<string> value);
    internal bool IsSetServiceIds();
}
public class Amazon.EC2.Model.DescribeVpcEndpointServiceConfigurationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ServiceConfiguration> _serviceConfigurations;
    public string NextToken { get; public set; }
    public List`1<ServiceConfiguration> ServiceConfigurations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ServiceConfiguration> get_ServiceConfigurations();
    public void set_ServiceConfigurations(List`1<ServiceConfiguration> value);
    internal bool IsSetServiceConfigurations();
}
internal class Amazon.EC2.Model.DescribeVpcEndpointServicePermissionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcEndpointServicePermissionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcEndpointServicePermissionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AllowedPrincipal> AllowedPrincipals { get; }
    internal DescribeVpcEndpointServicePermissionsPaginator(IAmazonEC2 client, DescribeVpcEndpointServicePermissionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcEndpointServicePermissionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AllowedPrincipal> get_AllowedPrincipals();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcEndpointServicePermissionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcEndpointServicePermissionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcEndpointServicePermissionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcEndpointServicePermissionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcEndpointServicePermissionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _serviceId;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ServiceId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
}
public class Amazon.EC2.Model.DescribeVpcEndpointServicePermissionsResponse : AmazonWebServiceResponse {
    private List`1<AllowedPrincipal> _allowedPrincipals;
    private string _nextToken;
    public List`1<AllowedPrincipal> AllowedPrincipals { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AllowedPrincipal> get_AllowedPrincipals();
    public void set_AllowedPrincipals(List`1<AllowedPrincipal> value);
    internal bool IsSetAllowedPrincipals();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeVpcEndpointServicesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _serviceNames;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ServiceNames { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ServiceNames();
    public void set_ServiceNames(List`1<string> value);
    internal bool IsSetServiceNames();
}
public class Amazon.EC2.Model.DescribeVpcEndpointServicesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ServiceDetail> _serviceDetails;
    private List`1<string> _serviceNames;
    public string NextToken { get; public set; }
    public List`1<ServiceDetail> ServiceDetails { get; public set; }
    public List`1<string> ServiceNames { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ServiceDetail> get_ServiceDetails();
    public void set_ServiceDetails(List`1<ServiceDetail> value);
    internal bool IsSetServiceDetails();
    public List`1<string> get_ServiceNames();
    public void set_ServiceNames(List`1<string> value);
    internal bool IsSetServiceNames();
}
internal class Amazon.EC2.Model.DescribeVpcEndpointsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcEndpointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcEndpoint> VpcEndpoints { get; }
    internal DescribeVpcEndpointsPaginator(IAmazonEC2 client, DescribeVpcEndpointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcEndpointsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VpcEndpoint> get_VpcEndpoints();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcEndpointsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcEndpointsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcEndpointsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcEndpointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcEndpointsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _vpcEndpointIds;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VpcEndpointIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VpcEndpointIds();
    public void set_VpcEndpointIds(List`1<string> value);
    internal bool IsSetVpcEndpointIds();
}
public class Amazon.EC2.Model.DescribeVpcEndpointsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VpcEndpoint> _vpcEndpoints;
    public string NextToken { get; public set; }
    public List`1<VpcEndpoint> VpcEndpoints { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VpcEndpoint> get_VpcEndpoints();
    public void set_VpcEndpoints(List`1<VpcEndpoint> value);
    internal bool IsSetVpcEndpoints();
}
internal class Amazon.EC2.Model.DescribeVpcPeeringConnectionsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcPeeringConnectionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcPeeringConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcPeeringConnection> VpcPeeringConnections { get; }
    internal DescribeVpcPeeringConnectionsPaginator(IAmazonEC2 client, DescribeVpcPeeringConnectionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcPeeringConnectionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VpcPeeringConnection> get_VpcPeeringConnections();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcPeeringConnectionsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcPeeringConnectionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcPeeringConnectionsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _vpcPeeringConnectionIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VpcPeeringConnectionIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VpcPeeringConnectionIds();
    public void set_VpcPeeringConnectionIds(List`1<string> value);
    internal bool IsSetVpcPeeringConnectionIds();
}
public class Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VpcPeeringConnection> _vpcPeeringConnections;
    public string NextToken { get; public set; }
    public List`1<VpcPeeringConnection> VpcPeeringConnections { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VpcPeeringConnection> get_VpcPeeringConnections();
    public void set_VpcPeeringConnections(List`1<VpcPeeringConnection> value);
    internal bool IsSetVpcPeeringConnections();
}
internal class Amazon.EC2.Model.DescribeVpcsPaginator : object {
    private IAmazonEC2 _client;
    private DescribeVpcsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVpcsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Vpc> Vpcs { get; }
    internal DescribeVpcsPaginator(IAmazonEC2 client, DescribeVpcsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVpcsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Vpc> get_Vpcs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.DescribeVpcsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-DescribeVpcsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVpcsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.DescribeVpcsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.DescribeVpcsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _vpcIds;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VpcIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VpcIds();
    public void set_VpcIds(List`1<string> value);
    internal bool IsSetVpcIds();
}
public class Amazon.EC2.Model.DescribeVpcsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Vpc> _vpcs;
    public string NextToken { get; public set; }
    public List`1<Vpc> Vpcs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Vpc> get_Vpcs();
    public void set_Vpcs(List`1<Vpc> value);
    internal bool IsSetVpcs();
}
public class Amazon.EC2.Model.DescribeVpnConnectionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpnConnectionIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpnConnectionIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpnConnectionIds();
    public void set_VpnConnectionIds(List`1<string> value);
    internal bool IsSetVpnConnectionIds();
}
public class Amazon.EC2.Model.DescribeVpnConnectionsResponse : AmazonWebServiceResponse {
    private List`1<VpnConnection> _vpnConnections;
    public List`1<VpnConnection> VpnConnections { get; public set; }
    public List`1<VpnConnection> get_VpnConnections();
    public void set_VpnConnections(List`1<VpnConnection> value);
    internal bool IsSetVpnConnections();
}
public class Amazon.EC2.Model.DescribeVpnGatewaysRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpnGatewayIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpnGatewayIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpnGatewayIds();
    public void set_VpnGatewayIds(List`1<string> value);
    internal bool IsSetVpnGatewayIds();
}
public class Amazon.EC2.Model.DescribeVpnGatewaysResponse : AmazonWebServiceResponse {
    private List`1<VpnGateway> _vpnGateways;
    public List`1<VpnGateway> VpnGateways { get; public set; }
    public List`1<VpnGateway> get_VpnGateways();
    public void set_VpnGateways(List`1<VpnGateway> value);
    internal bool IsSetVpnGateways();
}
public class Amazon.EC2.Model.DestinationOptionsRequest : object {
    private DestinationFileFormat _fileFormat;
    private Nullable`1<bool> _hiveCompatiblePartitions;
    private Nullable`1<bool> _perHourPartition;
    public DestinationFileFormat FileFormat { get; public set; }
    public Nullable`1<bool> HiveCompatiblePartitions { get; public set; }
    public Nullable`1<bool> PerHourPartition { get; public set; }
    public DestinationFileFormat get_FileFormat();
    public void set_FileFormat(DestinationFileFormat value);
    internal bool IsSetFileFormat();
    public Nullable`1<bool> get_HiveCompatiblePartitions();
    public void set_HiveCompatiblePartitions(Nullable`1<bool> value);
    internal bool IsSetHiveCompatiblePartitions();
    public Nullable`1<bool> get_PerHourPartition();
    public void set_PerHourPartition(Nullable`1<bool> value);
    internal bool IsSetPerHourPartition();
}
public class Amazon.EC2.Model.DestinationOptionsResponse : object {
    private DestinationFileFormat _fileFormat;
    private Nullable`1<bool> _hiveCompatiblePartitions;
    private Nullable`1<bool> _perHourPartition;
    public DestinationFileFormat FileFormat { get; public set; }
    public Nullable`1<bool> HiveCompatiblePartitions { get; public set; }
    public Nullable`1<bool> PerHourPartition { get; public set; }
    public DestinationFileFormat get_FileFormat();
    public void set_FileFormat(DestinationFileFormat value);
    internal bool IsSetFileFormat();
    public Nullable`1<bool> get_HiveCompatiblePartitions();
    public void set_HiveCompatiblePartitions(Nullable`1<bool> value);
    internal bool IsSetHiveCompatiblePartitions();
    public Nullable`1<bool> get_PerHourPartition();
    public void set_PerHourPartition(Nullable`1<bool> value);
    internal bool IsSetPerHourPartition();
}
public class Amazon.EC2.Model.DetachClassicLinkVpcRequest : AmazonEC2Request {
    private string _instanceId;
    private string _vpcId;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DetachClassicLinkVpcResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DetachInternetGatewayRequest : AmazonEC2Request {
    private string _internetGatewayId;
    private string _vpcId;
    [AWSPropertyAttribute]
public string InternetGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DetachInternetGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DetachNetworkInterfaceRequest : AmazonEC2Request {
    private string _attachmentId;
    private Nullable`1<bool> _force;
    [AWSPropertyAttribute]
public string AttachmentId { get; public set; }
    public Nullable`1<bool> Force { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
}
public class Amazon.EC2.Model.DetachNetworkInterfaceResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DetachVerifiedAccessTrustProviderRequest : AmazonEC2Request {
    private string _clientToken;
    private string _verifiedAccessInstanceId;
    private string _verifiedAccessTrustProviderId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessInstanceId { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessTrustProviderId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
    public string get_VerifiedAccessTrustProviderId();
    public void set_VerifiedAccessTrustProviderId(string value);
    internal bool IsSetVerifiedAccessTrustProviderId();
}
public class Amazon.EC2.Model.DetachVerifiedAccessTrustProviderResponse : AmazonWebServiceResponse {
    private VerifiedAccessInstance _verifiedAccessInstance;
    private VerifiedAccessTrustProvider _verifiedAccessTrustProvider;
    public VerifiedAccessInstance VerifiedAccessInstance { get; public set; }
    public VerifiedAccessTrustProvider VerifiedAccessTrustProvider { get; public set; }
    public VerifiedAccessInstance get_VerifiedAccessInstance();
    public void set_VerifiedAccessInstance(VerifiedAccessInstance value);
    internal bool IsSetVerifiedAccessInstance();
    public VerifiedAccessTrustProvider get_VerifiedAccessTrustProvider();
    public void set_VerifiedAccessTrustProvider(VerifiedAccessTrustProvider value);
    internal bool IsSetVerifiedAccessTrustProvider();
}
public class Amazon.EC2.Model.DetachVolumeRequest : AmazonEC2Request {
    private string _device;
    private Nullable`1<bool> _force;
    private string _instanceId;
    private string _volumeId;
    public string Device { get; public set; }
    public Nullable`1<bool> Force { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public DetachVolumeRequest(string volumeId);
    public string get_Device();
    public void set_Device(string value);
    internal bool IsSetDevice();
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.DetachVolumeResponse : AmazonWebServiceResponse {
    private VolumeAttachment _volumeAttachment;
    public VolumeAttachment Attachment { get; public set; }
    public VolumeAttachment get_Attachment();
    public void set_Attachment(VolumeAttachment value);
    internal bool IsSetAttachment();
}
public class Amazon.EC2.Model.DetachVpnGatewayRequest : AmazonEC2Request {
    private string _vpcId;
    private string _vpnGatewayId;
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    [AWSPropertyAttribute]
public string VpnGatewayId { get; public set; }
    public DetachVpnGatewayRequest(string vpnGatewayId, string vpcId);
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.DetachVpnGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeviceOptions : object {
    private string _publicSigningKeyUrl;
    private string _tenantId;
    public string PublicSigningKeyUrl { get; public set; }
    public string TenantId { get; public set; }
    public string get_PublicSigningKeyUrl();
    public void set_PublicSigningKeyUrl(string value);
    internal bool IsSetPublicSigningKeyUrl();
    public string get_TenantId();
    public void set_TenantId(string value);
    internal bool IsSetTenantId();
}
public class Amazon.EC2.Model.DhcpConfiguration : object {
    private string _key;
    private List`1<string> _values;
    public string Key { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.EC2.Model.DhcpOptions : object {
    private List`1<DhcpConfiguration> _dhcpConfigurations;
    private string _dhcpOptionsId;
    private string _ownerId;
    private List`1<Tag> _tags;
    public List`1<DhcpConfiguration> DhcpConfigurations { get; public set; }
    public string DhcpOptionsId { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<DhcpConfiguration> get_DhcpConfigurations();
    public void set_DhcpConfigurations(List`1<DhcpConfiguration> value);
    internal bool IsSetDhcpConfigurations();
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.DirectoryServiceAuthentication : object {
    private string _directoryId;
    public string DirectoryId { get; public set; }
    public string get_DirectoryId();
    public void set_DirectoryId(string value);
    internal bool IsSetDirectoryId();
}
public class Amazon.EC2.Model.DirectoryServiceAuthenticationRequest : object {
    private string _directoryId;
    public string DirectoryId { get; public set; }
    public string get_DirectoryId();
    public void set_DirectoryId(string value);
    internal bool IsSetDirectoryId();
}
public class Amazon.EC2.Model.DisableAddressTransferRequest : AmazonEC2Request {
    private string _allocationId;
    [AWSPropertyAttribute]
public string AllocationId { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
}
public class Amazon.EC2.Model.DisableAddressTransferResponse : AmazonWebServiceResponse {
    private AddressTransfer _addressTransfer;
    public AddressTransfer AddressTransfer { get; public set; }
    public AddressTransfer get_AddressTransfer();
    public void set_AddressTransfer(AddressTransfer value);
    internal bool IsSetAddressTransfer();
}
public class Amazon.EC2.Model.DisableAwsNetworkPerformanceMetricSubscriptionRequest : AmazonEC2Request {
    private string _destination;
    private MetricType _metric;
    private string _source;
    private StatisticType _statistic;
    public string Destination { get; public set; }
    public MetricType Metric { get; public set; }
    public string Source { get; public set; }
    public StatisticType Statistic { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public MetricType get_Metric();
    public void set_Metric(MetricType value);
    internal bool IsSetMetric();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public StatisticType get_Statistic();
    public void set_Statistic(StatisticType value);
    internal bool IsSetStatistic();
}
public class Amazon.EC2.Model.DisableAwsNetworkPerformanceMetricSubscriptionResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _output;
    public Nullable`1<bool> Output { get; public set; }
    public Nullable`1<bool> get_Output();
    public void set_Output(Nullable`1<bool> value);
    internal bool IsSetOutput();
}
public class Amazon.EC2.Model.DisableEbsEncryptionByDefaultRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DisableEbsEncryptionByDefaultResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _ebsEncryptionByDefault;
    public Nullable`1<bool> EbsEncryptionByDefault { get; public set; }
    public Nullable`1<bool> get_EbsEncryptionByDefault();
    public void set_EbsEncryptionByDefault(Nullable`1<bool> value);
    internal bool IsSetEbsEncryptionByDefault();
}
public class Amazon.EC2.Model.DisableFastLaunchRequest : AmazonEC2Request {
    private Nullable`1<bool> _force;
    private string _imageId;
    public Nullable`1<bool> Force { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DisableFastLaunchResponse : AmazonWebServiceResponse {
    private string _imageId;
    private FastLaunchLaunchTemplateSpecificationResponse _launchTemplate;
    private Nullable`1<int> _maxParallelLaunches;
    private string _ownerId;
    private FastLaunchResourceType _resourceType;
    private FastLaunchSnapshotConfigurationResponse _snapshotConfiguration;
    private FastLaunchStateCode _state;
    private string _stateTransitionReason;
    private Nullable`1<DateTime> _stateTransitionTime;
    public string ImageId { get; public set; }
    public FastLaunchLaunchTemplateSpecificationResponse LaunchTemplate { get; public set; }
    public Nullable`1<int> MaxParallelLaunches { get; public set; }
    public string OwnerId { get; public set; }
    public FastLaunchResourceType ResourceType { get; public set; }
    public FastLaunchSnapshotConfigurationResponse SnapshotConfiguration { get; public set; }
    public FastLaunchStateCode State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public Nullable`1<DateTime> StateTransitionTime { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public FastLaunchLaunchTemplateSpecificationResponse get_LaunchTemplate();
    public void set_LaunchTemplate(FastLaunchLaunchTemplateSpecificationResponse value);
    internal bool IsSetLaunchTemplate();
    public Nullable`1<int> get_MaxParallelLaunches();
    public void set_MaxParallelLaunches(Nullable`1<int> value);
    internal bool IsSetMaxParallelLaunches();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public FastLaunchResourceType get_ResourceType();
    public void set_ResourceType(FastLaunchResourceType value);
    internal bool IsSetResourceType();
    public FastLaunchSnapshotConfigurationResponse get_SnapshotConfiguration();
    public void set_SnapshotConfiguration(FastLaunchSnapshotConfigurationResponse value);
    internal bool IsSetSnapshotConfiguration();
    public FastLaunchStateCode get_State();
    public void set_State(FastLaunchStateCode value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public Nullable`1<DateTime> get_StateTransitionTime();
    public void set_StateTransitionTime(Nullable`1<DateTime> value);
    internal bool IsSetStateTransitionTime();
}
public class Amazon.EC2.Model.DisableFastSnapshotRestoreErrorItem : object {
    private List`1<DisableFastSnapshotRestoreStateErrorItem> _fastSnapshotRestoreStateErrors;
    private string _snapshotId;
    public List`1<DisableFastSnapshotRestoreStateErrorItem> FastSnapshotRestoreStateErrors { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<DisableFastSnapshotRestoreStateErrorItem> get_FastSnapshotRestoreStateErrors();
    public void set_FastSnapshotRestoreStateErrors(List`1<DisableFastSnapshotRestoreStateErrorItem> value);
    internal bool IsSetFastSnapshotRestoreStateErrors();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.DisableFastSnapshotRestoresRequest : AmazonEC2Request {
    private List`1<string> _availabilityZones;
    private List`1<string> _sourceSnapshotIds;
    [AWSPropertyAttribute]
public List`1<string> AvailabilityZones { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SourceSnapshotIds { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public List`1<string> get_SourceSnapshotIds();
    public void set_SourceSnapshotIds(List`1<string> value);
    internal bool IsSetSourceSnapshotIds();
}
public class Amazon.EC2.Model.DisableFastSnapshotRestoresResponse : AmazonWebServiceResponse {
    private List`1<DisableFastSnapshotRestoreSuccessItem> _successful;
    private List`1<DisableFastSnapshotRestoreErrorItem> _unsuccessful;
    public List`1<DisableFastSnapshotRestoreSuccessItem> Successful { get; public set; }
    public List`1<DisableFastSnapshotRestoreErrorItem> Unsuccessful { get; public set; }
    public List`1<DisableFastSnapshotRestoreSuccessItem> get_Successful();
    public void set_Successful(List`1<DisableFastSnapshotRestoreSuccessItem> value);
    internal bool IsSetSuccessful();
    public List`1<DisableFastSnapshotRestoreErrorItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<DisableFastSnapshotRestoreErrorItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.DisableFastSnapshotRestoreStateError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.DisableFastSnapshotRestoreStateErrorItem : object {
    private string _availabilityZone;
    private DisableFastSnapshotRestoreStateError _error;
    public string AvailabilityZone { get; public set; }
    public DisableFastSnapshotRestoreStateError Error { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public DisableFastSnapshotRestoreStateError get_Error();
    public void set_Error(DisableFastSnapshotRestoreStateError value);
    internal bool IsSetError();
}
public class Amazon.EC2.Model.DisableFastSnapshotRestoreSuccessItem : object {
    private string _availabilityZone;
    private Nullable`1<DateTime> _disabledTime;
    private Nullable`1<DateTime> _disablingTime;
    private Nullable`1<DateTime> _enabledTime;
    private Nullable`1<DateTime> _enablingTime;
    private Nullable`1<DateTime> _optimizingTime;
    private string _ownerAlias;
    private string _ownerId;
    private string _snapshotId;
    private FastSnapshotRestoreStateCode _state;
    private string _stateTransitionReason;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> DisabledTime { get; public set; }
    public Nullable`1<DateTime> DisablingTime { get; public set; }
    public Nullable`1<DateTime> EnabledTime { get; public set; }
    public Nullable`1<DateTime> EnablingTime { get; public set; }
    public Nullable`1<DateTime> OptimizingTime { get; public set; }
    public string OwnerAlias { get; public set; }
    public string OwnerId { get; public set; }
    public string SnapshotId { get; public set; }
    public FastSnapshotRestoreStateCode State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_DisabledTime();
    public void set_DisabledTime(Nullable`1<DateTime> value);
    internal bool IsSetDisabledTime();
    public Nullable`1<DateTime> get_DisablingTime();
    public void set_DisablingTime(Nullable`1<DateTime> value);
    internal bool IsSetDisablingTime();
    public Nullable`1<DateTime> get_EnabledTime();
    public void set_EnabledTime(Nullable`1<DateTime> value);
    internal bool IsSetEnabledTime();
    public Nullable`1<DateTime> get_EnablingTime();
    public void set_EnablingTime(Nullable`1<DateTime> value);
    internal bool IsSetEnablingTime();
    public Nullable`1<DateTime> get_OptimizingTime();
    public void set_OptimizingTime(Nullable`1<DateTime> value);
    internal bool IsSetOptimizingTime();
    public string get_OwnerAlias();
    public void set_OwnerAlias(string value);
    internal bool IsSetOwnerAlias();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public FastSnapshotRestoreStateCode get_State();
    public void set_State(FastSnapshotRestoreStateCode value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
}
public class Amazon.EC2.Model.DisableImageBlockPublicAccessRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DisableImageBlockPublicAccessResponse : AmazonWebServiceResponse {
    private ImageBlockPublicAccessDisabledState _imageBlockPublicAccessState;
    public ImageBlockPublicAccessDisabledState ImageBlockPublicAccessState { get; public set; }
    public ImageBlockPublicAccessDisabledState get_ImageBlockPublicAccessState();
    public void set_ImageBlockPublicAccessState(ImageBlockPublicAccessDisabledState value);
    internal bool IsSetImageBlockPublicAccessState();
}
public class Amazon.EC2.Model.DisableImageDeprecationRequest : AmazonEC2Request {
    private string _imageId;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DisableImageDeprecationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisableImageDeregistrationProtectionRequest : AmazonEC2Request {
    private string _imageId;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DisableImageDeregistrationProtectionResponse : AmazonWebServiceResponse {
    private string _return;
    public string Return { get; public set; }
    public string get_Return();
    public void set_Return(string value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisableImageRequest : AmazonEC2Request {
    private string _imageId;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DisableImageResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisableIpamOrganizationAdminAccountRequest : AmazonEC2Request {
    private string _delegatedAdminAccountId;
    [AWSPropertyAttribute]
public string DelegatedAdminAccountId { get; public set; }
    public string get_DelegatedAdminAccountId();
    public void set_DelegatedAdminAccountId(string value);
    internal bool IsSetDelegatedAdminAccountId();
}
public class Amazon.EC2.Model.DisableIpamOrganizationAdminAccountResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _success;
    public Nullable`1<bool> Success { get; public set; }
    public Nullable`1<bool> get_Success();
    public void set_Success(Nullable`1<bool> value);
    internal bool IsSetSuccess();
}
public class Amazon.EC2.Model.DisableSerialConsoleAccessRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DisableSerialConsoleAccessResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _serialConsoleAccessEnabled;
    public Nullable`1<bool> SerialConsoleAccessEnabled { get; public set; }
    public Nullable`1<bool> get_SerialConsoleAccessEnabled();
    public void set_SerialConsoleAccessEnabled(Nullable`1<bool> value);
    internal bool IsSetSerialConsoleAccessEnabled();
}
public class Amazon.EC2.Model.DisableSnapshotBlockPublicAccessRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DisableSnapshotBlockPublicAccessResponse : AmazonWebServiceResponse {
    private SnapshotBlockPublicAccessState _state;
    public SnapshotBlockPublicAccessState State { get; public set; }
    public SnapshotBlockPublicAccessState get_State();
    public void set_State(SnapshotBlockPublicAccessState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.DisableTransitGatewayRouteTablePropagationRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableAnnouncementId;
    private string _transitGatewayRouteTableId;
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayRouteTableAnnouncementId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableAnnouncementId();
    public void set_TransitGatewayRouteTableAnnouncementId(string value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.DisableTransitGatewayRouteTablePropagationResponse : AmazonWebServiceResponse {
    private TransitGatewayPropagation _propagation;
    public TransitGatewayPropagation Propagation { get; public set; }
    public TransitGatewayPropagation get_Propagation();
    public void set_Propagation(TransitGatewayPropagation value);
    internal bool IsSetPropagation();
}
public class Amazon.EC2.Model.DisableVgwRoutePropagationRequest : AmazonEC2Request {
    private string _gatewayId;
    private string _routeTableId;
    [AWSPropertyAttribute]
public string GatewayId { get; public set; }
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.DisableVgwRoutePropagationResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest : AmazonEC2Request {
    private string _vpcId;
    public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisableVpcClassicLinkRequest : AmazonEC2Request {
    private string _vpcId;
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DisableVpcClassicLinkResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisassociateAddressRequest : AmazonEC2Request {
    private string _associationId;
    private string _publicIp;
    public string AssociationId { get; public set; }
    public string PublicIp { get; public set; }
    public DisassociateAddressRequest(string publicIp);
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.DisassociateAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DisassociateClientVpnTargetNetworkRequest : AmazonEC2Request {
    private string _associationId;
    private string _clientVpnEndpointId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
}
public class Amazon.EC2.Model.DisassociateClientVpnTargetNetworkResponse : AmazonWebServiceResponse {
    private string _associationId;
    private AssociationStatus _status;
    public string AssociationId { get; public set; }
    public AssociationStatus Status { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public AssociationStatus get_Status();
    public void set_Status(AssociationStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.DisassociateEnclaveCertificateIamRoleRequest : AmazonEC2Request {
    private string _certificateArn;
    private string _roleArn;
    [AWSPropertyAttribute]
public string CertificateArn { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.EC2.Model.DisassociateEnclaveCertificateIamRoleResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisassociateIamInstanceProfileRequest : AmazonEC2Request {
    private string _associationId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.DisassociateIamInstanceProfileResponse : AmazonWebServiceResponse {
    private IamInstanceProfileAssociation _iamInstanceProfileAssociation;
    public IamInstanceProfileAssociation IamInstanceProfileAssociation { get; public set; }
    public IamInstanceProfileAssociation get_IamInstanceProfileAssociation();
    public void set_IamInstanceProfileAssociation(IamInstanceProfileAssociation value);
    internal bool IsSetIamInstanceProfileAssociation();
}
public class Amazon.EC2.Model.DisassociateInstanceEventWindowRequest : AmazonEC2Request {
    private InstanceEventWindowDisassociationRequest _associationTarget;
    private string _instanceEventWindowId;
    [AWSPropertyAttribute]
public InstanceEventWindowDisassociationRequest AssociationTarget { get; public set; }
    [AWSPropertyAttribute]
public string InstanceEventWindowId { get; public set; }
    public InstanceEventWindowDisassociationRequest get_AssociationTarget();
    public void set_AssociationTarget(InstanceEventWindowDisassociationRequest value);
    internal bool IsSetAssociationTarget();
    public string get_InstanceEventWindowId();
    public void set_InstanceEventWindowId(string value);
    internal bool IsSetInstanceEventWindowId();
}
public class Amazon.EC2.Model.DisassociateInstanceEventWindowResponse : AmazonWebServiceResponse {
    private InstanceEventWindow _instanceEventWindow;
    public InstanceEventWindow InstanceEventWindow { get; public set; }
    public InstanceEventWindow get_InstanceEventWindow();
    public void set_InstanceEventWindow(InstanceEventWindow value);
    internal bool IsSetInstanceEventWindow();
}
public class Amazon.EC2.Model.DisassociateIpamByoasnRequest : AmazonEC2Request {
    private string _asn;
    private string _cidr;
    [AWSPropertyAttribute]
public string Asn { get; public set; }
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string get_Asn();
    public void set_Asn(string value);
    internal bool IsSetAsn();
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
}
public class Amazon.EC2.Model.DisassociateIpamByoasnResponse : AmazonWebServiceResponse {
    private AsnAssociation _asnAssociation;
    public AsnAssociation AsnAssociation { get; public set; }
    public AsnAssociation get_AsnAssociation();
    public void set_AsnAssociation(AsnAssociation value);
    internal bool IsSetAsnAssociation();
}
public class Amazon.EC2.Model.DisassociateIpamResourceDiscoveryRequest : AmazonEC2Request {
    private string _ipamResourceDiscoveryAssociationId;
    [AWSPropertyAttribute]
public string IpamResourceDiscoveryAssociationId { get; public set; }
    public string get_IpamResourceDiscoveryAssociationId();
    public void set_IpamResourceDiscoveryAssociationId(string value);
    internal bool IsSetIpamResourceDiscoveryAssociationId();
}
public class Amazon.EC2.Model.DisassociateIpamResourceDiscoveryResponse : AmazonWebServiceResponse {
    private IpamResourceDiscoveryAssociation _ipamResourceDiscoveryAssociation;
    public IpamResourceDiscoveryAssociation IpamResourceDiscoveryAssociation { get; public set; }
    public IpamResourceDiscoveryAssociation get_IpamResourceDiscoveryAssociation();
    public void set_IpamResourceDiscoveryAssociation(IpamResourceDiscoveryAssociation value);
    internal bool IsSetIpamResourceDiscoveryAssociation();
}
public class Amazon.EC2.Model.DisassociateNatGatewayAddressRequest : AmazonEC2Request {
    private List`1<string> _associationIds;
    private Nullable`1<int> _maxDrainDurationSeconds;
    private string _natGatewayId;
    [AWSPropertyAttribute]
public List`1<string> AssociationIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxDrainDurationSeconds { get; public set; }
    [AWSPropertyAttribute]
public string NatGatewayId { get; public set; }
    public List`1<string> get_AssociationIds();
    public void set_AssociationIds(List`1<string> value);
    internal bool IsSetAssociationIds();
    public Nullable`1<int> get_MaxDrainDurationSeconds();
    public void set_MaxDrainDurationSeconds(Nullable`1<int> value);
    internal bool IsSetMaxDrainDurationSeconds();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
}
public class Amazon.EC2.Model.DisassociateNatGatewayAddressResponse : AmazonWebServiceResponse {
    private List`1<NatGatewayAddress> _natGatewayAddresses;
    private string _natGatewayId;
    public List`1<NatGatewayAddress> NatGatewayAddresses { get; public set; }
    public string NatGatewayId { get; public set; }
    public List`1<NatGatewayAddress> get_NatGatewayAddresses();
    public void set_NatGatewayAddresses(List`1<NatGatewayAddress> value);
    internal bool IsSetNatGatewayAddresses();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
}
public class Amazon.EC2.Model.DisassociateRouteTableRequest : AmazonEC2Request {
    private string _associationId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.DisassociateRouteTableResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DisassociateSubnetCidrBlockRequest : AmazonEC2Request {
    private string _associationId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.DisassociateSubnetCidrBlockResponse : AmazonWebServiceResponse {
    private SubnetIpv6CidrBlockAssociation _ipv6CidrBlockAssociation;
    private string _subnetId;
    public SubnetIpv6CidrBlockAssociation Ipv6CidrBlockAssociation { get; public set; }
    public string SubnetId { get; public set; }
    public SubnetIpv6CidrBlockAssociation get_Ipv6CidrBlockAssociation();
    public void set_Ipv6CidrBlockAssociation(SubnetIpv6CidrBlockAssociation value);
    internal bool IsSetIpv6CidrBlockAssociation();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.DisassociateTransitGatewayMulticastDomainRequest : AmazonEC2Request {
    private List`1<string> _subnetIds;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayMulticastDomainId;
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.DisassociateTransitGatewayMulticastDomainResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDomainAssociations _associations;
    public TransitGatewayMulticastDomainAssociations Associations { get; public set; }
    public TransitGatewayMulticastDomainAssociations get_Associations();
    public void set_Associations(TransitGatewayMulticastDomainAssociations value);
    internal bool IsSetAssociations();
}
public class Amazon.EC2.Model.DisassociateTransitGatewayPolicyTableRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    private string _transitGatewayPolicyTableId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayPolicyTableId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayPolicyTableId();
    public void set_TransitGatewayPolicyTableId(string value);
    internal bool IsSetTransitGatewayPolicyTableId();
}
public class Amazon.EC2.Model.DisassociateTransitGatewayPolicyTableResponse : AmazonWebServiceResponse {
    private TransitGatewayPolicyTableAssociation _association;
    public TransitGatewayPolicyTableAssociation Association { get; public set; }
    public TransitGatewayPolicyTableAssociation get_Association();
    public void set_Association(TransitGatewayPolicyTableAssociation value);
    internal bool IsSetAssociation();
}
public class Amazon.EC2.Model.DisassociateTransitGatewayRouteTableRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.DisassociateTransitGatewayRouteTableResponse : AmazonWebServiceResponse {
    private TransitGatewayAssociation _association;
    public TransitGatewayAssociation Association { get; public set; }
    public TransitGatewayAssociation get_Association();
    public void set_Association(TransitGatewayAssociation value);
    internal bool IsSetAssociation();
}
public class Amazon.EC2.Model.DisassociateTrunkInterfaceRequest : AmazonEC2Request {
    private string _associationId;
    private string _clientToken;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    public string ClientToken { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
}
public class Amazon.EC2.Model.DisassociateTrunkInterfaceResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private Nullable`1<bool> _return;
    public string ClientToken { get; public set; }
    public Nullable`1<bool> Return { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisassociateVpcCidrBlockRequest : AmazonEC2Request {
    private string _associationId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.DisassociateVpcCidrBlockResponse : AmazonWebServiceResponse {
    private VpcCidrBlockAssociation _cidrBlockAssociation;
    private VpcIpv6CidrBlockAssociation _ipv6CidrBlockAssociation;
    private string _vpcId;
    public VpcCidrBlockAssociation CidrBlockAssociation { get; public set; }
    public VpcIpv6CidrBlockAssociation Ipv6CidrBlockAssociation { get; public set; }
    public string VpcId { get; public set; }
    public VpcCidrBlockAssociation get_CidrBlockAssociation();
    public void set_CidrBlockAssociation(VpcCidrBlockAssociation value);
    internal bool IsSetCidrBlockAssociation();
    public VpcIpv6CidrBlockAssociation get_Ipv6CidrBlockAssociation();
    public void set_Ipv6CidrBlockAssociation(VpcIpv6CidrBlockAssociation value);
    internal bool IsSetIpv6CidrBlockAssociation();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DiskImage : object {
    private string _description;
    private DiskImageDetail _image;
    private VolumeDetail _volume;
    public string Description { get; public set; }
    public DiskImageDetail Image { get; public set; }
    public VolumeDetail Volume { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDetail get_Image();
    public void set_Image(DiskImageDetail value);
    internal bool IsSetImage();
    public VolumeDetail get_Volume();
    public void set_Volume(VolumeDetail value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.DiskImageDescription : object {
    private string _checksum;
    private DiskImageFormat _format;
    private string _importManifestUrl;
    private Nullable`1<long> _size;
    public string Checksum { get; public set; }
    public DiskImageFormat Format { get; public set; }
    [AWSPropertyAttribute]
public string ImportManifestUrl { get; public set; }
    public Nullable`1<long> Size { get; public set; }
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public DiskImageFormat get_Format();
    public void set_Format(DiskImageFormat value);
    internal bool IsSetFormat();
    public string get_ImportManifestUrl();
    public void set_ImportManifestUrl(string value);
    internal bool IsSetImportManifestUrl();
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    internal bool IsSetSize();
}
public class Amazon.EC2.Model.DiskImageDetail : object {
    private Nullable`1<long> _bytes;
    private DiskImageFormat _format;
    private string _importManifestUrl;
    [AWSPropertyAttribute]
public Nullable`1<long> Bytes { get; public set; }
    [AWSPropertyAttribute]
public DiskImageFormat Format { get; public set; }
    [AWSPropertyAttribute]
public string ImportManifestUrl { get; public set; }
    public Nullable`1<long> get_Bytes();
    public void set_Bytes(Nullable`1<long> value);
    internal bool IsSetBytes();
    public DiskImageFormat get_Format();
    public void set_Format(DiskImageFormat value);
    internal bool IsSetFormat();
    public string get_ImportManifestUrl();
    public void set_ImportManifestUrl(string value);
    internal bool IsSetImportManifestUrl();
}
public class Amazon.EC2.Model.DiskImageVolumeDescription : object {
    private string _id;
    private Nullable`1<long> _size;
    public string Id { get; public set; }
    public Nullable`1<long> Size { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    internal bool IsSetSize();
}
public class Amazon.EC2.Model.DiskInfo : object {
    private Nullable`1<int> _count;
    private Nullable`1<long> _sizeInGB;
    private DiskType _type;
    public Nullable`1<int> Count { get; public set; }
    public Nullable`1<long> SizeInGB { get; public set; }
    public DiskType Type { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public Nullable`1<long> get_SizeInGB();
    public void set_SizeInGB(Nullable`1<long> value);
    internal bool IsSetSizeInGB();
    public DiskType get_Type();
    public void set_Type(DiskType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.DnsEntry : object {
    private string _dnsName;
    private string _hostedZoneId;
    public string DnsName { get; public set; }
    public string HostedZoneId { get; public set; }
    public string get_DnsName();
    public void set_DnsName(string value);
    internal bool IsSetDnsName();
    public string get_HostedZoneId();
    public void set_HostedZoneId(string value);
    internal bool IsSetHostedZoneId();
}
public class Amazon.EC2.Model.DnsOptions : object {
    private DnsRecordIpType _dnsRecordIpType;
    private Nullable`1<bool> _privateDnsOnlyForInboundResolverEndpoint;
    public DnsRecordIpType DnsRecordIpType { get; public set; }
    public Nullable`1<bool> PrivateDnsOnlyForInboundResolverEndpoint { get; public set; }
    public DnsRecordIpType get_DnsRecordIpType();
    public void set_DnsRecordIpType(DnsRecordIpType value);
    internal bool IsSetDnsRecordIpType();
    public Nullable`1<bool> get_PrivateDnsOnlyForInboundResolverEndpoint();
    public void set_PrivateDnsOnlyForInboundResolverEndpoint(Nullable`1<bool> value);
    internal bool IsSetPrivateDnsOnlyForInboundResolverEndpoint();
}
public class Amazon.EC2.Model.DnsOptionsSpecification : object {
    private DnsRecordIpType _dnsRecordIpType;
    private Nullable`1<bool> _privateDnsOnlyForInboundResolverEndpoint;
    public DnsRecordIpType DnsRecordIpType { get; public set; }
    public Nullable`1<bool> PrivateDnsOnlyForInboundResolverEndpoint { get; public set; }
    public DnsRecordIpType get_DnsRecordIpType();
    public void set_DnsRecordIpType(DnsRecordIpType value);
    internal bool IsSetDnsRecordIpType();
    public Nullable`1<bool> get_PrivateDnsOnlyForInboundResolverEndpoint();
    public void set_PrivateDnsOnlyForInboundResolverEndpoint(Nullable`1<bool> value);
    internal bool IsSetPrivateDnsOnlyForInboundResolverEndpoint();
}
public class Amazon.EC2.Model.DnsServersOptionsModifyStructure : object {
    private List`1<string> _customDnsServers;
    private Nullable`1<bool> _enabled;
    public List`1<string> CustomDnsServers { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> get_CustomDnsServers();
    public void set_CustomDnsServers(List`1<string> value);
    internal bool IsSetCustomDnsServers();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.DryRunResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> isSuccessfulField;
    private string messageField;
    private Exception errorField;
    public bool IsSuccessful { get; public set; }
    public string Message { get; public set; }
    public Exception Error { get; public set; }
    public bool get_IsSuccessful();
    public void set_IsSuccessful(bool value);
    internal bool IsSetIsSuccessful();
    public string get_Message();
    public void set_Message(string value);
    public bool IsSetMessage();
    public Exception get_Error();
    public void set_Error(Exception value);
    public bool IsSetError();
}
public class Amazon.EC2.Model.EbsBlockDevice : object {
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _outpostArn;
    private string _snapshotId;
    private Nullable`1<int> _throughput;
    private Nullable`1<int> _volumeSize;
    private VolumeType _volumeType;
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string OutpostArn { get; public set; }
    public string SnapshotId { get; public set; }
    public Nullable`1<int> Throughput { get; public set; }
    public Nullable`1<int> VolumeSize { get; public set; }
    public VolumeType VolumeType { get; public set; }
    internal void ClearEncryptedFlag();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public Nullable`1<int> get_Throughput();
    public void set_Throughput(Nullable`1<int> value);
    internal bool IsSetThroughput();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.EbsInfo : object {
    private EbsOptimizedInfo _ebsOptimizedInfo;
    private EbsOptimizedSupport _ebsOptimizedSupport;
    private EbsEncryptionSupport _encryptionSupport;
    private EbsNvmeSupport _nvmeSupport;
    public EbsOptimizedInfo EbsOptimizedInfo { get; public set; }
    public EbsOptimizedSupport EbsOptimizedSupport { get; public set; }
    public EbsEncryptionSupport EncryptionSupport { get; public set; }
    public EbsNvmeSupport NvmeSupport { get; public set; }
    public EbsOptimizedInfo get_EbsOptimizedInfo();
    public void set_EbsOptimizedInfo(EbsOptimizedInfo value);
    internal bool IsSetEbsOptimizedInfo();
    public EbsOptimizedSupport get_EbsOptimizedSupport();
    public void set_EbsOptimizedSupport(EbsOptimizedSupport value);
    internal bool IsSetEbsOptimizedSupport();
    public EbsEncryptionSupport get_EncryptionSupport();
    public void set_EncryptionSupport(EbsEncryptionSupport value);
    internal bool IsSetEncryptionSupport();
    public EbsNvmeSupport get_NvmeSupport();
    public void set_NvmeSupport(EbsNvmeSupport value);
    internal bool IsSetNvmeSupport();
}
public class Amazon.EC2.Model.EbsInstanceBlockDevice : object {
    private string _associatedResource;
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private AttachmentStatus _status;
    private string _volumeId;
    private string _volumeOwnerId;
    public string AssociatedResource { get; public set; }
    public Nullable`1<DateTime> AttachTime { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public AttachmentStatus Status { get; public set; }
    public string VolumeId { get; public set; }
    public string VolumeOwnerId { get; public set; }
    public string get_AssociatedResource();
    public void set_AssociatedResource(string value);
    internal bool IsSetAssociatedResource();
    public Nullable`1<DateTime> get_AttachTime();
    public void set_AttachTime(Nullable`1<DateTime> value);
    internal bool IsSetAttachTime();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public AttachmentStatus get_Status();
    public void set_Status(AttachmentStatus value);
    internal bool IsSetStatus();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public string get_VolumeOwnerId();
    public void set_VolumeOwnerId(string value);
    internal bool IsSetVolumeOwnerId();
}
public class Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification : object {
    private Nullable`1<bool> _deleteOnTermination;
    private string _volumeId;
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public string VolumeId { get; public set; }
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.EbsOptimizedInfo : object {
    private Nullable`1<int> _baselineBandwidthInMbps;
    private Nullable`1<int> _baselineIops;
    private Nullable`1<double> _baselineThroughputInMBps;
    private Nullable`1<int> _maximumBandwidthInMbps;
    private Nullable`1<int> _maximumIops;
    private Nullable`1<double> _maximumThroughputInMBps;
    public Nullable`1<int> BaselineBandwidthInMbps { get; public set; }
    public Nullable`1<int> BaselineIops { get; public set; }
    public Nullable`1<double> BaselineThroughputInMBps { get; public set; }
    public Nullable`1<int> MaximumBandwidthInMbps { get; public set; }
    public Nullable`1<int> MaximumIops { get; public set; }
    public Nullable`1<double> MaximumThroughputInMBps { get; public set; }
    public Nullable`1<int> get_BaselineBandwidthInMbps();
    public void set_BaselineBandwidthInMbps(Nullable`1<int> value);
    internal bool IsSetBaselineBandwidthInMbps();
    public Nullable`1<int> get_BaselineIops();
    public void set_BaselineIops(Nullable`1<int> value);
    internal bool IsSetBaselineIops();
    public Nullable`1<double> get_BaselineThroughputInMBps();
    public void set_BaselineThroughputInMBps(Nullable`1<double> value);
    internal bool IsSetBaselineThroughputInMBps();
    public Nullable`1<int> get_MaximumBandwidthInMbps();
    public void set_MaximumBandwidthInMbps(Nullable`1<int> value);
    internal bool IsSetMaximumBandwidthInMbps();
    public Nullable`1<int> get_MaximumIops();
    public void set_MaximumIops(Nullable`1<int> value);
    internal bool IsSetMaximumIops();
    public Nullable`1<double> get_MaximumThroughputInMBps();
    public void set_MaximumThroughputInMBps(Nullable`1<double> value);
    internal bool IsSetMaximumThroughputInMBps();
}
public class Amazon.EC2.Model.Ec2InstanceConnectEndpoint : object {
    private string _availabilityZone;
    private Nullable`1<DateTime> _createdAt;
    private string _dnsName;
    private string _fipsDnsName;
    private string _instanceConnectEndpointArn;
    private string _instanceConnectEndpointId;
    private List`1<string> _networkInterfaceIds;
    private string _ownerId;
    private Nullable`1<bool> _preserveClientIp;
    private List`1<string> _securityGroupIds;
    private Ec2InstanceConnectEndpointState _state;
    private string _stateMessage;
    private string _subnetId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string DnsName { get; public set; }
    public string FipsDnsName { get; public set; }
    [AWSPropertyAttribute]
public string InstanceConnectEndpointArn { get; public set; }
    public string InstanceConnectEndpointId { get; public set; }
    public List`1<string> NetworkInterfaceIds { get; public set; }
    public string OwnerId { get; public set; }
    public Nullable`1<bool> PreserveClientIp { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public Ec2InstanceConnectEndpointState State { get; public set; }
    public string StateMessage { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_DnsName();
    public void set_DnsName(string value);
    internal bool IsSetDnsName();
    public string get_FipsDnsName();
    public void set_FipsDnsName(string value);
    internal bool IsSetFipsDnsName();
    public string get_InstanceConnectEndpointArn();
    public void set_InstanceConnectEndpointArn(string value);
    internal bool IsSetInstanceConnectEndpointArn();
    public string get_InstanceConnectEndpointId();
    public void set_InstanceConnectEndpointId(string value);
    internal bool IsSetInstanceConnectEndpointId();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public Nullable`1<bool> get_PreserveClientIp();
    public void set_PreserveClientIp(Nullable`1<bool> value);
    internal bool IsSetPreserveClientIp();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public Ec2InstanceConnectEndpointState get_State();
    public void set_State(Ec2InstanceConnectEndpointState value);
    internal bool IsSetState();
    public string get_StateMessage();
    public void set_StateMessage(string value);
    internal bool IsSetStateMessage();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.EC2PaginatorFactory : object {
    private IAmazonEC2 client;
    internal EC2PaginatorFactory(IAmazonEC2 client);
    public sealed virtual IDescribeAddressesAttributePaginator DescribeAddressesAttribute(DescribeAddressesAttributeRequest request);
    public sealed virtual IDescribeAddressTransfersPaginator DescribeAddressTransfers(DescribeAddressTransfersRequest request);
    public sealed virtual IDescribeAwsNetworkPerformanceMetricSubscriptionsPaginator DescribeAwsNetworkPerformanceMetricSubscriptions(DescribeAwsNetworkPerformanceMetricSubscriptionsRequest request);
    public sealed virtual IDescribeByoipCidrsPaginator DescribeByoipCidrs(DescribeByoipCidrsRequest request);
    public sealed virtual IDescribeCapacityBlockOfferingsPaginator DescribeCapacityBlockOfferings(DescribeCapacityBlockOfferingsRequest request);
    public sealed virtual IDescribeCapacityReservationFleetsPaginator DescribeCapacityReservationFleets(DescribeCapacityReservationFleetsRequest request);
    public sealed virtual IDescribeCapacityReservationsPaginator DescribeCapacityReservations(DescribeCapacityReservationsRequest request);
    public sealed virtual IDescribeCarrierGatewaysPaginator DescribeCarrierGateways(DescribeCarrierGatewaysRequest request);
    public sealed virtual IDescribeClassicLinkInstancesPaginator DescribeClassicLinkInstances(DescribeClassicLinkInstancesRequest request);
    public sealed virtual IDescribeClientVpnAuthorizationRulesPaginator DescribeClientVpnAuthorizationRules(DescribeClientVpnAuthorizationRulesRequest request);
    public sealed virtual IDescribeClientVpnConnectionsPaginator DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request);
    public sealed virtual IDescribeClientVpnEndpointsPaginator DescribeClientVpnEndpoints(DescribeClientVpnEndpointsRequest request);
    public sealed virtual IDescribeClientVpnRoutesPaginator DescribeClientVpnRoutes(DescribeClientVpnRoutesRequest request);
    public sealed virtual IDescribeClientVpnTargetNetworksPaginator DescribeClientVpnTargetNetworks(DescribeClientVpnTargetNetworksRequest request);
    public sealed virtual IDescribeCoipPoolsPaginator DescribeCoipPools(DescribeCoipPoolsRequest request);
    public sealed virtual IDescribeDhcpOptionsPaginator DescribeDhcpOptions(DescribeDhcpOptionsRequest request);
    public sealed virtual IDescribeEgressOnlyInternetGatewaysPaginator DescribeEgressOnlyInternetGateways(DescribeEgressOnlyInternetGatewaysRequest request);
    public sealed virtual IDescribeExportImageTasksPaginator DescribeExportImageTasks(DescribeExportImageTasksRequest request);
    public sealed virtual IDescribeFastLaunchImagesPaginator DescribeFastLaunchImages(DescribeFastLaunchImagesRequest request);
    public sealed virtual IDescribeFastSnapshotRestoresPaginator DescribeFastSnapshotRestores(DescribeFastSnapshotRestoresRequest request);
    public sealed virtual IDescribeFleetsPaginator DescribeFleets(DescribeFleetsRequest request);
    public sealed virtual IDescribeFlowLogsPaginator DescribeFlowLogs(DescribeFlowLogsRequest request);
    public sealed virtual IDescribeFpgaImagesPaginator DescribeFpgaImages(DescribeFpgaImagesRequest request);
    public sealed virtual IDescribeHostReservationOfferingsPaginator DescribeHostReservationOfferings(DescribeHostReservationOfferingsRequest request);
    public sealed virtual IDescribeHostReservationsPaginator DescribeHostReservations(DescribeHostReservationsRequest request);
    public sealed virtual IDescribeHostsPaginator DescribeHosts(DescribeHostsRequest request);
    public sealed virtual IDescribeIamInstanceProfileAssociationsPaginator DescribeIamInstanceProfileAssociations(DescribeIamInstanceProfileAssociationsRequest request);
    public sealed virtual IDescribeImagesPaginator DescribeImages(DescribeImagesRequest request);
    public sealed virtual IDescribeImportImageTasksPaginator DescribeImportImageTasks(DescribeImportImageTasksRequest request);
    public sealed virtual IDescribeImportSnapshotTasksPaginator DescribeImportSnapshotTasks(DescribeImportSnapshotTasksRequest request);
    public sealed virtual IDescribeInstanceConnectEndpointsPaginator DescribeInstanceConnectEndpoints(DescribeInstanceConnectEndpointsRequest request);
    public sealed virtual IDescribeInstanceCreditSpecificationsPaginator DescribeInstanceCreditSpecifications(DescribeInstanceCreditSpecificationsRequest request);
    public sealed virtual IDescribeInstanceEventWindowsPaginator DescribeInstanceEventWindows(DescribeInstanceEventWindowsRequest request);
    public sealed virtual IDescribeInstancesPaginator DescribeInstances(DescribeInstancesRequest request);
    public sealed virtual IDescribeInstanceStatusPaginator DescribeInstanceStatus(DescribeInstanceStatusRequest request);
    public sealed virtual IDescribeInstanceTopologyPaginator DescribeInstanceTopology(DescribeInstanceTopologyRequest request);
    public sealed virtual IDescribeInstanceTypeOfferingsPaginator DescribeInstanceTypeOfferings(DescribeInstanceTypeOfferingsRequest request);
    public sealed virtual IDescribeInstanceTypesPaginator DescribeInstanceTypes(DescribeInstanceTypesRequest request);
    public sealed virtual IDescribeInternetGatewaysPaginator DescribeInternetGateways(DescribeInternetGatewaysRequest request);
    public sealed virtual IDescribeIpamPoolsPaginator DescribeIpamPools(DescribeIpamPoolsRequest request);
    public sealed virtual IDescribeIpamResourceDiscoveriesPaginator DescribeIpamResourceDiscoveries(DescribeIpamResourceDiscoveriesRequest request);
    public sealed virtual IDescribeIpamResourceDiscoveryAssociationsPaginator DescribeIpamResourceDiscoveryAssociations(DescribeIpamResourceDiscoveryAssociationsRequest request);
    public sealed virtual IDescribeIpamsPaginator DescribeIpams(DescribeIpamsRequest request);
    public sealed virtual IDescribeIpamScopesPaginator DescribeIpamScopes(DescribeIpamScopesRequest request);
    public sealed virtual IDescribeIpv6PoolsPaginator DescribeIpv6Pools(DescribeIpv6PoolsRequest request);
    public sealed virtual IDescribeLaunchTemplatesPaginator DescribeLaunchTemplates(DescribeLaunchTemplatesRequest request);
    public sealed virtual IDescribeLaunchTemplateVersionsPaginator DescribeLaunchTemplateVersions(DescribeLaunchTemplateVersionsRequest request);
    public sealed virtual IDescribeLocalGatewayRouteTablesPaginator DescribeLocalGatewayRouteTables(DescribeLocalGatewayRouteTablesRequest request);
    public sealed virtual IDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsPaginator DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request);
    public sealed virtual IDescribeLocalGatewayRouteTableVpcAssociationsPaginator DescribeLocalGatewayRouteTableVpcAssociations(DescribeLocalGatewayRouteTableVpcAssociationsRequest request);
    public sealed virtual IDescribeLocalGatewaysPaginator DescribeLocalGateways(DescribeLocalGatewaysRequest request);
    public sealed virtual IDescribeLocalGatewayVirtualInterfaceGroupsPaginator DescribeLocalGatewayVirtualInterfaceGroups(DescribeLocalGatewayVirtualInterfaceGroupsRequest request);
    public sealed virtual IDescribeLocalGatewayVirtualInterfacesPaginator DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request);
    public sealed virtual IDescribeMacHostsPaginator DescribeMacHosts(DescribeMacHostsRequest request);
    public sealed virtual IDescribeManagedPrefixListsPaginator DescribeManagedPrefixLists(DescribeManagedPrefixListsRequest request);
    public sealed virtual IDescribeMovingAddressesPaginator DescribeMovingAddresses(DescribeMovingAddressesRequest request);
    public sealed virtual IDescribeNatGatewaysPaginator DescribeNatGateways(DescribeNatGatewaysRequest request);
    public sealed virtual IDescribeNetworkAclsPaginator DescribeNetworkAcls(DescribeNetworkAclsRequest request);
    public sealed virtual IDescribeNetworkInsightsAccessScopeAnalysesPaginator DescribeNetworkInsightsAccessScopeAnalyses(DescribeNetworkInsightsAccessScopeAnalysesRequest request);
    public sealed virtual IDescribeNetworkInsightsAccessScopesPaginator DescribeNetworkInsightsAccessScopes(DescribeNetworkInsightsAccessScopesRequest request);
    public sealed virtual IDescribeNetworkInsightsAnalysesPaginator DescribeNetworkInsightsAnalyses(DescribeNetworkInsightsAnalysesRequest request);
    public sealed virtual IDescribeNetworkInsightsPathsPaginator DescribeNetworkInsightsPaths(DescribeNetworkInsightsPathsRequest request);
    public sealed virtual IDescribeNetworkInterfacePermissionsPaginator DescribeNetworkInterfacePermissions(DescribeNetworkInterfacePermissionsRequest request);
    public sealed virtual IDescribeNetworkInterfacesPaginator DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request);
    public sealed virtual IDescribePrefixListsPaginator DescribePrefixLists(DescribePrefixListsRequest request);
    public sealed virtual IDescribePrincipalIdFormatPaginator DescribePrincipalIdFormat(DescribePrincipalIdFormatRequest request);
    public sealed virtual IDescribePublicIpv4PoolsPaginator DescribePublicIpv4Pools(DescribePublicIpv4PoolsRequest request);
    public sealed virtual IDescribeReplaceRootVolumeTasksPaginator DescribeReplaceRootVolumeTasks(DescribeReplaceRootVolumeTasksRequest request);
    public sealed virtual IDescribeReservedInstancesModificationsPaginator DescribeReservedInstancesModifications(DescribeReservedInstancesModificationsRequest request);
    public sealed virtual IDescribeReservedInstancesOfferingsPaginator DescribeReservedInstancesOfferings(DescribeReservedInstancesOfferingsRequest request);
    public sealed virtual IDescribeRouteTablesPaginator DescribeRouteTables(DescribeRouteTablesRequest request);
    public sealed virtual IDescribeScheduledInstanceAvailabilityPaginator DescribeScheduledInstanceAvailability(DescribeScheduledInstanceAvailabilityRequest request);
    public sealed virtual IDescribeScheduledInstancesPaginator DescribeScheduledInstances(DescribeScheduledInstancesRequest request);
    public sealed virtual IDescribeSecurityGroupRulesPaginator DescribeSecurityGroupRules(DescribeSecurityGroupRulesRequest request);
    public sealed virtual IDescribeSecurityGroupsPaginator DescribeSecurityGroups(DescribeSecurityGroupsRequest request);
    public sealed virtual IDescribeSnapshotsPaginator DescribeSnapshots(DescribeSnapshotsRequest request);
    public sealed virtual IDescribeSnapshotTierStatusPaginator DescribeSnapshotTierStatus(DescribeSnapshotTierStatusRequest request);
    public sealed virtual IDescribeSpotFleetRequestsPaginator DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request);
    public sealed virtual IDescribeSpotInstanceRequestsPaginator DescribeSpotInstanceRequests(DescribeSpotInstanceRequestsRequest request);
    public sealed virtual IDescribeSpotPriceHistoryPaginator DescribeSpotPriceHistory(DescribeSpotPriceHistoryRequest request);
    public sealed virtual IDescribeStaleSecurityGroupsPaginator DescribeStaleSecurityGroups(DescribeStaleSecurityGroupsRequest request);
    public sealed virtual IDescribeStoreImageTasksPaginator DescribeStoreImageTasks(DescribeStoreImageTasksRequest request);
    public sealed virtual IDescribeSubnetsPaginator DescribeSubnets(DescribeSubnetsRequest request);
    public sealed virtual IDescribeTagsPaginator DescribeTags(DescribeTagsRequest request);
    public sealed virtual IDescribeTrafficMirrorFiltersPaginator DescribeTrafficMirrorFilters(DescribeTrafficMirrorFiltersRequest request);
    public sealed virtual IDescribeTrafficMirrorSessionsPaginator DescribeTrafficMirrorSessions(DescribeTrafficMirrorSessionsRequest request);
    public sealed virtual IDescribeTrafficMirrorTargetsPaginator DescribeTrafficMirrorTargets(DescribeTrafficMirrorTargetsRequest request);
    public sealed virtual IDescribeTransitGatewayAttachmentsPaginator DescribeTransitGatewayAttachments(DescribeTransitGatewayAttachmentsRequest request);
    public sealed virtual IDescribeTransitGatewayConnectPeersPaginator DescribeTransitGatewayConnectPeers(DescribeTransitGatewayConnectPeersRequest request);
    public sealed virtual IDescribeTransitGatewayConnectsPaginator DescribeTransitGatewayConnects(DescribeTransitGatewayConnectsRequest request);
    public sealed virtual IDescribeTransitGatewayMulticastDomainsPaginator DescribeTransitGatewayMulticastDomains(DescribeTransitGatewayMulticastDomainsRequest request);
    public sealed virtual IDescribeTransitGatewayPeeringAttachmentsPaginator DescribeTransitGatewayPeeringAttachments(DescribeTransitGatewayPeeringAttachmentsRequest request);
    public sealed virtual IDescribeTransitGatewayPolicyTablesPaginator DescribeTransitGatewayPolicyTables(DescribeTransitGatewayPolicyTablesRequest request);
    public sealed virtual IDescribeTransitGatewayRouteTableAnnouncementsPaginator DescribeTransitGatewayRouteTableAnnouncements(DescribeTransitGatewayRouteTableAnnouncementsRequest request);
    public sealed virtual IDescribeTransitGatewayRouteTablesPaginator DescribeTransitGatewayRouteTables(DescribeTransitGatewayRouteTablesRequest request);
    public sealed virtual IDescribeTransitGatewaysPaginator DescribeTransitGateways(DescribeTransitGatewaysRequest request);
    public sealed virtual IDescribeTransitGatewayVpcAttachmentsPaginator DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request);
    public sealed virtual IDescribeTrunkInterfaceAssociationsPaginator DescribeTrunkInterfaceAssociations(DescribeTrunkInterfaceAssociationsRequest request);
    public sealed virtual IDescribeVerifiedAccessEndpointsPaginator DescribeVerifiedAccessEndpoints(DescribeVerifiedAccessEndpointsRequest request);
    public sealed virtual IDescribeVerifiedAccessGroupsPaginator DescribeVerifiedAccessGroups(DescribeVerifiedAccessGroupsRequest request);
    public sealed virtual IDescribeVerifiedAccessInstanceLoggingConfigurationsPaginator DescribeVerifiedAccessInstanceLoggingConfigurations(DescribeVerifiedAccessInstanceLoggingConfigurationsRequest request);
    public sealed virtual IDescribeVerifiedAccessInstancesPaginator DescribeVerifiedAccessInstances(DescribeVerifiedAccessInstancesRequest request);
    public sealed virtual IDescribeVerifiedAccessTrustProvidersPaginator DescribeVerifiedAccessTrustProviders(DescribeVerifiedAccessTrustProvidersRequest request);
    public sealed virtual IDescribeVolumesPaginator DescribeVolumes(DescribeVolumesRequest request);
    public sealed virtual IDescribeVolumesModificationsPaginator DescribeVolumesModifications(DescribeVolumesModificationsRequest request);
    public sealed virtual IDescribeVolumeStatusPaginator DescribeVolumeStatus(DescribeVolumeStatusRequest request);
    public sealed virtual IDescribeVpcClassicLinkDnsSupportPaginator DescribeVpcClassicLinkDnsSupport(DescribeVpcClassicLinkDnsSupportRequest request);
    public sealed virtual IDescribeVpcEndpointConnectionNotificationsPaginator DescribeVpcEndpointConnectionNotifications(DescribeVpcEndpointConnectionNotificationsRequest request);
    public sealed virtual IDescribeVpcEndpointConnectionsPaginator DescribeVpcEndpointConnections(DescribeVpcEndpointConnectionsRequest request);
    public sealed virtual IDescribeVpcEndpointsPaginator DescribeVpcEndpoints(DescribeVpcEndpointsRequest request);
    public sealed virtual IDescribeVpcEndpointServiceConfigurationsPaginator DescribeVpcEndpointServiceConfigurations(DescribeVpcEndpointServiceConfigurationsRequest request);
    public sealed virtual IDescribeVpcEndpointServicePermissionsPaginator DescribeVpcEndpointServicePermissions(DescribeVpcEndpointServicePermissionsRequest request);
    public sealed virtual IDescribeVpcPeeringConnectionsPaginator DescribeVpcPeeringConnections(DescribeVpcPeeringConnectionsRequest request);
    public sealed virtual IDescribeVpcsPaginator DescribeVpcs(DescribeVpcsRequest request);
    public sealed virtual IGetAssociatedIpv6PoolCidrsPaginator GetAssociatedIpv6PoolCidrs(GetAssociatedIpv6PoolCidrsRequest request);
    public sealed virtual IGetAwsNetworkPerformanceDataPaginator GetAwsNetworkPerformanceData(GetAwsNetworkPerformanceDataRequest request);
    public sealed virtual IGetGroupsForCapacityReservationPaginator GetGroupsForCapacityReservation(GetGroupsForCapacityReservationRequest request);
    public sealed virtual IGetInstanceTypesFromInstanceRequirementsPaginator GetInstanceTypesFromInstanceRequirements(GetInstanceTypesFromInstanceRequirementsRequest request);
    public sealed virtual IGetIpamAddressHistoryPaginator GetIpamAddressHistory(GetIpamAddressHistoryRequest request);
    public sealed virtual IGetIpamDiscoveredAccountsPaginator GetIpamDiscoveredAccounts(GetIpamDiscoveredAccountsRequest request);
    public sealed virtual IGetIpamDiscoveredResourceCidrsPaginator GetIpamDiscoveredResourceCidrs(GetIpamDiscoveredResourceCidrsRequest request);
    public sealed virtual IGetIpamPoolAllocationsPaginator GetIpamPoolAllocations(GetIpamPoolAllocationsRequest request);
    public sealed virtual IGetIpamPoolCidrsPaginator GetIpamPoolCidrs(GetIpamPoolCidrsRequest request);
    public sealed virtual IGetIpamResourceCidrsPaginator GetIpamResourceCidrs(GetIpamResourceCidrsRequest request);
    public sealed virtual IGetManagedPrefixListAssociationsPaginator GetManagedPrefixListAssociations(GetManagedPrefixListAssociationsRequest request);
    public sealed virtual IGetManagedPrefixListEntriesPaginator GetManagedPrefixListEntries(GetManagedPrefixListEntriesRequest request);
    public sealed virtual IGetNetworkInsightsAccessScopeAnalysisFindingsPaginator GetNetworkInsightsAccessScopeAnalysisFindings(GetNetworkInsightsAccessScopeAnalysisFindingsRequest request);
    public sealed virtual IGetSecurityGroupsForVpcPaginator GetSecurityGroupsForVpc(GetSecurityGroupsForVpcRequest request);
    public sealed virtual IGetSpotPlacementScoresPaginator GetSpotPlacementScores(GetSpotPlacementScoresRequest request);
    public sealed virtual IGetTransitGatewayAttachmentPropagationsPaginator GetTransitGatewayAttachmentPropagations(GetTransitGatewayAttachmentPropagationsRequest request);
    public sealed virtual IGetTransitGatewayMulticastDomainAssociationsPaginator GetTransitGatewayMulticastDomainAssociations(GetTransitGatewayMulticastDomainAssociationsRequest request);
    public sealed virtual IGetTransitGatewayPolicyTableAssociationsPaginator GetTransitGatewayPolicyTableAssociations(GetTransitGatewayPolicyTableAssociationsRequest request);
    public sealed virtual IGetTransitGatewayPrefixListReferencesPaginator GetTransitGatewayPrefixListReferences(GetTransitGatewayPrefixListReferencesRequest request);
    public sealed virtual IGetTransitGatewayRouteTableAssociationsPaginator GetTransitGatewayRouteTableAssociations(GetTransitGatewayRouteTableAssociationsRequest request);
    public sealed virtual IGetTransitGatewayRouteTablePropagationsPaginator GetTransitGatewayRouteTablePropagations(GetTransitGatewayRouteTablePropagationsRequest request);
    public sealed virtual IGetVpnConnectionDeviceTypesPaginator GetVpnConnectionDeviceTypes(GetVpnConnectionDeviceTypesRequest request);
    public sealed virtual IListImagesInRecycleBinPaginator ListImagesInRecycleBin(ListImagesInRecycleBinRequest request);
    public sealed virtual IListSnapshotsInRecycleBinPaginator ListSnapshotsInRecycleBin(ListSnapshotsInRecycleBinRequest request);
    public sealed virtual ISearchLocalGatewayRoutesPaginator SearchLocalGatewayRoutes(SearchLocalGatewayRoutesRequest request);
    public sealed virtual ISearchTransitGatewayMulticastGroupsPaginator SearchTransitGatewayMulticastGroups(SearchTransitGatewayMulticastGroupsRequest request);
}
public class Amazon.EC2.Model.EfaInfo : object {
    private Nullable`1<int> _maximumEfaInterfaces;
    public Nullable`1<int> MaximumEfaInterfaces { get; public set; }
    public Nullable`1<int> get_MaximumEfaInterfaces();
    public void set_MaximumEfaInterfaces(Nullable`1<int> value);
    internal bool IsSetMaximumEfaInterfaces();
}
public class Amazon.EC2.Model.EgressOnlyInternetGateway : object {
    private List`1<InternetGatewayAttachment> _attachments;
    private string _egressOnlyInternetGatewayId;
    private List`1<Tag> _tags;
    public List`1<InternetGatewayAttachment> Attachments { get; public set; }
    public string EgressOnlyInternetGatewayId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<InternetGatewayAttachment> get_Attachments();
    public void set_Attachments(List`1<InternetGatewayAttachment> value);
    internal bool IsSetAttachments();
    public string get_EgressOnlyInternetGatewayId();
    public void set_EgressOnlyInternetGatewayId(string value);
    internal bool IsSetEgressOnlyInternetGatewayId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ElasticGpuAssociation : object {
    private string _elasticGpuAssociationId;
    private string _elasticGpuAssociationState;
    private string _elasticGpuAssociationTime;
    private string _elasticGpuId;
    public string ElasticGpuAssociationId { get; public set; }
    public string ElasticGpuAssociationState { get; public set; }
    public string ElasticGpuAssociationTime { get; public set; }
    public string ElasticGpuId { get; public set; }
    public string get_ElasticGpuAssociationId();
    public void set_ElasticGpuAssociationId(string value);
    internal bool IsSetElasticGpuAssociationId();
    public string get_ElasticGpuAssociationState();
    public void set_ElasticGpuAssociationState(string value);
    internal bool IsSetElasticGpuAssociationState();
    public string get_ElasticGpuAssociationTime();
    public void set_ElasticGpuAssociationTime(string value);
    internal bool IsSetElasticGpuAssociationTime();
    public string get_ElasticGpuId();
    public void set_ElasticGpuId(string value);
    internal bool IsSetElasticGpuId();
}
public class Amazon.EC2.Model.ElasticGpuHealth : object {
    private ElasticGpuStatus _status;
    public ElasticGpuStatus Status { get; public set; }
    public ElasticGpuStatus get_Status();
    public void set_Status(ElasticGpuStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.ElasticGpus : object {
    private string _availabilityZone;
    private ElasticGpuHealth _elasticGpuHealth;
    private string _elasticGpuId;
    private ElasticGpuState _elasticGpuState;
    private string _elasticGpuType;
    private string _instanceId;
    private List`1<Tag> _tags;
    public string AvailabilityZone { get; public set; }
    public ElasticGpuHealth ElasticGpuHealth { get; public set; }
    public string ElasticGpuId { get; public set; }
    public ElasticGpuState ElasticGpuState { get; public set; }
    public string ElasticGpuType { get; public set; }
    public string InstanceId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public ElasticGpuHealth get_ElasticGpuHealth();
    public void set_ElasticGpuHealth(ElasticGpuHealth value);
    internal bool IsSetElasticGpuHealth();
    public string get_ElasticGpuId();
    public void set_ElasticGpuId(string value);
    internal bool IsSetElasticGpuId();
    public ElasticGpuState get_ElasticGpuState();
    public void set_ElasticGpuState(ElasticGpuState value);
    internal bool IsSetElasticGpuState();
    public string get_ElasticGpuType();
    public void set_ElasticGpuType(string value);
    internal bool IsSetElasticGpuType();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ElasticGpuSpecification : object {
    private string _type;
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.ElasticGpuSpecificationResponse : object {
    private string _type;
    public string Type { get; public set; }
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.ElasticInferenceAccelerator : object {
    private Nullable`1<int> _count;
    private string _type;
    [AWSPropertyAttribute]
public Nullable`1<int> Count { get; public set; }
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.ElasticInferenceAcceleratorAssociation : object {
    private string _elasticInferenceAcceleratorArn;
    private string _elasticInferenceAcceleratorAssociationId;
    private string _elasticInferenceAcceleratorAssociationState;
    private Nullable`1<DateTime> _elasticInferenceAcceleratorAssociationTime;
    public string ElasticInferenceAcceleratorArn { get; public set; }
    public string ElasticInferenceAcceleratorAssociationId { get; public set; }
    public string ElasticInferenceAcceleratorAssociationState { get; public set; }
    public Nullable`1<DateTime> ElasticInferenceAcceleratorAssociationTime { get; public set; }
    public string get_ElasticInferenceAcceleratorArn();
    public void set_ElasticInferenceAcceleratorArn(string value);
    internal bool IsSetElasticInferenceAcceleratorArn();
    public string get_ElasticInferenceAcceleratorAssociationId();
    public void set_ElasticInferenceAcceleratorAssociationId(string value);
    internal bool IsSetElasticInferenceAcceleratorAssociationId();
    public string get_ElasticInferenceAcceleratorAssociationState();
    public void set_ElasticInferenceAcceleratorAssociationState(string value);
    internal bool IsSetElasticInferenceAcceleratorAssociationState();
    public Nullable`1<DateTime> get_ElasticInferenceAcceleratorAssociationTime();
    public void set_ElasticInferenceAcceleratorAssociationTime(Nullable`1<DateTime> value);
    internal bool IsSetElasticInferenceAcceleratorAssociationTime();
}
public class Amazon.EC2.Model.EnableAddressTransferRequest : AmazonEC2Request {
    private string _allocationId;
    private string _transferAccountId;
    [AWSPropertyAttribute]
public string AllocationId { get; public set; }
    [AWSPropertyAttribute]
public string TransferAccountId { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_TransferAccountId();
    public void set_TransferAccountId(string value);
    internal bool IsSetTransferAccountId();
}
public class Amazon.EC2.Model.EnableAddressTransferResponse : AmazonWebServiceResponse {
    private AddressTransfer _addressTransfer;
    public AddressTransfer AddressTransfer { get; public set; }
    public AddressTransfer get_AddressTransfer();
    public void set_AddressTransfer(AddressTransfer value);
    internal bool IsSetAddressTransfer();
}
public class Amazon.EC2.Model.EnableAwsNetworkPerformanceMetricSubscriptionRequest : AmazonEC2Request {
    private string _destination;
    private MetricType _metric;
    private string _source;
    private StatisticType _statistic;
    public string Destination { get; public set; }
    public MetricType Metric { get; public set; }
    public string Source { get; public set; }
    public StatisticType Statistic { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public MetricType get_Metric();
    public void set_Metric(MetricType value);
    internal bool IsSetMetric();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public StatisticType get_Statistic();
    public void set_Statistic(StatisticType value);
    internal bool IsSetStatistic();
}
public class Amazon.EC2.Model.EnableAwsNetworkPerformanceMetricSubscriptionResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _output;
    public Nullable`1<bool> Output { get; public set; }
    public Nullable`1<bool> get_Output();
    public void set_Output(Nullable`1<bool> value);
    internal bool IsSetOutput();
}
public class Amazon.EC2.Model.EnableEbsEncryptionByDefaultRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.EnableEbsEncryptionByDefaultResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _ebsEncryptionByDefault;
    public Nullable`1<bool> EbsEncryptionByDefault { get; public set; }
    public Nullable`1<bool> get_EbsEncryptionByDefault();
    public void set_EbsEncryptionByDefault(Nullable`1<bool> value);
    internal bool IsSetEbsEncryptionByDefault();
}
public class Amazon.EC2.Model.EnableFastLaunchRequest : AmazonEC2Request {
    private string _imageId;
    private FastLaunchLaunchTemplateSpecificationRequest _launchTemplate;
    private Nullable`1<int> _maxParallelLaunches;
    private string _resourceType;
    private FastLaunchSnapshotConfigurationRequest _snapshotConfiguration;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public FastLaunchLaunchTemplateSpecificationRequest LaunchTemplate { get; public set; }
    public Nullable`1<int> MaxParallelLaunches { get; public set; }
    public string ResourceType { get; public set; }
    public FastLaunchSnapshotConfigurationRequest SnapshotConfiguration { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public FastLaunchLaunchTemplateSpecificationRequest get_LaunchTemplate();
    public void set_LaunchTemplate(FastLaunchLaunchTemplateSpecificationRequest value);
    internal bool IsSetLaunchTemplate();
    public Nullable`1<int> get_MaxParallelLaunches();
    public void set_MaxParallelLaunches(Nullable`1<int> value);
    internal bool IsSetMaxParallelLaunches();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public FastLaunchSnapshotConfigurationRequest get_SnapshotConfiguration();
    public void set_SnapshotConfiguration(FastLaunchSnapshotConfigurationRequest value);
    internal bool IsSetSnapshotConfiguration();
}
public class Amazon.EC2.Model.EnableFastLaunchResponse : AmazonWebServiceResponse {
    private string _imageId;
    private FastLaunchLaunchTemplateSpecificationResponse _launchTemplate;
    private Nullable`1<int> _maxParallelLaunches;
    private string _ownerId;
    private FastLaunchResourceType _resourceType;
    private FastLaunchSnapshotConfigurationResponse _snapshotConfiguration;
    private FastLaunchStateCode _state;
    private string _stateTransitionReason;
    private Nullable`1<DateTime> _stateTransitionTime;
    public string ImageId { get; public set; }
    public FastLaunchLaunchTemplateSpecificationResponse LaunchTemplate { get; public set; }
    public Nullable`1<int> MaxParallelLaunches { get; public set; }
    public string OwnerId { get; public set; }
    public FastLaunchResourceType ResourceType { get; public set; }
    public FastLaunchSnapshotConfigurationResponse SnapshotConfiguration { get; public set; }
    public FastLaunchStateCode State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public Nullable`1<DateTime> StateTransitionTime { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public FastLaunchLaunchTemplateSpecificationResponse get_LaunchTemplate();
    public void set_LaunchTemplate(FastLaunchLaunchTemplateSpecificationResponse value);
    internal bool IsSetLaunchTemplate();
    public Nullable`1<int> get_MaxParallelLaunches();
    public void set_MaxParallelLaunches(Nullable`1<int> value);
    internal bool IsSetMaxParallelLaunches();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public FastLaunchResourceType get_ResourceType();
    public void set_ResourceType(FastLaunchResourceType value);
    internal bool IsSetResourceType();
    public FastLaunchSnapshotConfigurationResponse get_SnapshotConfiguration();
    public void set_SnapshotConfiguration(FastLaunchSnapshotConfigurationResponse value);
    internal bool IsSetSnapshotConfiguration();
    public FastLaunchStateCode get_State();
    public void set_State(FastLaunchStateCode value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public Nullable`1<DateTime> get_StateTransitionTime();
    public void set_StateTransitionTime(Nullable`1<DateTime> value);
    internal bool IsSetStateTransitionTime();
}
public class Amazon.EC2.Model.EnableFastSnapshotRestoreErrorItem : object {
    private List`1<EnableFastSnapshotRestoreStateErrorItem> _fastSnapshotRestoreStateErrors;
    private string _snapshotId;
    public List`1<EnableFastSnapshotRestoreStateErrorItem> FastSnapshotRestoreStateErrors { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<EnableFastSnapshotRestoreStateErrorItem> get_FastSnapshotRestoreStateErrors();
    public void set_FastSnapshotRestoreStateErrors(List`1<EnableFastSnapshotRestoreStateErrorItem> value);
    internal bool IsSetFastSnapshotRestoreStateErrors();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.EnableFastSnapshotRestoresRequest : AmazonEC2Request {
    private List`1<string> _availabilityZones;
    private List`1<string> _sourceSnapshotIds;
    [AWSPropertyAttribute]
public List`1<string> AvailabilityZones { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SourceSnapshotIds { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public List`1<string> get_SourceSnapshotIds();
    public void set_SourceSnapshotIds(List`1<string> value);
    internal bool IsSetSourceSnapshotIds();
}
public class Amazon.EC2.Model.EnableFastSnapshotRestoresResponse : AmazonWebServiceResponse {
    private List`1<EnableFastSnapshotRestoreSuccessItem> _successful;
    private List`1<EnableFastSnapshotRestoreErrorItem> _unsuccessful;
    public List`1<EnableFastSnapshotRestoreSuccessItem> Successful { get; public set; }
    public List`1<EnableFastSnapshotRestoreErrorItem> Unsuccessful { get; public set; }
    public List`1<EnableFastSnapshotRestoreSuccessItem> get_Successful();
    public void set_Successful(List`1<EnableFastSnapshotRestoreSuccessItem> value);
    internal bool IsSetSuccessful();
    public List`1<EnableFastSnapshotRestoreErrorItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<EnableFastSnapshotRestoreErrorItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.EnableFastSnapshotRestoreStateError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.EnableFastSnapshotRestoreStateErrorItem : object {
    private string _availabilityZone;
    private EnableFastSnapshotRestoreStateError _error;
    public string AvailabilityZone { get; public set; }
    public EnableFastSnapshotRestoreStateError Error { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public EnableFastSnapshotRestoreStateError get_Error();
    public void set_Error(EnableFastSnapshotRestoreStateError value);
    internal bool IsSetError();
}
public class Amazon.EC2.Model.EnableFastSnapshotRestoreSuccessItem : object {
    private string _availabilityZone;
    private Nullable`1<DateTime> _disabledTime;
    private Nullable`1<DateTime> _disablingTime;
    private Nullable`1<DateTime> _enabledTime;
    private Nullable`1<DateTime> _enablingTime;
    private Nullable`1<DateTime> _optimizingTime;
    private string _ownerAlias;
    private string _ownerId;
    private string _snapshotId;
    private FastSnapshotRestoreStateCode _state;
    private string _stateTransitionReason;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> DisabledTime { get; public set; }
    public Nullable`1<DateTime> DisablingTime { get; public set; }
    public Nullable`1<DateTime> EnabledTime { get; public set; }
    public Nullable`1<DateTime> EnablingTime { get; public set; }
    public Nullable`1<DateTime> OptimizingTime { get; public set; }
    public string OwnerAlias { get; public set; }
    public string OwnerId { get; public set; }
    public string SnapshotId { get; public set; }
    public FastSnapshotRestoreStateCode State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_DisabledTime();
    public void set_DisabledTime(Nullable`1<DateTime> value);
    internal bool IsSetDisabledTime();
    public Nullable`1<DateTime> get_DisablingTime();
    public void set_DisablingTime(Nullable`1<DateTime> value);
    internal bool IsSetDisablingTime();
    public Nullable`1<DateTime> get_EnabledTime();
    public void set_EnabledTime(Nullable`1<DateTime> value);
    internal bool IsSetEnabledTime();
    public Nullable`1<DateTime> get_EnablingTime();
    public void set_EnablingTime(Nullable`1<DateTime> value);
    internal bool IsSetEnablingTime();
    public Nullable`1<DateTime> get_OptimizingTime();
    public void set_OptimizingTime(Nullable`1<DateTime> value);
    internal bool IsSetOptimizingTime();
    public string get_OwnerAlias();
    public void set_OwnerAlias(string value);
    internal bool IsSetOwnerAlias();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public FastSnapshotRestoreStateCode get_State();
    public void set_State(FastSnapshotRestoreStateCode value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
}
public class Amazon.EC2.Model.EnableImageBlockPublicAccessRequest : AmazonEC2Request {
    private ImageBlockPublicAccessEnabledState _imageBlockPublicAccessState;
    [AWSPropertyAttribute]
public ImageBlockPublicAccessEnabledState ImageBlockPublicAccessState { get; public set; }
    public ImageBlockPublicAccessEnabledState get_ImageBlockPublicAccessState();
    public void set_ImageBlockPublicAccessState(ImageBlockPublicAccessEnabledState value);
    internal bool IsSetImageBlockPublicAccessState();
}
public class Amazon.EC2.Model.EnableImageBlockPublicAccessResponse : AmazonWebServiceResponse {
    private ImageBlockPublicAccessEnabledState _imageBlockPublicAccessState;
    public ImageBlockPublicAccessEnabledState ImageBlockPublicAccessState { get; public set; }
    public ImageBlockPublicAccessEnabledState get_ImageBlockPublicAccessState();
    public void set_ImageBlockPublicAccessState(ImageBlockPublicAccessEnabledState value);
    internal bool IsSetImageBlockPublicAccessState();
}
public class Amazon.EC2.Model.EnableImageDeprecationRequest : AmazonEC2Request {
    private Nullable`1<DateTime> _deprecateAt;
    private string _imageId;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> DeprecateAt { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public Nullable`1<DateTime> get_DeprecateAt();
    public void set_DeprecateAt(Nullable`1<DateTime> value);
    internal bool IsSetDeprecateAt();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.EnableImageDeprecationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.EnableImageDeregistrationProtectionRequest : AmazonEC2Request {
    private string _imageId;
    private Nullable`1<bool> _withCooldown;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public Nullable`1<bool> WithCooldown { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public Nullable`1<bool> get_WithCooldown();
    public void set_WithCooldown(Nullable`1<bool> value);
    internal bool IsSetWithCooldown();
}
public class Amazon.EC2.Model.EnableImageDeregistrationProtectionResponse : AmazonWebServiceResponse {
    private string _return;
    public string Return { get; public set; }
    public string get_Return();
    public void set_Return(string value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.EnableImageRequest : AmazonEC2Request {
    private string _imageId;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.EnableImageResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.EnableIpamOrganizationAdminAccountRequest : AmazonEC2Request {
    private string _delegatedAdminAccountId;
    [AWSPropertyAttribute]
public string DelegatedAdminAccountId { get; public set; }
    public string get_DelegatedAdminAccountId();
    public void set_DelegatedAdminAccountId(string value);
    internal bool IsSetDelegatedAdminAccountId();
}
public class Amazon.EC2.Model.EnableIpamOrganizationAdminAccountResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _success;
    public Nullable`1<bool> Success { get; public set; }
    public Nullable`1<bool> get_Success();
    public void set_Success(Nullable`1<bool> value);
    internal bool IsSetSuccess();
}
public class Amazon.EC2.Model.EnableReachabilityAnalyzerOrganizationSharingRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.EnableReachabilityAnalyzerOrganizationSharingResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _returnValue;
    public Nullable`1<bool> ReturnValue { get; public set; }
    public Nullable`1<bool> get_ReturnValue();
    public void set_ReturnValue(Nullable`1<bool> value);
    internal bool IsSetReturnValue();
}
public class Amazon.EC2.Model.EnableSerialConsoleAccessRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.EnableSerialConsoleAccessResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _serialConsoleAccessEnabled;
    public Nullable`1<bool> SerialConsoleAccessEnabled { get; public set; }
    public Nullable`1<bool> get_SerialConsoleAccessEnabled();
    public void set_SerialConsoleAccessEnabled(Nullable`1<bool> value);
    internal bool IsSetSerialConsoleAccessEnabled();
}
public class Amazon.EC2.Model.EnableSnapshotBlockPublicAccessRequest : AmazonEC2Request {
    private SnapshotBlockPublicAccessState _state;
    [AWSPropertyAttribute]
public SnapshotBlockPublicAccessState State { get; public set; }
    public SnapshotBlockPublicAccessState get_State();
    public void set_State(SnapshotBlockPublicAccessState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.EnableSnapshotBlockPublicAccessResponse : AmazonWebServiceResponse {
    private SnapshotBlockPublicAccessState _state;
    public SnapshotBlockPublicAccessState State { get; public set; }
    public SnapshotBlockPublicAccessState get_State();
    public void set_State(SnapshotBlockPublicAccessState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.EnableTransitGatewayRouteTablePropagationRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableAnnouncementId;
    private string _transitGatewayRouteTableId;
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayRouteTableAnnouncementId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableAnnouncementId();
    public void set_TransitGatewayRouteTableAnnouncementId(string value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.EnableTransitGatewayRouteTablePropagationResponse : AmazonWebServiceResponse {
    private TransitGatewayPropagation _propagation;
    public TransitGatewayPropagation Propagation { get; public set; }
    public TransitGatewayPropagation get_Propagation();
    public void set_Propagation(TransitGatewayPropagation value);
    internal bool IsSetPropagation();
}
public class Amazon.EC2.Model.EnableVgwRoutePropagationRequest : AmazonEC2Request {
    private string _gatewayId;
    private string _routeTableId;
    [AWSPropertyAttribute]
public string GatewayId { get; public set; }
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.EnableVgwRoutePropagationResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.EnableVolumeIORequest : AmazonEC2Request {
    private string _volumeId;
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.EnableVolumeIOResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest : AmazonEC2Request {
    private string _vpcId;
    public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.EnableVpcClassicLinkRequest : AmazonEC2Request {
    private string _vpcId;
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.EnableVpcClassicLinkResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.EnaSrdSpecification : object {
    private Nullable`1<bool> _enaSrdEnabled;
    private EnaSrdUdpSpecification _enaSrdUdpSpecification;
    public Nullable`1<bool> EnaSrdEnabled { get; public set; }
    public EnaSrdUdpSpecification EnaSrdUdpSpecification { get; public set; }
    public Nullable`1<bool> get_EnaSrdEnabled();
    public void set_EnaSrdEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdEnabled();
    public EnaSrdUdpSpecification get_EnaSrdUdpSpecification();
    public void set_EnaSrdUdpSpecification(EnaSrdUdpSpecification value);
    internal bool IsSetEnaSrdUdpSpecification();
}
public class Amazon.EC2.Model.EnaSrdSpecificationRequest : object {
    private Nullable`1<bool> _enaSrdEnabled;
    private EnaSrdUdpSpecificationRequest _enaSrdUdpSpecification;
    public Nullable`1<bool> EnaSrdEnabled { get; public set; }
    public EnaSrdUdpSpecificationRequest EnaSrdUdpSpecification { get; public set; }
    public Nullable`1<bool> get_EnaSrdEnabled();
    public void set_EnaSrdEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdEnabled();
    public EnaSrdUdpSpecificationRequest get_EnaSrdUdpSpecification();
    public void set_EnaSrdUdpSpecification(EnaSrdUdpSpecificationRequest value);
    internal bool IsSetEnaSrdUdpSpecification();
}
public class Amazon.EC2.Model.EnaSrdUdpSpecification : object {
    private Nullable`1<bool> _enaSrdUdpEnabled;
    public Nullable`1<bool> EnaSrdUdpEnabled { get; public set; }
    public Nullable`1<bool> get_EnaSrdUdpEnabled();
    public void set_EnaSrdUdpEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdUdpEnabled();
}
public class Amazon.EC2.Model.EnaSrdUdpSpecificationRequest : object {
    private Nullable`1<bool> _enaSrdUdpEnabled;
    public Nullable`1<bool> EnaSrdUdpEnabled { get; public set; }
    public Nullable`1<bool> get_EnaSrdUdpEnabled();
    public void set_EnaSrdUdpEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdUdpEnabled();
}
public class Amazon.EC2.Model.EnclaveOptions : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.EnclaveOptionsRequest : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.EventInformation : object {
    private string _eventDescription;
    private string _eventSubType;
    private string _instanceId;
    public string EventDescription { get; public set; }
    public string EventSubType { get; public set; }
    public string InstanceId { get; public set; }
    public string get_EventDescription();
    public void set_EventDescription(string value);
    internal bool IsSetEventDescription();
    public string get_EventSubType();
    public void set_EventSubType(string value);
    internal bool IsSetEventSubType();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.Explanation : object {
    private AnalysisComponent _acl;
    private AnalysisAclRule _aclRule;
    private string _address;
    private List`1<string> _addresses;
    private AnalysisComponent _attachedTo;
    private List`1<string> _availabilityZones;
    private List`1<string> _cidrs;
    private AnalysisLoadBalancerListener _classicLoadBalancerListener;
    private AnalysisComponent _component;
    private string _componentAccount;
    private string _componentRegion;
    private AnalysisComponent _customerGateway;
    private AnalysisComponent _destination;
    private AnalysisComponent _destinationVpc;
    private string _direction;
    private AnalysisComponent _elasticLoadBalancerListener;
    private string _explanationCode;
    private FirewallStatefulRule _firewallStatefulRule;
    private FirewallStatelessRule _firewallStatelessRule;
    private AnalysisComponent _ingressRouteTable;
    private AnalysisComponent _internetGateway;
    private string _loadBalancerArn;
    private Nullable`1<int> _loadBalancerListenerPort;
    private AnalysisLoadBalancerTarget _loadBalancerTarget;
    private AnalysisComponent _loadBalancerTargetGroup;
    private List`1<AnalysisComponent> _loadBalancerTargetGroups;
    private Nullable`1<int> _loadBalancerTargetPort;
    private string _missingComponent;
    private AnalysisComponent _natGateway;
    private AnalysisComponent _networkInterface;
    private string _packetField;
    private Nullable`1<int> _port;
    private List`1<PortRange> _portRanges;
    private AnalysisComponent _prefixList;
    private List`1<string> _protocols;
    private AnalysisComponent _routeTable;
    private AnalysisRouteTableRoute _routeTableRoute;
    private AnalysisComponent _securityGroup;
    private AnalysisSecurityGroupRule _securityGroupRule;
    private List`1<AnalysisComponent> _securityGroups;
    private AnalysisComponent _sourceVpc;
    private string _state;
    private AnalysisComponent _subnet;
    private AnalysisComponent _subnetRouteTable;
    private AnalysisComponent _transitGateway;
    private AnalysisComponent _transitGatewayAttachment;
    private AnalysisComponent _transitGatewayRouteTable;
    private TransitGatewayRouteTableRoute _transitGatewayRouteTableRoute;
    private AnalysisComponent _vpc;
    private AnalysisComponent _vpcEndpoint;
    private AnalysisComponent _vpcPeeringConnection;
    private AnalysisComponent _vpnConnection;
    private AnalysisComponent _vpnGateway;
    public AnalysisComponent Acl { get; public set; }
    public AnalysisAclRule AclRule { get; public set; }
    [AWSPropertyAttribute]
public string Address { get; public set; }
    public List`1<string> Addresses { get; public set; }
    public AnalysisComponent AttachedTo { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public List`1<string> Cidrs { get; public set; }
    public AnalysisLoadBalancerListener ClassicLoadBalancerListener { get; public set; }
    public AnalysisComponent Component { get; public set; }
    public string ComponentAccount { get; public set; }
    public string ComponentRegion { get; public set; }
    public AnalysisComponent CustomerGateway { get; public set; }
    public AnalysisComponent Destination { get; public set; }
    public AnalysisComponent DestinationVpc { get; public set; }
    public string Direction { get; public set; }
    public AnalysisComponent ElasticLoadBalancerListener { get; public set; }
    public string ExplanationCode { get; public set; }
    public FirewallStatefulRule FirewallStatefulRule { get; public set; }
    public FirewallStatelessRule FirewallStatelessRule { get; public set; }
    public AnalysisComponent IngressRouteTable { get; public set; }
    public AnalysisComponent InternetGateway { get; public set; }
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> LoadBalancerListenerPort { get; public set; }
    public AnalysisLoadBalancerTarget LoadBalancerTarget { get; public set; }
    public AnalysisComponent LoadBalancerTargetGroup { get; public set; }
    public List`1<AnalysisComponent> LoadBalancerTargetGroups { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> LoadBalancerTargetPort { get; public set; }
    public string MissingComponent { get; public set; }
    public AnalysisComponent NatGateway { get; public set; }
    public AnalysisComponent NetworkInterface { get; public set; }
    public string PacketField { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public List`1<PortRange> PortRanges { get; public set; }
    public AnalysisComponent PrefixList { get; public set; }
    public List`1<string> Protocols { get; public set; }
    public AnalysisComponent RouteTable { get; public set; }
    public AnalysisRouteTableRoute RouteTableRoute { get; public set; }
    public AnalysisComponent SecurityGroup { get; public set; }
    public AnalysisSecurityGroupRule SecurityGroupRule { get; public set; }
    public List`1<AnalysisComponent> SecurityGroups { get; public set; }
    public AnalysisComponent SourceVpc { get; public set; }
    public string State { get; public set; }
    public AnalysisComponent Subnet { get; public set; }
    public AnalysisComponent SubnetRouteTable { get; public set; }
    public AnalysisComponent TransitGateway { get; public set; }
    public AnalysisComponent TransitGatewayAttachment { get; public set; }
    public AnalysisComponent TransitGatewayRouteTable { get; public set; }
    public TransitGatewayRouteTableRoute TransitGatewayRouteTableRoute { get; public set; }
    public AnalysisComponent Vpc { get; public set; }
    public AnalysisComponent VpcEndpoint { get; public set; }
    public AnalysisComponent VpcPeeringConnection { get; public set; }
    public AnalysisComponent VpnConnection { get; public set; }
    public AnalysisComponent VpnGateway { get; public set; }
    public AnalysisComponent get_Acl();
    public void set_Acl(AnalysisComponent value);
    internal bool IsSetAcl();
    public AnalysisAclRule get_AclRule();
    public void set_AclRule(AnalysisAclRule value);
    internal bool IsSetAclRule();
    public string get_Address();
    public void set_Address(string value);
    internal bool IsSetAddress();
    public List`1<string> get_Addresses();
    public void set_Addresses(List`1<string> value);
    internal bool IsSetAddresses();
    public AnalysisComponent get_AttachedTo();
    public void set_AttachedTo(AnalysisComponent value);
    internal bool IsSetAttachedTo();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public List`1<string> get_Cidrs();
    public void set_Cidrs(List`1<string> value);
    internal bool IsSetCidrs();
    public AnalysisLoadBalancerListener get_ClassicLoadBalancerListener();
    public void set_ClassicLoadBalancerListener(AnalysisLoadBalancerListener value);
    internal bool IsSetClassicLoadBalancerListener();
    public AnalysisComponent get_Component();
    public void set_Component(AnalysisComponent value);
    internal bool IsSetComponent();
    public string get_ComponentAccount();
    public void set_ComponentAccount(string value);
    internal bool IsSetComponentAccount();
    public string get_ComponentRegion();
    public void set_ComponentRegion(string value);
    internal bool IsSetComponentRegion();
    public AnalysisComponent get_CustomerGateway();
    public void set_CustomerGateway(AnalysisComponent value);
    internal bool IsSetCustomerGateway();
    public AnalysisComponent get_Destination();
    public void set_Destination(AnalysisComponent value);
    internal bool IsSetDestination();
    public AnalysisComponent get_DestinationVpc();
    public void set_DestinationVpc(AnalysisComponent value);
    internal bool IsSetDestinationVpc();
    public string get_Direction();
    public void set_Direction(string value);
    internal bool IsSetDirection();
    public AnalysisComponent get_ElasticLoadBalancerListener();
    public void set_ElasticLoadBalancerListener(AnalysisComponent value);
    internal bool IsSetElasticLoadBalancerListener();
    public string get_ExplanationCode();
    public void set_ExplanationCode(string value);
    internal bool IsSetExplanationCode();
    public FirewallStatefulRule get_FirewallStatefulRule();
    public void set_FirewallStatefulRule(FirewallStatefulRule value);
    internal bool IsSetFirewallStatefulRule();
    public FirewallStatelessRule get_FirewallStatelessRule();
    public void set_FirewallStatelessRule(FirewallStatelessRule value);
    internal bool IsSetFirewallStatelessRule();
    public AnalysisComponent get_IngressRouteTable();
    public void set_IngressRouteTable(AnalysisComponent value);
    internal bool IsSetIngressRouteTable();
    public AnalysisComponent get_InternetGateway();
    public void set_InternetGateway(AnalysisComponent value);
    internal bool IsSetInternetGateway();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public Nullable`1<int> get_LoadBalancerListenerPort();
    public void set_LoadBalancerListenerPort(Nullable`1<int> value);
    internal bool IsSetLoadBalancerListenerPort();
    public AnalysisLoadBalancerTarget get_LoadBalancerTarget();
    public void set_LoadBalancerTarget(AnalysisLoadBalancerTarget value);
    internal bool IsSetLoadBalancerTarget();
    public AnalysisComponent get_LoadBalancerTargetGroup();
    public void set_LoadBalancerTargetGroup(AnalysisComponent value);
    internal bool IsSetLoadBalancerTargetGroup();
    public List`1<AnalysisComponent> get_LoadBalancerTargetGroups();
    public void set_LoadBalancerTargetGroups(List`1<AnalysisComponent> value);
    internal bool IsSetLoadBalancerTargetGroups();
    public Nullable`1<int> get_LoadBalancerTargetPort();
    public void set_LoadBalancerTargetPort(Nullable`1<int> value);
    internal bool IsSetLoadBalancerTargetPort();
    public string get_MissingComponent();
    public void set_MissingComponent(string value);
    internal bool IsSetMissingComponent();
    public AnalysisComponent get_NatGateway();
    public void set_NatGateway(AnalysisComponent value);
    internal bool IsSetNatGateway();
    public AnalysisComponent get_NetworkInterface();
    public void set_NetworkInterface(AnalysisComponent value);
    internal bool IsSetNetworkInterface();
    public string get_PacketField();
    public void set_PacketField(string value);
    internal bool IsSetPacketField();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public List`1<PortRange> get_PortRanges();
    public void set_PortRanges(List`1<PortRange> value);
    internal bool IsSetPortRanges();
    public AnalysisComponent get_PrefixList();
    public void set_PrefixList(AnalysisComponent value);
    internal bool IsSetPrefixList();
    public List`1<string> get_Protocols();
    public void set_Protocols(List`1<string> value);
    internal bool IsSetProtocols();
    public AnalysisComponent get_RouteTable();
    public void set_RouteTable(AnalysisComponent value);
    internal bool IsSetRouteTable();
    public AnalysisRouteTableRoute get_RouteTableRoute();
    public void set_RouteTableRoute(AnalysisRouteTableRoute value);
    internal bool IsSetRouteTableRoute();
    public AnalysisComponent get_SecurityGroup();
    public void set_SecurityGroup(AnalysisComponent value);
    internal bool IsSetSecurityGroup();
    public AnalysisSecurityGroupRule get_SecurityGroupRule();
    public void set_SecurityGroupRule(AnalysisSecurityGroupRule value);
    internal bool IsSetSecurityGroupRule();
    public List`1<AnalysisComponent> get_SecurityGroups();
    public void set_SecurityGroups(List`1<AnalysisComponent> value);
    internal bool IsSetSecurityGroups();
    public AnalysisComponent get_SourceVpc();
    public void set_SourceVpc(AnalysisComponent value);
    internal bool IsSetSourceVpc();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public AnalysisComponent get_Subnet();
    public void set_Subnet(AnalysisComponent value);
    internal bool IsSetSubnet();
    public AnalysisComponent get_SubnetRouteTable();
    public void set_SubnetRouteTable(AnalysisComponent value);
    internal bool IsSetSubnetRouteTable();
    public AnalysisComponent get_TransitGateway();
    public void set_TransitGateway(AnalysisComponent value);
    internal bool IsSetTransitGateway();
    public AnalysisComponent get_TransitGatewayAttachment();
    public void set_TransitGatewayAttachment(AnalysisComponent value);
    internal bool IsSetTransitGatewayAttachment();
    public AnalysisComponent get_TransitGatewayRouteTable();
    public void set_TransitGatewayRouteTable(AnalysisComponent value);
    internal bool IsSetTransitGatewayRouteTable();
    public TransitGatewayRouteTableRoute get_TransitGatewayRouteTableRoute();
    public void set_TransitGatewayRouteTableRoute(TransitGatewayRouteTableRoute value);
    internal bool IsSetTransitGatewayRouteTableRoute();
    public AnalysisComponent get_Vpc();
    public void set_Vpc(AnalysisComponent value);
    internal bool IsSetVpc();
    public AnalysisComponent get_VpcEndpoint();
    public void set_VpcEndpoint(AnalysisComponent value);
    internal bool IsSetVpcEndpoint();
    public AnalysisComponent get_VpcPeeringConnection();
    public void set_VpcPeeringConnection(AnalysisComponent value);
    internal bool IsSetVpcPeeringConnection();
    public AnalysisComponent get_VpnConnection();
    public void set_VpnConnection(AnalysisComponent value);
    internal bool IsSetVpnConnection();
    public AnalysisComponent get_VpnGateway();
    public void set_VpnGateway(AnalysisComponent value);
    internal bool IsSetVpnGateway();
}
public class Amazon.EC2.Model.ExportClientVpnClientCertificateRevocationListRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
}
public class Amazon.EC2.Model.ExportClientVpnClientCertificateRevocationListResponse : AmazonWebServiceResponse {
    private string _certificateRevocationList;
    private ClientCertificateRevocationListStatus _status;
    public string CertificateRevocationList { get; public set; }
    public ClientCertificateRevocationListStatus Status { get; public set; }
    public string get_CertificateRevocationList();
    public void set_CertificateRevocationList(string value);
    internal bool IsSetCertificateRevocationList();
    public ClientCertificateRevocationListStatus get_Status();
    public void set_Status(ClientCertificateRevocationListStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.ExportClientVpnClientConfigurationRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
}
public class Amazon.EC2.Model.ExportClientVpnClientConfigurationResponse : AmazonWebServiceResponse {
    private string _clientConfiguration;
    public string ClientConfiguration { get; public set; }
    public string get_ClientConfiguration();
    public void set_ClientConfiguration(string value);
    internal bool IsSetClientConfiguration();
}
public class Amazon.EC2.Model.ExportImageRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private DiskImageFormat _diskImageFormat;
    private string _imageId;
    private string _roleName;
    private ExportTaskS3LocationRequest _s3ExportLocation;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public DiskImageFormat DiskImageFormat { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string RoleName { get; public set; }
    [AWSPropertyAttribute]
public ExportTaskS3LocationRequest S3ExportLocation { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageFormat get_DiskImageFormat();
    public void set_DiskImageFormat(DiskImageFormat value);
    internal bool IsSetDiskImageFormat();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public ExportTaskS3LocationRequest get_S3ExportLocation();
    public void set_S3ExportLocation(ExportTaskS3LocationRequest value);
    internal bool IsSetS3ExportLocation();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.ExportImageResponse : AmazonWebServiceResponse {
    private string _description;
    private DiskImageFormat _diskImageFormat;
    private string _exportImageTaskId;
    private string _imageId;
    private string _progress;
    private string _roleName;
    private ExportTaskS3Location _s3ExportLocation;
    private string _status;
    private string _statusMessage;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public DiskImageFormat DiskImageFormat { get; public set; }
    public string ExportImageTaskId { get; public set; }
    public string ImageId { get; public set; }
    public string Progress { get; public set; }
    public string RoleName { get; public set; }
    public ExportTaskS3Location S3ExportLocation { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageFormat get_DiskImageFormat();
    public void set_DiskImageFormat(DiskImageFormat value);
    internal bool IsSetDiskImageFormat();
    public string get_ExportImageTaskId();
    public void set_ExportImageTaskId(string value);
    internal bool IsSetExportImageTaskId();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public ExportTaskS3Location get_S3ExportLocation();
    public void set_S3ExportLocation(ExportTaskS3Location value);
    internal bool IsSetS3ExportLocation();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ExportImageTask : object {
    private string _description;
    private string _exportImageTaskId;
    private string _imageId;
    private string _progress;
    private ExportTaskS3Location _s3ExportLocation;
    private string _status;
    private string _statusMessage;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public string ExportImageTaskId { get; public set; }
    public string ImageId { get; public set; }
    public string Progress { get; public set; }
    public ExportTaskS3Location S3ExportLocation { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ExportImageTaskId();
    public void set_ExportImageTaskId(string value);
    internal bool IsSetExportImageTaskId();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public ExportTaskS3Location get_S3ExportLocation();
    public void set_S3ExportLocation(ExportTaskS3Location value);
    internal bool IsSetS3ExportLocation();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ExportTask : object {
    private string _description;
    private string _exportTaskId;
    private ExportToS3Task _exportToS3Task;
    private InstanceExportDetails _instanceExportDetails;
    private ExportTaskState _state;
    private string _statusMessage;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public string ExportTaskId { get; public set; }
    public ExportToS3Task ExportToS3Task { get; public set; }
    public InstanceExportDetails InstanceExportDetails { get; public set; }
    public ExportTaskState State { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ExportTaskId();
    public void set_ExportTaskId(string value);
    internal bool IsSetExportTaskId();
    public ExportToS3Task get_ExportToS3Task();
    public void set_ExportToS3Task(ExportToS3Task value);
    internal bool IsSetExportToS3Task();
    public InstanceExportDetails get_InstanceExportDetails();
    public void set_InstanceExportDetails(InstanceExportDetails value);
    internal bool IsSetInstanceExportDetails();
    public ExportTaskState get_State();
    public void set_State(ExportTaskState value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ExportTaskS3Location : object {
    private string _s3Bucket;
    private string _s3Prefix;
    public string S3Bucket { get; public set; }
    public string S3Prefix { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
}
public class Amazon.EC2.Model.ExportTaskS3LocationRequest : object {
    private string _s3Bucket;
    private string _s3Prefix;
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    public string S3Prefix { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
}
public class Amazon.EC2.Model.ExportToS3Task : object {
    private ContainerFormat _containerFormat;
    private DiskImageFormat _diskImageFormat;
    private string _s3Bucket;
    private string _s3Key;
    public ContainerFormat ContainerFormat { get; public set; }
    public DiskImageFormat DiskImageFormat { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public ContainerFormat get_ContainerFormat();
    public void set_ContainerFormat(ContainerFormat value);
    internal bool IsSetContainerFormat();
    public DiskImageFormat get_DiskImageFormat();
    public void set_DiskImageFormat(DiskImageFormat value);
    internal bool IsSetDiskImageFormat();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
}
public class Amazon.EC2.Model.ExportToS3TaskSpecification : object {
    private ContainerFormat _containerFormat;
    private DiskImageFormat _diskImageFormat;
    private string _s3Bucket;
    private string _s3Prefix;
    public ContainerFormat ContainerFormat { get; public set; }
    public DiskImageFormat DiskImageFormat { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Prefix { get; public set; }
    public ContainerFormat get_ContainerFormat();
    public void set_ContainerFormat(ContainerFormat value);
    internal bool IsSetContainerFormat();
    public DiskImageFormat get_DiskImageFormat();
    public void set_DiskImageFormat(DiskImageFormat value);
    internal bool IsSetDiskImageFormat();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
}
public class Amazon.EC2.Model.ExportTransitGatewayRoutesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _s3Bucket;
    private string _transitGatewayRouteTableId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.ExportTransitGatewayRoutesResponse : AmazonWebServiceResponse {
    private string _s3Location;
    public string S3Location { get; public set; }
    public string get_S3Location();
    public void set_S3Location(string value);
    internal bool IsSetS3Location();
}
public class Amazon.EC2.Model.FailedCapacityReservationFleetCancellationResult : object {
    private CancelCapacityReservationFleetError _cancelCapacityReservationFleetError;
    private string _capacityReservationFleetId;
    public CancelCapacityReservationFleetError CancelCapacityReservationFleetError { get; public set; }
    public string CapacityReservationFleetId { get; public set; }
    public CancelCapacityReservationFleetError get_CancelCapacityReservationFleetError();
    public void set_CancelCapacityReservationFleetError(CancelCapacityReservationFleetError value);
    internal bool IsSetCancelCapacityReservationFleetError();
    public string get_CapacityReservationFleetId();
    public void set_CapacityReservationFleetId(string value);
    internal bool IsSetCapacityReservationFleetId();
}
public class Amazon.EC2.Model.FailedQueuedPurchaseDeletion : object {
    private DeleteQueuedReservedInstancesError _error;
    private string _reservedInstancesId;
    public DeleteQueuedReservedInstancesError Error { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public DeleteQueuedReservedInstancesError get_Error();
    public void set_Error(DeleteQueuedReservedInstancesError value);
    internal bool IsSetError();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
}
public class Amazon.EC2.Model.FastLaunchLaunchTemplateSpecificationRequest : object {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private string _version;
    public string LaunchTemplateId { get; public set; }
    public string LaunchTemplateName { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.EC2.Model.FastLaunchLaunchTemplateSpecificationResponse : object {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private string _version;
    public string LaunchTemplateId { get; public set; }
    public string LaunchTemplateName { get; public set; }
    public string Version { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.EC2.Model.FastLaunchSnapshotConfigurationRequest : object {
    private Nullable`1<int> _targetResourceCount;
    public Nullable`1<int> TargetResourceCount { get; public set; }
    public Nullable`1<int> get_TargetResourceCount();
    public void set_TargetResourceCount(Nullable`1<int> value);
    internal bool IsSetTargetResourceCount();
}
public class Amazon.EC2.Model.FastLaunchSnapshotConfigurationResponse : object {
    private Nullable`1<int> _targetResourceCount;
    public Nullable`1<int> TargetResourceCount { get; public set; }
    public Nullable`1<int> get_TargetResourceCount();
    public void set_TargetResourceCount(Nullable`1<int> value);
    internal bool IsSetTargetResourceCount();
}
public class Amazon.EC2.Model.FederatedAuthentication : object {
    private string _samlProviderArn;
    private string _selfServiceSamlProviderArn;
    public string SamlProviderArn { get; public set; }
    public string SelfServiceSamlProviderArn { get; public set; }
    public string get_SamlProviderArn();
    public void set_SamlProviderArn(string value);
    internal bool IsSetSamlProviderArn();
    public string get_SelfServiceSamlProviderArn();
    public void set_SelfServiceSamlProviderArn(string value);
    internal bool IsSetSelfServiceSamlProviderArn();
}
public class Amazon.EC2.Model.FederatedAuthenticationRequest : object {
    private string _samlProviderArn;
    private string _selfServiceSAMLProviderArn;
    public string SAMLProviderArn { get; public set; }
    public string SelfServiceSAMLProviderArn { get; public set; }
    public string get_SAMLProviderArn();
    public void set_SAMLProviderArn(string value);
    internal bool IsSetSAMLProviderArn();
    public string get_SelfServiceSAMLProviderArn();
    public void set_SelfServiceSAMLProviderArn(string value);
    internal bool IsSetSelfServiceSAMLProviderArn();
}
public class Amazon.EC2.Model.Filter : object {
    private string _name;
    private List`1<string> _values;
    public string Name { get; public set; }
    public List`1<string> Values { get; public set; }
    public Filter(string name, List`1<string> values);
    public Filter(string name);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.EC2.Model.FilterPortRange : object {
    private Nullable`1<int> _fromPort;
    private Nullable`1<int> _toPort;
    [AWSPropertyAttribute]
public Nullable`1<int> FromPort { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ToPort { get; public set; }
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
}
public class Amazon.EC2.Model.FirewallStatefulRule : object {
    private List`1<PortRange> _destinationPorts;
    private List`1<string> _destinations;
    private string _direction;
    private string _protocol;
    private string _ruleAction;
    private string _ruleGroupArn;
    private List`1<PortRange> _sourcePorts;
    private List`1<string> _sources;
    public List`1<PortRange> DestinationPorts { get; public set; }
    public List`1<string> Destinations { get; public set; }
    public string Direction { get; public set; }
    public string Protocol { get; public set; }
    public string RuleAction { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    public List`1<PortRange> SourcePorts { get; public set; }
    public List`1<string> Sources { get; public set; }
    public List`1<PortRange> get_DestinationPorts();
    public void set_DestinationPorts(List`1<PortRange> value);
    internal bool IsSetDestinationPorts();
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public string get_Direction();
    public void set_Direction(string value);
    internal bool IsSetDirection();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_RuleAction();
    public void set_RuleAction(string value);
    internal bool IsSetRuleAction();
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public List`1<PortRange> get_SourcePorts();
    public void set_SourcePorts(List`1<PortRange> value);
    internal bool IsSetSourcePorts();
    public List`1<string> get_Sources();
    public void set_Sources(List`1<string> value);
    internal bool IsSetSources();
}
public class Amazon.EC2.Model.FirewallStatelessRule : object {
    private List`1<PortRange> _destinationPorts;
    private List`1<string> _destinations;
    private Nullable`1<int> _priority;
    private List`1<int> _protocols;
    private string _ruleAction;
    private string _ruleGroupArn;
    private List`1<PortRange> _sourcePorts;
    private List`1<string> _sources;
    public List`1<PortRange> DestinationPorts { get; public set; }
    public List`1<string> Destinations { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public List`1<int> Protocols { get; public set; }
    public string RuleAction { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    public List`1<PortRange> SourcePorts { get; public set; }
    public List`1<string> Sources { get; public set; }
    public List`1<PortRange> get_DestinationPorts();
    public void set_DestinationPorts(List`1<PortRange> value);
    internal bool IsSetDestinationPorts();
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public List`1<int> get_Protocols();
    public void set_Protocols(List`1<int> value);
    internal bool IsSetProtocols();
    public string get_RuleAction();
    public void set_RuleAction(string value);
    internal bool IsSetRuleAction();
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public List`1<PortRange> get_SourcePorts();
    public void set_SourcePorts(List`1<PortRange> value);
    internal bool IsSetSourcePorts();
    public List`1<string> get_Sources();
    public void set_Sources(List`1<string> value);
    internal bool IsSetSources();
}
public class Amazon.EC2.Model.FleetCapacityReservation : object {
    private string _availabilityZone;
    private string _availabilityZoneId;
    private string _capacityReservationId;
    private Nullable`1<DateTime> _createDate;
    private Nullable`1<bool> _ebsOptimized;
    private Nullable`1<double> _fulfilledCapacity;
    private CapacityReservationInstancePlatform _instancePlatform;
    private InstanceType _instanceType;
    private Nullable`1<int> _priority;
    private Nullable`1<int> _totalInstanceCount;
    private Nullable`1<double> _weight;
    public string AvailabilityZone { get; public set; }
    public string AvailabilityZoneId { get; public set; }
    public string CapacityReservationId { get; public set; }
    public Nullable`1<DateTime> CreateDate { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public Nullable`1<double> FulfilledCapacity { get; public set; }
    public CapacityReservationInstancePlatform InstancePlatform { get; public set; }
    public InstanceType InstanceType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public Nullable`1<int> TotalInstanceCount { get; public set; }
    public Nullable`1<double> Weight { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public Nullable`1<DateTime> get_CreateDate();
    public void set_CreateDate(Nullable`1<DateTime> value);
    internal bool IsSetCreateDate();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public Nullable`1<double> get_FulfilledCapacity();
    public void set_FulfilledCapacity(Nullable`1<double> value);
    internal bool IsSetFulfilledCapacity();
    public CapacityReservationInstancePlatform get_InstancePlatform();
    public void set_InstancePlatform(CapacityReservationInstancePlatform value);
    internal bool IsSetInstancePlatform();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public Nullable`1<int> get_TotalInstanceCount();
    public void set_TotalInstanceCount(Nullable`1<int> value);
    internal bool IsSetTotalInstanceCount();
    public Nullable`1<double> get_Weight();
    public void set_Weight(Nullable`1<double> value);
    internal bool IsSetWeight();
}
public class Amazon.EC2.Model.FleetData : object {
    private FleetActivityStatus _activityStatus;
    private string _clientToken;
    private string _context;
    private Nullable`1<DateTime> _createTime;
    private List`1<DescribeFleetError> _errors;
    private FleetExcessCapacityTerminationPolicy _excessCapacityTerminationPolicy;
    private string _fleetId;
    private FleetStateCode _fleetState;
    private Nullable`1<double> _fulfilledCapacity;
    private Nullable`1<double> _fulfilledOnDemandCapacity;
    private List`1<DescribeFleetsInstances> _instances;
    private List`1<FleetLaunchTemplateConfig> _launchTemplateConfigs;
    private OnDemandOptions _onDemandOptions;
    private Nullable`1<bool> _replaceUnhealthyInstances;
    private SpotOptions _spotOptions;
    private List`1<Tag> _tags;
    private TargetCapacitySpecification _targetCapacitySpecification;
    private Nullable`1<bool> _terminateInstancesWithExpiration;
    private FleetType _type;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public FleetActivityStatus ActivityStatus { get; public set; }
    public string ClientToken { get; public set; }
    public string Context { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public List`1<DescribeFleetError> Errors { get; public set; }
    public FleetExcessCapacityTerminationPolicy ExcessCapacityTerminationPolicy { get; public set; }
    public string FleetId { get; public set; }
    public FleetStateCode FleetState { get; public set; }
    public Nullable`1<double> FulfilledCapacity { get; public set; }
    public Nullable`1<double> FulfilledOnDemandCapacity { get; public set; }
    public List`1<DescribeFleetsInstances> Instances { get; public set; }
    public List`1<FleetLaunchTemplateConfig> LaunchTemplateConfigs { get; public set; }
    public OnDemandOptions OnDemandOptions { get; public set; }
    public Nullable`1<bool> ReplaceUnhealthyInstances { get; public set; }
    public SpotOptions SpotOptions { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public TargetCapacitySpecification TargetCapacitySpecification { get; public set; }
    public Nullable`1<bool> TerminateInstancesWithExpiration { get; public set; }
    public FleetType Type { get; public set; }
    public Nullable`1<DateTime> ValidFrom { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public FleetActivityStatus get_ActivityStatus();
    public void set_ActivityStatus(FleetActivityStatus value);
    internal bool IsSetActivityStatus();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Context();
    public void set_Context(string value);
    internal bool IsSetContext();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public List`1<DescribeFleetError> get_Errors();
    public void set_Errors(List`1<DescribeFleetError> value);
    internal bool IsSetErrors();
    public FleetExcessCapacityTerminationPolicy get_ExcessCapacityTerminationPolicy();
    public void set_ExcessCapacityTerminationPolicy(FleetExcessCapacityTerminationPolicy value);
    internal bool IsSetExcessCapacityTerminationPolicy();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public FleetStateCode get_FleetState();
    public void set_FleetState(FleetStateCode value);
    internal bool IsSetFleetState();
    public Nullable`1<double> get_FulfilledCapacity();
    public void set_FulfilledCapacity(Nullable`1<double> value);
    internal bool IsSetFulfilledCapacity();
    public Nullable`1<double> get_FulfilledOnDemandCapacity();
    public void set_FulfilledOnDemandCapacity(Nullable`1<double> value);
    internal bool IsSetFulfilledOnDemandCapacity();
    public List`1<DescribeFleetsInstances> get_Instances();
    public void set_Instances(List`1<DescribeFleetsInstances> value);
    internal bool IsSetInstances();
    public List`1<FleetLaunchTemplateConfig> get_LaunchTemplateConfigs();
    public void set_LaunchTemplateConfigs(List`1<FleetLaunchTemplateConfig> value);
    internal bool IsSetLaunchTemplateConfigs();
    public OnDemandOptions get_OnDemandOptions();
    public void set_OnDemandOptions(OnDemandOptions value);
    internal bool IsSetOnDemandOptions();
    public Nullable`1<bool> get_ReplaceUnhealthyInstances();
    public void set_ReplaceUnhealthyInstances(Nullable`1<bool> value);
    internal bool IsSetReplaceUnhealthyInstances();
    public SpotOptions get_SpotOptions();
    public void set_SpotOptions(SpotOptions value);
    internal bool IsSetSpotOptions();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TargetCapacitySpecification get_TargetCapacitySpecification();
    public void set_TargetCapacitySpecification(TargetCapacitySpecification value);
    internal bool IsSetTargetCapacitySpecification();
    public Nullable`1<bool> get_TerminateInstancesWithExpiration();
    public void set_TerminateInstancesWithExpiration(Nullable`1<bool> value);
    internal bool IsSetTerminateInstancesWithExpiration();
    public FleetType get_Type();
    public void set_Type(FleetType value);
    internal bool IsSetType();
    public Nullable`1<DateTime> get_ValidFrom();
    public void set_ValidFrom(Nullable`1<DateTime> value);
    internal bool IsSetValidFrom();
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
    internal bool IsSetValidUntil();
}
public class Amazon.EC2.Model.FleetLaunchTemplateConfig : object {
    private FleetLaunchTemplateSpecification _launchTemplateSpecification;
    private List`1<FleetLaunchTemplateOverrides> _overrides;
    public FleetLaunchTemplateSpecification LaunchTemplateSpecification { get; public set; }
    public List`1<FleetLaunchTemplateOverrides> Overrides { get; public set; }
    public FleetLaunchTemplateSpecification get_LaunchTemplateSpecification();
    public void set_LaunchTemplateSpecification(FleetLaunchTemplateSpecification value);
    internal bool IsSetLaunchTemplateSpecification();
    public List`1<FleetLaunchTemplateOverrides> get_Overrides();
    public void set_Overrides(List`1<FleetLaunchTemplateOverrides> value);
    internal bool IsSetOverrides();
}
public class Amazon.EC2.Model.FleetLaunchTemplateConfigRequest : object {
    private FleetLaunchTemplateSpecificationRequest _launchTemplateSpecification;
    private List`1<FleetLaunchTemplateOverridesRequest> _overrides;
    public FleetLaunchTemplateSpecificationRequest LaunchTemplateSpecification { get; public set; }
    public List`1<FleetLaunchTemplateOverridesRequest> Overrides { get; public set; }
    public FleetLaunchTemplateSpecificationRequest get_LaunchTemplateSpecification();
    public void set_LaunchTemplateSpecification(FleetLaunchTemplateSpecificationRequest value);
    internal bool IsSetLaunchTemplateSpecification();
    public List`1<FleetLaunchTemplateOverridesRequest> get_Overrides();
    public void set_Overrides(List`1<FleetLaunchTemplateOverridesRequest> value);
    internal bool IsSetOverrides();
}
public class Amazon.EC2.Model.FleetLaunchTemplateOverrides : object {
    private string _availabilityZone;
    private string _imageId;
    private InstanceRequirements _instanceRequirements;
    private InstanceType _instanceType;
    private string _maxPrice;
    private PlacementResponse _placement;
    private Nullable`1<double> _priority;
    private string _subnetId;
    private Nullable`1<double> _weightedCapacity;
    public string AvailabilityZone { get; public set; }
    public string ImageId { get; public set; }
    public InstanceRequirements InstanceRequirements { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string MaxPrice { get; public set; }
    public PlacementResponse Placement { get; public set; }
    public Nullable`1<double> Priority { get; public set; }
    public string SubnetId { get; public set; }
    public Nullable`1<double> WeightedCapacity { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public InstanceRequirements get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirements value);
    internal bool IsSetInstanceRequirements();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_MaxPrice();
    public void set_MaxPrice(string value);
    internal bool IsSetMaxPrice();
    public PlacementResponse get_Placement();
    public void set_Placement(PlacementResponse value);
    internal bool IsSetPlacement();
    public Nullable`1<double> get_Priority();
    public void set_Priority(Nullable`1<double> value);
    internal bool IsSetPriority();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public Nullable`1<double> get_WeightedCapacity();
    public void set_WeightedCapacity(Nullable`1<double> value);
    internal bool IsSetWeightedCapacity();
}
public class Amazon.EC2.Model.FleetLaunchTemplateOverridesRequest : object {
    private string _availabilityZone;
    private string _imageId;
    private InstanceRequirementsRequest _instanceRequirements;
    private InstanceType _instanceType;
    private string _maxPrice;
    private Placement _placement;
    private Nullable`1<double> _priority;
    private string _subnetId;
    private Nullable`1<double> _weightedCapacity;
    public string AvailabilityZone { get; public set; }
    public string ImageId { get; public set; }
    public InstanceRequirementsRequest InstanceRequirements { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string MaxPrice { get; public set; }
    public Placement Placement { get; public set; }
    public Nullable`1<double> Priority { get; public set; }
    public string SubnetId { get; public set; }
    public Nullable`1<double> WeightedCapacity { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public InstanceRequirementsRequest get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirementsRequest value);
    internal bool IsSetInstanceRequirements();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_MaxPrice();
    public void set_MaxPrice(string value);
    internal bool IsSetMaxPrice();
    public Placement get_Placement();
    public void set_Placement(Placement value);
    internal bool IsSetPlacement();
    public Nullable`1<double> get_Priority();
    public void set_Priority(Nullable`1<double> value);
    internal bool IsSetPriority();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public Nullable`1<double> get_WeightedCapacity();
    public void set_WeightedCapacity(Nullable`1<double> value);
    internal bool IsSetWeightedCapacity();
}
public class Amazon.EC2.Model.FleetLaunchTemplateSpecification : object {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private string _version;
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public string Version { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.EC2.Model.FleetLaunchTemplateSpecificationRequest : object {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private string _version;
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public string Version { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.EC2.Model.FleetSpotCapacityRebalance : object {
    private FleetReplacementStrategy _replacementStrategy;
    private Nullable`1<int> _terminationDelay;
    public FleetReplacementStrategy ReplacementStrategy { get; public set; }
    public Nullable`1<int> TerminationDelay { get; public set; }
    public FleetReplacementStrategy get_ReplacementStrategy();
    public void set_ReplacementStrategy(FleetReplacementStrategy value);
    internal bool IsSetReplacementStrategy();
    public Nullable`1<int> get_TerminationDelay();
    public void set_TerminationDelay(Nullable`1<int> value);
    internal bool IsSetTerminationDelay();
}
public class Amazon.EC2.Model.FleetSpotCapacityRebalanceRequest : object {
    private FleetReplacementStrategy _replacementStrategy;
    private Nullable`1<int> _terminationDelay;
    public FleetReplacementStrategy ReplacementStrategy { get; public set; }
    public Nullable`1<int> TerminationDelay { get; public set; }
    public FleetReplacementStrategy get_ReplacementStrategy();
    public void set_ReplacementStrategy(FleetReplacementStrategy value);
    internal bool IsSetReplacementStrategy();
    public Nullable`1<int> get_TerminationDelay();
    public void set_TerminationDelay(Nullable`1<int> value);
    internal bool IsSetTerminationDelay();
}
public class Amazon.EC2.Model.FleetSpotMaintenanceStrategies : object {
    private FleetSpotCapacityRebalance _capacityRebalance;
    public FleetSpotCapacityRebalance CapacityRebalance { get; public set; }
    public FleetSpotCapacityRebalance get_CapacityRebalance();
    public void set_CapacityRebalance(FleetSpotCapacityRebalance value);
    internal bool IsSetCapacityRebalance();
}
public class Amazon.EC2.Model.FleetSpotMaintenanceStrategiesRequest : object {
    private FleetSpotCapacityRebalanceRequest _capacityRebalance;
    public FleetSpotCapacityRebalanceRequest CapacityRebalance { get; public set; }
    public FleetSpotCapacityRebalanceRequest get_CapacityRebalance();
    public void set_CapacityRebalance(FleetSpotCapacityRebalanceRequest value);
    internal bool IsSetCapacityRebalance();
}
public class Amazon.EC2.Model.FlowLog : object {
    private Nullable`1<DateTime> _creationTime;
    private string _deliverCrossAccountRole;
    private string _deliverLogsErrorMessage;
    private string _deliverLogsPermissionArn;
    private string _deliverLogsStatus;
    private DestinationOptionsResponse _destinationOptions;
    private string _flowLogId;
    private string _flowLogStatus;
    private string _logDestination;
    private LogDestinationType _logDestinationType;
    private string _logFormat;
    private string _logGroupName;
    private Nullable`1<int> _maxAggregationInterval;
    private string _resourceId;
    private List`1<Tag> _tags;
    private TrafficType _trafficType;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string DeliverCrossAccountRole { get; public set; }
    public string DeliverLogsErrorMessage { get; public set; }
    public string DeliverLogsPermissionArn { get; public set; }
    public string DeliverLogsStatus { get; public set; }
    public DestinationOptionsResponse DestinationOptions { get; public set; }
    public string FlowLogId { get; public set; }
    public string FlowLogStatus { get; public set; }
    public string LogDestination { get; public set; }
    public LogDestinationType LogDestinationType { get; public set; }
    public string LogFormat { get; public set; }
    public string LogGroupName { get; public set; }
    public Nullable`1<int> MaxAggregationInterval { get; public set; }
    public string ResourceId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public TrafficType TrafficType { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_DeliverCrossAccountRole();
    public void set_DeliverCrossAccountRole(string value);
    internal bool IsSetDeliverCrossAccountRole();
    public string get_DeliverLogsErrorMessage();
    public void set_DeliverLogsErrorMessage(string value);
    internal bool IsSetDeliverLogsErrorMessage();
    public string get_DeliverLogsPermissionArn();
    public void set_DeliverLogsPermissionArn(string value);
    internal bool IsSetDeliverLogsPermissionArn();
    public string get_DeliverLogsStatus();
    public void set_DeliverLogsStatus(string value);
    internal bool IsSetDeliverLogsStatus();
    public DestinationOptionsResponse get_DestinationOptions();
    public void set_DestinationOptions(DestinationOptionsResponse value);
    internal bool IsSetDestinationOptions();
    public string get_FlowLogId();
    public void set_FlowLogId(string value);
    internal bool IsSetFlowLogId();
    public string get_FlowLogStatus();
    public void set_FlowLogStatus(string value);
    internal bool IsSetFlowLogStatus();
    public string get_LogDestination();
    public void set_LogDestination(string value);
    internal bool IsSetLogDestination();
    public LogDestinationType get_LogDestinationType();
    public void set_LogDestinationType(LogDestinationType value);
    internal bool IsSetLogDestinationType();
    public string get_LogFormat();
    public void set_LogFormat(string value);
    internal bool IsSetLogFormat();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Nullable`1<int> get_MaxAggregationInterval();
    public void set_MaxAggregationInterval(Nullable`1<int> value);
    internal bool IsSetMaxAggregationInterval();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TrafficType get_TrafficType();
    public void set_TrafficType(TrafficType value);
    internal bool IsSetTrafficType();
}
public class Amazon.EC2.Model.FpgaDeviceInfo : object {
    private Nullable`1<int> _count;
    private string _manufacturer;
    private FpgaDeviceMemoryInfo _memoryInfo;
    private string _name;
    public Nullable`1<int> Count { get; public set; }
    public string Manufacturer { get; public set; }
    public FpgaDeviceMemoryInfo MemoryInfo { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public string get_Manufacturer();
    public void set_Manufacturer(string value);
    internal bool IsSetManufacturer();
    public FpgaDeviceMemoryInfo get_MemoryInfo();
    public void set_MemoryInfo(FpgaDeviceMemoryInfo value);
    internal bool IsSetMemoryInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.FpgaDeviceMemoryInfo : object {
    private Nullable`1<int> _sizeInMiB;
    public Nullable`1<int> SizeInMiB { get; public set; }
    public Nullable`1<int> get_SizeInMiB();
    public void set_SizeInMiB(Nullable`1<int> value);
    internal bool IsSetSizeInMiB();
}
public class Amazon.EC2.Model.FpgaImage : object {
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<bool> _dataRetentionSupport;
    private string _description;
    private string _fpgaImageGlobalId;
    private string _fpgaImageId;
    private List`1<string> _instanceTypes;
    private string _name;
    private string _ownerAlias;
    private string _ownerId;
    private PciId _pciId;
    private List`1<ProductCode> _productCodes;
    private Nullable`1<bool> _public;
    private string _shellVersion;
    private FpgaImageState _state;
    private List`1<Tag> _tags;
    private Nullable`1<DateTime> _updateTime;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<bool> DataRetentionSupport { get; public set; }
    public string Description { get; public set; }
    public string FpgaImageGlobalId { get; public set; }
    public string FpgaImageId { get; public set; }
    public List`1<string> InstanceTypes { get; public set; }
    public string Name { get; public set; }
    public string OwnerAlias { get; public set; }
    public string OwnerId { get; public set; }
    public PciId PciId { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public Nullable`1<bool> Public { get; public set; }
    public string ShellVersion { get; public set; }
    public FpgaImageState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<DateTime> UpdateTime { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<bool> get_DataRetentionSupport();
    public void set_DataRetentionSupport(Nullable`1<bool> value);
    internal bool IsSetDataRetentionSupport();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FpgaImageGlobalId();
    public void set_FpgaImageGlobalId(string value);
    internal bool IsSetFpgaImageGlobalId();
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
    public List`1<string> get_InstanceTypes();
    public void set_InstanceTypes(List`1<string> value);
    internal bool IsSetInstanceTypes();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerAlias();
    public void set_OwnerAlias(string value);
    internal bool IsSetOwnerAlias();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PciId get_PciId();
    public void set_PciId(PciId value);
    internal bool IsSetPciId();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public Nullable`1<bool> get_Public();
    public void set_Public(Nullable`1<bool> value);
    internal bool IsSetPublic();
    public string get_ShellVersion();
    public void set_ShellVersion(string value);
    internal bool IsSetShellVersion();
    public FpgaImageState get_State();
    public void set_State(FpgaImageState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<DateTime> get_UpdateTime();
    public void set_UpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdateTime();
}
public class Amazon.EC2.Model.FpgaImageAttribute : object {
    private string _description;
    private string _fpgaImageId;
    private List`1<LoadPermission> _loadPermissions;
    private string _name;
    private List`1<ProductCode> _productCodes;
    public string Description { get; public set; }
    public string FpgaImageId { get; public set; }
    public List`1<LoadPermission> LoadPermissions { get; public set; }
    public string Name { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
    public List`1<LoadPermission> get_LoadPermissions();
    public void set_LoadPermissions(List`1<LoadPermission> value);
    internal bool IsSetLoadPermissions();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
}
public class Amazon.EC2.Model.FpgaImageState : object {
    private FpgaImageStateCode _code;
    private string _message;
    public FpgaImageStateCode Code { get; public set; }
    public string Message { get; public set; }
    public FpgaImageStateCode get_Code();
    public void set_Code(FpgaImageStateCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.FpgaInfo : object {
    private List`1<FpgaDeviceInfo> _fpgas;
    private Nullable`1<int> _totalFpgaMemoryInMiB;
    public List`1<FpgaDeviceInfo> Fpgas { get; public set; }
    public Nullable`1<int> TotalFpgaMemoryInMiB { get; public set; }
    public List`1<FpgaDeviceInfo> get_Fpgas();
    public void set_Fpgas(List`1<FpgaDeviceInfo> value);
    internal bool IsSetFpgas();
    public Nullable`1<int> get_TotalFpgaMemoryInMiB();
    public void set_TotalFpgaMemoryInMiB(Nullable`1<int> value);
    internal bool IsSetTotalFpgaMemoryInMiB();
}
public class Amazon.EC2.Model.GetAssociatedEnclaveCertificateIamRolesRequest : AmazonEC2Request {
    private string _certificateArn;
    [AWSPropertyAttribute]
public string CertificateArn { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
}
public class Amazon.EC2.Model.GetAssociatedEnclaveCertificateIamRolesResponse : AmazonWebServiceResponse {
    private List`1<AssociatedRole> _associatedRoles;
    public List`1<AssociatedRole> AssociatedRoles { get; public set; }
    public List`1<AssociatedRole> get_AssociatedRoles();
    public void set_AssociatedRoles(List`1<AssociatedRole> value);
    internal bool IsSetAssociatedRoles();
}
internal class Amazon.EC2.Model.GetAssociatedIpv6PoolCidrsPaginator : object {
    private IAmazonEC2 _client;
    private GetAssociatedIpv6PoolCidrsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetAssociatedIpv6PoolCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ipv6CidrAssociation> Ipv6CidrAssociations { get; }
    internal GetAssociatedIpv6PoolCidrsPaginator(IAmazonEC2 client, GetAssociatedIpv6PoolCidrsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetAssociatedIpv6PoolCidrsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Ipv6CidrAssociation> get_Ipv6CidrAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetAssociatedIpv6PoolCidrsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetAssociatedIpv6PoolCidrsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetAssociatedIpv6PoolCidrsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetAssociatedIpv6PoolCidrsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetAssociatedIpv6PoolCidrsRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _poolId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.GetAssociatedIpv6PoolCidrsResponse : AmazonWebServiceResponse {
    private List`1<Ipv6CidrAssociation> _ipv6CidrAssociations;
    private string _nextToken;
    public List`1<Ipv6CidrAssociation> Ipv6CidrAssociations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Ipv6CidrAssociation> get_Ipv6CidrAssociations();
    public void set_Ipv6CidrAssociations(List`1<Ipv6CidrAssociation> value);
    internal bool IsSetIpv6CidrAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetAwsNetworkPerformanceDataPaginator : object {
    private IAmazonEC2 _client;
    private GetAwsNetworkPerformanceDataRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetAwsNetworkPerformanceDataResponse> Responses { get; }
    public IPaginatedEnumerable`1<DataResponse> DataResponses { get; }
    internal GetAwsNetworkPerformanceDataPaginator(IAmazonEC2 client, GetAwsNetworkPerformanceDataRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetAwsNetworkPerformanceDataResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DataResponse> get_DataResponses();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetAwsNetworkPerformanceDataPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetAwsNetworkPerformanceDataResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetAwsNetworkPerformanceDataResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetAwsNetworkPerformanceDataResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetAwsNetworkPerformanceDataRequest : AmazonEC2Request {
    private List`1<DataQuery> _dataQueries;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    public List`1<DataQuery> DataQueries { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public List`1<DataQuery> get_DataQueries();
    public void set_DataQueries(List`1<DataQuery> value);
    internal bool IsSetDataQueries();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.EC2.Model.GetAwsNetworkPerformanceDataResponse : AmazonWebServiceResponse {
    private List`1<DataResponse> _dataResponses;
    private string _nextToken;
    public List`1<DataResponse> DataResponses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DataResponse> get_DataResponses();
    public void set_DataResponses(List`1<DataResponse> value);
    internal bool IsSetDataResponses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetCapacityReservationUsageRequest : AmazonEC2Request {
    private string _capacityReservationId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string CapacityReservationId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetCapacityReservationUsageResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _availableInstanceCount;
    private string _capacityReservationId;
    private string _instanceType;
    private List`1<InstanceUsage> _instanceUsages;
    private string _nextToken;
    private CapacityReservationState _state;
    private Nullable`1<int> _totalInstanceCount;
    public Nullable`1<int> AvailableInstanceCount { get; public set; }
    public string CapacityReservationId { get; public set; }
    public string InstanceType { get; public set; }
    public List`1<InstanceUsage> InstanceUsages { get; public set; }
    public string NextToken { get; public set; }
    public CapacityReservationState State { get; public set; }
    public Nullable`1<int> TotalInstanceCount { get; public set; }
    public Nullable`1<int> get_AvailableInstanceCount();
    public void set_AvailableInstanceCount(Nullable`1<int> value);
    internal bool IsSetAvailableInstanceCount();
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public List`1<InstanceUsage> get_InstanceUsages();
    public void set_InstanceUsages(List`1<InstanceUsage> value);
    internal bool IsSetInstanceUsages();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public CapacityReservationState get_State();
    public void set_State(CapacityReservationState value);
    internal bool IsSetState();
    public Nullable`1<int> get_TotalInstanceCount();
    public void set_TotalInstanceCount(Nullable`1<int> value);
    internal bool IsSetTotalInstanceCount();
}
public class Amazon.EC2.Model.GetCoipPoolUsageRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _poolId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.GetCoipPoolUsageResponse : AmazonWebServiceResponse {
    private List`1<CoipAddressUsage> _coipAddressUsages;
    private string _coipPoolId;
    private string _localGatewayRouteTableId;
    private string _nextToken;
    public List`1<CoipAddressUsage> CoipAddressUsages { get; public set; }
    public string CoipPoolId { get; public set; }
    public string LocalGatewayRouteTableId { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CoipAddressUsage> get_CoipAddressUsages();
    public void set_CoipAddressUsages(List`1<CoipAddressUsage> value);
    internal bool IsSetCoipAddressUsages();
    public string get_CoipPoolId();
    public void set_CoipPoolId(string value);
    internal bool IsSetCoipPoolId();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetConsoleOutputRequest : AmazonEC2Request {
    private string _instanceId;
    private Nullable`1<bool> _latest;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public Nullable`1<bool> Latest { get; public set; }
    public GetConsoleOutputRequest(string instanceId);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<bool> get_Latest();
    public void set_Latest(Nullable`1<bool> value);
    internal bool IsSetLatest();
}
public class Amazon.EC2.Model.GetConsoleOutputResponse : AmazonWebServiceResponse {
    private string _instanceId;
    private string _output;
    private Nullable`1<DateTime> _timestamp;
    public string InstanceId { get; public set; }
    public string Output { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Output();
    public void set_Output(string value);
    internal bool IsSetOutput();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.GetConsoleScreenshotRequest : AmazonEC2Request {
    private string _instanceId;
    private Nullable`1<bool> _wakeUp;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public Nullable`1<bool> WakeUp { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<bool> get_WakeUp();
    public void set_WakeUp(Nullable`1<bool> value);
    internal bool IsSetWakeUp();
}
public class Amazon.EC2.Model.GetConsoleScreenshotResponse : AmazonWebServiceResponse {
    private string _imageData;
    private string _instanceId;
    public string ImageData { get; public set; }
    public string InstanceId { get; public set; }
    public string get_ImageData();
    public void set_ImageData(string value);
    internal bool IsSetImageData();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.GetDefaultCreditSpecificationRequest : AmazonEC2Request {
    private UnlimitedSupportedInstanceFamily _instanceFamily;
    [AWSPropertyAttribute]
public UnlimitedSupportedInstanceFamily InstanceFamily { get; public set; }
    public UnlimitedSupportedInstanceFamily get_InstanceFamily();
    public void set_InstanceFamily(UnlimitedSupportedInstanceFamily value);
    internal bool IsSetInstanceFamily();
}
public class Amazon.EC2.Model.GetDefaultCreditSpecificationResponse : AmazonWebServiceResponse {
    private InstanceFamilyCreditSpecification _instanceFamilyCreditSpecification;
    public InstanceFamilyCreditSpecification InstanceFamilyCreditSpecification { get; public set; }
    public InstanceFamilyCreditSpecification get_InstanceFamilyCreditSpecification();
    public void set_InstanceFamilyCreditSpecification(InstanceFamilyCreditSpecification value);
    internal bool IsSetInstanceFamilyCreditSpecification();
}
public class Amazon.EC2.Model.GetEbsDefaultKmsKeyIdRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.GetEbsDefaultKmsKeyIdResponse : AmazonWebServiceResponse {
    private string _kmsKeyId;
    public string KmsKeyId { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
}
public class Amazon.EC2.Model.GetEbsEncryptionByDefaultRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.GetEbsEncryptionByDefaultResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _ebsEncryptionByDefault;
    private SSEType _sseType;
    public Nullable`1<bool> EbsEncryptionByDefault { get; public set; }
    public SSEType SseType { get; public set; }
    public Nullable`1<bool> get_EbsEncryptionByDefault();
    public void set_EbsEncryptionByDefault(Nullable`1<bool> value);
    internal bool IsSetEbsEncryptionByDefault();
    public SSEType get_SseType();
    public void set_SseType(SSEType value);
    internal bool IsSetSseType();
}
public class Amazon.EC2.Model.GetFlowLogsIntegrationTemplateRequest : AmazonEC2Request {
    private string _configDeliveryS3DestinationArn;
    private string _flowLogId;
    private IntegrateServices _integrateServices;
    [AWSPropertyAttribute]
public string ConfigDeliveryS3DestinationArn { get; public set; }
    [AWSPropertyAttribute]
public string FlowLogId { get; public set; }
    [AWSPropertyAttribute]
public IntegrateServices IntegrateServices { get; public set; }
    public string get_ConfigDeliveryS3DestinationArn();
    public void set_ConfigDeliveryS3DestinationArn(string value);
    internal bool IsSetConfigDeliveryS3DestinationArn();
    public string get_FlowLogId();
    public void set_FlowLogId(string value);
    internal bool IsSetFlowLogId();
    public IntegrateServices get_IntegrateServices();
    public void set_IntegrateServices(IntegrateServices value);
    internal bool IsSetIntegrateServices();
}
public class Amazon.EC2.Model.GetFlowLogsIntegrationTemplateResponse : AmazonWebServiceResponse {
    private string _result;
    public string Result { get; public set; }
    public string get_Result();
    public void set_Result(string value);
    internal bool IsSetResult();
}
internal class Amazon.EC2.Model.GetGroupsForCapacityReservationPaginator : object {
    private IAmazonEC2 _client;
    private GetGroupsForCapacityReservationRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetGroupsForCapacityReservationResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityReservationGroup> CapacityReservationGroups { get; }
    internal GetGroupsForCapacityReservationPaginator(IAmazonEC2 client, GetGroupsForCapacityReservationRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetGroupsForCapacityReservationResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CapacityReservationGroup> get_CapacityReservationGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetGroupsForCapacityReservationPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetGroupsForCapacityReservationResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetGroupsForCapacityReservationResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetGroupsForCapacityReservationResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetGroupsForCapacityReservationRequest : AmazonEC2Request {
    private string _capacityReservationId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string CapacityReservationId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetGroupsForCapacityReservationResponse : AmazonWebServiceResponse {
    private List`1<CapacityReservationGroup> _capacityReservationGroups;
    private string _nextToken;
    public List`1<CapacityReservationGroup> CapacityReservationGroups { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CapacityReservationGroup> get_CapacityReservationGroups();
    public void set_CapacityReservationGroups(List`1<CapacityReservationGroup> value);
    internal bool IsSetCapacityReservationGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest : AmazonEC2Request {
    private List`1<string> _hostIdSet;
    private string _offeringId;
    [AWSPropertyAttribute]
public List`1<string> HostIdSet { get; public set; }
    [AWSPropertyAttribute]
public string OfferingId { get; public set; }
    public List`1<string> get_HostIdSet();
    public void set_HostIdSet(List`1<string> value);
    internal bool IsSetHostIdSet();
    public string get_OfferingId();
    public void set_OfferingId(string value);
    internal bool IsSetOfferingId();
}
public class Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse : AmazonWebServiceResponse {
    private CurrencyCodeValues _currencyCode;
    private List`1<Purchase> _purchase;
    private string _totalHourlyPrice;
    private string _totalUpfrontPrice;
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public List`1<Purchase> Purchase { get; public set; }
    public string TotalHourlyPrice { get; public set; }
    public string TotalUpfrontPrice { get; public set; }
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public List`1<Purchase> get_Purchase();
    public void set_Purchase(List`1<Purchase> value);
    internal bool IsSetPurchase();
    public string get_TotalHourlyPrice();
    public void set_TotalHourlyPrice(string value);
    internal bool IsSetTotalHourlyPrice();
    public string get_TotalUpfrontPrice();
    public void set_TotalUpfrontPrice(string value);
    internal bool IsSetTotalUpfrontPrice();
}
public class Amazon.EC2.Model.GetImageBlockPublicAccessStateRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.GetImageBlockPublicAccessStateResponse : AmazonWebServiceResponse {
    private string _imageBlockPublicAccessState;
    public string ImageBlockPublicAccessState { get; public set; }
    public string get_ImageBlockPublicAccessState();
    public void set_ImageBlockPublicAccessState(string value);
    internal bool IsSetImageBlockPublicAccessState();
}
public class Amazon.EC2.Model.GetInstanceMetadataDefaultsRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.GetInstanceMetadataDefaultsResponse : AmazonWebServiceResponse {
    private InstanceMetadataDefaultsResponse _accountLevel;
    public InstanceMetadataDefaultsResponse AccountLevel { get; public set; }
    public InstanceMetadataDefaultsResponse get_AccountLevel();
    public void set_AccountLevel(InstanceMetadataDefaultsResponse value);
    internal bool IsSetAccountLevel();
}
public class Amazon.EC2.Model.GetInstanceTpmEkPubRequest : AmazonEC2Request {
    private string _instanceId;
    private EkPubKeyFormat _keyFormat;
    private EkPubKeyType _keyType;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public EkPubKeyFormat KeyFormat { get; public set; }
    [AWSPropertyAttribute]
public EkPubKeyType KeyType { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public EkPubKeyFormat get_KeyFormat();
    public void set_KeyFormat(EkPubKeyFormat value);
    internal bool IsSetKeyFormat();
    public EkPubKeyType get_KeyType();
    public void set_KeyType(EkPubKeyType value);
    internal bool IsSetKeyType();
}
public class Amazon.EC2.Model.GetInstanceTpmEkPubResponse : AmazonWebServiceResponse {
    private string _instanceId;
    private EkPubKeyFormat _keyFormat;
    private EkPubKeyType _keyType;
    private string _keyValue;
    public string InstanceId { get; public set; }
    public EkPubKeyFormat KeyFormat { get; public set; }
    public EkPubKeyType KeyType { get; public set; }
    [AWSPropertyAttribute]
public string KeyValue { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public EkPubKeyFormat get_KeyFormat();
    public void set_KeyFormat(EkPubKeyFormat value);
    internal bool IsSetKeyFormat();
    public EkPubKeyType get_KeyType();
    public void set_KeyType(EkPubKeyType value);
    internal bool IsSetKeyType();
    public string get_KeyValue();
    public void set_KeyValue(string value);
    internal bool IsSetKeyValue();
}
internal class Amazon.EC2.Model.GetInstanceTypesFromInstanceRequirementsPaginator : object {
    private IAmazonEC2 _client;
    private GetInstanceTypesFromInstanceRequirementsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetInstanceTypesFromInstanceRequirementsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTypeInfoFromInstanceRequirements> InstanceTypes { get; }
    internal GetInstanceTypesFromInstanceRequirementsPaginator(IAmazonEC2 client, GetInstanceTypesFromInstanceRequirementsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetInstanceTypesFromInstanceRequirementsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceTypeInfoFromInstanceRequirements> get_InstanceTypes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetInstanceTypesFromInstanceRequirementsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetInstanceTypesFromInstanceRequirementsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetInstanceTypesFromInstanceRequirementsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetInstanceTypesFromInstanceRequirementsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetInstanceTypesFromInstanceRequirementsRequest : AmazonEC2Request {
    private List`1<string> _architectureTypes;
    private InstanceRequirementsRequest _instanceRequirements;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _virtualizationTypes;
    [AWSPropertyAttribute]
public List`1<string> ArchitectureTypes { get; public set; }
    [AWSPropertyAttribute]
public InstanceRequirementsRequest InstanceRequirements { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VirtualizationTypes { get; public set; }
    public List`1<string> get_ArchitectureTypes();
    public void set_ArchitectureTypes(List`1<string> value);
    internal bool IsSetArchitectureTypes();
    public InstanceRequirementsRequest get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirementsRequest value);
    internal bool IsSetInstanceRequirements();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VirtualizationTypes();
    public void set_VirtualizationTypes(List`1<string> value);
    internal bool IsSetVirtualizationTypes();
}
public class Amazon.EC2.Model.GetInstanceTypesFromInstanceRequirementsResponse : AmazonWebServiceResponse {
    private List`1<InstanceTypeInfoFromInstanceRequirements> _instanceTypes;
    private string _nextToken;
    public List`1<InstanceTypeInfoFromInstanceRequirements> InstanceTypes { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceTypeInfoFromInstanceRequirements> get_InstanceTypes();
    public void set_InstanceTypes(List`1<InstanceTypeInfoFromInstanceRequirements> value);
    internal bool IsSetInstanceTypes();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetInstanceUefiDataRequest : AmazonEC2Request {
    private string _instanceId;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.GetInstanceUefiDataResponse : AmazonWebServiceResponse {
    private string _instanceId;
    private string _uefiData;
    public string InstanceId { get; public set; }
    public string UefiData { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_UefiData();
    public void set_UefiData(string value);
    internal bool IsSetUefiData();
}
internal class Amazon.EC2.Model.GetIpamAddressHistoryPaginator : object {
    private IAmazonEC2 _client;
    private GetIpamAddressHistoryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetIpamAddressHistoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamAddressHistoryRecord> HistoryRecords { get; }
    internal GetIpamAddressHistoryPaginator(IAmazonEC2 client, GetIpamAddressHistoryRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetIpamAddressHistoryResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamAddressHistoryRecord> get_HistoryRecords();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetIpamAddressHistoryPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetIpamAddressHistoryResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetIpamAddressHistoryResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetIpamAddressHistoryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetIpamAddressHistoryRequest : AmazonEC2Request {
    private string _cidr;
    private Nullable`1<DateTime> _endTime;
    private string _ipamScopeId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    private string _vpcId;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string IpamScopeId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string VpcId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_IpamScopeId();
    public void set_IpamScopeId(string value);
    internal bool IsSetIpamScopeId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.GetIpamAddressHistoryResponse : AmazonWebServiceResponse {
    private List`1<IpamAddressHistoryRecord> _historyRecords;
    private string _nextToken;
    public List`1<IpamAddressHistoryRecord> HistoryRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamAddressHistoryRecord> get_HistoryRecords();
    public void set_HistoryRecords(List`1<IpamAddressHistoryRecord> value);
    internal bool IsSetHistoryRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetIpamDiscoveredAccountsPaginator : object {
    private IAmazonEC2 _client;
    private GetIpamDiscoveredAccountsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetIpamDiscoveredAccountsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamDiscoveredAccount> IpamDiscoveredAccounts { get; }
    internal GetIpamDiscoveredAccountsPaginator(IAmazonEC2 client, GetIpamDiscoveredAccountsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetIpamDiscoveredAccountsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamDiscoveredAccount> get_IpamDiscoveredAccounts();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetIpamDiscoveredAccountsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetIpamDiscoveredAccountsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetIpamDiscoveredAccountsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetIpamDiscoveredAccountsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetIpamDiscoveredAccountsRequest : AmazonEC2Request {
    private string _discoveryRegion;
    private List`1<Filter> _filters;
    private string _ipamResourceDiscoveryId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string DiscoveryRegion { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string IpamResourceDiscoveryId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_DiscoveryRegion();
    public void set_DiscoveryRegion(string value);
    internal bool IsSetDiscoveryRegion();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetIpamDiscoveredAccountsResponse : AmazonWebServiceResponse {
    private List`1<IpamDiscoveredAccount> _ipamDiscoveredAccounts;
    private string _nextToken;
    public List`1<IpamDiscoveredAccount> IpamDiscoveredAccounts { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamDiscoveredAccount> get_IpamDiscoveredAccounts();
    public void set_IpamDiscoveredAccounts(List`1<IpamDiscoveredAccount> value);
    internal bool IsSetIpamDiscoveredAccounts();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetIpamDiscoveredPublicAddressesRequest : AmazonEC2Request {
    private string _addressRegion;
    private List`1<Filter> _filters;
    private string _ipamResourceDiscoveryId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AddressRegion { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string IpamResourceDiscoveryId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AddressRegion();
    public void set_AddressRegion(string value);
    internal bool IsSetAddressRegion();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetIpamDiscoveredPublicAddressesResponse : AmazonWebServiceResponse {
    private List`1<IpamDiscoveredPublicAddress> _ipamDiscoveredPublicAddresses;
    private string _nextToken;
    private Nullable`1<DateTime> _oldestSampleTime;
    public List`1<IpamDiscoveredPublicAddress> IpamDiscoveredPublicAddresses { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> OldestSampleTime { get; public set; }
    public List`1<IpamDiscoveredPublicAddress> get_IpamDiscoveredPublicAddresses();
    public void set_IpamDiscoveredPublicAddresses(List`1<IpamDiscoveredPublicAddress> value);
    internal bool IsSetIpamDiscoveredPublicAddresses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_OldestSampleTime();
    public void set_OldestSampleTime(Nullable`1<DateTime> value);
    internal bool IsSetOldestSampleTime();
}
internal class Amazon.EC2.Model.GetIpamDiscoveredResourceCidrsPaginator : object {
    private IAmazonEC2 _client;
    private GetIpamDiscoveredResourceCidrsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetIpamDiscoveredResourceCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamDiscoveredResourceCidr> IpamDiscoveredResourceCidrs { get; }
    internal GetIpamDiscoveredResourceCidrsPaginator(IAmazonEC2 client, GetIpamDiscoveredResourceCidrsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetIpamDiscoveredResourceCidrsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamDiscoveredResourceCidr> get_IpamDiscoveredResourceCidrs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetIpamDiscoveredResourceCidrsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetIpamDiscoveredResourceCidrsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetIpamDiscoveredResourceCidrsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetIpamDiscoveredResourceCidrsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetIpamDiscoveredResourceCidrsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _ipamResourceDiscoveryId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _resourceRegion;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string IpamResourceDiscoveryId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceRegion { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
}
public class Amazon.EC2.Model.GetIpamDiscoveredResourceCidrsResponse : AmazonWebServiceResponse {
    private List`1<IpamDiscoveredResourceCidr> _ipamDiscoveredResourceCidrs;
    private string _nextToken;
    public List`1<IpamDiscoveredResourceCidr> IpamDiscoveredResourceCidrs { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamDiscoveredResourceCidr> get_IpamDiscoveredResourceCidrs();
    public void set_IpamDiscoveredResourceCidrs(List`1<IpamDiscoveredResourceCidr> value);
    internal bool IsSetIpamDiscoveredResourceCidrs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetIpamPoolAllocationsPaginator : object {
    private IAmazonEC2 _client;
    private GetIpamPoolAllocationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetIpamPoolAllocationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamPoolAllocation> IpamPoolAllocations { get; }
    internal GetIpamPoolAllocationsPaginator(IAmazonEC2 client, GetIpamPoolAllocationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetIpamPoolAllocationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamPoolAllocation> get_IpamPoolAllocations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetIpamPoolAllocationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetIpamPoolAllocationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetIpamPoolAllocationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetIpamPoolAllocationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetIpamPoolAllocationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _ipamPoolAllocationId;
    private string _ipamPoolId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public string IpamPoolAllocationId { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_IpamPoolAllocationId();
    public void set_IpamPoolAllocationId(string value);
    internal bool IsSetIpamPoolAllocationId();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetIpamPoolAllocationsResponse : AmazonWebServiceResponse {
    private List`1<IpamPoolAllocation> _ipamPoolAllocations;
    private string _nextToken;
    public List`1<IpamPoolAllocation> IpamPoolAllocations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamPoolAllocation> get_IpamPoolAllocations();
    public void set_IpamPoolAllocations(List`1<IpamPoolAllocation> value);
    internal bool IsSetIpamPoolAllocations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetIpamPoolCidrsPaginator : object {
    private IAmazonEC2 _client;
    private GetIpamPoolCidrsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetIpamPoolCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamPoolCidr> IpamPoolCidrs { get; }
    internal GetIpamPoolCidrsPaginator(IAmazonEC2 client, GetIpamPoolCidrsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetIpamPoolCidrsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamPoolCidr> get_IpamPoolCidrs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetIpamPoolCidrsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetIpamPoolCidrsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetIpamPoolCidrsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetIpamPoolCidrsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetIpamPoolCidrsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _ipamPoolId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetIpamPoolCidrsResponse : AmazonWebServiceResponse {
    private List`1<IpamPoolCidr> _ipamPoolCidrs;
    private string _nextToken;
    public List`1<IpamPoolCidr> IpamPoolCidrs { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamPoolCidr> get_IpamPoolCidrs();
    public void set_IpamPoolCidrs(List`1<IpamPoolCidr> value);
    internal bool IsSetIpamPoolCidrs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetIpamResourceCidrsPaginator : object {
    private IAmazonEC2 _client;
    private GetIpamResourceCidrsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetIpamResourceCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamResourceCidr> IpamResourceCidrs { get; }
    internal GetIpamResourceCidrsPaginator(IAmazonEC2 client, GetIpamResourceCidrsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetIpamResourceCidrsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IpamResourceCidr> get_IpamResourceCidrs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetIpamResourceCidrsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetIpamResourceCidrsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetIpamResourceCidrsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetIpamResourceCidrsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetIpamResourceCidrsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _ipamPoolId;
    private string _ipamScopeId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _resourceId;
    private string _resourceOwner;
    private RequestIpamResourceTag _resourceTag;
    private IpamResourceType _resourceType;
    public List`1<Filter> Filters { get; public set; }
    public string IpamPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IpamScopeId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceOwner { get; public set; }
    public RequestIpamResourceTag ResourceTag { get; public set; }
    public IpamResourceType ResourceType { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public string get_IpamScopeId();
    public void set_IpamScopeId(string value);
    internal bool IsSetIpamScopeId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwner();
    public void set_ResourceOwner(string value);
    internal bool IsSetResourceOwner();
    public RequestIpamResourceTag get_ResourceTag();
    public void set_ResourceTag(RequestIpamResourceTag value);
    internal bool IsSetResourceTag();
    public IpamResourceType get_ResourceType();
    public void set_ResourceType(IpamResourceType value);
    internal bool IsSetResourceType();
}
public class Amazon.EC2.Model.GetIpamResourceCidrsResponse : AmazonWebServiceResponse {
    private List`1<IpamResourceCidr> _ipamResourceCidrs;
    private string _nextToken;
    public List`1<IpamResourceCidr> IpamResourceCidrs { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IpamResourceCidr> get_IpamResourceCidrs();
    public void set_IpamResourceCidrs(List`1<IpamResourceCidr> value);
    internal bool IsSetIpamResourceCidrs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetLaunchTemplateDataRequest : AmazonEC2Request {
    private string _instanceId;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.GetLaunchTemplateDataResponse : AmazonWebServiceResponse {
    private ResponseLaunchTemplateData _launchTemplateData;
    public ResponseLaunchTemplateData LaunchTemplateData { get; public set; }
    public ResponseLaunchTemplateData get_LaunchTemplateData();
    public void set_LaunchTemplateData(ResponseLaunchTemplateData value);
    internal bool IsSetLaunchTemplateData();
}
internal class Amazon.EC2.Model.GetManagedPrefixListAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private GetManagedPrefixListAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetManagedPrefixListAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrefixListAssociation> PrefixListAssociations { get; }
    internal GetManagedPrefixListAssociationsPaginator(IAmazonEC2 client, GetManagedPrefixListAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetManagedPrefixListAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PrefixListAssociation> get_PrefixListAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetManagedPrefixListAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetManagedPrefixListAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetManagedPrefixListAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetManagedPrefixListAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetManagedPrefixListAssociationsRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _prefixListId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
}
public class Amazon.EC2.Model.GetManagedPrefixListAssociationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PrefixListAssociation> _prefixListAssociations;
    public string NextToken { get; public set; }
    public List`1<PrefixListAssociation> PrefixListAssociations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PrefixListAssociation> get_PrefixListAssociations();
    public void set_PrefixListAssociations(List`1<PrefixListAssociation> value);
    internal bool IsSetPrefixListAssociations();
}
internal class Amazon.EC2.Model.GetManagedPrefixListEntriesPaginator : object {
    private IAmazonEC2 _client;
    private GetManagedPrefixListEntriesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetManagedPrefixListEntriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrefixListEntry> Entries { get; }
    internal GetManagedPrefixListEntriesPaginator(IAmazonEC2 client, GetManagedPrefixListEntriesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetManagedPrefixListEntriesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PrefixListEntry> get_Entries();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetManagedPrefixListEntriesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetManagedPrefixListEntriesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetManagedPrefixListEntriesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetManagedPrefixListEntriesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetManagedPrefixListEntriesRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _prefixListId;
    private Nullable`1<long> _targetVersion;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    public Nullable`1<long> TargetVersion { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public Nullable`1<long> get_TargetVersion();
    public void set_TargetVersion(Nullable`1<long> value);
    internal bool IsSetTargetVersion();
}
public class Amazon.EC2.Model.GetManagedPrefixListEntriesResponse : AmazonWebServiceResponse {
    private List`1<PrefixListEntry> _entries;
    private string _nextToken;
    public List`1<PrefixListEntry> Entries { get; public set; }
    public string NextToken { get; public set; }
    public List`1<PrefixListEntry> get_Entries();
    public void set_Entries(List`1<PrefixListEntry> value);
    internal bool IsSetEntries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetNetworkInsightsAccessScopeAnalysisFindingsPaginator : object {
    private IAmazonEC2 _client;
    private GetNetworkInsightsAccessScopeAnalysisFindingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetNetworkInsightsAccessScopeAnalysisFindingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessScopeAnalysisFinding> AnalysisFindings { get; }
    internal GetNetworkInsightsAccessScopeAnalysisFindingsPaginator(IAmazonEC2 client, GetNetworkInsightsAccessScopeAnalysisFindingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetNetworkInsightsAccessScopeAnalysisFindingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AccessScopeAnalysisFinding> get_AnalysisFindings();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetNetworkInsightsAccessScopeAnalysisFindingsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetNetworkInsightsAccessScopeAnalysisFindingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetNetworkInsightsAccessScopeAnalysisFindingsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetNetworkInsightsAccessScopeAnalysisFindingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetNetworkInsightsAccessScopeAnalysisFindingsRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _networkInsightsAccessScopeAnalysisId;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInsightsAccessScopeAnalysisId { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NetworkInsightsAccessScopeAnalysisId();
    public void set_NetworkInsightsAccessScopeAnalysisId(string value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetNetworkInsightsAccessScopeAnalysisFindingsResponse : AmazonWebServiceResponse {
    private List`1<AccessScopeAnalysisFinding> _analysisFindings;
    private AnalysisStatus _analysisStatus;
    private string _networkInsightsAccessScopeAnalysisId;
    private string _nextToken;
    public List`1<AccessScopeAnalysisFinding> AnalysisFindings { get; public set; }
    public AnalysisStatus AnalysisStatus { get; public set; }
    public string NetworkInsightsAccessScopeAnalysisId { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AccessScopeAnalysisFinding> get_AnalysisFindings();
    public void set_AnalysisFindings(List`1<AccessScopeAnalysisFinding> value);
    internal bool IsSetAnalysisFindings();
    public AnalysisStatus get_AnalysisStatus();
    public void set_AnalysisStatus(AnalysisStatus value);
    internal bool IsSetAnalysisStatus();
    public string get_NetworkInsightsAccessScopeAnalysisId();
    public void set_NetworkInsightsAccessScopeAnalysisId(string value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetNetworkInsightsAccessScopeContentRequest : AmazonEC2Request {
    private string _networkInsightsAccessScopeId;
    [AWSPropertyAttribute]
public string NetworkInsightsAccessScopeId { get; public set; }
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
}
public class Amazon.EC2.Model.GetNetworkInsightsAccessScopeContentResponse : AmazonWebServiceResponse {
    private NetworkInsightsAccessScopeContent _networkInsightsAccessScopeContent;
    public NetworkInsightsAccessScopeContent NetworkInsightsAccessScopeContent { get; public set; }
    public NetworkInsightsAccessScopeContent get_NetworkInsightsAccessScopeContent();
    public void set_NetworkInsightsAccessScopeContent(NetworkInsightsAccessScopeContent value);
    internal bool IsSetNetworkInsightsAccessScopeContent();
}
public class Amazon.EC2.Model.GetPasswordDataRequest : AmazonEC2Request {
    private string _instanceId;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public GetPasswordDataRequest(string instanceId);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.GetPasswordDataResponse : AmazonWebServiceResponse {
    private string _instanceId;
    private string _passwordData;
    private Nullable`1<DateTime> _timestamp;
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string PasswordData { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public string GetDecryptedPassword(string rsaPrivateKey);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_PasswordData();
    public void set_PasswordData(string value);
    internal bool IsSetPasswordData();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest : AmazonEC2Request {
    private List`1<string> _reservedInstanceIds;
    private List`1<TargetConfigurationRequest> _targetConfigurations;
    [AWSPropertyAttribute]
public List`1<string> ReservedInstanceIds { get; public set; }
    public List`1<TargetConfigurationRequest> TargetConfigurations { get; public set; }
    public List`1<string> get_ReservedInstanceIds();
    public void set_ReservedInstanceIds(List`1<string> value);
    internal bool IsSetReservedInstanceIds();
    public List`1<TargetConfigurationRequest> get_TargetConfigurations();
    public void set_TargetConfigurations(List`1<TargetConfigurationRequest> value);
    internal bool IsSetTargetConfigurations();
}
public class Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse : AmazonWebServiceResponse {
    private string _currencyCode;
    private Nullable`1<bool> _isValidExchange;
    private Nullable`1<DateTime> _outputReservedInstancesWillExpireAt;
    private string _paymentDue;
    private ReservationValue _reservedInstanceValueRollup;
    private List`1<ReservedInstanceReservationValue> _reservedInstanceValueSet;
    private ReservationValue _targetConfigurationValueRollup;
    private List`1<TargetReservationValue> _targetConfigurationValueSet;
    private string _validationFailureReason;
    public string CurrencyCode { get; public set; }
    public Nullable`1<bool> IsValidExchange { get; public set; }
    public Nullable`1<DateTime> OutputReservedInstancesWillExpireAt { get; public set; }
    public string PaymentDue { get; public set; }
    public ReservationValue ReservedInstanceValueRollup { get; public set; }
    public List`1<ReservedInstanceReservationValue> ReservedInstanceValueSet { get; public set; }
    public ReservationValue TargetConfigurationValueRollup { get; public set; }
    public List`1<TargetReservationValue> TargetConfigurationValueSet { get; public set; }
    public string ValidationFailureReason { get; public set; }
    public string get_CurrencyCode();
    public void set_CurrencyCode(string value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<bool> get_IsValidExchange();
    public void set_IsValidExchange(Nullable`1<bool> value);
    internal bool IsSetIsValidExchange();
    public Nullable`1<DateTime> get_OutputReservedInstancesWillExpireAt();
    public void set_OutputReservedInstancesWillExpireAt(Nullable`1<DateTime> value);
    internal bool IsSetOutputReservedInstancesWillExpireAt();
    public string get_PaymentDue();
    public void set_PaymentDue(string value);
    internal bool IsSetPaymentDue();
    public ReservationValue get_ReservedInstanceValueRollup();
    public void set_ReservedInstanceValueRollup(ReservationValue value);
    internal bool IsSetReservedInstanceValueRollup();
    public List`1<ReservedInstanceReservationValue> get_ReservedInstanceValueSet();
    public void set_ReservedInstanceValueSet(List`1<ReservedInstanceReservationValue> value);
    internal bool IsSetReservedInstanceValueSet();
    public ReservationValue get_TargetConfigurationValueRollup();
    public void set_TargetConfigurationValueRollup(ReservationValue value);
    internal bool IsSetTargetConfigurationValueRollup();
    public List`1<TargetReservationValue> get_TargetConfigurationValueSet();
    public void set_TargetConfigurationValueSet(List`1<TargetReservationValue> value);
    internal bool IsSetTargetConfigurationValueSet();
    public string get_ValidationFailureReason();
    public void set_ValidationFailureReason(string value);
    internal bool IsSetValidationFailureReason();
}
internal class Amazon.EC2.Model.GetSecurityGroupsForVpcPaginator : object {
    private IAmazonEC2 _client;
    private GetSecurityGroupsForVpcRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetSecurityGroupsForVpcResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityGroupForVpc> SecurityGroupForVpcs { get; }
    internal GetSecurityGroupsForVpcPaginator(IAmazonEC2 client, GetSecurityGroupsForVpcRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetSecurityGroupsForVpcResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SecurityGroupForVpc> get_SecurityGroupForVpcs();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetSecurityGroupsForVpcPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetSecurityGroupsForVpcResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetSecurityGroupsForVpcResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetSecurityGroupsForVpcResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetSecurityGroupsForVpcRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _vpcId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.GetSecurityGroupsForVpcResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SecurityGroupForVpc> _securityGroupForVpcs;
    public string NextToken { get; public set; }
    public List`1<SecurityGroupForVpc> SecurityGroupForVpcs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SecurityGroupForVpc> get_SecurityGroupForVpcs();
    public void set_SecurityGroupForVpcs(List`1<SecurityGroupForVpc> value);
    internal bool IsSetSecurityGroupForVpcs();
}
public class Amazon.EC2.Model.GetSerialConsoleAccessStatusRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.GetSerialConsoleAccessStatusResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _serialConsoleAccessEnabled;
    public Nullable`1<bool> SerialConsoleAccessEnabled { get; public set; }
    public Nullable`1<bool> get_SerialConsoleAccessEnabled();
    public void set_SerialConsoleAccessEnabled(Nullable`1<bool> value);
    internal bool IsSetSerialConsoleAccessEnabled();
}
public class Amazon.EC2.Model.GetSnapshotBlockPublicAccessStateRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.GetSnapshotBlockPublicAccessStateResponse : AmazonWebServiceResponse {
    private SnapshotBlockPublicAccessState _state;
    public SnapshotBlockPublicAccessState State { get; public set; }
    public SnapshotBlockPublicAccessState get_State();
    public void set_State(SnapshotBlockPublicAccessState value);
    internal bool IsSetState();
}
internal class Amazon.EC2.Model.GetSpotPlacementScoresPaginator : object {
    private IAmazonEC2 _client;
    private GetSpotPlacementScoresRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetSpotPlacementScoresResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotPlacementScore> SpotPlacementScores { get; }
    internal GetSpotPlacementScoresPaginator(IAmazonEC2 client, GetSpotPlacementScoresRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetSpotPlacementScoresResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SpotPlacementScore> get_SpotPlacementScores();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetSpotPlacementScoresPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetSpotPlacementScoresResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetSpotPlacementScoresResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetSpotPlacementScoresResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetSpotPlacementScoresRequest : AmazonEC2Request {
    private InstanceRequirementsWithMetadataRequest _instanceRequirementsWithMetadata;
    private List`1<string> _instanceTypes;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _regionNames;
    private Nullable`1<bool> _singleAvailabilityZone;
    private Nullable`1<int> _targetCapacity;
    private TargetCapacityUnitType _targetCapacityUnitType;
    public InstanceRequirementsWithMetadataRequest InstanceRequirementsWithMetadata { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InstanceTypes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RegionNames { get; public set; }
    public Nullable`1<bool> SingleAvailabilityZone { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TargetCapacity { get; public set; }
    public TargetCapacityUnitType TargetCapacityUnitType { get; public set; }
    public InstanceRequirementsWithMetadataRequest get_InstanceRequirementsWithMetadata();
    public void set_InstanceRequirementsWithMetadata(InstanceRequirementsWithMetadataRequest value);
    internal bool IsSetInstanceRequirementsWithMetadata();
    public List`1<string> get_InstanceTypes();
    public void set_InstanceTypes(List`1<string> value);
    internal bool IsSetInstanceTypes();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_RegionNames();
    public void set_RegionNames(List`1<string> value);
    internal bool IsSetRegionNames();
    public Nullable`1<bool> get_SingleAvailabilityZone();
    public void set_SingleAvailabilityZone(Nullable`1<bool> value);
    internal bool IsSetSingleAvailabilityZone();
    public Nullable`1<int> get_TargetCapacity();
    public void set_TargetCapacity(Nullable`1<int> value);
    internal bool IsSetTargetCapacity();
    public TargetCapacityUnitType get_TargetCapacityUnitType();
    public void set_TargetCapacityUnitType(TargetCapacityUnitType value);
    internal bool IsSetTargetCapacityUnitType();
}
public class Amazon.EC2.Model.GetSpotPlacementScoresResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SpotPlacementScore> _spotPlacementScores;
    public string NextToken { get; public set; }
    public List`1<SpotPlacementScore> SpotPlacementScores { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SpotPlacementScore> get_SpotPlacementScores();
    public void set_SpotPlacementScores(List`1<SpotPlacementScore> value);
    internal bool IsSetSpotPlacementScores();
}
public class Amazon.EC2.Model.GetSubnetCidrReservationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _subnetId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.GetSubnetCidrReservationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SubnetCidrReservation> _subnetIpv4CidrReservations;
    private List`1<SubnetCidrReservation> _subnetIpv6CidrReservations;
    public string NextToken { get; public set; }
    public List`1<SubnetCidrReservation> SubnetIpv4CidrReservations { get; public set; }
    public List`1<SubnetCidrReservation> SubnetIpv6CidrReservations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SubnetCidrReservation> get_SubnetIpv4CidrReservations();
    public void set_SubnetIpv4CidrReservations(List`1<SubnetCidrReservation> value);
    internal bool IsSetSubnetIpv4CidrReservations();
    public List`1<SubnetCidrReservation> get_SubnetIpv6CidrReservations();
    public void set_SubnetIpv6CidrReservations(List`1<SubnetCidrReservation> value);
    internal bool IsSetSubnetIpv6CidrReservations();
}
internal class Amazon.EC2.Model.GetTransitGatewayAttachmentPropagationsPaginator : object {
    private IAmazonEC2 _client;
    private GetTransitGatewayAttachmentPropagationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTransitGatewayAttachmentPropagationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayAttachmentPropagation> TransitGatewayAttachmentPropagations { get; }
    internal GetTransitGatewayAttachmentPropagationsPaginator(IAmazonEC2 client, GetTransitGatewayAttachmentPropagationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTransitGatewayAttachmentPropagationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayAttachmentPropagation> get_TransitGatewayAttachmentPropagations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetTransitGatewayAttachmentPropagationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetTransitGatewayAttachmentPropagationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetTransitGatewayAttachmentPropagationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetTransitGatewayAttachmentPropagationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetTransitGatewayAttachmentPropagationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayAttachmentId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.GetTransitGatewayAttachmentPropagationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayAttachmentPropagation> _transitGatewayAttachmentPropagations;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayAttachmentPropagation> TransitGatewayAttachmentPropagations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayAttachmentPropagation> get_TransitGatewayAttachmentPropagations();
    public void set_TransitGatewayAttachmentPropagations(List`1<TransitGatewayAttachmentPropagation> value);
    internal bool IsSetTransitGatewayAttachmentPropagations();
}
internal class Amazon.EC2.Model.GetTransitGatewayMulticastDomainAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private GetTransitGatewayMulticastDomainAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTransitGatewayMulticastDomainAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayMulticastDomainAssociation> MulticastDomainAssociations { get; }
    internal GetTransitGatewayMulticastDomainAssociationsPaginator(IAmazonEC2 client, GetTransitGatewayMulticastDomainAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTransitGatewayMulticastDomainAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayMulticastDomainAssociation> get_MulticastDomainAssociations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetTransitGatewayMulticastDomainAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetTransitGatewayMulticastDomainAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetTransitGatewayMulticastDomainAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetTransitGatewayMulticastDomainAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetTransitGatewayMulticastDomainAssociationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayMulticastDomainId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.GetTransitGatewayMulticastDomainAssociationsResponse : AmazonWebServiceResponse {
    private List`1<TransitGatewayMulticastDomainAssociation> _multicastDomainAssociations;
    private string _nextToken;
    public List`1<TransitGatewayMulticastDomainAssociation> MulticastDomainAssociations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<TransitGatewayMulticastDomainAssociation> get_MulticastDomainAssociations();
    public void set_MulticastDomainAssociations(List`1<TransitGatewayMulticastDomainAssociation> value);
    internal bool IsSetMulticastDomainAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetTransitGatewayPolicyTableAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private GetTransitGatewayPolicyTableAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTransitGatewayPolicyTableAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPolicyTableAssociation> Associations { get; }
    internal GetTransitGatewayPolicyTableAssociationsPaginator(IAmazonEC2 client, GetTransitGatewayPolicyTableAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTransitGatewayPolicyTableAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayPolicyTableAssociation> get_Associations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetTransitGatewayPolicyTableAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetTransitGatewayPolicyTableAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetTransitGatewayPolicyTableAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetTransitGatewayPolicyTableAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetTransitGatewayPolicyTableAssociationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayPolicyTableId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayPolicyTableId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayPolicyTableId();
    public void set_TransitGatewayPolicyTableId(string value);
    internal bool IsSetTransitGatewayPolicyTableId();
}
public class Amazon.EC2.Model.GetTransitGatewayPolicyTableAssociationsResponse : AmazonWebServiceResponse {
    private List`1<TransitGatewayPolicyTableAssociation> _associations;
    private string _nextToken;
    public List`1<TransitGatewayPolicyTableAssociation> Associations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<TransitGatewayPolicyTableAssociation> get_Associations();
    public void set_Associations(List`1<TransitGatewayPolicyTableAssociation> value);
    internal bool IsSetAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetTransitGatewayPolicyTableEntriesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayPolicyTableId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayPolicyTableId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayPolicyTableId();
    public void set_TransitGatewayPolicyTableId(string value);
    internal bool IsSetTransitGatewayPolicyTableId();
}
public class Amazon.EC2.Model.GetTransitGatewayPolicyTableEntriesResponse : AmazonWebServiceResponse {
    private List`1<TransitGatewayPolicyTableEntry> _transitGatewayPolicyTableEntries;
    public List`1<TransitGatewayPolicyTableEntry> TransitGatewayPolicyTableEntries { get; public set; }
    public List`1<TransitGatewayPolicyTableEntry> get_TransitGatewayPolicyTableEntries();
    public void set_TransitGatewayPolicyTableEntries(List`1<TransitGatewayPolicyTableEntry> value);
    internal bool IsSetTransitGatewayPolicyTableEntries();
}
internal class Amazon.EC2.Model.GetTransitGatewayPrefixListReferencesPaginator : object {
    private IAmazonEC2 _client;
    private GetTransitGatewayPrefixListReferencesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTransitGatewayPrefixListReferencesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPrefixListReference> TransitGatewayPrefixListReferences { get; }
    internal GetTransitGatewayPrefixListReferencesPaginator(IAmazonEC2 client, GetTransitGatewayPrefixListReferencesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTransitGatewayPrefixListReferencesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayPrefixListReference> get_TransitGatewayPrefixListReferences();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetTransitGatewayPrefixListReferencesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetTransitGatewayPrefixListReferencesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetTransitGatewayPrefixListReferencesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetTransitGatewayPrefixListReferencesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetTransitGatewayPrefixListReferencesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayRouteTableId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.GetTransitGatewayPrefixListReferencesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayPrefixListReference> _transitGatewayPrefixListReferences;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayPrefixListReference> TransitGatewayPrefixListReferences { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayPrefixListReference> get_TransitGatewayPrefixListReferences();
    public void set_TransitGatewayPrefixListReferences(List`1<TransitGatewayPrefixListReference> value);
    internal bool IsSetTransitGatewayPrefixListReferences();
}
internal class Amazon.EC2.Model.GetTransitGatewayRouteTableAssociationsPaginator : object {
    private IAmazonEC2 _client;
    private GetTransitGatewayRouteTableAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTransitGatewayRouteTableAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTableAssociation> Associations { get; }
    internal GetTransitGatewayRouteTableAssociationsPaginator(IAmazonEC2 client, GetTransitGatewayRouteTableAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTransitGatewayRouteTableAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayRouteTableAssociation> get_Associations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetTransitGatewayRouteTableAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetTransitGatewayRouteTableAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetTransitGatewayRouteTableAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetTransitGatewayRouteTableAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetTransitGatewayRouteTableAssociationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayRouteTableId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.GetTransitGatewayRouteTableAssociationsResponse : AmazonWebServiceResponse {
    private List`1<TransitGatewayRouteTableAssociation> _associations;
    private string _nextToken;
    public List`1<TransitGatewayRouteTableAssociation> Associations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<TransitGatewayRouteTableAssociation> get_Associations();
    public void set_Associations(List`1<TransitGatewayRouteTableAssociation> value);
    internal bool IsSetAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.GetTransitGatewayRouteTablePropagationsPaginator : object {
    private IAmazonEC2 _client;
    private GetTransitGatewayRouteTablePropagationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTransitGatewayRouteTablePropagationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTablePropagation> TransitGatewayRouteTablePropagations { get; }
    internal GetTransitGatewayRouteTablePropagationsPaginator(IAmazonEC2 client, GetTransitGatewayRouteTablePropagationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTransitGatewayRouteTablePropagationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayRouteTablePropagation> get_TransitGatewayRouteTablePropagations();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetTransitGatewayRouteTablePropagationsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetTransitGatewayRouteTablePropagationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetTransitGatewayRouteTablePropagationsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetTransitGatewayRouteTablePropagationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetTransitGatewayRouteTablePropagationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayRouteTableId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.GetTransitGatewayRouteTablePropagationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TransitGatewayRouteTablePropagation> _transitGatewayRouteTablePropagations;
    public string NextToken { get; public set; }
    public List`1<TransitGatewayRouteTablePropagation> TransitGatewayRouteTablePropagations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TransitGatewayRouteTablePropagation> get_TransitGatewayRouteTablePropagations();
    public void set_TransitGatewayRouteTablePropagations(List`1<TransitGatewayRouteTablePropagation> value);
    internal bool IsSetTransitGatewayRouteTablePropagations();
}
public class Amazon.EC2.Model.GetVerifiedAccessEndpointPolicyRequest : AmazonEC2Request {
    private string _verifiedAccessEndpointId;
    [AWSPropertyAttribute]
public string VerifiedAccessEndpointId { get; public set; }
    public string get_VerifiedAccessEndpointId();
    public void set_VerifiedAccessEndpointId(string value);
    internal bool IsSetVerifiedAccessEndpointId();
}
public class Amazon.EC2.Model.GetVerifiedAccessEndpointPolicyResponse : AmazonWebServiceResponse {
    private string _policyDocument;
    private Nullable`1<bool> _policyEnabled;
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PolicyEnabled { get; public set; }
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PolicyEnabled();
    public void set_PolicyEnabled(Nullable`1<bool> value);
    internal bool IsSetPolicyEnabled();
}
public class Amazon.EC2.Model.GetVerifiedAccessGroupPolicyRequest : AmazonEC2Request {
    private string _verifiedAccessGroupId;
    [AWSPropertyAttribute]
public string VerifiedAccessGroupId { get; public set; }
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
}
public class Amazon.EC2.Model.GetVerifiedAccessGroupPolicyResponse : AmazonWebServiceResponse {
    private string _policyDocument;
    private Nullable`1<bool> _policyEnabled;
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PolicyEnabled { get; public set; }
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PolicyEnabled();
    public void set_PolicyEnabled(Nullable`1<bool> value);
    internal bool IsSetPolicyEnabled();
}
public class Amazon.EC2.Model.GetVpnConnectionDeviceSampleConfigurationRequest : AmazonEC2Request {
    private string _internetKeyExchangeVersion;
    private string _vpnConnectionDeviceTypeId;
    private string _vpnConnectionId;
    public string InternetKeyExchangeVersion { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionDeviceTypeId { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    public string get_InternetKeyExchangeVersion();
    public void set_InternetKeyExchangeVersion(string value);
    internal bool IsSetInternetKeyExchangeVersion();
    public string get_VpnConnectionDeviceTypeId();
    public void set_VpnConnectionDeviceTypeId(string value);
    internal bool IsSetVpnConnectionDeviceTypeId();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.GetVpnConnectionDeviceSampleConfigurationResponse : AmazonWebServiceResponse {
    private string _vpnConnectionDeviceSampleConfiguration;
    [AWSPropertyAttribute]
public string VpnConnectionDeviceSampleConfiguration { get; public set; }
    public string get_VpnConnectionDeviceSampleConfiguration();
    public void set_VpnConnectionDeviceSampleConfiguration(string value);
    internal bool IsSetVpnConnectionDeviceSampleConfiguration();
}
internal class Amazon.EC2.Model.GetVpnConnectionDeviceTypesPaginator : object {
    private IAmazonEC2 _client;
    private GetVpnConnectionDeviceTypesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetVpnConnectionDeviceTypesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpnConnectionDeviceType> VpnConnectionDeviceTypes { get; }
    internal GetVpnConnectionDeviceTypesPaginator(IAmazonEC2 client, GetVpnConnectionDeviceTypesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetVpnConnectionDeviceTypesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VpnConnectionDeviceType> get_VpnConnectionDeviceTypes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.GetVpnConnectionDeviceTypesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-GetVpnConnectionDeviceTypesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetVpnConnectionDeviceTypesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.GetVpnConnectionDeviceTypesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.GetVpnConnectionDeviceTypesRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.GetVpnConnectionDeviceTypesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VpnConnectionDeviceType> _vpnConnectionDeviceTypes;
    public string NextToken { get; public set; }
    public List`1<VpnConnectionDeviceType> VpnConnectionDeviceTypes { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VpnConnectionDeviceType> get_VpnConnectionDeviceTypes();
    public void set_VpnConnectionDeviceTypes(List`1<VpnConnectionDeviceType> value);
    internal bool IsSetVpnConnectionDeviceTypes();
}
public class Amazon.EC2.Model.GetVpnTunnelReplacementStatusRequest : AmazonEC2Request {
    private string _vpnConnectionId;
    private string _vpnTunnelOutsideIpAddress;
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    [AWSPropertyAttribute]
public string VpnTunnelOutsideIpAddress { get; public set; }
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnTunnelOutsideIpAddress();
    public void set_VpnTunnelOutsideIpAddress(string value);
    internal bool IsSetVpnTunnelOutsideIpAddress();
}
public class Amazon.EC2.Model.GetVpnTunnelReplacementStatusResponse : AmazonWebServiceResponse {
    private string _customerGatewayId;
    private MaintenanceDetails _maintenanceDetails;
    private string _transitGatewayId;
    private string _vpnConnectionId;
    private string _vpnGatewayId;
    private string _vpnTunnelOutsideIpAddress;
    public string CustomerGatewayId { get; public set; }
    public MaintenanceDetails MaintenanceDetails { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string VpnConnectionId { get; public set; }
    public string VpnGatewayId { get; public set; }
    public string VpnTunnelOutsideIpAddress { get; public set; }
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public MaintenanceDetails get_MaintenanceDetails();
    public void set_MaintenanceDetails(MaintenanceDetails value);
    internal bool IsSetMaintenanceDetails();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
    public string get_VpnTunnelOutsideIpAddress();
    public void set_VpnTunnelOutsideIpAddress(string value);
    internal bool IsSetVpnTunnelOutsideIpAddress();
}
public class Amazon.EC2.Model.GpuDeviceInfo : object {
    private Nullable`1<int> _count;
    private string _manufacturer;
    private GpuDeviceMemoryInfo _memoryInfo;
    private string _name;
    public Nullable`1<int> Count { get; public set; }
    public string Manufacturer { get; public set; }
    public GpuDeviceMemoryInfo MemoryInfo { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public string get_Manufacturer();
    public void set_Manufacturer(string value);
    internal bool IsSetManufacturer();
    public GpuDeviceMemoryInfo get_MemoryInfo();
    public void set_MemoryInfo(GpuDeviceMemoryInfo value);
    internal bool IsSetMemoryInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.GpuDeviceMemoryInfo : object {
    private Nullable`1<int> _sizeInMiB;
    public Nullable`1<int> SizeInMiB { get; public set; }
    public Nullable`1<int> get_SizeInMiB();
    public void set_SizeInMiB(Nullable`1<int> value);
    internal bool IsSetSizeInMiB();
}
public class Amazon.EC2.Model.GpuInfo : object {
    private List`1<GpuDeviceInfo> _gpus;
    private Nullable`1<int> _totalGpuMemoryInMiB;
    public List`1<GpuDeviceInfo> Gpus { get; public set; }
    public Nullable`1<int> TotalGpuMemoryInMiB { get; public set; }
    public List`1<GpuDeviceInfo> get_Gpus();
    public void set_Gpus(List`1<GpuDeviceInfo> value);
    internal bool IsSetGpus();
    public Nullable`1<int> get_TotalGpuMemoryInMiB();
    public void set_TotalGpuMemoryInMiB(Nullable`1<int> value);
    internal bool IsSetTotalGpuMemoryInMiB();
}
public class Amazon.EC2.Model.GroupIdentifier : object {
    private string _groupId;
    private string _groupName;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.HibernationOptions : object {
    private Nullable`1<bool> _configured;
    public Nullable`1<bool> Configured { get; public set; }
    public Nullable`1<bool> get_Configured();
    public void set_Configured(Nullable`1<bool> value);
    internal bool IsSetConfigured();
}
public class Amazon.EC2.Model.HibernationOptionsRequest : object {
    private Nullable`1<bool> _configured;
    public Nullable`1<bool> Configured { get; public set; }
    public Nullable`1<bool> get_Configured();
    public void set_Configured(Nullable`1<bool> value);
    internal bool IsSetConfigured();
}
public class Amazon.EC2.Model.HistoryRecord : object {
    private EventInformation _eventInformation;
    private EventType _eventType;
    private Nullable`1<DateTime> _timestamp;
    public EventInformation EventInformation { get; public set; }
    public EventType EventType { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public EventInformation get_EventInformation();
    public void set_EventInformation(EventInformation value);
    internal bool IsSetEventInformation();
    public EventType get_EventType();
    public void set_EventType(EventType value);
    internal bool IsSetEventType();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.HistoryRecordEntry : object {
    private EventInformation _eventInformation;
    private FleetEventType _eventType;
    private Nullable`1<DateTime> _timestamp;
    public EventInformation EventInformation { get; public set; }
    public FleetEventType EventType { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public EventInformation get_EventInformation();
    public void set_EventInformation(EventInformation value);
    internal bool IsSetEventInformation();
    public FleetEventType get_EventType();
    public void set_EventType(FleetEventType value);
    internal bool IsSetEventType();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.Host : object {
    private Nullable`1<DateTime> _allocationTime;
    private AllowsMultipleInstanceTypes _allowsMultipleInstanceTypes;
    private string _assetId;
    private AutoPlacement _autoPlacement;
    private string _availabilityZone;
    private string _availabilityZoneId;
    private AvailableCapacity _availableCapacity;
    private string _clientToken;
    private string _hostId;
    private HostMaintenance _hostMaintenance;
    private HostProperties _hostProperties;
    private HostRecovery _hostRecovery;
    private string _hostReservationId;
    private List`1<HostInstance> _instances;
    private Nullable`1<bool> _memberOfServiceLinkedResourceGroup;
    private string _outpostArn;
    private string _ownerId;
    private Nullable`1<DateTime> _releaseTime;
    private AllocationState _state;
    private List`1<Tag> _tags;
    public Nullable`1<DateTime> AllocationTime { get; public set; }
    public AllowsMultipleInstanceTypes AllowsMultipleInstanceTypes { get; public set; }
    public string AssetId { get; public set; }
    public AutoPlacement AutoPlacement { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string AvailabilityZoneId { get; public set; }
    public AvailableCapacity AvailableCapacity { get; public set; }
    public string ClientToken { get; public set; }
    public string HostId { get; public set; }
    public HostMaintenance HostMaintenance { get; public set; }
    public HostProperties HostProperties { get; public set; }
    public HostRecovery HostRecovery { get; public set; }
    public string HostReservationId { get; public set; }
    public List`1<HostInstance> Instances { get; public set; }
    public Nullable`1<bool> MemberOfServiceLinkedResourceGroup { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public Nullable`1<DateTime> ReleaseTime { get; public set; }
    public AllocationState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<DateTime> get_AllocationTime();
    public void set_AllocationTime(Nullable`1<DateTime> value);
    internal bool IsSetAllocationTime();
    public AllowsMultipleInstanceTypes get_AllowsMultipleInstanceTypes();
    public void set_AllowsMultipleInstanceTypes(AllowsMultipleInstanceTypes value);
    internal bool IsSetAllowsMultipleInstanceTypes();
    public string get_AssetId();
    public void set_AssetId(string value);
    internal bool IsSetAssetId();
    public AutoPlacement get_AutoPlacement();
    public void set_AutoPlacement(AutoPlacement value);
    internal bool IsSetAutoPlacement();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public AvailableCapacity get_AvailableCapacity();
    public void set_AvailableCapacity(AvailableCapacity value);
    internal bool IsSetAvailableCapacity();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_HostId();
    public void set_HostId(string value);
    internal bool IsSetHostId();
    public HostMaintenance get_HostMaintenance();
    public void set_HostMaintenance(HostMaintenance value);
    internal bool IsSetHostMaintenance();
    public HostProperties get_HostProperties();
    public void set_HostProperties(HostProperties value);
    internal bool IsSetHostProperties();
    public HostRecovery get_HostRecovery();
    public void set_HostRecovery(HostRecovery value);
    internal bool IsSetHostRecovery();
    public string get_HostReservationId();
    public void set_HostReservationId(string value);
    internal bool IsSetHostReservationId();
    public List`1<HostInstance> get_Instances();
    public void set_Instances(List`1<HostInstance> value);
    internal bool IsSetInstances();
    public Nullable`1<bool> get_MemberOfServiceLinkedResourceGroup();
    public void set_MemberOfServiceLinkedResourceGroup(Nullable`1<bool> value);
    internal bool IsSetMemberOfServiceLinkedResourceGroup();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public Nullable`1<DateTime> get_ReleaseTime();
    public void set_ReleaseTime(Nullable`1<DateTime> value);
    internal bool IsSetReleaseTime();
    public AllocationState get_State();
    public void set_State(AllocationState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.HostInstance : object {
    private string _instanceId;
    private string _instanceType;
    private string _ownerId;
    public string InstanceId { get; public set; }
    public string InstanceType { get; public set; }
    public string OwnerId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
}
public class Amazon.EC2.Model.HostOffering : object {
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<int> _duration;
    private string _hourlyPrice;
    private string _instanceFamily;
    private string _offeringId;
    private PaymentOption _paymentOption;
    private string _upfrontPrice;
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<int> Duration { get; public set; }
    public string HourlyPrice { get; public set; }
    public string InstanceFamily { get; public set; }
    public string OfferingId { get; public set; }
    public PaymentOption PaymentOption { get; public set; }
    public string UpfrontPrice { get; public set; }
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_HourlyPrice();
    public void set_HourlyPrice(string value);
    internal bool IsSetHourlyPrice();
    public string get_InstanceFamily();
    public void set_InstanceFamily(string value);
    internal bool IsSetInstanceFamily();
    public string get_OfferingId();
    public void set_OfferingId(string value);
    internal bool IsSetOfferingId();
    public PaymentOption get_PaymentOption();
    public void set_PaymentOption(PaymentOption value);
    internal bool IsSetPaymentOption();
    public string get_UpfrontPrice();
    public void set_UpfrontPrice(string value);
    internal bool IsSetUpfrontPrice();
}
public class Amazon.EC2.Model.HostProperties : object {
    private Nullable`1<int> _cores;
    private string _instanceFamily;
    private string _instanceType;
    private Nullable`1<int> _sockets;
    private Nullable`1<int> _totalVCpus;
    public Nullable`1<int> Cores { get; public set; }
    public string InstanceFamily { get; public set; }
    public string InstanceType { get; public set; }
    public Nullable`1<int> Sockets { get; public set; }
    public Nullable`1<int> TotalVCpus { get; public set; }
    public Nullable`1<int> get_Cores();
    public void set_Cores(Nullable`1<int> value);
    internal bool IsSetCores();
    public string get_InstanceFamily();
    public void set_InstanceFamily(string value);
    internal bool IsSetInstanceFamily();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public Nullable`1<int> get_Sockets();
    public void set_Sockets(Nullable`1<int> value);
    internal bool IsSetSockets();
    public Nullable`1<int> get_TotalVCpus();
    public void set_TotalVCpus(Nullable`1<int> value);
    internal bool IsSetTotalVCpus();
}
public class Amazon.EC2.Model.HostReservation : object {
    private Nullable`1<int> _count;
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<int> _duration;
    private Nullable`1<DateTime> _end;
    private List`1<string> _hostIdSet;
    private string _hostReservationId;
    private string _hourlyPrice;
    private string _instanceFamily;
    private string _offeringId;
    private PaymentOption _paymentOption;
    private Nullable`1<DateTime> _start;
    private ReservationState _state;
    private List`1<Tag> _tags;
    private string _upfrontPrice;
    public Nullable`1<int> Count { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<DateTime> End { get; public set; }
    public List`1<string> HostIdSet { get; public set; }
    public string HostReservationId { get; public set; }
    public string HourlyPrice { get; public set; }
    public string InstanceFamily { get; public set; }
    public string OfferingId { get; public set; }
    public PaymentOption PaymentOption { get; public set; }
    public Nullable`1<DateTime> Start { get; public set; }
    public ReservationState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string UpfrontPrice { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<DateTime> get_End();
    public void set_End(Nullable`1<DateTime> value);
    internal bool IsSetEnd();
    public List`1<string> get_HostIdSet();
    public void set_HostIdSet(List`1<string> value);
    internal bool IsSetHostIdSet();
    public string get_HostReservationId();
    public void set_HostReservationId(string value);
    internal bool IsSetHostReservationId();
    public string get_HourlyPrice();
    public void set_HourlyPrice(string value);
    internal bool IsSetHourlyPrice();
    public string get_InstanceFamily();
    public void set_InstanceFamily(string value);
    internal bool IsSetInstanceFamily();
    public string get_OfferingId();
    public void set_OfferingId(string value);
    internal bool IsSetOfferingId();
    public PaymentOption get_PaymentOption();
    public void set_PaymentOption(PaymentOption value);
    internal bool IsSetPaymentOption();
    public Nullable`1<DateTime> get_Start();
    public void set_Start(Nullable`1<DateTime> value);
    internal bool IsSetStart();
    public ReservationState get_State();
    public void set_State(ReservationState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_UpfrontPrice();
    public void set_UpfrontPrice(string value);
    internal bool IsSetUpfrontPrice();
}
public class Amazon.EC2.Model.IamInstanceProfile : object {
    private string _arn;
    private string _id;
    public string Arn { get; public set; }
    public string Id { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.EC2.Model.IamInstanceProfileAssociation : object {
    private string _associationId;
    private IamInstanceProfile _iamInstanceProfile;
    private string _instanceId;
    private IamInstanceProfileAssociationState _state;
    private Nullable`1<DateTime> _timestamp;
    public string AssociationId { get; public set; }
    public IamInstanceProfile IamInstanceProfile { get; public set; }
    public string InstanceId { get; public set; }
    public IamInstanceProfileAssociationState State { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public IamInstanceProfile get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfile value);
    internal bool IsSetIamInstanceProfile();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public IamInstanceProfileAssociationState get_State();
    public void set_State(IamInstanceProfileAssociationState value);
    internal bool IsSetState();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.IamInstanceProfileSpecification : object {
    private string _arn;
    private string _name;
    public string Arn { get; public set; }
    public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.IcmpTypeCode : object {
    private Nullable`1<int> _code;
    private Nullable`1<int> _type;
    public Nullable`1<int> Code { get; public set; }
    public Nullable`1<int> Type { get; public set; }
    public Nullable`1<int> get_Code();
    public void set_Code(Nullable`1<int> value);
    internal bool IsSetCode();
    public Nullable`1<int> get_Type();
    public void set_Type(Nullable`1<int> value);
    internal bool IsSetType();
}
public interface Amazon.EC2.Model.IDescribeAddressesAttributePaginator {
    public IPaginatedEnumerable`1<DescribeAddressesAttributeResponse> Responses { get; }
    public IPaginatedEnumerable`1<AddressAttribute> Addresses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAddressesAttributeResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AddressAttribute> get_Addresses();
}
public interface Amazon.EC2.Model.IDescribeAddressTransfersPaginator {
    public IPaginatedEnumerable`1<DescribeAddressTransfersResponse> Responses { get; }
    public IPaginatedEnumerable`1<AddressTransfer> AddressTransfers { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAddressTransfersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AddressTransfer> get_AddressTransfers();
}
public interface Amazon.EC2.Model.IDescribeAwsNetworkPerformanceMetricSubscriptionsPaginator {
    public IPaginatedEnumerable`1<DescribeAwsNetworkPerformanceMetricSubscriptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Subscription> Subscriptions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAwsNetworkPerformanceMetricSubscriptionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Subscription> get_Subscriptions();
}
public interface Amazon.EC2.Model.IDescribeByoipCidrsPaginator {
    public IPaginatedEnumerable`1<DescribeByoipCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ByoipCidr> ByoipCidrs { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeByoipCidrsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ByoipCidr> get_ByoipCidrs();
}
public interface Amazon.EC2.Model.IDescribeCapacityBlockOfferingsPaginator {
    public IPaginatedEnumerable`1<DescribeCapacityBlockOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityBlockOffering> CapacityBlockOfferings { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeCapacityBlockOfferingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CapacityBlockOffering> get_CapacityBlockOfferings();
}
public interface Amazon.EC2.Model.IDescribeCapacityReservationFleetsPaginator {
    public IPaginatedEnumerable`1<DescribeCapacityReservationFleetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityReservationFleet> CapacityReservationFleets { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeCapacityReservationFleetsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CapacityReservationFleet> get_CapacityReservationFleets();
}
public interface Amazon.EC2.Model.IDescribeCapacityReservationsPaginator {
    public IPaginatedEnumerable`1<DescribeCapacityReservationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityReservation> CapacityReservations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeCapacityReservationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CapacityReservation> get_CapacityReservations();
}
public interface Amazon.EC2.Model.IDescribeCarrierGatewaysPaginator {
    public IPaginatedEnumerable`1<DescribeCarrierGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<CarrierGateway> CarrierGateways { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeCarrierGatewaysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CarrierGateway> get_CarrierGateways();
}
public interface Amazon.EC2.Model.IDescribeClassicLinkInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeClassicLinkInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClassicLinkInstance> Instances { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeClassicLinkInstancesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClassicLinkInstance> get_Instances();
}
public interface Amazon.EC2.Model.IDescribeClientVpnAuthorizationRulesPaginator {
    public IPaginatedEnumerable`1<DescribeClientVpnAuthorizationRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<AuthorizationRule> AuthorizationRules { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeClientVpnAuthorizationRulesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AuthorizationRule> get_AuthorizationRules();
}
public interface Amazon.EC2.Model.IDescribeClientVpnConnectionsPaginator {
    public IPaginatedEnumerable`1<DescribeClientVpnConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpnConnection> Connections { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeClientVpnConnectionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClientVpnConnection> get_Connections();
}
public interface Amazon.EC2.Model.IDescribeClientVpnEndpointsPaginator {
    public IPaginatedEnumerable`1<DescribeClientVpnEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpnEndpoint> ClientVpnEndpoints { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeClientVpnEndpointsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClientVpnEndpoint> get_ClientVpnEndpoints();
}
public interface Amazon.EC2.Model.IDescribeClientVpnRoutesPaginator {
    public IPaginatedEnumerable`1<DescribeClientVpnRoutesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpnRoute> Routes { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeClientVpnRoutesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClientVpnRoute> get_Routes();
}
public interface Amazon.EC2.Model.IDescribeClientVpnTargetNetworksPaginator {
    public IPaginatedEnumerable`1<DescribeClientVpnTargetNetworksResponse> Responses { get; }
    public IPaginatedEnumerable`1<TargetNetwork> ClientVpnTargetNetworks { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeClientVpnTargetNetworksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TargetNetwork> get_ClientVpnTargetNetworks();
}
public interface Amazon.EC2.Model.IDescribeCoipPoolsPaginator {
    public IPaginatedEnumerable`1<DescribeCoipPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CoipPool> CoipPools { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeCoipPoolsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CoipPool> get_CoipPools();
}
public interface Amazon.EC2.Model.IDescribeDhcpOptionsPaginator {
    public IPaginatedEnumerable`1<DescribeDhcpOptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DhcpOptions> DhcpOptions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDhcpOptionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DhcpOptions> get_DhcpOptions();
}
public interface Amazon.EC2.Model.IDescribeEgressOnlyInternetGatewaysPaginator {
    public IPaginatedEnumerable`1<DescribeEgressOnlyInternetGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<EgressOnlyInternetGateway> EgressOnlyInternetGateways { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEgressOnlyInternetGatewaysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<EgressOnlyInternetGateway> get_EgressOnlyInternetGateways();
}
public interface Amazon.EC2.Model.IDescribeExportImageTasksPaginator {
    public IPaginatedEnumerable`1<DescribeExportImageTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ExportImageTask> ExportImageTasks { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeExportImageTasksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ExportImageTask> get_ExportImageTasks();
}
public interface Amazon.EC2.Model.IDescribeFastLaunchImagesPaginator {
    public IPaginatedEnumerable`1<DescribeFastLaunchImagesResponse> Responses { get; }
    public IPaginatedEnumerable`1<DescribeFastLaunchImagesSuccessItem> FastLaunchImages { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFastLaunchImagesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DescribeFastLaunchImagesSuccessItem> get_FastLaunchImages();
}
public interface Amazon.EC2.Model.IDescribeFastSnapshotRestoresPaginator {
    public IPaginatedEnumerable`1<DescribeFastSnapshotRestoresResponse> Responses { get; }
    public IPaginatedEnumerable`1<DescribeFastSnapshotRestoreSuccessItem> FastSnapshotRestores { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFastSnapshotRestoresResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DescribeFastSnapshotRestoreSuccessItem> get_FastSnapshotRestores();
}
public interface Amazon.EC2.Model.IDescribeFleetsPaginator {
    public IPaginatedEnumerable`1<DescribeFleetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FleetData> Fleets { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFleetsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FleetData> get_Fleets();
}
public interface Amazon.EC2.Model.IDescribeFlowLogsPaginator {
    public IPaginatedEnumerable`1<DescribeFlowLogsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FlowLog> FlowLogs { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFlowLogsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FlowLog> get_FlowLogs();
}
public interface Amazon.EC2.Model.IDescribeFpgaImagesPaginator {
    public IPaginatedEnumerable`1<DescribeFpgaImagesResponse> Responses { get; }
    public IPaginatedEnumerable`1<FpgaImage> FpgaImages { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFpgaImagesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FpgaImage> get_FpgaImages();
}
public interface Amazon.EC2.Model.IDescribeHostReservationOfferingsPaginator {
    public IPaginatedEnumerable`1<DescribeHostReservationOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<HostOffering> OfferingSet { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeHostReservationOfferingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<HostOffering> get_OfferingSet();
}
public interface Amazon.EC2.Model.IDescribeHostReservationsPaginator {
    public IPaginatedEnumerable`1<DescribeHostReservationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<HostReservation> HostReservationSet { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeHostReservationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<HostReservation> get_HostReservationSet();
}
public interface Amazon.EC2.Model.IDescribeHostsPaginator {
    public IPaginatedEnumerable`1<DescribeHostsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Host> Hosts { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeHostsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Host> get_Hosts();
}
public interface Amazon.EC2.Model.IDescribeIamInstanceProfileAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeIamInstanceProfileAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IamInstanceProfileAssociation> IamInstanceProfileAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeIamInstanceProfileAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IamInstanceProfileAssociation> get_IamInstanceProfileAssociations();
}
public interface Amazon.EC2.Model.IDescribeImagesPaginator {
    public IPaginatedEnumerable`1<DescribeImagesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Image> Images { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeImagesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Image> get_Images();
}
public interface Amazon.EC2.Model.IDescribeImportImageTasksPaginator {
    public IPaginatedEnumerable`1<DescribeImportImageTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportImageTask> ImportImageTasks { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeImportImageTasksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ImportImageTask> get_ImportImageTasks();
}
public interface Amazon.EC2.Model.IDescribeImportSnapshotTasksPaginator {
    public IPaginatedEnumerable`1<DescribeImportSnapshotTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportSnapshotTask> ImportSnapshotTasks { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeImportSnapshotTasksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ImportSnapshotTask> get_ImportSnapshotTasks();
}
public interface Amazon.EC2.Model.IDescribeInstanceConnectEndpointsPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceConnectEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ec2InstanceConnectEndpoint> InstanceConnectEndpoints { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceConnectEndpointsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Ec2InstanceConnectEndpoint> get_InstanceConnectEndpoints();
}
public interface Amazon.EC2.Model.IDescribeInstanceCreditSpecificationsPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceCreditSpecificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceCreditSpecification> InstanceCreditSpecifications { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceCreditSpecificationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceCreditSpecification> get_InstanceCreditSpecifications();
}
public interface Amazon.EC2.Model.IDescribeInstanceEventWindowsPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceEventWindowsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceEventWindow> InstanceEventWindows { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceEventWindowsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceEventWindow> get_InstanceEventWindows();
}
public interface Amazon.EC2.Model.IDescribeInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Reservation> Reservations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstancesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Reservation> get_Reservations();
}
public interface Amazon.EC2.Model.IDescribeInstanceStatusPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceStatus> InstanceStatuses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceStatusResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceStatus> get_InstanceStatuses();
}
public interface Amazon.EC2.Model.IDescribeInstanceTopologyPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceTopologyResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTopology> Instances { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceTopologyResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceTopology> get_Instances();
}
public interface Amazon.EC2.Model.IDescribeInstanceTypeOfferingsPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceTypeOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTypeOffering> InstanceTypeOfferings { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceTypeOfferingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceTypeOffering> get_InstanceTypeOfferings();
}
public interface Amazon.EC2.Model.IDescribeInstanceTypesPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceTypesResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTypeInfo> InstanceTypes { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceTypesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceTypeInfo> get_InstanceTypes();
}
public interface Amazon.EC2.Model.IDescribeInternetGatewaysPaginator {
    public IPaginatedEnumerable`1<DescribeInternetGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<InternetGateway> InternetGateways { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInternetGatewaysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InternetGateway> get_InternetGateways();
}
public interface Amazon.EC2.Model.IDescribeIpamPoolsPaginator {
    public IPaginatedEnumerable`1<DescribeIpamPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamPool> IpamPools { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeIpamPoolsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamPool> get_IpamPools();
}
public interface Amazon.EC2.Model.IDescribeIpamResourceDiscoveriesPaginator {
    public IPaginatedEnumerable`1<DescribeIpamResourceDiscoveriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamResourceDiscovery> IpamResourceDiscoveries { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeIpamResourceDiscoveriesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamResourceDiscovery> get_IpamResourceDiscoveries();
}
public interface Amazon.EC2.Model.IDescribeIpamResourceDiscoveryAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeIpamResourceDiscoveryAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamResourceDiscoveryAssociation> IpamResourceDiscoveryAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeIpamResourceDiscoveryAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamResourceDiscoveryAssociation> get_IpamResourceDiscoveryAssociations();
}
public interface Amazon.EC2.Model.IDescribeIpamScopesPaginator {
    public IPaginatedEnumerable`1<DescribeIpamScopesResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamScope> IpamScopes { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeIpamScopesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamScope> get_IpamScopes();
}
public interface Amazon.EC2.Model.IDescribeIpamsPaginator {
    public IPaginatedEnumerable`1<DescribeIpamsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ipam> Ipams { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeIpamsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Ipam> get_Ipams();
}
public interface Amazon.EC2.Model.IDescribeIpv6PoolsPaginator {
    public IPaginatedEnumerable`1<DescribeIpv6PoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ipv6Pool> Ipv6Pools { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeIpv6PoolsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Ipv6Pool> get_Ipv6Pools();
}
public interface Amazon.EC2.Model.IDescribeLaunchTemplatesPaginator {
    public IPaginatedEnumerable`1<DescribeLaunchTemplatesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LaunchTemplate> LaunchTemplates { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLaunchTemplatesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LaunchTemplate> get_LaunchTemplates();
}
public interface Amazon.EC2.Model.IDescribeLaunchTemplateVersionsPaginator {
    public IPaginatedEnumerable`1<DescribeLaunchTemplateVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LaunchTemplateVersion> LaunchTemplateVersions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLaunchTemplateVersionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LaunchTemplateVersion> get_LaunchTemplateVersions();
}
public interface Amazon.EC2.Model.IDescribeLocalGatewayRouteTablesPaginator {
    public IPaginatedEnumerable`1<DescribeLocalGatewayRouteTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRouteTable> LocalGatewayRouteTables { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLocalGatewayRouteTablesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LocalGatewayRouteTable> get_LocalGatewayRouteTables();
}
public interface Amazon.EC2.Model.IDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> LocalGatewayRouteTableVirtualInterfaceGroupAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LocalGatewayRouteTableVirtualInterfaceGroupAssociation> get_LocalGatewayRouteTableVirtualInterfaceGroupAssociations();
}
public interface Amazon.EC2.Model.IDescribeLocalGatewayRouteTableVpcAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVpcAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRouteTableVpcAssociation> LocalGatewayRouteTableVpcAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLocalGatewayRouteTableVpcAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LocalGatewayRouteTableVpcAssociation> get_LocalGatewayRouteTableVpcAssociations();
}
public interface Amazon.EC2.Model.IDescribeLocalGatewaysPaginator {
    public IPaginatedEnumerable`1<DescribeLocalGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGateway> LocalGateways { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLocalGatewaysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LocalGateway> get_LocalGateways();
}
public interface Amazon.EC2.Model.IDescribeLocalGatewayVirtualInterfaceGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfaceGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayVirtualInterfaceGroup> LocalGatewayVirtualInterfaceGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfaceGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LocalGatewayVirtualInterfaceGroup> get_LocalGatewayVirtualInterfaceGroups();
}
public interface Amazon.EC2.Model.IDescribeLocalGatewayVirtualInterfacesPaginator {
    public IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfacesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayVirtualInterface> LocalGatewayVirtualInterfaces { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLocalGatewayVirtualInterfacesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LocalGatewayVirtualInterface> get_LocalGatewayVirtualInterfaces();
}
public interface Amazon.EC2.Model.IDescribeMacHostsPaginator {
    public IPaginatedEnumerable`1<DescribeMacHostsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MacHost> MacHosts { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMacHostsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MacHost> get_MacHosts();
}
public interface Amazon.EC2.Model.IDescribeManagedPrefixListsPaginator {
    public IPaginatedEnumerable`1<DescribeManagedPrefixListsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ManagedPrefixList> PrefixLists { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeManagedPrefixListsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ManagedPrefixList> get_PrefixLists();
}
public interface Amazon.EC2.Model.IDescribeMovingAddressesPaginator {
    public IPaginatedEnumerable`1<DescribeMovingAddressesResponse> Responses { get; }
    public IPaginatedEnumerable`1<MovingAddressStatus> MovingAddressStatuses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMovingAddressesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MovingAddressStatus> get_MovingAddressStatuses();
}
public interface Amazon.EC2.Model.IDescribeNatGatewaysPaginator {
    public IPaginatedEnumerable`1<DescribeNatGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<NatGateway> NatGateways { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNatGatewaysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NatGateway> get_NatGateways();
}
public interface Amazon.EC2.Model.IDescribeNetworkAclsPaginator {
    public IPaginatedEnumerable`1<DescribeNetworkAclsResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkAcl> NetworkAcls { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNetworkAclsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NetworkAcl> get_NetworkAcls();
}
public interface Amazon.EC2.Model.IDescribeNetworkInsightsAccessScopeAnalysesPaginator {
    public IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopeAnalysesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsAccessScopeAnalysis> NetworkInsightsAccessScopeAnalyses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopeAnalysesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NetworkInsightsAccessScopeAnalysis> get_NetworkInsightsAccessScopeAnalyses();
}
public interface Amazon.EC2.Model.IDescribeNetworkInsightsAccessScopesPaginator {
    public IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsAccessScope> NetworkInsightsAccessScopes { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNetworkInsightsAccessScopesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NetworkInsightsAccessScope> get_NetworkInsightsAccessScopes();
}
public interface Amazon.EC2.Model.IDescribeNetworkInsightsAnalysesPaginator {
    public IPaginatedEnumerable`1<DescribeNetworkInsightsAnalysesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsAnalysis> NetworkInsightsAnalyses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNetworkInsightsAnalysesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NetworkInsightsAnalysis> get_NetworkInsightsAnalyses();
}
public interface Amazon.EC2.Model.IDescribeNetworkInsightsPathsPaginator {
    public IPaginatedEnumerable`1<DescribeNetworkInsightsPathsResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInsightsPath> NetworkInsightsPaths { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNetworkInsightsPathsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NetworkInsightsPath> get_NetworkInsightsPaths();
}
public interface Amazon.EC2.Model.IDescribeNetworkInterfacePermissionsPaginator {
    public IPaginatedEnumerable`1<DescribeNetworkInterfacePermissionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInterfacePermission> NetworkInterfacePermissions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNetworkInterfacePermissionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NetworkInterfacePermission> get_NetworkInterfacePermissions();
}
public interface Amazon.EC2.Model.IDescribeNetworkInterfacesPaginator {
    public IPaginatedEnumerable`1<DescribeNetworkInterfacesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NetworkInterface> NetworkInterfaces { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeNetworkInterfacesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NetworkInterface> get_NetworkInterfaces();
}
public interface Amazon.EC2.Model.IDescribePrefixListsPaginator {
    public IPaginatedEnumerable`1<DescribePrefixListsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrefixList> PrefixLists { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribePrefixListsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PrefixList> get_PrefixLists();
}
public interface Amazon.EC2.Model.IDescribePrincipalIdFormatPaginator {
    public IPaginatedEnumerable`1<DescribePrincipalIdFormatResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrincipalIdFormat> Principals { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribePrincipalIdFormatResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PrincipalIdFormat> get_Principals();
}
public interface Amazon.EC2.Model.IDescribePublicIpv4PoolsPaginator {
    public IPaginatedEnumerable`1<DescribePublicIpv4PoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PublicIpv4Pool> PublicIpv4Pools { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribePublicIpv4PoolsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PublicIpv4Pool> get_PublicIpv4Pools();
}
public interface Amazon.EC2.Model.IDescribeReplaceRootVolumeTasksPaginator {
    public IPaginatedEnumerable`1<DescribeReplaceRootVolumeTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReplaceRootVolumeTask> ReplaceRootVolumeTasks { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplaceRootVolumeTasksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ReplaceRootVolumeTask> get_ReplaceRootVolumeTasks();
}
public interface Amazon.EC2.Model.IDescribeReservedInstancesModificationsPaginator {
    public IPaginatedEnumerable`1<DescribeReservedInstancesModificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedInstancesModification> ReservedInstancesModifications { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReservedInstancesModificationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ReservedInstancesModification> get_ReservedInstancesModifications();
}
public interface Amazon.EC2.Model.IDescribeReservedInstancesOfferingsPaginator {
    public IPaginatedEnumerable`1<DescribeReservedInstancesOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedInstancesOffering> ReservedInstancesOfferings { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReservedInstancesOfferingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ReservedInstancesOffering> get_ReservedInstancesOfferings();
}
public interface Amazon.EC2.Model.IDescribeRouteTablesPaginator {
    public IPaginatedEnumerable`1<DescribeRouteTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<RouteTable> RouteTables { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeRouteTablesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<RouteTable> get_RouteTables();
}
public interface Amazon.EC2.Model.IDescribeScheduledInstanceAvailabilityPaginator {
    public IPaginatedEnumerable`1<DescribeScheduledInstanceAvailabilityResponse> Responses { get; }
    public IPaginatedEnumerable`1<ScheduledInstanceAvailability> ScheduledInstanceAvailabilitySet { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeScheduledInstanceAvailabilityResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ScheduledInstanceAvailability> get_ScheduledInstanceAvailabilitySet();
}
public interface Amazon.EC2.Model.IDescribeScheduledInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeScheduledInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ScheduledInstance> ScheduledInstanceSet { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeScheduledInstancesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ScheduledInstance> get_ScheduledInstanceSet();
}
public interface Amazon.EC2.Model.IDescribeSecurityGroupRulesPaginator {
    public IPaginatedEnumerable`1<DescribeSecurityGroupRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityGroupRule> SecurityGroupRules { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSecurityGroupRulesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SecurityGroupRule> get_SecurityGroupRules();
}
public interface Amazon.EC2.Model.IDescribeSecurityGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeSecurityGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityGroup> SecurityGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSecurityGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SecurityGroup> get_SecurityGroups();
}
public interface Amazon.EC2.Model.IDescribeSnapshotsPaginator {
    public IPaginatedEnumerable`1<DescribeSnapshotsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Snapshot> Snapshots { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSnapshotsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Snapshot> get_Snapshots();
}
public interface Amazon.EC2.Model.IDescribeSnapshotTierStatusPaginator {
    public IPaginatedEnumerable`1<DescribeSnapshotTierStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<SnapshotTierStatus> SnapshotTierStatuses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSnapshotTierStatusResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SnapshotTierStatus> get_SnapshotTierStatuses();
}
public interface Amazon.EC2.Model.IDescribeSpotFleetRequestsPaginator {
    public IPaginatedEnumerable`1<DescribeSpotFleetRequestsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotFleetRequestConfig> SpotFleetRequestConfigs { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSpotFleetRequestsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SpotFleetRequestConfig> get_SpotFleetRequestConfigs();
}
public interface Amazon.EC2.Model.IDescribeSpotInstanceRequestsPaginator {
    public IPaginatedEnumerable`1<DescribeSpotInstanceRequestsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotInstanceRequest> SpotInstanceRequests { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSpotInstanceRequestsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SpotInstanceRequest> get_SpotInstanceRequests();
}
public interface Amazon.EC2.Model.IDescribeSpotPriceHistoryPaginator {
    public IPaginatedEnumerable`1<DescribeSpotPriceHistoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotPrice> SpotPriceHistory { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSpotPriceHistoryResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SpotPrice> get_SpotPriceHistory();
}
public interface Amazon.EC2.Model.IDescribeStaleSecurityGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeStaleSecurityGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<StaleSecurityGroup> StaleSecurityGroupSet { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeStaleSecurityGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<StaleSecurityGroup> get_StaleSecurityGroupSet();
}
public interface Amazon.EC2.Model.IDescribeStoreImageTasksPaginator {
    public IPaginatedEnumerable`1<DescribeStoreImageTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<StoreImageTaskResult> StoreImageTaskResults { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeStoreImageTasksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<StoreImageTaskResult> get_StoreImageTaskResults();
}
public interface Amazon.EC2.Model.IDescribeSubnetsPaginator {
    public IPaginatedEnumerable`1<DescribeSubnetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Subnet> Subnets { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSubnetsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Subnet> get_Subnets();
}
public interface Amazon.EC2.Model.IDescribeTagsPaginator {
    public IPaginatedEnumerable`1<DescribeTagsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TagDescription> Tags { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTagsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TagDescription> get_Tags();
}
public interface Amazon.EC2.Model.IDescribeTrafficMirrorFiltersPaginator {
    public IPaginatedEnumerable`1<DescribeTrafficMirrorFiltersResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrafficMirrorFilter> TrafficMirrorFilters { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTrafficMirrorFiltersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TrafficMirrorFilter> get_TrafficMirrorFilters();
}
public interface Amazon.EC2.Model.IDescribeTrafficMirrorSessionsPaginator {
    public IPaginatedEnumerable`1<DescribeTrafficMirrorSessionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrafficMirrorSession> TrafficMirrorSessions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTrafficMirrorSessionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TrafficMirrorSession> get_TrafficMirrorSessions();
}
public interface Amazon.EC2.Model.IDescribeTrafficMirrorTargetsPaginator {
    public IPaginatedEnumerable`1<DescribeTrafficMirrorTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrafficMirrorTarget> TrafficMirrorTargets { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTrafficMirrorTargetsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TrafficMirrorTarget> get_TrafficMirrorTargets();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayAttachmentsPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayAttachmentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayAttachment> TransitGatewayAttachments { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayAttachmentsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayAttachment> get_TransitGatewayAttachments();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayConnectPeersPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayConnectPeersResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayConnectPeer> TransitGatewayConnectPeers { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayConnectPeersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayConnectPeer> get_TransitGatewayConnectPeers();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayConnectsPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayConnectsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayConnect> TransitGatewayConnects { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayConnectsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayConnect> get_TransitGatewayConnects();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayMulticastDomainsPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayMulticastDomainsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayMulticastDomain> TransitGatewayMulticastDomains { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayMulticastDomainsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayMulticastDomain> get_TransitGatewayMulticastDomains();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayPeeringAttachmentsPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayPeeringAttachmentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPeeringAttachment> TransitGatewayPeeringAttachments { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayPeeringAttachmentsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayPeeringAttachment> get_TransitGatewayPeeringAttachments();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayPolicyTablesPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayPolicyTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPolicyTable> TransitGatewayPolicyTables { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayPolicyTablesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayPolicyTable> get_TransitGatewayPolicyTables();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayRouteTableAnnouncementsPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayRouteTableAnnouncementsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTableAnnouncement> TransitGatewayRouteTableAnnouncements { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayRouteTableAnnouncementsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayRouteTableAnnouncement> get_TransitGatewayRouteTableAnnouncements();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayRouteTablesPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayRouteTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTable> TransitGatewayRouteTables { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayRouteTablesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayRouteTable> get_TransitGatewayRouteTables();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewaysPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGateway> TransitGateways { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewaysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGateway> get_TransitGateways();
}
public interface Amazon.EC2.Model.IDescribeTransitGatewayVpcAttachmentsPaginator {
    public IPaginatedEnumerable`1<DescribeTransitGatewayVpcAttachmentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayVpcAttachment> TransitGatewayVpcAttachments { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTransitGatewayVpcAttachmentsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayVpcAttachment> get_TransitGatewayVpcAttachments();
}
public interface Amazon.EC2.Model.IDescribeTrunkInterfaceAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeTrunkInterfaceAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrunkInterfaceAssociation> InterfaceAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTrunkInterfaceAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TrunkInterfaceAssociation> get_InterfaceAssociations();
}
public interface Amazon.EC2.Model.IDescribeVerifiedAccessEndpointsPaginator {
    public IPaginatedEnumerable`1<DescribeVerifiedAccessEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessEndpoint> VerifiedAccessEndpoints { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVerifiedAccessEndpointsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VerifiedAccessEndpoint> get_VerifiedAccessEndpoints();
}
public interface Amazon.EC2.Model.IDescribeVerifiedAccessGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeVerifiedAccessGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessGroup> VerifiedAccessGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVerifiedAccessGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VerifiedAccessGroup> get_VerifiedAccessGroups();
}
public interface Amazon.EC2.Model.IDescribeVerifiedAccessInstanceLoggingConfigurationsPaginator {
    public IPaginatedEnumerable`1<DescribeVerifiedAccessInstanceLoggingConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessInstanceLoggingConfiguration> LoggingConfigurations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVerifiedAccessInstanceLoggingConfigurationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VerifiedAccessInstanceLoggingConfiguration> get_LoggingConfigurations();
}
public interface Amazon.EC2.Model.IDescribeVerifiedAccessInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeVerifiedAccessInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessInstance> VerifiedAccessInstances { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVerifiedAccessInstancesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VerifiedAccessInstance> get_VerifiedAccessInstances();
}
public interface Amazon.EC2.Model.IDescribeVerifiedAccessTrustProvidersPaginator {
    public IPaginatedEnumerable`1<DescribeVerifiedAccessTrustProvidersResponse> Responses { get; }
    public IPaginatedEnumerable`1<VerifiedAccessTrustProvider> VerifiedAccessTrustProviders { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVerifiedAccessTrustProvidersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VerifiedAccessTrustProvider> get_VerifiedAccessTrustProviders();
}
public interface Amazon.EC2.Model.IDescribeVolumesModificationsPaginator {
    public IPaginatedEnumerable`1<DescribeVolumesModificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VolumeModification> VolumesModifications { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVolumesModificationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VolumeModification> get_VolumesModifications();
}
public interface Amazon.EC2.Model.IDescribeVolumesPaginator {
    public IPaginatedEnumerable`1<DescribeVolumesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Volume> Volumes { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVolumesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Volume> get_Volumes();
}
public interface Amazon.EC2.Model.IDescribeVolumeStatusPaginator {
    public IPaginatedEnumerable`1<DescribeVolumeStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<VolumeStatusItem> VolumeStatuses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVolumeStatusResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VolumeStatusItem> get_VolumeStatuses();
}
public interface Amazon.EC2.Model.IDescribeVpcClassicLinkDnsSupportPaginator {
    public IPaginatedEnumerable`1<DescribeVpcClassicLinkDnsSupportResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClassicLinkDnsSupport> Vpcs { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcClassicLinkDnsSupportResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClassicLinkDnsSupport> get_Vpcs();
}
public interface Amazon.EC2.Model.IDescribeVpcEndpointConnectionNotificationsPaginator {
    public IPaginatedEnumerable`1<DescribeVpcEndpointConnectionNotificationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ConnectionNotification> ConnectionNotificationSet { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcEndpointConnectionNotificationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ConnectionNotification> get_ConnectionNotificationSet();
}
public interface Amazon.EC2.Model.IDescribeVpcEndpointConnectionsPaginator {
    public IPaginatedEnumerable`1<DescribeVpcEndpointConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcEndpointConnection> VpcEndpointConnections { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcEndpointConnectionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VpcEndpointConnection> get_VpcEndpointConnections();
}
public interface Amazon.EC2.Model.IDescribeVpcEndpointServiceConfigurationsPaginator {
    public IPaginatedEnumerable`1<DescribeVpcEndpointServiceConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ServiceConfiguration> ServiceConfigurations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcEndpointServiceConfigurationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ServiceConfiguration> get_ServiceConfigurations();
}
public interface Amazon.EC2.Model.IDescribeVpcEndpointServicePermissionsPaginator {
    public IPaginatedEnumerable`1<DescribeVpcEndpointServicePermissionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AllowedPrincipal> AllowedPrincipals { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcEndpointServicePermissionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AllowedPrincipal> get_AllowedPrincipals();
}
public interface Amazon.EC2.Model.IDescribeVpcEndpointsPaginator {
    public IPaginatedEnumerable`1<DescribeVpcEndpointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcEndpoint> VpcEndpoints { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcEndpointsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VpcEndpoint> get_VpcEndpoints();
}
public interface Amazon.EC2.Model.IDescribeVpcPeeringConnectionsPaginator {
    public IPaginatedEnumerable`1<DescribeVpcPeeringConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcPeeringConnection> VpcPeeringConnections { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcPeeringConnectionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VpcPeeringConnection> get_VpcPeeringConnections();
}
public interface Amazon.EC2.Model.IDescribeVpcsPaginator {
    public IPaginatedEnumerable`1<DescribeVpcsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Vpc> Vpcs { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVpcsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Vpc> get_Vpcs();
}
public class Amazon.EC2.Model.IdFormat : object {
    private Nullable`1<DateTime> _deadline;
    private string _resource;
    private Nullable`1<bool> _useLongIds;
    public Nullable`1<DateTime> Deadline { get; public set; }
    public string Resource { get; public set; }
    public Nullable`1<bool> UseLongIds { get; public set; }
    public Nullable`1<DateTime> get_Deadline();
    public void set_Deadline(Nullable`1<DateTime> value);
    internal bool IsSetDeadline();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public Nullable`1<bool> get_UseLongIds();
    public void set_UseLongIds(Nullable`1<bool> value);
    internal bool IsSetUseLongIds();
}
public interface Amazon.EC2.Model.IEC2PaginatorFactory {
    public abstract virtual IDescribeAddressesAttributePaginator DescribeAddressesAttribute(DescribeAddressesAttributeRequest request);
    public abstract virtual IDescribeAddressTransfersPaginator DescribeAddressTransfers(DescribeAddressTransfersRequest request);
    public abstract virtual IDescribeAwsNetworkPerformanceMetricSubscriptionsPaginator DescribeAwsNetworkPerformanceMetricSubscriptions(DescribeAwsNetworkPerformanceMetricSubscriptionsRequest request);
    public abstract virtual IDescribeByoipCidrsPaginator DescribeByoipCidrs(DescribeByoipCidrsRequest request);
    public abstract virtual IDescribeCapacityBlockOfferingsPaginator DescribeCapacityBlockOfferings(DescribeCapacityBlockOfferingsRequest request);
    public abstract virtual IDescribeCapacityReservationFleetsPaginator DescribeCapacityReservationFleets(DescribeCapacityReservationFleetsRequest request);
    public abstract virtual IDescribeCapacityReservationsPaginator DescribeCapacityReservations(DescribeCapacityReservationsRequest request);
    public abstract virtual IDescribeCarrierGatewaysPaginator DescribeCarrierGateways(DescribeCarrierGatewaysRequest request);
    public abstract virtual IDescribeClassicLinkInstancesPaginator DescribeClassicLinkInstances(DescribeClassicLinkInstancesRequest request);
    public abstract virtual IDescribeClientVpnAuthorizationRulesPaginator DescribeClientVpnAuthorizationRules(DescribeClientVpnAuthorizationRulesRequest request);
    public abstract virtual IDescribeClientVpnConnectionsPaginator DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request);
    public abstract virtual IDescribeClientVpnEndpointsPaginator DescribeClientVpnEndpoints(DescribeClientVpnEndpointsRequest request);
    public abstract virtual IDescribeClientVpnRoutesPaginator DescribeClientVpnRoutes(DescribeClientVpnRoutesRequest request);
    public abstract virtual IDescribeClientVpnTargetNetworksPaginator DescribeClientVpnTargetNetworks(DescribeClientVpnTargetNetworksRequest request);
    public abstract virtual IDescribeCoipPoolsPaginator DescribeCoipPools(DescribeCoipPoolsRequest request);
    public abstract virtual IDescribeDhcpOptionsPaginator DescribeDhcpOptions(DescribeDhcpOptionsRequest request);
    public abstract virtual IDescribeEgressOnlyInternetGatewaysPaginator DescribeEgressOnlyInternetGateways(DescribeEgressOnlyInternetGatewaysRequest request);
    public abstract virtual IDescribeExportImageTasksPaginator DescribeExportImageTasks(DescribeExportImageTasksRequest request);
    public abstract virtual IDescribeFastLaunchImagesPaginator DescribeFastLaunchImages(DescribeFastLaunchImagesRequest request);
    public abstract virtual IDescribeFastSnapshotRestoresPaginator DescribeFastSnapshotRestores(DescribeFastSnapshotRestoresRequest request);
    public abstract virtual IDescribeFleetsPaginator DescribeFleets(DescribeFleetsRequest request);
    public abstract virtual IDescribeFlowLogsPaginator DescribeFlowLogs(DescribeFlowLogsRequest request);
    public abstract virtual IDescribeFpgaImagesPaginator DescribeFpgaImages(DescribeFpgaImagesRequest request);
    public abstract virtual IDescribeHostReservationOfferingsPaginator DescribeHostReservationOfferings(DescribeHostReservationOfferingsRequest request);
    public abstract virtual IDescribeHostReservationsPaginator DescribeHostReservations(DescribeHostReservationsRequest request);
    public abstract virtual IDescribeHostsPaginator DescribeHosts(DescribeHostsRequest request);
    public abstract virtual IDescribeIamInstanceProfileAssociationsPaginator DescribeIamInstanceProfileAssociations(DescribeIamInstanceProfileAssociationsRequest request);
    public abstract virtual IDescribeImagesPaginator DescribeImages(DescribeImagesRequest request);
    public abstract virtual IDescribeImportImageTasksPaginator DescribeImportImageTasks(DescribeImportImageTasksRequest request);
    public abstract virtual IDescribeImportSnapshotTasksPaginator DescribeImportSnapshotTasks(DescribeImportSnapshotTasksRequest request);
    public abstract virtual IDescribeInstanceConnectEndpointsPaginator DescribeInstanceConnectEndpoints(DescribeInstanceConnectEndpointsRequest request);
    public abstract virtual IDescribeInstanceCreditSpecificationsPaginator DescribeInstanceCreditSpecifications(DescribeInstanceCreditSpecificationsRequest request);
    public abstract virtual IDescribeInstanceEventWindowsPaginator DescribeInstanceEventWindows(DescribeInstanceEventWindowsRequest request);
    public abstract virtual IDescribeInstancesPaginator DescribeInstances(DescribeInstancesRequest request);
    public abstract virtual IDescribeInstanceStatusPaginator DescribeInstanceStatus(DescribeInstanceStatusRequest request);
    public abstract virtual IDescribeInstanceTopologyPaginator DescribeInstanceTopology(DescribeInstanceTopologyRequest request);
    public abstract virtual IDescribeInstanceTypeOfferingsPaginator DescribeInstanceTypeOfferings(DescribeInstanceTypeOfferingsRequest request);
    public abstract virtual IDescribeInstanceTypesPaginator DescribeInstanceTypes(DescribeInstanceTypesRequest request);
    public abstract virtual IDescribeInternetGatewaysPaginator DescribeInternetGateways(DescribeInternetGatewaysRequest request);
    public abstract virtual IDescribeIpamPoolsPaginator DescribeIpamPools(DescribeIpamPoolsRequest request);
    public abstract virtual IDescribeIpamResourceDiscoveriesPaginator DescribeIpamResourceDiscoveries(DescribeIpamResourceDiscoveriesRequest request);
    public abstract virtual IDescribeIpamResourceDiscoveryAssociationsPaginator DescribeIpamResourceDiscoveryAssociations(DescribeIpamResourceDiscoveryAssociationsRequest request);
    public abstract virtual IDescribeIpamsPaginator DescribeIpams(DescribeIpamsRequest request);
    public abstract virtual IDescribeIpamScopesPaginator DescribeIpamScopes(DescribeIpamScopesRequest request);
    public abstract virtual IDescribeIpv6PoolsPaginator DescribeIpv6Pools(DescribeIpv6PoolsRequest request);
    public abstract virtual IDescribeLaunchTemplatesPaginator DescribeLaunchTemplates(DescribeLaunchTemplatesRequest request);
    public abstract virtual IDescribeLaunchTemplateVersionsPaginator DescribeLaunchTemplateVersions(DescribeLaunchTemplateVersionsRequest request);
    public abstract virtual IDescribeLocalGatewayRouteTablesPaginator DescribeLocalGatewayRouteTables(DescribeLocalGatewayRouteTablesRequest request);
    public abstract virtual IDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsPaginator DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request);
    public abstract virtual IDescribeLocalGatewayRouteTableVpcAssociationsPaginator DescribeLocalGatewayRouteTableVpcAssociations(DescribeLocalGatewayRouteTableVpcAssociationsRequest request);
    public abstract virtual IDescribeLocalGatewaysPaginator DescribeLocalGateways(DescribeLocalGatewaysRequest request);
    public abstract virtual IDescribeLocalGatewayVirtualInterfaceGroupsPaginator DescribeLocalGatewayVirtualInterfaceGroups(DescribeLocalGatewayVirtualInterfaceGroupsRequest request);
    public abstract virtual IDescribeLocalGatewayVirtualInterfacesPaginator DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request);
    public abstract virtual IDescribeMacHostsPaginator DescribeMacHosts(DescribeMacHostsRequest request);
    public abstract virtual IDescribeManagedPrefixListsPaginator DescribeManagedPrefixLists(DescribeManagedPrefixListsRequest request);
    public abstract virtual IDescribeMovingAddressesPaginator DescribeMovingAddresses(DescribeMovingAddressesRequest request);
    public abstract virtual IDescribeNatGatewaysPaginator DescribeNatGateways(DescribeNatGatewaysRequest request);
    public abstract virtual IDescribeNetworkAclsPaginator DescribeNetworkAcls(DescribeNetworkAclsRequest request);
    public abstract virtual IDescribeNetworkInsightsAccessScopeAnalysesPaginator DescribeNetworkInsightsAccessScopeAnalyses(DescribeNetworkInsightsAccessScopeAnalysesRequest request);
    public abstract virtual IDescribeNetworkInsightsAccessScopesPaginator DescribeNetworkInsightsAccessScopes(DescribeNetworkInsightsAccessScopesRequest request);
    public abstract virtual IDescribeNetworkInsightsAnalysesPaginator DescribeNetworkInsightsAnalyses(DescribeNetworkInsightsAnalysesRequest request);
    public abstract virtual IDescribeNetworkInsightsPathsPaginator DescribeNetworkInsightsPaths(DescribeNetworkInsightsPathsRequest request);
    public abstract virtual IDescribeNetworkInterfacePermissionsPaginator DescribeNetworkInterfacePermissions(DescribeNetworkInterfacePermissionsRequest request);
    public abstract virtual IDescribeNetworkInterfacesPaginator DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request);
    public abstract virtual IDescribePrefixListsPaginator DescribePrefixLists(DescribePrefixListsRequest request);
    public abstract virtual IDescribePrincipalIdFormatPaginator DescribePrincipalIdFormat(DescribePrincipalIdFormatRequest request);
    public abstract virtual IDescribePublicIpv4PoolsPaginator DescribePublicIpv4Pools(DescribePublicIpv4PoolsRequest request);
    public abstract virtual IDescribeReplaceRootVolumeTasksPaginator DescribeReplaceRootVolumeTasks(DescribeReplaceRootVolumeTasksRequest request);
    public abstract virtual IDescribeReservedInstancesModificationsPaginator DescribeReservedInstancesModifications(DescribeReservedInstancesModificationsRequest request);
    public abstract virtual IDescribeReservedInstancesOfferingsPaginator DescribeReservedInstancesOfferings(DescribeReservedInstancesOfferingsRequest request);
    public abstract virtual IDescribeRouteTablesPaginator DescribeRouteTables(DescribeRouteTablesRequest request);
    public abstract virtual IDescribeScheduledInstanceAvailabilityPaginator DescribeScheduledInstanceAvailability(DescribeScheduledInstanceAvailabilityRequest request);
    public abstract virtual IDescribeScheduledInstancesPaginator DescribeScheduledInstances(DescribeScheduledInstancesRequest request);
    public abstract virtual IDescribeSecurityGroupRulesPaginator DescribeSecurityGroupRules(DescribeSecurityGroupRulesRequest request);
    public abstract virtual IDescribeSecurityGroupsPaginator DescribeSecurityGroups(DescribeSecurityGroupsRequest request);
    public abstract virtual IDescribeSnapshotsPaginator DescribeSnapshots(DescribeSnapshotsRequest request);
    public abstract virtual IDescribeSnapshotTierStatusPaginator DescribeSnapshotTierStatus(DescribeSnapshotTierStatusRequest request);
    public abstract virtual IDescribeSpotFleetRequestsPaginator DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request);
    public abstract virtual IDescribeSpotInstanceRequestsPaginator DescribeSpotInstanceRequests(DescribeSpotInstanceRequestsRequest request);
    public abstract virtual IDescribeSpotPriceHistoryPaginator DescribeSpotPriceHistory(DescribeSpotPriceHistoryRequest request);
    public abstract virtual IDescribeStaleSecurityGroupsPaginator DescribeStaleSecurityGroups(DescribeStaleSecurityGroupsRequest request);
    public abstract virtual IDescribeStoreImageTasksPaginator DescribeStoreImageTasks(DescribeStoreImageTasksRequest request);
    public abstract virtual IDescribeSubnetsPaginator DescribeSubnets(DescribeSubnetsRequest request);
    public abstract virtual IDescribeTagsPaginator DescribeTags(DescribeTagsRequest request);
    public abstract virtual IDescribeTrafficMirrorFiltersPaginator DescribeTrafficMirrorFilters(DescribeTrafficMirrorFiltersRequest request);
    public abstract virtual IDescribeTrafficMirrorSessionsPaginator DescribeTrafficMirrorSessions(DescribeTrafficMirrorSessionsRequest request);
    public abstract virtual IDescribeTrafficMirrorTargetsPaginator DescribeTrafficMirrorTargets(DescribeTrafficMirrorTargetsRequest request);
    public abstract virtual IDescribeTransitGatewayAttachmentsPaginator DescribeTransitGatewayAttachments(DescribeTransitGatewayAttachmentsRequest request);
    public abstract virtual IDescribeTransitGatewayConnectPeersPaginator DescribeTransitGatewayConnectPeers(DescribeTransitGatewayConnectPeersRequest request);
    public abstract virtual IDescribeTransitGatewayConnectsPaginator DescribeTransitGatewayConnects(DescribeTransitGatewayConnectsRequest request);
    public abstract virtual IDescribeTransitGatewayMulticastDomainsPaginator DescribeTransitGatewayMulticastDomains(DescribeTransitGatewayMulticastDomainsRequest request);
    public abstract virtual IDescribeTransitGatewayPeeringAttachmentsPaginator DescribeTransitGatewayPeeringAttachments(DescribeTransitGatewayPeeringAttachmentsRequest request);
    public abstract virtual IDescribeTransitGatewayPolicyTablesPaginator DescribeTransitGatewayPolicyTables(DescribeTransitGatewayPolicyTablesRequest request);
    public abstract virtual IDescribeTransitGatewayRouteTableAnnouncementsPaginator DescribeTransitGatewayRouteTableAnnouncements(DescribeTransitGatewayRouteTableAnnouncementsRequest request);
    public abstract virtual IDescribeTransitGatewayRouteTablesPaginator DescribeTransitGatewayRouteTables(DescribeTransitGatewayRouteTablesRequest request);
    public abstract virtual IDescribeTransitGatewaysPaginator DescribeTransitGateways(DescribeTransitGatewaysRequest request);
    public abstract virtual IDescribeTransitGatewayVpcAttachmentsPaginator DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request);
    public abstract virtual IDescribeTrunkInterfaceAssociationsPaginator DescribeTrunkInterfaceAssociations(DescribeTrunkInterfaceAssociationsRequest request);
    public abstract virtual IDescribeVerifiedAccessEndpointsPaginator DescribeVerifiedAccessEndpoints(DescribeVerifiedAccessEndpointsRequest request);
    public abstract virtual IDescribeVerifiedAccessGroupsPaginator DescribeVerifiedAccessGroups(DescribeVerifiedAccessGroupsRequest request);
    public abstract virtual IDescribeVerifiedAccessInstanceLoggingConfigurationsPaginator DescribeVerifiedAccessInstanceLoggingConfigurations(DescribeVerifiedAccessInstanceLoggingConfigurationsRequest request);
    public abstract virtual IDescribeVerifiedAccessInstancesPaginator DescribeVerifiedAccessInstances(DescribeVerifiedAccessInstancesRequest request);
    public abstract virtual IDescribeVerifiedAccessTrustProvidersPaginator DescribeVerifiedAccessTrustProviders(DescribeVerifiedAccessTrustProvidersRequest request);
    public abstract virtual IDescribeVolumesPaginator DescribeVolumes(DescribeVolumesRequest request);
    public abstract virtual IDescribeVolumesModificationsPaginator DescribeVolumesModifications(DescribeVolumesModificationsRequest request);
    public abstract virtual IDescribeVolumeStatusPaginator DescribeVolumeStatus(DescribeVolumeStatusRequest request);
    public abstract virtual IDescribeVpcClassicLinkDnsSupportPaginator DescribeVpcClassicLinkDnsSupport(DescribeVpcClassicLinkDnsSupportRequest request);
    public abstract virtual IDescribeVpcEndpointConnectionNotificationsPaginator DescribeVpcEndpointConnectionNotifications(DescribeVpcEndpointConnectionNotificationsRequest request);
    public abstract virtual IDescribeVpcEndpointConnectionsPaginator DescribeVpcEndpointConnections(DescribeVpcEndpointConnectionsRequest request);
    public abstract virtual IDescribeVpcEndpointsPaginator DescribeVpcEndpoints(DescribeVpcEndpointsRequest request);
    public abstract virtual IDescribeVpcEndpointServiceConfigurationsPaginator DescribeVpcEndpointServiceConfigurations(DescribeVpcEndpointServiceConfigurationsRequest request);
    public abstract virtual IDescribeVpcEndpointServicePermissionsPaginator DescribeVpcEndpointServicePermissions(DescribeVpcEndpointServicePermissionsRequest request);
    public abstract virtual IDescribeVpcPeeringConnectionsPaginator DescribeVpcPeeringConnections(DescribeVpcPeeringConnectionsRequest request);
    public abstract virtual IDescribeVpcsPaginator DescribeVpcs(DescribeVpcsRequest request);
    public abstract virtual IGetAssociatedIpv6PoolCidrsPaginator GetAssociatedIpv6PoolCidrs(GetAssociatedIpv6PoolCidrsRequest request);
    public abstract virtual IGetAwsNetworkPerformanceDataPaginator GetAwsNetworkPerformanceData(GetAwsNetworkPerformanceDataRequest request);
    public abstract virtual IGetGroupsForCapacityReservationPaginator GetGroupsForCapacityReservation(GetGroupsForCapacityReservationRequest request);
    public abstract virtual IGetInstanceTypesFromInstanceRequirementsPaginator GetInstanceTypesFromInstanceRequirements(GetInstanceTypesFromInstanceRequirementsRequest request);
    public abstract virtual IGetIpamAddressHistoryPaginator GetIpamAddressHistory(GetIpamAddressHistoryRequest request);
    public abstract virtual IGetIpamDiscoveredAccountsPaginator GetIpamDiscoveredAccounts(GetIpamDiscoveredAccountsRequest request);
    public abstract virtual IGetIpamDiscoveredResourceCidrsPaginator GetIpamDiscoveredResourceCidrs(GetIpamDiscoveredResourceCidrsRequest request);
    public abstract virtual IGetIpamPoolAllocationsPaginator GetIpamPoolAllocations(GetIpamPoolAllocationsRequest request);
    public abstract virtual IGetIpamPoolCidrsPaginator GetIpamPoolCidrs(GetIpamPoolCidrsRequest request);
    public abstract virtual IGetIpamResourceCidrsPaginator GetIpamResourceCidrs(GetIpamResourceCidrsRequest request);
    public abstract virtual IGetManagedPrefixListAssociationsPaginator GetManagedPrefixListAssociations(GetManagedPrefixListAssociationsRequest request);
    public abstract virtual IGetManagedPrefixListEntriesPaginator GetManagedPrefixListEntries(GetManagedPrefixListEntriesRequest request);
    public abstract virtual IGetNetworkInsightsAccessScopeAnalysisFindingsPaginator GetNetworkInsightsAccessScopeAnalysisFindings(GetNetworkInsightsAccessScopeAnalysisFindingsRequest request);
    public abstract virtual IGetSecurityGroupsForVpcPaginator GetSecurityGroupsForVpc(GetSecurityGroupsForVpcRequest request);
    public abstract virtual IGetSpotPlacementScoresPaginator GetSpotPlacementScores(GetSpotPlacementScoresRequest request);
    public abstract virtual IGetTransitGatewayAttachmentPropagationsPaginator GetTransitGatewayAttachmentPropagations(GetTransitGatewayAttachmentPropagationsRequest request);
    public abstract virtual IGetTransitGatewayMulticastDomainAssociationsPaginator GetTransitGatewayMulticastDomainAssociations(GetTransitGatewayMulticastDomainAssociationsRequest request);
    public abstract virtual IGetTransitGatewayPolicyTableAssociationsPaginator GetTransitGatewayPolicyTableAssociations(GetTransitGatewayPolicyTableAssociationsRequest request);
    public abstract virtual IGetTransitGatewayPrefixListReferencesPaginator GetTransitGatewayPrefixListReferences(GetTransitGatewayPrefixListReferencesRequest request);
    public abstract virtual IGetTransitGatewayRouteTableAssociationsPaginator GetTransitGatewayRouteTableAssociations(GetTransitGatewayRouteTableAssociationsRequest request);
    public abstract virtual IGetTransitGatewayRouteTablePropagationsPaginator GetTransitGatewayRouteTablePropagations(GetTransitGatewayRouteTablePropagationsRequest request);
    public abstract virtual IGetVpnConnectionDeviceTypesPaginator GetVpnConnectionDeviceTypes(GetVpnConnectionDeviceTypesRequest request);
    public abstract virtual IListImagesInRecycleBinPaginator ListImagesInRecycleBin(ListImagesInRecycleBinRequest request);
    public abstract virtual IListSnapshotsInRecycleBinPaginator ListSnapshotsInRecycleBin(ListSnapshotsInRecycleBinRequest request);
    public abstract virtual ISearchLocalGatewayRoutesPaginator SearchLocalGatewayRoutes(SearchLocalGatewayRoutesRequest request);
    public abstract virtual ISearchTransitGatewayMulticastGroupsPaginator SearchTransitGatewayMulticastGroups(SearchTransitGatewayMulticastGroupsRequest request);
}
public interface Amazon.EC2.Model.IGetAssociatedIpv6PoolCidrsPaginator {
    public IPaginatedEnumerable`1<GetAssociatedIpv6PoolCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Ipv6CidrAssociation> Ipv6CidrAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetAssociatedIpv6PoolCidrsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Ipv6CidrAssociation> get_Ipv6CidrAssociations();
}
public interface Amazon.EC2.Model.IGetAwsNetworkPerformanceDataPaginator {
    public IPaginatedEnumerable`1<GetAwsNetworkPerformanceDataResponse> Responses { get; }
    public IPaginatedEnumerable`1<DataResponse> DataResponses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetAwsNetworkPerformanceDataResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DataResponse> get_DataResponses();
}
public interface Amazon.EC2.Model.IGetGroupsForCapacityReservationPaginator {
    public IPaginatedEnumerable`1<GetGroupsForCapacityReservationResponse> Responses { get; }
    public IPaginatedEnumerable`1<CapacityReservationGroup> CapacityReservationGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<GetGroupsForCapacityReservationResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CapacityReservationGroup> get_CapacityReservationGroups();
}
public interface Amazon.EC2.Model.IGetInstanceTypesFromInstanceRequirementsPaginator {
    public IPaginatedEnumerable`1<GetInstanceTypesFromInstanceRequirementsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceTypeInfoFromInstanceRequirements> InstanceTypes { get; }
    public abstract virtual IPaginatedEnumerable`1<GetInstanceTypesFromInstanceRequirementsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceTypeInfoFromInstanceRequirements> get_InstanceTypes();
}
public interface Amazon.EC2.Model.IGetIpamAddressHistoryPaginator {
    public IPaginatedEnumerable`1<GetIpamAddressHistoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamAddressHistoryRecord> HistoryRecords { get; }
    public abstract virtual IPaginatedEnumerable`1<GetIpamAddressHistoryResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamAddressHistoryRecord> get_HistoryRecords();
}
public interface Amazon.EC2.Model.IGetIpamDiscoveredAccountsPaginator {
    public IPaginatedEnumerable`1<GetIpamDiscoveredAccountsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamDiscoveredAccount> IpamDiscoveredAccounts { get; }
    public abstract virtual IPaginatedEnumerable`1<GetIpamDiscoveredAccountsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamDiscoveredAccount> get_IpamDiscoveredAccounts();
}
public interface Amazon.EC2.Model.IGetIpamDiscoveredResourceCidrsPaginator {
    public IPaginatedEnumerable`1<GetIpamDiscoveredResourceCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamDiscoveredResourceCidr> IpamDiscoveredResourceCidrs { get; }
    public abstract virtual IPaginatedEnumerable`1<GetIpamDiscoveredResourceCidrsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamDiscoveredResourceCidr> get_IpamDiscoveredResourceCidrs();
}
public interface Amazon.EC2.Model.IGetIpamPoolAllocationsPaginator {
    public IPaginatedEnumerable`1<GetIpamPoolAllocationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamPoolAllocation> IpamPoolAllocations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetIpamPoolAllocationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamPoolAllocation> get_IpamPoolAllocations();
}
public interface Amazon.EC2.Model.IGetIpamPoolCidrsPaginator {
    public IPaginatedEnumerable`1<GetIpamPoolCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamPoolCidr> IpamPoolCidrs { get; }
    public abstract virtual IPaginatedEnumerable`1<GetIpamPoolCidrsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamPoolCidr> get_IpamPoolCidrs();
}
public interface Amazon.EC2.Model.IGetIpamResourceCidrsPaginator {
    public IPaginatedEnumerable`1<GetIpamResourceCidrsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IpamResourceCidr> IpamResourceCidrs { get; }
    public abstract virtual IPaginatedEnumerable`1<GetIpamResourceCidrsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IpamResourceCidr> get_IpamResourceCidrs();
}
public interface Amazon.EC2.Model.IGetManagedPrefixListAssociationsPaginator {
    public IPaginatedEnumerable`1<GetManagedPrefixListAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrefixListAssociation> PrefixListAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetManagedPrefixListAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PrefixListAssociation> get_PrefixListAssociations();
}
public interface Amazon.EC2.Model.IGetManagedPrefixListEntriesPaginator {
    public IPaginatedEnumerable`1<GetManagedPrefixListEntriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PrefixListEntry> Entries { get; }
    public abstract virtual IPaginatedEnumerable`1<GetManagedPrefixListEntriesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PrefixListEntry> get_Entries();
}
public interface Amazon.EC2.Model.IGetNetworkInsightsAccessScopeAnalysisFindingsPaginator {
    public IPaginatedEnumerable`1<GetNetworkInsightsAccessScopeAnalysisFindingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessScopeAnalysisFinding> AnalysisFindings { get; }
    public abstract virtual IPaginatedEnumerable`1<GetNetworkInsightsAccessScopeAnalysisFindingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AccessScopeAnalysisFinding> get_AnalysisFindings();
}
public interface Amazon.EC2.Model.IGetSecurityGroupsForVpcPaginator {
    public IPaginatedEnumerable`1<GetSecurityGroupsForVpcResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityGroupForVpc> SecurityGroupForVpcs { get; }
    public abstract virtual IPaginatedEnumerable`1<GetSecurityGroupsForVpcResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SecurityGroupForVpc> get_SecurityGroupForVpcs();
}
public interface Amazon.EC2.Model.IGetSpotPlacementScoresPaginator {
    public IPaginatedEnumerable`1<GetSpotPlacementScoresResponse> Responses { get; }
    public IPaginatedEnumerable`1<SpotPlacementScore> SpotPlacementScores { get; }
    public abstract virtual IPaginatedEnumerable`1<GetSpotPlacementScoresResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SpotPlacementScore> get_SpotPlacementScores();
}
public interface Amazon.EC2.Model.IGetTransitGatewayAttachmentPropagationsPaginator {
    public IPaginatedEnumerable`1<GetTransitGatewayAttachmentPropagationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayAttachmentPropagation> TransitGatewayAttachmentPropagations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTransitGatewayAttachmentPropagationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayAttachmentPropagation> get_TransitGatewayAttachmentPropagations();
}
public interface Amazon.EC2.Model.IGetTransitGatewayMulticastDomainAssociationsPaginator {
    public IPaginatedEnumerable`1<GetTransitGatewayMulticastDomainAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayMulticastDomainAssociation> MulticastDomainAssociations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTransitGatewayMulticastDomainAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayMulticastDomainAssociation> get_MulticastDomainAssociations();
}
public interface Amazon.EC2.Model.IGetTransitGatewayPolicyTableAssociationsPaginator {
    public IPaginatedEnumerable`1<GetTransitGatewayPolicyTableAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPolicyTableAssociation> Associations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTransitGatewayPolicyTableAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayPolicyTableAssociation> get_Associations();
}
public interface Amazon.EC2.Model.IGetTransitGatewayPrefixListReferencesPaginator {
    public IPaginatedEnumerable`1<GetTransitGatewayPrefixListReferencesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayPrefixListReference> TransitGatewayPrefixListReferences { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTransitGatewayPrefixListReferencesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayPrefixListReference> get_TransitGatewayPrefixListReferences();
}
public interface Amazon.EC2.Model.IGetTransitGatewayRouteTableAssociationsPaginator {
    public IPaginatedEnumerable`1<GetTransitGatewayRouteTableAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTableAssociation> Associations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTransitGatewayRouteTableAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayRouteTableAssociation> get_Associations();
}
public interface Amazon.EC2.Model.IGetTransitGatewayRouteTablePropagationsPaginator {
    public IPaginatedEnumerable`1<GetTransitGatewayRouteTablePropagationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayRouteTablePropagation> TransitGatewayRouteTablePropagations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTransitGatewayRouteTablePropagationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayRouteTablePropagation> get_TransitGatewayRouteTablePropagations();
}
public interface Amazon.EC2.Model.IGetVpnConnectionDeviceTypesPaginator {
    public IPaginatedEnumerable`1<GetVpnConnectionDeviceTypesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpnConnectionDeviceType> VpnConnectionDeviceTypes { get; }
    public abstract virtual IPaginatedEnumerable`1<GetVpnConnectionDeviceTypesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VpnConnectionDeviceType> get_VpnConnectionDeviceTypes();
}
public class Amazon.EC2.Model.IKEVersionsListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.IKEVersionsRequestListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public interface Amazon.EC2.Model.IListImagesInRecycleBinPaginator {
    public IPaginatedEnumerable`1<ListImagesInRecycleBinResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImageRecycleBinInfo> Images { get; }
    public abstract virtual IPaginatedEnumerable`1<ListImagesInRecycleBinResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ImageRecycleBinInfo> get_Images();
}
public interface Amazon.EC2.Model.IListSnapshotsInRecycleBinPaginator {
    public IPaginatedEnumerable`1<ListSnapshotsInRecycleBinResponse> Responses { get; }
    public IPaginatedEnumerable`1<SnapshotRecycleBinInfo> Snapshots { get; }
    public abstract virtual IPaginatedEnumerable`1<ListSnapshotsInRecycleBinResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SnapshotRecycleBinInfo> get_Snapshots();
}
public class Amazon.EC2.Model.Image : object {
    private ArchitectureValues _architecture;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private BootModeValues _bootMode;
    private string _creationDate;
    private string _deprecationTime;
    private string _deregistrationProtection;
    private string _description;
    private Nullable`1<bool> _enaSupport;
    private HypervisorType _hypervisor;
    private string _imageId;
    private string _imageLocation;
    private string _imageOwnerAlias;
    private ImageTypeValues _imageType;
    private ImdsSupportValues _imdsSupport;
    private string _kernelId;
    private string _lastLaunchedTime;
    private string _name;
    private string _ownerId;
    private PlatformValues _platform;
    private string _platformDetails;
    private List`1<ProductCode> _productCodes;
    private Nullable`1<bool> _public;
    private string _ramdiskId;
    private string _rootDeviceName;
    private DeviceType _rootDeviceType;
    private string _sourceInstanceId;
    private string _sriovNetSupport;
    private ImageState _state;
    private StateReason _stateReason;
    private List`1<Tag> _tags;
    private TpmSupportValues _tpmSupport;
    private string _usageOperation;
    private VirtualizationType _virtualizationType;
    public ArchitectureValues Architecture { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public BootModeValues BootMode { get; public set; }
    public string CreationDate { get; public set; }
    public string DeprecationTime { get; public set; }
    public string DeregistrationProtection { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> EnaSupport { get; public set; }
    public HypervisorType Hypervisor { get; public set; }
    public string ImageId { get; public set; }
    public string ImageLocation { get; public set; }
    public string ImageOwnerAlias { get; public set; }
    public ImageTypeValues ImageType { get; public set; }
    public ImdsSupportValues ImdsSupport { get; public set; }
    public string KernelId { get; public set; }
    public string LastLaunchedTime { get; public set; }
    public string Name { get; public set; }
    public string OwnerId { get; public set; }
    public PlatformValues Platform { get; public set; }
    public string PlatformDetails { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public Nullable`1<bool> Public { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public DeviceType RootDeviceType { get; public set; }
    public string SourceInstanceId { get; public set; }
    public string SriovNetSupport { get; public set; }
    public ImageState State { get; public set; }
    public StateReason StateReason { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public TpmSupportValues TpmSupport { get; public set; }
    public string UsageOperation { get; public set; }
    public VirtualizationType VirtualizationType { get; public set; }
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public BootModeValues get_BootMode();
    public void set_BootMode(BootModeValues value);
    internal bool IsSetBootMode();
    public string get_CreationDate();
    public void set_CreationDate(string value);
    internal bool IsSetCreationDate();
    public string get_DeprecationTime();
    public void set_DeprecationTime(string value);
    internal bool IsSetDeprecationTime();
    public string get_DeregistrationProtection();
    public void set_DeregistrationProtection(string value);
    internal bool IsSetDeregistrationProtection();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_EnaSupport();
    public void set_EnaSupport(Nullable`1<bool> value);
    internal bool IsSetEnaSupport();
    public HypervisorType get_Hypervisor();
    public void set_Hypervisor(HypervisorType value);
    internal bool IsSetHypervisor();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImageLocation();
    public void set_ImageLocation(string value);
    internal bool IsSetImageLocation();
    public string get_ImageOwnerAlias();
    public void set_ImageOwnerAlias(string value);
    internal bool IsSetImageOwnerAlias();
    public ImageTypeValues get_ImageType();
    public void set_ImageType(ImageTypeValues value);
    internal bool IsSetImageType();
    public ImdsSupportValues get_ImdsSupport();
    public void set_ImdsSupport(ImdsSupportValues value);
    internal bool IsSetImdsSupport();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_LastLaunchedTime();
    public void set_LastLaunchedTime(string value);
    internal bool IsSetLastLaunchedTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
    public string get_PlatformDetails();
    public void set_PlatformDetails(string value);
    internal bool IsSetPlatformDetails();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public Nullable`1<bool> get_Public();
    public void set_Public(Nullable`1<bool> value);
    internal bool IsSetPublic();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public DeviceType get_RootDeviceType();
    public void set_RootDeviceType(DeviceType value);
    internal bool IsSetRootDeviceType();
    public string get_SourceInstanceId();
    public void set_SourceInstanceId(string value);
    internal bool IsSetSourceInstanceId();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public ImageState get_State();
    public void set_State(ImageState value);
    internal bool IsSetState();
    public StateReason get_StateReason();
    public void set_StateReason(StateReason value);
    internal bool IsSetStateReason();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TpmSupportValues get_TpmSupport();
    public void set_TpmSupport(TpmSupportValues value);
    internal bool IsSetTpmSupport();
    public string get_UsageOperation();
    public void set_UsageOperation(string value);
    internal bool IsSetUsageOperation();
    public VirtualizationType get_VirtualizationType();
    public void set_VirtualizationType(VirtualizationType value);
    internal bool IsSetVirtualizationType();
}
public class Amazon.EC2.Model.ImageAttribute : object {
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _bootMode;
    private string _deregistrationProtection;
    private string _description;
    private string _imageId;
    private string _imdsSupport;
    private string _kernelId;
    private string _lastLaunchedTime;
    private List`1<LaunchPermission> _launchPermissions;
    private List`1<ProductCode> _productCodes;
    private string _ramdiskId;
    private string _sriovNetSupport;
    private string _tpmSupport;
    private string _uefiData;
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string BootMode { get; public set; }
    public string DeregistrationProtection { get; public set; }
    public string Description { get; public set; }
    public string ImageId { get; public set; }
    public string ImdsSupport { get; public set; }
    public string KernelId { get; public set; }
    public string LastLaunchedTime { get; public set; }
    public List`1<LaunchPermission> LaunchPermissions { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string RamdiskId { get; public set; }
    public string SriovNetSupport { get; public set; }
    public string TpmSupport { get; public set; }
    public string UefiData { get; public set; }
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_BootMode();
    public void set_BootMode(string value);
    internal bool IsSetBootMode();
    public string get_DeregistrationProtection();
    public void set_DeregistrationProtection(string value);
    internal bool IsSetDeregistrationProtection();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImdsSupport();
    public void set_ImdsSupport(string value);
    internal bool IsSetImdsSupport();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_LastLaunchedTime();
    public void set_LastLaunchedTime(string value);
    internal bool IsSetLastLaunchedTime();
    public List`1<LaunchPermission> get_LaunchPermissions();
    public void set_LaunchPermissions(List`1<LaunchPermission> value);
    internal bool IsSetLaunchPermissions();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public string get_TpmSupport();
    public void set_TpmSupport(string value);
    internal bool IsSetTpmSupport();
    public string get_UefiData();
    public void set_UefiData(string value);
    internal bool IsSetUefiData();
}
public class Amazon.EC2.Model.ImageDiskContainer : object {
    private string _description;
    private string _deviceName;
    private string _format;
    private string _snapshotId;
    private string _url;
    private UserBucket _userBucket;
    public string Description { get; public set; }
    public string DeviceName { get; public set; }
    public string Format { get; public set; }
    public string SnapshotId { get; public set; }
    [AWSPropertyAttribute]
public string Url { get; public set; }
    public UserBucket UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucket get_UserBucket();
    public void set_UserBucket(UserBucket value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.ImageRecycleBinInfo : object {
    private string _description;
    private string _imageId;
    private string _name;
    private Nullable`1<DateTime> _recycleBinEnterTime;
    private Nullable`1<DateTime> _recycleBinExitTime;
    public string Description { get; public set; }
    public string ImageId { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<DateTime> RecycleBinEnterTime { get; public set; }
    public Nullable`1<DateTime> RecycleBinExitTime { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<DateTime> get_RecycleBinEnterTime();
    public void set_RecycleBinEnterTime(Nullable`1<DateTime> value);
    internal bool IsSetRecycleBinEnterTime();
    public Nullable`1<DateTime> get_RecycleBinExitTime();
    public void set_RecycleBinExitTime(Nullable`1<DateTime> value);
    internal bool IsSetRecycleBinExitTime();
}
public class Amazon.EC2.Model.ImportClientVpnClientCertificateRevocationListRequest : AmazonEC2Request {
    private string _certificateRevocationList;
    private string _clientVpnEndpointId;
    [AWSPropertyAttribute]
public string CertificateRevocationList { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string get_CertificateRevocationList();
    public void set_CertificateRevocationList(string value);
    internal bool IsSetCertificateRevocationList();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
}
public class Amazon.EC2.Model.ImportClientVpnClientCertificateRevocationListResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ImportImageLicenseConfigurationRequest : object {
    private string _licenseConfigurationArn;
    public string LicenseConfigurationArn { get; public set; }
    public string get_LicenseConfigurationArn();
    public void set_LicenseConfigurationArn(string value);
    internal bool IsSetLicenseConfigurationArn();
}
public class Amazon.EC2.Model.ImportImageLicenseConfigurationResponse : object {
    private string _licenseConfigurationArn;
    public string LicenseConfigurationArn { get; public set; }
    public string get_LicenseConfigurationArn();
    public void set_LicenseConfigurationArn(string value);
    internal bool IsSetLicenseConfigurationArn();
}
public class Amazon.EC2.Model.ImportImageRequest : AmazonEC2Request {
    private string _architecture;
    private BootModeValues _bootMode;
    private ClientData _clientData;
    private string _clientToken;
    private string _description;
    private List`1<ImageDiskContainer> _diskContainers;
    private Nullable`1<bool> _encrypted;
    private string _hypervisor;
    private string _kmsKeyId;
    private List`1<ImportImageLicenseConfigurationRequest> _licenseSpecifications;
    private string _licenseType;
    private string _platform;
    private string _roleName;
    private List`1<TagSpecification> _tagSpecifications;
    private string _usageOperation;
    public string Architecture { get; public set; }
    public BootModeValues BootMode { get; public set; }
    public ClientData ClientData { get; public set; }
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public List`1<ImageDiskContainer> DiskContainers { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string Hypervisor { get; public set; }
    public string KmsKeyId { get; public set; }
    public List`1<ImportImageLicenseConfigurationRequest> LicenseSpecifications { get; public set; }
    public string LicenseType { get; public set; }
    public string Platform { get; public set; }
    public string RoleName { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string UsageOperation { get; public set; }
    public string get_Architecture();
    public void set_Architecture(string value);
    internal bool IsSetArchitecture();
    public BootModeValues get_BootMode();
    public void set_BootMode(BootModeValues value);
    internal bool IsSetBootMode();
    public ClientData get_ClientData();
    public void set_ClientData(ClientData value);
    internal bool IsSetClientData();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<ImageDiskContainer> get_DiskContainers();
    public void set_DiskContainers(List`1<ImageDiskContainer> value);
    internal bool IsSetDiskContainers();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_Hypervisor();
    public void set_Hypervisor(string value);
    internal bool IsSetHypervisor();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public List`1<ImportImageLicenseConfigurationRequest> get_LicenseSpecifications();
    public void set_LicenseSpecifications(List`1<ImportImageLicenseConfigurationRequest> value);
    internal bool IsSetLicenseSpecifications();
    public string get_LicenseType();
    public void set_LicenseType(string value);
    internal bool IsSetLicenseType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_UsageOperation();
    public void set_UsageOperation(string value);
    internal bool IsSetUsageOperation();
}
public class Amazon.EC2.Model.ImportImageResponse : AmazonWebServiceResponse {
    private string _architecture;
    private string _description;
    private Nullable`1<bool> _encrypted;
    private string _hypervisor;
    private string _imageId;
    private string _importTaskId;
    private string _kmsKeyId;
    private List`1<ImportImageLicenseConfigurationResponse> _licenseSpecifications;
    private string _licenseType;
    private string _platform;
    private string _progress;
    private List`1<SnapshotDetail> _snapshotDetails;
    private string _status;
    private string _statusMessage;
    private List`1<Tag> _tags;
    private string _usageOperation;
    public string Architecture { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string Hypervisor { get; public set; }
    public string ImageId { get; public set; }
    public string ImportTaskId { get; public set; }
    public string KmsKeyId { get; public set; }
    public List`1<ImportImageLicenseConfigurationResponse> LicenseSpecifications { get; public set; }
    public string LicenseType { get; public set; }
    public string Platform { get; public set; }
    public string Progress { get; public set; }
    public List`1<SnapshotDetail> SnapshotDetails { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string UsageOperation { get; public set; }
    public string get_Architecture();
    public void set_Architecture(string value);
    internal bool IsSetArchitecture();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_Hypervisor();
    public void set_Hypervisor(string value);
    internal bool IsSetHypervisor();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public List`1<ImportImageLicenseConfigurationResponse> get_LicenseSpecifications();
    public void set_LicenseSpecifications(List`1<ImportImageLicenseConfigurationResponse> value);
    internal bool IsSetLicenseSpecifications();
    public string get_LicenseType();
    public void set_LicenseType(string value);
    internal bool IsSetLicenseType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public List`1<SnapshotDetail> get_SnapshotDetails();
    public void set_SnapshotDetails(List`1<SnapshotDetail> value);
    internal bool IsSetSnapshotDetails();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_UsageOperation();
    public void set_UsageOperation(string value);
    internal bool IsSetUsageOperation();
}
public class Amazon.EC2.Model.ImportImageTask : object {
    private string _architecture;
    private BootModeValues _bootMode;
    private string _description;
    private Nullable`1<bool> _encrypted;
    private string _hypervisor;
    private string _imageId;
    private string _importTaskId;
    private string _kmsKeyId;
    private List`1<ImportImageLicenseConfigurationResponse> _licenseSpecifications;
    private string _licenseType;
    private string _platform;
    private string _progress;
    private List`1<SnapshotDetail> _snapshotDetails;
    private string _status;
    private string _statusMessage;
    private List`1<Tag> _tags;
    private string _usageOperation;
    public string Architecture { get; public set; }
    public BootModeValues BootMode { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string Hypervisor { get; public set; }
    public string ImageId { get; public set; }
    public string ImportTaskId { get; public set; }
    public string KmsKeyId { get; public set; }
    public List`1<ImportImageLicenseConfigurationResponse> LicenseSpecifications { get; public set; }
    public string LicenseType { get; public set; }
    public string Platform { get; public set; }
    public string Progress { get; public set; }
    public List`1<SnapshotDetail> SnapshotDetails { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string UsageOperation { get; public set; }
    public string get_Architecture();
    public void set_Architecture(string value);
    internal bool IsSetArchitecture();
    public BootModeValues get_BootMode();
    public void set_BootMode(BootModeValues value);
    internal bool IsSetBootMode();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_Hypervisor();
    public void set_Hypervisor(string value);
    internal bool IsSetHypervisor();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public List`1<ImportImageLicenseConfigurationResponse> get_LicenseSpecifications();
    public void set_LicenseSpecifications(List`1<ImportImageLicenseConfigurationResponse> value);
    internal bool IsSetLicenseSpecifications();
    public string get_LicenseType();
    public void set_LicenseType(string value);
    internal bool IsSetLicenseType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public List`1<SnapshotDetail> get_SnapshotDetails();
    public void set_SnapshotDetails(List`1<SnapshotDetail> value);
    internal bool IsSetSnapshotDetails();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_UsageOperation();
    public void set_UsageOperation(string value);
    internal bool IsSetUsageOperation();
}
public class Amazon.EC2.Model.ImportInstanceLaunchSpecification : object {
    private string _additionalInfo;
    private ArchitectureValues _architecture;
    private List`1<string> _groupIds;
    private List`1<string> _groupNames;
    private ShutdownBehavior _instanceInitiatedShutdownBehavior;
    private InstanceType _instanceType;
    private Nullable`1<bool> _monitoring;
    private Placement _placement;
    private string _privateIpAddress;
    private string _subnetId;
    private UserData _userData;
    public string AdditionalInfo { get; public set; }
    public ArchitectureValues Architecture { get; public set; }
    public List`1<string> GroupIds { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public ShutdownBehavior InstanceInitiatedShutdownBehavior { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public Nullable`1<bool> Monitoring { get; public set; }
    public Placement Placement { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string SubnetId { get; public set; }
    [AWSPropertyAttribute]
public UserData UserData { get; public set; }
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<string> get_GroupIds();
    public void set_GroupIds(List`1<string> value);
    internal bool IsSetGroupIds();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public ShutdownBehavior get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(ShutdownBehavior value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public Nullable`1<bool> get_Monitoring();
    public void set_Monitoring(Nullable`1<bool> value);
    internal bool IsSetMonitoring();
    public Placement get_Placement();
    public void set_Placement(Placement value);
    internal bool IsSetPlacement();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public UserData get_UserData();
    public void set_UserData(UserData value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.ImportInstanceRequest : AmazonEC2Request {
    private string _description;
    private List`1<DiskImage> _diskImages;
    private ImportInstanceLaunchSpecification _launchSpecification;
    private PlatformValues _platform;
    public string Description { get; public set; }
    public List`1<DiskImage> DiskImages { get; public set; }
    public ImportInstanceLaunchSpecification LaunchSpecification { get; public set; }
    [AWSPropertyAttribute]
public PlatformValues Platform { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<DiskImage> get_DiskImages();
    public void set_DiskImages(List`1<DiskImage> value);
    internal bool IsSetDiskImages();
    public ImportInstanceLaunchSpecification get_LaunchSpecification();
    public void set_LaunchSpecification(ImportInstanceLaunchSpecification value);
    internal bool IsSetLaunchSpecification();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
}
public class Amazon.EC2.Model.ImportInstanceResponse : AmazonWebServiceResponse {
    private ConversionTask _conversionTask;
    public ConversionTask ConversionTask { get; public set; }
    public ConversionTask get_ConversionTask();
    public void set_ConversionTask(ConversionTask value);
    internal bool IsSetConversionTask();
}
public class Amazon.EC2.Model.ImportInstanceTaskDetails : object {
    private string _description;
    private string _instanceId;
    private PlatformValues _platform;
    private List`1<ImportInstanceVolumeDetailItem> _volumes;
    public string Description { get; public set; }
    public string InstanceId { get; public set; }
    public PlatformValues Platform { get; public set; }
    public List`1<ImportInstanceVolumeDetailItem> Volumes { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
    public List`1<ImportInstanceVolumeDetailItem> get_Volumes();
    public void set_Volumes(List`1<ImportInstanceVolumeDetailItem> value);
    internal bool IsSetVolumes();
}
public class Amazon.EC2.Model.ImportInstanceVolumeDetailItem : object {
    private string _availabilityZone;
    private Nullable`1<long> _bytesConverted;
    private string _description;
    private DiskImageDescription _image;
    private string _status;
    private string _statusMessage;
    private DiskImageVolumeDescription _volume;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<long> BytesConverted { get; public set; }
    public string Description { get; public set; }
    public DiskImageDescription Image { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public DiskImageVolumeDescription Volume { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<long> get_BytesConverted();
    public void set_BytesConverted(Nullable`1<long> value);
    internal bool IsSetBytesConverted();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDescription get_Image();
    public void set_Image(DiskImageDescription value);
    internal bool IsSetImage();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public DiskImageVolumeDescription get_Volume();
    public void set_Volume(DiskImageVolumeDescription value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.ImportKeyPairRequest : AmazonEC2Request {
    private string _keyName;
    private string _publicKeyMaterial;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string KeyName { get; public set; }
    [AWSPropertyAttribute]
public string PublicKeyMaterial { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public ImportKeyPairRequest(string keyName, string publicKeyMaterial);
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_PublicKeyMaterial();
    public void set_PublicKeyMaterial(string value);
    internal bool IsSetPublicKeyMaterial();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.ImportKeyPairResponse : AmazonWebServiceResponse {
    private string _keyFingerprint;
    private string _keyName;
    private string _keyPairId;
    private List`1<Tag> _tags;
    public string KeyFingerprint { get; public set; }
    public string KeyName { get; public set; }
    public string KeyPairId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_KeyFingerprint();
    public void set_KeyFingerprint(string value);
    internal bool IsSetKeyFingerprint();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_KeyPairId();
    public void set_KeyPairId(string value);
    internal bool IsSetKeyPairId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ImportSnapshotRequest : AmazonEC2Request {
    private ClientData _clientData;
    private string _clientToken;
    private string _description;
    private SnapshotDiskContainer _diskContainer;
    private Nullable`1<bool> _encrypted;
    private string _kmsKeyId;
    private string _roleName;
    private List`1<TagSpecification> _tagSpecifications;
    public ClientData ClientData { get; public set; }
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public SnapshotDiskContainer DiskContainer { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string KmsKeyId { get; public set; }
    public string RoleName { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public ClientData get_ClientData();
    public void set_ClientData(ClientData value);
    internal bool IsSetClientData();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public SnapshotDiskContainer get_DiskContainer();
    public void set_DiskContainer(SnapshotDiskContainer value);
    internal bool IsSetDiskContainer();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.ImportSnapshotResponse : AmazonWebServiceResponse {
    private string _description;
    private string _importTaskId;
    private SnapshotTaskDetail _snapshotTaskDetail;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public string ImportTaskId { get; public set; }
    public SnapshotTaskDetail SnapshotTaskDetail { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public SnapshotTaskDetail get_SnapshotTaskDetail();
    public void set_SnapshotTaskDetail(SnapshotTaskDetail value);
    internal bool IsSetSnapshotTaskDetail();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ImportSnapshotTask : object {
    private string _description;
    private string _importTaskId;
    private SnapshotTaskDetail _snapshotTaskDetail;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public string ImportTaskId { get; public set; }
    public SnapshotTaskDetail SnapshotTaskDetail { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public SnapshotTaskDetail get_SnapshotTaskDetail();
    public void set_SnapshotTaskDetail(SnapshotTaskDetail value);
    internal bool IsSetSnapshotTaskDetail();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ImportVolumeRequest : AmazonEC2Request {
    private string _availabilityZone;
    private string _description;
    private DiskImageDetail _image;
    private VolumeDetail _volume;
    [AWSPropertyAttribute]
public string AvailabilityZone { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public DiskImageDetail Image { get; public set; }
    [AWSPropertyAttribute]
public VolumeDetail Volume { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDetail get_Image();
    public void set_Image(DiskImageDetail value);
    internal bool IsSetImage();
    public VolumeDetail get_Volume();
    public void set_Volume(VolumeDetail value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.ImportVolumeResponse : AmazonWebServiceResponse {
    private ConversionTask _conversionTask;
    public ConversionTask ConversionTask { get; public set; }
    public ConversionTask get_ConversionTask();
    public void set_ConversionTask(ConversionTask value);
    internal bool IsSetConversionTask();
}
public class Amazon.EC2.Model.ImportVolumeTaskDetails : object {
    private string _availabilityZone;
    private Nullable`1<long> _bytesConverted;
    private string _description;
    private DiskImageDescription _image;
    private DiskImageVolumeDescription _volume;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<long> BytesConverted { get; public set; }
    public string Description { get; public set; }
    public DiskImageDescription Image { get; public set; }
    public DiskImageVolumeDescription Volume { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<long> get_BytesConverted();
    public void set_BytesConverted(Nullable`1<long> value);
    internal bool IsSetBytesConverted();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDescription get_Image();
    public void set_Image(DiskImageDescription value);
    internal bool IsSetImage();
    public DiskImageVolumeDescription get_Volume();
    public void set_Volume(DiskImageVolumeDescription value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.InferenceAcceleratorInfo : object {
    private List`1<InferenceDeviceInfo> _accelerators;
    private Nullable`1<int> _totalInferenceMemoryInMiB;
    public List`1<InferenceDeviceInfo> Accelerators { get; public set; }
    public Nullable`1<int> TotalInferenceMemoryInMiB { get; public set; }
    public List`1<InferenceDeviceInfo> get_Accelerators();
    public void set_Accelerators(List`1<InferenceDeviceInfo> value);
    internal bool IsSetAccelerators();
    public Nullable`1<int> get_TotalInferenceMemoryInMiB();
    public void set_TotalInferenceMemoryInMiB(Nullable`1<int> value);
    internal bool IsSetTotalInferenceMemoryInMiB();
}
public class Amazon.EC2.Model.InferenceDeviceInfo : object {
    private Nullable`1<int> _count;
    private string _manufacturer;
    private InferenceDeviceMemoryInfo _memoryInfo;
    private string _name;
    public Nullable`1<int> Count { get; public set; }
    public string Manufacturer { get; public set; }
    public InferenceDeviceMemoryInfo MemoryInfo { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public string get_Manufacturer();
    public void set_Manufacturer(string value);
    internal bool IsSetManufacturer();
    public InferenceDeviceMemoryInfo get_MemoryInfo();
    public void set_MemoryInfo(InferenceDeviceMemoryInfo value);
    internal bool IsSetMemoryInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.InferenceDeviceMemoryInfo : object {
    private Nullable`1<int> _sizeInMiB;
    public Nullable`1<int> SizeInMiB { get; public set; }
    public Nullable`1<int> get_SizeInMiB();
    public void set_SizeInMiB(Nullable`1<int> value);
    internal bool IsSetSizeInMiB();
}
public class Amazon.EC2.Model.Instance : object {
    private Nullable`1<int> _amiLaunchIndex;
    private ArchitectureValues _architecture;
    private List`1<InstanceBlockDeviceMapping> _blockDeviceMappings;
    private BootModeValues _bootMode;
    private string _capacityReservationId;
    private CapacityReservationSpecificationResponse _capacityReservationSpecification;
    private string _clientToken;
    private CpuOptions _cpuOptions;
    private InstanceBootModeValues _currentInstanceBootMode;
    private Nullable`1<bool> _ebsOptimized;
    private List`1<ElasticGpuAssociation> _elasticGpuAssociations;
    private List`1<ElasticInferenceAcceleratorAssociation> _elasticInferenceAcceleratorAssociations;
    private Nullable`1<bool> _enaSupport;
    private EnclaveOptions _enclaveOptions;
    private HibernationOptions _hibernationOptions;
    private HypervisorType _hypervisor;
    private IamInstanceProfile _iamInstanceProfile;
    private string _imageId;
    private string _instanceId;
    private InstanceLifecycleType _instanceLifecycle;
    private InstanceType _instanceType;
    private string _ipv6Address;
    private string _kernelId;
    private string _keyName;
    private Nullable`1<DateTime> _launchTime;
    private List`1<LicenseConfiguration> _licenses;
    private InstanceMaintenanceOptions _maintenanceOptions;
    private InstanceMetadataOptionsResponse _metadataOptions;
    private Monitoring _monitoring;
    private List`1<InstanceNetworkInterface> _networkInterfaces;
    private string _outpostArn;
    private Placement _placement;
    private PlatformValues _platform;
    private string _platformDetails;
    private string _privateDnsName;
    private PrivateDnsNameOptionsResponse _privateDnsNameOptions;
    private string _privateIpAddress;
    private List`1<ProductCode> _productCodes;
    private string _publicDnsName;
    private string _publicIpAddress;
    private string _ramdiskId;
    private string _rootDeviceName;
    private DeviceType _rootDeviceType;
    private List`1<GroupIdentifier> _securityGroups;
    private Nullable`1<bool> _sourceDestCheck;
    private string _spotInstanceRequestId;
    private string _sriovNetSupport;
    private InstanceState _state;
    private StateReason _stateReason;
    private string _stateTransitionReason;
    private string _subnetId;
    private List`1<Tag> _tags;
    private string _tpmSupport;
    private string _usageOperation;
    private Nullable`1<DateTime> _usageOperationUpdateTime;
    private VirtualizationType _virtualizationType;
    private string _vpcId;
    public Nullable`1<int> AmiLaunchIndex { get; public set; }
    public ArchitectureValues Architecture { get; public set; }
    public List`1<InstanceBlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public BootModeValues BootMode { get; public set; }
    public string CapacityReservationId { get; public set; }
    public CapacityReservationSpecificationResponse CapacityReservationSpecification { get; public set; }
    public string ClientToken { get; public set; }
    public CpuOptions CpuOptions { get; public set; }
    public InstanceBootModeValues CurrentInstanceBootMode { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public List`1<ElasticGpuAssociation> ElasticGpuAssociations { get; public set; }
    public List`1<ElasticInferenceAcceleratorAssociation> ElasticInferenceAcceleratorAssociations { get; public set; }
    public Nullable`1<bool> EnaSupport { get; public set; }
    public EnclaveOptions EnclaveOptions { get; public set; }
    public HibernationOptions HibernationOptions { get; public set; }
    public HypervisorType Hypervisor { get; public set; }
    public IamInstanceProfile IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceLifecycleType InstanceLifecycle { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string Ipv6Address { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public Nullable`1<DateTime> LaunchTime { get; public set; }
    public List`1<LicenseConfiguration> Licenses { get; public set; }
    public InstanceMaintenanceOptions MaintenanceOptions { get; public set; }
    public InstanceMetadataOptionsResponse MetadataOptions { get; public set; }
    public Monitoring Monitoring { get; public set; }
    public List`1<InstanceNetworkInterface> NetworkInterfaces { get; public set; }
    public string OutpostArn { get; public set; }
    public Placement Placement { get; public set; }
    public PlatformValues Platform { get; public set; }
    public string PlatformDetails { get; public set; }
    public string PrivateDnsName { get; public set; }
    public PrivateDnsNameOptionsResponse PrivateDnsNameOptions { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string PublicDnsName { get; public set; }
    public string PublicIpAddress { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public DeviceType RootDeviceType { get; public set; }
    public List`1<GroupIdentifier> SecurityGroups { get; public set; }
    public Nullable`1<bool> SourceDestCheck { get; public set; }
    public string SpotInstanceRequestId { get; public set; }
    public string SriovNetSupport { get; public set; }
    public InstanceState State { get; public set; }
    public StateReason StateReason { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TpmSupport { get; public set; }
    public string UsageOperation { get; public set; }
    public Nullable`1<DateTime> UsageOperationUpdateTime { get; public set; }
    public VirtualizationType VirtualizationType { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> get_AmiLaunchIndex();
    public void set_AmiLaunchIndex(Nullable`1<int> value);
    internal bool IsSetAmiLaunchIndex();
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<InstanceBlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<InstanceBlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public BootModeValues get_BootMode();
    public void set_BootMode(BootModeValues value);
    internal bool IsSetBootMode();
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public CapacityReservationSpecificationResponse get_CapacityReservationSpecification();
    public void set_CapacityReservationSpecification(CapacityReservationSpecificationResponse value);
    internal bool IsSetCapacityReservationSpecification();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public CpuOptions get_CpuOptions();
    public void set_CpuOptions(CpuOptions value);
    internal bool IsSetCpuOptions();
    public InstanceBootModeValues get_CurrentInstanceBootMode();
    public void set_CurrentInstanceBootMode(InstanceBootModeValues value);
    internal bool IsSetCurrentInstanceBootMode();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public List`1<ElasticGpuAssociation> get_ElasticGpuAssociations();
    public void set_ElasticGpuAssociations(List`1<ElasticGpuAssociation> value);
    internal bool IsSetElasticGpuAssociations();
    public List`1<ElasticInferenceAcceleratorAssociation> get_ElasticInferenceAcceleratorAssociations();
    public void set_ElasticInferenceAcceleratorAssociations(List`1<ElasticInferenceAcceleratorAssociation> value);
    internal bool IsSetElasticInferenceAcceleratorAssociations();
    public Nullable`1<bool> get_EnaSupport();
    public void set_EnaSupport(Nullable`1<bool> value);
    internal bool IsSetEnaSupport();
    public EnclaveOptions get_EnclaveOptions();
    public void set_EnclaveOptions(EnclaveOptions value);
    internal bool IsSetEnclaveOptions();
    public HibernationOptions get_HibernationOptions();
    public void set_HibernationOptions(HibernationOptions value);
    internal bool IsSetHibernationOptions();
    public HypervisorType get_Hypervisor();
    public void set_Hypervisor(HypervisorType value);
    internal bool IsSetHypervisor();
    public IamInstanceProfile get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfile value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceLifecycleType get_InstanceLifecycle();
    public void set_InstanceLifecycle(InstanceLifecycleType value);
    internal bool IsSetInstanceLifecycle();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_Ipv6Address();
    public void set_Ipv6Address(string value);
    internal bool IsSetIpv6Address();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public Nullable`1<DateTime> get_LaunchTime();
    public void set_LaunchTime(Nullable`1<DateTime> value);
    internal bool IsSetLaunchTime();
    public List`1<LicenseConfiguration> get_Licenses();
    public void set_Licenses(List`1<LicenseConfiguration> value);
    internal bool IsSetLicenses();
    public InstanceMaintenanceOptions get_MaintenanceOptions();
    public void set_MaintenanceOptions(InstanceMaintenanceOptions value);
    internal bool IsSetMaintenanceOptions();
    public InstanceMetadataOptionsResponse get_MetadataOptions();
    public void set_MetadataOptions(InstanceMetadataOptionsResponse value);
    internal bool IsSetMetadataOptions();
    public Monitoring get_Monitoring();
    public void set_Monitoring(Monitoring value);
    internal bool IsSetMonitoring();
    public List`1<InstanceNetworkInterface> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterface> value);
    internal bool IsSetNetworkInterfaces();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public Placement get_Placement();
    public void set_Placement(Placement value);
    internal bool IsSetPlacement();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
    public string get_PlatformDetails();
    public void set_PlatformDetails(string value);
    internal bool IsSetPlatformDetails();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public PrivateDnsNameOptionsResponse get_PrivateDnsNameOptions();
    public void set_PrivateDnsNameOptions(PrivateDnsNameOptionsResponse value);
    internal bool IsSetPrivateDnsNameOptions();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_PublicDnsName();
    public void set_PublicDnsName(string value);
    internal bool IsSetPublicDnsName();
    public string get_PublicIpAddress();
    public void set_PublicIpAddress(string value);
    internal bool IsSetPublicIpAddress();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public DeviceType get_RootDeviceType();
    public void set_RootDeviceType(DeviceType value);
    internal bool IsSetRootDeviceType();
    public List`1<GroupIdentifier> get_SecurityGroups();
    public void set_SecurityGroups(List`1<GroupIdentifier> value);
    internal bool IsSetSecurityGroups();
    public Nullable`1<bool> get_SourceDestCheck();
    public void set_SourceDestCheck(Nullable`1<bool> value);
    internal bool IsSetSourceDestCheck();
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public InstanceState get_State();
    public void set_State(InstanceState value);
    internal bool IsSetState();
    public StateReason get_StateReason();
    public void set_StateReason(StateReason value);
    internal bool IsSetStateReason();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TpmSupport();
    public void set_TpmSupport(string value);
    internal bool IsSetTpmSupport();
    public string get_UsageOperation();
    public void set_UsageOperation(string value);
    internal bool IsSetUsageOperation();
    public Nullable`1<DateTime> get_UsageOperationUpdateTime();
    public void set_UsageOperationUpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetUsageOperationUpdateTime();
    public VirtualizationType get_VirtualizationType();
    public void set_VirtualizationType(VirtualizationType value);
    internal bool IsSetVirtualizationType();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.InstanceAttachmentEnaSrdSpecification : object {
    private Nullable`1<bool> _enaSrdEnabled;
    private InstanceAttachmentEnaSrdUdpSpecification _enaSrdUdpSpecification;
    public Nullable`1<bool> EnaSrdEnabled { get; public set; }
    public InstanceAttachmentEnaSrdUdpSpecification EnaSrdUdpSpecification { get; public set; }
    public Nullable`1<bool> get_EnaSrdEnabled();
    public void set_EnaSrdEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdEnabled();
    public InstanceAttachmentEnaSrdUdpSpecification get_EnaSrdUdpSpecification();
    public void set_EnaSrdUdpSpecification(InstanceAttachmentEnaSrdUdpSpecification value);
    internal bool IsSetEnaSrdUdpSpecification();
}
public class Amazon.EC2.Model.InstanceAttachmentEnaSrdUdpSpecification : object {
    private Nullable`1<bool> _enaSrdUdpEnabled;
    public Nullable`1<bool> EnaSrdUdpEnabled { get; public set; }
    public Nullable`1<bool> get_EnaSrdUdpEnabled();
    public void set_EnaSrdUdpEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdUdpEnabled();
}
public class Amazon.EC2.Model.InstanceAttribute : object {
    private List`1<InstanceBlockDeviceMapping> _blockDeviceMappings;
    private Nullable`1<bool> _disableApiStop;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private Nullable`1<bool> _enaSupport;
    private EnclaveOptions _enclaveOptions;
    private List`1<GroupIdentifier> _groups;
    private string _instanceId;
    private string _instanceInitiatedShutdownBehavior;
    private string _instanceType;
    private string _kernelId;
    private List`1<ProductCode> _productCodes;
    private string _ramdiskId;
    private string _rootDeviceName;
    private Nullable`1<bool> _sourceDestCheck;
    private string _sriovNetSupport;
    private string _userData;
    public List`1<InstanceBlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public Nullable`1<bool> DisableApiStop { get; public set; }
    public Nullable`1<bool> DisableApiTermination { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public Nullable`1<bool> EnaSupport { get; public set; }
    public EnclaveOptions EnclaveOptions { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceInitiatedShutdownBehavior { get; public set; }
    public string InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public Nullable`1<bool> SourceDestCheck { get; public set; }
    public string SriovNetSupport { get; public set; }
    public string UserData { get; public set; }
    public List`1<InstanceBlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<InstanceBlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public Nullable`1<bool> get_DisableApiStop();
    public void set_DisableApiStop(Nullable`1<bool> value);
    internal bool IsSetDisableApiStop();
    public Nullable`1<bool> get_DisableApiTermination();
    public void set_DisableApiTermination(Nullable`1<bool> value);
    internal bool IsSetDisableApiTermination();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public Nullable`1<bool> get_EnaSupport();
    public void set_EnaSupport(Nullable`1<bool> value);
    internal bool IsSetEnaSupport();
    public EnclaveOptions get_EnclaveOptions();
    public void set_EnclaveOptions(EnclaveOptions value);
    internal bool IsSetEnclaveOptions();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(string value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public Nullable`1<bool> get_SourceDestCheck();
    public void set_SourceDestCheck(Nullable`1<bool> value);
    internal bool IsSetSourceDestCheck();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.InstanceBlockDeviceMapping : object {
    private string _deviceName;
    private EbsInstanceBlockDevice _ebs;
    public string DeviceName { get; public set; }
    public EbsInstanceBlockDevice Ebs { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public EbsInstanceBlockDevice get_Ebs();
    public void set_Ebs(EbsInstanceBlockDevice value);
    internal bool IsSetEbs();
}
public class Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification : object {
    private string _deviceName;
    private EbsInstanceBlockDeviceSpecification _ebs;
    private string _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public EbsInstanceBlockDeviceSpecification Ebs { get; public set; }
    public string NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public EbsInstanceBlockDeviceSpecification get_Ebs();
    public void set_Ebs(EbsInstanceBlockDeviceSpecification value);
    internal bool IsSetEbs();
    public string get_NoDevice();
    public void set_NoDevice(string value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.EC2.Model.InstanceCapacity : object {
    private Nullable`1<int> _availableCapacity;
    private string _instanceType;
    private Nullable`1<int> _totalCapacity;
    public Nullable`1<int> AvailableCapacity { get; public set; }
    public string InstanceType { get; public set; }
    public Nullable`1<int> TotalCapacity { get; public set; }
    public Nullable`1<int> get_AvailableCapacity();
    public void set_AvailableCapacity(Nullable`1<int> value);
    internal bool IsSetAvailableCapacity();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public Nullable`1<int> get_TotalCapacity();
    public void set_TotalCapacity(Nullable`1<int> value);
    internal bool IsSetTotalCapacity();
}
public class Amazon.EC2.Model.InstanceCount : object {
    private Nullable`1<int> _count;
    private ListingState _state;
    public Nullable`1<int> Count { get; public set; }
    public ListingState State { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public ListingState get_State();
    public void set_State(ListingState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.InstanceCreditSpecification : object {
    private string _cpuCredits;
    private string _instanceId;
    public string CpuCredits { get; public set; }
    public string InstanceId { get; public set; }
    public string get_CpuCredits();
    public void set_CpuCredits(string value);
    internal bool IsSetCpuCredits();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.InstanceCreditSpecificationRequest : object {
    private string _cpuCredits;
    private string _instanceId;
    public string CpuCredits { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string get_CpuCredits();
    public void set_CpuCredits(string value);
    internal bool IsSetCpuCredits();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.InstanceEventWindow : object {
    private InstanceEventWindowAssociationTarget _associationTarget;
    private string _cronExpression;
    private string _instanceEventWindowId;
    private string _name;
    private InstanceEventWindowState _state;
    private List`1<Tag> _tags;
    private List`1<InstanceEventWindowTimeRange> _timeRanges;
    public InstanceEventWindowAssociationTarget AssociationTarget { get; public set; }
    public string CronExpression { get; public set; }
    public string InstanceEventWindowId { get; public set; }
    public string Name { get; public set; }
    public InstanceEventWindowState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<InstanceEventWindowTimeRange> TimeRanges { get; public set; }
    public InstanceEventWindowAssociationTarget get_AssociationTarget();
    public void set_AssociationTarget(InstanceEventWindowAssociationTarget value);
    internal bool IsSetAssociationTarget();
    public string get_CronExpression();
    public void set_CronExpression(string value);
    internal bool IsSetCronExpression();
    public string get_InstanceEventWindowId();
    public void set_InstanceEventWindowId(string value);
    internal bool IsSetInstanceEventWindowId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public InstanceEventWindowState get_State();
    public void set_State(InstanceEventWindowState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<InstanceEventWindowTimeRange> get_TimeRanges();
    public void set_TimeRanges(List`1<InstanceEventWindowTimeRange> value);
    internal bool IsSetTimeRanges();
}
public class Amazon.EC2.Model.InstanceEventWindowAssociationRequest : object {
    private List`1<string> _dedicatedHostIds;
    private List`1<string> _instanceIds;
    private List`1<Tag> _instanceTags;
    public List`1<string> DedicatedHostIds { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public List`1<Tag> InstanceTags { get; public set; }
    public List`1<string> get_DedicatedHostIds();
    public void set_DedicatedHostIds(List`1<string> value);
    internal bool IsSetDedicatedHostIds();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public List`1<Tag> get_InstanceTags();
    public void set_InstanceTags(List`1<Tag> value);
    internal bool IsSetInstanceTags();
}
public class Amazon.EC2.Model.InstanceEventWindowAssociationTarget : object {
    private List`1<string> _dedicatedHostIds;
    private List`1<string> _instanceIds;
    private List`1<Tag> _tags;
    public List`1<string> DedicatedHostIds { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> get_DedicatedHostIds();
    public void set_DedicatedHostIds(List`1<string> value);
    internal bool IsSetDedicatedHostIds();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.InstanceEventWindowDisassociationRequest : object {
    private List`1<string> _dedicatedHostIds;
    private List`1<string> _instanceIds;
    private List`1<Tag> _instanceTags;
    public List`1<string> DedicatedHostIds { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public List`1<Tag> InstanceTags { get; public set; }
    public List`1<string> get_DedicatedHostIds();
    public void set_DedicatedHostIds(List`1<string> value);
    internal bool IsSetDedicatedHostIds();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public List`1<Tag> get_InstanceTags();
    public void set_InstanceTags(List`1<Tag> value);
    internal bool IsSetInstanceTags();
}
public class Amazon.EC2.Model.InstanceEventWindowStateChange : object {
    private string _instanceEventWindowId;
    private InstanceEventWindowState _state;
    public string InstanceEventWindowId { get; public set; }
    public InstanceEventWindowState State { get; public set; }
    public string get_InstanceEventWindowId();
    public void set_InstanceEventWindowId(string value);
    internal bool IsSetInstanceEventWindowId();
    public InstanceEventWindowState get_State();
    public void set_State(InstanceEventWindowState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.InstanceEventWindowTimeRange : object {
    private Nullable`1<int> _endHour;
    private WeekDay _endWeekDay;
    private Nullable`1<int> _startHour;
    private WeekDay _startWeekDay;
    [AWSPropertyAttribute]
public Nullable`1<int> EndHour { get; public set; }
    public WeekDay EndWeekDay { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StartHour { get; public set; }
    public WeekDay StartWeekDay { get; public set; }
    public Nullable`1<int> get_EndHour();
    public void set_EndHour(Nullable`1<int> value);
    internal bool IsSetEndHour();
    public WeekDay get_EndWeekDay();
    public void set_EndWeekDay(WeekDay value);
    internal bool IsSetEndWeekDay();
    public Nullable`1<int> get_StartHour();
    public void set_StartHour(Nullable`1<int> value);
    internal bool IsSetStartHour();
    public WeekDay get_StartWeekDay();
    public void set_StartWeekDay(WeekDay value);
    internal bool IsSetStartWeekDay();
}
public class Amazon.EC2.Model.InstanceEventWindowTimeRangeRequest : object {
    private Nullable`1<int> _endHour;
    private WeekDay _endWeekDay;
    private Nullable`1<int> _startHour;
    private WeekDay _startWeekDay;
    [AWSPropertyAttribute]
public Nullable`1<int> EndHour { get; public set; }
    public WeekDay EndWeekDay { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StartHour { get; public set; }
    public WeekDay StartWeekDay { get; public set; }
    public Nullable`1<int> get_EndHour();
    public void set_EndHour(Nullable`1<int> value);
    internal bool IsSetEndHour();
    public WeekDay get_EndWeekDay();
    public void set_EndWeekDay(WeekDay value);
    internal bool IsSetEndWeekDay();
    public Nullable`1<int> get_StartHour();
    public void set_StartHour(Nullable`1<int> value);
    internal bool IsSetStartHour();
    public WeekDay get_StartWeekDay();
    public void set_StartWeekDay(WeekDay value);
    internal bool IsSetStartWeekDay();
}
public class Amazon.EC2.Model.InstanceExportDetails : object {
    private string _instanceId;
    private ExportEnvironment _targetEnvironment;
    public string InstanceId { get; public set; }
    public ExportEnvironment TargetEnvironment { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public ExportEnvironment get_TargetEnvironment();
    public void set_TargetEnvironment(ExportEnvironment value);
    internal bool IsSetTargetEnvironment();
}
public class Amazon.EC2.Model.InstanceFamilyCreditSpecification : object {
    private string _cpuCredits;
    private UnlimitedSupportedInstanceFamily _instanceFamily;
    public string CpuCredits { get; public set; }
    public UnlimitedSupportedInstanceFamily InstanceFamily { get; public set; }
    public string get_CpuCredits();
    public void set_CpuCredits(string value);
    internal bool IsSetCpuCredits();
    public UnlimitedSupportedInstanceFamily get_InstanceFamily();
    public void set_InstanceFamily(UnlimitedSupportedInstanceFamily value);
    internal bool IsSetInstanceFamily();
}
public class Amazon.EC2.Model.InstanceIpv4Prefix : object {
    private string _ipv4Prefix;
    public string Ipv4Prefix { get; public set; }
    public string get_Ipv4Prefix();
    public void set_Ipv4Prefix(string value);
    internal bool IsSetIpv4Prefix();
}
public class Amazon.EC2.Model.InstanceIpv6Address : object {
    private string _ipv6Address;
    private Nullable`1<bool> _isPrimaryIpv6;
    public string Ipv6Address { get; public set; }
    public Nullable`1<bool> IsPrimaryIpv6 { get; public set; }
    public string get_Ipv6Address();
    public void set_Ipv6Address(string value);
    internal bool IsSetIpv6Address();
    public Nullable`1<bool> get_IsPrimaryIpv6();
    public void set_IsPrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetIsPrimaryIpv6();
}
public class Amazon.EC2.Model.InstanceIpv6AddressRequest : object {
    private string _ipv6Address;
    public string Ipv6Address { get; public set; }
    public string get_Ipv6Address();
    public void set_Ipv6Address(string value);
    internal bool IsSetIpv6Address();
}
public class Amazon.EC2.Model.InstanceIpv6Prefix : object {
    private string _ipv6Prefix;
    public string Ipv6Prefix { get; public set; }
    public string get_Ipv6Prefix();
    public void set_Ipv6Prefix(string value);
    internal bool IsSetIpv6Prefix();
}
public class Amazon.EC2.Model.InstanceLicenseSpecification : object {
    private string pool;
    public string Pool { get; public set; }
    public string get_Pool();
    public void set_Pool(string value);
    internal bool IsSetPool();
}
public class Amazon.EC2.Model.InstanceMaintenanceOptions : object {
    private InstanceAutoRecoveryState _autoRecovery;
    public InstanceAutoRecoveryState AutoRecovery { get; public set; }
    public InstanceAutoRecoveryState get_AutoRecovery();
    public void set_AutoRecovery(InstanceAutoRecoveryState value);
    internal bool IsSetAutoRecovery();
}
public class Amazon.EC2.Model.InstanceMaintenanceOptionsRequest : object {
    private InstanceAutoRecoveryState _autoRecovery;
    public InstanceAutoRecoveryState AutoRecovery { get; public set; }
    public InstanceAutoRecoveryState get_AutoRecovery();
    public void set_AutoRecovery(InstanceAutoRecoveryState value);
    internal bool IsSetAutoRecovery();
}
public class Amazon.EC2.Model.InstanceMarketOptionsRequest : object {
    private MarketType _marketType;
    private SpotMarketOptions _spotOptions;
    public MarketType MarketType { get; public set; }
    public SpotMarketOptions SpotOptions { get; public set; }
    public MarketType get_MarketType();
    public void set_MarketType(MarketType value);
    internal bool IsSetMarketType();
    public SpotMarketOptions get_SpotOptions();
    public void set_SpotOptions(SpotMarketOptions value);
    internal bool IsSetSpotOptions();
}
public class Amazon.EC2.Model.InstanceMetadataDefaultsResponse : object {
    private InstanceMetadataEndpointState _httpEndpoint;
    private Nullable`1<int> _httpPutResponseHopLimit;
    private HttpTokensState _httpTokens;
    private InstanceMetadataTagsState _instanceMetadataTags;
    public InstanceMetadataEndpointState HttpEndpoint { get; public set; }
    public Nullable`1<int> HttpPutResponseHopLimit { get; public set; }
    public HttpTokensState HttpTokens { get; public set; }
    public InstanceMetadataTagsState InstanceMetadataTags { get; public set; }
    public InstanceMetadataEndpointState get_HttpEndpoint();
    public void set_HttpEndpoint(InstanceMetadataEndpointState value);
    internal bool IsSetHttpEndpoint();
    public Nullable`1<int> get_HttpPutResponseHopLimit();
    public void set_HttpPutResponseHopLimit(Nullable`1<int> value);
    internal bool IsSetHttpPutResponseHopLimit();
    public HttpTokensState get_HttpTokens();
    public void set_HttpTokens(HttpTokensState value);
    internal bool IsSetHttpTokens();
    public InstanceMetadataTagsState get_InstanceMetadataTags();
    public void set_InstanceMetadataTags(InstanceMetadataTagsState value);
    internal bool IsSetInstanceMetadataTags();
}
public class Amazon.EC2.Model.InstanceMetadataOptionsRequest : object {
    private InstanceMetadataEndpointState _httpEndpoint;
    private InstanceMetadataProtocolState _httpProtocolIpv6;
    private Nullable`1<int> _httpPutResponseHopLimit;
    private HttpTokensState _httpTokens;
    private InstanceMetadataTagsState _instanceMetadataTags;
    public InstanceMetadataEndpointState HttpEndpoint { get; public set; }
    public InstanceMetadataProtocolState HttpProtocolIpv6 { get; public set; }
    public Nullable`1<int> HttpPutResponseHopLimit { get; public set; }
    public HttpTokensState HttpTokens { get; public set; }
    public InstanceMetadataTagsState InstanceMetadataTags { get; public set; }
    public InstanceMetadataEndpointState get_HttpEndpoint();
    public void set_HttpEndpoint(InstanceMetadataEndpointState value);
    internal bool IsSetHttpEndpoint();
    public InstanceMetadataProtocolState get_HttpProtocolIpv6();
    public void set_HttpProtocolIpv6(InstanceMetadataProtocolState value);
    internal bool IsSetHttpProtocolIpv6();
    public Nullable`1<int> get_HttpPutResponseHopLimit();
    public void set_HttpPutResponseHopLimit(Nullable`1<int> value);
    internal bool IsSetHttpPutResponseHopLimit();
    public HttpTokensState get_HttpTokens();
    public void set_HttpTokens(HttpTokensState value);
    internal bool IsSetHttpTokens();
    public InstanceMetadataTagsState get_InstanceMetadataTags();
    public void set_InstanceMetadataTags(InstanceMetadataTagsState value);
    internal bool IsSetInstanceMetadataTags();
}
public class Amazon.EC2.Model.InstanceMetadataOptionsResponse : object {
    private InstanceMetadataEndpointState _httpEndpoint;
    private InstanceMetadataProtocolState _httpProtocolIpv6;
    private Nullable`1<int> _httpPutResponseHopLimit;
    private HttpTokensState _httpTokens;
    private InstanceMetadataTagsState _instanceMetadataTags;
    private InstanceMetadataOptionsState _state;
    public InstanceMetadataEndpointState HttpEndpoint { get; public set; }
    public InstanceMetadataProtocolState HttpProtocolIpv6 { get; public set; }
    public Nullable`1<int> HttpPutResponseHopLimit { get; public set; }
    public HttpTokensState HttpTokens { get; public set; }
    public InstanceMetadataTagsState InstanceMetadataTags { get; public set; }
    public InstanceMetadataOptionsState State { get; public set; }
    public InstanceMetadataEndpointState get_HttpEndpoint();
    public void set_HttpEndpoint(InstanceMetadataEndpointState value);
    internal bool IsSetHttpEndpoint();
    public InstanceMetadataProtocolState get_HttpProtocolIpv6();
    public void set_HttpProtocolIpv6(InstanceMetadataProtocolState value);
    internal bool IsSetHttpProtocolIpv6();
    public Nullable`1<int> get_HttpPutResponseHopLimit();
    public void set_HttpPutResponseHopLimit(Nullable`1<int> value);
    internal bool IsSetHttpPutResponseHopLimit();
    public HttpTokensState get_HttpTokens();
    public void set_HttpTokens(HttpTokensState value);
    internal bool IsSetHttpTokens();
    public InstanceMetadataTagsState get_InstanceMetadataTags();
    public void set_InstanceMetadataTags(InstanceMetadataTagsState value);
    internal bool IsSetInstanceMetadataTags();
    public InstanceMetadataOptionsState get_State();
    public void set_State(InstanceMetadataOptionsState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.InstanceMonitoring : object {
    private string _instanceId;
    private Monitoring _monitoring;
    public string InstanceId { get; public set; }
    public Monitoring Monitoring { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Monitoring get_Monitoring();
    public void set_Monitoring(Monitoring value);
    internal bool IsSetMonitoring();
}
public class Amazon.EC2.Model.InstanceNetworkInterface : object {
    private InstanceNetworkInterfaceAssociation _association;
    private InstanceNetworkInterfaceAttachment _attachment;
    private ConnectionTrackingSpecificationResponse _connectionTrackingConfiguration;
    private string _description;
    private List`1<GroupIdentifier> _groups;
    private string _interfaceType;
    private List`1<InstanceIpv4Prefix> _ipv4Prefixes;
    private List`1<InstanceIpv6Address> _ipv6Addresses;
    private List`1<InstanceIpv6Prefix> _ipv6Prefixes;
    private string _macAddress;
    private string _networkInterfaceId;
    private string _ownerId;
    private string _privateDnsName;
    private string _privateIpAddress;
    private List`1<InstancePrivateIpAddress> _privateIpAddresses;
    private Nullable`1<bool> _sourceDestCheck;
    private NetworkInterfaceStatus _status;
    private string _subnetId;
    private string _vpcId;
    public InstanceNetworkInterfaceAssociation Association { get; public set; }
    public InstanceNetworkInterfaceAttachment Attachment { get; public set; }
    public ConnectionTrackingSpecificationResponse ConnectionTrackingConfiguration { get; public set; }
    public string Description { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string InterfaceType { get; public set; }
    public List`1<InstanceIpv4Prefix> Ipv4Prefixes { get; public set; }
    public List`1<InstanceIpv6Address> Ipv6Addresses { get; public set; }
    public List`1<InstanceIpv6Prefix> Ipv6Prefixes { get; public set; }
    public string MacAddress { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string OwnerId { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<InstancePrivateIpAddress> PrivateIpAddresses { get; public set; }
    public Nullable`1<bool> SourceDestCheck { get; public set; }
    public NetworkInterfaceStatus Status { get; public set; }
    public string SubnetId { get; public set; }
    public string VpcId { get; public set; }
    public InstanceNetworkInterfaceAssociation get_Association();
    public void set_Association(InstanceNetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public InstanceNetworkInterfaceAttachment get_Attachment();
    public void set_Attachment(InstanceNetworkInterfaceAttachment value);
    internal bool IsSetAttachment();
    public ConnectionTrackingSpecificationResponse get_ConnectionTrackingConfiguration();
    public void set_ConnectionTrackingConfiguration(ConnectionTrackingSpecificationResponse value);
    internal bool IsSetConnectionTrackingConfiguration();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_InterfaceType();
    public void set_InterfaceType(string value);
    internal bool IsSetInterfaceType();
    public List`1<InstanceIpv4Prefix> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<InstanceIpv4Prefix> value);
    internal bool IsSetIpv4Prefixes();
    public List`1<InstanceIpv6Address> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<InstanceIpv6Address> value);
    internal bool IsSetIpv6Addresses();
    public List`1<InstanceIpv6Prefix> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<InstanceIpv6Prefix> value);
    internal bool IsSetIpv6Prefixes();
    public string get_MacAddress();
    public void set_MacAddress(string value);
    internal bool IsSetMacAddress();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<InstancePrivateIpAddress> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<InstancePrivateIpAddress> value);
    internal bool IsSetPrivateIpAddresses();
    public Nullable`1<bool> get_SourceDestCheck();
    public void set_SourceDestCheck(Nullable`1<bool> value);
    internal bool IsSetSourceDestCheck();
    public NetworkInterfaceStatus get_Status();
    public void set_Status(NetworkInterfaceStatus value);
    internal bool IsSetStatus();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.InstanceNetworkInterfaceAssociation : object {
    private string _carrierIp;
    private string _customerOwnedIp;
    private string _ipOwnerId;
    private string _publicDnsName;
    private string _publicIp;
    public string CarrierIp { get; public set; }
    public string CustomerOwnedIp { get; public set; }
    public string IpOwnerId { get; public set; }
    public string PublicDnsName { get; public set; }
    public string PublicIp { get; public set; }
    public string get_CarrierIp();
    public void set_CarrierIp(string value);
    internal bool IsSetCarrierIp();
    public string get_CustomerOwnedIp();
    public void set_CustomerOwnedIp(string value);
    internal bool IsSetCustomerOwnedIp();
    public string get_IpOwnerId();
    public void set_IpOwnerId(string value);
    internal bool IsSetIpOwnerId();
    public string get_PublicDnsName();
    public void set_PublicDnsName(string value);
    internal bool IsSetPublicDnsName();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.InstanceNetworkInterfaceAttachment : object {
    private string _attachmentId;
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<int> _deviceIndex;
    private InstanceAttachmentEnaSrdSpecification _enaSrdSpecification;
    private Nullable`1<int> _networkCardIndex;
    private AttachmentStatus _status;
    public string AttachmentId { get; public set; }
    public Nullable`1<DateTime> AttachTime { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public Nullable`1<int> DeviceIndex { get; public set; }
    public InstanceAttachmentEnaSrdSpecification EnaSrdSpecification { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    public AttachmentStatus Status { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public Nullable`1<DateTime> get_AttachTime();
    public void set_AttachTime(Nullable`1<DateTime> value);
    internal bool IsSetAttachTime();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public Nullable`1<int> get_DeviceIndex();
    public void set_DeviceIndex(Nullable`1<int> value);
    internal bool IsSetDeviceIndex();
    public InstanceAttachmentEnaSrdSpecification get_EnaSrdSpecification();
    public void set_EnaSrdSpecification(InstanceAttachmentEnaSrdSpecification value);
    internal bool IsSetEnaSrdSpecification();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
    public AttachmentStatus get_Status();
    public void set_Status(AttachmentStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.InstanceNetworkInterfaceSpecification : object {
    private Nullable`1<bool> _associateCarrierIpAddress;
    private Nullable`1<bool> _associatePublicIpAddress;
    private ConnectionTrackingSpecificationRequest _connectionTrackingSpecification;
    private Nullable`1<bool> _deleteOnTermination;
    private string _description;
    private Nullable`1<int> _deviceIndex;
    private EnaSrdSpecificationRequest _enaSrdSpecification;
    private List`1<string> _groups;
    private string _interfaceType;
    private Nullable`1<int> _ipv4PrefixCount;
    private List`1<Ipv4PrefixSpecificationRequest> _ipv4Prefixes;
    private Nullable`1<int> _ipv6AddressCount;
    private List`1<InstanceIpv6Address> _ipv6Addresses;
    private Nullable`1<int> _ipv6PrefixCount;
    private List`1<Ipv6PrefixSpecificationRequest> _ipv6Prefixes;
    private Nullable`1<int> _networkCardIndex;
    private string _networkInterfaceId;
    private Nullable`1<bool> _primaryIpv6;
    private string _privateIpAddress;
    private List`1<PrivateIpAddressSpecification> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private string _subnetId;
    public Nullable`1<bool> AssociateCarrierIpAddress { get; public set; }
    public Nullable`1<bool> AssociatePublicIpAddress { get; public set; }
    public ConnectionTrackingSpecificationRequest ConnectionTrackingSpecification { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> DeviceIndex { get; public set; }
    public EnaSrdSpecificationRequest EnaSrdSpecification { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string InterfaceType { get; public set; }
    public Nullable`1<int> Ipv4PrefixCount { get; public set; }
    public List`1<Ipv4PrefixSpecificationRequest> Ipv4Prefixes { get; public set; }
    public Nullable`1<int> Ipv6AddressCount { get; public set; }
    public List`1<InstanceIpv6Address> Ipv6Addresses { get; public set; }
    public Nullable`1<int> Ipv6PrefixCount { get; public set; }
    public List`1<Ipv6PrefixSpecificationRequest> Ipv6Prefixes { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public Nullable`1<bool> PrimaryIpv6 { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<PrivateIpAddressSpecification> PrivateIpAddresses { get; public set; }
    public Nullable`1<int> SecondaryPrivateIpAddressCount { get; public set; }
    public string SubnetId { get; public set; }
    public Nullable`1<bool> get_AssociateCarrierIpAddress();
    public void set_AssociateCarrierIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociateCarrierIpAddress();
    public Nullable`1<bool> get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociatePublicIpAddress();
    public ConnectionTrackingSpecificationRequest get_ConnectionTrackingSpecification();
    public void set_ConnectionTrackingSpecification(ConnectionTrackingSpecificationRequest value);
    internal bool IsSetConnectionTrackingSpecification();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_DeviceIndex();
    public void set_DeviceIndex(Nullable`1<int> value);
    internal bool IsSetDeviceIndex();
    public EnaSrdSpecificationRequest get_EnaSrdSpecification();
    public void set_EnaSrdSpecification(EnaSrdSpecificationRequest value);
    internal bool IsSetEnaSrdSpecification();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_InterfaceType();
    public void set_InterfaceType(string value);
    internal bool IsSetInterfaceType();
    public Nullable`1<int> get_Ipv4PrefixCount();
    public void set_Ipv4PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv4PrefixCount();
    public List`1<Ipv4PrefixSpecificationRequest> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<Ipv4PrefixSpecificationRequest> value);
    internal bool IsSetIpv4Prefixes();
    public Nullable`1<int> get_Ipv6AddressCount();
    public void set_Ipv6AddressCount(Nullable`1<int> value);
    internal bool IsSetIpv6AddressCount();
    public List`1<InstanceIpv6Address> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<InstanceIpv6Address> value);
    internal bool IsSetIpv6Addresses();
    public Nullable`1<int> get_Ipv6PrefixCount();
    public void set_Ipv6PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv6PrefixCount();
    public List`1<Ipv6PrefixSpecificationRequest> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<Ipv6PrefixSpecificationRequest> value);
    internal bool IsSetIpv6Prefixes();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<bool> get_PrimaryIpv6();
    public void set_PrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetPrimaryIpv6();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<PrivateIpAddressSpecification> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<PrivateIpAddressSpecification> value);
    internal bool IsSetPrivateIpAddresses();
    public Nullable`1<int> get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.InstancePrivateIpAddress : object {
    private InstanceNetworkInterfaceAssociation _association;
    private Nullable`1<bool> _primary;
    private string _privateDnsName;
    private string _privateIpAddress;
    public InstanceNetworkInterfaceAssociation Association { get; public set; }
    public Nullable`1<bool> Primary { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public InstanceNetworkInterfaceAssociation get_Association();
    public void set_Association(InstanceNetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public Nullable`1<bool> get_Primary();
    public void set_Primary(Nullable`1<bool> value);
    internal bool IsSetPrimary();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
public class Amazon.EC2.Model.InstanceRequirements : object {
    private AcceleratorCount _acceleratorCount;
    private List`1<string> _acceleratorManufacturers;
    private List`1<string> _acceleratorNames;
    private AcceleratorTotalMemoryMiB _acceleratorTotalMemoryMiB;
    private List`1<string> _acceleratorTypes;
    private List`1<string> _allowedInstanceTypes;
    private BareMetal _bareMetal;
    private BaselineEbsBandwidthMbps _baselineEbsBandwidthMbps;
    private BurstablePerformance _burstablePerformance;
    private List`1<string> _cpuManufacturers;
    private List`1<string> _excludedInstanceTypes;
    private List`1<string> _instanceGenerations;
    private LocalStorage _localStorage;
    private List`1<string> _localStorageTypes;
    private Nullable`1<int> _maxSpotPriceAsPercentageOfOptimalOnDemandPrice;
    private MemoryGiBPerVCpu _memoryGiBPerVCpu;
    private MemoryMiB _memoryMiB;
    private NetworkBandwidthGbps _networkBandwidthGbps;
    private NetworkInterfaceCount _networkInterfaceCount;
    private Nullable`1<int> _onDemandMaxPricePercentageOverLowestPrice;
    private Nullable`1<bool> _requireHibernateSupport;
    private Nullable`1<int> _spotMaxPricePercentageOverLowestPrice;
    private TotalLocalStorageGB _totalLocalStorageGB;
    private VCpuCountRange _vCpuCount;
    public AcceleratorCount AcceleratorCount { get; public set; }
    public List`1<string> AcceleratorManufacturers { get; public set; }
    public List`1<string> AcceleratorNames { get; public set; }
    public AcceleratorTotalMemoryMiB AcceleratorTotalMemoryMiB { get; public set; }
    public List`1<string> AcceleratorTypes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedInstanceTypes { get; public set; }
    public BareMetal BareMetal { get; public set; }
    public BaselineEbsBandwidthMbps BaselineEbsBandwidthMbps { get; public set; }
    public BurstablePerformance BurstablePerformance { get; public set; }
    public List`1<string> CpuManufacturers { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ExcludedInstanceTypes { get; public set; }
    public List`1<string> InstanceGenerations { get; public set; }
    public LocalStorage LocalStorage { get; public set; }
    public List`1<string> LocalStorageTypes { get; public set; }
    public Nullable`1<int> MaxSpotPriceAsPercentageOfOptimalOnDemandPrice { get; public set; }
    public MemoryGiBPerVCpu MemoryGiBPerVCpu { get; public set; }
    public MemoryMiB MemoryMiB { get; public set; }
    public NetworkBandwidthGbps NetworkBandwidthGbps { get; public set; }
    public NetworkInterfaceCount NetworkInterfaceCount { get; public set; }
    public Nullable`1<int> OnDemandMaxPricePercentageOverLowestPrice { get; public set; }
    public Nullable`1<bool> RequireHibernateSupport { get; public set; }
    public Nullable`1<int> SpotMaxPricePercentageOverLowestPrice { get; public set; }
    public TotalLocalStorageGB TotalLocalStorageGB { get; public set; }
    public VCpuCountRange VCpuCount { get; public set; }
    public AcceleratorCount get_AcceleratorCount();
    public void set_AcceleratorCount(AcceleratorCount value);
    internal bool IsSetAcceleratorCount();
    public List`1<string> get_AcceleratorManufacturers();
    public void set_AcceleratorManufacturers(List`1<string> value);
    internal bool IsSetAcceleratorManufacturers();
    public List`1<string> get_AcceleratorNames();
    public void set_AcceleratorNames(List`1<string> value);
    internal bool IsSetAcceleratorNames();
    public AcceleratorTotalMemoryMiB get_AcceleratorTotalMemoryMiB();
    public void set_AcceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiB value);
    internal bool IsSetAcceleratorTotalMemoryMiB();
    public List`1<string> get_AcceleratorTypes();
    public void set_AcceleratorTypes(List`1<string> value);
    internal bool IsSetAcceleratorTypes();
    public List`1<string> get_AllowedInstanceTypes();
    public void set_AllowedInstanceTypes(List`1<string> value);
    internal bool IsSetAllowedInstanceTypes();
    public BareMetal get_BareMetal();
    public void set_BareMetal(BareMetal value);
    internal bool IsSetBareMetal();
    public BaselineEbsBandwidthMbps get_BaselineEbsBandwidthMbps();
    public void set_BaselineEbsBandwidthMbps(BaselineEbsBandwidthMbps value);
    internal bool IsSetBaselineEbsBandwidthMbps();
    public BurstablePerformance get_BurstablePerformance();
    public void set_BurstablePerformance(BurstablePerformance value);
    internal bool IsSetBurstablePerformance();
    public List`1<string> get_CpuManufacturers();
    public void set_CpuManufacturers(List`1<string> value);
    internal bool IsSetCpuManufacturers();
    public List`1<string> get_ExcludedInstanceTypes();
    public void set_ExcludedInstanceTypes(List`1<string> value);
    internal bool IsSetExcludedInstanceTypes();
    public List`1<string> get_InstanceGenerations();
    public void set_InstanceGenerations(List`1<string> value);
    internal bool IsSetInstanceGenerations();
    public LocalStorage get_LocalStorage();
    public void set_LocalStorage(LocalStorage value);
    internal bool IsSetLocalStorage();
    public List`1<string> get_LocalStorageTypes();
    public void set_LocalStorageTypes(List`1<string> value);
    internal bool IsSetLocalStorageTypes();
    public Nullable`1<int> get_MaxSpotPriceAsPercentageOfOptimalOnDemandPrice();
    public void set_MaxSpotPriceAsPercentageOfOptimalOnDemandPrice(Nullable`1<int> value);
    internal bool IsSetMaxSpotPriceAsPercentageOfOptimalOnDemandPrice();
    public MemoryGiBPerVCpu get_MemoryGiBPerVCpu();
    public void set_MemoryGiBPerVCpu(MemoryGiBPerVCpu value);
    internal bool IsSetMemoryGiBPerVCpu();
    public MemoryMiB get_MemoryMiB();
    public void set_MemoryMiB(MemoryMiB value);
    internal bool IsSetMemoryMiB();
    public NetworkBandwidthGbps get_NetworkBandwidthGbps();
    public void set_NetworkBandwidthGbps(NetworkBandwidthGbps value);
    internal bool IsSetNetworkBandwidthGbps();
    public NetworkInterfaceCount get_NetworkInterfaceCount();
    public void set_NetworkInterfaceCount(NetworkInterfaceCount value);
    internal bool IsSetNetworkInterfaceCount();
    public Nullable`1<int> get_OnDemandMaxPricePercentageOverLowestPrice();
    public void set_OnDemandMaxPricePercentageOverLowestPrice(Nullable`1<int> value);
    internal bool IsSetOnDemandMaxPricePercentageOverLowestPrice();
    public Nullable`1<bool> get_RequireHibernateSupport();
    public void set_RequireHibernateSupport(Nullable`1<bool> value);
    internal bool IsSetRequireHibernateSupport();
    public Nullable`1<int> get_SpotMaxPricePercentageOverLowestPrice();
    public void set_SpotMaxPricePercentageOverLowestPrice(Nullable`1<int> value);
    internal bool IsSetSpotMaxPricePercentageOverLowestPrice();
    public TotalLocalStorageGB get_TotalLocalStorageGB();
    public void set_TotalLocalStorageGB(TotalLocalStorageGB value);
    internal bool IsSetTotalLocalStorageGB();
    public VCpuCountRange get_VCpuCount();
    public void set_VCpuCount(VCpuCountRange value);
    internal bool IsSetVCpuCount();
}
public class Amazon.EC2.Model.InstanceRequirementsRequest : object {
    private AcceleratorCountRequest _acceleratorCount;
    private List`1<string> _acceleratorManufacturers;
    private List`1<string> _acceleratorNames;
    private AcceleratorTotalMemoryMiBRequest _acceleratorTotalMemoryMiB;
    private List`1<string> _acceleratorTypes;
    private List`1<string> _allowedInstanceTypes;
    private BareMetal _bareMetal;
    private BaselineEbsBandwidthMbpsRequest _baselineEbsBandwidthMbps;
    private BurstablePerformance _burstablePerformance;
    private List`1<string> _cpuManufacturers;
    private List`1<string> _excludedInstanceTypes;
    private List`1<string> _instanceGenerations;
    private LocalStorage _localStorage;
    private List`1<string> _localStorageTypes;
    private Nullable`1<int> _maxSpotPriceAsPercentageOfOptimalOnDemandPrice;
    private MemoryGiBPerVCpuRequest _memoryGiBPerVCpu;
    private MemoryMiBRequest _memoryMiB;
    private NetworkBandwidthGbpsRequest _networkBandwidthGbps;
    private NetworkInterfaceCountRequest _networkInterfaceCount;
    private Nullable`1<int> _onDemandMaxPricePercentageOverLowestPrice;
    private Nullable`1<bool> _requireHibernateSupport;
    private Nullable`1<int> _spotMaxPricePercentageOverLowestPrice;
    private TotalLocalStorageGBRequest _totalLocalStorageGB;
    private VCpuCountRangeRequest _vCpuCount;
    public AcceleratorCountRequest AcceleratorCount { get; public set; }
    public List`1<string> AcceleratorManufacturers { get; public set; }
    public List`1<string> AcceleratorNames { get; public set; }
    public AcceleratorTotalMemoryMiBRequest AcceleratorTotalMemoryMiB { get; public set; }
    public List`1<string> AcceleratorTypes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedInstanceTypes { get; public set; }
    public BareMetal BareMetal { get; public set; }
    public BaselineEbsBandwidthMbpsRequest BaselineEbsBandwidthMbps { get; public set; }
    public BurstablePerformance BurstablePerformance { get; public set; }
    public List`1<string> CpuManufacturers { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ExcludedInstanceTypes { get; public set; }
    public List`1<string> InstanceGenerations { get; public set; }
    public LocalStorage LocalStorage { get; public set; }
    public List`1<string> LocalStorageTypes { get; public set; }
    public Nullable`1<int> MaxSpotPriceAsPercentageOfOptimalOnDemandPrice { get; public set; }
    public MemoryGiBPerVCpuRequest MemoryGiBPerVCpu { get; public set; }
    [AWSPropertyAttribute]
public MemoryMiBRequest MemoryMiB { get; public set; }
    public NetworkBandwidthGbpsRequest NetworkBandwidthGbps { get; public set; }
    public NetworkInterfaceCountRequest NetworkInterfaceCount { get; public set; }
    public Nullable`1<int> OnDemandMaxPricePercentageOverLowestPrice { get; public set; }
    public Nullable`1<bool> RequireHibernateSupport { get; public set; }
    public Nullable`1<int> SpotMaxPricePercentageOverLowestPrice { get; public set; }
    public TotalLocalStorageGBRequest TotalLocalStorageGB { get; public set; }
    [AWSPropertyAttribute]
public VCpuCountRangeRequest VCpuCount { get; public set; }
    public AcceleratorCountRequest get_AcceleratorCount();
    public void set_AcceleratorCount(AcceleratorCountRequest value);
    internal bool IsSetAcceleratorCount();
    public List`1<string> get_AcceleratorManufacturers();
    public void set_AcceleratorManufacturers(List`1<string> value);
    internal bool IsSetAcceleratorManufacturers();
    public List`1<string> get_AcceleratorNames();
    public void set_AcceleratorNames(List`1<string> value);
    internal bool IsSetAcceleratorNames();
    public AcceleratorTotalMemoryMiBRequest get_AcceleratorTotalMemoryMiB();
    public void set_AcceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequest value);
    internal bool IsSetAcceleratorTotalMemoryMiB();
    public List`1<string> get_AcceleratorTypes();
    public void set_AcceleratorTypes(List`1<string> value);
    internal bool IsSetAcceleratorTypes();
    public List`1<string> get_AllowedInstanceTypes();
    public void set_AllowedInstanceTypes(List`1<string> value);
    internal bool IsSetAllowedInstanceTypes();
    public BareMetal get_BareMetal();
    public void set_BareMetal(BareMetal value);
    internal bool IsSetBareMetal();
    public BaselineEbsBandwidthMbpsRequest get_BaselineEbsBandwidthMbps();
    public void set_BaselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequest value);
    internal bool IsSetBaselineEbsBandwidthMbps();
    public BurstablePerformance get_BurstablePerformance();
    public void set_BurstablePerformance(BurstablePerformance value);
    internal bool IsSetBurstablePerformance();
    public List`1<string> get_CpuManufacturers();
    public void set_CpuManufacturers(List`1<string> value);
    internal bool IsSetCpuManufacturers();
    public List`1<string> get_ExcludedInstanceTypes();
    public void set_ExcludedInstanceTypes(List`1<string> value);
    internal bool IsSetExcludedInstanceTypes();
    public List`1<string> get_InstanceGenerations();
    public void set_InstanceGenerations(List`1<string> value);
    internal bool IsSetInstanceGenerations();
    public LocalStorage get_LocalStorage();
    public void set_LocalStorage(LocalStorage value);
    internal bool IsSetLocalStorage();
    public List`1<string> get_LocalStorageTypes();
    public void set_LocalStorageTypes(List`1<string> value);
    internal bool IsSetLocalStorageTypes();
    public Nullable`1<int> get_MaxSpotPriceAsPercentageOfOptimalOnDemandPrice();
    public void set_MaxSpotPriceAsPercentageOfOptimalOnDemandPrice(Nullable`1<int> value);
    internal bool IsSetMaxSpotPriceAsPercentageOfOptimalOnDemandPrice();
    public MemoryGiBPerVCpuRequest get_MemoryGiBPerVCpu();
    public void set_MemoryGiBPerVCpu(MemoryGiBPerVCpuRequest value);
    internal bool IsSetMemoryGiBPerVCpu();
    public MemoryMiBRequest get_MemoryMiB();
    public void set_MemoryMiB(MemoryMiBRequest value);
    internal bool IsSetMemoryMiB();
    public NetworkBandwidthGbpsRequest get_NetworkBandwidthGbps();
    public void set_NetworkBandwidthGbps(NetworkBandwidthGbpsRequest value);
    internal bool IsSetNetworkBandwidthGbps();
    public NetworkInterfaceCountRequest get_NetworkInterfaceCount();
    public void set_NetworkInterfaceCount(NetworkInterfaceCountRequest value);
    internal bool IsSetNetworkInterfaceCount();
    public Nullable`1<int> get_OnDemandMaxPricePercentageOverLowestPrice();
    public void set_OnDemandMaxPricePercentageOverLowestPrice(Nullable`1<int> value);
    internal bool IsSetOnDemandMaxPricePercentageOverLowestPrice();
    public Nullable`1<bool> get_RequireHibernateSupport();
    public void set_RequireHibernateSupport(Nullable`1<bool> value);
    internal bool IsSetRequireHibernateSupport();
    public Nullable`1<int> get_SpotMaxPricePercentageOverLowestPrice();
    public void set_SpotMaxPricePercentageOverLowestPrice(Nullable`1<int> value);
    internal bool IsSetSpotMaxPricePercentageOverLowestPrice();
    public TotalLocalStorageGBRequest get_TotalLocalStorageGB();
    public void set_TotalLocalStorageGB(TotalLocalStorageGBRequest value);
    internal bool IsSetTotalLocalStorageGB();
    public VCpuCountRangeRequest get_VCpuCount();
    public void set_VCpuCount(VCpuCountRangeRequest value);
    internal bool IsSetVCpuCount();
}
public class Amazon.EC2.Model.InstanceRequirementsWithMetadataRequest : object {
    private List`1<string> _architectureTypes;
    private InstanceRequirementsRequest _instanceRequirements;
    private List`1<string> _virtualizationTypes;
    [AWSPropertyAttribute]
public List`1<string> ArchitectureTypes { get; public set; }
    public InstanceRequirementsRequest InstanceRequirements { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VirtualizationTypes { get; public set; }
    public List`1<string> get_ArchitectureTypes();
    public void set_ArchitectureTypes(List`1<string> value);
    internal bool IsSetArchitectureTypes();
    public InstanceRequirementsRequest get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirementsRequest value);
    internal bool IsSetInstanceRequirements();
    public List`1<string> get_VirtualizationTypes();
    public void set_VirtualizationTypes(List`1<string> value);
    internal bool IsSetVirtualizationTypes();
}
public class Amazon.EC2.Model.InstanceSpecification : object {
    private Nullable`1<bool> _excludeBootVolume;
    private List`1<string> _excludeDataVolumeIds;
    private string _instanceId;
    public Nullable`1<bool> ExcludeBootVolume { get; public set; }
    public List`1<string> ExcludeDataVolumeIds { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public Nullable`1<bool> get_ExcludeBootVolume();
    public void set_ExcludeBootVolume(Nullable`1<bool> value);
    internal bool IsSetExcludeBootVolume();
    public List`1<string> get_ExcludeDataVolumeIds();
    public void set_ExcludeDataVolumeIds(List`1<string> value);
    internal bool IsSetExcludeDataVolumeIds();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.InstanceState : object {
    private Nullable`1<int> _code;
    private InstanceStateName _name;
    public Nullable`1<int> Code { get; public set; }
    public InstanceStateName Name { get; public set; }
    public Nullable`1<int> get_Code();
    public void set_Code(Nullable`1<int> value);
    internal bool IsSetCode();
    public InstanceStateName get_Name();
    public void set_Name(InstanceStateName value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.InstanceStateChange : object {
    private InstanceState _currentState;
    private string _instanceId;
    private InstanceState _previousState;
    public InstanceState CurrentState { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceState PreviousState { get; public set; }
    public InstanceState get_CurrentState();
    public void set_CurrentState(InstanceState value);
    internal bool IsSetCurrentState();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceState get_PreviousState();
    public void set_PreviousState(InstanceState value);
    internal bool IsSetPreviousState();
}
public class Amazon.EC2.Model.InstanceStatus : object {
    private string _availabilityZone;
    private List`1<InstanceStatusEvent> _events;
    private string _instanceId;
    private InstanceState _instanceState;
    private string _outpostArn;
    private InstanceStatusSummary _status;
    private InstanceStatusSummary _systemStatus;
    public string AvailabilityZone { get; public set; }
    public List`1<InstanceStatusEvent> Events { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceState InstanceState { get; public set; }
    public string OutpostArn { get; public set; }
    public InstanceStatusSummary Status { get; public set; }
    public InstanceStatusSummary SystemStatus { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<InstanceStatusEvent> get_Events();
    public void set_Events(List`1<InstanceStatusEvent> value);
    internal bool IsSetEvents();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceState get_InstanceState();
    public void set_InstanceState(InstanceState value);
    internal bool IsSetInstanceState();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public InstanceStatusSummary get_Status();
    public void set_Status(InstanceStatusSummary value);
    internal bool IsSetStatus();
    public InstanceStatusSummary get_SystemStatus();
    public void set_SystemStatus(InstanceStatusSummary value);
    internal bool IsSetSystemStatus();
}
public class Amazon.EC2.Model.InstanceStatusDetails : object {
    private Nullable`1<DateTime> _impairedSince;
    private StatusName _name;
    private StatusType _status;
    public Nullable`1<DateTime> ImpairedSince { get; public set; }
    public StatusName Name { get; public set; }
    public StatusType Status { get; public set; }
    public Nullable`1<DateTime> get_ImpairedSince();
    public void set_ImpairedSince(Nullable`1<DateTime> value);
    internal bool IsSetImpairedSince();
    public StatusName get_Name();
    public void set_Name(StatusName value);
    internal bool IsSetName();
    public StatusType get_Status();
    public void set_Status(StatusType value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.InstanceStatusEvent : object {
    private EventCode _code;
    private string _description;
    private string _instanceEventId;
    private Nullable`1<DateTime> _notAfter;
    private Nullable`1<DateTime> _notBefore;
    private Nullable`1<DateTime> _notBeforeDeadline;
    public EventCode Code { get; public set; }
    public string Description { get; public set; }
    public string InstanceEventId { get; public set; }
    public Nullable`1<DateTime> NotAfter { get; public set; }
    public Nullable`1<DateTime> NotBefore { get; public set; }
    public Nullable`1<DateTime> NotBeforeDeadline { get; public set; }
    public EventCode get_Code();
    public void set_Code(EventCode value);
    internal bool IsSetCode();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceEventId();
    public void set_InstanceEventId(string value);
    internal bool IsSetInstanceEventId();
    public Nullable`1<DateTime> get_NotAfter();
    public void set_NotAfter(Nullable`1<DateTime> value);
    internal bool IsSetNotAfter();
    public Nullable`1<DateTime> get_NotBefore();
    public void set_NotBefore(Nullable`1<DateTime> value);
    internal bool IsSetNotBefore();
    public Nullable`1<DateTime> get_NotBeforeDeadline();
    public void set_NotBeforeDeadline(Nullable`1<DateTime> value);
    internal bool IsSetNotBeforeDeadline();
}
public class Amazon.EC2.Model.InstanceStatusSummary : object {
    private List`1<InstanceStatusDetails> _details;
    private SummaryStatus _status;
    public List`1<InstanceStatusDetails> Details { get; public set; }
    public SummaryStatus Status { get; public set; }
    public List`1<InstanceStatusDetails> get_Details();
    public void set_Details(List`1<InstanceStatusDetails> value);
    internal bool IsSetDetails();
    public SummaryStatus get_Status();
    public void set_Status(SummaryStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.InstanceStorageInfo : object {
    private List`1<DiskInfo> _disks;
    private InstanceStorageEncryptionSupport _encryptionSupport;
    private EphemeralNvmeSupport _nvmeSupport;
    private Nullable`1<long> _totalSizeInGB;
    public List`1<DiskInfo> Disks { get; public set; }
    public InstanceStorageEncryptionSupport EncryptionSupport { get; public set; }
    public EphemeralNvmeSupport NvmeSupport { get; public set; }
    public Nullable`1<long> TotalSizeInGB { get; public set; }
    public List`1<DiskInfo> get_Disks();
    public void set_Disks(List`1<DiskInfo> value);
    internal bool IsSetDisks();
    public InstanceStorageEncryptionSupport get_EncryptionSupport();
    public void set_EncryptionSupport(InstanceStorageEncryptionSupport value);
    internal bool IsSetEncryptionSupport();
    public EphemeralNvmeSupport get_NvmeSupport();
    public void set_NvmeSupport(EphemeralNvmeSupport value);
    internal bool IsSetNvmeSupport();
    public Nullable`1<long> get_TotalSizeInGB();
    public void set_TotalSizeInGB(Nullable`1<long> value);
    internal bool IsSetTotalSizeInGB();
}
public class Amazon.EC2.Model.InstanceTagNotificationAttribute : object {
    private Nullable`1<bool> _includeAllTagsOfInstance;
    private List`1<string> _instanceTagKeys;
    public Nullable`1<bool> IncludeAllTagsOfInstance { get; public set; }
    public List`1<string> InstanceTagKeys { get; public set; }
    public Nullable`1<bool> get_IncludeAllTagsOfInstance();
    public void set_IncludeAllTagsOfInstance(Nullable`1<bool> value);
    internal bool IsSetIncludeAllTagsOfInstance();
    public List`1<string> get_InstanceTagKeys();
    public void set_InstanceTagKeys(List`1<string> value);
    internal bool IsSetInstanceTagKeys();
}
public class Amazon.EC2.Model.InstanceTopology : object {
    private string _availabilityZone;
    private string _groupName;
    private string _instanceId;
    private string _instanceType;
    private List`1<string> _networkNodes;
    private string _zoneId;
    public string AvailabilityZone { get; public set; }
    public string GroupName { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceType { get; public set; }
    public List`1<string> NetworkNodes { get; public set; }
    public string ZoneId { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public List`1<string> get_NetworkNodes();
    public void set_NetworkNodes(List`1<string> value);
    internal bool IsSetNetworkNodes();
    public string get_ZoneId();
    public void set_ZoneId(string value);
    internal bool IsSetZoneId();
}
public class Amazon.EC2.Model.InstanceTypeInfo : object {
    private Nullable`1<bool> _autoRecoverySupported;
    private Nullable`1<bool> _bareMetal;
    private Nullable`1<bool> _burstablePerformanceSupported;
    private Nullable`1<bool> _currentGeneration;
    private Nullable`1<bool> _dedicatedHostsSupported;
    private EbsInfo _ebsInfo;
    private FpgaInfo _fpgaInfo;
    private Nullable`1<bool> _freeTierEligible;
    private GpuInfo _gpuInfo;
    private Nullable`1<bool> _hibernationSupported;
    private InstanceTypeHypervisor _hypervisor;
    private InferenceAcceleratorInfo _inferenceAcceleratorInfo;
    private InstanceStorageInfo _instanceStorageInfo;
    private Nullable`1<bool> _instanceStorageSupported;
    private InstanceType _instanceType;
    private MediaAcceleratorInfo _mediaAcceleratorInfo;
    private MemoryInfo _memoryInfo;
    private NetworkInfo _networkInfo;
    private NeuronInfo _neuronInfo;
    private NitroEnclavesSupport _nitroEnclavesSupport;
    private NitroTpmInfo _nitroTpmInfo;
    private NitroTpmSupport _nitroTpmSupport;
    private PhcSupport _phcSupport;
    private PlacementGroupInfo _placementGroupInfo;
    private ProcessorInfo _processorInfo;
    private List`1<string> _supportedBootModes;
    private List`1<string> _supportedRootDeviceTypes;
    private List`1<string> _supportedUsageClasses;
    private List`1<string> _supportedVirtualizationTypes;
    private VCpuInfo _vCpuInfo;
    public Nullable`1<bool> AutoRecoverySupported { get; public set; }
    public Nullable`1<bool> BareMetal { get; public set; }
    public Nullable`1<bool> BurstablePerformanceSupported { get; public set; }
    public Nullable`1<bool> CurrentGeneration { get; public set; }
    public Nullable`1<bool> DedicatedHostsSupported { get; public set; }
    public EbsInfo EbsInfo { get; public set; }
    public FpgaInfo FpgaInfo { get; public set; }
    public Nullable`1<bool> FreeTierEligible { get; public set; }
    public GpuInfo GpuInfo { get; public set; }
    public Nullable`1<bool> HibernationSupported { get; public set; }
    public InstanceTypeHypervisor Hypervisor { get; public set; }
    public InferenceAcceleratorInfo InferenceAcceleratorInfo { get; public set; }
    public InstanceStorageInfo InstanceStorageInfo { get; public set; }
    public Nullable`1<bool> InstanceStorageSupported { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public MediaAcceleratorInfo MediaAcceleratorInfo { get; public set; }
    public MemoryInfo MemoryInfo { get; public set; }
    public NetworkInfo NetworkInfo { get; public set; }
    public NeuronInfo NeuronInfo { get; public set; }
    public NitroEnclavesSupport NitroEnclavesSupport { get; public set; }
    public NitroTpmInfo NitroTpmInfo { get; public set; }
    public NitroTpmSupport NitroTpmSupport { get; public set; }
    public PhcSupport PhcSupport { get; public set; }
    public PlacementGroupInfo PlacementGroupInfo { get; public set; }
    public ProcessorInfo ProcessorInfo { get; public set; }
    public List`1<string> SupportedBootModes { get; public set; }
    public List`1<string> SupportedRootDeviceTypes { get; public set; }
    public List`1<string> SupportedUsageClasses { get; public set; }
    public List`1<string> SupportedVirtualizationTypes { get; public set; }
    public VCpuInfo VCpuInfo { get; public set; }
    public Nullable`1<bool> get_AutoRecoverySupported();
    public void set_AutoRecoverySupported(Nullable`1<bool> value);
    internal bool IsSetAutoRecoverySupported();
    public Nullable`1<bool> get_BareMetal();
    public void set_BareMetal(Nullable`1<bool> value);
    internal bool IsSetBareMetal();
    public Nullable`1<bool> get_BurstablePerformanceSupported();
    public void set_BurstablePerformanceSupported(Nullable`1<bool> value);
    internal bool IsSetBurstablePerformanceSupported();
    public Nullable`1<bool> get_CurrentGeneration();
    public void set_CurrentGeneration(Nullable`1<bool> value);
    internal bool IsSetCurrentGeneration();
    public Nullable`1<bool> get_DedicatedHostsSupported();
    public void set_DedicatedHostsSupported(Nullable`1<bool> value);
    internal bool IsSetDedicatedHostsSupported();
    public EbsInfo get_EbsInfo();
    public void set_EbsInfo(EbsInfo value);
    internal bool IsSetEbsInfo();
    public FpgaInfo get_FpgaInfo();
    public void set_FpgaInfo(FpgaInfo value);
    internal bool IsSetFpgaInfo();
    public Nullable`1<bool> get_FreeTierEligible();
    public void set_FreeTierEligible(Nullable`1<bool> value);
    internal bool IsSetFreeTierEligible();
    public GpuInfo get_GpuInfo();
    public void set_GpuInfo(GpuInfo value);
    internal bool IsSetGpuInfo();
    public Nullable`1<bool> get_HibernationSupported();
    public void set_HibernationSupported(Nullable`1<bool> value);
    internal bool IsSetHibernationSupported();
    public InstanceTypeHypervisor get_Hypervisor();
    public void set_Hypervisor(InstanceTypeHypervisor value);
    internal bool IsSetHypervisor();
    public InferenceAcceleratorInfo get_InferenceAcceleratorInfo();
    public void set_InferenceAcceleratorInfo(InferenceAcceleratorInfo value);
    internal bool IsSetInferenceAcceleratorInfo();
    public InstanceStorageInfo get_InstanceStorageInfo();
    public void set_InstanceStorageInfo(InstanceStorageInfo value);
    internal bool IsSetInstanceStorageInfo();
    public Nullable`1<bool> get_InstanceStorageSupported();
    public void set_InstanceStorageSupported(Nullable`1<bool> value);
    internal bool IsSetInstanceStorageSupported();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public MediaAcceleratorInfo get_MediaAcceleratorInfo();
    public void set_MediaAcceleratorInfo(MediaAcceleratorInfo value);
    internal bool IsSetMediaAcceleratorInfo();
    public MemoryInfo get_MemoryInfo();
    public void set_MemoryInfo(MemoryInfo value);
    internal bool IsSetMemoryInfo();
    public NetworkInfo get_NetworkInfo();
    public void set_NetworkInfo(NetworkInfo value);
    internal bool IsSetNetworkInfo();
    public NeuronInfo get_NeuronInfo();
    public void set_NeuronInfo(NeuronInfo value);
    internal bool IsSetNeuronInfo();
    public NitroEnclavesSupport get_NitroEnclavesSupport();
    public void set_NitroEnclavesSupport(NitroEnclavesSupport value);
    internal bool IsSetNitroEnclavesSupport();
    public NitroTpmInfo get_NitroTpmInfo();
    public void set_NitroTpmInfo(NitroTpmInfo value);
    internal bool IsSetNitroTpmInfo();
    public NitroTpmSupport get_NitroTpmSupport();
    public void set_NitroTpmSupport(NitroTpmSupport value);
    internal bool IsSetNitroTpmSupport();
    public PhcSupport get_PhcSupport();
    public void set_PhcSupport(PhcSupport value);
    internal bool IsSetPhcSupport();
    public PlacementGroupInfo get_PlacementGroupInfo();
    public void set_PlacementGroupInfo(PlacementGroupInfo value);
    internal bool IsSetPlacementGroupInfo();
    public ProcessorInfo get_ProcessorInfo();
    public void set_ProcessorInfo(ProcessorInfo value);
    internal bool IsSetProcessorInfo();
    public List`1<string> get_SupportedBootModes();
    public void set_SupportedBootModes(List`1<string> value);
    internal bool IsSetSupportedBootModes();
    public List`1<string> get_SupportedRootDeviceTypes();
    public void set_SupportedRootDeviceTypes(List`1<string> value);
    internal bool IsSetSupportedRootDeviceTypes();
    public List`1<string> get_SupportedUsageClasses();
    public void set_SupportedUsageClasses(List`1<string> value);
    internal bool IsSetSupportedUsageClasses();
    public List`1<string> get_SupportedVirtualizationTypes();
    public void set_SupportedVirtualizationTypes(List`1<string> value);
    internal bool IsSetSupportedVirtualizationTypes();
    public VCpuInfo get_VCpuInfo();
    public void set_VCpuInfo(VCpuInfo value);
    internal bool IsSetVCpuInfo();
}
public class Amazon.EC2.Model.InstanceTypeInfoFromInstanceRequirements : object {
    private string _instanceType;
    public string InstanceType { get; public set; }
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
}
public class Amazon.EC2.Model.InstanceTypeOffering : object {
    private InstanceType _instanceType;
    private string _location;
    private LocationType _locationType;
    public InstanceType InstanceType { get; public set; }
    public string Location { get; public set; }
    public LocationType LocationType { get; public set; }
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public LocationType get_LocationType();
    public void set_LocationType(LocationType value);
    internal bool IsSetLocationType();
}
public class Amazon.EC2.Model.InstanceUsage : object {
    private string _accountId;
    private Nullable`1<int> _usedInstanceCount;
    public string AccountId { get; public set; }
    public Nullable`1<int> UsedInstanceCount { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_UsedInstanceCount();
    public void set_UsedInstanceCount(Nullable`1<int> value);
    internal bool IsSetUsedInstanceCount();
}
public class Amazon.EC2.Model.IntegrateServices : object {
    private List`1<AthenaIntegration> _athenaIntegrations;
    [AWSPropertyAttribute]
public List`1<AthenaIntegration> AthenaIntegrations { get; public set; }
    public List`1<AthenaIntegration> get_AthenaIntegrations();
    public void set_AthenaIntegrations(List`1<AthenaIntegration> value);
    internal bool IsSetAthenaIntegrations();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceleratorCountUnmarshaller : object {
    private static AcceleratorCountUnmarshaller _instance;
    public static AcceleratorCountUnmarshaller Instance { get; }
    private static AcceleratorCountUnmarshaller();
    public sealed virtual AcceleratorCount Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AcceleratorCount Unmarshall(JsonUnmarshallerContext context);
    public static AcceleratorCountUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceleratorTotalMemoryMiBUnmarshaller : object {
    private static AcceleratorTotalMemoryMiBUnmarshaller _instance;
    public static AcceleratorTotalMemoryMiBUnmarshaller Instance { get; }
    private static AcceleratorTotalMemoryMiBUnmarshaller();
    public sealed virtual AcceleratorTotalMemoryMiB Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AcceleratorTotalMemoryMiB Unmarshall(JsonUnmarshallerContext context);
    public static AcceleratorTotalMemoryMiBUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptAddressTransferRequestMarshaller : object {
    private static AcceptAddressTransferRequestMarshaller _instance;
    public static AcceptAddressTransferRequestMarshaller Instance { get; }
    private static AcceptAddressTransferRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptAddressTransferRequest publicRequest);
    internal static AcceptAddressTransferRequestMarshaller GetInstance();
    public static AcceptAddressTransferRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptAddressTransferResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptAddressTransferResponseUnmarshaller _instance;
    public static AcceptAddressTransferResponseUnmarshaller Instance { get; }
    private static AcceptAddressTransferResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptAddressTransferResponseUnmarshaller GetInstance();
    public static AcceptAddressTransferResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteRequestMarshaller : object {
    private static AcceptReservedInstancesExchangeQuoteRequestMarshaller _instance;
    public static AcceptReservedInstancesExchangeQuoteRequestMarshaller Instance { get; }
    private static AcceptReservedInstancesExchangeQuoteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptReservedInstancesExchangeQuoteRequest publicRequest);
    internal static AcceptReservedInstancesExchangeQuoteRequestMarshaller GetInstance();
    public static AcceptReservedInstancesExchangeQuoteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptReservedInstancesExchangeQuoteResponseUnmarshaller _instance;
    public static AcceptReservedInstancesExchangeQuoteResponseUnmarshaller Instance { get; }
    private static AcceptReservedInstancesExchangeQuoteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptReservedInstancesExchangeQuoteResponseUnmarshaller GetInstance();
    public static AcceptReservedInstancesExchangeQuoteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptTransitGatewayMulticastDomainAssociationsRequestMarshaller : object {
    private static AcceptTransitGatewayMulticastDomainAssociationsRequestMarshaller _instance;
    public static AcceptTransitGatewayMulticastDomainAssociationsRequestMarshaller Instance { get; }
    private static AcceptTransitGatewayMulticastDomainAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptTransitGatewayMulticastDomainAssociationsRequest publicRequest);
    internal static AcceptTransitGatewayMulticastDomainAssociationsRequestMarshaller GetInstance();
    public static AcceptTransitGatewayMulticastDomainAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptTransitGatewayMulticastDomainAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptTransitGatewayMulticastDomainAssociationsResponseUnmarshaller _instance;
    public static AcceptTransitGatewayMulticastDomainAssociationsResponseUnmarshaller Instance { get; }
    private static AcceptTransitGatewayMulticastDomainAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptTransitGatewayMulticastDomainAssociationsResponseUnmarshaller GetInstance();
    public static AcceptTransitGatewayMulticastDomainAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptTransitGatewayPeeringAttachmentRequestMarshaller : object {
    private static AcceptTransitGatewayPeeringAttachmentRequestMarshaller _instance;
    public static AcceptTransitGatewayPeeringAttachmentRequestMarshaller Instance { get; }
    private static AcceptTransitGatewayPeeringAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptTransitGatewayPeeringAttachmentRequest publicRequest);
    internal static AcceptTransitGatewayPeeringAttachmentRequestMarshaller GetInstance();
    public static AcceptTransitGatewayPeeringAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptTransitGatewayPeeringAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptTransitGatewayPeeringAttachmentResponseUnmarshaller _instance;
    public static AcceptTransitGatewayPeeringAttachmentResponseUnmarshaller Instance { get; }
    private static AcceptTransitGatewayPeeringAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptTransitGatewayPeeringAttachmentResponseUnmarshaller GetInstance();
    public static AcceptTransitGatewayPeeringAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptTransitGatewayVpcAttachmentRequestMarshaller : object {
    private static AcceptTransitGatewayVpcAttachmentRequestMarshaller _instance;
    public static AcceptTransitGatewayVpcAttachmentRequestMarshaller Instance { get; }
    private static AcceptTransitGatewayVpcAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptTransitGatewayVpcAttachmentRequest publicRequest);
    internal static AcceptTransitGatewayVpcAttachmentRequestMarshaller GetInstance();
    public static AcceptTransitGatewayVpcAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptTransitGatewayVpcAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptTransitGatewayVpcAttachmentResponseUnmarshaller _instance;
    public static AcceptTransitGatewayVpcAttachmentResponseUnmarshaller Instance { get; }
    private static AcceptTransitGatewayVpcAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptTransitGatewayVpcAttachmentResponseUnmarshaller GetInstance();
    public static AcceptTransitGatewayVpcAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcEndpointConnectionsRequestMarshaller : object {
    private static AcceptVpcEndpointConnectionsRequestMarshaller _instance;
    public static AcceptVpcEndpointConnectionsRequestMarshaller Instance { get; }
    private static AcceptVpcEndpointConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptVpcEndpointConnectionsRequest publicRequest);
    internal static AcceptVpcEndpointConnectionsRequestMarshaller GetInstance();
    public static AcceptVpcEndpointConnectionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcEndpointConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptVpcEndpointConnectionsResponseUnmarshaller _instance;
    public static AcceptVpcEndpointConnectionsResponseUnmarshaller Instance { get; }
    private static AcceptVpcEndpointConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptVpcEndpointConnectionsResponseUnmarshaller GetInstance();
    public static AcceptVpcEndpointConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionRequestMarshaller : object {
    private static AcceptVpcPeeringConnectionRequestMarshaller _instance;
    public static AcceptVpcPeeringConnectionRequestMarshaller Instance { get; }
    private static AcceptVpcPeeringConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptVpcPeeringConnectionRequest publicRequest);
    internal static AcceptVpcPeeringConnectionRequestMarshaller GetInstance();
    public static AcceptVpcPeeringConnectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptVpcPeeringConnectionResponseUnmarshaller _instance;
    public static AcceptVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static AcceptVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static AcceptVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AccessScopeAnalysisFindingUnmarshaller : object {
    private static AccessScopeAnalysisFindingUnmarshaller _instance;
    public static AccessScopeAnalysisFindingUnmarshaller Instance { get; }
    private static AccessScopeAnalysisFindingUnmarshaller();
    public sealed virtual AccessScopeAnalysisFinding Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessScopeAnalysisFinding Unmarshall(JsonUnmarshallerContext context);
    public static AccessScopeAnalysisFindingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AccessScopePathUnmarshaller : object {
    private static AccessScopePathUnmarshaller _instance;
    public static AccessScopePathUnmarshaller Instance { get; }
    private static AccessScopePathUnmarshaller();
    public sealed virtual AccessScopePath Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessScopePath Unmarshall(JsonUnmarshallerContext context);
    public static AccessScopePathUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeUnmarshaller : object {
    private static AccountAttributeUnmarshaller _instance;
    public static AccountAttributeUnmarshaller Instance { get; }
    private static AccountAttributeUnmarshaller();
    public sealed virtual AccountAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountAttribute Unmarshall(JsonUnmarshallerContext context);
    public static AccountAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeValueUnmarshaller : object {
    private static AccountAttributeValueUnmarshaller _instance;
    public static AccountAttributeValueUnmarshaller Instance { get; }
    private static AccountAttributeValueUnmarshaller();
    public sealed virtual AccountAttributeValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountAttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static AccountAttributeValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ActiveInstanceUnmarshaller : object {
    private static ActiveInstanceUnmarshaller _instance;
    public static ActiveInstanceUnmarshaller Instance { get; }
    private static ActiveInstanceUnmarshaller();
    public sealed virtual ActiveInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ActiveInstance Unmarshall(JsonUnmarshallerContext context);
    public static ActiveInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AddedPrincipalUnmarshaller : object {
    private static AddedPrincipalUnmarshaller _instance;
    public static AddedPrincipalUnmarshaller Instance { get; }
    private static AddedPrincipalUnmarshaller();
    public sealed virtual AddedPrincipal Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AddedPrincipal Unmarshall(JsonUnmarshallerContext context);
    public static AddedPrincipalUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AdditionalDetailUnmarshaller : object {
    private static AdditionalDetailUnmarshaller _instance;
    public static AdditionalDetailUnmarshaller Instance { get; }
    private static AdditionalDetailUnmarshaller();
    public sealed virtual AdditionalDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdditionalDetail Unmarshall(JsonUnmarshallerContext context);
    public static AdditionalDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AddressAttributeUnmarshaller : object {
    private static AddressAttributeUnmarshaller _instance;
    public static AddressAttributeUnmarshaller Instance { get; }
    private static AddressAttributeUnmarshaller();
    public sealed virtual AddressAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AddressAttribute Unmarshall(JsonUnmarshallerContext context);
    public static AddressAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AddressTransferUnmarshaller : object {
    private static AddressTransferUnmarshaller _instance;
    public static AddressTransferUnmarshaller Instance { get; }
    private static AddressTransferUnmarshaller();
    public sealed virtual AddressTransfer Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AddressTransfer Unmarshall(JsonUnmarshallerContext context);
    public static AddressTransferUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AddressUnmarshaller : object {
    private static AddressUnmarshaller _instance;
    public static AddressUnmarshaller Instance { get; }
    private static AddressUnmarshaller();
    public sealed virtual Address Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Address Unmarshall(JsonUnmarshallerContext context);
    public static AddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AdvertiseByoipCidrRequestMarshaller : object {
    private static AdvertiseByoipCidrRequestMarshaller _instance;
    public static AdvertiseByoipCidrRequestMarshaller Instance { get; }
    private static AdvertiseByoipCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdvertiseByoipCidrRequest publicRequest);
    internal static AdvertiseByoipCidrRequestMarshaller GetInstance();
    public static AdvertiseByoipCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AdvertiseByoipCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AdvertiseByoipCidrResponseUnmarshaller _instance;
    public static AdvertiseByoipCidrResponseUnmarshaller Instance { get; }
    private static AdvertiseByoipCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdvertiseByoipCidrResponseUnmarshaller GetInstance();
    public static AdvertiseByoipCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressRequestMarshaller : object {
    private static AllocateAddressRequestMarshaller _instance;
    public static AllocateAddressRequestMarshaller Instance { get; }
    private static AllocateAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AllocateAddressRequest publicRequest);
    internal static AllocateAddressRequestMarshaller GetInstance();
    public static AllocateAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AllocateAddressResponseUnmarshaller _instance;
    public static AllocateAddressResponseUnmarshaller Instance { get; }
    private static AllocateAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AllocateAddressResponseUnmarshaller GetInstance();
    public static AllocateAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsRequestMarshaller : object {
    private static AllocateHostsRequestMarshaller _instance;
    public static AllocateHostsRequestMarshaller Instance { get; }
    private static AllocateHostsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AllocateHostsRequest publicRequest);
    internal static AllocateHostsRequestMarshaller GetInstance();
    public static AllocateHostsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AllocateHostsResponseUnmarshaller _instance;
    public static AllocateHostsResponseUnmarshaller Instance { get; }
    private static AllocateHostsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AllocateHostsResponseUnmarshaller GetInstance();
    public static AllocateHostsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateIpamPoolCidrRequestMarshaller : object {
    private static AllocateIpamPoolCidrRequestMarshaller _instance;
    public static AllocateIpamPoolCidrRequestMarshaller Instance { get; }
    private static AllocateIpamPoolCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AllocateIpamPoolCidrRequest publicRequest);
    internal static AllocateIpamPoolCidrRequestMarshaller GetInstance();
    public static AllocateIpamPoolCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateIpamPoolCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AllocateIpamPoolCidrResponseUnmarshaller _instance;
    public static AllocateIpamPoolCidrResponseUnmarshaller Instance { get; }
    private static AllocateIpamPoolCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AllocateIpamPoolCidrResponseUnmarshaller GetInstance();
    public static AllocateIpamPoolCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllowedPrincipalUnmarshaller : object {
    private static AllowedPrincipalUnmarshaller _instance;
    public static AllowedPrincipalUnmarshaller Instance { get; }
    private static AllowedPrincipalUnmarshaller();
    public sealed virtual AllowedPrincipal Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AllowedPrincipal Unmarshall(JsonUnmarshallerContext context);
    public static AllowedPrincipalUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AlternatePathHintUnmarshaller : object {
    private static AlternatePathHintUnmarshaller _instance;
    public static AlternatePathHintUnmarshaller Instance { get; }
    private static AlternatePathHintUnmarshaller();
    public sealed virtual AlternatePathHint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AlternatePathHint Unmarshall(JsonUnmarshallerContext context);
    public static AlternatePathHintUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AnalysisAclRuleUnmarshaller : object {
    private static AnalysisAclRuleUnmarshaller _instance;
    public static AnalysisAclRuleUnmarshaller Instance { get; }
    private static AnalysisAclRuleUnmarshaller();
    public sealed virtual AnalysisAclRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisAclRule Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisAclRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AnalysisComponentUnmarshaller : object {
    private static AnalysisComponentUnmarshaller _instance;
    public static AnalysisComponentUnmarshaller Instance { get; }
    private static AnalysisComponentUnmarshaller();
    public sealed virtual AnalysisComponent Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisComponent Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisComponentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AnalysisLoadBalancerListenerUnmarshaller : object {
    private static AnalysisLoadBalancerListenerUnmarshaller _instance;
    public static AnalysisLoadBalancerListenerUnmarshaller Instance { get; }
    private static AnalysisLoadBalancerListenerUnmarshaller();
    public sealed virtual AnalysisLoadBalancerListener Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisLoadBalancerListener Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisLoadBalancerListenerUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AnalysisLoadBalancerTargetUnmarshaller : object {
    private static AnalysisLoadBalancerTargetUnmarshaller _instance;
    public static AnalysisLoadBalancerTargetUnmarshaller Instance { get; }
    private static AnalysisLoadBalancerTargetUnmarshaller();
    public sealed virtual AnalysisLoadBalancerTarget Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisLoadBalancerTarget Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisLoadBalancerTargetUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AnalysisPacketHeaderUnmarshaller : object {
    private static AnalysisPacketHeaderUnmarshaller _instance;
    public static AnalysisPacketHeaderUnmarshaller Instance { get; }
    private static AnalysisPacketHeaderUnmarshaller();
    public sealed virtual AnalysisPacketHeader Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisPacketHeader Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisPacketHeaderUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AnalysisRouteTableRouteUnmarshaller : object {
    private static AnalysisRouteTableRouteUnmarshaller _instance;
    public static AnalysisRouteTableRouteUnmarshaller Instance { get; }
    private static AnalysisRouteTableRouteUnmarshaller();
    public sealed virtual AnalysisRouteTableRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisRouteTableRoute Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisRouteTableRouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AnalysisSecurityGroupRuleUnmarshaller : object {
    private static AnalysisSecurityGroupRuleUnmarshaller _instance;
    public static AnalysisSecurityGroupRuleUnmarshaller Instance { get; }
    private static AnalysisSecurityGroupRuleUnmarshaller();
    public sealed virtual AnalysisSecurityGroupRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisSecurityGroupRule Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisSecurityGroupRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ApplySecurityGroupsToClientVpnTargetNetworkRequestMarshaller : object {
    private static ApplySecurityGroupsToClientVpnTargetNetworkRequestMarshaller _instance;
    public static ApplySecurityGroupsToClientVpnTargetNetworkRequestMarshaller Instance { get; }
    private static ApplySecurityGroupsToClientVpnTargetNetworkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ApplySecurityGroupsToClientVpnTargetNetworkRequest publicRequest);
    internal static ApplySecurityGroupsToClientVpnTargetNetworkRequestMarshaller GetInstance();
    public static ApplySecurityGroupsToClientVpnTargetNetworkRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ApplySecurityGroupsToClientVpnTargetNetworkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ApplySecurityGroupsToClientVpnTargetNetworkResponseUnmarshaller _instance;
    public static ApplySecurityGroupsToClientVpnTargetNetworkResponseUnmarshaller Instance { get; }
    private static ApplySecurityGroupsToClientVpnTargetNetworkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ApplySecurityGroupsToClientVpnTargetNetworkResponseUnmarshaller GetInstance();
    public static ApplySecurityGroupsToClientVpnTargetNetworkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AsnAssociationUnmarshaller : object {
    private static AsnAssociationUnmarshaller _instance;
    public static AsnAssociationUnmarshaller Instance { get; }
    private static AsnAssociationUnmarshaller();
    public sealed virtual AsnAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AsnAssociation Unmarshall(JsonUnmarshallerContext context);
    public static AsnAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignedPrivateIpAddressUnmarshaller : object {
    private static AssignedPrivateIpAddressUnmarshaller _instance;
    public static AssignedPrivateIpAddressUnmarshaller Instance { get; }
    private static AssignedPrivateIpAddressUnmarshaller();
    public sealed virtual AssignedPrivateIpAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssignedPrivateIpAddress Unmarshall(JsonUnmarshallerContext context);
    public static AssignedPrivateIpAddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignIpv6AddressesRequestMarshaller : object {
    private static AssignIpv6AddressesRequestMarshaller _instance;
    public static AssignIpv6AddressesRequestMarshaller Instance { get; }
    private static AssignIpv6AddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssignIpv6AddressesRequest publicRequest);
    internal static AssignIpv6AddressesRequestMarshaller GetInstance();
    public static AssignIpv6AddressesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignIpv6AddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssignIpv6AddressesResponseUnmarshaller _instance;
    public static AssignIpv6AddressesResponseUnmarshaller Instance { get; }
    private static AssignIpv6AddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssignIpv6AddressesResponseUnmarshaller GetInstance();
    public static AssignIpv6AddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesRequestMarshaller : object {
    private static AssignPrivateIpAddressesRequestMarshaller _instance;
    public static AssignPrivateIpAddressesRequestMarshaller Instance { get; }
    private static AssignPrivateIpAddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssignPrivateIpAddressesRequest publicRequest);
    internal static AssignPrivateIpAddressesRequestMarshaller GetInstance();
    public static AssignPrivateIpAddressesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssignPrivateIpAddressesResponseUnmarshaller _instance;
    public static AssignPrivateIpAddressesResponseUnmarshaller Instance { get; }
    private static AssignPrivateIpAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssignPrivateIpAddressesResponseUnmarshaller GetInstance();
    public static AssignPrivateIpAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateNatGatewayAddressRequestMarshaller : object {
    private static AssignPrivateNatGatewayAddressRequestMarshaller _instance;
    public static AssignPrivateNatGatewayAddressRequestMarshaller Instance { get; }
    private static AssignPrivateNatGatewayAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssignPrivateNatGatewayAddressRequest publicRequest);
    internal static AssignPrivateNatGatewayAddressRequestMarshaller GetInstance();
    public static AssignPrivateNatGatewayAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateNatGatewayAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssignPrivateNatGatewayAddressResponseUnmarshaller _instance;
    public static AssignPrivateNatGatewayAddressResponseUnmarshaller Instance { get; }
    private static AssignPrivateNatGatewayAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssignPrivateNatGatewayAddressResponseUnmarshaller GetInstance();
    public static AssignPrivateNatGatewayAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressRequestMarshaller : object {
    private static AssociateAddressRequestMarshaller _instance;
    public static AssociateAddressRequestMarshaller Instance { get; }
    private static AssociateAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateAddressRequest publicRequest);
    internal static AssociateAddressRequestMarshaller GetInstance();
    public static AssociateAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateAddressResponseUnmarshaller _instance;
    public static AssociateAddressResponseUnmarshaller Instance { get; }
    private static AssociateAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateAddressResponseUnmarshaller GetInstance();
    public static AssociateAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateClientVpnTargetNetworkRequestMarshaller : object {
    private static AssociateClientVpnTargetNetworkRequestMarshaller _instance;
    public static AssociateClientVpnTargetNetworkRequestMarshaller Instance { get; }
    private static AssociateClientVpnTargetNetworkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateClientVpnTargetNetworkRequest publicRequest);
    internal static AssociateClientVpnTargetNetworkRequestMarshaller GetInstance();
    public static AssociateClientVpnTargetNetworkRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateClientVpnTargetNetworkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateClientVpnTargetNetworkResponseUnmarshaller _instance;
    public static AssociateClientVpnTargetNetworkResponseUnmarshaller Instance { get; }
    private static AssociateClientVpnTargetNetworkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateClientVpnTargetNetworkResponseUnmarshaller GetInstance();
    public static AssociateClientVpnTargetNetworkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsRequestMarshaller : object {
    private static AssociateDhcpOptionsRequestMarshaller _instance;
    public static AssociateDhcpOptionsRequestMarshaller Instance { get; }
    private static AssociateDhcpOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateDhcpOptionsRequest publicRequest);
    internal static AssociateDhcpOptionsRequestMarshaller GetInstance();
    public static AssociateDhcpOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateDhcpOptionsResponseUnmarshaller _instance;
    public static AssociateDhcpOptionsResponseUnmarshaller Instance { get; }
    private static AssociateDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateDhcpOptionsResponseUnmarshaller GetInstance();
    public static AssociateDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociatedRoleUnmarshaller : object {
    private static AssociatedRoleUnmarshaller _instance;
    public static AssociatedRoleUnmarshaller Instance { get; }
    private static AssociatedRoleUnmarshaller();
    public sealed virtual AssociatedRole Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociatedRole Unmarshall(JsonUnmarshallerContext context);
    public static AssociatedRoleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociatedTargetNetworkUnmarshaller : object {
    private static AssociatedTargetNetworkUnmarshaller _instance;
    public static AssociatedTargetNetworkUnmarshaller Instance { get; }
    private static AssociatedTargetNetworkUnmarshaller();
    public sealed virtual AssociatedTargetNetwork Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociatedTargetNetwork Unmarshall(JsonUnmarshallerContext context);
    public static AssociatedTargetNetworkUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateEnclaveCertificateIamRoleRequestMarshaller : object {
    private static AssociateEnclaveCertificateIamRoleRequestMarshaller _instance;
    public static AssociateEnclaveCertificateIamRoleRequestMarshaller Instance { get; }
    private static AssociateEnclaveCertificateIamRoleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateEnclaveCertificateIamRoleRequest publicRequest);
    internal static AssociateEnclaveCertificateIamRoleRequestMarshaller GetInstance();
    public static AssociateEnclaveCertificateIamRoleRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateEnclaveCertificateIamRoleResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateEnclaveCertificateIamRoleResponseUnmarshaller _instance;
    public static AssociateEnclaveCertificateIamRoleResponseUnmarshaller Instance { get; }
    private static AssociateEnclaveCertificateIamRoleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateEnclaveCertificateIamRoleResponseUnmarshaller GetInstance();
    public static AssociateEnclaveCertificateIamRoleResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateIamInstanceProfileRequestMarshaller : object {
    private static AssociateIamInstanceProfileRequestMarshaller _instance;
    public static AssociateIamInstanceProfileRequestMarshaller Instance { get; }
    private static AssociateIamInstanceProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateIamInstanceProfileRequest publicRequest);
    internal static AssociateIamInstanceProfileRequestMarshaller GetInstance();
    public static AssociateIamInstanceProfileRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateIamInstanceProfileResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateIamInstanceProfileResponseUnmarshaller _instance;
    public static AssociateIamInstanceProfileResponseUnmarshaller Instance { get; }
    private static AssociateIamInstanceProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateIamInstanceProfileResponseUnmarshaller GetInstance();
    public static AssociateIamInstanceProfileResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateInstanceEventWindowRequestMarshaller : object {
    private static AssociateInstanceEventWindowRequestMarshaller _instance;
    public static AssociateInstanceEventWindowRequestMarshaller Instance { get; }
    private static AssociateInstanceEventWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateInstanceEventWindowRequest publicRequest);
    internal static AssociateInstanceEventWindowRequestMarshaller GetInstance();
    public static AssociateInstanceEventWindowRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateInstanceEventWindowResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateInstanceEventWindowResponseUnmarshaller _instance;
    public static AssociateInstanceEventWindowResponseUnmarshaller Instance { get; }
    private static AssociateInstanceEventWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateInstanceEventWindowResponseUnmarshaller GetInstance();
    public static AssociateInstanceEventWindowResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateIpamByoasnRequestMarshaller : object {
    private static AssociateIpamByoasnRequestMarshaller _instance;
    public static AssociateIpamByoasnRequestMarshaller Instance { get; }
    private static AssociateIpamByoasnRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateIpamByoasnRequest publicRequest);
    internal static AssociateIpamByoasnRequestMarshaller GetInstance();
    public static AssociateIpamByoasnRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateIpamByoasnResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateIpamByoasnResponseUnmarshaller _instance;
    public static AssociateIpamByoasnResponseUnmarshaller Instance { get; }
    private static AssociateIpamByoasnResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateIpamByoasnResponseUnmarshaller GetInstance();
    public static AssociateIpamByoasnResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateIpamResourceDiscoveryRequestMarshaller : object {
    private static AssociateIpamResourceDiscoveryRequestMarshaller _instance;
    public static AssociateIpamResourceDiscoveryRequestMarshaller Instance { get; }
    private static AssociateIpamResourceDiscoveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateIpamResourceDiscoveryRequest publicRequest);
    internal static AssociateIpamResourceDiscoveryRequestMarshaller GetInstance();
    public static AssociateIpamResourceDiscoveryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateIpamResourceDiscoveryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateIpamResourceDiscoveryResponseUnmarshaller _instance;
    public static AssociateIpamResourceDiscoveryResponseUnmarshaller Instance { get; }
    private static AssociateIpamResourceDiscoveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateIpamResourceDiscoveryResponseUnmarshaller GetInstance();
    public static AssociateIpamResourceDiscoveryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateNatGatewayAddressRequestMarshaller : object {
    private static AssociateNatGatewayAddressRequestMarshaller _instance;
    public static AssociateNatGatewayAddressRequestMarshaller Instance { get; }
    private static AssociateNatGatewayAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateNatGatewayAddressRequest publicRequest);
    internal static AssociateNatGatewayAddressRequestMarshaller GetInstance();
    public static AssociateNatGatewayAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateNatGatewayAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateNatGatewayAddressResponseUnmarshaller _instance;
    public static AssociateNatGatewayAddressResponseUnmarshaller Instance { get; }
    private static AssociateNatGatewayAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateNatGatewayAddressResponseUnmarshaller GetInstance();
    public static AssociateNatGatewayAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableRequestMarshaller : object {
    private static AssociateRouteTableRequestMarshaller _instance;
    public static AssociateRouteTableRequestMarshaller Instance { get; }
    private static AssociateRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateRouteTableRequest publicRequest);
    internal static AssociateRouteTableRequestMarshaller GetInstance();
    public static AssociateRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateRouteTableResponseUnmarshaller _instance;
    public static AssociateRouteTableResponseUnmarshaller Instance { get; }
    private static AssociateRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateRouteTableResponseUnmarshaller GetInstance();
    public static AssociateRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateSubnetCidrBlockRequestMarshaller : object {
    private static AssociateSubnetCidrBlockRequestMarshaller _instance;
    public static AssociateSubnetCidrBlockRequestMarshaller Instance { get; }
    private static AssociateSubnetCidrBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateSubnetCidrBlockRequest publicRequest);
    internal static AssociateSubnetCidrBlockRequestMarshaller GetInstance();
    public static AssociateSubnetCidrBlockRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateSubnetCidrBlockResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateSubnetCidrBlockResponseUnmarshaller _instance;
    public static AssociateSubnetCidrBlockResponseUnmarshaller Instance { get; }
    private static AssociateSubnetCidrBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateSubnetCidrBlockResponseUnmarshaller GetInstance();
    public static AssociateSubnetCidrBlockResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTransitGatewayMulticastDomainRequestMarshaller : object {
    private static AssociateTransitGatewayMulticastDomainRequestMarshaller _instance;
    public static AssociateTransitGatewayMulticastDomainRequestMarshaller Instance { get; }
    private static AssociateTransitGatewayMulticastDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateTransitGatewayMulticastDomainRequest publicRequest);
    internal static AssociateTransitGatewayMulticastDomainRequestMarshaller GetInstance();
    public static AssociateTransitGatewayMulticastDomainRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTransitGatewayMulticastDomainResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateTransitGatewayMulticastDomainResponseUnmarshaller _instance;
    public static AssociateTransitGatewayMulticastDomainResponseUnmarshaller Instance { get; }
    private static AssociateTransitGatewayMulticastDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateTransitGatewayMulticastDomainResponseUnmarshaller GetInstance();
    public static AssociateTransitGatewayMulticastDomainResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTransitGatewayPolicyTableRequestMarshaller : object {
    private static AssociateTransitGatewayPolicyTableRequestMarshaller _instance;
    public static AssociateTransitGatewayPolicyTableRequestMarshaller Instance { get; }
    private static AssociateTransitGatewayPolicyTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateTransitGatewayPolicyTableRequest publicRequest);
    internal static AssociateTransitGatewayPolicyTableRequestMarshaller GetInstance();
    public static AssociateTransitGatewayPolicyTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTransitGatewayPolicyTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateTransitGatewayPolicyTableResponseUnmarshaller _instance;
    public static AssociateTransitGatewayPolicyTableResponseUnmarshaller Instance { get; }
    private static AssociateTransitGatewayPolicyTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateTransitGatewayPolicyTableResponseUnmarshaller GetInstance();
    public static AssociateTransitGatewayPolicyTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTransitGatewayRouteTableRequestMarshaller : object {
    private static AssociateTransitGatewayRouteTableRequestMarshaller _instance;
    public static AssociateTransitGatewayRouteTableRequestMarshaller Instance { get; }
    private static AssociateTransitGatewayRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateTransitGatewayRouteTableRequest publicRequest);
    internal static AssociateTransitGatewayRouteTableRequestMarshaller GetInstance();
    public static AssociateTransitGatewayRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTransitGatewayRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateTransitGatewayRouteTableResponseUnmarshaller _instance;
    public static AssociateTransitGatewayRouteTableResponseUnmarshaller Instance { get; }
    private static AssociateTransitGatewayRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateTransitGatewayRouteTableResponseUnmarshaller GetInstance();
    public static AssociateTransitGatewayRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTrunkInterfaceRequestMarshaller : object {
    private static AssociateTrunkInterfaceRequestMarshaller _instance;
    public static AssociateTrunkInterfaceRequestMarshaller Instance { get; }
    private static AssociateTrunkInterfaceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateTrunkInterfaceRequest publicRequest);
    internal static AssociateTrunkInterfaceRequestMarshaller GetInstance();
    public static AssociateTrunkInterfaceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateTrunkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateTrunkInterfaceResponseUnmarshaller _instance;
    public static AssociateTrunkInterfaceResponseUnmarshaller Instance { get; }
    private static AssociateTrunkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateTrunkInterfaceResponseUnmarshaller GetInstance();
    public static AssociateTrunkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateVpcCidrBlockRequestMarshaller : object {
    private static AssociateVpcCidrBlockRequestMarshaller _instance;
    public static AssociateVpcCidrBlockRequestMarshaller Instance { get; }
    private static AssociateVpcCidrBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateVpcCidrBlockRequest publicRequest);
    internal static AssociateVpcCidrBlockRequestMarshaller GetInstance();
    public static AssociateVpcCidrBlockRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateVpcCidrBlockResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateVpcCidrBlockResponseUnmarshaller _instance;
    public static AssociateVpcCidrBlockResponseUnmarshaller Instance { get; }
    private static AssociateVpcCidrBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateVpcCidrBlockResponseUnmarshaller GetInstance();
    public static AssociateVpcCidrBlockResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociationStatusUnmarshaller : object {
    private static AssociationStatusUnmarshaller _instance;
    public static AssociationStatusUnmarshaller Instance { get; }
    private static AssociationStatusUnmarshaller();
    public sealed virtual AssociationStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociationStatus Unmarshall(JsonUnmarshallerContext context);
    public static AssociationStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcRequestMarshaller : object {
    private static AttachClassicLinkVpcRequestMarshaller _instance;
    public static AttachClassicLinkVpcRequestMarshaller Instance { get; }
    private static AttachClassicLinkVpcRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachClassicLinkVpcRequest publicRequest);
    internal static AttachClassicLinkVpcRequestMarshaller GetInstance();
    public static AttachClassicLinkVpcRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachClassicLinkVpcResponseUnmarshaller _instance;
    public static AttachClassicLinkVpcResponseUnmarshaller Instance { get; }
    private static AttachClassicLinkVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachClassicLinkVpcResponseUnmarshaller GetInstance();
    public static AttachClassicLinkVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayRequestMarshaller : object {
    private static AttachInternetGatewayRequestMarshaller _instance;
    public static AttachInternetGatewayRequestMarshaller Instance { get; }
    private static AttachInternetGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachInternetGatewayRequest publicRequest);
    internal static AttachInternetGatewayRequestMarshaller GetInstance();
    public static AttachInternetGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachInternetGatewayResponseUnmarshaller _instance;
    public static AttachInternetGatewayResponseUnmarshaller Instance { get; }
    private static AttachInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachInternetGatewayResponseUnmarshaller GetInstance();
    public static AttachInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachmentEnaSrdSpecificationUnmarshaller : object {
    private static AttachmentEnaSrdSpecificationUnmarshaller _instance;
    public static AttachmentEnaSrdSpecificationUnmarshaller Instance { get; }
    private static AttachmentEnaSrdSpecificationUnmarshaller();
    public sealed virtual AttachmentEnaSrdSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttachmentEnaSrdSpecification Unmarshall(JsonUnmarshallerContext context);
    public static AttachmentEnaSrdSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachmentEnaSrdUdpSpecificationUnmarshaller : object {
    private static AttachmentEnaSrdUdpSpecificationUnmarshaller _instance;
    public static AttachmentEnaSrdUdpSpecificationUnmarshaller Instance { get; }
    private static AttachmentEnaSrdUdpSpecificationUnmarshaller();
    public sealed virtual AttachmentEnaSrdUdpSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttachmentEnaSrdUdpSpecification Unmarshall(JsonUnmarshallerContext context);
    public static AttachmentEnaSrdUdpSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceRequestMarshaller : object {
    private static AttachNetworkInterfaceRequestMarshaller _instance;
    public static AttachNetworkInterfaceRequestMarshaller Instance { get; }
    private static AttachNetworkInterfaceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachNetworkInterfaceRequest publicRequest);
    internal static AttachNetworkInterfaceRequestMarshaller GetInstance();
    public static AttachNetworkInterfaceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachNetworkInterfaceResponseUnmarshaller _instance;
    public static AttachNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static AttachNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachNetworkInterfaceResponseUnmarshaller GetInstance();
    public static AttachNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVerifiedAccessTrustProviderRequestMarshaller : object {
    private static AttachVerifiedAccessTrustProviderRequestMarshaller _instance;
    public static AttachVerifiedAccessTrustProviderRequestMarshaller Instance { get; }
    private static AttachVerifiedAccessTrustProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachVerifiedAccessTrustProviderRequest publicRequest);
    internal static AttachVerifiedAccessTrustProviderRequestMarshaller GetInstance();
    public static AttachVerifiedAccessTrustProviderRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVerifiedAccessTrustProviderResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachVerifiedAccessTrustProviderResponseUnmarshaller _instance;
    public static AttachVerifiedAccessTrustProviderResponseUnmarshaller Instance { get; }
    private static AttachVerifiedAccessTrustProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachVerifiedAccessTrustProviderResponseUnmarshaller GetInstance();
    public static AttachVerifiedAccessTrustProviderResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeRequestMarshaller : object {
    private static AttachVolumeRequestMarshaller _instance;
    public static AttachVolumeRequestMarshaller Instance { get; }
    private static AttachVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachVolumeRequest publicRequest);
    internal static AttachVolumeRequestMarshaller GetInstance();
    public static AttachVolumeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachVolumeResponseUnmarshaller _instance;
    public static AttachVolumeResponseUnmarshaller Instance { get; }
    private static AttachVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachVolumeResponseUnmarshaller GetInstance();
    public static AttachVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayRequestMarshaller : object {
    private static AttachVpnGatewayRequestMarshaller _instance;
    public static AttachVpnGatewayRequestMarshaller Instance { get; }
    private static AttachVpnGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachVpnGatewayRequest publicRequest);
    internal static AttachVpnGatewayRequestMarshaller GetInstance();
    public static AttachVpnGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachVpnGatewayResponseUnmarshaller _instance;
    public static AttachVpnGatewayResponseUnmarshaller Instance { get; }
    private static AttachVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachVpnGatewayResponseUnmarshaller GetInstance();
    public static AttachVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizationRuleUnmarshaller : object {
    private static AuthorizationRuleUnmarshaller _instance;
    public static AuthorizationRuleUnmarshaller Instance { get; }
    private static AuthorizationRuleUnmarshaller();
    public sealed virtual AuthorizationRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthorizationRule Unmarshall(JsonUnmarshallerContext context);
    public static AuthorizationRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeClientVpnIngressRequestMarshaller : object {
    private static AuthorizeClientVpnIngressRequestMarshaller _instance;
    public static AuthorizeClientVpnIngressRequestMarshaller Instance { get; }
    private static AuthorizeClientVpnIngressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AuthorizeClientVpnIngressRequest publicRequest);
    internal static AuthorizeClientVpnIngressRequestMarshaller GetInstance();
    public static AuthorizeClientVpnIngressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeClientVpnIngressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AuthorizeClientVpnIngressResponseUnmarshaller _instance;
    public static AuthorizeClientVpnIngressResponseUnmarshaller Instance { get; }
    private static AuthorizeClientVpnIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AuthorizeClientVpnIngressResponseUnmarshaller GetInstance();
    public static AuthorizeClientVpnIngressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressRequestMarshaller : object {
    private static AuthorizeSecurityGroupEgressRequestMarshaller _instance;
    public static AuthorizeSecurityGroupEgressRequestMarshaller Instance { get; }
    private static AuthorizeSecurityGroupEgressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AuthorizeSecurityGroupEgressRequest publicRequest);
    internal static AuthorizeSecurityGroupEgressRequestMarshaller GetInstance();
    public static AuthorizeSecurityGroupEgressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AuthorizeSecurityGroupEgressResponseUnmarshaller _instance;
    public static AuthorizeSecurityGroupEgressResponseUnmarshaller Instance { get; }
    private static AuthorizeSecurityGroupEgressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AuthorizeSecurityGroupEgressResponseUnmarshaller GetInstance();
    public static AuthorizeSecurityGroupEgressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressRequestMarshaller : object {
    private static AuthorizeSecurityGroupIngressRequestMarshaller _instance;
    public static AuthorizeSecurityGroupIngressRequestMarshaller Instance { get; }
    private static AuthorizeSecurityGroupIngressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AuthorizeSecurityGroupIngressRequest publicRequest);
    internal static AuthorizeSecurityGroupIngressRequestMarshaller GetInstance();
    public static AuthorizeSecurityGroupIngressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AuthorizeSecurityGroupIngressResponseUnmarshaller _instance;
    public static AuthorizeSecurityGroupIngressResponseUnmarshaller Instance { get; }
    private static AuthorizeSecurityGroupIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AuthorizeSecurityGroupIngressResponseUnmarshaller GetInstance();
    public static AuthorizeSecurityGroupIngressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneMessageUnmarshaller : object {
    private static AvailabilityZoneMessageUnmarshaller _instance;
    public static AvailabilityZoneMessageUnmarshaller Instance { get; }
    private static AvailabilityZoneMessageUnmarshaller();
    public sealed virtual AvailabilityZoneMessage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZoneMessage Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneMessageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller : object {
    private static AvailabilityZoneUnmarshaller _instance;
    public static AvailabilityZoneUnmarshaller Instance { get; }
    private static AvailabilityZoneUnmarshaller();
    public sealed virtual AvailabilityZone Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZone Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AvailableCapacityUnmarshaller : object {
    private static AvailableCapacityUnmarshaller _instance;
    public static AvailableCapacityUnmarshaller Instance { get; }
    private static AvailableCapacityUnmarshaller();
    public sealed virtual AvailableCapacity Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailableCapacity Unmarshall(JsonUnmarshallerContext context);
    public static AvailableCapacityUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BaselineEbsBandwidthMbpsUnmarshaller : object {
    private static BaselineEbsBandwidthMbpsUnmarshaller _instance;
    public static BaselineEbsBandwidthMbpsUnmarshaller Instance { get; }
    private static BaselineEbsBandwidthMbpsUnmarshaller();
    public sealed virtual BaselineEbsBandwidthMbps Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BaselineEbsBandwidthMbps Unmarshall(JsonUnmarshallerContext context);
    public static BaselineEbsBandwidthMbpsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller : object {
    private static BlockDeviceMappingUnmarshaller _instance;
    public static BlockDeviceMappingUnmarshaller Instance { get; }
    private static BlockDeviceMappingUnmarshaller();
    public sealed virtual BlockDeviceMapping Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlockDeviceMapping Unmarshall(JsonUnmarshallerContext context);
    public static BlockDeviceMappingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceRequestMarshaller : object {
    private static BundleInstanceRequestMarshaller _instance;
    public static BundleInstanceRequestMarshaller Instance { get; }
    private static BundleInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BundleInstanceRequest publicRequest);
    internal static BundleInstanceRequestMarshaller GetInstance();
    public static BundleInstanceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static BundleInstanceResponseUnmarshaller _instance;
    public static BundleInstanceResponseUnmarshaller Instance { get; }
    private static BundleInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BundleInstanceResponseUnmarshaller GetInstance();
    public static BundleInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskErrorUnmarshaller : object {
    private static BundleTaskErrorUnmarshaller _instance;
    public static BundleTaskErrorUnmarshaller Instance { get; }
    private static BundleTaskErrorUnmarshaller();
    public sealed virtual BundleTaskError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BundleTaskError Unmarshall(JsonUnmarshallerContext context);
    public static BundleTaskErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskUnmarshaller : object {
    private static BundleTaskUnmarshaller _instance;
    public static BundleTaskUnmarshaller Instance { get; }
    private static BundleTaskUnmarshaller();
    public sealed virtual BundleTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BundleTask Unmarshall(JsonUnmarshallerContext context);
    public static BundleTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ByoasnUnmarshaller : object {
    private static ByoasnUnmarshaller _instance;
    public static ByoasnUnmarshaller Instance { get; }
    private static ByoasnUnmarshaller();
    public sealed virtual Byoasn Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Byoasn Unmarshall(JsonUnmarshallerContext context);
    public static ByoasnUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ByoipCidrUnmarshaller : object {
    private static ByoipCidrUnmarshaller _instance;
    public static ByoipCidrUnmarshaller Instance { get; }
    private static ByoipCidrUnmarshaller();
    public sealed virtual ByoipCidr Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ByoipCidr Unmarshall(JsonUnmarshallerContext context);
    public static ByoipCidrUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskRequestMarshaller : object {
    private static CancelBundleTaskRequestMarshaller _instance;
    public static CancelBundleTaskRequestMarshaller Instance { get; }
    private static CancelBundleTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelBundleTaskRequest publicRequest);
    internal static CancelBundleTaskRequestMarshaller GetInstance();
    public static CancelBundleTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelBundleTaskResponseUnmarshaller _instance;
    public static CancelBundleTaskResponseUnmarshaller Instance { get; }
    private static CancelBundleTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelBundleTaskResponseUnmarshaller GetInstance();
    public static CancelBundleTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelCapacityReservationFleetErrorUnmarshaller : object {
    private static CancelCapacityReservationFleetErrorUnmarshaller _instance;
    public static CancelCapacityReservationFleetErrorUnmarshaller Instance { get; }
    private static CancelCapacityReservationFleetErrorUnmarshaller();
    public sealed virtual CancelCapacityReservationFleetError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelCapacityReservationFleetError Unmarshall(JsonUnmarshallerContext context);
    public static CancelCapacityReservationFleetErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelCapacityReservationFleetsRequestMarshaller : object {
    private static CancelCapacityReservationFleetsRequestMarshaller _instance;
    public static CancelCapacityReservationFleetsRequestMarshaller Instance { get; }
    private static CancelCapacityReservationFleetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelCapacityReservationFleetsRequest publicRequest);
    internal static CancelCapacityReservationFleetsRequestMarshaller GetInstance();
    public static CancelCapacityReservationFleetsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelCapacityReservationFleetsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelCapacityReservationFleetsResponseUnmarshaller _instance;
    public static CancelCapacityReservationFleetsResponseUnmarshaller Instance { get; }
    private static CancelCapacityReservationFleetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelCapacityReservationFleetsResponseUnmarshaller GetInstance();
    public static CancelCapacityReservationFleetsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelCapacityReservationRequestMarshaller : object {
    private static CancelCapacityReservationRequestMarshaller _instance;
    public static CancelCapacityReservationRequestMarshaller Instance { get; }
    private static CancelCapacityReservationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelCapacityReservationRequest publicRequest);
    internal static CancelCapacityReservationRequestMarshaller GetInstance();
    public static CancelCapacityReservationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelCapacityReservationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelCapacityReservationResponseUnmarshaller _instance;
    public static CancelCapacityReservationResponseUnmarshaller Instance { get; }
    private static CancelCapacityReservationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelCapacityReservationResponseUnmarshaller GetInstance();
    public static CancelCapacityReservationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskRequestMarshaller : object {
    private static CancelConversionTaskRequestMarshaller _instance;
    public static CancelConversionTaskRequestMarshaller Instance { get; }
    private static CancelConversionTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelConversionTaskRequest publicRequest);
    internal static CancelConversionTaskRequestMarshaller GetInstance();
    public static CancelConversionTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelConversionTaskResponseUnmarshaller _instance;
    public static CancelConversionTaskResponseUnmarshaller Instance { get; }
    private static CancelConversionTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelConversionTaskResponseUnmarshaller GetInstance();
    public static CancelConversionTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller : object {
    private static CancelExportTaskRequestMarshaller _instance;
    public static CancelExportTaskRequestMarshaller Instance { get; }
    private static CancelExportTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelExportTaskRequest publicRequest);
    internal static CancelExportTaskRequestMarshaller GetInstance();
    public static CancelExportTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelExportTaskResponseUnmarshaller _instance;
    public static CancelExportTaskResponseUnmarshaller Instance { get; }
    private static CancelExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelExportTaskResponseUnmarshaller GetInstance();
    public static CancelExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelImageLaunchPermissionRequestMarshaller : object {
    private static CancelImageLaunchPermissionRequestMarshaller _instance;
    public static CancelImageLaunchPermissionRequestMarshaller Instance { get; }
    private static CancelImageLaunchPermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelImageLaunchPermissionRequest publicRequest);
    internal static CancelImageLaunchPermissionRequestMarshaller GetInstance();
    public static CancelImageLaunchPermissionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelImageLaunchPermissionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelImageLaunchPermissionResponseUnmarshaller _instance;
    public static CancelImageLaunchPermissionResponseUnmarshaller Instance { get; }
    private static CancelImageLaunchPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelImageLaunchPermissionResponseUnmarshaller GetInstance();
    public static CancelImageLaunchPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskRequestMarshaller : object {
    private static CancelImportTaskRequestMarshaller _instance;
    public static CancelImportTaskRequestMarshaller Instance { get; }
    private static CancelImportTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelImportTaskRequest publicRequest);
    internal static CancelImportTaskRequestMarshaller GetInstance();
    public static CancelImportTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelImportTaskResponseUnmarshaller _instance;
    public static CancelImportTaskResponseUnmarshaller Instance { get; }
    private static CancelImportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelImportTaskResponseUnmarshaller GetInstance();
    public static CancelImportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelledSpotInstanceRequestUnmarshaller : object {
    private static CancelledSpotInstanceRequestUnmarshaller _instance;
    public static CancelledSpotInstanceRequestUnmarshaller Instance { get; }
    private static CancelledSpotInstanceRequestUnmarshaller();
    public sealed virtual CancelledSpotInstanceRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelledSpotInstanceRequest Unmarshall(JsonUnmarshallerContext context);
    public static CancelledSpotInstanceRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingRequestMarshaller : object {
    private static CancelReservedInstancesListingRequestMarshaller _instance;
    public static CancelReservedInstancesListingRequestMarshaller Instance { get; }
    private static CancelReservedInstancesListingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelReservedInstancesListingRequest publicRequest);
    internal static CancelReservedInstancesListingRequestMarshaller GetInstance();
    public static CancelReservedInstancesListingRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelReservedInstancesListingResponseUnmarshaller _instance;
    public static CancelReservedInstancesListingResponseUnmarshaller Instance { get; }
    private static CancelReservedInstancesListingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelReservedInstancesListingResponseUnmarshaller GetInstance();
    public static CancelReservedInstancesListingResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorItemUnmarshaller : object {
    private static CancelSpotFleetRequestsErrorItemUnmarshaller _instance;
    public static CancelSpotFleetRequestsErrorItemUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsErrorItemUnmarshaller();
    public sealed virtual CancelSpotFleetRequestsErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelSpotFleetRequestsErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static CancelSpotFleetRequestsErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorUnmarshaller : object {
    private static CancelSpotFleetRequestsErrorUnmarshaller _instance;
    public static CancelSpotFleetRequestsErrorUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsErrorUnmarshaller();
    public sealed virtual CancelSpotFleetRequestsError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelSpotFleetRequestsError Unmarshall(JsonUnmarshallerContext context);
    public static CancelSpotFleetRequestsErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsRequestMarshaller : object {
    private static CancelSpotFleetRequestsRequestMarshaller _instance;
    public static CancelSpotFleetRequestsRequestMarshaller Instance { get; }
    private static CancelSpotFleetRequestsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelSpotFleetRequestsRequest publicRequest);
    internal static CancelSpotFleetRequestsRequestMarshaller GetInstance();
    public static CancelSpotFleetRequestsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelSpotFleetRequestsResponseUnmarshaller _instance;
    public static CancelSpotFleetRequestsResponseUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelSpotFleetRequestsResponseUnmarshaller GetInstance();
    public static CancelSpotFleetRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsSuccessItemUnmarshaller : object {
    private static CancelSpotFleetRequestsSuccessItemUnmarshaller _instance;
    public static CancelSpotFleetRequestsSuccessItemUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsSuccessItemUnmarshaller();
    public sealed virtual CancelSpotFleetRequestsSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelSpotFleetRequestsSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static CancelSpotFleetRequestsSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsRequestMarshaller : object {
    private static CancelSpotInstanceRequestsRequestMarshaller _instance;
    public static CancelSpotInstanceRequestsRequestMarshaller Instance { get; }
    private static CancelSpotInstanceRequestsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelSpotInstanceRequestsRequest publicRequest);
    internal static CancelSpotInstanceRequestsRequestMarshaller GetInstance();
    public static CancelSpotInstanceRequestsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelSpotInstanceRequestsResponseUnmarshaller _instance;
    public static CancelSpotInstanceRequestsResponseUnmarshaller Instance { get; }
    private static CancelSpotInstanceRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelSpotInstanceRequestsResponseUnmarshaller GetInstance();
    public static CancelSpotInstanceRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityAllocationUnmarshaller : object {
    private static CapacityAllocationUnmarshaller _instance;
    public static CapacityAllocationUnmarshaller Instance { get; }
    private static CapacityAllocationUnmarshaller();
    public sealed virtual CapacityAllocation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityAllocation Unmarshall(JsonUnmarshallerContext context);
    public static CapacityAllocationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityBlockOfferingUnmarshaller : object {
    private static CapacityBlockOfferingUnmarshaller _instance;
    public static CapacityBlockOfferingUnmarshaller Instance { get; }
    private static CapacityBlockOfferingUnmarshaller();
    public sealed virtual CapacityBlockOffering Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityBlockOffering Unmarshall(JsonUnmarshallerContext context);
    public static CapacityBlockOfferingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityReservationFleetCancellationStateUnmarshaller : object {
    private static CapacityReservationFleetCancellationStateUnmarshaller _instance;
    public static CapacityReservationFleetCancellationStateUnmarshaller Instance { get; }
    private static CapacityReservationFleetCancellationStateUnmarshaller();
    public sealed virtual CapacityReservationFleetCancellationState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityReservationFleetCancellationState Unmarshall(JsonUnmarshallerContext context);
    public static CapacityReservationFleetCancellationStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityReservationFleetUnmarshaller : object {
    private static CapacityReservationFleetUnmarshaller _instance;
    public static CapacityReservationFleetUnmarshaller Instance { get; }
    private static CapacityReservationFleetUnmarshaller();
    public sealed virtual CapacityReservationFleet Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityReservationFleet Unmarshall(JsonUnmarshallerContext context);
    public static CapacityReservationFleetUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityReservationGroupUnmarshaller : object {
    private static CapacityReservationGroupUnmarshaller _instance;
    public static CapacityReservationGroupUnmarshaller Instance { get; }
    private static CapacityReservationGroupUnmarshaller();
    public sealed virtual CapacityReservationGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityReservationGroup Unmarshall(JsonUnmarshallerContext context);
    public static CapacityReservationGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityReservationOptionsUnmarshaller : object {
    private static CapacityReservationOptionsUnmarshaller _instance;
    public static CapacityReservationOptionsUnmarshaller Instance { get; }
    private static CapacityReservationOptionsUnmarshaller();
    public sealed virtual CapacityReservationOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityReservationOptions Unmarshall(JsonUnmarshallerContext context);
    public static CapacityReservationOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityReservationSpecificationResponseUnmarshaller : object {
    private static CapacityReservationSpecificationResponseUnmarshaller _instance;
    public static CapacityReservationSpecificationResponseUnmarshaller Instance { get; }
    private static CapacityReservationSpecificationResponseUnmarshaller();
    public sealed virtual CapacityReservationSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityReservationSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static CapacityReservationSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityReservationTargetResponseUnmarshaller : object {
    private static CapacityReservationTargetResponseUnmarshaller _instance;
    public static CapacityReservationTargetResponseUnmarshaller Instance { get; }
    private static CapacityReservationTargetResponseUnmarshaller();
    public sealed virtual CapacityReservationTargetResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityReservationTargetResponse Unmarshall(JsonUnmarshallerContext context);
    public static CapacityReservationTargetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CapacityReservationUnmarshaller : object {
    private static CapacityReservationUnmarshaller _instance;
    public static CapacityReservationUnmarshaller Instance { get; }
    private static CapacityReservationUnmarshaller();
    public sealed virtual CapacityReservation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityReservation Unmarshall(JsonUnmarshallerContext context);
    public static CapacityReservationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CarrierGatewayUnmarshaller : object {
    private static CarrierGatewayUnmarshaller _instance;
    public static CarrierGatewayUnmarshaller Instance { get; }
    private static CarrierGatewayUnmarshaller();
    public sealed virtual CarrierGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CarrierGateway Unmarshall(JsonUnmarshallerContext context);
    public static CarrierGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CertificateAuthenticationUnmarshaller : object {
    private static CertificateAuthenticationUnmarshaller _instance;
    public static CertificateAuthenticationUnmarshaller Instance { get; }
    private static CertificateAuthenticationUnmarshaller();
    public sealed virtual CertificateAuthentication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CertificateAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static CertificateAuthenticationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CidrBlockUnmarshaller : object {
    private static CidrBlockUnmarshaller _instance;
    public static CidrBlockUnmarshaller Instance { get; }
    private static CidrBlockUnmarshaller();
    public sealed virtual CidrBlock Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CidrBlock Unmarshall(JsonUnmarshallerContext context);
    public static CidrBlockUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkDnsSupportUnmarshaller : object {
    private static ClassicLinkDnsSupportUnmarshaller _instance;
    public static ClassicLinkDnsSupportUnmarshaller Instance { get; }
    private static ClassicLinkDnsSupportUnmarshaller();
    public sealed virtual ClassicLinkDnsSupport Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClassicLinkDnsSupport Unmarshall(JsonUnmarshallerContext context);
    public static ClassicLinkDnsSupportUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkInstanceUnmarshaller : object {
    private static ClassicLinkInstanceUnmarshaller _instance;
    public static ClassicLinkInstanceUnmarshaller Instance { get; }
    private static ClassicLinkInstanceUnmarshaller();
    public sealed virtual ClassicLinkInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClassicLinkInstance Unmarshall(JsonUnmarshallerContext context);
    public static ClassicLinkInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLoadBalancersConfigUnmarshaller : object {
    private static ClassicLoadBalancersConfigUnmarshaller _instance;
    public static ClassicLoadBalancersConfigUnmarshaller Instance { get; }
    private static ClassicLoadBalancersConfigUnmarshaller();
    public sealed virtual ClassicLoadBalancersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClassicLoadBalancersConfig Unmarshall(JsonUnmarshallerContext context);
    public static ClassicLoadBalancersConfigUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLoadBalancerUnmarshaller : object {
    private static ClassicLoadBalancerUnmarshaller _instance;
    public static ClassicLoadBalancerUnmarshaller Instance { get; }
    private static ClassicLoadBalancerUnmarshaller();
    public sealed virtual ClassicLoadBalancer Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClassicLoadBalancer Unmarshall(JsonUnmarshallerContext context);
    public static ClassicLoadBalancerUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientCertificateRevocationListStatusUnmarshaller : object {
    private static ClientCertificateRevocationListStatusUnmarshaller _instance;
    public static ClientCertificateRevocationListStatusUnmarshaller Instance { get; }
    private static ClientCertificateRevocationListStatusUnmarshaller();
    public sealed virtual ClientCertificateRevocationListStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientCertificateRevocationListStatus Unmarshall(JsonUnmarshallerContext context);
    public static ClientCertificateRevocationListStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientConnectResponseOptionsUnmarshaller : object {
    private static ClientConnectResponseOptionsUnmarshaller _instance;
    public static ClientConnectResponseOptionsUnmarshaller Instance { get; }
    private static ClientConnectResponseOptionsUnmarshaller();
    public sealed virtual ClientConnectResponseOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientConnectResponseOptions Unmarshall(JsonUnmarshallerContext context);
    public static ClientConnectResponseOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientLoginBannerResponseOptionsUnmarshaller : object {
    private static ClientLoginBannerResponseOptionsUnmarshaller _instance;
    public static ClientLoginBannerResponseOptionsUnmarshaller Instance { get; }
    private static ClientLoginBannerResponseOptionsUnmarshaller();
    public sealed virtual ClientLoginBannerResponseOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientLoginBannerResponseOptions Unmarshall(JsonUnmarshallerContext context);
    public static ClientLoginBannerResponseOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnAuthenticationUnmarshaller : object {
    private static ClientVpnAuthenticationUnmarshaller _instance;
    public static ClientVpnAuthenticationUnmarshaller Instance { get; }
    private static ClientVpnAuthenticationUnmarshaller();
    public sealed virtual ClientVpnAuthentication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnAuthenticationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnAuthorizationRuleStatusUnmarshaller : object {
    private static ClientVpnAuthorizationRuleStatusUnmarshaller _instance;
    public static ClientVpnAuthorizationRuleStatusUnmarshaller Instance { get; }
    private static ClientVpnAuthorizationRuleStatusUnmarshaller();
    public sealed virtual ClientVpnAuthorizationRuleStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnAuthorizationRuleStatus Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnAuthorizationRuleStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnConnectionStatusUnmarshaller : object {
    private static ClientVpnConnectionStatusUnmarshaller _instance;
    public static ClientVpnConnectionStatusUnmarshaller Instance { get; }
    private static ClientVpnConnectionStatusUnmarshaller();
    public sealed virtual ClientVpnConnectionStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnConnectionStatus Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnConnectionStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnConnectionUnmarshaller : object {
    private static ClientVpnConnectionUnmarshaller _instance;
    public static ClientVpnConnectionUnmarshaller Instance { get; }
    private static ClientVpnConnectionUnmarshaller();
    public sealed virtual ClientVpnConnection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnConnection Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnConnectionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnEndpointAttributeStatusUnmarshaller : object {
    private static ClientVpnEndpointAttributeStatusUnmarshaller _instance;
    public static ClientVpnEndpointAttributeStatusUnmarshaller Instance { get; }
    private static ClientVpnEndpointAttributeStatusUnmarshaller();
    public sealed virtual ClientVpnEndpointAttributeStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnEndpointAttributeStatus Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnEndpointAttributeStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnEndpointStatusUnmarshaller : object {
    private static ClientVpnEndpointStatusUnmarshaller _instance;
    public static ClientVpnEndpointStatusUnmarshaller Instance { get; }
    private static ClientVpnEndpointStatusUnmarshaller();
    public sealed virtual ClientVpnEndpointStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnEndpointStatus Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnEndpointStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnEndpointUnmarshaller : object {
    private static ClientVpnEndpointUnmarshaller _instance;
    public static ClientVpnEndpointUnmarshaller Instance { get; }
    private static ClientVpnEndpointUnmarshaller();
    public sealed virtual ClientVpnEndpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnEndpointUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnRouteStatusUnmarshaller : object {
    private static ClientVpnRouteStatusUnmarshaller _instance;
    public static ClientVpnRouteStatusUnmarshaller Instance { get; }
    private static ClientVpnRouteStatusUnmarshaller();
    public sealed virtual ClientVpnRouteStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnRouteStatus Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnRouteStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClientVpnRouteUnmarshaller : object {
    private static ClientVpnRouteUnmarshaller _instance;
    public static ClientVpnRouteUnmarshaller Instance { get; }
    private static ClientVpnRouteUnmarshaller();
    public sealed virtual ClientVpnRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpnRoute Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpnRouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CloudWatchLogOptionsUnmarshaller : object {
    private static CloudWatchLogOptionsUnmarshaller _instance;
    public static CloudWatchLogOptionsUnmarshaller Instance { get; }
    private static CloudWatchLogOptionsUnmarshaller();
    public sealed virtual CloudWatchLogOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchLogOptions Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchLogOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CoipAddressUsageUnmarshaller : object {
    private static CoipAddressUsageUnmarshaller _instance;
    public static CoipAddressUsageUnmarshaller Instance { get; }
    private static CoipAddressUsageUnmarshaller();
    public sealed virtual CoipAddressUsage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CoipAddressUsage Unmarshall(JsonUnmarshallerContext context);
    public static CoipAddressUsageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CoipCidrUnmarshaller : object {
    private static CoipCidrUnmarshaller _instance;
    public static CoipCidrUnmarshaller Instance { get; }
    private static CoipCidrUnmarshaller();
    public sealed virtual CoipCidr Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CoipCidr Unmarshall(JsonUnmarshallerContext context);
    public static CoipCidrUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CoipPoolUnmarshaller : object {
    private static CoipPoolUnmarshaller _instance;
    public static CoipPoolUnmarshaller Instance { get; }
    private static CoipPoolUnmarshaller();
    public sealed virtual CoipPool Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CoipPool Unmarshall(JsonUnmarshallerContext context);
    public static CoipPoolUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceRequestMarshaller : object {
    private static ConfirmProductInstanceRequestMarshaller _instance;
    public static ConfirmProductInstanceRequestMarshaller Instance { get; }
    private static ConfirmProductInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ConfirmProductInstanceRequest publicRequest);
    internal static ConfirmProductInstanceRequestMarshaller GetInstance();
    public static ConfirmProductInstanceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ConfirmProductInstanceResponseUnmarshaller _instance;
    public static ConfirmProductInstanceResponseUnmarshaller Instance { get; }
    private static ConfirmProductInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ConfirmProductInstanceResponseUnmarshaller GetInstance();
    public static ConfirmProductInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConnectionLogResponseOptionsUnmarshaller : object {
    private static ConnectionLogResponseOptionsUnmarshaller _instance;
    public static ConnectionLogResponseOptionsUnmarshaller Instance { get; }
    private static ConnectionLogResponseOptionsUnmarshaller();
    public sealed virtual ConnectionLogResponseOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionLogResponseOptions Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionLogResponseOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConnectionNotificationUnmarshaller : object {
    private static ConnectionNotificationUnmarshaller _instance;
    public static ConnectionNotificationUnmarshaller Instance { get; }
    private static ConnectionNotificationUnmarshaller();
    public sealed virtual ConnectionNotification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionNotification Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionNotificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConnectionTrackingConfigurationUnmarshaller : object {
    private static ConnectionTrackingConfigurationUnmarshaller _instance;
    public static ConnectionTrackingConfigurationUnmarshaller Instance { get; }
    private static ConnectionTrackingConfigurationUnmarshaller();
    public sealed virtual ConnectionTrackingConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionTrackingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionTrackingConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConnectionTrackingSpecificationRequestUnmarshaller : object {
    private static ConnectionTrackingSpecificationRequestUnmarshaller _instance;
    public static ConnectionTrackingSpecificationRequestUnmarshaller Instance { get; }
    private static ConnectionTrackingSpecificationRequestUnmarshaller();
    public sealed virtual ConnectionTrackingSpecificationRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionTrackingSpecificationRequest Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionTrackingSpecificationRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConnectionTrackingSpecificationResponseUnmarshaller : object {
    private static ConnectionTrackingSpecificationResponseUnmarshaller _instance;
    public static ConnectionTrackingSpecificationResponseUnmarshaller Instance { get; }
    private static ConnectionTrackingSpecificationResponseUnmarshaller();
    public sealed virtual ConnectionTrackingSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionTrackingSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionTrackingSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConnectionTrackingSpecificationUnmarshaller : object {
    private static ConnectionTrackingSpecificationUnmarshaller _instance;
    public static ConnectionTrackingSpecificationUnmarshaller Instance { get; }
    private static ConnectionTrackingSpecificationUnmarshaller();
    public sealed virtual ConnectionTrackingSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionTrackingSpecification Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionTrackingSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConversionTaskUnmarshaller : object {
    private static ConversionTaskUnmarshaller _instance;
    public static ConversionTaskUnmarshaller Instance { get; }
    private static ConversionTaskUnmarshaller();
    public sealed virtual ConversionTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConversionTask Unmarshall(JsonUnmarshallerContext context);
    public static ConversionTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopyFpgaImageRequestMarshaller : object {
    private static CopyFpgaImageRequestMarshaller _instance;
    public static CopyFpgaImageRequestMarshaller Instance { get; }
    private static CopyFpgaImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyFpgaImageRequest publicRequest);
    internal static CopyFpgaImageRequestMarshaller GetInstance();
    public static CopyFpgaImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopyFpgaImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CopyFpgaImageResponseUnmarshaller _instance;
    public static CopyFpgaImageResponseUnmarshaller Instance { get; }
    private static CopyFpgaImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyFpgaImageResponseUnmarshaller GetInstance();
    public static CopyFpgaImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageRequestMarshaller : object {
    private static CopyImageRequestMarshaller _instance;
    public static CopyImageRequestMarshaller Instance { get; }
    private static CopyImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyImageRequest publicRequest);
    internal static CopyImageRequestMarshaller GetInstance();
    public static CopyImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CopyImageResponseUnmarshaller _instance;
    public static CopyImageResponseUnmarshaller Instance { get; }
    private static CopyImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyImageResponseUnmarshaller GetInstance();
    public static CopyImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotRequestMarshaller : object {
    private static CopySnapshotRequestMarshaller _instance;
    public static CopySnapshotRequestMarshaller Instance { get; }
    private static CopySnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopySnapshotRequest publicRequest);
    internal static CopySnapshotRequestMarshaller GetInstance();
    public static CopySnapshotRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CopySnapshotResponseUnmarshaller _instance;
    public static CopySnapshotResponseUnmarshaller Instance { get; }
    private static CopySnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopySnapshotResponseUnmarshaller GetInstance();
    public static CopySnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CpuOptionsUnmarshaller : object {
    private static CpuOptionsUnmarshaller _instance;
    public static CpuOptionsUnmarshaller Instance { get; }
    private static CpuOptionsUnmarshaller();
    public sealed virtual CpuOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CpuOptions Unmarshall(JsonUnmarshallerContext context);
    public static CpuOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCapacityReservationFleetRequestMarshaller : object {
    private static CreateCapacityReservationFleetRequestMarshaller _instance;
    public static CreateCapacityReservationFleetRequestMarshaller Instance { get; }
    private static CreateCapacityReservationFleetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCapacityReservationFleetRequest publicRequest);
    internal static CreateCapacityReservationFleetRequestMarshaller GetInstance();
    public static CreateCapacityReservationFleetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCapacityReservationFleetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateCapacityReservationFleetResponseUnmarshaller _instance;
    public static CreateCapacityReservationFleetResponseUnmarshaller Instance { get; }
    private static CreateCapacityReservationFleetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCapacityReservationFleetResponseUnmarshaller GetInstance();
    public static CreateCapacityReservationFleetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCapacityReservationRequestMarshaller : object {
    private static CreateCapacityReservationRequestMarshaller _instance;
    public static CreateCapacityReservationRequestMarshaller Instance { get; }
    private static CreateCapacityReservationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCapacityReservationRequest publicRequest);
    internal static CreateCapacityReservationRequestMarshaller GetInstance();
    public static CreateCapacityReservationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCapacityReservationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateCapacityReservationResponseUnmarshaller _instance;
    public static CreateCapacityReservationResponseUnmarshaller Instance { get; }
    private static CreateCapacityReservationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCapacityReservationResponseUnmarshaller GetInstance();
    public static CreateCapacityReservationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCarrierGatewayRequestMarshaller : object {
    private static CreateCarrierGatewayRequestMarshaller _instance;
    public static CreateCarrierGatewayRequestMarshaller Instance { get; }
    private static CreateCarrierGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCarrierGatewayRequest publicRequest);
    internal static CreateCarrierGatewayRequestMarshaller GetInstance();
    public static CreateCarrierGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCarrierGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateCarrierGatewayResponseUnmarshaller _instance;
    public static CreateCarrierGatewayResponseUnmarshaller Instance { get; }
    private static CreateCarrierGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCarrierGatewayResponseUnmarshaller GetInstance();
    public static CreateCarrierGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateClientVpnEndpointRequestMarshaller : object {
    private static CreateClientVpnEndpointRequestMarshaller _instance;
    public static CreateClientVpnEndpointRequestMarshaller Instance { get; }
    private static CreateClientVpnEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateClientVpnEndpointRequest publicRequest);
    internal static CreateClientVpnEndpointRequestMarshaller GetInstance();
    public static CreateClientVpnEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateClientVpnEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateClientVpnEndpointResponseUnmarshaller _instance;
    public static CreateClientVpnEndpointResponseUnmarshaller Instance { get; }
    private static CreateClientVpnEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateClientVpnEndpointResponseUnmarshaller GetInstance();
    public static CreateClientVpnEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateClientVpnRouteRequestMarshaller : object {
    private static CreateClientVpnRouteRequestMarshaller _instance;
    public static CreateClientVpnRouteRequestMarshaller Instance { get; }
    private static CreateClientVpnRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateClientVpnRouteRequest publicRequest);
    internal static CreateClientVpnRouteRequestMarshaller GetInstance();
    public static CreateClientVpnRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateClientVpnRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateClientVpnRouteResponseUnmarshaller _instance;
    public static CreateClientVpnRouteResponseUnmarshaller Instance { get; }
    private static CreateClientVpnRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateClientVpnRouteResponseUnmarshaller GetInstance();
    public static CreateClientVpnRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCoipCidrRequestMarshaller : object {
    private static CreateCoipCidrRequestMarshaller _instance;
    public static CreateCoipCidrRequestMarshaller Instance { get; }
    private static CreateCoipCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCoipCidrRequest publicRequest);
    internal static CreateCoipCidrRequestMarshaller GetInstance();
    public static CreateCoipCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCoipCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateCoipCidrResponseUnmarshaller _instance;
    public static CreateCoipCidrResponseUnmarshaller Instance { get; }
    private static CreateCoipCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCoipCidrResponseUnmarshaller GetInstance();
    public static CreateCoipCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCoipPoolRequestMarshaller : object {
    private static CreateCoipPoolRequestMarshaller _instance;
    public static CreateCoipPoolRequestMarshaller Instance { get; }
    private static CreateCoipPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCoipPoolRequest publicRequest);
    internal static CreateCoipPoolRequestMarshaller GetInstance();
    public static CreateCoipPoolRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCoipPoolResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateCoipPoolResponseUnmarshaller _instance;
    public static CreateCoipPoolResponseUnmarshaller Instance { get; }
    private static CreateCoipPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCoipPoolResponseUnmarshaller GetInstance();
    public static CreateCoipPoolResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayRequestMarshaller : object {
    private static CreateCustomerGatewayRequestMarshaller _instance;
    public static CreateCustomerGatewayRequestMarshaller Instance { get; }
    private static CreateCustomerGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCustomerGatewayRequest publicRequest);
    internal static CreateCustomerGatewayRequestMarshaller GetInstance();
    public static CreateCustomerGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateCustomerGatewayResponseUnmarshaller _instance;
    public static CreateCustomerGatewayResponseUnmarshaller Instance { get; }
    private static CreateCustomerGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCustomerGatewayResponseUnmarshaller GetInstance();
    public static CreateCustomerGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDefaultSubnetRequestMarshaller : object {
    private static CreateDefaultSubnetRequestMarshaller _instance;
    public static CreateDefaultSubnetRequestMarshaller Instance { get; }
    private static CreateDefaultSubnetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDefaultSubnetRequest publicRequest);
    internal static CreateDefaultSubnetRequestMarshaller GetInstance();
    public static CreateDefaultSubnetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDefaultSubnetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateDefaultSubnetResponseUnmarshaller _instance;
    public static CreateDefaultSubnetResponseUnmarshaller Instance { get; }
    private static CreateDefaultSubnetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDefaultSubnetResponseUnmarshaller GetInstance();
    public static CreateDefaultSubnetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDefaultVpcRequestMarshaller : object {
    private static CreateDefaultVpcRequestMarshaller _instance;
    public static CreateDefaultVpcRequestMarshaller Instance { get; }
    private static CreateDefaultVpcRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDefaultVpcRequest publicRequest);
    internal static CreateDefaultVpcRequestMarshaller GetInstance();
    public static CreateDefaultVpcRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDefaultVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateDefaultVpcResponseUnmarshaller _instance;
    public static CreateDefaultVpcResponseUnmarshaller Instance { get; }
    private static CreateDefaultVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDefaultVpcResponseUnmarshaller GetInstance();
    public static CreateDefaultVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsRequestMarshaller : object {
    private static CreateDhcpOptionsRequestMarshaller _instance;
    public static CreateDhcpOptionsRequestMarshaller Instance { get; }
    private static CreateDhcpOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDhcpOptionsRequest publicRequest);
    internal static CreateDhcpOptionsRequestMarshaller GetInstance();
    public static CreateDhcpOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateDhcpOptionsResponseUnmarshaller _instance;
    public static CreateDhcpOptionsResponseUnmarshaller Instance { get; }
    private static CreateDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDhcpOptionsResponseUnmarshaller GetInstance();
    public static CreateDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateEgressOnlyInternetGatewayRequestMarshaller : object {
    private static CreateEgressOnlyInternetGatewayRequestMarshaller _instance;
    public static CreateEgressOnlyInternetGatewayRequestMarshaller Instance { get; }
    private static CreateEgressOnlyInternetGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateEgressOnlyInternetGatewayRequest publicRequest);
    internal static CreateEgressOnlyInternetGatewayRequestMarshaller GetInstance();
    public static CreateEgressOnlyInternetGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateEgressOnlyInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateEgressOnlyInternetGatewayResponseUnmarshaller _instance;
    public static CreateEgressOnlyInternetGatewayResponseUnmarshaller Instance { get; }
    private static CreateEgressOnlyInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateEgressOnlyInternetGatewayResponseUnmarshaller GetInstance();
    public static CreateEgressOnlyInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFleetErrorUnmarshaller : object {
    private static CreateFleetErrorUnmarshaller _instance;
    public static CreateFleetErrorUnmarshaller Instance { get; }
    private static CreateFleetErrorUnmarshaller();
    public sealed virtual CreateFleetError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateFleetError Unmarshall(JsonUnmarshallerContext context);
    public static CreateFleetErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFleetInstanceUnmarshaller : object {
    private static CreateFleetInstanceUnmarshaller _instance;
    public static CreateFleetInstanceUnmarshaller Instance { get; }
    private static CreateFleetInstanceUnmarshaller();
    public sealed virtual CreateFleetInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateFleetInstance Unmarshall(JsonUnmarshallerContext context);
    public static CreateFleetInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFleetRequestMarshaller : object {
    private static CreateFleetRequestMarshaller _instance;
    public static CreateFleetRequestMarshaller Instance { get; }
    private static CreateFleetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFleetRequest publicRequest);
    internal static CreateFleetRequestMarshaller GetInstance();
    public static CreateFleetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFleetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateFleetResponseUnmarshaller _instance;
    public static CreateFleetResponseUnmarshaller Instance { get; }
    private static CreateFleetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFleetResponseUnmarshaller GetInstance();
    public static CreateFleetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsRequestMarshaller : object {
    private static CreateFlowLogsRequestMarshaller _instance;
    public static CreateFlowLogsRequestMarshaller Instance { get; }
    private static CreateFlowLogsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFlowLogsRequest publicRequest);
    internal static CreateFlowLogsRequestMarshaller GetInstance();
    public static CreateFlowLogsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateFlowLogsResponseUnmarshaller _instance;
    public static CreateFlowLogsResponseUnmarshaller Instance { get; }
    private static CreateFlowLogsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFlowLogsResponseUnmarshaller GetInstance();
    public static CreateFlowLogsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFpgaImageRequestMarshaller : object {
    private static CreateFpgaImageRequestMarshaller _instance;
    public static CreateFpgaImageRequestMarshaller Instance { get; }
    private static CreateFpgaImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFpgaImageRequest publicRequest);
    internal static CreateFpgaImageRequestMarshaller GetInstance();
    public static CreateFpgaImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFpgaImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateFpgaImageResponseUnmarshaller _instance;
    public static CreateFpgaImageResponseUnmarshaller Instance { get; }
    private static CreateFpgaImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFpgaImageResponseUnmarshaller GetInstance();
    public static CreateFpgaImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageRequestMarshaller : object {
    private static CreateImageRequestMarshaller _instance;
    public static CreateImageRequestMarshaller Instance { get; }
    private static CreateImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateImageRequest publicRequest);
    internal static CreateImageRequestMarshaller GetInstance();
    public static CreateImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateImageResponseUnmarshaller _instance;
    public static CreateImageResponseUnmarshaller Instance { get; }
    private static CreateImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateImageResponseUnmarshaller GetInstance();
    public static CreateImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceConnectEndpointRequestMarshaller : object {
    private static CreateInstanceConnectEndpointRequestMarshaller _instance;
    public static CreateInstanceConnectEndpointRequestMarshaller Instance { get; }
    private static CreateInstanceConnectEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInstanceConnectEndpointRequest publicRequest);
    internal static CreateInstanceConnectEndpointRequestMarshaller GetInstance();
    public static CreateInstanceConnectEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceConnectEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateInstanceConnectEndpointResponseUnmarshaller _instance;
    public static CreateInstanceConnectEndpointResponseUnmarshaller Instance { get; }
    private static CreateInstanceConnectEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInstanceConnectEndpointResponseUnmarshaller GetInstance();
    public static CreateInstanceConnectEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceEventWindowRequestMarshaller : object {
    private static CreateInstanceEventWindowRequestMarshaller _instance;
    public static CreateInstanceEventWindowRequestMarshaller Instance { get; }
    private static CreateInstanceEventWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInstanceEventWindowRequest publicRequest);
    internal static CreateInstanceEventWindowRequestMarshaller GetInstance();
    public static CreateInstanceEventWindowRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceEventWindowResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateInstanceEventWindowResponseUnmarshaller _instance;
    public static CreateInstanceEventWindowResponseUnmarshaller Instance { get; }
    private static CreateInstanceEventWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInstanceEventWindowResponseUnmarshaller GetInstance();
    public static CreateInstanceEventWindowResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskRequestMarshaller : object {
    private static CreateInstanceExportTaskRequestMarshaller _instance;
    public static CreateInstanceExportTaskRequestMarshaller Instance { get; }
    private static CreateInstanceExportTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInstanceExportTaskRequest publicRequest);
    internal static CreateInstanceExportTaskRequestMarshaller GetInstance();
    public static CreateInstanceExportTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateInstanceExportTaskResponseUnmarshaller _instance;
    public static CreateInstanceExportTaskResponseUnmarshaller Instance { get; }
    private static CreateInstanceExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInstanceExportTaskResponseUnmarshaller GetInstance();
    public static CreateInstanceExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayRequestMarshaller : object {
    private static CreateInternetGatewayRequestMarshaller _instance;
    public static CreateInternetGatewayRequestMarshaller Instance { get; }
    private static CreateInternetGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInternetGatewayRequest publicRequest);
    internal static CreateInternetGatewayRequestMarshaller GetInstance();
    public static CreateInternetGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateInternetGatewayResponseUnmarshaller _instance;
    public static CreateInternetGatewayResponseUnmarshaller Instance { get; }
    private static CreateInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInternetGatewayResponseUnmarshaller GetInstance();
    public static CreateInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamExternalResourceVerificationTokenRequestMarshaller : object {
    private static CreateIpamExternalResourceVerificationTokenRequestMarshaller _instance;
    public static CreateIpamExternalResourceVerificationTokenRequestMarshaller Instance { get; }
    private static CreateIpamExternalResourceVerificationTokenRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIpamExternalResourceVerificationTokenRequest publicRequest);
    internal static CreateIpamExternalResourceVerificationTokenRequestMarshaller GetInstance();
    public static CreateIpamExternalResourceVerificationTokenRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamExternalResourceVerificationTokenResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateIpamExternalResourceVerificationTokenResponseUnmarshaller _instance;
    public static CreateIpamExternalResourceVerificationTokenResponseUnmarshaller Instance { get; }
    private static CreateIpamExternalResourceVerificationTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIpamExternalResourceVerificationTokenResponseUnmarshaller GetInstance();
    public static CreateIpamExternalResourceVerificationTokenResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamPoolRequestMarshaller : object {
    private static CreateIpamPoolRequestMarshaller _instance;
    public static CreateIpamPoolRequestMarshaller Instance { get; }
    private static CreateIpamPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIpamPoolRequest publicRequest);
    internal static CreateIpamPoolRequestMarshaller GetInstance();
    public static CreateIpamPoolRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamPoolResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateIpamPoolResponseUnmarshaller _instance;
    public static CreateIpamPoolResponseUnmarshaller Instance { get; }
    private static CreateIpamPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIpamPoolResponseUnmarshaller GetInstance();
    public static CreateIpamPoolResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamRequestMarshaller : object {
    private static CreateIpamRequestMarshaller _instance;
    public static CreateIpamRequestMarshaller Instance { get; }
    private static CreateIpamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIpamRequest publicRequest);
    internal static CreateIpamRequestMarshaller GetInstance();
    public static CreateIpamRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamResourceDiscoveryRequestMarshaller : object {
    private static CreateIpamResourceDiscoveryRequestMarshaller _instance;
    public static CreateIpamResourceDiscoveryRequestMarshaller Instance { get; }
    private static CreateIpamResourceDiscoveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIpamResourceDiscoveryRequest publicRequest);
    internal static CreateIpamResourceDiscoveryRequestMarshaller GetInstance();
    public static CreateIpamResourceDiscoveryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamResourceDiscoveryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateIpamResourceDiscoveryResponseUnmarshaller _instance;
    public static CreateIpamResourceDiscoveryResponseUnmarshaller Instance { get; }
    private static CreateIpamResourceDiscoveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIpamResourceDiscoveryResponseUnmarshaller GetInstance();
    public static CreateIpamResourceDiscoveryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateIpamResponseUnmarshaller _instance;
    public static CreateIpamResponseUnmarshaller Instance { get; }
    private static CreateIpamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIpamResponseUnmarshaller GetInstance();
    public static CreateIpamResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamScopeRequestMarshaller : object {
    private static CreateIpamScopeRequestMarshaller _instance;
    public static CreateIpamScopeRequestMarshaller Instance { get; }
    private static CreateIpamScopeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIpamScopeRequest publicRequest);
    internal static CreateIpamScopeRequestMarshaller GetInstance();
    public static CreateIpamScopeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateIpamScopeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateIpamScopeResponseUnmarshaller _instance;
    public static CreateIpamScopeResponseUnmarshaller Instance { get; }
    private static CreateIpamScopeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIpamScopeResponseUnmarshaller GetInstance();
    public static CreateIpamScopeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairRequestMarshaller : object {
    private static CreateKeyPairRequestMarshaller _instance;
    public static CreateKeyPairRequestMarshaller Instance { get; }
    private static CreateKeyPairRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateKeyPairRequest publicRequest);
    internal static CreateKeyPairRequestMarshaller GetInstance();
    public static CreateKeyPairRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateKeyPairResponseUnmarshaller _instance;
    public static CreateKeyPairResponseUnmarshaller Instance { get; }
    private static CreateKeyPairResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateKeyPairResponseUnmarshaller GetInstance();
    public static CreateKeyPairResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLaunchTemplateRequestMarshaller : object {
    private static CreateLaunchTemplateRequestMarshaller _instance;
    public static CreateLaunchTemplateRequestMarshaller Instance { get; }
    private static CreateLaunchTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLaunchTemplateRequest publicRequest);
    internal static CreateLaunchTemplateRequestMarshaller GetInstance();
    public static CreateLaunchTemplateRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLaunchTemplateResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateLaunchTemplateResponseUnmarshaller _instance;
    public static CreateLaunchTemplateResponseUnmarshaller Instance { get; }
    private static CreateLaunchTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLaunchTemplateResponseUnmarshaller GetInstance();
    public static CreateLaunchTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLaunchTemplateVersionRequestMarshaller : object {
    private static CreateLaunchTemplateVersionRequestMarshaller _instance;
    public static CreateLaunchTemplateVersionRequestMarshaller Instance { get; }
    private static CreateLaunchTemplateVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLaunchTemplateVersionRequest publicRequest);
    internal static CreateLaunchTemplateVersionRequestMarshaller GetInstance();
    public static CreateLaunchTemplateVersionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLaunchTemplateVersionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateLaunchTemplateVersionResponseUnmarshaller _instance;
    public static CreateLaunchTemplateVersionResponseUnmarshaller Instance { get; }
    private static CreateLaunchTemplateVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLaunchTemplateVersionResponseUnmarshaller GetInstance();
    public static CreateLaunchTemplateVersionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteRequestMarshaller : object {
    private static CreateLocalGatewayRouteRequestMarshaller _instance;
    public static CreateLocalGatewayRouteRequestMarshaller Instance { get; }
    private static CreateLocalGatewayRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLocalGatewayRouteRequest publicRequest);
    internal static CreateLocalGatewayRouteRequestMarshaller GetInstance();
    public static CreateLocalGatewayRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateLocalGatewayRouteResponseUnmarshaller _instance;
    public static CreateLocalGatewayRouteResponseUnmarshaller Instance { get; }
    private static CreateLocalGatewayRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLocalGatewayRouteResponseUnmarshaller GetInstance();
    public static CreateLocalGatewayRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteTableRequestMarshaller : object {
    private static CreateLocalGatewayRouteTableRequestMarshaller _instance;
    public static CreateLocalGatewayRouteTableRequestMarshaller Instance { get; }
    private static CreateLocalGatewayRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLocalGatewayRouteTableRequest publicRequest);
    internal static CreateLocalGatewayRouteTableRequestMarshaller GetInstance();
    public static CreateLocalGatewayRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateLocalGatewayRouteTableResponseUnmarshaller _instance;
    public static CreateLocalGatewayRouteTableResponseUnmarshaller Instance { get; }
    private static CreateLocalGatewayRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLocalGatewayRouteTableResponseUnmarshaller GetInstance();
    public static CreateLocalGatewayRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller : object {
    private static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller _instance;
    public static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller Instance { get; }
    private static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest publicRequest);
    internal static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller GetInstance();
    public static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller _instance;
    public static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller Instance { get; }
    private static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller GetInstance();
    public static CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteTableVpcAssociationRequestMarshaller : object {
    private static CreateLocalGatewayRouteTableVpcAssociationRequestMarshaller _instance;
    public static CreateLocalGatewayRouteTableVpcAssociationRequestMarshaller Instance { get; }
    private static CreateLocalGatewayRouteTableVpcAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLocalGatewayRouteTableVpcAssociationRequest publicRequest);
    internal static CreateLocalGatewayRouteTableVpcAssociationRequestMarshaller GetInstance();
    public static CreateLocalGatewayRouteTableVpcAssociationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateLocalGatewayRouteTableVpcAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateLocalGatewayRouteTableVpcAssociationResponseUnmarshaller _instance;
    public static CreateLocalGatewayRouteTableVpcAssociationResponseUnmarshaller Instance { get; }
    private static CreateLocalGatewayRouteTableVpcAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLocalGatewayRouteTableVpcAssociationResponseUnmarshaller GetInstance();
    public static CreateLocalGatewayRouteTableVpcAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateManagedPrefixListRequestMarshaller : object {
    private static CreateManagedPrefixListRequestMarshaller _instance;
    public static CreateManagedPrefixListRequestMarshaller Instance { get; }
    private static CreateManagedPrefixListRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateManagedPrefixListRequest publicRequest);
    internal static CreateManagedPrefixListRequestMarshaller GetInstance();
    public static CreateManagedPrefixListRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateManagedPrefixListResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateManagedPrefixListResponseUnmarshaller _instance;
    public static CreateManagedPrefixListResponseUnmarshaller Instance { get; }
    private static CreateManagedPrefixListResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateManagedPrefixListResponseUnmarshaller GetInstance();
    public static CreateManagedPrefixListResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayRequestMarshaller : object {
    private static CreateNatGatewayRequestMarshaller _instance;
    public static CreateNatGatewayRequestMarshaller Instance { get; }
    private static CreateNatGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNatGatewayRequest publicRequest);
    internal static CreateNatGatewayRequestMarshaller GetInstance();
    public static CreateNatGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNatGatewayResponseUnmarshaller _instance;
    public static CreateNatGatewayResponseUnmarshaller Instance { get; }
    private static CreateNatGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNatGatewayResponseUnmarshaller GetInstance();
    public static CreateNatGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryRequestMarshaller : object {
    private static CreateNetworkAclEntryRequestMarshaller _instance;
    public static CreateNetworkAclEntryRequestMarshaller Instance { get; }
    private static CreateNetworkAclEntryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkAclEntryRequest publicRequest);
    internal static CreateNetworkAclEntryRequestMarshaller GetInstance();
    public static CreateNetworkAclEntryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkAclEntryResponseUnmarshaller _instance;
    public static CreateNetworkAclEntryResponseUnmarshaller Instance { get; }
    private static CreateNetworkAclEntryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkAclEntryResponseUnmarshaller GetInstance();
    public static CreateNetworkAclEntryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclRequestMarshaller : object {
    private static CreateNetworkAclRequestMarshaller _instance;
    public static CreateNetworkAclRequestMarshaller Instance { get; }
    private static CreateNetworkAclRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkAclRequest publicRequest);
    internal static CreateNetworkAclRequestMarshaller GetInstance();
    public static CreateNetworkAclRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkAclResponseUnmarshaller _instance;
    public static CreateNetworkAclResponseUnmarshaller Instance { get; }
    private static CreateNetworkAclResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkAclResponseUnmarshaller GetInstance();
    public static CreateNetworkAclResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInsightsAccessScopeRequestMarshaller : object {
    private static CreateNetworkInsightsAccessScopeRequestMarshaller _instance;
    public static CreateNetworkInsightsAccessScopeRequestMarshaller Instance { get; }
    private static CreateNetworkInsightsAccessScopeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkInsightsAccessScopeRequest publicRequest);
    internal static CreateNetworkInsightsAccessScopeRequestMarshaller GetInstance();
    public static CreateNetworkInsightsAccessScopeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInsightsAccessScopeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkInsightsAccessScopeResponseUnmarshaller _instance;
    public static CreateNetworkInsightsAccessScopeResponseUnmarshaller Instance { get; }
    private static CreateNetworkInsightsAccessScopeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkInsightsAccessScopeResponseUnmarshaller GetInstance();
    public static CreateNetworkInsightsAccessScopeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInsightsPathRequestMarshaller : object {
    private static CreateNetworkInsightsPathRequestMarshaller _instance;
    public static CreateNetworkInsightsPathRequestMarshaller Instance { get; }
    private static CreateNetworkInsightsPathRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkInsightsPathRequest publicRequest);
    internal static CreateNetworkInsightsPathRequestMarshaller GetInstance();
    public static CreateNetworkInsightsPathRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInsightsPathResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkInsightsPathResponseUnmarshaller _instance;
    public static CreateNetworkInsightsPathResponseUnmarshaller Instance { get; }
    private static CreateNetworkInsightsPathResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkInsightsPathResponseUnmarshaller GetInstance();
    public static CreateNetworkInsightsPathResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfacePermissionRequestMarshaller : object {
    private static CreateNetworkInterfacePermissionRequestMarshaller _instance;
    public static CreateNetworkInterfacePermissionRequestMarshaller Instance { get; }
    private static CreateNetworkInterfacePermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkInterfacePermissionRequest publicRequest);
    internal static CreateNetworkInterfacePermissionRequestMarshaller GetInstance();
    public static CreateNetworkInterfacePermissionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfacePermissionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkInterfacePermissionResponseUnmarshaller _instance;
    public static CreateNetworkInterfacePermissionResponseUnmarshaller Instance { get; }
    private static CreateNetworkInterfacePermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkInterfacePermissionResponseUnmarshaller GetInstance();
    public static CreateNetworkInterfacePermissionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceRequestMarshaller : object {
    private static CreateNetworkInterfaceRequestMarshaller _instance;
    public static CreateNetworkInterfaceRequestMarshaller Instance { get; }
    private static CreateNetworkInterfaceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkInterfaceRequest publicRequest);
    internal static CreateNetworkInterfaceRequestMarshaller GetInstance();
    public static CreateNetworkInterfaceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkInterfaceResponseUnmarshaller _instance;
    public static CreateNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static CreateNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkInterfaceResponseUnmarshaller GetInstance();
    public static CreateNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupRequestMarshaller : object {
    private static CreatePlacementGroupRequestMarshaller _instance;
    public static CreatePlacementGroupRequestMarshaller Instance { get; }
    private static CreatePlacementGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePlacementGroupRequest publicRequest);
    internal static CreatePlacementGroupRequestMarshaller GetInstance();
    public static CreatePlacementGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreatePlacementGroupResponseUnmarshaller _instance;
    public static CreatePlacementGroupResponseUnmarshaller Instance { get; }
    private static CreatePlacementGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePlacementGroupResponseUnmarshaller GetInstance();
    public static CreatePlacementGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreatePublicIpv4PoolRequestMarshaller : object {
    private static CreatePublicIpv4PoolRequestMarshaller _instance;
    public static CreatePublicIpv4PoolRequestMarshaller Instance { get; }
    private static CreatePublicIpv4PoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePublicIpv4PoolRequest publicRequest);
    internal static CreatePublicIpv4PoolRequestMarshaller GetInstance();
    public static CreatePublicIpv4PoolRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreatePublicIpv4PoolResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreatePublicIpv4PoolResponseUnmarshaller _instance;
    public static CreatePublicIpv4PoolResponseUnmarshaller Instance { get; }
    private static CreatePublicIpv4PoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePublicIpv4PoolResponseUnmarshaller GetInstance();
    public static CreatePublicIpv4PoolResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateReplaceRootVolumeTaskRequestMarshaller : object {
    private static CreateReplaceRootVolumeTaskRequestMarshaller _instance;
    public static CreateReplaceRootVolumeTaskRequestMarshaller Instance { get; }
    private static CreateReplaceRootVolumeTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReplaceRootVolumeTaskRequest publicRequest);
    internal static CreateReplaceRootVolumeTaskRequestMarshaller GetInstance();
    public static CreateReplaceRootVolumeTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateReplaceRootVolumeTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateReplaceRootVolumeTaskResponseUnmarshaller _instance;
    public static CreateReplaceRootVolumeTaskResponseUnmarshaller Instance { get; }
    private static CreateReplaceRootVolumeTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReplaceRootVolumeTaskResponseUnmarshaller GetInstance();
    public static CreateReplaceRootVolumeTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingRequestMarshaller : object {
    private static CreateReservedInstancesListingRequestMarshaller _instance;
    public static CreateReservedInstancesListingRequestMarshaller Instance { get; }
    private static CreateReservedInstancesListingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReservedInstancesListingRequest publicRequest);
    internal static CreateReservedInstancesListingRequestMarshaller GetInstance();
    public static CreateReservedInstancesListingRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateReservedInstancesListingResponseUnmarshaller _instance;
    public static CreateReservedInstancesListingResponseUnmarshaller Instance { get; }
    private static CreateReservedInstancesListingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReservedInstancesListingResponseUnmarshaller GetInstance();
    public static CreateReservedInstancesListingResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRestoreImageTaskRequestMarshaller : object {
    private static CreateRestoreImageTaskRequestMarshaller _instance;
    public static CreateRestoreImageTaskRequestMarshaller Instance { get; }
    private static CreateRestoreImageTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRestoreImageTaskRequest publicRequest);
    internal static CreateRestoreImageTaskRequestMarshaller GetInstance();
    public static CreateRestoreImageTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRestoreImageTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateRestoreImageTaskResponseUnmarshaller _instance;
    public static CreateRestoreImageTaskResponseUnmarshaller Instance { get; }
    private static CreateRestoreImageTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRestoreImageTaskResponseUnmarshaller GetInstance();
    public static CreateRestoreImageTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteRequestMarshaller : object {
    private static CreateRouteRequestMarshaller _instance;
    public static CreateRouteRequestMarshaller Instance { get; }
    private static CreateRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRouteRequest publicRequest);
    internal static CreateRouteRequestMarshaller GetInstance();
    public static CreateRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateRouteResponseUnmarshaller _instance;
    public static CreateRouteResponseUnmarshaller Instance { get; }
    private static CreateRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRouteResponseUnmarshaller GetInstance();
    public static CreateRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableRequestMarshaller : object {
    private static CreateRouteTableRequestMarshaller _instance;
    public static CreateRouteTableRequestMarshaller Instance { get; }
    private static CreateRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRouteTableRequest publicRequest);
    internal static CreateRouteTableRequestMarshaller GetInstance();
    public static CreateRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateRouteTableResponseUnmarshaller _instance;
    public static CreateRouteTableResponseUnmarshaller Instance { get; }
    private static CreateRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRouteTableResponseUnmarshaller GetInstance();
    public static CreateRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupRequestMarshaller : object {
    private static CreateSecurityGroupRequestMarshaller _instance;
    public static CreateSecurityGroupRequestMarshaller Instance { get; }
    private static CreateSecurityGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSecurityGroupRequest publicRequest);
    internal static CreateSecurityGroupRequestMarshaller GetInstance();
    public static CreateSecurityGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSecurityGroupResponseUnmarshaller _instance;
    public static CreateSecurityGroupResponseUnmarshaller Instance { get; }
    private static CreateSecurityGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSecurityGroupResponseUnmarshaller GetInstance();
    public static CreateSecurityGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller : object {
    private static CreateSnapshotRequestMarshaller _instance;
    public static CreateSnapshotRequestMarshaller Instance { get; }
    private static CreateSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSnapshotRequest publicRequest);
    internal static CreateSnapshotRequestMarshaller GetInstance();
    public static CreateSnapshotRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSnapshotResponseUnmarshaller _instance;
    public static CreateSnapshotResponseUnmarshaller Instance { get; }
    private static CreateSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSnapshotResponseUnmarshaller GetInstance();
    public static CreateSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotsRequestMarshaller : object {
    private static CreateSnapshotsRequestMarshaller _instance;
    public static CreateSnapshotsRequestMarshaller Instance { get; }
    private static CreateSnapshotsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSnapshotsRequest publicRequest);
    internal static CreateSnapshotsRequestMarshaller GetInstance();
    public static CreateSnapshotsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSnapshotsResponseUnmarshaller _instance;
    public static CreateSnapshotsResponseUnmarshaller Instance { get; }
    private static CreateSnapshotsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSnapshotsResponseUnmarshaller GetInstance();
    public static CreateSnapshotsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionRequestMarshaller : object {
    private static CreateSpotDatafeedSubscriptionRequestMarshaller _instance;
    public static CreateSpotDatafeedSubscriptionRequestMarshaller Instance { get; }
    private static CreateSpotDatafeedSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSpotDatafeedSubscriptionRequest publicRequest);
    internal static CreateSpotDatafeedSubscriptionRequestMarshaller GetInstance();
    public static CreateSpotDatafeedSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSpotDatafeedSubscriptionResponseUnmarshaller _instance;
    public static CreateSpotDatafeedSubscriptionResponseUnmarshaller Instance { get; }
    private static CreateSpotDatafeedSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSpotDatafeedSubscriptionResponseUnmarshaller GetInstance();
    public static CreateSpotDatafeedSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateStoreImageTaskRequestMarshaller : object {
    private static CreateStoreImageTaskRequestMarshaller _instance;
    public static CreateStoreImageTaskRequestMarshaller Instance { get; }
    private static CreateStoreImageTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStoreImageTaskRequest publicRequest);
    internal static CreateStoreImageTaskRequestMarshaller GetInstance();
    public static CreateStoreImageTaskRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateStoreImageTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateStoreImageTaskResponseUnmarshaller _instance;
    public static CreateStoreImageTaskResponseUnmarshaller Instance { get; }
    private static CreateStoreImageTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStoreImageTaskResponseUnmarshaller GetInstance();
    public static CreateStoreImageTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetCidrReservationRequestMarshaller : object {
    private static CreateSubnetCidrReservationRequestMarshaller _instance;
    public static CreateSubnetCidrReservationRequestMarshaller Instance { get; }
    private static CreateSubnetCidrReservationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSubnetCidrReservationRequest publicRequest);
    internal static CreateSubnetCidrReservationRequestMarshaller GetInstance();
    public static CreateSubnetCidrReservationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetCidrReservationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSubnetCidrReservationResponseUnmarshaller _instance;
    public static CreateSubnetCidrReservationResponseUnmarshaller Instance { get; }
    private static CreateSubnetCidrReservationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSubnetCidrReservationResponseUnmarshaller GetInstance();
    public static CreateSubnetCidrReservationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetRequestMarshaller : object {
    private static CreateSubnetRequestMarshaller _instance;
    public static CreateSubnetRequestMarshaller Instance { get; }
    private static CreateSubnetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSubnetRequest publicRequest);
    internal static CreateSubnetRequestMarshaller GetInstance();
    public static CreateSubnetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSubnetResponseUnmarshaller _instance;
    public static CreateSubnetResponseUnmarshaller Instance { get; }
    private static CreateSubnetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSubnetResponseUnmarshaller GetInstance();
    public static CreateSubnetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller : object {
    private static CreateTagsRequestMarshaller _instance;
    public static CreateTagsRequestMarshaller Instance { get; }
    private static CreateTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTagsRequest publicRequest);
    internal static CreateTagsRequestMarshaller GetInstance();
    public static CreateTagsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTagsResponseUnmarshaller _instance;
    public static CreateTagsResponseUnmarshaller Instance { get; }
    private static CreateTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTagsResponseUnmarshaller GetInstance();
    public static CreateTagsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorFilterRequestMarshaller : object {
    private static CreateTrafficMirrorFilterRequestMarshaller _instance;
    public static CreateTrafficMirrorFilterRequestMarshaller Instance { get; }
    private static CreateTrafficMirrorFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTrafficMirrorFilterRequest publicRequest);
    internal static CreateTrafficMirrorFilterRequestMarshaller GetInstance();
    public static CreateTrafficMirrorFilterRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorFilterResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTrafficMirrorFilterResponseUnmarshaller _instance;
    public static CreateTrafficMirrorFilterResponseUnmarshaller Instance { get; }
    private static CreateTrafficMirrorFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTrafficMirrorFilterResponseUnmarshaller GetInstance();
    public static CreateTrafficMirrorFilterResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorFilterRuleRequestMarshaller : object {
    private static CreateTrafficMirrorFilterRuleRequestMarshaller _instance;
    public static CreateTrafficMirrorFilterRuleRequestMarshaller Instance { get; }
    private static CreateTrafficMirrorFilterRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTrafficMirrorFilterRuleRequest publicRequest);
    internal static CreateTrafficMirrorFilterRuleRequestMarshaller GetInstance();
    public static CreateTrafficMirrorFilterRuleRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorFilterRuleResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTrafficMirrorFilterRuleResponseUnmarshaller _instance;
    public static CreateTrafficMirrorFilterRuleResponseUnmarshaller Instance { get; }
    private static CreateTrafficMirrorFilterRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTrafficMirrorFilterRuleResponseUnmarshaller GetInstance();
    public static CreateTrafficMirrorFilterRuleResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorSessionRequestMarshaller : object {
    private static CreateTrafficMirrorSessionRequestMarshaller _instance;
    public static CreateTrafficMirrorSessionRequestMarshaller Instance { get; }
    private static CreateTrafficMirrorSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTrafficMirrorSessionRequest publicRequest);
    internal static CreateTrafficMirrorSessionRequestMarshaller GetInstance();
    public static CreateTrafficMirrorSessionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorSessionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTrafficMirrorSessionResponseUnmarshaller _instance;
    public static CreateTrafficMirrorSessionResponseUnmarshaller Instance { get; }
    private static CreateTrafficMirrorSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTrafficMirrorSessionResponseUnmarshaller GetInstance();
    public static CreateTrafficMirrorSessionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorTargetRequestMarshaller : object {
    private static CreateTrafficMirrorTargetRequestMarshaller _instance;
    public static CreateTrafficMirrorTargetRequestMarshaller Instance { get; }
    private static CreateTrafficMirrorTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTrafficMirrorTargetRequest publicRequest);
    internal static CreateTrafficMirrorTargetRequestMarshaller GetInstance();
    public static CreateTrafficMirrorTargetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTrafficMirrorTargetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTrafficMirrorTargetResponseUnmarshaller _instance;
    public static CreateTrafficMirrorTargetResponseUnmarshaller Instance { get; }
    private static CreateTrafficMirrorTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTrafficMirrorTargetResponseUnmarshaller GetInstance();
    public static CreateTrafficMirrorTargetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayConnectPeerRequestMarshaller : object {
    private static CreateTransitGatewayConnectPeerRequestMarshaller _instance;
    public static CreateTransitGatewayConnectPeerRequestMarshaller Instance { get; }
    private static CreateTransitGatewayConnectPeerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayConnectPeerRequest publicRequest);
    internal static CreateTransitGatewayConnectPeerRequestMarshaller GetInstance();
    public static CreateTransitGatewayConnectPeerRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayConnectPeerResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayConnectPeerResponseUnmarshaller _instance;
    public static CreateTransitGatewayConnectPeerResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayConnectPeerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayConnectPeerResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayConnectPeerResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayConnectRequestMarshaller : object {
    private static CreateTransitGatewayConnectRequestMarshaller _instance;
    public static CreateTransitGatewayConnectRequestMarshaller Instance { get; }
    private static CreateTransitGatewayConnectRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayConnectRequest publicRequest);
    internal static CreateTransitGatewayConnectRequestMarshaller GetInstance();
    public static CreateTransitGatewayConnectRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayConnectResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayConnectResponseUnmarshaller _instance;
    public static CreateTransitGatewayConnectResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayConnectResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayConnectResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayConnectResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayMulticastDomainRequestMarshaller : object {
    private static CreateTransitGatewayMulticastDomainRequestMarshaller _instance;
    public static CreateTransitGatewayMulticastDomainRequestMarshaller Instance { get; }
    private static CreateTransitGatewayMulticastDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayMulticastDomainRequest publicRequest);
    internal static CreateTransitGatewayMulticastDomainRequestMarshaller GetInstance();
    public static CreateTransitGatewayMulticastDomainRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayMulticastDomainResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayMulticastDomainResponseUnmarshaller _instance;
    public static CreateTransitGatewayMulticastDomainResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayMulticastDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayMulticastDomainResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayMulticastDomainResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayPeeringAttachmentRequestMarshaller : object {
    private static CreateTransitGatewayPeeringAttachmentRequestMarshaller _instance;
    public static CreateTransitGatewayPeeringAttachmentRequestMarshaller Instance { get; }
    private static CreateTransitGatewayPeeringAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayPeeringAttachmentRequest publicRequest);
    internal static CreateTransitGatewayPeeringAttachmentRequestMarshaller GetInstance();
    public static CreateTransitGatewayPeeringAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayPeeringAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayPeeringAttachmentResponseUnmarshaller _instance;
    public static CreateTransitGatewayPeeringAttachmentResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayPeeringAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayPeeringAttachmentResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayPeeringAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayPolicyTableRequestMarshaller : object {
    private static CreateTransitGatewayPolicyTableRequestMarshaller _instance;
    public static CreateTransitGatewayPolicyTableRequestMarshaller Instance { get; }
    private static CreateTransitGatewayPolicyTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayPolicyTableRequest publicRequest);
    internal static CreateTransitGatewayPolicyTableRequestMarshaller GetInstance();
    public static CreateTransitGatewayPolicyTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayPolicyTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayPolicyTableResponseUnmarshaller _instance;
    public static CreateTransitGatewayPolicyTableResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayPolicyTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayPolicyTableResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayPolicyTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayPrefixListReferenceRequestMarshaller : object {
    private static CreateTransitGatewayPrefixListReferenceRequestMarshaller _instance;
    public static CreateTransitGatewayPrefixListReferenceRequestMarshaller Instance { get; }
    private static CreateTransitGatewayPrefixListReferenceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayPrefixListReferenceRequest publicRequest);
    internal static CreateTransitGatewayPrefixListReferenceRequestMarshaller GetInstance();
    public static CreateTransitGatewayPrefixListReferenceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayPrefixListReferenceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayPrefixListReferenceResponseUnmarshaller _instance;
    public static CreateTransitGatewayPrefixListReferenceResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayPrefixListReferenceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayPrefixListReferenceResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayPrefixListReferenceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayRequestMarshaller : object {
    private static CreateTransitGatewayRequestMarshaller _instance;
    public static CreateTransitGatewayRequestMarshaller Instance { get; }
    private static CreateTransitGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayRequest publicRequest);
    internal static CreateTransitGatewayRequestMarshaller GetInstance();
    public static CreateTransitGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayResponseUnmarshaller _instance;
    public static CreateTransitGatewayResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayRouteRequestMarshaller : object {
    private static CreateTransitGatewayRouteRequestMarshaller _instance;
    public static CreateTransitGatewayRouteRequestMarshaller Instance { get; }
    private static CreateTransitGatewayRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayRouteRequest publicRequest);
    internal static CreateTransitGatewayRouteRequestMarshaller GetInstance();
    public static CreateTransitGatewayRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayRouteResponseUnmarshaller _instance;
    public static CreateTransitGatewayRouteResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayRouteResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayRouteTableAnnouncementRequestMarshaller : object {
    private static CreateTransitGatewayRouteTableAnnouncementRequestMarshaller _instance;
    public static CreateTransitGatewayRouteTableAnnouncementRequestMarshaller Instance { get; }
    private static CreateTransitGatewayRouteTableAnnouncementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayRouteTableAnnouncementRequest publicRequest);
    internal static CreateTransitGatewayRouteTableAnnouncementRequestMarshaller GetInstance();
    public static CreateTransitGatewayRouteTableAnnouncementRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayRouteTableAnnouncementResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayRouteTableAnnouncementResponseUnmarshaller _instance;
    public static CreateTransitGatewayRouteTableAnnouncementResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayRouteTableAnnouncementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayRouteTableAnnouncementResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayRouteTableAnnouncementResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayRouteTableRequestMarshaller : object {
    private static CreateTransitGatewayRouteTableRequestMarshaller _instance;
    public static CreateTransitGatewayRouteTableRequestMarshaller Instance { get; }
    private static CreateTransitGatewayRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayRouteTableRequest publicRequest);
    internal static CreateTransitGatewayRouteTableRequestMarshaller GetInstance();
    public static CreateTransitGatewayRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayRouteTableResponseUnmarshaller _instance;
    public static CreateTransitGatewayRouteTableResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayRouteTableResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayVpcAttachmentRequestMarshaller : object {
    private static CreateTransitGatewayVpcAttachmentRequestMarshaller _instance;
    public static CreateTransitGatewayVpcAttachmentRequestMarshaller Instance { get; }
    private static CreateTransitGatewayVpcAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTransitGatewayVpcAttachmentRequest publicRequest);
    internal static CreateTransitGatewayVpcAttachmentRequestMarshaller GetInstance();
    public static CreateTransitGatewayVpcAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTransitGatewayVpcAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTransitGatewayVpcAttachmentResponseUnmarshaller _instance;
    public static CreateTransitGatewayVpcAttachmentResponseUnmarshaller Instance { get; }
    private static CreateTransitGatewayVpcAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTransitGatewayVpcAttachmentResponseUnmarshaller GetInstance();
    public static CreateTransitGatewayVpcAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessEndpointRequestMarshaller : object {
    private static CreateVerifiedAccessEndpointRequestMarshaller _instance;
    public static CreateVerifiedAccessEndpointRequestMarshaller Instance { get; }
    private static CreateVerifiedAccessEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVerifiedAccessEndpointRequest publicRequest);
    internal static CreateVerifiedAccessEndpointRequestMarshaller GetInstance();
    public static CreateVerifiedAccessEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVerifiedAccessEndpointResponseUnmarshaller _instance;
    public static CreateVerifiedAccessEndpointResponseUnmarshaller Instance { get; }
    private static CreateVerifiedAccessEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVerifiedAccessEndpointResponseUnmarshaller GetInstance();
    public static CreateVerifiedAccessEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessGroupRequestMarshaller : object {
    private static CreateVerifiedAccessGroupRequestMarshaller _instance;
    public static CreateVerifiedAccessGroupRequestMarshaller Instance { get; }
    private static CreateVerifiedAccessGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVerifiedAccessGroupRequest publicRequest);
    internal static CreateVerifiedAccessGroupRequestMarshaller GetInstance();
    public static CreateVerifiedAccessGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVerifiedAccessGroupResponseUnmarshaller _instance;
    public static CreateVerifiedAccessGroupResponseUnmarshaller Instance { get; }
    private static CreateVerifiedAccessGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVerifiedAccessGroupResponseUnmarshaller GetInstance();
    public static CreateVerifiedAccessGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessInstanceRequestMarshaller : object {
    private static CreateVerifiedAccessInstanceRequestMarshaller _instance;
    public static CreateVerifiedAccessInstanceRequestMarshaller Instance { get; }
    private static CreateVerifiedAccessInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVerifiedAccessInstanceRequest publicRequest);
    internal static CreateVerifiedAccessInstanceRequestMarshaller GetInstance();
    public static CreateVerifiedAccessInstanceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVerifiedAccessInstanceResponseUnmarshaller _instance;
    public static CreateVerifiedAccessInstanceResponseUnmarshaller Instance { get; }
    private static CreateVerifiedAccessInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVerifiedAccessInstanceResponseUnmarshaller GetInstance();
    public static CreateVerifiedAccessInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessTrustProviderRequestMarshaller : object {
    private static CreateVerifiedAccessTrustProviderRequestMarshaller _instance;
    public static CreateVerifiedAccessTrustProviderRequestMarshaller Instance { get; }
    private static CreateVerifiedAccessTrustProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVerifiedAccessTrustProviderRequest publicRequest);
    internal static CreateVerifiedAccessTrustProviderRequestMarshaller GetInstance();
    public static CreateVerifiedAccessTrustProviderRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVerifiedAccessTrustProviderResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVerifiedAccessTrustProviderResponseUnmarshaller _instance;
    public static CreateVerifiedAccessTrustProviderResponseUnmarshaller Instance { get; }
    private static CreateVerifiedAccessTrustProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVerifiedAccessTrustProviderResponseUnmarshaller GetInstance();
    public static CreateVerifiedAccessTrustProviderResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumePermissionUnmarshaller : object {
    private static CreateVolumePermissionUnmarshaller _instance;
    public static CreateVolumePermissionUnmarshaller Instance { get; }
    private static CreateVolumePermissionUnmarshaller();
    public sealed virtual CreateVolumePermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateVolumePermission Unmarshall(JsonUnmarshallerContext context);
    public static CreateVolumePermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeRequestMarshaller : object {
    private static CreateVolumeRequestMarshaller _instance;
    public static CreateVolumeRequestMarshaller Instance { get; }
    private static CreateVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVolumeRequest publicRequest);
    internal static CreateVolumeRequestMarshaller GetInstance();
    public static CreateVolumeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVolumeResponseUnmarshaller _instance;
    public static CreateVolumeResponseUnmarshaller Instance { get; }
    private static CreateVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVolumeResponseUnmarshaller GetInstance();
    public static CreateVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointConnectionNotificationRequestMarshaller : object {
    private static CreateVpcEndpointConnectionNotificationRequestMarshaller _instance;
    public static CreateVpcEndpointConnectionNotificationRequestMarshaller Instance { get; }
    private static CreateVpcEndpointConnectionNotificationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcEndpointConnectionNotificationRequest publicRequest);
    internal static CreateVpcEndpointConnectionNotificationRequestMarshaller GetInstance();
    public static CreateVpcEndpointConnectionNotificationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointConnectionNotificationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcEndpointConnectionNotificationResponseUnmarshaller _instance;
    public static CreateVpcEndpointConnectionNotificationResponseUnmarshaller Instance { get; }
    private static CreateVpcEndpointConnectionNotificationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcEndpointConnectionNotificationResponseUnmarshaller GetInstance();
    public static CreateVpcEndpointConnectionNotificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointRequestMarshaller : object {
    private static CreateVpcEndpointRequestMarshaller _instance;
    public static CreateVpcEndpointRequestMarshaller Instance { get; }
    private static CreateVpcEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcEndpointRequest publicRequest);
    internal static CreateVpcEndpointRequestMarshaller GetInstance();
    public static CreateVpcEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcEndpointResponseUnmarshaller _instance;
    public static CreateVpcEndpointResponseUnmarshaller Instance { get; }
    private static CreateVpcEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcEndpointResponseUnmarshaller GetInstance();
    public static CreateVpcEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointServiceConfigurationRequestMarshaller : object {
    private static CreateVpcEndpointServiceConfigurationRequestMarshaller _instance;
    public static CreateVpcEndpointServiceConfigurationRequestMarshaller Instance { get; }
    private static CreateVpcEndpointServiceConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcEndpointServiceConfigurationRequest publicRequest);
    internal static CreateVpcEndpointServiceConfigurationRequestMarshaller GetInstance();
    public static CreateVpcEndpointServiceConfigurationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointServiceConfigurationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcEndpointServiceConfigurationResponseUnmarshaller _instance;
    public static CreateVpcEndpointServiceConfigurationResponseUnmarshaller Instance { get; }
    private static CreateVpcEndpointServiceConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcEndpointServiceConfigurationResponseUnmarshaller GetInstance();
    public static CreateVpcEndpointServiceConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionRequestMarshaller : object {
    private static CreateVpcPeeringConnectionRequestMarshaller _instance;
    public static CreateVpcPeeringConnectionRequestMarshaller Instance { get; }
    private static CreateVpcPeeringConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcPeeringConnectionRequest publicRequest);
    internal static CreateVpcPeeringConnectionRequestMarshaller GetInstance();
    public static CreateVpcPeeringConnectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcPeeringConnectionResponseUnmarshaller _instance;
    public static CreateVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static CreateVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static CreateVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcRequestMarshaller : object {
    private static CreateVpcRequestMarshaller _instance;
    public static CreateVpcRequestMarshaller Instance { get; }
    private static CreateVpcRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcRequest publicRequest);
    internal static CreateVpcRequestMarshaller GetInstance();
    public static CreateVpcRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcResponseUnmarshaller _instance;
    public static CreateVpcResponseUnmarshaller Instance { get; }
    private static CreateVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcResponseUnmarshaller GetInstance();
    public static CreateVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRequestMarshaller : object {
    private static CreateVpnConnectionRequestMarshaller _instance;
    public static CreateVpnConnectionRequestMarshaller Instance { get; }
    private static CreateVpnConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpnConnectionRequest publicRequest);
    internal static CreateVpnConnectionRequestMarshaller GetInstance();
    public static CreateVpnConnectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpnConnectionResponseUnmarshaller _instance;
    public static CreateVpnConnectionResponseUnmarshaller Instance { get; }
    private static CreateVpnConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpnConnectionResponseUnmarshaller GetInstance();
    public static CreateVpnConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteRequestMarshaller : object {
    private static CreateVpnConnectionRouteRequestMarshaller _instance;
    public static CreateVpnConnectionRouteRequestMarshaller Instance { get; }
    private static CreateVpnConnectionRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpnConnectionRouteRequest publicRequest);
    internal static CreateVpnConnectionRouteRequestMarshaller GetInstance();
    public static CreateVpnConnectionRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpnConnectionRouteResponseUnmarshaller _instance;
    public static CreateVpnConnectionRouteResponseUnmarshaller Instance { get; }
    private static CreateVpnConnectionRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpnConnectionRouteResponseUnmarshaller GetInstance();
    public static CreateVpnConnectionRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayRequestMarshaller : object {
    private static CreateVpnGatewayRequestMarshaller _instance;
    public static CreateVpnGatewayRequestMarshaller Instance { get; }
    private static CreateVpnGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpnGatewayRequest publicRequest);
    internal static CreateVpnGatewayRequestMarshaller GetInstance();
    public static CreateVpnGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpnGatewayResponseUnmarshaller _instance;
    public static CreateVpnGatewayResponseUnmarshaller Instance { get; }
    private static CreateVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpnGatewayResponseUnmarshaller GetInstance();
    public static CreateVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreditSpecificationUnmarshaller : object {
    private static CreditSpecificationUnmarshaller _instance;
    public static CreditSpecificationUnmarshaller Instance { get; }
    private static CreditSpecificationUnmarshaller();
    public sealed virtual CreditSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreditSpecification Unmarshall(JsonUnmarshallerContext context);
    public static CreditSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CustomerGatewayUnmarshaller : object {
    private static CustomerGatewayUnmarshaller _instance;
    public static CustomerGatewayUnmarshaller Instance { get; }
    private static CustomerGatewayUnmarshaller();
    public sealed virtual CustomerGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomerGateway Unmarshall(JsonUnmarshallerContext context);
    public static CustomerGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DataResponseUnmarshaller : object {
    private static DataResponseUnmarshaller _instance;
    public static DataResponseUnmarshaller Instance { get; }
    private static DataResponseUnmarshaller();
    public sealed virtual DataResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataResponse Unmarshall(JsonUnmarshallerContext context);
    public static DataResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCarrierGatewayRequestMarshaller : object {
    private static DeleteCarrierGatewayRequestMarshaller _instance;
    public static DeleteCarrierGatewayRequestMarshaller Instance { get; }
    private static DeleteCarrierGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCarrierGatewayRequest publicRequest);
    internal static DeleteCarrierGatewayRequestMarshaller GetInstance();
    public static DeleteCarrierGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCarrierGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteCarrierGatewayResponseUnmarshaller _instance;
    public static DeleteCarrierGatewayResponseUnmarshaller Instance { get; }
    private static DeleteCarrierGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCarrierGatewayResponseUnmarshaller GetInstance();
    public static DeleteCarrierGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteClientVpnEndpointRequestMarshaller : object {
    private static DeleteClientVpnEndpointRequestMarshaller _instance;
    public static DeleteClientVpnEndpointRequestMarshaller Instance { get; }
    private static DeleteClientVpnEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteClientVpnEndpointRequest publicRequest);
    internal static DeleteClientVpnEndpointRequestMarshaller GetInstance();
    public static DeleteClientVpnEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteClientVpnEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteClientVpnEndpointResponseUnmarshaller _instance;
    public static DeleteClientVpnEndpointResponseUnmarshaller Instance { get; }
    private static DeleteClientVpnEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteClientVpnEndpointResponseUnmarshaller GetInstance();
    public static DeleteClientVpnEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteClientVpnRouteRequestMarshaller : object {
    private static DeleteClientVpnRouteRequestMarshaller _instance;
    public static DeleteClientVpnRouteRequestMarshaller Instance { get; }
    private static DeleteClientVpnRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteClientVpnRouteRequest publicRequest);
    internal static DeleteClientVpnRouteRequestMarshaller GetInstance();
    public static DeleteClientVpnRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteClientVpnRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteClientVpnRouteResponseUnmarshaller _instance;
    public static DeleteClientVpnRouteResponseUnmarshaller Instance { get; }
    private static DeleteClientVpnRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteClientVpnRouteResponseUnmarshaller GetInstance();
    public static DeleteClientVpnRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCoipCidrRequestMarshaller : object {
    private static DeleteCoipCidrRequestMarshaller _instance;
    public static DeleteCoipCidrRequestMarshaller Instance { get; }
    private static DeleteCoipCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCoipCidrRequest publicRequest);
    internal static DeleteCoipCidrRequestMarshaller GetInstance();
    public static DeleteCoipCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCoipCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteCoipCidrResponseUnmarshaller _instance;
    public static DeleteCoipCidrResponseUnmarshaller Instance { get; }
    private static DeleteCoipCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCoipCidrResponseUnmarshaller GetInstance();
    public static DeleteCoipCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCoipPoolRequestMarshaller : object {
    private static DeleteCoipPoolRequestMarshaller _instance;
    public static DeleteCoipPoolRequestMarshaller Instance { get; }
    private static DeleteCoipPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCoipPoolRequest publicRequest);
    internal static DeleteCoipPoolRequestMarshaller GetInstance();
    public static DeleteCoipPoolRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCoipPoolResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteCoipPoolResponseUnmarshaller _instance;
    public static DeleteCoipPoolResponseUnmarshaller Instance { get; }
    private static DeleteCoipPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCoipPoolResponseUnmarshaller GetInstance();
    public static DeleteCoipPoolResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayRequestMarshaller : object {
    private static DeleteCustomerGatewayRequestMarshaller _instance;
    public static DeleteCustomerGatewayRequestMarshaller Instance { get; }
    private static DeleteCustomerGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCustomerGatewayRequest publicRequest);
    internal static DeleteCustomerGatewayRequestMarshaller GetInstance();
    public static DeleteCustomerGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteCustomerGatewayResponseUnmarshaller _instance;
    public static DeleteCustomerGatewayResponseUnmarshaller Instance { get; }
    private static DeleteCustomerGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCustomerGatewayResponseUnmarshaller GetInstance();
    public static DeleteCustomerGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsRequestMarshaller : object {
    private static DeleteDhcpOptionsRequestMarshaller _instance;
    public static DeleteDhcpOptionsRequestMarshaller Instance { get; }
    private static DeleteDhcpOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDhcpOptionsRequest publicRequest);
    internal static DeleteDhcpOptionsRequestMarshaller GetInstance();
    public static DeleteDhcpOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteDhcpOptionsResponseUnmarshaller _instance;
    public static DeleteDhcpOptionsResponseUnmarshaller Instance { get; }
    private static DeleteDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDhcpOptionsResponseUnmarshaller GetInstance();
    public static DeleteDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteEgressOnlyInternetGatewayRequestMarshaller : object {
    private static DeleteEgressOnlyInternetGatewayRequestMarshaller _instance;
    public static DeleteEgressOnlyInternetGatewayRequestMarshaller Instance { get; }
    private static DeleteEgressOnlyInternetGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEgressOnlyInternetGatewayRequest publicRequest);
    internal static DeleteEgressOnlyInternetGatewayRequestMarshaller GetInstance();
    public static DeleteEgressOnlyInternetGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteEgressOnlyInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteEgressOnlyInternetGatewayResponseUnmarshaller _instance;
    public static DeleteEgressOnlyInternetGatewayResponseUnmarshaller Instance { get; }
    private static DeleteEgressOnlyInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEgressOnlyInternetGatewayResponseUnmarshaller GetInstance();
    public static DeleteEgressOnlyInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFleetErrorItemUnmarshaller : object {
    private static DeleteFleetErrorItemUnmarshaller _instance;
    public static DeleteFleetErrorItemUnmarshaller Instance { get; }
    private static DeleteFleetErrorItemUnmarshaller();
    public sealed virtual DeleteFleetErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteFleetErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static DeleteFleetErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFleetErrorUnmarshaller : object {
    private static DeleteFleetErrorUnmarshaller _instance;
    public static DeleteFleetErrorUnmarshaller Instance { get; }
    private static DeleteFleetErrorUnmarshaller();
    public sealed virtual DeleteFleetError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteFleetError Unmarshall(JsonUnmarshallerContext context);
    public static DeleteFleetErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFleetsRequestMarshaller : object {
    private static DeleteFleetsRequestMarshaller _instance;
    public static DeleteFleetsRequestMarshaller Instance { get; }
    private static DeleteFleetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFleetsRequest publicRequest);
    internal static DeleteFleetsRequestMarshaller GetInstance();
    public static DeleteFleetsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFleetsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteFleetsResponseUnmarshaller _instance;
    public static DeleteFleetsResponseUnmarshaller Instance { get; }
    private static DeleteFleetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFleetsResponseUnmarshaller GetInstance();
    public static DeleteFleetsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFleetSuccessItemUnmarshaller : object {
    private static DeleteFleetSuccessItemUnmarshaller _instance;
    public static DeleteFleetSuccessItemUnmarshaller Instance { get; }
    private static DeleteFleetSuccessItemUnmarshaller();
    public sealed virtual DeleteFleetSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteFleetSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static DeleteFleetSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsRequestMarshaller : object {
    private static DeleteFlowLogsRequestMarshaller _instance;
    public static DeleteFlowLogsRequestMarshaller Instance { get; }
    private static DeleteFlowLogsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFlowLogsRequest publicRequest);
    internal static DeleteFlowLogsRequestMarshaller GetInstance();
    public static DeleteFlowLogsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteFlowLogsResponseUnmarshaller _instance;
    public static DeleteFlowLogsResponseUnmarshaller Instance { get; }
    private static DeleteFlowLogsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFlowLogsResponseUnmarshaller GetInstance();
    public static DeleteFlowLogsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFpgaImageRequestMarshaller : object {
    private static DeleteFpgaImageRequestMarshaller _instance;
    public static DeleteFpgaImageRequestMarshaller Instance { get; }
    private static DeleteFpgaImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFpgaImageRequest publicRequest);
    internal static DeleteFpgaImageRequestMarshaller GetInstance();
    public static DeleteFpgaImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFpgaImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteFpgaImageResponseUnmarshaller _instance;
    public static DeleteFpgaImageResponseUnmarshaller Instance { get; }
    private static DeleteFpgaImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFpgaImageResponseUnmarshaller GetInstance();
    public static DeleteFpgaImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInstanceConnectEndpointRequestMarshaller : object {
    private static DeleteInstanceConnectEndpointRequestMarshaller _instance;
    public static DeleteInstanceConnectEndpointRequestMarshaller Instance { get; }
    private static DeleteInstanceConnectEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteInstanceConnectEndpointRequest publicRequest);
    internal static DeleteInstanceConnectEndpointRequestMarshaller GetInstance();
    public static DeleteInstanceConnectEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInstanceConnectEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteInstanceConnectEndpointResponseUnmarshaller _instance;
    public static DeleteInstanceConnectEndpointResponseUnmarshaller Instance { get; }
    private static DeleteInstanceConnectEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteInstanceConnectEndpointResponseUnmarshaller GetInstance();
    public static DeleteInstanceConnectEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInstanceEventWindowRequestMarshaller : object {
    private static DeleteInstanceEventWindowRequestMarshaller _instance;
    public static DeleteInstanceEventWindowRequestMarshaller Instance { get; }
    private static DeleteInstanceEventWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteInstanceEventWindowRequest publicRequest);
    internal static DeleteInstanceEventWindowRequestMarshaller GetInstance();
    public static DeleteInstanceEventWindowRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInstanceEventWindowResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteInstanceEventWindowResponseUnmarshaller _instance;
    public static DeleteInstanceEventWindowResponseUnmarshaller Instance { get; }
    private static DeleteInstanceEventWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteInstanceEventWindowResponseUnmarshaller GetInstance();
    public static DeleteInstanceEventWindowResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayRequestMarshaller : object {
    private static DeleteInternetGatewayRequestMarshaller _instance;
    public static DeleteInternetGatewayRequestMarshaller Instance { get; }
    private static DeleteInternetGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteInternetGatewayRequest publicRequest);
    internal static DeleteInternetGatewayRequestMarshaller GetInstance();
    public static DeleteInternetGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteInternetGatewayResponseUnmarshaller _instance;
    public static DeleteInternetGatewayResponseUnmarshaller Instance { get; }
    private static DeleteInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteInternetGatewayResponseUnmarshaller GetInstance();
    public static DeleteInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamExternalResourceVerificationTokenRequestMarshaller : object {
    private static DeleteIpamExternalResourceVerificationTokenRequestMarshaller _instance;
    public static DeleteIpamExternalResourceVerificationTokenRequestMarshaller Instance { get; }
    private static DeleteIpamExternalResourceVerificationTokenRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIpamExternalResourceVerificationTokenRequest publicRequest);
    internal static DeleteIpamExternalResourceVerificationTokenRequestMarshaller GetInstance();
    public static DeleteIpamExternalResourceVerificationTokenRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamExternalResourceVerificationTokenResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteIpamExternalResourceVerificationTokenResponseUnmarshaller _instance;
    public static DeleteIpamExternalResourceVerificationTokenResponseUnmarshaller Instance { get; }
    private static DeleteIpamExternalResourceVerificationTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIpamExternalResourceVerificationTokenResponseUnmarshaller GetInstance();
    public static DeleteIpamExternalResourceVerificationTokenResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamPoolRequestMarshaller : object {
    private static DeleteIpamPoolRequestMarshaller _instance;
    public static DeleteIpamPoolRequestMarshaller Instance { get; }
    private static DeleteIpamPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIpamPoolRequest publicRequest);
    internal static DeleteIpamPoolRequestMarshaller GetInstance();
    public static DeleteIpamPoolRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamPoolResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteIpamPoolResponseUnmarshaller _instance;
    public static DeleteIpamPoolResponseUnmarshaller Instance { get; }
    private static DeleteIpamPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIpamPoolResponseUnmarshaller GetInstance();
    public static DeleteIpamPoolResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamRequestMarshaller : object {
    private static DeleteIpamRequestMarshaller _instance;
    public static DeleteIpamRequestMarshaller Instance { get; }
    private static DeleteIpamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIpamRequest publicRequest);
    internal static DeleteIpamRequestMarshaller GetInstance();
    public static DeleteIpamRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamResourceDiscoveryRequestMarshaller : object {
    private static DeleteIpamResourceDiscoveryRequestMarshaller _instance;
    public static DeleteIpamResourceDiscoveryRequestMarshaller Instance { get; }
    private static DeleteIpamResourceDiscoveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIpamResourceDiscoveryRequest publicRequest);
    internal static DeleteIpamResourceDiscoveryRequestMarshaller GetInstance();
    public static DeleteIpamResourceDiscoveryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamResourceDiscoveryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteIpamResourceDiscoveryResponseUnmarshaller _instance;
    public static DeleteIpamResourceDiscoveryResponseUnmarshaller Instance { get; }
    private static DeleteIpamResourceDiscoveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIpamResourceDiscoveryResponseUnmarshaller GetInstance();
    public static DeleteIpamResourceDiscoveryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteIpamResponseUnmarshaller _instance;
    public static DeleteIpamResponseUnmarshaller Instance { get; }
    private static DeleteIpamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIpamResponseUnmarshaller GetInstance();
    public static DeleteIpamResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamScopeRequestMarshaller : object {
    private static DeleteIpamScopeRequestMarshaller _instance;
    public static DeleteIpamScopeRequestMarshaller Instance { get; }
    private static DeleteIpamScopeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIpamScopeRequest publicRequest);
    internal static DeleteIpamScopeRequestMarshaller GetInstance();
    public static DeleteIpamScopeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteIpamScopeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteIpamScopeResponseUnmarshaller _instance;
    public static DeleteIpamScopeResponseUnmarshaller Instance { get; }
    private static DeleteIpamScopeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIpamScopeResponseUnmarshaller GetInstance();
    public static DeleteIpamScopeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairRequestMarshaller : object {
    private static DeleteKeyPairRequestMarshaller _instance;
    public static DeleteKeyPairRequestMarshaller Instance { get; }
    private static DeleteKeyPairRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteKeyPairRequest publicRequest);
    internal static DeleteKeyPairRequestMarshaller GetInstance();
    public static DeleteKeyPairRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteKeyPairResponseUnmarshaller _instance;
    public static DeleteKeyPairResponseUnmarshaller Instance { get; }
    private static DeleteKeyPairResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteKeyPairResponseUnmarshaller GetInstance();
    public static DeleteKeyPairResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLaunchTemplateRequestMarshaller : object {
    private static DeleteLaunchTemplateRequestMarshaller _instance;
    public static DeleteLaunchTemplateRequestMarshaller Instance { get; }
    private static DeleteLaunchTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLaunchTemplateRequest publicRequest);
    internal static DeleteLaunchTemplateRequestMarshaller GetInstance();
    public static DeleteLaunchTemplateRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLaunchTemplateResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteLaunchTemplateResponseUnmarshaller _instance;
    public static DeleteLaunchTemplateResponseUnmarshaller Instance { get; }
    private static DeleteLaunchTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLaunchTemplateResponseUnmarshaller GetInstance();
    public static DeleteLaunchTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLaunchTemplateVersionsRequestMarshaller : object {
    private static DeleteLaunchTemplateVersionsRequestMarshaller _instance;
    public static DeleteLaunchTemplateVersionsRequestMarshaller Instance { get; }
    private static DeleteLaunchTemplateVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLaunchTemplateVersionsRequest publicRequest);
    internal static DeleteLaunchTemplateVersionsRequestMarshaller GetInstance();
    public static DeleteLaunchTemplateVersionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLaunchTemplateVersionsResponseErrorItemUnmarshaller : object {
    private static DeleteLaunchTemplateVersionsResponseErrorItemUnmarshaller _instance;
    public static DeleteLaunchTemplateVersionsResponseErrorItemUnmarshaller Instance { get; }
    private static DeleteLaunchTemplateVersionsResponseErrorItemUnmarshaller();
    public sealed virtual DeleteLaunchTemplateVersionsResponseErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteLaunchTemplateVersionsResponseErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static DeleteLaunchTemplateVersionsResponseErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLaunchTemplateVersionsResponseSuccessItemUnmarshaller : object {
    private static DeleteLaunchTemplateVersionsResponseSuccessItemUnmarshaller _instance;
    public static DeleteLaunchTemplateVersionsResponseSuccessItemUnmarshaller Instance { get; }
    private static DeleteLaunchTemplateVersionsResponseSuccessItemUnmarshaller();
    public sealed virtual DeleteLaunchTemplateVersionsResponseSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteLaunchTemplateVersionsResponseSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static DeleteLaunchTemplateVersionsResponseSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLaunchTemplateVersionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteLaunchTemplateVersionsResponseUnmarshaller _instance;
    public static DeleteLaunchTemplateVersionsResponseUnmarshaller Instance { get; }
    private static DeleteLaunchTemplateVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLaunchTemplateVersionsResponseUnmarshaller GetInstance();
    public static DeleteLaunchTemplateVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteRequestMarshaller : object {
    private static DeleteLocalGatewayRouteRequestMarshaller _instance;
    public static DeleteLocalGatewayRouteRequestMarshaller Instance { get; }
    private static DeleteLocalGatewayRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLocalGatewayRouteRequest publicRequest);
    internal static DeleteLocalGatewayRouteRequestMarshaller GetInstance();
    public static DeleteLocalGatewayRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteLocalGatewayRouteResponseUnmarshaller _instance;
    public static DeleteLocalGatewayRouteResponseUnmarshaller Instance { get; }
    private static DeleteLocalGatewayRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLocalGatewayRouteResponseUnmarshaller GetInstance();
    public static DeleteLocalGatewayRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteTableRequestMarshaller : object {
    private static DeleteLocalGatewayRouteTableRequestMarshaller _instance;
    public static DeleteLocalGatewayRouteTableRequestMarshaller Instance { get; }
    private static DeleteLocalGatewayRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLocalGatewayRouteTableRequest publicRequest);
    internal static DeleteLocalGatewayRouteTableRequestMarshaller GetInstance();
    public static DeleteLocalGatewayRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteLocalGatewayRouteTableResponseUnmarshaller _instance;
    public static DeleteLocalGatewayRouteTableResponseUnmarshaller Instance { get; }
    private static DeleteLocalGatewayRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLocalGatewayRouteTableResponseUnmarshaller GetInstance();
    public static DeleteLocalGatewayRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller : object {
    private static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller _instance;
    public static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller Instance { get; }
    private static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest publicRequest);
    internal static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller GetInstance();
    public static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller _instance;
    public static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller Instance { get; }
    private static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller GetInstance();
    public static DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteTableVpcAssociationRequestMarshaller : object {
    private static DeleteLocalGatewayRouteTableVpcAssociationRequestMarshaller _instance;
    public static DeleteLocalGatewayRouteTableVpcAssociationRequestMarshaller Instance { get; }
    private static DeleteLocalGatewayRouteTableVpcAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLocalGatewayRouteTableVpcAssociationRequest publicRequest);
    internal static DeleteLocalGatewayRouteTableVpcAssociationRequestMarshaller GetInstance();
    public static DeleteLocalGatewayRouteTableVpcAssociationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteLocalGatewayRouteTableVpcAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteLocalGatewayRouteTableVpcAssociationResponseUnmarshaller _instance;
    public static DeleteLocalGatewayRouteTableVpcAssociationResponseUnmarshaller Instance { get; }
    private static DeleteLocalGatewayRouteTableVpcAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLocalGatewayRouteTableVpcAssociationResponseUnmarshaller GetInstance();
    public static DeleteLocalGatewayRouteTableVpcAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteManagedPrefixListRequestMarshaller : object {
    private static DeleteManagedPrefixListRequestMarshaller _instance;
    public static DeleteManagedPrefixListRequestMarshaller Instance { get; }
    private static DeleteManagedPrefixListRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteManagedPrefixListRequest publicRequest);
    internal static DeleteManagedPrefixListRequestMarshaller GetInstance();
    public static DeleteManagedPrefixListRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteManagedPrefixListResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteManagedPrefixListResponseUnmarshaller _instance;
    public static DeleteManagedPrefixListResponseUnmarshaller Instance { get; }
    private static DeleteManagedPrefixListResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteManagedPrefixListResponseUnmarshaller GetInstance();
    public static DeleteManagedPrefixListResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayRequestMarshaller : object {
    private static DeleteNatGatewayRequestMarshaller _instance;
    public static DeleteNatGatewayRequestMarshaller Instance { get; }
    private static DeleteNatGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNatGatewayRequest publicRequest);
    internal static DeleteNatGatewayRequestMarshaller GetInstance();
    public static DeleteNatGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNatGatewayResponseUnmarshaller _instance;
    public static DeleteNatGatewayResponseUnmarshaller Instance { get; }
    private static DeleteNatGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNatGatewayResponseUnmarshaller GetInstance();
    public static DeleteNatGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryRequestMarshaller : object {
    private static DeleteNetworkAclEntryRequestMarshaller _instance;
    public static DeleteNetworkAclEntryRequestMarshaller Instance { get; }
    private static DeleteNetworkAclEntryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkAclEntryRequest publicRequest);
    internal static DeleteNetworkAclEntryRequestMarshaller GetInstance();
    public static DeleteNetworkAclEntryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkAclEntryResponseUnmarshaller _instance;
    public static DeleteNetworkAclEntryResponseUnmarshaller Instance { get; }
    private static DeleteNetworkAclEntryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkAclEntryResponseUnmarshaller GetInstance();
    public static DeleteNetworkAclEntryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclRequestMarshaller : object {
    private static DeleteNetworkAclRequestMarshaller _instance;
    public static DeleteNetworkAclRequestMarshaller Instance { get; }
    private static DeleteNetworkAclRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkAclRequest publicRequest);
    internal static DeleteNetworkAclRequestMarshaller GetInstance();
    public static DeleteNetworkAclRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkAclResponseUnmarshaller _instance;
    public static DeleteNetworkAclResponseUnmarshaller Instance { get; }
    private static DeleteNetworkAclResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkAclResponseUnmarshaller GetInstance();
    public static DeleteNetworkAclResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsAccessScopeAnalysisRequestMarshaller : object {
    private static DeleteNetworkInsightsAccessScopeAnalysisRequestMarshaller _instance;
    public static DeleteNetworkInsightsAccessScopeAnalysisRequestMarshaller Instance { get; }
    private static DeleteNetworkInsightsAccessScopeAnalysisRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkInsightsAccessScopeAnalysisRequest publicRequest);
    internal static DeleteNetworkInsightsAccessScopeAnalysisRequestMarshaller GetInstance();
    public static DeleteNetworkInsightsAccessScopeAnalysisRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsAccessScopeAnalysisResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkInsightsAccessScopeAnalysisResponseUnmarshaller _instance;
    public static DeleteNetworkInsightsAccessScopeAnalysisResponseUnmarshaller Instance { get; }
    private static DeleteNetworkInsightsAccessScopeAnalysisResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkInsightsAccessScopeAnalysisResponseUnmarshaller GetInstance();
    public static DeleteNetworkInsightsAccessScopeAnalysisResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsAccessScopeRequestMarshaller : object {
    private static DeleteNetworkInsightsAccessScopeRequestMarshaller _instance;
    public static DeleteNetworkInsightsAccessScopeRequestMarshaller Instance { get; }
    private static DeleteNetworkInsightsAccessScopeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkInsightsAccessScopeRequest publicRequest);
    internal static DeleteNetworkInsightsAccessScopeRequestMarshaller GetInstance();
    public static DeleteNetworkInsightsAccessScopeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsAccessScopeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkInsightsAccessScopeResponseUnmarshaller _instance;
    public static DeleteNetworkInsightsAccessScopeResponseUnmarshaller Instance { get; }
    private static DeleteNetworkInsightsAccessScopeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkInsightsAccessScopeResponseUnmarshaller GetInstance();
    public static DeleteNetworkInsightsAccessScopeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsAnalysisRequestMarshaller : object {
    private static DeleteNetworkInsightsAnalysisRequestMarshaller _instance;
    public static DeleteNetworkInsightsAnalysisRequestMarshaller Instance { get; }
    private static DeleteNetworkInsightsAnalysisRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkInsightsAnalysisRequest publicRequest);
    internal static DeleteNetworkInsightsAnalysisRequestMarshaller GetInstance();
    public static DeleteNetworkInsightsAnalysisRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsAnalysisResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkInsightsAnalysisResponseUnmarshaller _instance;
    public static DeleteNetworkInsightsAnalysisResponseUnmarshaller Instance { get; }
    private static DeleteNetworkInsightsAnalysisResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkInsightsAnalysisResponseUnmarshaller GetInstance();
    public static DeleteNetworkInsightsAnalysisResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsPathRequestMarshaller : object {
    private static DeleteNetworkInsightsPathRequestMarshaller _instance;
    public static DeleteNetworkInsightsPathRequestMarshaller Instance { get; }
    private static DeleteNetworkInsightsPathRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkInsightsPathRequest publicRequest);
    internal static DeleteNetworkInsightsPathRequestMarshaller GetInstance();
    public static DeleteNetworkInsightsPathRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInsightsPathResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkInsightsPathResponseUnmarshaller _instance;
    public static DeleteNetworkInsightsPathResponseUnmarshaller Instance { get; }
    private static DeleteNetworkInsightsPathResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkInsightsPathResponseUnmarshaller GetInstance();
    public static DeleteNetworkInsightsPathResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfacePermissionRequestMarshaller : object {
    private static DeleteNetworkInterfacePermissionRequestMarshaller _instance;
    public static DeleteNetworkInterfacePermissionRequestMarshaller Instance { get; }
    private static DeleteNetworkInterfacePermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkInterfacePermissionRequest publicRequest);
    internal static DeleteNetworkInterfacePermissionRequestMarshaller GetInstance();
    public static DeleteNetworkInterfacePermissionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfacePermissionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkInterfacePermissionResponseUnmarshaller _instance;
    public static DeleteNetworkInterfacePermissionResponseUnmarshaller Instance { get; }
    private static DeleteNetworkInterfacePermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkInterfacePermissionResponseUnmarshaller GetInstance();
    public static DeleteNetworkInterfacePermissionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceRequestMarshaller : object {
    private static DeleteNetworkInterfaceRequestMarshaller _instance;
    public static DeleteNetworkInterfaceRequestMarshaller Instance { get; }
    private static DeleteNetworkInterfaceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkInterfaceRequest publicRequest);
    internal static DeleteNetworkInterfaceRequestMarshaller GetInstance();
    public static DeleteNetworkInterfaceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkInterfaceResponseUnmarshaller _instance;
    public static DeleteNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static DeleteNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkInterfaceResponseUnmarshaller GetInstance();
    public static DeleteNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupRequestMarshaller : object {
    private static DeletePlacementGroupRequestMarshaller _instance;
    public static DeletePlacementGroupRequestMarshaller Instance { get; }
    private static DeletePlacementGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePlacementGroupRequest publicRequest);
    internal static DeletePlacementGroupRequestMarshaller GetInstance();
    public static DeletePlacementGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeletePlacementGroupResponseUnmarshaller _instance;
    public static DeletePlacementGroupResponseUnmarshaller Instance { get; }
    private static DeletePlacementGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePlacementGroupResponseUnmarshaller GetInstance();
    public static DeletePlacementGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeletePublicIpv4PoolRequestMarshaller : object {
    private static DeletePublicIpv4PoolRequestMarshaller _instance;
    public static DeletePublicIpv4PoolRequestMarshaller Instance { get; }
    private static DeletePublicIpv4PoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePublicIpv4PoolRequest publicRequest);
    internal static DeletePublicIpv4PoolRequestMarshaller GetInstance();
    public static DeletePublicIpv4PoolRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeletePublicIpv4PoolResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeletePublicIpv4PoolResponseUnmarshaller _instance;
    public static DeletePublicIpv4PoolResponseUnmarshaller Instance { get; }
    private static DeletePublicIpv4PoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePublicIpv4PoolResponseUnmarshaller GetInstance();
    public static DeletePublicIpv4PoolResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteQueuedReservedInstancesErrorUnmarshaller : object {
    private static DeleteQueuedReservedInstancesErrorUnmarshaller _instance;
    public static DeleteQueuedReservedInstancesErrorUnmarshaller Instance { get; }
    private static DeleteQueuedReservedInstancesErrorUnmarshaller();
    public sealed virtual DeleteQueuedReservedInstancesError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteQueuedReservedInstancesError Unmarshall(JsonUnmarshallerContext context);
    public static DeleteQueuedReservedInstancesErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteQueuedReservedInstancesRequestMarshaller : object {
    private static DeleteQueuedReservedInstancesRequestMarshaller _instance;
    public static DeleteQueuedReservedInstancesRequestMarshaller Instance { get; }
    private static DeleteQueuedReservedInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteQueuedReservedInstancesRequest publicRequest);
    internal static DeleteQueuedReservedInstancesRequestMarshaller GetInstance();
    public static DeleteQueuedReservedInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteQueuedReservedInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteQueuedReservedInstancesResponseUnmarshaller _instance;
    public static DeleteQueuedReservedInstancesResponseUnmarshaller Instance { get; }
    private static DeleteQueuedReservedInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteQueuedReservedInstancesResponseUnmarshaller GetInstance();
    public static DeleteQueuedReservedInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteRequestMarshaller : object {
    private static DeleteRouteRequestMarshaller _instance;
    public static DeleteRouteRequestMarshaller Instance { get; }
    private static DeleteRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteRequest publicRequest);
    internal static DeleteRouteRequestMarshaller GetInstance();
    public static DeleteRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteRouteResponseUnmarshaller _instance;
    public static DeleteRouteResponseUnmarshaller Instance { get; }
    private static DeleteRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteResponseUnmarshaller GetInstance();
    public static DeleteRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableRequestMarshaller : object {
    private static DeleteRouteTableRequestMarshaller _instance;
    public static DeleteRouteTableRequestMarshaller Instance { get; }
    private static DeleteRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteTableRequest publicRequest);
    internal static DeleteRouteTableRequestMarshaller GetInstance();
    public static DeleteRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteRouteTableResponseUnmarshaller _instance;
    public static DeleteRouteTableResponseUnmarshaller Instance { get; }
    private static DeleteRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteTableResponseUnmarshaller GetInstance();
    public static DeleteRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupRequestMarshaller : object {
    private static DeleteSecurityGroupRequestMarshaller _instance;
    public static DeleteSecurityGroupRequestMarshaller Instance { get; }
    private static DeleteSecurityGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSecurityGroupRequest publicRequest);
    internal static DeleteSecurityGroupRequestMarshaller GetInstance();
    public static DeleteSecurityGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSecurityGroupResponseUnmarshaller _instance;
    public static DeleteSecurityGroupResponseUnmarshaller Instance { get; }
    private static DeleteSecurityGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSecurityGroupResponseUnmarshaller GetInstance();
    public static DeleteSecurityGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller : object {
    private static DeleteSnapshotRequestMarshaller _instance;
    public static DeleteSnapshotRequestMarshaller Instance { get; }
    private static DeleteSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSnapshotRequest publicRequest);
    internal static DeleteSnapshotRequestMarshaller GetInstance();
    public static DeleteSnapshotRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSnapshotResponseUnmarshaller _instance;
    public static DeleteSnapshotResponseUnmarshaller Instance { get; }
    private static DeleteSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSnapshotResponseUnmarshaller GetInstance();
    public static DeleteSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionRequestMarshaller : object {
    private static DeleteSpotDatafeedSubscriptionRequestMarshaller _instance;
    public static DeleteSpotDatafeedSubscriptionRequestMarshaller Instance { get; }
    private static DeleteSpotDatafeedSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSpotDatafeedSubscriptionRequest publicRequest);
    internal static DeleteSpotDatafeedSubscriptionRequestMarshaller GetInstance();
    public static DeleteSpotDatafeedSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSpotDatafeedSubscriptionResponseUnmarshaller _instance;
    public static DeleteSpotDatafeedSubscriptionResponseUnmarshaller Instance { get; }
    private static DeleteSpotDatafeedSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSpotDatafeedSubscriptionResponseUnmarshaller GetInstance();
    public static DeleteSpotDatafeedSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetCidrReservationRequestMarshaller : object {
    private static DeleteSubnetCidrReservationRequestMarshaller _instance;
    public static DeleteSubnetCidrReservationRequestMarshaller Instance { get; }
    private static DeleteSubnetCidrReservationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSubnetCidrReservationRequest publicRequest);
    internal static DeleteSubnetCidrReservationRequestMarshaller GetInstance();
    public static DeleteSubnetCidrReservationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetCidrReservationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSubnetCidrReservationResponseUnmarshaller _instance;
    public static DeleteSubnetCidrReservationResponseUnmarshaller Instance { get; }
    private static DeleteSubnetCidrReservationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSubnetCidrReservationResponseUnmarshaller GetInstance();
    public static DeleteSubnetCidrReservationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetRequestMarshaller : object {
    private static DeleteSubnetRequestMarshaller _instance;
    public static DeleteSubnetRequestMarshaller Instance { get; }
    private static DeleteSubnetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSubnetRequest publicRequest);
    internal static DeleteSubnetRequestMarshaller GetInstance();
    public static DeleteSubnetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSubnetResponseUnmarshaller _instance;
    public static DeleteSubnetResponseUnmarshaller Instance { get; }
    private static DeleteSubnetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSubnetResponseUnmarshaller GetInstance();
    public static DeleteSubnetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller : object {
    private static DeleteTagsRequestMarshaller _instance;
    public static DeleteTagsRequestMarshaller Instance { get; }
    private static DeleteTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTagsRequest publicRequest);
    internal static DeleteTagsRequestMarshaller GetInstance();
    public static DeleteTagsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTagsResponseUnmarshaller _instance;
    public static DeleteTagsResponseUnmarshaller Instance { get; }
    private static DeleteTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTagsResponseUnmarshaller GetInstance();
    public static DeleteTagsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorFilterRequestMarshaller : object {
    private static DeleteTrafficMirrorFilterRequestMarshaller _instance;
    public static DeleteTrafficMirrorFilterRequestMarshaller Instance { get; }
    private static DeleteTrafficMirrorFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTrafficMirrorFilterRequest publicRequest);
    internal static DeleteTrafficMirrorFilterRequestMarshaller GetInstance();
    public static DeleteTrafficMirrorFilterRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorFilterResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTrafficMirrorFilterResponseUnmarshaller _instance;
    public static DeleteTrafficMirrorFilterResponseUnmarshaller Instance { get; }
    private static DeleteTrafficMirrorFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTrafficMirrorFilterResponseUnmarshaller GetInstance();
    public static DeleteTrafficMirrorFilterResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorFilterRuleRequestMarshaller : object {
    private static DeleteTrafficMirrorFilterRuleRequestMarshaller _instance;
    public static DeleteTrafficMirrorFilterRuleRequestMarshaller Instance { get; }
    private static DeleteTrafficMirrorFilterRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTrafficMirrorFilterRuleRequest publicRequest);
    internal static DeleteTrafficMirrorFilterRuleRequestMarshaller GetInstance();
    public static DeleteTrafficMirrorFilterRuleRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorFilterRuleResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTrafficMirrorFilterRuleResponseUnmarshaller _instance;
    public static DeleteTrafficMirrorFilterRuleResponseUnmarshaller Instance { get; }
    private static DeleteTrafficMirrorFilterRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTrafficMirrorFilterRuleResponseUnmarshaller GetInstance();
    public static DeleteTrafficMirrorFilterRuleResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorSessionRequestMarshaller : object {
    private static DeleteTrafficMirrorSessionRequestMarshaller _instance;
    public static DeleteTrafficMirrorSessionRequestMarshaller Instance { get; }
    private static DeleteTrafficMirrorSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTrafficMirrorSessionRequest publicRequest);
    internal static DeleteTrafficMirrorSessionRequestMarshaller GetInstance();
    public static DeleteTrafficMirrorSessionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorSessionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTrafficMirrorSessionResponseUnmarshaller _instance;
    public static DeleteTrafficMirrorSessionResponseUnmarshaller Instance { get; }
    private static DeleteTrafficMirrorSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTrafficMirrorSessionResponseUnmarshaller GetInstance();
    public static DeleteTrafficMirrorSessionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorTargetRequestMarshaller : object {
    private static DeleteTrafficMirrorTargetRequestMarshaller _instance;
    public static DeleteTrafficMirrorTargetRequestMarshaller Instance { get; }
    private static DeleteTrafficMirrorTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTrafficMirrorTargetRequest publicRequest);
    internal static DeleteTrafficMirrorTargetRequestMarshaller GetInstance();
    public static DeleteTrafficMirrorTargetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTrafficMirrorTargetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTrafficMirrorTargetResponseUnmarshaller _instance;
    public static DeleteTrafficMirrorTargetResponseUnmarshaller Instance { get; }
    private static DeleteTrafficMirrorTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTrafficMirrorTargetResponseUnmarshaller GetInstance();
    public static DeleteTrafficMirrorTargetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayConnectPeerRequestMarshaller : object {
    private static DeleteTransitGatewayConnectPeerRequestMarshaller _instance;
    public static DeleteTransitGatewayConnectPeerRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayConnectPeerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayConnectPeerRequest publicRequest);
    internal static DeleteTransitGatewayConnectPeerRequestMarshaller GetInstance();
    public static DeleteTransitGatewayConnectPeerRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayConnectPeerResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayConnectPeerResponseUnmarshaller _instance;
    public static DeleteTransitGatewayConnectPeerResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayConnectPeerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayConnectPeerResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayConnectPeerResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayConnectRequestMarshaller : object {
    private static DeleteTransitGatewayConnectRequestMarshaller _instance;
    public static DeleteTransitGatewayConnectRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayConnectRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayConnectRequest publicRequest);
    internal static DeleteTransitGatewayConnectRequestMarshaller GetInstance();
    public static DeleteTransitGatewayConnectRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayConnectResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayConnectResponseUnmarshaller _instance;
    public static DeleteTransitGatewayConnectResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayConnectResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayConnectResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayConnectResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayMulticastDomainRequestMarshaller : object {
    private static DeleteTransitGatewayMulticastDomainRequestMarshaller _instance;
    public static DeleteTransitGatewayMulticastDomainRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayMulticastDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayMulticastDomainRequest publicRequest);
    internal static DeleteTransitGatewayMulticastDomainRequestMarshaller GetInstance();
    public static DeleteTransitGatewayMulticastDomainRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayMulticastDomainResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayMulticastDomainResponseUnmarshaller _instance;
    public static DeleteTransitGatewayMulticastDomainResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayMulticastDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayMulticastDomainResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayMulticastDomainResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayPeeringAttachmentRequestMarshaller : object {
    private static DeleteTransitGatewayPeeringAttachmentRequestMarshaller _instance;
    public static DeleteTransitGatewayPeeringAttachmentRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayPeeringAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayPeeringAttachmentRequest publicRequest);
    internal static DeleteTransitGatewayPeeringAttachmentRequestMarshaller GetInstance();
    public static DeleteTransitGatewayPeeringAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayPeeringAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayPeeringAttachmentResponseUnmarshaller _instance;
    public static DeleteTransitGatewayPeeringAttachmentResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayPeeringAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayPeeringAttachmentResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayPeeringAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayPolicyTableRequestMarshaller : object {
    private static DeleteTransitGatewayPolicyTableRequestMarshaller _instance;
    public static DeleteTransitGatewayPolicyTableRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayPolicyTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayPolicyTableRequest publicRequest);
    internal static DeleteTransitGatewayPolicyTableRequestMarshaller GetInstance();
    public static DeleteTransitGatewayPolicyTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayPolicyTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayPolicyTableResponseUnmarshaller _instance;
    public static DeleteTransitGatewayPolicyTableResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayPolicyTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayPolicyTableResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayPolicyTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayPrefixListReferenceRequestMarshaller : object {
    private static DeleteTransitGatewayPrefixListReferenceRequestMarshaller _instance;
    public static DeleteTransitGatewayPrefixListReferenceRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayPrefixListReferenceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayPrefixListReferenceRequest publicRequest);
    internal static DeleteTransitGatewayPrefixListReferenceRequestMarshaller GetInstance();
    public static DeleteTransitGatewayPrefixListReferenceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayPrefixListReferenceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayPrefixListReferenceResponseUnmarshaller _instance;
    public static DeleteTransitGatewayPrefixListReferenceResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayPrefixListReferenceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayPrefixListReferenceResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayPrefixListReferenceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayRequestMarshaller : object {
    private static DeleteTransitGatewayRequestMarshaller _instance;
    public static DeleteTransitGatewayRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayRequest publicRequest);
    internal static DeleteTransitGatewayRequestMarshaller GetInstance();
    public static DeleteTransitGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayResponseUnmarshaller _instance;
    public static DeleteTransitGatewayResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayRouteRequestMarshaller : object {
    private static DeleteTransitGatewayRouteRequestMarshaller _instance;
    public static DeleteTransitGatewayRouteRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayRouteRequest publicRequest);
    internal static DeleteTransitGatewayRouteRequestMarshaller GetInstance();
    public static DeleteTransitGatewayRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayRouteResponseUnmarshaller _instance;
    public static DeleteTransitGatewayRouteResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayRouteResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayRouteTableAnnouncementRequestMarshaller : object {
    private static DeleteTransitGatewayRouteTableAnnouncementRequestMarshaller _instance;
    public static DeleteTransitGatewayRouteTableAnnouncementRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayRouteTableAnnouncementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayRouteTableAnnouncementRequest publicRequest);
    internal static DeleteTransitGatewayRouteTableAnnouncementRequestMarshaller GetInstance();
    public static DeleteTransitGatewayRouteTableAnnouncementRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayRouteTableAnnouncementResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayRouteTableAnnouncementResponseUnmarshaller _instance;
    public static DeleteTransitGatewayRouteTableAnnouncementResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayRouteTableAnnouncementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayRouteTableAnnouncementResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayRouteTableAnnouncementResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayRouteTableRequestMarshaller : object {
    private static DeleteTransitGatewayRouteTableRequestMarshaller _instance;
    public static DeleteTransitGatewayRouteTableRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayRouteTableRequest publicRequest);
    internal static DeleteTransitGatewayRouteTableRequestMarshaller GetInstance();
    public static DeleteTransitGatewayRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayRouteTableResponseUnmarshaller _instance;
    public static DeleteTransitGatewayRouteTableResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayRouteTableResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayVpcAttachmentRequestMarshaller : object {
    private static DeleteTransitGatewayVpcAttachmentRequestMarshaller _instance;
    public static DeleteTransitGatewayVpcAttachmentRequestMarshaller Instance { get; }
    private static DeleteTransitGatewayVpcAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTransitGatewayVpcAttachmentRequest publicRequest);
    internal static DeleteTransitGatewayVpcAttachmentRequestMarshaller GetInstance();
    public static DeleteTransitGatewayVpcAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTransitGatewayVpcAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTransitGatewayVpcAttachmentResponseUnmarshaller _instance;
    public static DeleteTransitGatewayVpcAttachmentResponseUnmarshaller Instance { get; }
    private static DeleteTransitGatewayVpcAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTransitGatewayVpcAttachmentResponseUnmarshaller GetInstance();
    public static DeleteTransitGatewayVpcAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessEndpointRequestMarshaller : object {
    private static DeleteVerifiedAccessEndpointRequestMarshaller _instance;
    public static DeleteVerifiedAccessEndpointRequestMarshaller Instance { get; }
    private static DeleteVerifiedAccessEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVerifiedAccessEndpointRequest publicRequest);
    internal static DeleteVerifiedAccessEndpointRequestMarshaller GetInstance();
    public static DeleteVerifiedAccessEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVerifiedAccessEndpointResponseUnmarshaller _instance;
    public static DeleteVerifiedAccessEndpointResponseUnmarshaller Instance { get; }
    private static DeleteVerifiedAccessEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVerifiedAccessEndpointResponseUnmarshaller GetInstance();
    public static DeleteVerifiedAccessEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessGroupRequestMarshaller : object {
    private static DeleteVerifiedAccessGroupRequestMarshaller _instance;
    public static DeleteVerifiedAccessGroupRequestMarshaller Instance { get; }
    private static DeleteVerifiedAccessGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVerifiedAccessGroupRequest publicRequest);
    internal static DeleteVerifiedAccessGroupRequestMarshaller GetInstance();
    public static DeleteVerifiedAccessGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVerifiedAccessGroupResponseUnmarshaller _instance;
    public static DeleteVerifiedAccessGroupResponseUnmarshaller Instance { get; }
    private static DeleteVerifiedAccessGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVerifiedAccessGroupResponseUnmarshaller GetInstance();
    public static DeleteVerifiedAccessGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessInstanceRequestMarshaller : object {
    private static DeleteVerifiedAccessInstanceRequestMarshaller _instance;
    public static DeleteVerifiedAccessInstanceRequestMarshaller Instance { get; }
    private static DeleteVerifiedAccessInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVerifiedAccessInstanceRequest publicRequest);
    internal static DeleteVerifiedAccessInstanceRequestMarshaller GetInstance();
    public static DeleteVerifiedAccessInstanceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVerifiedAccessInstanceResponseUnmarshaller _instance;
    public static DeleteVerifiedAccessInstanceResponseUnmarshaller Instance { get; }
    private static DeleteVerifiedAccessInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVerifiedAccessInstanceResponseUnmarshaller GetInstance();
    public static DeleteVerifiedAccessInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessTrustProviderRequestMarshaller : object {
    private static DeleteVerifiedAccessTrustProviderRequestMarshaller _instance;
    public static DeleteVerifiedAccessTrustProviderRequestMarshaller Instance { get; }
    private static DeleteVerifiedAccessTrustProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVerifiedAccessTrustProviderRequest publicRequest);
    internal static DeleteVerifiedAccessTrustProviderRequestMarshaller GetInstance();
    public static DeleteVerifiedAccessTrustProviderRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVerifiedAccessTrustProviderResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVerifiedAccessTrustProviderResponseUnmarshaller _instance;
    public static DeleteVerifiedAccessTrustProviderResponseUnmarshaller Instance { get; }
    private static DeleteVerifiedAccessTrustProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVerifiedAccessTrustProviderResponseUnmarshaller GetInstance();
    public static DeleteVerifiedAccessTrustProviderResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeRequestMarshaller : object {
    private static DeleteVolumeRequestMarshaller _instance;
    public static DeleteVolumeRequestMarshaller Instance { get; }
    private static DeleteVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVolumeRequest publicRequest);
    internal static DeleteVolumeRequestMarshaller GetInstance();
    public static DeleteVolumeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVolumeResponseUnmarshaller _instance;
    public static DeleteVolumeResponseUnmarshaller Instance { get; }
    private static DeleteVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVolumeResponseUnmarshaller GetInstance();
    public static DeleteVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointConnectionNotificationsRequestMarshaller : object {
    private static DeleteVpcEndpointConnectionNotificationsRequestMarshaller _instance;
    public static DeleteVpcEndpointConnectionNotificationsRequestMarshaller Instance { get; }
    private static DeleteVpcEndpointConnectionNotificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcEndpointConnectionNotificationsRequest publicRequest);
    internal static DeleteVpcEndpointConnectionNotificationsRequestMarshaller GetInstance();
    public static DeleteVpcEndpointConnectionNotificationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointConnectionNotificationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcEndpointConnectionNotificationsResponseUnmarshaller _instance;
    public static DeleteVpcEndpointConnectionNotificationsResponseUnmarshaller Instance { get; }
    private static DeleteVpcEndpointConnectionNotificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcEndpointConnectionNotificationsResponseUnmarshaller GetInstance();
    public static DeleteVpcEndpointConnectionNotificationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointServiceConfigurationsRequestMarshaller : object {
    private static DeleteVpcEndpointServiceConfigurationsRequestMarshaller _instance;
    public static DeleteVpcEndpointServiceConfigurationsRequestMarshaller Instance { get; }
    private static DeleteVpcEndpointServiceConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcEndpointServiceConfigurationsRequest publicRequest);
    internal static DeleteVpcEndpointServiceConfigurationsRequestMarshaller GetInstance();
    public static DeleteVpcEndpointServiceConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointServiceConfigurationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcEndpointServiceConfigurationsResponseUnmarshaller _instance;
    public static DeleteVpcEndpointServiceConfigurationsResponseUnmarshaller Instance { get; }
    private static DeleteVpcEndpointServiceConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcEndpointServiceConfigurationsResponseUnmarshaller GetInstance();
    public static DeleteVpcEndpointServiceConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsRequestMarshaller : object {
    private static DeleteVpcEndpointsRequestMarshaller _instance;
    public static DeleteVpcEndpointsRequestMarshaller Instance { get; }
    private static DeleteVpcEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcEndpointsRequest publicRequest);
    internal static DeleteVpcEndpointsRequestMarshaller GetInstance();
    public static DeleteVpcEndpointsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcEndpointsResponseUnmarshaller _instance;
    public static DeleteVpcEndpointsResponseUnmarshaller Instance { get; }
    private static DeleteVpcEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcEndpointsResponseUnmarshaller GetInstance();
    public static DeleteVpcEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionRequestMarshaller : object {
    private static DeleteVpcPeeringConnectionRequestMarshaller _instance;
    public static DeleteVpcPeeringConnectionRequestMarshaller Instance { get; }
    private static DeleteVpcPeeringConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcPeeringConnectionRequest publicRequest);
    internal static DeleteVpcPeeringConnectionRequestMarshaller GetInstance();
    public static DeleteVpcPeeringConnectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcPeeringConnectionResponseUnmarshaller _instance;
    public static DeleteVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static DeleteVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static DeleteVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcRequestMarshaller : object {
    private static DeleteVpcRequestMarshaller _instance;
    public static DeleteVpcRequestMarshaller Instance { get; }
    private static DeleteVpcRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcRequest publicRequest);
    internal static DeleteVpcRequestMarshaller GetInstance();
    public static DeleteVpcRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcResponseUnmarshaller _instance;
    public static DeleteVpcResponseUnmarshaller Instance { get; }
    private static DeleteVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcResponseUnmarshaller GetInstance();
    public static DeleteVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRequestMarshaller : object {
    private static DeleteVpnConnectionRequestMarshaller _instance;
    public static DeleteVpnConnectionRequestMarshaller Instance { get; }
    private static DeleteVpnConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpnConnectionRequest publicRequest);
    internal static DeleteVpnConnectionRequestMarshaller GetInstance();
    public static DeleteVpnConnectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpnConnectionResponseUnmarshaller _instance;
    public static DeleteVpnConnectionResponseUnmarshaller Instance { get; }
    private static DeleteVpnConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpnConnectionResponseUnmarshaller GetInstance();
    public static DeleteVpnConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteRequestMarshaller : object {
    private static DeleteVpnConnectionRouteRequestMarshaller _instance;
    public static DeleteVpnConnectionRouteRequestMarshaller Instance { get; }
    private static DeleteVpnConnectionRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpnConnectionRouteRequest publicRequest);
    internal static DeleteVpnConnectionRouteRequestMarshaller GetInstance();
    public static DeleteVpnConnectionRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpnConnectionRouteResponseUnmarshaller _instance;
    public static DeleteVpnConnectionRouteResponseUnmarshaller Instance { get; }
    private static DeleteVpnConnectionRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpnConnectionRouteResponseUnmarshaller GetInstance();
    public static DeleteVpnConnectionRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayRequestMarshaller : object {
    private static DeleteVpnGatewayRequestMarshaller _instance;
    public static DeleteVpnGatewayRequestMarshaller Instance { get; }
    private static DeleteVpnGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpnGatewayRequest publicRequest);
    internal static DeleteVpnGatewayRequestMarshaller GetInstance();
    public static DeleteVpnGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpnGatewayResponseUnmarshaller _instance;
    public static DeleteVpnGatewayResponseUnmarshaller Instance { get; }
    private static DeleteVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpnGatewayResponseUnmarshaller GetInstance();
    public static DeleteVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionByoipCidrRequestMarshaller : object {
    private static DeprovisionByoipCidrRequestMarshaller _instance;
    public static DeprovisionByoipCidrRequestMarshaller Instance { get; }
    private static DeprovisionByoipCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeprovisionByoipCidrRequest publicRequest);
    internal static DeprovisionByoipCidrRequestMarshaller GetInstance();
    public static DeprovisionByoipCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionByoipCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeprovisionByoipCidrResponseUnmarshaller _instance;
    public static DeprovisionByoipCidrResponseUnmarshaller Instance { get; }
    private static DeprovisionByoipCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeprovisionByoipCidrResponseUnmarshaller GetInstance();
    public static DeprovisionByoipCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionIpamByoasnRequestMarshaller : object {
    private static DeprovisionIpamByoasnRequestMarshaller _instance;
    public static DeprovisionIpamByoasnRequestMarshaller Instance { get; }
    private static DeprovisionIpamByoasnRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeprovisionIpamByoasnRequest publicRequest);
    internal static DeprovisionIpamByoasnRequestMarshaller GetInstance();
    public static DeprovisionIpamByoasnRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionIpamByoasnResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeprovisionIpamByoasnResponseUnmarshaller _instance;
    public static DeprovisionIpamByoasnResponseUnmarshaller Instance { get; }
    private static DeprovisionIpamByoasnResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeprovisionIpamByoasnResponseUnmarshaller GetInstance();
    public static DeprovisionIpamByoasnResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionIpamPoolCidrRequestMarshaller : object {
    private static DeprovisionIpamPoolCidrRequestMarshaller _instance;
    public static DeprovisionIpamPoolCidrRequestMarshaller Instance { get; }
    private static DeprovisionIpamPoolCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeprovisionIpamPoolCidrRequest publicRequest);
    internal static DeprovisionIpamPoolCidrRequestMarshaller GetInstance();
    public static DeprovisionIpamPoolCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionIpamPoolCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeprovisionIpamPoolCidrResponseUnmarshaller _instance;
    public static DeprovisionIpamPoolCidrResponseUnmarshaller Instance { get; }
    private static DeprovisionIpamPoolCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeprovisionIpamPoolCidrResponseUnmarshaller GetInstance();
    public static DeprovisionIpamPoolCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionPublicIpv4PoolCidrRequestMarshaller : object {
    private static DeprovisionPublicIpv4PoolCidrRequestMarshaller _instance;
    public static DeprovisionPublicIpv4PoolCidrRequestMarshaller Instance { get; }
    private static DeprovisionPublicIpv4PoolCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeprovisionPublicIpv4PoolCidrRequest publicRequest);
    internal static DeprovisionPublicIpv4PoolCidrRequestMarshaller GetInstance();
    public static DeprovisionPublicIpv4PoolCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeprovisionPublicIpv4PoolCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeprovisionPublicIpv4PoolCidrResponseUnmarshaller _instance;
    public static DeprovisionPublicIpv4PoolCidrResponseUnmarshaller Instance { get; }
    private static DeprovisionPublicIpv4PoolCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeprovisionPublicIpv4PoolCidrResponseUnmarshaller GetInstance();
    public static DeprovisionPublicIpv4PoolCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageRequestMarshaller : object {
    private static DeregisterImageRequestMarshaller _instance;
    public static DeregisterImageRequestMarshaller Instance { get; }
    private static DeregisterImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterImageRequest publicRequest);
    internal static DeregisterImageRequestMarshaller GetInstance();
    public static DeregisterImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeregisterImageResponseUnmarshaller _instance;
    public static DeregisterImageResponseUnmarshaller Instance { get; }
    private static DeregisterImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterImageResponseUnmarshaller GetInstance();
    public static DeregisterImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterInstanceEventNotificationAttributesRequestMarshaller : object {
    private static DeregisterInstanceEventNotificationAttributesRequestMarshaller _instance;
    public static DeregisterInstanceEventNotificationAttributesRequestMarshaller Instance { get; }
    private static DeregisterInstanceEventNotificationAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterInstanceEventNotificationAttributesRequest publicRequest);
    internal static DeregisterInstanceEventNotificationAttributesRequestMarshaller GetInstance();
    public static DeregisterInstanceEventNotificationAttributesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterInstanceEventNotificationAttributesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeregisterInstanceEventNotificationAttributesResponseUnmarshaller _instance;
    public static DeregisterInstanceEventNotificationAttributesResponseUnmarshaller Instance { get; }
    private static DeregisterInstanceEventNotificationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterInstanceEventNotificationAttributesResponseUnmarshaller GetInstance();
    public static DeregisterInstanceEventNotificationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller : object {
    private static DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller _instance;
    public static DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller Instance { get; }
    private static DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterTransitGatewayMulticastGroupMembersRequest publicRequest);
    internal static DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller GetInstance();
    public static DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller _instance;
    public static DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller Instance { get; }
    private static DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller GetInstance();
    public static DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterTransitGatewayMulticastGroupSourcesRequestMarshaller : object {
    private static DeregisterTransitGatewayMulticastGroupSourcesRequestMarshaller _instance;
    public static DeregisterTransitGatewayMulticastGroupSourcesRequestMarshaller Instance { get; }
    private static DeregisterTransitGatewayMulticastGroupSourcesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterTransitGatewayMulticastGroupSourcesRequest publicRequest);
    internal static DeregisterTransitGatewayMulticastGroupSourcesRequestMarshaller GetInstance();
    public static DeregisterTransitGatewayMulticastGroupSourcesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeregisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller _instance;
    public static DeregisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller Instance { get; }
    private static DeregisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller GetInstance();
    public static DeregisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller : object {
    private static DescribeAccountAttributesRequestMarshaller _instance;
    public static DescribeAccountAttributesRequestMarshaller Instance { get; }
    private static DescribeAccountAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountAttributesRequest publicRequest);
    internal static DescribeAccountAttributesRequestMarshaller GetInstance();
    public static DescribeAccountAttributesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAccountAttributesResponseUnmarshaller _instance;
    public static DescribeAccountAttributesResponseUnmarshaller Instance { get; }
    private static DescribeAccountAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountAttributesResponseUnmarshaller GetInstance();
    public static DescribeAccountAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesAttributeRequestMarshaller : object {
    private static DescribeAddressesAttributeRequestMarshaller _instance;
    public static DescribeAddressesAttributeRequestMarshaller Instance { get; }
    private static DescribeAddressesAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAddressesAttributeRequest publicRequest);
    internal static DescribeAddressesAttributeRequestMarshaller GetInstance();
    public static DescribeAddressesAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAddressesAttributeResponseUnmarshaller _instance;
    public static DescribeAddressesAttributeResponseUnmarshaller Instance { get; }
    private static DescribeAddressesAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAddressesAttributeResponseUnmarshaller GetInstance();
    public static DescribeAddressesAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesRequestMarshaller : object {
    private static DescribeAddressesRequestMarshaller _instance;
    public static DescribeAddressesRequestMarshaller Instance { get; }
    private static DescribeAddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAddressesRequest publicRequest);
    internal static DescribeAddressesRequestMarshaller GetInstance();
    public static DescribeAddressesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAddressesResponseUnmarshaller _instance;
    public static DescribeAddressesResponseUnmarshaller Instance { get; }
    private static DescribeAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAddressesResponseUnmarshaller GetInstance();
    public static DescribeAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressTransfersRequestMarshaller : object {
    private static DescribeAddressTransfersRequestMarshaller _instance;
    public static DescribeAddressTransfersRequestMarshaller Instance { get; }
    private static DescribeAddressTransfersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAddressTransfersRequest publicRequest);
    internal static DescribeAddressTransfersRequestMarshaller GetInstance();
    public static DescribeAddressTransfersRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressTransfersResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAddressTransfersResponseUnmarshaller _instance;
    public static DescribeAddressTransfersResponseUnmarshaller Instance { get; }
    private static DescribeAddressTransfersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAddressTransfersResponseUnmarshaller GetInstance();
    public static DescribeAddressTransfersResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAggregateIdFormatRequestMarshaller : object {
    private static DescribeAggregateIdFormatRequestMarshaller _instance;
    public static DescribeAggregateIdFormatRequestMarshaller Instance { get; }
    private static DescribeAggregateIdFormatRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAggregateIdFormatRequest publicRequest);
    internal static DescribeAggregateIdFormatRequestMarshaller GetInstance();
    public static DescribeAggregateIdFormatRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAggregateIdFormatResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAggregateIdFormatResponseUnmarshaller _instance;
    public static DescribeAggregateIdFormatResponseUnmarshaller Instance { get; }
    private static DescribeAggregateIdFormatResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAggregateIdFormatResponseUnmarshaller GetInstance();
    public static DescribeAggregateIdFormatResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesRequestMarshaller : object {
    private static DescribeAvailabilityZonesRequestMarshaller _instance;
    public static DescribeAvailabilityZonesRequestMarshaller Instance { get; }
    private static DescribeAvailabilityZonesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAvailabilityZonesRequest publicRequest);
    internal static DescribeAvailabilityZonesRequestMarshaller GetInstance();
    public static DescribeAvailabilityZonesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAvailabilityZonesResponseUnmarshaller _instance;
    public static DescribeAvailabilityZonesResponseUnmarshaller Instance { get; }
    private static DescribeAvailabilityZonesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAvailabilityZonesResponseUnmarshaller GetInstance();
    public static DescribeAvailabilityZonesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAwsNetworkPerformanceMetricSubscriptionsRequestMarshaller : object {
    private static DescribeAwsNetworkPerformanceMetricSubscriptionsRequestMarshaller _instance;
    public static DescribeAwsNetworkPerformanceMetricSubscriptionsRequestMarshaller Instance { get; }
    private static DescribeAwsNetworkPerformanceMetricSubscriptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAwsNetworkPerformanceMetricSubscriptionsRequest publicRequest);
    internal static DescribeAwsNetworkPerformanceMetricSubscriptionsRequestMarshaller GetInstance();
    public static DescribeAwsNetworkPerformanceMetricSubscriptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAwsNetworkPerformanceMetricSubscriptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAwsNetworkPerformanceMetricSubscriptionsResponseUnmarshaller _instance;
    public static DescribeAwsNetworkPerformanceMetricSubscriptionsResponseUnmarshaller Instance { get; }
    private static DescribeAwsNetworkPerformanceMetricSubscriptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAwsNetworkPerformanceMetricSubscriptionsResponseUnmarshaller GetInstance();
    public static DescribeAwsNetworkPerformanceMetricSubscriptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksRequestMarshaller : object {
    private static DescribeBundleTasksRequestMarshaller _instance;
    public static DescribeBundleTasksRequestMarshaller Instance { get; }
    private static DescribeBundleTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBundleTasksRequest publicRequest);
    internal static DescribeBundleTasksRequestMarshaller GetInstance();
    public static DescribeBundleTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeBundleTasksResponseUnmarshaller _instance;
    public static DescribeBundleTasksResponseUnmarshaller Instance { get; }
    private static DescribeBundleTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBundleTasksResponseUnmarshaller GetInstance();
    public static DescribeBundleTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeByoipCidrsRequestMarshaller : object {
    private static DescribeByoipCidrsRequestMarshaller _instance;
    public static DescribeByoipCidrsRequestMarshaller Instance { get; }
    private static DescribeByoipCidrsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeByoipCidrsRequest publicRequest);
    internal static DescribeByoipCidrsRequestMarshaller GetInstance();
    public static DescribeByoipCidrsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeByoipCidrsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeByoipCidrsResponseUnmarshaller _instance;
    public static DescribeByoipCidrsResponseUnmarshaller Instance { get; }
    private static DescribeByoipCidrsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeByoipCidrsResponseUnmarshaller GetInstance();
    public static DescribeByoipCidrsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCapacityBlockOfferingsRequestMarshaller : object {
    private static DescribeCapacityBlockOfferingsRequestMarshaller _instance;
    public static DescribeCapacityBlockOfferingsRequestMarshaller Instance { get; }
    private static DescribeCapacityBlockOfferingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCapacityBlockOfferingsRequest publicRequest);
    internal static DescribeCapacityBlockOfferingsRequestMarshaller GetInstance();
    public static DescribeCapacityBlockOfferingsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCapacityBlockOfferingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeCapacityBlockOfferingsResponseUnmarshaller _instance;
    public static DescribeCapacityBlockOfferingsResponseUnmarshaller Instance { get; }
    private static DescribeCapacityBlockOfferingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCapacityBlockOfferingsResponseUnmarshaller GetInstance();
    public static DescribeCapacityBlockOfferingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCapacityReservationFleetsRequestMarshaller : object {
    private static DescribeCapacityReservationFleetsRequestMarshaller _instance;
    public static DescribeCapacityReservationFleetsRequestMarshaller Instance { get; }
    private static DescribeCapacityReservationFleetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCapacityReservationFleetsRequest publicRequest);
    internal static DescribeCapacityReservationFleetsRequestMarshaller GetInstance();
    public static DescribeCapacityReservationFleetsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCapacityReservationFleetsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeCapacityReservationFleetsResponseUnmarshaller _instance;
    public static DescribeCapacityReservationFleetsResponseUnmarshaller Instance { get; }
    private static DescribeCapacityReservationFleetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCapacityReservationFleetsResponseUnmarshaller GetInstance();
    public static DescribeCapacityReservationFleetsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCapacityReservationsRequestMarshaller : object {
    private static DescribeCapacityReservationsRequestMarshaller _instance;
    public static DescribeCapacityReservationsRequestMarshaller Instance { get; }
    private static DescribeCapacityReservationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCapacityReservationsRequest publicRequest);
    internal static DescribeCapacityReservationsRequestMarshaller GetInstance();
    public static DescribeCapacityReservationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCapacityReservationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeCapacityReservationsResponseUnmarshaller _instance;
    public static DescribeCapacityReservationsResponseUnmarshaller Instance { get; }
    private static DescribeCapacityReservationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCapacityReservationsResponseUnmarshaller GetInstance();
    public static DescribeCapacityReservationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCarrierGatewaysRequestMarshaller : object {
    private static DescribeCarrierGatewaysRequestMarshaller _instance;
    public static DescribeCarrierGatewaysRequestMarshaller Instance { get; }
    private static DescribeCarrierGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCarrierGatewaysRequest publicRequest);
    internal static DescribeCarrierGatewaysRequestMarshaller GetInstance();
    public static DescribeCarrierGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCarrierGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeCarrierGatewaysResponseUnmarshaller _instance;
    public static DescribeCarrierGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeCarrierGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCarrierGatewaysResponseUnmarshaller GetInstance();
    public static DescribeCarrierGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesRequestMarshaller : object {
    private static DescribeClassicLinkInstancesRequestMarshaller _instance;
    public static DescribeClassicLinkInstancesRequestMarshaller Instance { get; }
    private static DescribeClassicLinkInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClassicLinkInstancesRequest publicRequest);
    internal static DescribeClassicLinkInstancesRequestMarshaller GetInstance();
    public static DescribeClassicLinkInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeClassicLinkInstancesResponseUnmarshaller _instance;
    public static DescribeClassicLinkInstancesResponseUnmarshaller Instance { get; }
    private static DescribeClassicLinkInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClassicLinkInstancesResponseUnmarshaller GetInstance();
    public static DescribeClassicLinkInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnAuthorizationRulesRequestMarshaller : object {
    private static DescribeClientVpnAuthorizationRulesRequestMarshaller _instance;
    public static DescribeClientVpnAuthorizationRulesRequestMarshaller Instance { get; }
    private static DescribeClientVpnAuthorizationRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClientVpnAuthorizationRulesRequest publicRequest);
    internal static DescribeClientVpnAuthorizationRulesRequestMarshaller GetInstance();
    public static DescribeClientVpnAuthorizationRulesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnAuthorizationRulesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeClientVpnAuthorizationRulesResponseUnmarshaller _instance;
    public static DescribeClientVpnAuthorizationRulesResponseUnmarshaller Instance { get; }
    private static DescribeClientVpnAuthorizationRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClientVpnAuthorizationRulesResponseUnmarshaller GetInstance();
    public static DescribeClientVpnAuthorizationRulesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnConnectionsRequestMarshaller : object {
    private static DescribeClientVpnConnectionsRequestMarshaller _instance;
    public static DescribeClientVpnConnectionsRequestMarshaller Instance { get; }
    private static DescribeClientVpnConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClientVpnConnectionsRequest publicRequest);
    internal static DescribeClientVpnConnectionsRequestMarshaller GetInstance();
    public static DescribeClientVpnConnectionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeClientVpnConnectionsResponseUnmarshaller _instance;
    public static DescribeClientVpnConnectionsResponseUnmarshaller Instance { get; }
    private static DescribeClientVpnConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClientVpnConnectionsResponseUnmarshaller GetInstance();
    public static DescribeClientVpnConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnEndpointsRequestMarshaller : object {
    private static DescribeClientVpnEndpointsRequestMarshaller _instance;
    public static DescribeClientVpnEndpointsRequestMarshaller Instance { get; }
    private static DescribeClientVpnEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClientVpnEndpointsRequest publicRequest);
    internal static DescribeClientVpnEndpointsRequestMarshaller GetInstance();
    public static DescribeClientVpnEndpointsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnEndpointsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeClientVpnEndpointsResponseUnmarshaller _instance;
    public static DescribeClientVpnEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeClientVpnEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClientVpnEndpointsResponseUnmarshaller GetInstance();
    public static DescribeClientVpnEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnRoutesRequestMarshaller : object {
    private static DescribeClientVpnRoutesRequestMarshaller _instance;
    public static DescribeClientVpnRoutesRequestMarshaller Instance { get; }
    private static DescribeClientVpnRoutesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClientVpnRoutesRequest publicRequest);
    internal static DescribeClientVpnRoutesRequestMarshaller GetInstance();
    public static DescribeClientVpnRoutesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnRoutesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeClientVpnRoutesResponseUnmarshaller _instance;
    public static DescribeClientVpnRoutesResponseUnmarshaller Instance { get; }
    private static DescribeClientVpnRoutesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClientVpnRoutesResponseUnmarshaller GetInstance();
    public static DescribeClientVpnRoutesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnTargetNetworksRequestMarshaller : object {
    private static DescribeClientVpnTargetNetworksRequestMarshaller _instance;
    public static DescribeClientVpnTargetNetworksRequestMarshaller Instance { get; }
    private static DescribeClientVpnTargetNetworksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClientVpnTargetNetworksRequest publicRequest);
    internal static DescribeClientVpnTargetNetworksRequestMarshaller GetInstance();
    public static DescribeClientVpnTargetNetworksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClientVpnTargetNetworksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeClientVpnTargetNetworksResponseUnmarshaller _instance;
    public static DescribeClientVpnTargetNetworksResponseUnmarshaller Instance { get; }
    private static DescribeClientVpnTargetNetworksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClientVpnTargetNetworksResponseUnmarshaller GetInstance();
    public static DescribeClientVpnTargetNetworksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCoipPoolsRequestMarshaller : object {
    private static DescribeCoipPoolsRequestMarshaller _instance;
    public static DescribeCoipPoolsRequestMarshaller Instance { get; }
    private static DescribeCoipPoolsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCoipPoolsRequest publicRequest);
    internal static DescribeCoipPoolsRequestMarshaller GetInstance();
    public static DescribeCoipPoolsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCoipPoolsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeCoipPoolsResponseUnmarshaller _instance;
    public static DescribeCoipPoolsResponseUnmarshaller Instance { get; }
    private static DescribeCoipPoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCoipPoolsResponseUnmarshaller GetInstance();
    public static DescribeCoipPoolsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksRequestMarshaller : object {
    private static DescribeConversionTasksRequestMarshaller _instance;
    public static DescribeConversionTasksRequestMarshaller Instance { get; }
    private static DescribeConversionTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConversionTasksRequest publicRequest);
    internal static DescribeConversionTasksRequestMarshaller GetInstance();
    public static DescribeConversionTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeConversionTasksResponseUnmarshaller _instance;
    public static DescribeConversionTasksResponseUnmarshaller Instance { get; }
    private static DescribeConversionTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConversionTasksResponseUnmarshaller GetInstance();
    public static DescribeConversionTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysRequestMarshaller : object {
    private static DescribeCustomerGatewaysRequestMarshaller _instance;
    public static DescribeCustomerGatewaysRequestMarshaller Instance { get; }
    private static DescribeCustomerGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCustomerGatewaysRequest publicRequest);
    internal static DescribeCustomerGatewaysRequestMarshaller GetInstance();
    public static DescribeCustomerGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeCustomerGatewaysResponseUnmarshaller _instance;
    public static DescribeCustomerGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeCustomerGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCustomerGatewaysResponseUnmarshaller GetInstance();
    public static DescribeCustomerGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsRequestMarshaller : object {
    private static DescribeDhcpOptionsRequestMarshaller _instance;
    public static DescribeDhcpOptionsRequestMarshaller Instance { get; }
    private static DescribeDhcpOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDhcpOptionsRequest publicRequest);
    internal static DescribeDhcpOptionsRequestMarshaller GetInstance();
    public static DescribeDhcpOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeDhcpOptionsResponseUnmarshaller _instance;
    public static DescribeDhcpOptionsResponseUnmarshaller Instance { get; }
    private static DescribeDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDhcpOptionsResponseUnmarshaller GetInstance();
    public static DescribeDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeEgressOnlyInternetGatewaysRequestMarshaller : object {
    private static DescribeEgressOnlyInternetGatewaysRequestMarshaller _instance;
    public static DescribeEgressOnlyInternetGatewaysRequestMarshaller Instance { get; }
    private static DescribeEgressOnlyInternetGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEgressOnlyInternetGatewaysRequest publicRequest);
    internal static DescribeEgressOnlyInternetGatewaysRequestMarshaller GetInstance();
    public static DescribeEgressOnlyInternetGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeEgressOnlyInternetGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeEgressOnlyInternetGatewaysResponseUnmarshaller _instance;
    public static DescribeEgressOnlyInternetGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeEgressOnlyInternetGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEgressOnlyInternetGatewaysResponseUnmarshaller GetInstance();
    public static DescribeEgressOnlyInternetGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeElasticGpusRequestMarshaller : object {
    private static DescribeElasticGpusRequestMarshaller _instance;
    public static DescribeElasticGpusRequestMarshaller Instance { get; }
    private static DescribeElasticGpusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeElasticGpusRequest publicRequest);
    internal static DescribeElasticGpusRequestMarshaller GetInstance();
    public static DescribeElasticGpusRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeElasticGpusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeElasticGpusResponseUnmarshaller _instance;
    public static DescribeElasticGpusResponseUnmarshaller Instance { get; }
    private static DescribeElasticGpusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeElasticGpusResponseUnmarshaller GetInstance();
    public static DescribeElasticGpusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportImageTasksRequestMarshaller : object {
    private static DescribeExportImageTasksRequestMarshaller _instance;
    public static DescribeExportImageTasksRequestMarshaller Instance { get; }
    private static DescribeExportImageTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeExportImageTasksRequest publicRequest);
    internal static DescribeExportImageTasksRequestMarshaller GetInstance();
    public static DescribeExportImageTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportImageTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeExportImageTasksResponseUnmarshaller _instance;
    public static DescribeExportImageTasksResponseUnmarshaller Instance { get; }
    private static DescribeExportImageTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeExportImageTasksResponseUnmarshaller GetInstance();
    public static DescribeExportImageTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller : object {
    private static DescribeExportTasksRequestMarshaller _instance;
    public static DescribeExportTasksRequestMarshaller Instance { get; }
    private static DescribeExportTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeExportTasksRequest publicRequest);
    internal static DescribeExportTasksRequestMarshaller GetInstance();
    public static DescribeExportTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeExportTasksResponseUnmarshaller _instance;
    public static DescribeExportTasksResponseUnmarshaller Instance { get; }
    private static DescribeExportTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeExportTasksResponseUnmarshaller GetInstance();
    public static DescribeExportTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFastLaunchImagesRequestMarshaller : object {
    private static DescribeFastLaunchImagesRequestMarshaller _instance;
    public static DescribeFastLaunchImagesRequestMarshaller Instance { get; }
    private static DescribeFastLaunchImagesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFastLaunchImagesRequest publicRequest);
    internal static DescribeFastLaunchImagesRequestMarshaller GetInstance();
    public static DescribeFastLaunchImagesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFastLaunchImagesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFastLaunchImagesResponseUnmarshaller _instance;
    public static DescribeFastLaunchImagesResponseUnmarshaller Instance { get; }
    private static DescribeFastLaunchImagesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFastLaunchImagesResponseUnmarshaller GetInstance();
    public static DescribeFastLaunchImagesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFastLaunchImagesSuccessItemUnmarshaller : object {
    private static DescribeFastLaunchImagesSuccessItemUnmarshaller _instance;
    public static DescribeFastLaunchImagesSuccessItemUnmarshaller Instance { get; }
    private static DescribeFastLaunchImagesSuccessItemUnmarshaller();
    public sealed virtual DescribeFastLaunchImagesSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DescribeFastLaunchImagesSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static DescribeFastLaunchImagesSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFastSnapshotRestoresRequestMarshaller : object {
    private static DescribeFastSnapshotRestoresRequestMarshaller _instance;
    public static DescribeFastSnapshotRestoresRequestMarshaller Instance { get; }
    private static DescribeFastSnapshotRestoresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFastSnapshotRestoresRequest publicRequest);
    internal static DescribeFastSnapshotRestoresRequestMarshaller GetInstance();
    public static DescribeFastSnapshotRestoresRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFastSnapshotRestoresResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFastSnapshotRestoresResponseUnmarshaller _instance;
    public static DescribeFastSnapshotRestoresResponseUnmarshaller Instance { get; }
    private static DescribeFastSnapshotRestoresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFastSnapshotRestoresResponseUnmarshaller GetInstance();
    public static DescribeFastSnapshotRestoresResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFastSnapshotRestoreSuccessItemUnmarshaller : object {
    private static DescribeFastSnapshotRestoreSuccessItemUnmarshaller _instance;
    public static DescribeFastSnapshotRestoreSuccessItemUnmarshaller Instance { get; }
    private static DescribeFastSnapshotRestoreSuccessItemUnmarshaller();
    public sealed virtual DescribeFastSnapshotRestoreSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DescribeFastSnapshotRestoreSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static DescribeFastSnapshotRestoreSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetErrorUnmarshaller : object {
    private static DescribeFleetErrorUnmarshaller _instance;
    public static DescribeFleetErrorUnmarshaller Instance { get; }
    private static DescribeFleetErrorUnmarshaller();
    public sealed virtual DescribeFleetError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DescribeFleetError Unmarshall(JsonUnmarshallerContext context);
    public static DescribeFleetErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetHistoryRequestMarshaller : object {
    private static DescribeFleetHistoryRequestMarshaller _instance;
    public static DescribeFleetHistoryRequestMarshaller Instance { get; }
    private static DescribeFleetHistoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetHistoryRequest publicRequest);
    internal static DescribeFleetHistoryRequestMarshaller GetInstance();
    public static DescribeFleetHistoryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetHistoryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFleetHistoryResponseUnmarshaller _instance;
    public static DescribeFleetHistoryResponseUnmarshaller Instance { get; }
    private static DescribeFleetHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetHistoryResponseUnmarshaller GetInstance();
    public static DescribeFleetHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetInstancesRequestMarshaller : object {
    private static DescribeFleetInstancesRequestMarshaller _instance;
    public static DescribeFleetInstancesRequestMarshaller Instance { get; }
    private static DescribeFleetInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetInstancesRequest publicRequest);
    internal static DescribeFleetInstancesRequestMarshaller GetInstance();
    public static DescribeFleetInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFleetInstancesResponseUnmarshaller _instance;
    public static DescribeFleetInstancesResponseUnmarshaller Instance { get; }
    private static DescribeFleetInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetInstancesResponseUnmarshaller GetInstance();
    public static DescribeFleetInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetsInstancesUnmarshaller : object {
    private static DescribeFleetsInstancesUnmarshaller _instance;
    public static DescribeFleetsInstancesUnmarshaller Instance { get; }
    private static DescribeFleetsInstancesUnmarshaller();
    public sealed virtual DescribeFleetsInstances Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DescribeFleetsInstances Unmarshall(JsonUnmarshallerContext context);
    public static DescribeFleetsInstancesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetsRequestMarshaller : object {
    private static DescribeFleetsRequestMarshaller _instance;
    public static DescribeFleetsRequestMarshaller Instance { get; }
    private static DescribeFleetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetsRequest publicRequest);
    internal static DescribeFleetsRequestMarshaller GetInstance();
    public static DescribeFleetsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFleetsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFleetsResponseUnmarshaller _instance;
    public static DescribeFleetsResponseUnmarshaller Instance { get; }
    private static DescribeFleetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetsResponseUnmarshaller GetInstance();
    public static DescribeFleetsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsRequestMarshaller : object {
    private static DescribeFlowLogsRequestMarshaller _instance;
    public static DescribeFlowLogsRequestMarshaller Instance { get; }
    private static DescribeFlowLogsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFlowLogsRequest publicRequest);
    internal static DescribeFlowLogsRequestMarshaller GetInstance();
    public static DescribeFlowLogsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFlowLogsResponseUnmarshaller _instance;
    public static DescribeFlowLogsResponseUnmarshaller Instance { get; }
    private static DescribeFlowLogsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFlowLogsResponseUnmarshaller GetInstance();
    public static DescribeFlowLogsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFpgaImageAttributeRequestMarshaller : object {
    private static DescribeFpgaImageAttributeRequestMarshaller _instance;
    public static DescribeFpgaImageAttributeRequestMarshaller Instance { get; }
    private static DescribeFpgaImageAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFpgaImageAttributeRequest publicRequest);
    internal static DescribeFpgaImageAttributeRequestMarshaller GetInstance();
    public static DescribeFpgaImageAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFpgaImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFpgaImageAttributeResponseUnmarshaller _instance;
    public static DescribeFpgaImageAttributeResponseUnmarshaller Instance { get; }
    private static DescribeFpgaImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFpgaImageAttributeResponseUnmarshaller GetInstance();
    public static DescribeFpgaImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFpgaImagesRequestMarshaller : object {
    private static DescribeFpgaImagesRequestMarshaller _instance;
    public static DescribeFpgaImagesRequestMarshaller Instance { get; }
    private static DescribeFpgaImagesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFpgaImagesRequest publicRequest);
    internal static DescribeFpgaImagesRequestMarshaller GetInstance();
    public static DescribeFpgaImagesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFpgaImagesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFpgaImagesResponseUnmarshaller _instance;
    public static DescribeFpgaImagesResponseUnmarshaller Instance { get; }
    private static DescribeFpgaImagesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFpgaImagesResponseUnmarshaller GetInstance();
    public static DescribeFpgaImagesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsRequestMarshaller : object {
    private static DescribeHostReservationOfferingsRequestMarshaller _instance;
    public static DescribeHostReservationOfferingsRequestMarshaller Instance { get; }
    private static DescribeHostReservationOfferingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeHostReservationOfferingsRequest publicRequest);
    internal static DescribeHostReservationOfferingsRequestMarshaller GetInstance();
    public static DescribeHostReservationOfferingsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeHostReservationOfferingsResponseUnmarshaller _instance;
    public static DescribeHostReservationOfferingsResponseUnmarshaller Instance { get; }
    private static DescribeHostReservationOfferingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeHostReservationOfferingsResponseUnmarshaller GetInstance();
    public static DescribeHostReservationOfferingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsRequestMarshaller : object {
    private static DescribeHostReservationsRequestMarshaller _instance;
    public static DescribeHostReservationsRequestMarshaller Instance { get; }
    private static DescribeHostReservationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeHostReservationsRequest publicRequest);
    internal static DescribeHostReservationsRequestMarshaller GetInstance();
    public static DescribeHostReservationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeHostReservationsResponseUnmarshaller _instance;
    public static DescribeHostReservationsResponseUnmarshaller Instance { get; }
    private static DescribeHostReservationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeHostReservationsResponseUnmarshaller GetInstance();
    public static DescribeHostReservationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsRequestMarshaller : object {
    private static DescribeHostsRequestMarshaller _instance;
    public static DescribeHostsRequestMarshaller Instance { get; }
    private static DescribeHostsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeHostsRequest publicRequest);
    internal static DescribeHostsRequestMarshaller GetInstance();
    public static DescribeHostsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeHostsResponseUnmarshaller _instance;
    public static DescribeHostsResponseUnmarshaller Instance { get; }
    private static DescribeHostsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeHostsResponseUnmarshaller GetInstance();
    public static DescribeHostsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIamInstanceProfileAssociationsRequestMarshaller : object {
    private static DescribeIamInstanceProfileAssociationsRequestMarshaller _instance;
    public static DescribeIamInstanceProfileAssociationsRequestMarshaller Instance { get; }
    private static DescribeIamInstanceProfileAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIamInstanceProfileAssociationsRequest publicRequest);
    internal static DescribeIamInstanceProfileAssociationsRequestMarshaller GetInstance();
    public static DescribeIamInstanceProfileAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIamInstanceProfileAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIamInstanceProfileAssociationsResponseUnmarshaller _instance;
    public static DescribeIamInstanceProfileAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeIamInstanceProfileAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIamInstanceProfileAssociationsResponseUnmarshaller GetInstance();
    public static DescribeIamInstanceProfileAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatRequestMarshaller : object {
    private static DescribeIdentityIdFormatRequestMarshaller _instance;
    public static DescribeIdentityIdFormatRequestMarshaller Instance { get; }
    private static DescribeIdentityIdFormatRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityIdFormatRequest publicRequest);
    internal static DescribeIdentityIdFormatRequestMarshaller GetInstance();
    public static DescribeIdentityIdFormatRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIdentityIdFormatResponseUnmarshaller _instance;
    public static DescribeIdentityIdFormatResponseUnmarshaller Instance { get; }
    private static DescribeIdentityIdFormatResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityIdFormatResponseUnmarshaller GetInstance();
    public static DescribeIdentityIdFormatResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatRequestMarshaller : object {
    private static DescribeIdFormatRequestMarshaller _instance;
    public static DescribeIdFormatRequestMarshaller Instance { get; }
    private static DescribeIdFormatRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdFormatRequest publicRequest);
    internal static DescribeIdFormatRequestMarshaller GetInstance();
    public static DescribeIdFormatRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIdFormatResponseUnmarshaller _instance;
    public static DescribeIdFormatResponseUnmarshaller Instance { get; }
    private static DescribeIdFormatResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdFormatResponseUnmarshaller GetInstance();
    public static DescribeIdFormatResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeRequestMarshaller : object {
    private static DescribeImageAttributeRequestMarshaller _instance;
    public static DescribeImageAttributeRequestMarshaller Instance { get; }
    private static DescribeImageAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImageAttributeRequest publicRequest);
    internal static DescribeImageAttributeRequestMarshaller GetInstance();
    public static DescribeImageAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImageAttributeResponseUnmarshaller _instance;
    public static DescribeImageAttributeResponseUnmarshaller Instance { get; }
    private static DescribeImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImageAttributeResponseUnmarshaller GetInstance();
    public static DescribeImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller : object {
    private static DescribeImagesRequestMarshaller _instance;
    public static DescribeImagesRequestMarshaller Instance { get; }
    private static DescribeImagesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImagesRequest publicRequest);
    internal static DescribeImagesRequestMarshaller GetInstance();
    public static DescribeImagesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImagesResponseUnmarshaller _instance;
    public static DescribeImagesResponseUnmarshaller Instance { get; }
    private static DescribeImagesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImagesResponseUnmarshaller GetInstance();
    public static DescribeImagesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksRequestMarshaller : object {
    private static DescribeImportImageTasksRequestMarshaller _instance;
    public static DescribeImportImageTasksRequestMarshaller Instance { get; }
    private static DescribeImportImageTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImportImageTasksRequest publicRequest);
    internal static DescribeImportImageTasksRequestMarshaller GetInstance();
    public static DescribeImportImageTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImportImageTasksResponseUnmarshaller _instance;
    public static DescribeImportImageTasksResponseUnmarshaller Instance { get; }
    private static DescribeImportImageTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImportImageTasksResponseUnmarshaller GetInstance();
    public static DescribeImportImageTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksRequestMarshaller : object {
    private static DescribeImportSnapshotTasksRequestMarshaller _instance;
    public static DescribeImportSnapshotTasksRequestMarshaller Instance { get; }
    private static DescribeImportSnapshotTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImportSnapshotTasksRequest publicRequest);
    internal static DescribeImportSnapshotTasksRequestMarshaller GetInstance();
    public static DescribeImportSnapshotTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImportSnapshotTasksResponseUnmarshaller _instance;
    public static DescribeImportSnapshotTasksResponseUnmarshaller Instance { get; }
    private static DescribeImportSnapshotTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImportSnapshotTasksResponseUnmarshaller GetInstance();
    public static DescribeImportSnapshotTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeRequestMarshaller : object {
    private static DescribeInstanceAttributeRequestMarshaller _instance;
    public static DescribeInstanceAttributeRequestMarshaller Instance { get; }
    private static DescribeInstanceAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceAttributeRequest publicRequest);
    internal static DescribeInstanceAttributeRequestMarshaller GetInstance();
    public static DescribeInstanceAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceAttributeResponseUnmarshaller _instance;
    public static DescribeInstanceAttributeResponseUnmarshaller Instance { get; }
    private static DescribeInstanceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceAttributeResponseUnmarshaller GetInstance();
    public static DescribeInstanceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceConnectEndpointsRequestMarshaller : object {
    private static DescribeInstanceConnectEndpointsRequestMarshaller _instance;
    public static DescribeInstanceConnectEndpointsRequestMarshaller Instance { get; }
    private static DescribeInstanceConnectEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceConnectEndpointsRequest publicRequest);
    internal static DescribeInstanceConnectEndpointsRequestMarshaller GetInstance();
    public static DescribeInstanceConnectEndpointsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceConnectEndpointsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceConnectEndpointsResponseUnmarshaller _instance;
    public static DescribeInstanceConnectEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeInstanceConnectEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceConnectEndpointsResponseUnmarshaller GetInstance();
    public static DescribeInstanceConnectEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceCreditSpecificationsRequestMarshaller : object {
    private static DescribeInstanceCreditSpecificationsRequestMarshaller _instance;
    public static DescribeInstanceCreditSpecificationsRequestMarshaller Instance { get; }
    private static DescribeInstanceCreditSpecificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceCreditSpecificationsRequest publicRequest);
    internal static DescribeInstanceCreditSpecificationsRequestMarshaller GetInstance();
    public static DescribeInstanceCreditSpecificationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceCreditSpecificationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceCreditSpecificationsResponseUnmarshaller _instance;
    public static DescribeInstanceCreditSpecificationsResponseUnmarshaller Instance { get; }
    private static DescribeInstanceCreditSpecificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceCreditSpecificationsResponseUnmarshaller GetInstance();
    public static DescribeInstanceCreditSpecificationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceEventNotificationAttributesRequestMarshaller : object {
    private static DescribeInstanceEventNotificationAttributesRequestMarshaller _instance;
    public static DescribeInstanceEventNotificationAttributesRequestMarshaller Instance { get; }
    private static DescribeInstanceEventNotificationAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceEventNotificationAttributesRequest publicRequest);
    internal static DescribeInstanceEventNotificationAttributesRequestMarshaller GetInstance();
    public static DescribeInstanceEventNotificationAttributesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceEventNotificationAttributesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceEventNotificationAttributesResponseUnmarshaller _instance;
    public static DescribeInstanceEventNotificationAttributesResponseUnmarshaller Instance { get; }
    private static DescribeInstanceEventNotificationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceEventNotificationAttributesResponseUnmarshaller GetInstance();
    public static DescribeInstanceEventNotificationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceEventWindowsRequestMarshaller : object {
    private static DescribeInstanceEventWindowsRequestMarshaller _instance;
    public static DescribeInstanceEventWindowsRequestMarshaller Instance { get; }
    private static DescribeInstanceEventWindowsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceEventWindowsRequest publicRequest);
    internal static DescribeInstanceEventWindowsRequestMarshaller GetInstance();
    public static DescribeInstanceEventWindowsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceEventWindowsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceEventWindowsResponseUnmarshaller _instance;
    public static DescribeInstanceEventWindowsResponseUnmarshaller Instance { get; }
    private static DescribeInstanceEventWindowsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceEventWindowsResponseUnmarshaller GetInstance();
    public static DescribeInstanceEventWindowsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesRequestMarshaller : object {
    private static DescribeInstancesRequestMarshaller _instance;
    public static DescribeInstancesRequestMarshaller Instance { get; }
    private static DescribeInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstancesRequest publicRequest);
    internal static DescribeInstancesRequestMarshaller GetInstance();
    public static DescribeInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstancesResponseUnmarshaller _instance;
    public static DescribeInstancesResponseUnmarshaller Instance { get; }
    private static DescribeInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstancesResponseUnmarshaller GetInstance();
    public static DescribeInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusRequestMarshaller : object {
    private static DescribeInstanceStatusRequestMarshaller _instance;
    public static DescribeInstanceStatusRequestMarshaller Instance { get; }
    private static DescribeInstanceStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceStatusRequest publicRequest);
    internal static DescribeInstanceStatusRequestMarshaller GetInstance();
    public static DescribeInstanceStatusRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceStatusResponseUnmarshaller _instance;
    public static DescribeInstanceStatusResponseUnmarshaller Instance { get; }
    private static DescribeInstanceStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceStatusResponseUnmarshaller GetInstance();
    public static DescribeInstanceStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceTopologyRequestMarshaller : object {
    private static DescribeInstanceTopologyRequestMarshaller _instance;
    public static DescribeInstanceTopologyRequestMarshaller Instance { get; }
    private static DescribeInstanceTopologyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceTopologyRequest publicRequest);
    internal static DescribeInstanceTopologyRequestMarshaller GetInstance();
    public static DescribeInstanceTopologyRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceTopologyResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceTopologyResponseUnmarshaller _instance;
    public static DescribeInstanceTopologyResponseUnmarshaller Instance { get; }
    private static DescribeInstanceTopologyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceTopologyResponseUnmarshaller GetInstance();
    public static DescribeInstanceTopologyResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceTypeOfferingsRequestMarshaller : object {
    private static DescribeInstanceTypeOfferingsRequestMarshaller _instance;
    public static DescribeInstanceTypeOfferingsRequestMarshaller Instance { get; }
    private static DescribeInstanceTypeOfferingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceTypeOfferingsRequest publicRequest);
    internal static DescribeInstanceTypeOfferingsRequestMarshaller GetInstance();
    public static DescribeInstanceTypeOfferingsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceTypeOfferingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceTypeOfferingsResponseUnmarshaller _instance;
    public static DescribeInstanceTypeOfferingsResponseUnmarshaller Instance { get; }
    private static DescribeInstanceTypeOfferingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceTypeOfferingsResponseUnmarshaller GetInstance();
    public static DescribeInstanceTypeOfferingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceTypesRequestMarshaller : object {
    private static DescribeInstanceTypesRequestMarshaller _instance;
    public static DescribeInstanceTypesRequestMarshaller Instance { get; }
    private static DescribeInstanceTypesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceTypesRequest publicRequest);
    internal static DescribeInstanceTypesRequestMarshaller GetInstance();
    public static DescribeInstanceTypesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceTypesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceTypesResponseUnmarshaller _instance;
    public static DescribeInstanceTypesResponseUnmarshaller Instance { get; }
    private static DescribeInstanceTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceTypesResponseUnmarshaller GetInstance();
    public static DescribeInstanceTypesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysRequestMarshaller : object {
    private static DescribeInternetGatewaysRequestMarshaller _instance;
    public static DescribeInternetGatewaysRequestMarshaller Instance { get; }
    private static DescribeInternetGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInternetGatewaysRequest publicRequest);
    internal static DescribeInternetGatewaysRequestMarshaller GetInstance();
    public static DescribeInternetGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInternetGatewaysResponseUnmarshaller _instance;
    public static DescribeInternetGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeInternetGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInternetGatewaysResponseUnmarshaller GetInstance();
    public static DescribeInternetGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamByoasnRequestMarshaller : object {
    private static DescribeIpamByoasnRequestMarshaller _instance;
    public static DescribeIpamByoasnRequestMarshaller Instance { get; }
    private static DescribeIpamByoasnRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpamByoasnRequest publicRequest);
    internal static DescribeIpamByoasnRequestMarshaller GetInstance();
    public static DescribeIpamByoasnRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamByoasnResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpamByoasnResponseUnmarshaller _instance;
    public static DescribeIpamByoasnResponseUnmarshaller Instance { get; }
    private static DescribeIpamByoasnResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpamByoasnResponseUnmarshaller GetInstance();
    public static DescribeIpamByoasnResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamExternalResourceVerificationTokensRequestMarshaller : object {
    private static DescribeIpamExternalResourceVerificationTokensRequestMarshaller _instance;
    public static DescribeIpamExternalResourceVerificationTokensRequestMarshaller Instance { get; }
    private static DescribeIpamExternalResourceVerificationTokensRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpamExternalResourceVerificationTokensRequest publicRequest);
    internal static DescribeIpamExternalResourceVerificationTokensRequestMarshaller GetInstance();
    public static DescribeIpamExternalResourceVerificationTokensRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamExternalResourceVerificationTokensResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpamExternalResourceVerificationTokensResponseUnmarshaller _instance;
    public static DescribeIpamExternalResourceVerificationTokensResponseUnmarshaller Instance { get; }
    private static DescribeIpamExternalResourceVerificationTokensResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpamExternalResourceVerificationTokensResponseUnmarshaller GetInstance();
    public static DescribeIpamExternalResourceVerificationTokensResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamPoolsRequestMarshaller : object {
    private static DescribeIpamPoolsRequestMarshaller _instance;
    public static DescribeIpamPoolsRequestMarshaller Instance { get; }
    private static DescribeIpamPoolsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpamPoolsRequest publicRequest);
    internal static DescribeIpamPoolsRequestMarshaller GetInstance();
    public static DescribeIpamPoolsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamPoolsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpamPoolsResponseUnmarshaller _instance;
    public static DescribeIpamPoolsResponseUnmarshaller Instance { get; }
    private static DescribeIpamPoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpamPoolsResponseUnmarshaller GetInstance();
    public static DescribeIpamPoolsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamResourceDiscoveriesRequestMarshaller : object {
    private static DescribeIpamResourceDiscoveriesRequestMarshaller _instance;
    public static DescribeIpamResourceDiscoveriesRequestMarshaller Instance { get; }
    private static DescribeIpamResourceDiscoveriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpamResourceDiscoveriesRequest publicRequest);
    internal static DescribeIpamResourceDiscoveriesRequestMarshaller GetInstance();
    public static DescribeIpamResourceDiscoveriesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamResourceDiscoveriesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpamResourceDiscoveriesResponseUnmarshaller _instance;
    public static DescribeIpamResourceDiscoveriesResponseUnmarshaller Instance { get; }
    private static DescribeIpamResourceDiscoveriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpamResourceDiscoveriesResponseUnmarshaller GetInstance();
    public static DescribeIpamResourceDiscoveriesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamResourceDiscoveryAssociationsRequestMarshaller : object {
    private static DescribeIpamResourceDiscoveryAssociationsRequestMarshaller _instance;
    public static DescribeIpamResourceDiscoveryAssociationsRequestMarshaller Instance { get; }
    private static DescribeIpamResourceDiscoveryAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpamResourceDiscoveryAssociationsRequest publicRequest);
    internal static DescribeIpamResourceDiscoveryAssociationsRequestMarshaller GetInstance();
    public static DescribeIpamResourceDiscoveryAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamResourceDiscoveryAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpamResourceDiscoveryAssociationsResponseUnmarshaller _instance;
    public static DescribeIpamResourceDiscoveryAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeIpamResourceDiscoveryAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpamResourceDiscoveryAssociationsResponseUnmarshaller GetInstance();
    public static DescribeIpamResourceDiscoveryAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamScopesRequestMarshaller : object {
    private static DescribeIpamScopesRequestMarshaller _instance;
    public static DescribeIpamScopesRequestMarshaller Instance { get; }
    private static DescribeIpamScopesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpamScopesRequest publicRequest);
    internal static DescribeIpamScopesRequestMarshaller GetInstance();
    public static DescribeIpamScopesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamScopesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpamScopesResponseUnmarshaller _instance;
    public static DescribeIpamScopesResponseUnmarshaller Instance { get; }
    private static DescribeIpamScopesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpamScopesResponseUnmarshaller GetInstance();
    public static DescribeIpamScopesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamsRequestMarshaller : object {
    private static DescribeIpamsRequestMarshaller _instance;
    public static DescribeIpamsRequestMarshaller Instance { get; }
    private static DescribeIpamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpamsRequest publicRequest);
    internal static DescribeIpamsRequestMarshaller GetInstance();
    public static DescribeIpamsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpamsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpamsResponseUnmarshaller _instance;
    public static DescribeIpamsResponseUnmarshaller Instance { get; }
    private static DescribeIpamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpamsResponseUnmarshaller GetInstance();
    public static DescribeIpamsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpv6PoolsRequestMarshaller : object {
    private static DescribeIpv6PoolsRequestMarshaller _instance;
    public static DescribeIpv6PoolsRequestMarshaller Instance { get; }
    private static DescribeIpv6PoolsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIpv6PoolsRequest publicRequest);
    internal static DescribeIpv6PoolsRequestMarshaller GetInstance();
    public static DescribeIpv6PoolsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIpv6PoolsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeIpv6PoolsResponseUnmarshaller _instance;
    public static DescribeIpv6PoolsResponseUnmarshaller Instance { get; }
    private static DescribeIpv6PoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIpv6PoolsResponseUnmarshaller GetInstance();
    public static DescribeIpv6PoolsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsRequestMarshaller : object {
    private static DescribeKeyPairsRequestMarshaller _instance;
    public static DescribeKeyPairsRequestMarshaller Instance { get; }
    private static DescribeKeyPairsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeKeyPairsRequest publicRequest);
    internal static DescribeKeyPairsRequestMarshaller GetInstance();
    public static DescribeKeyPairsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeKeyPairsResponseUnmarshaller _instance;
    public static DescribeKeyPairsResponseUnmarshaller Instance { get; }
    private static DescribeKeyPairsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeKeyPairsResponseUnmarshaller GetInstance();
    public static DescribeKeyPairsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLaunchTemplatesRequestMarshaller : object {
    private static DescribeLaunchTemplatesRequestMarshaller _instance;
    public static DescribeLaunchTemplatesRequestMarshaller Instance { get; }
    private static DescribeLaunchTemplatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLaunchTemplatesRequest publicRequest);
    internal static DescribeLaunchTemplatesRequestMarshaller GetInstance();
    public static DescribeLaunchTemplatesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLaunchTemplatesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLaunchTemplatesResponseUnmarshaller _instance;
    public static DescribeLaunchTemplatesResponseUnmarshaller Instance { get; }
    private static DescribeLaunchTemplatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLaunchTemplatesResponseUnmarshaller GetInstance();
    public static DescribeLaunchTemplatesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLaunchTemplateVersionsRequestMarshaller : object {
    private static DescribeLaunchTemplateVersionsRequestMarshaller _instance;
    public static DescribeLaunchTemplateVersionsRequestMarshaller Instance { get; }
    private static DescribeLaunchTemplateVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLaunchTemplateVersionsRequest publicRequest);
    internal static DescribeLaunchTemplateVersionsRequestMarshaller GetInstance();
    public static DescribeLaunchTemplateVersionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLaunchTemplateVersionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLaunchTemplateVersionsResponseUnmarshaller _instance;
    public static DescribeLaunchTemplateVersionsResponseUnmarshaller Instance { get; }
    private static DescribeLaunchTemplateVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLaunchTemplateVersionsResponseUnmarshaller GetInstance();
    public static DescribeLaunchTemplateVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayRouteTablesRequestMarshaller : object {
    private static DescribeLocalGatewayRouteTablesRequestMarshaller _instance;
    public static DescribeLocalGatewayRouteTablesRequestMarshaller Instance { get; }
    private static DescribeLocalGatewayRouteTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLocalGatewayRouteTablesRequest publicRequest);
    internal static DescribeLocalGatewayRouteTablesRequestMarshaller GetInstance();
    public static DescribeLocalGatewayRouteTablesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayRouteTablesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLocalGatewayRouteTablesResponseUnmarshaller _instance;
    public static DescribeLocalGatewayRouteTablesResponseUnmarshaller Instance { get; }
    private static DescribeLocalGatewayRouteTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLocalGatewayRouteTablesResponseUnmarshaller GetInstance();
    public static DescribeLocalGatewayRouteTablesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequestMarshaller : object {
    private static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequestMarshaller _instance;
    public static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequestMarshaller Instance { get; }
    private static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest publicRequest);
    internal static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequestMarshaller GetInstance();
    public static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponseUnmarshaller _instance;
    public static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponseUnmarshaller GetInstance();
    public static DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayRouteTableVpcAssociationsRequestMarshaller : object {
    private static DescribeLocalGatewayRouteTableVpcAssociationsRequestMarshaller _instance;
    public static DescribeLocalGatewayRouteTableVpcAssociationsRequestMarshaller Instance { get; }
    private static DescribeLocalGatewayRouteTableVpcAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLocalGatewayRouteTableVpcAssociationsRequest publicRequest);
    internal static DescribeLocalGatewayRouteTableVpcAssociationsRequestMarshaller GetInstance();
    public static DescribeLocalGatewayRouteTableVpcAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayRouteTableVpcAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLocalGatewayRouteTableVpcAssociationsResponseUnmarshaller _instance;
    public static DescribeLocalGatewayRouteTableVpcAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeLocalGatewayRouteTableVpcAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLocalGatewayRouteTableVpcAssociationsResponseUnmarshaller GetInstance();
    public static DescribeLocalGatewayRouteTableVpcAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewaysRequestMarshaller : object {
    private static DescribeLocalGatewaysRequestMarshaller _instance;
    public static DescribeLocalGatewaysRequestMarshaller Instance { get; }
    private static DescribeLocalGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLocalGatewaysRequest publicRequest);
    internal static DescribeLocalGatewaysRequestMarshaller GetInstance();
    public static DescribeLocalGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLocalGatewaysResponseUnmarshaller _instance;
    public static DescribeLocalGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeLocalGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLocalGatewaysResponseUnmarshaller GetInstance();
    public static DescribeLocalGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayVirtualInterfaceGroupsRequestMarshaller : object {
    private static DescribeLocalGatewayVirtualInterfaceGroupsRequestMarshaller _instance;
    public static DescribeLocalGatewayVirtualInterfaceGroupsRequestMarshaller Instance { get; }
    private static DescribeLocalGatewayVirtualInterfaceGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLocalGatewayVirtualInterfaceGroupsRequest publicRequest);
    internal static DescribeLocalGatewayVirtualInterfaceGroupsRequestMarshaller GetInstance();
    public static DescribeLocalGatewayVirtualInterfaceGroupsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayVirtualInterfaceGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLocalGatewayVirtualInterfaceGroupsResponseUnmarshaller _instance;
    public static DescribeLocalGatewayVirtualInterfaceGroupsResponseUnmarshaller Instance { get; }
    private static DescribeLocalGatewayVirtualInterfaceGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLocalGatewayVirtualInterfaceGroupsResponseUnmarshaller GetInstance();
    public static DescribeLocalGatewayVirtualInterfaceGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayVirtualInterfacesRequestMarshaller : object {
    private static DescribeLocalGatewayVirtualInterfacesRequestMarshaller _instance;
    public static DescribeLocalGatewayVirtualInterfacesRequestMarshaller Instance { get; }
    private static DescribeLocalGatewayVirtualInterfacesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLocalGatewayVirtualInterfacesRequest publicRequest);
    internal static DescribeLocalGatewayVirtualInterfacesRequestMarshaller GetInstance();
    public static DescribeLocalGatewayVirtualInterfacesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller _instance;
    public static DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller Instance { get; }
    private static DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller GetInstance();
    public static DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLockedSnapshotsRequestMarshaller : object {
    private static DescribeLockedSnapshotsRequestMarshaller _instance;
    public static DescribeLockedSnapshotsRequestMarshaller Instance { get; }
    private static DescribeLockedSnapshotsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLockedSnapshotsRequest publicRequest);
    internal static DescribeLockedSnapshotsRequestMarshaller GetInstance();
    public static DescribeLockedSnapshotsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeLockedSnapshotsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeLockedSnapshotsResponseUnmarshaller _instance;
    public static DescribeLockedSnapshotsResponseUnmarshaller Instance { get; }
    private static DescribeLockedSnapshotsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLockedSnapshotsResponseUnmarshaller GetInstance();
    public static DescribeLockedSnapshotsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMacHostsRequestMarshaller : object {
    private static DescribeMacHostsRequestMarshaller _instance;
    public static DescribeMacHostsRequestMarshaller Instance { get; }
    private static DescribeMacHostsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMacHostsRequest publicRequest);
    internal static DescribeMacHostsRequestMarshaller GetInstance();
    public static DescribeMacHostsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMacHostsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeMacHostsResponseUnmarshaller _instance;
    public static DescribeMacHostsResponseUnmarshaller Instance { get; }
    private static DescribeMacHostsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMacHostsResponseUnmarshaller GetInstance();
    public static DescribeMacHostsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeManagedPrefixListsRequestMarshaller : object {
    private static DescribeManagedPrefixListsRequestMarshaller _instance;
    public static DescribeManagedPrefixListsRequestMarshaller Instance { get; }
    private static DescribeManagedPrefixListsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeManagedPrefixListsRequest publicRequest);
    internal static DescribeManagedPrefixListsRequestMarshaller GetInstance();
    public static DescribeManagedPrefixListsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeManagedPrefixListsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeManagedPrefixListsResponseUnmarshaller _instance;
    public static DescribeManagedPrefixListsResponseUnmarshaller Instance { get; }
    private static DescribeManagedPrefixListsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeManagedPrefixListsResponseUnmarshaller GetInstance();
    public static DescribeManagedPrefixListsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesRequestMarshaller : object {
    private static DescribeMovingAddressesRequestMarshaller _instance;
    public static DescribeMovingAddressesRequestMarshaller Instance { get; }
    private static DescribeMovingAddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMovingAddressesRequest publicRequest);
    internal static DescribeMovingAddressesRequestMarshaller GetInstance();
    public static DescribeMovingAddressesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeMovingAddressesResponseUnmarshaller _instance;
    public static DescribeMovingAddressesResponseUnmarshaller Instance { get; }
    private static DescribeMovingAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMovingAddressesResponseUnmarshaller GetInstance();
    public static DescribeMovingAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysRequestMarshaller : object {
    private static DescribeNatGatewaysRequestMarshaller _instance;
    public static DescribeNatGatewaysRequestMarshaller Instance { get; }
    private static DescribeNatGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNatGatewaysRequest publicRequest);
    internal static DescribeNatGatewaysRequestMarshaller GetInstance();
    public static DescribeNatGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNatGatewaysResponseUnmarshaller _instance;
    public static DescribeNatGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeNatGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNatGatewaysResponseUnmarshaller GetInstance();
    public static DescribeNatGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsRequestMarshaller : object {
    private static DescribeNetworkAclsRequestMarshaller _instance;
    public static DescribeNetworkAclsRequestMarshaller Instance { get; }
    private static DescribeNetworkAclsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkAclsRequest publicRequest);
    internal static DescribeNetworkAclsRequestMarshaller GetInstance();
    public static DescribeNetworkAclsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkAclsResponseUnmarshaller _instance;
    public static DescribeNetworkAclsResponseUnmarshaller Instance { get; }
    private static DescribeNetworkAclsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkAclsResponseUnmarshaller GetInstance();
    public static DescribeNetworkAclsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsAccessScopeAnalysesRequestMarshaller : object {
    private static DescribeNetworkInsightsAccessScopeAnalysesRequestMarshaller _instance;
    public static DescribeNetworkInsightsAccessScopeAnalysesRequestMarshaller Instance { get; }
    private static DescribeNetworkInsightsAccessScopeAnalysesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInsightsAccessScopeAnalysesRequest publicRequest);
    internal static DescribeNetworkInsightsAccessScopeAnalysesRequestMarshaller GetInstance();
    public static DescribeNetworkInsightsAccessScopeAnalysesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsAccessScopeAnalysesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInsightsAccessScopeAnalysesResponseUnmarshaller _instance;
    public static DescribeNetworkInsightsAccessScopeAnalysesResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInsightsAccessScopeAnalysesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInsightsAccessScopeAnalysesResponseUnmarshaller GetInstance();
    public static DescribeNetworkInsightsAccessScopeAnalysesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsAccessScopesRequestMarshaller : object {
    private static DescribeNetworkInsightsAccessScopesRequestMarshaller _instance;
    public static DescribeNetworkInsightsAccessScopesRequestMarshaller Instance { get; }
    private static DescribeNetworkInsightsAccessScopesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInsightsAccessScopesRequest publicRequest);
    internal static DescribeNetworkInsightsAccessScopesRequestMarshaller GetInstance();
    public static DescribeNetworkInsightsAccessScopesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsAccessScopesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInsightsAccessScopesResponseUnmarshaller _instance;
    public static DescribeNetworkInsightsAccessScopesResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInsightsAccessScopesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInsightsAccessScopesResponseUnmarshaller GetInstance();
    public static DescribeNetworkInsightsAccessScopesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsAnalysesRequestMarshaller : object {
    private static DescribeNetworkInsightsAnalysesRequestMarshaller _instance;
    public static DescribeNetworkInsightsAnalysesRequestMarshaller Instance { get; }
    private static DescribeNetworkInsightsAnalysesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInsightsAnalysesRequest publicRequest);
    internal static DescribeNetworkInsightsAnalysesRequestMarshaller GetInstance();
    public static DescribeNetworkInsightsAnalysesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsAnalysesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInsightsAnalysesResponseUnmarshaller _instance;
    public static DescribeNetworkInsightsAnalysesResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInsightsAnalysesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInsightsAnalysesResponseUnmarshaller GetInstance();
    public static DescribeNetworkInsightsAnalysesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsPathsRequestMarshaller : object {
    private static DescribeNetworkInsightsPathsRequestMarshaller _instance;
    public static DescribeNetworkInsightsPathsRequestMarshaller Instance { get; }
    private static DescribeNetworkInsightsPathsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInsightsPathsRequest publicRequest);
    internal static DescribeNetworkInsightsPathsRequestMarshaller GetInstance();
    public static DescribeNetworkInsightsPathsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInsightsPathsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInsightsPathsResponseUnmarshaller _instance;
    public static DescribeNetworkInsightsPathsResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInsightsPathsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInsightsPathsResponseUnmarshaller GetInstance();
    public static DescribeNetworkInsightsPathsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeRequestMarshaller : object {
    private static DescribeNetworkInterfaceAttributeRequestMarshaller _instance;
    public static DescribeNetworkInterfaceAttributeRequestMarshaller Instance { get; }
    private static DescribeNetworkInterfaceAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInterfaceAttributeRequest publicRequest);
    internal static DescribeNetworkInterfaceAttributeRequestMarshaller GetInstance();
    public static DescribeNetworkInterfaceAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInterfaceAttributeResponseUnmarshaller _instance;
    public static DescribeNetworkInterfaceAttributeResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInterfaceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInterfaceAttributeResponseUnmarshaller GetInstance();
    public static DescribeNetworkInterfaceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacePermissionsRequestMarshaller : object {
    private static DescribeNetworkInterfacePermissionsRequestMarshaller _instance;
    public static DescribeNetworkInterfacePermissionsRequestMarshaller Instance { get; }
    private static DescribeNetworkInterfacePermissionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInterfacePermissionsRequest publicRequest);
    internal static DescribeNetworkInterfacePermissionsRequestMarshaller GetInstance();
    public static DescribeNetworkInterfacePermissionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacePermissionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInterfacePermissionsResponseUnmarshaller _instance;
    public static DescribeNetworkInterfacePermissionsResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInterfacePermissionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInterfacePermissionsResponseUnmarshaller GetInstance();
    public static DescribeNetworkInterfacePermissionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesRequestMarshaller : object {
    private static DescribeNetworkInterfacesRequestMarshaller _instance;
    public static DescribeNetworkInterfacesRequestMarshaller Instance { get; }
    private static DescribeNetworkInterfacesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInterfacesRequest publicRequest);
    internal static DescribeNetworkInterfacesRequestMarshaller GetInstance();
    public static DescribeNetworkInterfacesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInterfacesResponseUnmarshaller _instance;
    public static DescribeNetworkInterfacesResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInterfacesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInterfacesResponseUnmarshaller GetInstance();
    public static DescribeNetworkInterfacesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsRequestMarshaller : object {
    private static DescribePlacementGroupsRequestMarshaller _instance;
    public static DescribePlacementGroupsRequestMarshaller Instance { get; }
    private static DescribePlacementGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePlacementGroupsRequest publicRequest);
    internal static DescribePlacementGroupsRequestMarshaller GetInstance();
    public static DescribePlacementGroupsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribePlacementGroupsResponseUnmarshaller _instance;
    public static DescribePlacementGroupsResponseUnmarshaller Instance { get; }
    private static DescribePlacementGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePlacementGroupsResponseUnmarshaller GetInstance();
    public static DescribePlacementGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsRequestMarshaller : object {
    private static DescribePrefixListsRequestMarshaller _instance;
    public static DescribePrefixListsRequestMarshaller Instance { get; }
    private static DescribePrefixListsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePrefixListsRequest publicRequest);
    internal static DescribePrefixListsRequestMarshaller GetInstance();
    public static DescribePrefixListsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribePrefixListsResponseUnmarshaller _instance;
    public static DescribePrefixListsResponseUnmarshaller Instance { get; }
    private static DescribePrefixListsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePrefixListsResponseUnmarshaller GetInstance();
    public static DescribePrefixListsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrincipalIdFormatRequestMarshaller : object {
    private static DescribePrincipalIdFormatRequestMarshaller _instance;
    public static DescribePrincipalIdFormatRequestMarshaller Instance { get; }
    private static DescribePrincipalIdFormatRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePrincipalIdFormatRequest publicRequest);
    internal static DescribePrincipalIdFormatRequestMarshaller GetInstance();
    public static DescribePrincipalIdFormatRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrincipalIdFormatResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribePrincipalIdFormatResponseUnmarshaller _instance;
    public static DescribePrincipalIdFormatResponseUnmarshaller Instance { get; }
    private static DescribePrincipalIdFormatResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePrincipalIdFormatResponseUnmarshaller GetInstance();
    public static DescribePrincipalIdFormatResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePublicIpv4PoolsRequestMarshaller : object {
    private static DescribePublicIpv4PoolsRequestMarshaller _instance;
    public static DescribePublicIpv4PoolsRequestMarshaller Instance { get; }
    private static DescribePublicIpv4PoolsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePublicIpv4PoolsRequest publicRequest);
    internal static DescribePublicIpv4PoolsRequestMarshaller GetInstance();
    public static DescribePublicIpv4PoolsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePublicIpv4PoolsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribePublicIpv4PoolsResponseUnmarshaller _instance;
    public static DescribePublicIpv4PoolsResponseUnmarshaller Instance { get; }
    private static DescribePublicIpv4PoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePublicIpv4PoolsResponseUnmarshaller GetInstance();
    public static DescribePublicIpv4PoolsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsRequestMarshaller : object {
    private static DescribeRegionsRequestMarshaller _instance;
    public static DescribeRegionsRequestMarshaller Instance { get; }
    private static DescribeRegionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRegionsRequest publicRequest);
    internal static DescribeRegionsRequestMarshaller GetInstance();
    public static DescribeRegionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeRegionsResponseUnmarshaller _instance;
    public static DescribeRegionsResponseUnmarshaller Instance { get; }
    private static DescribeRegionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRegionsResponseUnmarshaller GetInstance();
    public static DescribeRegionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReplaceRootVolumeTasksRequestMarshaller : object {
    private static DescribeReplaceRootVolumeTasksRequestMarshaller _instance;
    public static DescribeReplaceRootVolumeTasksRequestMarshaller Instance { get; }
    private static DescribeReplaceRootVolumeTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplaceRootVolumeTasksRequest publicRequest);
    internal static DescribeReplaceRootVolumeTasksRequestMarshaller GetInstance();
    public static DescribeReplaceRootVolumeTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReplaceRootVolumeTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReplaceRootVolumeTasksResponseUnmarshaller _instance;
    public static DescribeReplaceRootVolumeTasksResponseUnmarshaller Instance { get; }
    private static DescribeReplaceRootVolumeTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplaceRootVolumeTasksResponseUnmarshaller GetInstance();
    public static DescribeReplaceRootVolumeTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsRequestMarshaller : object {
    private static DescribeReservedInstancesListingsRequestMarshaller _instance;
    public static DescribeReservedInstancesListingsRequestMarshaller Instance { get; }
    private static DescribeReservedInstancesListingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesListingsRequest publicRequest);
    internal static DescribeReservedInstancesListingsRequestMarshaller GetInstance();
    public static DescribeReservedInstancesListingsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesListingsResponseUnmarshaller _instance;
    public static DescribeReservedInstancesListingsResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesListingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesListingsResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesListingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsRequestMarshaller : object {
    private static DescribeReservedInstancesModificationsRequestMarshaller _instance;
    public static DescribeReservedInstancesModificationsRequestMarshaller Instance { get; }
    private static DescribeReservedInstancesModificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesModificationsRequest publicRequest);
    internal static DescribeReservedInstancesModificationsRequestMarshaller GetInstance();
    public static DescribeReservedInstancesModificationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesModificationsResponseUnmarshaller _instance;
    public static DescribeReservedInstancesModificationsResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesModificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesModificationsResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesModificationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsRequestMarshaller : object {
    private static DescribeReservedInstancesOfferingsRequestMarshaller _instance;
    public static DescribeReservedInstancesOfferingsRequestMarshaller Instance { get; }
    private static DescribeReservedInstancesOfferingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesOfferingsRequest publicRequest);
    internal static DescribeReservedInstancesOfferingsRequestMarshaller GetInstance();
    public static DescribeReservedInstancesOfferingsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesOfferingsResponseUnmarshaller _instance;
    public static DescribeReservedInstancesOfferingsResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesOfferingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesOfferingsResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesOfferingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesRequestMarshaller : object {
    private static DescribeReservedInstancesRequestMarshaller _instance;
    public static DescribeReservedInstancesRequestMarshaller Instance { get; }
    private static DescribeReservedInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesRequest publicRequest);
    internal static DescribeReservedInstancesRequestMarshaller GetInstance();
    public static DescribeReservedInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesResponseUnmarshaller _instance;
    public static DescribeReservedInstancesResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesRequestMarshaller : object {
    private static DescribeRouteTablesRequestMarshaller _instance;
    public static DescribeRouteTablesRequestMarshaller Instance { get; }
    private static DescribeRouteTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRouteTablesRequest publicRequest);
    internal static DescribeRouteTablesRequestMarshaller GetInstance();
    public static DescribeRouteTablesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeRouteTablesResponseUnmarshaller _instance;
    public static DescribeRouteTablesResponseUnmarshaller Instance { get; }
    private static DescribeRouteTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRouteTablesResponseUnmarshaller GetInstance();
    public static DescribeRouteTablesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityRequestMarshaller : object {
    private static DescribeScheduledInstanceAvailabilityRequestMarshaller _instance;
    public static DescribeScheduledInstanceAvailabilityRequestMarshaller Instance { get; }
    private static DescribeScheduledInstanceAvailabilityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeScheduledInstanceAvailabilityRequest publicRequest);
    internal static DescribeScheduledInstanceAvailabilityRequestMarshaller GetInstance();
    public static DescribeScheduledInstanceAvailabilityRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeScheduledInstanceAvailabilityResponseUnmarshaller _instance;
    public static DescribeScheduledInstanceAvailabilityResponseUnmarshaller Instance { get; }
    private static DescribeScheduledInstanceAvailabilityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeScheduledInstanceAvailabilityResponseUnmarshaller GetInstance();
    public static DescribeScheduledInstanceAvailabilityResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesRequestMarshaller : object {
    private static DescribeScheduledInstancesRequestMarshaller _instance;
    public static DescribeScheduledInstancesRequestMarshaller Instance { get; }
    private static DescribeScheduledInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeScheduledInstancesRequest publicRequest);
    internal static DescribeScheduledInstancesRequestMarshaller GetInstance();
    public static DescribeScheduledInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeScheduledInstancesResponseUnmarshaller _instance;
    public static DescribeScheduledInstancesResponseUnmarshaller Instance { get; }
    private static DescribeScheduledInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeScheduledInstancesResponseUnmarshaller GetInstance();
    public static DescribeScheduledInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesRequestMarshaller : object {
    private static DescribeSecurityGroupReferencesRequestMarshaller _instance;
    public static DescribeSecurityGroupReferencesRequestMarshaller Instance { get; }
    private static DescribeSecurityGroupReferencesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSecurityGroupReferencesRequest publicRequest);
    internal static DescribeSecurityGroupReferencesRequestMarshaller GetInstance();
    public static DescribeSecurityGroupReferencesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSecurityGroupReferencesResponseUnmarshaller _instance;
    public static DescribeSecurityGroupReferencesResponseUnmarshaller Instance { get; }
    private static DescribeSecurityGroupReferencesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSecurityGroupReferencesResponseUnmarshaller GetInstance();
    public static DescribeSecurityGroupReferencesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupRulesRequestMarshaller : object {
    private static DescribeSecurityGroupRulesRequestMarshaller _instance;
    public static DescribeSecurityGroupRulesRequestMarshaller Instance { get; }
    private static DescribeSecurityGroupRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSecurityGroupRulesRequest publicRequest);
    internal static DescribeSecurityGroupRulesRequestMarshaller GetInstance();
    public static DescribeSecurityGroupRulesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupRulesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSecurityGroupRulesResponseUnmarshaller _instance;
    public static DescribeSecurityGroupRulesResponseUnmarshaller Instance { get; }
    private static DescribeSecurityGroupRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSecurityGroupRulesResponseUnmarshaller GetInstance();
    public static DescribeSecurityGroupRulesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsRequestMarshaller : object {
    private static DescribeSecurityGroupsRequestMarshaller _instance;
    public static DescribeSecurityGroupsRequestMarshaller Instance { get; }
    private static DescribeSecurityGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSecurityGroupsRequest publicRequest);
    internal static DescribeSecurityGroupsRequestMarshaller GetInstance();
    public static DescribeSecurityGroupsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSecurityGroupsResponseUnmarshaller _instance;
    public static DescribeSecurityGroupsResponseUnmarshaller Instance { get; }
    private static DescribeSecurityGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSecurityGroupsResponseUnmarshaller GetInstance();
    public static DescribeSecurityGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeRequestMarshaller : object {
    private static DescribeSnapshotAttributeRequestMarshaller _instance;
    public static DescribeSnapshotAttributeRequestMarshaller Instance { get; }
    private static DescribeSnapshotAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSnapshotAttributeRequest publicRequest);
    internal static DescribeSnapshotAttributeRequestMarshaller GetInstance();
    public static DescribeSnapshotAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSnapshotAttributeResponseUnmarshaller _instance;
    public static DescribeSnapshotAttributeResponseUnmarshaller Instance { get; }
    private static DescribeSnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSnapshotAttributeResponseUnmarshaller GetInstance();
    public static DescribeSnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller : object {
    private static DescribeSnapshotsRequestMarshaller _instance;
    public static DescribeSnapshotsRequestMarshaller Instance { get; }
    private static DescribeSnapshotsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSnapshotsRequest publicRequest);
    internal static DescribeSnapshotsRequestMarshaller GetInstance();
    public static DescribeSnapshotsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSnapshotsResponseUnmarshaller _instance;
    public static DescribeSnapshotsResponseUnmarshaller Instance { get; }
    private static DescribeSnapshotsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSnapshotsResponseUnmarshaller GetInstance();
    public static DescribeSnapshotsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotTierStatusRequestMarshaller : object {
    private static DescribeSnapshotTierStatusRequestMarshaller _instance;
    public static DescribeSnapshotTierStatusRequestMarshaller Instance { get; }
    private static DescribeSnapshotTierStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSnapshotTierStatusRequest publicRequest);
    internal static DescribeSnapshotTierStatusRequestMarshaller GetInstance();
    public static DescribeSnapshotTierStatusRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotTierStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSnapshotTierStatusResponseUnmarshaller _instance;
    public static DescribeSnapshotTierStatusResponseUnmarshaller Instance { get; }
    private static DescribeSnapshotTierStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSnapshotTierStatusResponseUnmarshaller GetInstance();
    public static DescribeSnapshotTierStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionRequestMarshaller : object {
    private static DescribeSpotDatafeedSubscriptionRequestMarshaller _instance;
    public static DescribeSpotDatafeedSubscriptionRequestMarshaller Instance { get; }
    private static DescribeSpotDatafeedSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotDatafeedSubscriptionRequest publicRequest);
    internal static DescribeSpotDatafeedSubscriptionRequestMarshaller GetInstance();
    public static DescribeSpotDatafeedSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotDatafeedSubscriptionResponseUnmarshaller _instance;
    public static DescribeSpotDatafeedSubscriptionResponseUnmarshaller Instance { get; }
    private static DescribeSpotDatafeedSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotDatafeedSubscriptionResponseUnmarshaller GetInstance();
    public static DescribeSpotDatafeedSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesRequestMarshaller : object {
    private static DescribeSpotFleetInstancesRequestMarshaller _instance;
    public static DescribeSpotFleetInstancesRequestMarshaller Instance { get; }
    private static DescribeSpotFleetInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotFleetInstancesRequest publicRequest);
    internal static DescribeSpotFleetInstancesRequestMarshaller GetInstance();
    public static DescribeSpotFleetInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotFleetInstancesResponseUnmarshaller _instance;
    public static DescribeSpotFleetInstancesResponseUnmarshaller Instance { get; }
    private static DescribeSpotFleetInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotFleetInstancesResponseUnmarshaller GetInstance();
    public static DescribeSpotFleetInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryRequestMarshaller : object {
    private static DescribeSpotFleetRequestHistoryRequestMarshaller _instance;
    public static DescribeSpotFleetRequestHistoryRequestMarshaller Instance { get; }
    private static DescribeSpotFleetRequestHistoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotFleetRequestHistoryRequest publicRequest);
    internal static DescribeSpotFleetRequestHistoryRequestMarshaller GetInstance();
    public static DescribeSpotFleetRequestHistoryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotFleetRequestHistoryResponseUnmarshaller _instance;
    public static DescribeSpotFleetRequestHistoryResponseUnmarshaller Instance { get; }
    private static DescribeSpotFleetRequestHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotFleetRequestHistoryResponseUnmarshaller GetInstance();
    public static DescribeSpotFleetRequestHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsRequestMarshaller : object {
    private static DescribeSpotFleetRequestsRequestMarshaller _instance;
    public static DescribeSpotFleetRequestsRequestMarshaller Instance { get; }
    private static DescribeSpotFleetRequestsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotFleetRequestsRequest publicRequest);
    internal static DescribeSpotFleetRequestsRequestMarshaller GetInstance();
    public static DescribeSpotFleetRequestsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotFleetRequestsResponseUnmarshaller _instance;
    public static DescribeSpotFleetRequestsResponseUnmarshaller Instance { get; }
    private static DescribeSpotFleetRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotFleetRequestsResponseUnmarshaller GetInstance();
    public static DescribeSpotFleetRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsRequestMarshaller : object {
    private static DescribeSpotInstanceRequestsRequestMarshaller _instance;
    public static DescribeSpotInstanceRequestsRequestMarshaller Instance { get; }
    private static DescribeSpotInstanceRequestsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotInstanceRequestsRequest publicRequest);
    internal static DescribeSpotInstanceRequestsRequestMarshaller GetInstance();
    public static DescribeSpotInstanceRequestsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotInstanceRequestsResponseUnmarshaller _instance;
    public static DescribeSpotInstanceRequestsResponseUnmarshaller Instance { get; }
    private static DescribeSpotInstanceRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotInstanceRequestsResponseUnmarshaller GetInstance();
    public static DescribeSpotInstanceRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryRequestMarshaller : object {
    private static DescribeSpotPriceHistoryRequestMarshaller _instance;
    public static DescribeSpotPriceHistoryRequestMarshaller Instance { get; }
    private static DescribeSpotPriceHistoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotPriceHistoryRequest publicRequest);
    internal static DescribeSpotPriceHistoryRequestMarshaller GetInstance();
    public static DescribeSpotPriceHistoryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotPriceHistoryResponseUnmarshaller _instance;
    public static DescribeSpotPriceHistoryResponseUnmarshaller Instance { get; }
    private static DescribeSpotPriceHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotPriceHistoryResponseUnmarshaller GetInstance();
    public static DescribeSpotPriceHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsRequestMarshaller : object {
    private static DescribeStaleSecurityGroupsRequestMarshaller _instance;
    public static DescribeStaleSecurityGroupsRequestMarshaller Instance { get; }
    private static DescribeStaleSecurityGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStaleSecurityGroupsRequest publicRequest);
    internal static DescribeStaleSecurityGroupsRequestMarshaller GetInstance();
    public static DescribeStaleSecurityGroupsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeStaleSecurityGroupsResponseUnmarshaller _instance;
    public static DescribeStaleSecurityGroupsResponseUnmarshaller Instance { get; }
    private static DescribeStaleSecurityGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStaleSecurityGroupsResponseUnmarshaller GetInstance();
    public static DescribeStaleSecurityGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStoreImageTasksRequestMarshaller : object {
    private static DescribeStoreImageTasksRequestMarshaller _instance;
    public static DescribeStoreImageTasksRequestMarshaller Instance { get; }
    private static DescribeStoreImageTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStoreImageTasksRequest publicRequest);
    internal static DescribeStoreImageTasksRequestMarshaller GetInstance();
    public static DescribeStoreImageTasksRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStoreImageTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeStoreImageTasksResponseUnmarshaller _instance;
    public static DescribeStoreImageTasksResponseUnmarshaller Instance { get; }
    private static DescribeStoreImageTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStoreImageTasksResponseUnmarshaller GetInstance();
    public static DescribeStoreImageTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsRequestMarshaller : object {
    private static DescribeSubnetsRequestMarshaller _instance;
    public static DescribeSubnetsRequestMarshaller Instance { get; }
    private static DescribeSubnetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSubnetsRequest publicRequest);
    internal static DescribeSubnetsRequestMarshaller GetInstance();
    public static DescribeSubnetsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSubnetsResponseUnmarshaller _instance;
    public static DescribeSubnetsResponseUnmarshaller Instance { get; }
    private static DescribeSubnetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSubnetsResponseUnmarshaller GetInstance();
    public static DescribeSubnetsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller : object {
    private static DescribeTagsRequestMarshaller _instance;
    public static DescribeTagsRequestMarshaller Instance { get; }
    private static DescribeTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTagsRequest publicRequest);
    internal static DescribeTagsRequestMarshaller GetInstance();
    public static DescribeTagsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTagsResponseUnmarshaller _instance;
    public static DescribeTagsResponseUnmarshaller Instance { get; }
    private static DescribeTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTagsResponseUnmarshaller GetInstance();
    public static DescribeTagsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorFilterRulesRequestMarshaller : object {
    private static DescribeTrafficMirrorFilterRulesRequestMarshaller _instance;
    public static DescribeTrafficMirrorFilterRulesRequestMarshaller Instance { get; }
    private static DescribeTrafficMirrorFilterRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrafficMirrorFilterRulesRequest publicRequest);
    internal static DescribeTrafficMirrorFilterRulesRequestMarshaller GetInstance();
    public static DescribeTrafficMirrorFilterRulesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorFilterRulesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTrafficMirrorFilterRulesResponseUnmarshaller _instance;
    public static DescribeTrafficMirrorFilterRulesResponseUnmarshaller Instance { get; }
    private static DescribeTrafficMirrorFilterRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrafficMirrorFilterRulesResponseUnmarshaller GetInstance();
    public static DescribeTrafficMirrorFilterRulesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorFiltersRequestMarshaller : object {
    private static DescribeTrafficMirrorFiltersRequestMarshaller _instance;
    public static DescribeTrafficMirrorFiltersRequestMarshaller Instance { get; }
    private static DescribeTrafficMirrorFiltersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrafficMirrorFiltersRequest publicRequest);
    internal static DescribeTrafficMirrorFiltersRequestMarshaller GetInstance();
    public static DescribeTrafficMirrorFiltersRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorFiltersResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTrafficMirrorFiltersResponseUnmarshaller _instance;
    public static DescribeTrafficMirrorFiltersResponseUnmarshaller Instance { get; }
    private static DescribeTrafficMirrorFiltersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrafficMirrorFiltersResponseUnmarshaller GetInstance();
    public static DescribeTrafficMirrorFiltersResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorSessionsRequestMarshaller : object {
    private static DescribeTrafficMirrorSessionsRequestMarshaller _instance;
    public static DescribeTrafficMirrorSessionsRequestMarshaller Instance { get; }
    private static DescribeTrafficMirrorSessionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrafficMirrorSessionsRequest publicRequest);
    internal static DescribeTrafficMirrorSessionsRequestMarshaller GetInstance();
    public static DescribeTrafficMirrorSessionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorSessionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTrafficMirrorSessionsResponseUnmarshaller _instance;
    public static DescribeTrafficMirrorSessionsResponseUnmarshaller Instance { get; }
    private static DescribeTrafficMirrorSessionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrafficMirrorSessionsResponseUnmarshaller GetInstance();
    public static DescribeTrafficMirrorSessionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorTargetsRequestMarshaller : object {
    private static DescribeTrafficMirrorTargetsRequestMarshaller _instance;
    public static DescribeTrafficMirrorTargetsRequestMarshaller Instance { get; }
    private static DescribeTrafficMirrorTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrafficMirrorTargetsRequest publicRequest);
    internal static DescribeTrafficMirrorTargetsRequestMarshaller GetInstance();
    public static DescribeTrafficMirrorTargetsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrafficMirrorTargetsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTrafficMirrorTargetsResponseUnmarshaller _instance;
    public static DescribeTrafficMirrorTargetsResponseUnmarshaller Instance { get; }
    private static DescribeTrafficMirrorTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrafficMirrorTargetsResponseUnmarshaller GetInstance();
    public static DescribeTrafficMirrorTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayAttachmentsRequestMarshaller : object {
    private static DescribeTransitGatewayAttachmentsRequestMarshaller _instance;
    public static DescribeTransitGatewayAttachmentsRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayAttachmentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayAttachmentsRequest publicRequest);
    internal static DescribeTransitGatewayAttachmentsRequestMarshaller GetInstance();
    public static DescribeTransitGatewayAttachmentsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayAttachmentsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayAttachmentsResponseUnmarshaller _instance;
    public static DescribeTransitGatewayAttachmentsResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayAttachmentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayAttachmentsResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayAttachmentsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayConnectPeersRequestMarshaller : object {
    private static DescribeTransitGatewayConnectPeersRequestMarshaller _instance;
    public static DescribeTransitGatewayConnectPeersRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayConnectPeersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayConnectPeersRequest publicRequest);
    internal static DescribeTransitGatewayConnectPeersRequestMarshaller GetInstance();
    public static DescribeTransitGatewayConnectPeersRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayConnectPeersResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayConnectPeersResponseUnmarshaller _instance;
    public static DescribeTransitGatewayConnectPeersResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayConnectPeersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayConnectPeersResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayConnectPeersResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayConnectsRequestMarshaller : object {
    private static DescribeTransitGatewayConnectsRequestMarshaller _instance;
    public static DescribeTransitGatewayConnectsRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayConnectsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayConnectsRequest publicRequest);
    internal static DescribeTransitGatewayConnectsRequestMarshaller GetInstance();
    public static DescribeTransitGatewayConnectsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayConnectsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayConnectsResponseUnmarshaller _instance;
    public static DescribeTransitGatewayConnectsResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayConnectsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayConnectsResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayConnectsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayMulticastDomainsRequestMarshaller : object {
    private static DescribeTransitGatewayMulticastDomainsRequestMarshaller _instance;
    public static DescribeTransitGatewayMulticastDomainsRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayMulticastDomainsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayMulticastDomainsRequest publicRequest);
    internal static DescribeTransitGatewayMulticastDomainsRequestMarshaller GetInstance();
    public static DescribeTransitGatewayMulticastDomainsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayMulticastDomainsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayMulticastDomainsResponseUnmarshaller _instance;
    public static DescribeTransitGatewayMulticastDomainsResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayMulticastDomainsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayMulticastDomainsResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayMulticastDomainsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayPeeringAttachmentsRequestMarshaller : object {
    private static DescribeTransitGatewayPeeringAttachmentsRequestMarshaller _instance;
    public static DescribeTransitGatewayPeeringAttachmentsRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayPeeringAttachmentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayPeeringAttachmentsRequest publicRequest);
    internal static DescribeTransitGatewayPeeringAttachmentsRequestMarshaller GetInstance();
    public static DescribeTransitGatewayPeeringAttachmentsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayPeeringAttachmentsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayPeeringAttachmentsResponseUnmarshaller _instance;
    public static DescribeTransitGatewayPeeringAttachmentsResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayPeeringAttachmentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayPeeringAttachmentsResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayPeeringAttachmentsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayPolicyTablesRequestMarshaller : object {
    private static DescribeTransitGatewayPolicyTablesRequestMarshaller _instance;
    public static DescribeTransitGatewayPolicyTablesRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayPolicyTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayPolicyTablesRequest publicRequest);
    internal static DescribeTransitGatewayPolicyTablesRequestMarshaller GetInstance();
    public static DescribeTransitGatewayPolicyTablesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayPolicyTablesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayPolicyTablesResponseUnmarshaller _instance;
    public static DescribeTransitGatewayPolicyTablesResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayPolicyTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayPolicyTablesResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayPolicyTablesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayRouteTableAnnouncementsRequestMarshaller : object {
    private static DescribeTransitGatewayRouteTableAnnouncementsRequestMarshaller _instance;
    public static DescribeTransitGatewayRouteTableAnnouncementsRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayRouteTableAnnouncementsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayRouteTableAnnouncementsRequest publicRequest);
    internal static DescribeTransitGatewayRouteTableAnnouncementsRequestMarshaller GetInstance();
    public static DescribeTransitGatewayRouteTableAnnouncementsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayRouteTableAnnouncementsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayRouteTableAnnouncementsResponseUnmarshaller _instance;
    public static DescribeTransitGatewayRouteTableAnnouncementsResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayRouteTableAnnouncementsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayRouteTableAnnouncementsResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayRouteTableAnnouncementsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayRouteTablesRequestMarshaller : object {
    private static DescribeTransitGatewayRouteTablesRequestMarshaller _instance;
    public static DescribeTransitGatewayRouteTablesRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayRouteTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayRouteTablesRequest publicRequest);
    internal static DescribeTransitGatewayRouteTablesRequestMarshaller GetInstance();
    public static DescribeTransitGatewayRouteTablesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayRouteTablesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayRouteTablesResponseUnmarshaller _instance;
    public static DescribeTransitGatewayRouteTablesResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayRouteTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayRouteTablesResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayRouteTablesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewaysRequestMarshaller : object {
    private static DescribeTransitGatewaysRequestMarshaller _instance;
    public static DescribeTransitGatewaysRequestMarshaller Instance { get; }
    private static DescribeTransitGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewaysRequest publicRequest);
    internal static DescribeTransitGatewaysRequestMarshaller GetInstance();
    public static DescribeTransitGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewaysResponseUnmarshaller _instance;
    public static DescribeTransitGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewaysResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayVpcAttachmentsRequestMarshaller : object {
    private static DescribeTransitGatewayVpcAttachmentsRequestMarshaller _instance;
    public static DescribeTransitGatewayVpcAttachmentsRequestMarshaller Instance { get; }
    private static DescribeTransitGatewayVpcAttachmentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTransitGatewayVpcAttachmentsRequest publicRequest);
    internal static DescribeTransitGatewayVpcAttachmentsRequestMarshaller GetInstance();
    public static DescribeTransitGatewayVpcAttachmentsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller _instance;
    public static DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller Instance { get; }
    private static DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller GetInstance();
    public static DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrunkInterfaceAssociationsRequestMarshaller : object {
    private static DescribeTrunkInterfaceAssociationsRequestMarshaller _instance;
    public static DescribeTrunkInterfaceAssociationsRequestMarshaller Instance { get; }
    private static DescribeTrunkInterfaceAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrunkInterfaceAssociationsRequest publicRequest);
    internal static DescribeTrunkInterfaceAssociationsRequestMarshaller GetInstance();
    public static DescribeTrunkInterfaceAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTrunkInterfaceAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTrunkInterfaceAssociationsResponseUnmarshaller _instance;
    public static DescribeTrunkInterfaceAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeTrunkInterfaceAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrunkInterfaceAssociationsResponseUnmarshaller GetInstance();
    public static DescribeTrunkInterfaceAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessEndpointsRequestMarshaller : object {
    private static DescribeVerifiedAccessEndpointsRequestMarshaller _instance;
    public static DescribeVerifiedAccessEndpointsRequestMarshaller Instance { get; }
    private static DescribeVerifiedAccessEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVerifiedAccessEndpointsRequest publicRequest);
    internal static DescribeVerifiedAccessEndpointsRequestMarshaller GetInstance();
    public static DescribeVerifiedAccessEndpointsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessEndpointsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVerifiedAccessEndpointsResponseUnmarshaller _instance;
    public static DescribeVerifiedAccessEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeVerifiedAccessEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVerifiedAccessEndpointsResponseUnmarshaller GetInstance();
    public static DescribeVerifiedAccessEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessGroupsRequestMarshaller : object {
    private static DescribeVerifiedAccessGroupsRequestMarshaller _instance;
    public static DescribeVerifiedAccessGroupsRequestMarshaller Instance { get; }
    private static DescribeVerifiedAccessGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVerifiedAccessGroupsRequest publicRequest);
    internal static DescribeVerifiedAccessGroupsRequestMarshaller GetInstance();
    public static DescribeVerifiedAccessGroupsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVerifiedAccessGroupsResponseUnmarshaller _instance;
    public static DescribeVerifiedAccessGroupsResponseUnmarshaller Instance { get; }
    private static DescribeVerifiedAccessGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVerifiedAccessGroupsResponseUnmarshaller GetInstance();
    public static DescribeVerifiedAccessGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessInstanceLoggingConfigurationsRequestMarshaller : object {
    private static DescribeVerifiedAccessInstanceLoggingConfigurationsRequestMarshaller _instance;
    public static DescribeVerifiedAccessInstanceLoggingConfigurationsRequestMarshaller Instance { get; }
    private static DescribeVerifiedAccessInstanceLoggingConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVerifiedAccessInstanceLoggingConfigurationsRequest publicRequest);
    internal static DescribeVerifiedAccessInstanceLoggingConfigurationsRequestMarshaller GetInstance();
    public static DescribeVerifiedAccessInstanceLoggingConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessInstanceLoggingConfigurationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVerifiedAccessInstanceLoggingConfigurationsResponseUnmarshaller _instance;
    public static DescribeVerifiedAccessInstanceLoggingConfigurationsResponseUnmarshaller Instance { get; }
    private static DescribeVerifiedAccessInstanceLoggingConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVerifiedAccessInstanceLoggingConfigurationsResponseUnmarshaller GetInstance();
    public static DescribeVerifiedAccessInstanceLoggingConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessInstancesRequestMarshaller : object {
    private static DescribeVerifiedAccessInstancesRequestMarshaller _instance;
    public static DescribeVerifiedAccessInstancesRequestMarshaller Instance { get; }
    private static DescribeVerifiedAccessInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVerifiedAccessInstancesRequest publicRequest);
    internal static DescribeVerifiedAccessInstancesRequestMarshaller GetInstance();
    public static DescribeVerifiedAccessInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVerifiedAccessInstancesResponseUnmarshaller _instance;
    public static DescribeVerifiedAccessInstancesResponseUnmarshaller Instance { get; }
    private static DescribeVerifiedAccessInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVerifiedAccessInstancesResponseUnmarshaller GetInstance();
    public static DescribeVerifiedAccessInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessTrustProvidersRequestMarshaller : object {
    private static DescribeVerifiedAccessTrustProvidersRequestMarshaller _instance;
    public static DescribeVerifiedAccessTrustProvidersRequestMarshaller Instance { get; }
    private static DescribeVerifiedAccessTrustProvidersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVerifiedAccessTrustProvidersRequest publicRequest);
    internal static DescribeVerifiedAccessTrustProvidersRequestMarshaller GetInstance();
    public static DescribeVerifiedAccessTrustProvidersRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVerifiedAccessTrustProvidersResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVerifiedAccessTrustProvidersResponseUnmarshaller _instance;
    public static DescribeVerifiedAccessTrustProvidersResponseUnmarshaller Instance { get; }
    private static DescribeVerifiedAccessTrustProvidersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVerifiedAccessTrustProvidersResponseUnmarshaller GetInstance();
    public static DescribeVerifiedAccessTrustProvidersResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeRequestMarshaller : object {
    private static DescribeVolumeAttributeRequestMarshaller _instance;
    public static DescribeVolumeAttributeRequestMarshaller Instance { get; }
    private static DescribeVolumeAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVolumeAttributeRequest publicRequest);
    internal static DescribeVolumeAttributeRequestMarshaller GetInstance();
    public static DescribeVolumeAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVolumeAttributeResponseUnmarshaller _instance;
    public static DescribeVolumeAttributeResponseUnmarshaller Instance { get; }
    private static DescribeVolumeAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVolumeAttributeResponseUnmarshaller GetInstance();
    public static DescribeVolumeAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesModificationsRequestMarshaller : object {
    private static DescribeVolumesModificationsRequestMarshaller _instance;
    public static DescribeVolumesModificationsRequestMarshaller Instance { get; }
    private static DescribeVolumesModificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVolumesModificationsRequest publicRequest);
    internal static DescribeVolumesModificationsRequestMarshaller GetInstance();
    public static DescribeVolumesModificationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesModificationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVolumesModificationsResponseUnmarshaller _instance;
    public static DescribeVolumesModificationsResponseUnmarshaller Instance { get; }
    private static DescribeVolumesModificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVolumesModificationsResponseUnmarshaller GetInstance();
    public static DescribeVolumesModificationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesRequestMarshaller : object {
    private static DescribeVolumesRequestMarshaller _instance;
    public static DescribeVolumesRequestMarshaller Instance { get; }
    private static DescribeVolumesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVolumesRequest publicRequest);
    internal static DescribeVolumesRequestMarshaller GetInstance();
    public static DescribeVolumesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVolumesResponseUnmarshaller _instance;
    public static DescribeVolumesResponseUnmarshaller Instance { get; }
    private static DescribeVolumesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVolumesResponseUnmarshaller GetInstance();
    public static DescribeVolumesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusRequestMarshaller : object {
    private static DescribeVolumeStatusRequestMarshaller _instance;
    public static DescribeVolumeStatusRequestMarshaller Instance { get; }
    private static DescribeVolumeStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVolumeStatusRequest publicRequest);
    internal static DescribeVolumeStatusRequestMarshaller GetInstance();
    public static DescribeVolumeStatusRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVolumeStatusResponseUnmarshaller _instance;
    public static DescribeVolumeStatusResponseUnmarshaller Instance { get; }
    private static DescribeVolumeStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVolumeStatusResponseUnmarshaller GetInstance();
    public static DescribeVolumeStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeRequestMarshaller : object {
    private static DescribeVpcAttributeRequestMarshaller _instance;
    public static DescribeVpcAttributeRequestMarshaller Instance { get; }
    private static DescribeVpcAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcAttributeRequest publicRequest);
    internal static DescribeVpcAttributeRequestMarshaller GetInstance();
    public static DescribeVpcAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcAttributeResponseUnmarshaller _instance;
    public static DescribeVpcAttributeResponseUnmarshaller Instance { get; }
    private static DescribeVpcAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcAttributeResponseUnmarshaller GetInstance();
    public static DescribeVpcAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportRequestMarshaller : object {
    private static DescribeVpcClassicLinkDnsSupportRequestMarshaller _instance;
    public static DescribeVpcClassicLinkDnsSupportRequestMarshaller Instance { get; }
    private static DescribeVpcClassicLinkDnsSupportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcClassicLinkDnsSupportRequest publicRequest);
    internal static DescribeVpcClassicLinkDnsSupportRequestMarshaller GetInstance();
    public static DescribeVpcClassicLinkDnsSupportRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcClassicLinkDnsSupportResponseUnmarshaller _instance;
    public static DescribeVpcClassicLinkDnsSupportResponseUnmarshaller Instance { get; }
    private static DescribeVpcClassicLinkDnsSupportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcClassicLinkDnsSupportResponseUnmarshaller GetInstance();
    public static DescribeVpcClassicLinkDnsSupportResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkRequestMarshaller : object {
    private static DescribeVpcClassicLinkRequestMarshaller _instance;
    public static DescribeVpcClassicLinkRequestMarshaller Instance { get; }
    private static DescribeVpcClassicLinkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcClassicLinkRequest publicRequest);
    internal static DescribeVpcClassicLinkRequestMarshaller GetInstance();
    public static DescribeVpcClassicLinkRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcClassicLinkResponseUnmarshaller _instance;
    public static DescribeVpcClassicLinkResponseUnmarshaller Instance { get; }
    private static DescribeVpcClassicLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcClassicLinkResponseUnmarshaller GetInstance();
    public static DescribeVpcClassicLinkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointConnectionNotificationsRequestMarshaller : object {
    private static DescribeVpcEndpointConnectionNotificationsRequestMarshaller _instance;
    public static DescribeVpcEndpointConnectionNotificationsRequestMarshaller Instance { get; }
    private static DescribeVpcEndpointConnectionNotificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointConnectionNotificationsRequest publicRequest);
    internal static DescribeVpcEndpointConnectionNotificationsRequestMarshaller GetInstance();
    public static DescribeVpcEndpointConnectionNotificationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointConnectionNotificationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointConnectionNotificationsResponseUnmarshaller _instance;
    public static DescribeVpcEndpointConnectionNotificationsResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointConnectionNotificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointConnectionNotificationsResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointConnectionNotificationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointConnectionsRequestMarshaller : object {
    private static DescribeVpcEndpointConnectionsRequestMarshaller _instance;
    public static DescribeVpcEndpointConnectionsRequestMarshaller Instance { get; }
    private static DescribeVpcEndpointConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointConnectionsRequest publicRequest);
    internal static DescribeVpcEndpointConnectionsRequestMarshaller GetInstance();
    public static DescribeVpcEndpointConnectionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointConnectionsResponseUnmarshaller _instance;
    public static DescribeVpcEndpointConnectionsResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointConnectionsResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServiceConfigurationsRequestMarshaller : object {
    private static DescribeVpcEndpointServiceConfigurationsRequestMarshaller _instance;
    public static DescribeVpcEndpointServiceConfigurationsRequestMarshaller Instance { get; }
    private static DescribeVpcEndpointServiceConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointServiceConfigurationsRequest publicRequest);
    internal static DescribeVpcEndpointServiceConfigurationsRequestMarshaller GetInstance();
    public static DescribeVpcEndpointServiceConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServiceConfigurationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointServiceConfigurationsResponseUnmarshaller _instance;
    public static DescribeVpcEndpointServiceConfigurationsResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointServiceConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointServiceConfigurationsResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointServiceConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicePermissionsRequestMarshaller : object {
    private static DescribeVpcEndpointServicePermissionsRequestMarshaller _instance;
    public static DescribeVpcEndpointServicePermissionsRequestMarshaller Instance { get; }
    private static DescribeVpcEndpointServicePermissionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointServicePermissionsRequest publicRequest);
    internal static DescribeVpcEndpointServicePermissionsRequestMarshaller GetInstance();
    public static DescribeVpcEndpointServicePermissionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicePermissionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointServicePermissionsResponseUnmarshaller _instance;
    public static DescribeVpcEndpointServicePermissionsResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointServicePermissionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointServicePermissionsResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointServicePermissionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesRequestMarshaller : object {
    private static DescribeVpcEndpointServicesRequestMarshaller _instance;
    public static DescribeVpcEndpointServicesRequestMarshaller Instance { get; }
    private static DescribeVpcEndpointServicesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointServicesRequest publicRequest);
    internal static DescribeVpcEndpointServicesRequestMarshaller GetInstance();
    public static DescribeVpcEndpointServicesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointServicesResponseUnmarshaller _instance;
    public static DescribeVpcEndpointServicesResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointServicesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointServicesResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointServicesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsRequestMarshaller : object {
    private static DescribeVpcEndpointsRequestMarshaller _instance;
    public static DescribeVpcEndpointsRequestMarshaller Instance { get; }
    private static DescribeVpcEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointsRequest publicRequest);
    internal static DescribeVpcEndpointsRequestMarshaller GetInstance();
    public static DescribeVpcEndpointsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointsResponseUnmarshaller _instance;
    public static DescribeVpcEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointsResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsRequestMarshaller : object {
    private static DescribeVpcPeeringConnectionsRequestMarshaller _instance;
    public static DescribeVpcPeeringConnectionsRequestMarshaller Instance { get; }
    private static DescribeVpcPeeringConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcPeeringConnectionsRequest publicRequest);
    internal static DescribeVpcPeeringConnectionsRequestMarshaller GetInstance();
    public static DescribeVpcPeeringConnectionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcPeeringConnectionsResponseUnmarshaller _instance;
    public static DescribeVpcPeeringConnectionsResponseUnmarshaller Instance { get; }
    private static DescribeVpcPeeringConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcPeeringConnectionsResponseUnmarshaller GetInstance();
    public static DescribeVpcPeeringConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsRequestMarshaller : object {
    private static DescribeVpcsRequestMarshaller _instance;
    public static DescribeVpcsRequestMarshaller Instance { get; }
    private static DescribeVpcsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcsRequest publicRequest);
    internal static DescribeVpcsRequestMarshaller GetInstance();
    public static DescribeVpcsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcsResponseUnmarshaller _instance;
    public static DescribeVpcsResponseUnmarshaller Instance { get; }
    private static DescribeVpcsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcsResponseUnmarshaller GetInstance();
    public static DescribeVpcsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsRequestMarshaller : object {
    private static DescribeVpnConnectionsRequestMarshaller _instance;
    public static DescribeVpnConnectionsRequestMarshaller Instance { get; }
    private static DescribeVpnConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpnConnectionsRequest publicRequest);
    internal static DescribeVpnConnectionsRequestMarshaller GetInstance();
    public static DescribeVpnConnectionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpnConnectionsResponseUnmarshaller _instance;
    public static DescribeVpnConnectionsResponseUnmarshaller Instance { get; }
    private static DescribeVpnConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpnConnectionsResponseUnmarshaller GetInstance();
    public static DescribeVpnConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysRequestMarshaller : object {
    private static DescribeVpnGatewaysRequestMarshaller _instance;
    public static DescribeVpnGatewaysRequestMarshaller Instance { get; }
    private static DescribeVpnGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpnGatewaysRequest publicRequest);
    internal static DescribeVpnGatewaysRequestMarshaller GetInstance();
    public static DescribeVpnGatewaysRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpnGatewaysResponseUnmarshaller _instance;
    public static DescribeVpnGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeVpnGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpnGatewaysResponseUnmarshaller GetInstance();
    public static DescribeVpnGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DestinationOptionsResponseUnmarshaller : object {
    private static DestinationOptionsResponseUnmarshaller _instance;
    public static DestinationOptionsResponseUnmarshaller Instance { get; }
    private static DestinationOptionsResponseUnmarshaller();
    public sealed virtual DestinationOptionsResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DestinationOptionsResponse Unmarshall(JsonUnmarshallerContext context);
    public static DestinationOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcRequestMarshaller : object {
    private static DetachClassicLinkVpcRequestMarshaller _instance;
    public static DetachClassicLinkVpcRequestMarshaller Instance { get; }
    private static DetachClassicLinkVpcRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachClassicLinkVpcRequest publicRequest);
    internal static DetachClassicLinkVpcRequestMarshaller GetInstance();
    public static DetachClassicLinkVpcRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachClassicLinkVpcResponseUnmarshaller _instance;
    public static DetachClassicLinkVpcResponseUnmarshaller Instance { get; }
    private static DetachClassicLinkVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachClassicLinkVpcResponseUnmarshaller GetInstance();
    public static DetachClassicLinkVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayRequestMarshaller : object {
    private static DetachInternetGatewayRequestMarshaller _instance;
    public static DetachInternetGatewayRequestMarshaller Instance { get; }
    private static DetachInternetGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachInternetGatewayRequest publicRequest);
    internal static DetachInternetGatewayRequestMarshaller GetInstance();
    public static DetachInternetGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachInternetGatewayResponseUnmarshaller _instance;
    public static DetachInternetGatewayResponseUnmarshaller Instance { get; }
    private static DetachInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachInternetGatewayResponseUnmarshaller GetInstance();
    public static DetachInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceRequestMarshaller : object {
    private static DetachNetworkInterfaceRequestMarshaller _instance;
    public static DetachNetworkInterfaceRequestMarshaller Instance { get; }
    private static DetachNetworkInterfaceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachNetworkInterfaceRequest publicRequest);
    internal static DetachNetworkInterfaceRequestMarshaller GetInstance();
    public static DetachNetworkInterfaceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachNetworkInterfaceResponseUnmarshaller _instance;
    public static DetachNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static DetachNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachNetworkInterfaceResponseUnmarshaller GetInstance();
    public static DetachNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVerifiedAccessTrustProviderRequestMarshaller : object {
    private static DetachVerifiedAccessTrustProviderRequestMarshaller _instance;
    public static DetachVerifiedAccessTrustProviderRequestMarshaller Instance { get; }
    private static DetachVerifiedAccessTrustProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachVerifiedAccessTrustProviderRequest publicRequest);
    internal static DetachVerifiedAccessTrustProviderRequestMarshaller GetInstance();
    public static DetachVerifiedAccessTrustProviderRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVerifiedAccessTrustProviderResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachVerifiedAccessTrustProviderResponseUnmarshaller _instance;
    public static DetachVerifiedAccessTrustProviderResponseUnmarshaller Instance { get; }
    private static DetachVerifiedAccessTrustProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachVerifiedAccessTrustProviderResponseUnmarshaller GetInstance();
    public static DetachVerifiedAccessTrustProviderResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeRequestMarshaller : object {
    private static DetachVolumeRequestMarshaller _instance;
    public static DetachVolumeRequestMarshaller Instance { get; }
    private static DetachVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachVolumeRequest publicRequest);
    internal static DetachVolumeRequestMarshaller GetInstance();
    public static DetachVolumeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachVolumeResponseUnmarshaller _instance;
    public static DetachVolumeResponseUnmarshaller Instance { get; }
    private static DetachVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachVolumeResponseUnmarshaller GetInstance();
    public static DetachVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayRequestMarshaller : object {
    private static DetachVpnGatewayRequestMarshaller _instance;
    public static DetachVpnGatewayRequestMarshaller Instance { get; }
    private static DetachVpnGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachVpnGatewayRequest publicRequest);
    internal static DetachVpnGatewayRequestMarshaller GetInstance();
    public static DetachVpnGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachVpnGatewayResponseUnmarshaller _instance;
    public static DetachVpnGatewayResponseUnmarshaller Instance { get; }
    private static DetachVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachVpnGatewayResponseUnmarshaller GetInstance();
    public static DetachVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeviceOptionsUnmarshaller : object {
    private static DeviceOptionsUnmarshaller _instance;
    public static DeviceOptionsUnmarshaller Instance { get; }
    private static DeviceOptionsUnmarshaller();
    public sealed virtual DeviceOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeviceOptions Unmarshall(JsonUnmarshallerContext context);
    public static DeviceOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DhcpConfigurationUnmarshaller : object {
    private static DhcpConfigurationUnmarshaller _instance;
    public static DhcpConfigurationUnmarshaller Instance { get; }
    private static DhcpConfigurationUnmarshaller();
    public sealed virtual DhcpConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DhcpConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DhcpConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DhcpOptionsUnmarshaller : object {
    private static DhcpOptionsUnmarshaller _instance;
    public static DhcpOptionsUnmarshaller Instance { get; }
    private static DhcpOptionsUnmarshaller();
    public sealed virtual DhcpOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DhcpOptions Unmarshall(JsonUnmarshallerContext context);
    public static DhcpOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DirectoryServiceAuthenticationUnmarshaller : object {
    private static DirectoryServiceAuthenticationUnmarshaller _instance;
    public static DirectoryServiceAuthenticationUnmarshaller Instance { get; }
    private static DirectoryServiceAuthenticationUnmarshaller();
    public sealed virtual DirectoryServiceAuthentication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DirectoryServiceAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static DirectoryServiceAuthenticationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableAddressTransferRequestMarshaller : object {
    private static DisableAddressTransferRequestMarshaller _instance;
    public static DisableAddressTransferRequestMarshaller Instance { get; }
    private static DisableAddressTransferRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableAddressTransferRequest publicRequest);
    internal static DisableAddressTransferRequestMarshaller GetInstance();
    public static DisableAddressTransferRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableAddressTransferResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableAddressTransferResponseUnmarshaller _instance;
    public static DisableAddressTransferResponseUnmarshaller Instance { get; }
    private static DisableAddressTransferResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableAddressTransferResponseUnmarshaller GetInstance();
    public static DisableAddressTransferResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller : object {
    private static DisableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller _instance;
    public static DisableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller Instance { get; }
    private static DisableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableAwsNetworkPerformanceMetricSubscriptionRequest publicRequest);
    internal static DisableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller GetInstance();
    public static DisableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller _instance;
    public static DisableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller Instance { get; }
    private static DisableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller GetInstance();
    public static DisableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableEbsEncryptionByDefaultRequestMarshaller : object {
    private static DisableEbsEncryptionByDefaultRequestMarshaller _instance;
    public static DisableEbsEncryptionByDefaultRequestMarshaller Instance { get; }
    private static DisableEbsEncryptionByDefaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableEbsEncryptionByDefaultRequest publicRequest);
    internal static DisableEbsEncryptionByDefaultRequestMarshaller GetInstance();
    public static DisableEbsEncryptionByDefaultRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableEbsEncryptionByDefaultResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableEbsEncryptionByDefaultResponseUnmarshaller _instance;
    public static DisableEbsEncryptionByDefaultResponseUnmarshaller Instance { get; }
    private static DisableEbsEncryptionByDefaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableEbsEncryptionByDefaultResponseUnmarshaller GetInstance();
    public static DisableEbsEncryptionByDefaultResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastLaunchRequestMarshaller : object {
    private static DisableFastLaunchRequestMarshaller _instance;
    public static DisableFastLaunchRequestMarshaller Instance { get; }
    private static DisableFastLaunchRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableFastLaunchRequest publicRequest);
    internal static DisableFastLaunchRequestMarshaller GetInstance();
    public static DisableFastLaunchRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastLaunchResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableFastLaunchResponseUnmarshaller _instance;
    public static DisableFastLaunchResponseUnmarshaller Instance { get; }
    private static DisableFastLaunchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableFastLaunchResponseUnmarshaller GetInstance();
    public static DisableFastLaunchResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastSnapshotRestoreErrorItemUnmarshaller : object {
    private static DisableFastSnapshotRestoreErrorItemUnmarshaller _instance;
    public static DisableFastSnapshotRestoreErrorItemUnmarshaller Instance { get; }
    private static DisableFastSnapshotRestoreErrorItemUnmarshaller();
    public sealed virtual DisableFastSnapshotRestoreErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DisableFastSnapshotRestoreErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static DisableFastSnapshotRestoreErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastSnapshotRestoresRequestMarshaller : object {
    private static DisableFastSnapshotRestoresRequestMarshaller _instance;
    public static DisableFastSnapshotRestoresRequestMarshaller Instance { get; }
    private static DisableFastSnapshotRestoresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableFastSnapshotRestoresRequest publicRequest);
    internal static DisableFastSnapshotRestoresRequestMarshaller GetInstance();
    public static DisableFastSnapshotRestoresRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastSnapshotRestoresResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableFastSnapshotRestoresResponseUnmarshaller _instance;
    public static DisableFastSnapshotRestoresResponseUnmarshaller Instance { get; }
    private static DisableFastSnapshotRestoresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableFastSnapshotRestoresResponseUnmarshaller GetInstance();
    public static DisableFastSnapshotRestoresResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastSnapshotRestoreStateErrorItemUnmarshaller : object {
    private static DisableFastSnapshotRestoreStateErrorItemUnmarshaller _instance;
    public static DisableFastSnapshotRestoreStateErrorItemUnmarshaller Instance { get; }
    private static DisableFastSnapshotRestoreStateErrorItemUnmarshaller();
    public sealed virtual DisableFastSnapshotRestoreStateErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DisableFastSnapshotRestoreStateErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static DisableFastSnapshotRestoreStateErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastSnapshotRestoreStateErrorUnmarshaller : object {
    private static DisableFastSnapshotRestoreStateErrorUnmarshaller _instance;
    public static DisableFastSnapshotRestoreStateErrorUnmarshaller Instance { get; }
    private static DisableFastSnapshotRestoreStateErrorUnmarshaller();
    public sealed virtual DisableFastSnapshotRestoreStateError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DisableFastSnapshotRestoreStateError Unmarshall(JsonUnmarshallerContext context);
    public static DisableFastSnapshotRestoreStateErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableFastSnapshotRestoreSuccessItemUnmarshaller : object {
    private static DisableFastSnapshotRestoreSuccessItemUnmarshaller _instance;
    public static DisableFastSnapshotRestoreSuccessItemUnmarshaller Instance { get; }
    private static DisableFastSnapshotRestoreSuccessItemUnmarshaller();
    public sealed virtual DisableFastSnapshotRestoreSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DisableFastSnapshotRestoreSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static DisableFastSnapshotRestoreSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageBlockPublicAccessRequestMarshaller : object {
    private static DisableImageBlockPublicAccessRequestMarshaller _instance;
    public static DisableImageBlockPublicAccessRequestMarshaller Instance { get; }
    private static DisableImageBlockPublicAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableImageBlockPublicAccessRequest publicRequest);
    internal static DisableImageBlockPublicAccessRequestMarshaller GetInstance();
    public static DisableImageBlockPublicAccessRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageBlockPublicAccessResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableImageBlockPublicAccessResponseUnmarshaller _instance;
    public static DisableImageBlockPublicAccessResponseUnmarshaller Instance { get; }
    private static DisableImageBlockPublicAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableImageBlockPublicAccessResponseUnmarshaller GetInstance();
    public static DisableImageBlockPublicAccessResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageDeprecationRequestMarshaller : object {
    private static DisableImageDeprecationRequestMarshaller _instance;
    public static DisableImageDeprecationRequestMarshaller Instance { get; }
    private static DisableImageDeprecationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableImageDeprecationRequest publicRequest);
    internal static DisableImageDeprecationRequestMarshaller GetInstance();
    public static DisableImageDeprecationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageDeprecationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableImageDeprecationResponseUnmarshaller _instance;
    public static DisableImageDeprecationResponseUnmarshaller Instance { get; }
    private static DisableImageDeprecationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableImageDeprecationResponseUnmarshaller GetInstance();
    public static DisableImageDeprecationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageDeregistrationProtectionRequestMarshaller : object {
    private static DisableImageDeregistrationProtectionRequestMarshaller _instance;
    public static DisableImageDeregistrationProtectionRequestMarshaller Instance { get; }
    private static DisableImageDeregistrationProtectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableImageDeregistrationProtectionRequest publicRequest);
    internal static DisableImageDeregistrationProtectionRequestMarshaller GetInstance();
    public static DisableImageDeregistrationProtectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageDeregistrationProtectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableImageDeregistrationProtectionResponseUnmarshaller _instance;
    public static DisableImageDeregistrationProtectionResponseUnmarshaller Instance { get; }
    private static DisableImageDeregistrationProtectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableImageDeregistrationProtectionResponseUnmarshaller GetInstance();
    public static DisableImageDeregistrationProtectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageRequestMarshaller : object {
    private static DisableImageRequestMarshaller _instance;
    public static DisableImageRequestMarshaller Instance { get; }
    private static DisableImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableImageRequest publicRequest);
    internal static DisableImageRequestMarshaller GetInstance();
    public static DisableImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableImageResponseUnmarshaller _instance;
    public static DisableImageResponseUnmarshaller Instance { get; }
    private static DisableImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableImageResponseUnmarshaller GetInstance();
    public static DisableImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableIpamOrganizationAdminAccountRequestMarshaller : object {
    private static DisableIpamOrganizationAdminAccountRequestMarshaller _instance;
    public static DisableIpamOrganizationAdminAccountRequestMarshaller Instance { get; }
    private static DisableIpamOrganizationAdminAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableIpamOrganizationAdminAccountRequest publicRequest);
    internal static DisableIpamOrganizationAdminAccountRequestMarshaller GetInstance();
    public static DisableIpamOrganizationAdminAccountRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableIpamOrganizationAdminAccountResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableIpamOrganizationAdminAccountResponseUnmarshaller _instance;
    public static DisableIpamOrganizationAdminAccountResponseUnmarshaller Instance { get; }
    private static DisableIpamOrganizationAdminAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableIpamOrganizationAdminAccountResponseUnmarshaller GetInstance();
    public static DisableIpamOrganizationAdminAccountResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableSerialConsoleAccessRequestMarshaller : object {
    private static DisableSerialConsoleAccessRequestMarshaller _instance;
    public static DisableSerialConsoleAccessRequestMarshaller Instance { get; }
    private static DisableSerialConsoleAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableSerialConsoleAccessRequest publicRequest);
    internal static DisableSerialConsoleAccessRequestMarshaller GetInstance();
    public static DisableSerialConsoleAccessRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableSerialConsoleAccessResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableSerialConsoleAccessResponseUnmarshaller _instance;
    public static DisableSerialConsoleAccessResponseUnmarshaller Instance { get; }
    private static DisableSerialConsoleAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableSerialConsoleAccessResponseUnmarshaller GetInstance();
    public static DisableSerialConsoleAccessResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableSnapshotBlockPublicAccessRequestMarshaller : object {
    private static DisableSnapshotBlockPublicAccessRequestMarshaller _instance;
    public static DisableSnapshotBlockPublicAccessRequestMarshaller Instance { get; }
    private static DisableSnapshotBlockPublicAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableSnapshotBlockPublicAccessRequest publicRequest);
    internal static DisableSnapshotBlockPublicAccessRequestMarshaller GetInstance();
    public static DisableSnapshotBlockPublicAccessRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableSnapshotBlockPublicAccessResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableSnapshotBlockPublicAccessResponseUnmarshaller _instance;
    public static DisableSnapshotBlockPublicAccessResponseUnmarshaller Instance { get; }
    private static DisableSnapshotBlockPublicAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableSnapshotBlockPublicAccessResponseUnmarshaller GetInstance();
    public static DisableSnapshotBlockPublicAccessResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableTransitGatewayRouteTablePropagationRequestMarshaller : object {
    private static DisableTransitGatewayRouteTablePropagationRequestMarshaller _instance;
    public static DisableTransitGatewayRouteTablePropagationRequestMarshaller Instance { get; }
    private static DisableTransitGatewayRouteTablePropagationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableTransitGatewayRouteTablePropagationRequest publicRequest);
    internal static DisableTransitGatewayRouteTablePropagationRequestMarshaller GetInstance();
    public static DisableTransitGatewayRouteTablePropagationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableTransitGatewayRouteTablePropagationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableTransitGatewayRouteTablePropagationResponseUnmarshaller _instance;
    public static DisableTransitGatewayRouteTablePropagationResponseUnmarshaller Instance { get; }
    private static DisableTransitGatewayRouteTablePropagationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableTransitGatewayRouteTablePropagationResponseUnmarshaller GetInstance();
    public static DisableTransitGatewayRouteTablePropagationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationRequestMarshaller : object {
    private static DisableVgwRoutePropagationRequestMarshaller _instance;
    public static DisableVgwRoutePropagationRequestMarshaller Instance { get; }
    private static DisableVgwRoutePropagationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableVgwRoutePropagationRequest publicRequest);
    internal static DisableVgwRoutePropagationRequestMarshaller GetInstance();
    public static DisableVgwRoutePropagationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableVgwRoutePropagationResponseUnmarshaller _instance;
    public static DisableVgwRoutePropagationResponseUnmarshaller Instance { get; }
    private static DisableVgwRoutePropagationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableVgwRoutePropagationResponseUnmarshaller GetInstance();
    public static DisableVgwRoutePropagationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportRequestMarshaller : object {
    private static DisableVpcClassicLinkDnsSupportRequestMarshaller _instance;
    public static DisableVpcClassicLinkDnsSupportRequestMarshaller Instance { get; }
    private static DisableVpcClassicLinkDnsSupportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableVpcClassicLinkDnsSupportRequest publicRequest);
    internal static DisableVpcClassicLinkDnsSupportRequestMarshaller GetInstance();
    public static DisableVpcClassicLinkDnsSupportRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableVpcClassicLinkDnsSupportResponseUnmarshaller _instance;
    public static DisableVpcClassicLinkDnsSupportResponseUnmarshaller Instance { get; }
    private static DisableVpcClassicLinkDnsSupportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableVpcClassicLinkDnsSupportResponseUnmarshaller GetInstance();
    public static DisableVpcClassicLinkDnsSupportResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkRequestMarshaller : object {
    private static DisableVpcClassicLinkRequestMarshaller _instance;
    public static DisableVpcClassicLinkRequestMarshaller Instance { get; }
    private static DisableVpcClassicLinkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableVpcClassicLinkRequest publicRequest);
    internal static DisableVpcClassicLinkRequestMarshaller GetInstance();
    public static DisableVpcClassicLinkRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableVpcClassicLinkResponseUnmarshaller _instance;
    public static DisableVpcClassicLinkResponseUnmarshaller Instance { get; }
    private static DisableVpcClassicLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableVpcClassicLinkResponseUnmarshaller GetInstance();
    public static DisableVpcClassicLinkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressRequestMarshaller : object {
    private static DisassociateAddressRequestMarshaller _instance;
    public static DisassociateAddressRequestMarshaller Instance { get; }
    private static DisassociateAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateAddressRequest publicRequest);
    internal static DisassociateAddressRequestMarshaller GetInstance();
    public static DisassociateAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateAddressResponseUnmarshaller _instance;
    public static DisassociateAddressResponseUnmarshaller Instance { get; }
    private static DisassociateAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateAddressResponseUnmarshaller GetInstance();
    public static DisassociateAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateClientVpnTargetNetworkRequestMarshaller : object {
    private static DisassociateClientVpnTargetNetworkRequestMarshaller _instance;
    public static DisassociateClientVpnTargetNetworkRequestMarshaller Instance { get; }
    private static DisassociateClientVpnTargetNetworkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateClientVpnTargetNetworkRequest publicRequest);
    internal static DisassociateClientVpnTargetNetworkRequestMarshaller GetInstance();
    public static DisassociateClientVpnTargetNetworkRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateClientVpnTargetNetworkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateClientVpnTargetNetworkResponseUnmarshaller _instance;
    public static DisassociateClientVpnTargetNetworkResponseUnmarshaller Instance { get; }
    private static DisassociateClientVpnTargetNetworkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateClientVpnTargetNetworkResponseUnmarshaller GetInstance();
    public static DisassociateClientVpnTargetNetworkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateEnclaveCertificateIamRoleRequestMarshaller : object {
    private static DisassociateEnclaveCertificateIamRoleRequestMarshaller _instance;
    public static DisassociateEnclaveCertificateIamRoleRequestMarshaller Instance { get; }
    private static DisassociateEnclaveCertificateIamRoleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateEnclaveCertificateIamRoleRequest publicRequest);
    internal static DisassociateEnclaveCertificateIamRoleRequestMarshaller GetInstance();
    public static DisassociateEnclaveCertificateIamRoleRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateEnclaveCertificateIamRoleResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateEnclaveCertificateIamRoleResponseUnmarshaller _instance;
    public static DisassociateEnclaveCertificateIamRoleResponseUnmarshaller Instance { get; }
    private static DisassociateEnclaveCertificateIamRoleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateEnclaveCertificateIamRoleResponseUnmarshaller GetInstance();
    public static DisassociateEnclaveCertificateIamRoleResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateIamInstanceProfileRequestMarshaller : object {
    private static DisassociateIamInstanceProfileRequestMarshaller _instance;
    public static DisassociateIamInstanceProfileRequestMarshaller Instance { get; }
    private static DisassociateIamInstanceProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateIamInstanceProfileRequest publicRequest);
    internal static DisassociateIamInstanceProfileRequestMarshaller GetInstance();
    public static DisassociateIamInstanceProfileRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateIamInstanceProfileResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateIamInstanceProfileResponseUnmarshaller _instance;
    public static DisassociateIamInstanceProfileResponseUnmarshaller Instance { get; }
    private static DisassociateIamInstanceProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateIamInstanceProfileResponseUnmarshaller GetInstance();
    public static DisassociateIamInstanceProfileResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateInstanceEventWindowRequestMarshaller : object {
    private static DisassociateInstanceEventWindowRequestMarshaller _instance;
    public static DisassociateInstanceEventWindowRequestMarshaller Instance { get; }
    private static DisassociateInstanceEventWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateInstanceEventWindowRequest publicRequest);
    internal static DisassociateInstanceEventWindowRequestMarshaller GetInstance();
    public static DisassociateInstanceEventWindowRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateInstanceEventWindowResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateInstanceEventWindowResponseUnmarshaller _instance;
    public static DisassociateInstanceEventWindowResponseUnmarshaller Instance { get; }
    private static DisassociateInstanceEventWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateInstanceEventWindowResponseUnmarshaller GetInstance();
    public static DisassociateInstanceEventWindowResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateIpamByoasnRequestMarshaller : object {
    private static DisassociateIpamByoasnRequestMarshaller _instance;
    public static DisassociateIpamByoasnRequestMarshaller Instance { get; }
    private static DisassociateIpamByoasnRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateIpamByoasnRequest publicRequest);
    internal static DisassociateIpamByoasnRequestMarshaller GetInstance();
    public static DisassociateIpamByoasnRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateIpamByoasnResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateIpamByoasnResponseUnmarshaller _instance;
    public static DisassociateIpamByoasnResponseUnmarshaller Instance { get; }
    private static DisassociateIpamByoasnResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateIpamByoasnResponseUnmarshaller GetInstance();
    public static DisassociateIpamByoasnResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateIpamResourceDiscoveryRequestMarshaller : object {
    private static DisassociateIpamResourceDiscoveryRequestMarshaller _instance;
    public static DisassociateIpamResourceDiscoveryRequestMarshaller Instance { get; }
    private static DisassociateIpamResourceDiscoveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateIpamResourceDiscoveryRequest publicRequest);
    internal static DisassociateIpamResourceDiscoveryRequestMarshaller GetInstance();
    public static DisassociateIpamResourceDiscoveryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateIpamResourceDiscoveryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateIpamResourceDiscoveryResponseUnmarshaller _instance;
    public static DisassociateIpamResourceDiscoveryResponseUnmarshaller Instance { get; }
    private static DisassociateIpamResourceDiscoveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateIpamResourceDiscoveryResponseUnmarshaller GetInstance();
    public static DisassociateIpamResourceDiscoveryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateNatGatewayAddressRequestMarshaller : object {
    private static DisassociateNatGatewayAddressRequestMarshaller _instance;
    public static DisassociateNatGatewayAddressRequestMarshaller Instance { get; }
    private static DisassociateNatGatewayAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateNatGatewayAddressRequest publicRequest);
    internal static DisassociateNatGatewayAddressRequestMarshaller GetInstance();
    public static DisassociateNatGatewayAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateNatGatewayAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateNatGatewayAddressResponseUnmarshaller _instance;
    public static DisassociateNatGatewayAddressResponseUnmarshaller Instance { get; }
    private static DisassociateNatGatewayAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateNatGatewayAddressResponseUnmarshaller GetInstance();
    public static DisassociateNatGatewayAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableRequestMarshaller : object {
    private static DisassociateRouteTableRequestMarshaller _instance;
    public static DisassociateRouteTableRequestMarshaller Instance { get; }
    private static DisassociateRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateRouteTableRequest publicRequest);
    internal static DisassociateRouteTableRequestMarshaller GetInstance();
    public static DisassociateRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateRouteTableResponseUnmarshaller _instance;
    public static DisassociateRouteTableResponseUnmarshaller Instance { get; }
    private static DisassociateRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateRouteTableResponseUnmarshaller GetInstance();
    public static DisassociateRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateSubnetCidrBlockRequestMarshaller : object {
    private static DisassociateSubnetCidrBlockRequestMarshaller _instance;
    public static DisassociateSubnetCidrBlockRequestMarshaller Instance { get; }
    private static DisassociateSubnetCidrBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateSubnetCidrBlockRequest publicRequest);
    internal static DisassociateSubnetCidrBlockRequestMarshaller GetInstance();
    public static DisassociateSubnetCidrBlockRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateSubnetCidrBlockResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateSubnetCidrBlockResponseUnmarshaller _instance;
    public static DisassociateSubnetCidrBlockResponseUnmarshaller Instance { get; }
    private static DisassociateSubnetCidrBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateSubnetCidrBlockResponseUnmarshaller GetInstance();
    public static DisassociateSubnetCidrBlockResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTransitGatewayMulticastDomainRequestMarshaller : object {
    private static DisassociateTransitGatewayMulticastDomainRequestMarshaller _instance;
    public static DisassociateTransitGatewayMulticastDomainRequestMarshaller Instance { get; }
    private static DisassociateTransitGatewayMulticastDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateTransitGatewayMulticastDomainRequest publicRequest);
    internal static DisassociateTransitGatewayMulticastDomainRequestMarshaller GetInstance();
    public static DisassociateTransitGatewayMulticastDomainRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTransitGatewayMulticastDomainResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateTransitGatewayMulticastDomainResponseUnmarshaller _instance;
    public static DisassociateTransitGatewayMulticastDomainResponseUnmarshaller Instance { get; }
    private static DisassociateTransitGatewayMulticastDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateTransitGatewayMulticastDomainResponseUnmarshaller GetInstance();
    public static DisassociateTransitGatewayMulticastDomainResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTransitGatewayPolicyTableRequestMarshaller : object {
    private static DisassociateTransitGatewayPolicyTableRequestMarshaller _instance;
    public static DisassociateTransitGatewayPolicyTableRequestMarshaller Instance { get; }
    private static DisassociateTransitGatewayPolicyTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateTransitGatewayPolicyTableRequest publicRequest);
    internal static DisassociateTransitGatewayPolicyTableRequestMarshaller GetInstance();
    public static DisassociateTransitGatewayPolicyTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTransitGatewayPolicyTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateTransitGatewayPolicyTableResponseUnmarshaller _instance;
    public static DisassociateTransitGatewayPolicyTableResponseUnmarshaller Instance { get; }
    private static DisassociateTransitGatewayPolicyTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateTransitGatewayPolicyTableResponseUnmarshaller GetInstance();
    public static DisassociateTransitGatewayPolicyTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTransitGatewayRouteTableRequestMarshaller : object {
    private static DisassociateTransitGatewayRouteTableRequestMarshaller _instance;
    public static DisassociateTransitGatewayRouteTableRequestMarshaller Instance { get; }
    private static DisassociateTransitGatewayRouteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateTransitGatewayRouteTableRequest publicRequest);
    internal static DisassociateTransitGatewayRouteTableRequestMarshaller GetInstance();
    public static DisassociateTransitGatewayRouteTableRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTransitGatewayRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateTransitGatewayRouteTableResponseUnmarshaller _instance;
    public static DisassociateTransitGatewayRouteTableResponseUnmarshaller Instance { get; }
    private static DisassociateTransitGatewayRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateTransitGatewayRouteTableResponseUnmarshaller GetInstance();
    public static DisassociateTransitGatewayRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTrunkInterfaceRequestMarshaller : object {
    private static DisassociateTrunkInterfaceRequestMarshaller _instance;
    public static DisassociateTrunkInterfaceRequestMarshaller Instance { get; }
    private static DisassociateTrunkInterfaceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateTrunkInterfaceRequest publicRequest);
    internal static DisassociateTrunkInterfaceRequestMarshaller GetInstance();
    public static DisassociateTrunkInterfaceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateTrunkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateTrunkInterfaceResponseUnmarshaller _instance;
    public static DisassociateTrunkInterfaceResponseUnmarshaller Instance { get; }
    private static DisassociateTrunkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateTrunkInterfaceResponseUnmarshaller GetInstance();
    public static DisassociateTrunkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateVpcCidrBlockRequestMarshaller : object {
    private static DisassociateVpcCidrBlockRequestMarshaller _instance;
    public static DisassociateVpcCidrBlockRequestMarshaller Instance { get; }
    private static DisassociateVpcCidrBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateVpcCidrBlockRequest publicRequest);
    internal static DisassociateVpcCidrBlockRequestMarshaller GetInstance();
    public static DisassociateVpcCidrBlockRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateVpcCidrBlockResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateVpcCidrBlockResponseUnmarshaller _instance;
    public static DisassociateVpcCidrBlockResponseUnmarshaller Instance { get; }
    private static DisassociateVpcCidrBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateVpcCidrBlockResponseUnmarshaller GetInstance();
    public static DisassociateVpcCidrBlockResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageDescriptionUnmarshaller : object {
    private static DiskImageDescriptionUnmarshaller _instance;
    public static DiskImageDescriptionUnmarshaller Instance { get; }
    private static DiskImageDescriptionUnmarshaller();
    public sealed virtual DiskImageDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DiskImageDescription Unmarshall(JsonUnmarshallerContext context);
    public static DiskImageDescriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageVolumeDescriptionUnmarshaller : object {
    private static DiskImageVolumeDescriptionUnmarshaller _instance;
    public static DiskImageVolumeDescriptionUnmarshaller Instance { get; }
    private static DiskImageVolumeDescriptionUnmarshaller();
    public sealed virtual DiskImageVolumeDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DiskImageVolumeDescription Unmarshall(JsonUnmarshallerContext context);
    public static DiskImageVolumeDescriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DiskInfoUnmarshaller : object {
    private static DiskInfoUnmarshaller _instance;
    public static DiskInfoUnmarshaller Instance { get; }
    private static DiskInfoUnmarshaller();
    public sealed virtual DiskInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DiskInfo Unmarshall(JsonUnmarshallerContext context);
    public static DiskInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DnsEntryUnmarshaller : object {
    private static DnsEntryUnmarshaller _instance;
    public static DnsEntryUnmarshaller Instance { get; }
    private static DnsEntryUnmarshaller();
    public sealed virtual DnsEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DnsEntry Unmarshall(JsonUnmarshallerContext context);
    public static DnsEntryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DnsOptionsUnmarshaller : object {
    private static DnsOptionsUnmarshaller _instance;
    public static DnsOptionsUnmarshaller Instance { get; }
    private static DnsOptionsUnmarshaller();
    public sealed virtual DnsOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DnsOptions Unmarshall(JsonUnmarshallerContext context);
    public static DnsOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EbsBlockDeviceUnmarshaller : object {
    private static EbsBlockDeviceUnmarshaller _instance;
    public static EbsBlockDeviceUnmarshaller Instance { get; }
    private static EbsBlockDeviceUnmarshaller();
    public sealed virtual EbsBlockDevice Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EbsBlockDevice Unmarshall(JsonUnmarshallerContext context);
    public static EbsBlockDeviceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EbsInfoUnmarshaller : object {
    private static EbsInfoUnmarshaller _instance;
    public static EbsInfoUnmarshaller Instance { get; }
    private static EbsInfoUnmarshaller();
    public sealed virtual EbsInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EbsInfo Unmarshall(JsonUnmarshallerContext context);
    public static EbsInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller : object {
    private static EbsInstanceBlockDeviceUnmarshaller _instance;
    public static EbsInstanceBlockDeviceUnmarshaller Instance { get; }
    private static EbsInstanceBlockDeviceUnmarshaller();
    public sealed virtual EbsInstanceBlockDevice Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EbsInstanceBlockDevice Unmarshall(JsonUnmarshallerContext context);
    public static EbsInstanceBlockDeviceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EbsOptimizedInfoUnmarshaller : object {
    private static EbsOptimizedInfoUnmarshaller _instance;
    public static EbsOptimizedInfoUnmarshaller Instance { get; }
    private static EbsOptimizedInfoUnmarshaller();
    public sealed virtual EbsOptimizedInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EbsOptimizedInfo Unmarshall(JsonUnmarshallerContext context);
    public static EbsOptimizedInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ec2InstanceConnectEndpointUnmarshaller : object {
    private static Ec2InstanceConnectEndpointUnmarshaller _instance;
    public static Ec2InstanceConnectEndpointUnmarshaller Instance { get; }
    private static Ec2InstanceConnectEndpointUnmarshaller();
    public sealed virtual Ec2InstanceConnectEndpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ec2InstanceConnectEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static Ec2InstanceConnectEndpointUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EfaInfoUnmarshaller : object {
    private static EfaInfoUnmarshaller _instance;
    public static EfaInfoUnmarshaller Instance { get; }
    private static EfaInfoUnmarshaller();
    public sealed virtual EfaInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EfaInfo Unmarshall(JsonUnmarshallerContext context);
    public static EfaInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EgressOnlyInternetGatewayUnmarshaller : object {
    private static EgressOnlyInternetGatewayUnmarshaller _instance;
    public static EgressOnlyInternetGatewayUnmarshaller Instance { get; }
    private static EgressOnlyInternetGatewayUnmarshaller();
    public sealed virtual EgressOnlyInternetGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EgressOnlyInternetGateway Unmarshall(JsonUnmarshallerContext context);
    public static EgressOnlyInternetGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ElasticGpuAssociationUnmarshaller : object {
    private static ElasticGpuAssociationUnmarshaller _instance;
    public static ElasticGpuAssociationUnmarshaller Instance { get; }
    private static ElasticGpuAssociationUnmarshaller();
    public sealed virtual ElasticGpuAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticGpuAssociation Unmarshall(JsonUnmarshallerContext context);
    public static ElasticGpuAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ElasticGpuHealthUnmarshaller : object {
    private static ElasticGpuHealthUnmarshaller _instance;
    public static ElasticGpuHealthUnmarshaller Instance { get; }
    private static ElasticGpuHealthUnmarshaller();
    public sealed virtual ElasticGpuHealth Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticGpuHealth Unmarshall(JsonUnmarshallerContext context);
    public static ElasticGpuHealthUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ElasticGpuSpecificationResponseUnmarshaller : object {
    private static ElasticGpuSpecificationResponseUnmarshaller _instance;
    public static ElasticGpuSpecificationResponseUnmarshaller Instance { get; }
    private static ElasticGpuSpecificationResponseUnmarshaller();
    public sealed virtual ElasticGpuSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticGpuSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static ElasticGpuSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ElasticGpusUnmarshaller : object {
    private static ElasticGpusUnmarshaller _instance;
    public static ElasticGpusUnmarshaller Instance { get; }
    private static ElasticGpusUnmarshaller();
    public sealed virtual ElasticGpus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticGpus Unmarshall(JsonUnmarshallerContext context);
    public static ElasticGpusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ElasticInferenceAcceleratorAssociationUnmarshaller : object {
    private static ElasticInferenceAcceleratorAssociationUnmarshaller _instance;
    public static ElasticInferenceAcceleratorAssociationUnmarshaller Instance { get; }
    private static ElasticInferenceAcceleratorAssociationUnmarshaller();
    public sealed virtual ElasticInferenceAcceleratorAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticInferenceAcceleratorAssociation Unmarshall(JsonUnmarshallerContext context);
    public static ElasticInferenceAcceleratorAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableAddressTransferRequestMarshaller : object {
    private static EnableAddressTransferRequestMarshaller _instance;
    public static EnableAddressTransferRequestMarshaller Instance { get; }
    private static EnableAddressTransferRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableAddressTransferRequest publicRequest);
    internal static EnableAddressTransferRequestMarshaller GetInstance();
    public static EnableAddressTransferRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableAddressTransferResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableAddressTransferResponseUnmarshaller _instance;
    public static EnableAddressTransferResponseUnmarshaller Instance { get; }
    private static EnableAddressTransferResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableAddressTransferResponseUnmarshaller GetInstance();
    public static EnableAddressTransferResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller : object {
    private static EnableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller _instance;
    public static EnableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller Instance { get; }
    private static EnableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableAwsNetworkPerformanceMetricSubscriptionRequest publicRequest);
    internal static EnableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller GetInstance();
    public static EnableAwsNetworkPerformanceMetricSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller _instance;
    public static EnableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller Instance { get; }
    private static EnableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller GetInstance();
    public static EnableAwsNetworkPerformanceMetricSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableEbsEncryptionByDefaultRequestMarshaller : object {
    private static EnableEbsEncryptionByDefaultRequestMarshaller _instance;
    public static EnableEbsEncryptionByDefaultRequestMarshaller Instance { get; }
    private static EnableEbsEncryptionByDefaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableEbsEncryptionByDefaultRequest publicRequest);
    internal static EnableEbsEncryptionByDefaultRequestMarshaller GetInstance();
    public static EnableEbsEncryptionByDefaultRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableEbsEncryptionByDefaultResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableEbsEncryptionByDefaultResponseUnmarshaller _instance;
    public static EnableEbsEncryptionByDefaultResponseUnmarshaller Instance { get; }
    private static EnableEbsEncryptionByDefaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableEbsEncryptionByDefaultResponseUnmarshaller GetInstance();
    public static EnableEbsEncryptionByDefaultResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastLaunchRequestMarshaller : object {
    private static EnableFastLaunchRequestMarshaller _instance;
    public static EnableFastLaunchRequestMarshaller Instance { get; }
    private static EnableFastLaunchRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableFastLaunchRequest publicRequest);
    internal static EnableFastLaunchRequestMarshaller GetInstance();
    public static EnableFastLaunchRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastLaunchResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableFastLaunchResponseUnmarshaller _instance;
    public static EnableFastLaunchResponseUnmarshaller Instance { get; }
    private static EnableFastLaunchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableFastLaunchResponseUnmarshaller GetInstance();
    public static EnableFastLaunchResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastSnapshotRestoreErrorItemUnmarshaller : object {
    private static EnableFastSnapshotRestoreErrorItemUnmarshaller _instance;
    public static EnableFastSnapshotRestoreErrorItemUnmarshaller Instance { get; }
    private static EnableFastSnapshotRestoreErrorItemUnmarshaller();
    public sealed virtual EnableFastSnapshotRestoreErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnableFastSnapshotRestoreErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static EnableFastSnapshotRestoreErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastSnapshotRestoresRequestMarshaller : object {
    private static EnableFastSnapshotRestoresRequestMarshaller _instance;
    public static EnableFastSnapshotRestoresRequestMarshaller Instance { get; }
    private static EnableFastSnapshotRestoresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableFastSnapshotRestoresRequest publicRequest);
    internal static EnableFastSnapshotRestoresRequestMarshaller GetInstance();
    public static EnableFastSnapshotRestoresRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastSnapshotRestoresResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableFastSnapshotRestoresResponseUnmarshaller _instance;
    public static EnableFastSnapshotRestoresResponseUnmarshaller Instance { get; }
    private static EnableFastSnapshotRestoresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableFastSnapshotRestoresResponseUnmarshaller GetInstance();
    public static EnableFastSnapshotRestoresResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastSnapshotRestoreStateErrorItemUnmarshaller : object {
    private static EnableFastSnapshotRestoreStateErrorItemUnmarshaller _instance;
    public static EnableFastSnapshotRestoreStateErrorItemUnmarshaller Instance { get; }
    private static EnableFastSnapshotRestoreStateErrorItemUnmarshaller();
    public sealed virtual EnableFastSnapshotRestoreStateErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnableFastSnapshotRestoreStateErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static EnableFastSnapshotRestoreStateErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastSnapshotRestoreStateErrorUnmarshaller : object {
    private static EnableFastSnapshotRestoreStateErrorUnmarshaller _instance;
    public static EnableFastSnapshotRestoreStateErrorUnmarshaller Instance { get; }
    private static EnableFastSnapshotRestoreStateErrorUnmarshaller();
    public sealed virtual EnableFastSnapshotRestoreStateError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnableFastSnapshotRestoreStateError Unmarshall(JsonUnmarshallerContext context);
    public static EnableFastSnapshotRestoreStateErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableFastSnapshotRestoreSuccessItemUnmarshaller : object {
    private static EnableFastSnapshotRestoreSuccessItemUnmarshaller _instance;
    public static EnableFastSnapshotRestoreSuccessItemUnmarshaller Instance { get; }
    private static EnableFastSnapshotRestoreSuccessItemUnmarshaller();
    public sealed virtual EnableFastSnapshotRestoreSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnableFastSnapshotRestoreSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static EnableFastSnapshotRestoreSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageBlockPublicAccessRequestMarshaller : object {
    private static EnableImageBlockPublicAccessRequestMarshaller _instance;
    public static EnableImageBlockPublicAccessRequestMarshaller Instance { get; }
    private static EnableImageBlockPublicAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableImageBlockPublicAccessRequest publicRequest);
    internal static EnableImageBlockPublicAccessRequestMarshaller GetInstance();
    public static EnableImageBlockPublicAccessRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageBlockPublicAccessResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableImageBlockPublicAccessResponseUnmarshaller _instance;
    public static EnableImageBlockPublicAccessResponseUnmarshaller Instance { get; }
    private static EnableImageBlockPublicAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableImageBlockPublicAccessResponseUnmarshaller GetInstance();
    public static EnableImageBlockPublicAccessResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageDeprecationRequestMarshaller : object {
    private static EnableImageDeprecationRequestMarshaller _instance;
    public static EnableImageDeprecationRequestMarshaller Instance { get; }
    private static EnableImageDeprecationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableImageDeprecationRequest publicRequest);
    internal static EnableImageDeprecationRequestMarshaller GetInstance();
    public static EnableImageDeprecationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageDeprecationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableImageDeprecationResponseUnmarshaller _instance;
    public static EnableImageDeprecationResponseUnmarshaller Instance { get; }
    private static EnableImageDeprecationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableImageDeprecationResponseUnmarshaller GetInstance();
    public static EnableImageDeprecationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageDeregistrationProtectionRequestMarshaller : object {
    private static EnableImageDeregistrationProtectionRequestMarshaller _instance;
    public static EnableImageDeregistrationProtectionRequestMarshaller Instance { get; }
    private static EnableImageDeregistrationProtectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableImageDeregistrationProtectionRequest publicRequest);
    internal static EnableImageDeregistrationProtectionRequestMarshaller GetInstance();
    public static EnableImageDeregistrationProtectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageDeregistrationProtectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableImageDeregistrationProtectionResponseUnmarshaller _instance;
    public static EnableImageDeregistrationProtectionResponseUnmarshaller Instance { get; }
    private static EnableImageDeregistrationProtectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableImageDeregistrationProtectionResponseUnmarshaller GetInstance();
    public static EnableImageDeregistrationProtectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageRequestMarshaller : object {
    private static EnableImageRequestMarshaller _instance;
    public static EnableImageRequestMarshaller Instance { get; }
    private static EnableImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableImageRequest publicRequest);
    internal static EnableImageRequestMarshaller GetInstance();
    public static EnableImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableImageResponseUnmarshaller _instance;
    public static EnableImageResponseUnmarshaller Instance { get; }
    private static EnableImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableImageResponseUnmarshaller GetInstance();
    public static EnableImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableIpamOrganizationAdminAccountRequestMarshaller : object {
    private static EnableIpamOrganizationAdminAccountRequestMarshaller _instance;
    public static EnableIpamOrganizationAdminAccountRequestMarshaller Instance { get; }
    private static EnableIpamOrganizationAdminAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableIpamOrganizationAdminAccountRequest publicRequest);
    internal static EnableIpamOrganizationAdminAccountRequestMarshaller GetInstance();
    public static EnableIpamOrganizationAdminAccountRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableIpamOrganizationAdminAccountResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableIpamOrganizationAdminAccountResponseUnmarshaller _instance;
    public static EnableIpamOrganizationAdminAccountResponseUnmarshaller Instance { get; }
    private static EnableIpamOrganizationAdminAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableIpamOrganizationAdminAccountResponseUnmarshaller GetInstance();
    public static EnableIpamOrganizationAdminAccountResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableReachabilityAnalyzerOrganizationSharingRequestMarshaller : object {
    private static EnableReachabilityAnalyzerOrganizationSharingRequestMarshaller _instance;
    public static EnableReachabilityAnalyzerOrganizationSharingRequestMarshaller Instance { get; }
    private static EnableReachabilityAnalyzerOrganizationSharingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableReachabilityAnalyzerOrganizationSharingRequest publicRequest);
    internal static EnableReachabilityAnalyzerOrganizationSharingRequestMarshaller GetInstance();
    public static EnableReachabilityAnalyzerOrganizationSharingRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableReachabilityAnalyzerOrganizationSharingResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableReachabilityAnalyzerOrganizationSharingResponseUnmarshaller _instance;
    public static EnableReachabilityAnalyzerOrganizationSharingResponseUnmarshaller Instance { get; }
    private static EnableReachabilityAnalyzerOrganizationSharingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableReachabilityAnalyzerOrganizationSharingResponseUnmarshaller GetInstance();
    public static EnableReachabilityAnalyzerOrganizationSharingResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableSerialConsoleAccessRequestMarshaller : object {
    private static EnableSerialConsoleAccessRequestMarshaller _instance;
    public static EnableSerialConsoleAccessRequestMarshaller Instance { get; }
    private static EnableSerialConsoleAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableSerialConsoleAccessRequest publicRequest);
    internal static EnableSerialConsoleAccessRequestMarshaller GetInstance();
    public static EnableSerialConsoleAccessRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableSerialConsoleAccessResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableSerialConsoleAccessResponseUnmarshaller _instance;
    public static EnableSerialConsoleAccessResponseUnmarshaller Instance { get; }
    private static EnableSerialConsoleAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableSerialConsoleAccessResponseUnmarshaller GetInstance();
    public static EnableSerialConsoleAccessResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableSnapshotBlockPublicAccessRequestMarshaller : object {
    private static EnableSnapshotBlockPublicAccessRequestMarshaller _instance;
    public static EnableSnapshotBlockPublicAccessRequestMarshaller Instance { get; }
    private static EnableSnapshotBlockPublicAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableSnapshotBlockPublicAccessRequest publicRequest);
    internal static EnableSnapshotBlockPublicAccessRequestMarshaller GetInstance();
    public static EnableSnapshotBlockPublicAccessRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableSnapshotBlockPublicAccessResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableSnapshotBlockPublicAccessResponseUnmarshaller _instance;
    public static EnableSnapshotBlockPublicAccessResponseUnmarshaller Instance { get; }
    private static EnableSnapshotBlockPublicAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableSnapshotBlockPublicAccessResponseUnmarshaller GetInstance();
    public static EnableSnapshotBlockPublicAccessResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableTransitGatewayRouteTablePropagationRequestMarshaller : object {
    private static EnableTransitGatewayRouteTablePropagationRequestMarshaller _instance;
    public static EnableTransitGatewayRouteTablePropagationRequestMarshaller Instance { get; }
    private static EnableTransitGatewayRouteTablePropagationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableTransitGatewayRouteTablePropagationRequest publicRequest);
    internal static EnableTransitGatewayRouteTablePropagationRequestMarshaller GetInstance();
    public static EnableTransitGatewayRouteTablePropagationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableTransitGatewayRouteTablePropagationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableTransitGatewayRouteTablePropagationResponseUnmarshaller _instance;
    public static EnableTransitGatewayRouteTablePropagationResponseUnmarshaller Instance { get; }
    private static EnableTransitGatewayRouteTablePropagationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableTransitGatewayRouteTablePropagationResponseUnmarshaller GetInstance();
    public static EnableTransitGatewayRouteTablePropagationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationRequestMarshaller : object {
    private static EnableVgwRoutePropagationRequestMarshaller _instance;
    public static EnableVgwRoutePropagationRequestMarshaller Instance { get; }
    private static EnableVgwRoutePropagationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableVgwRoutePropagationRequest publicRequest);
    internal static EnableVgwRoutePropagationRequestMarshaller GetInstance();
    public static EnableVgwRoutePropagationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableVgwRoutePropagationResponseUnmarshaller _instance;
    public static EnableVgwRoutePropagationResponseUnmarshaller Instance { get; }
    private static EnableVgwRoutePropagationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableVgwRoutePropagationResponseUnmarshaller GetInstance();
    public static EnableVgwRoutePropagationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIORequestMarshaller : object {
    private static EnableVolumeIORequestMarshaller _instance;
    public static EnableVolumeIORequestMarshaller Instance { get; }
    private static EnableVolumeIORequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableVolumeIORequest publicRequest);
    internal static EnableVolumeIORequestMarshaller GetInstance();
    public static EnableVolumeIORequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIOResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableVolumeIOResponseUnmarshaller _instance;
    public static EnableVolumeIOResponseUnmarshaller Instance { get; }
    private static EnableVolumeIOResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableVolumeIOResponseUnmarshaller GetInstance();
    public static EnableVolumeIOResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportRequestMarshaller : object {
    private static EnableVpcClassicLinkDnsSupportRequestMarshaller _instance;
    public static EnableVpcClassicLinkDnsSupportRequestMarshaller Instance { get; }
    private static EnableVpcClassicLinkDnsSupportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableVpcClassicLinkDnsSupportRequest publicRequest);
    internal static EnableVpcClassicLinkDnsSupportRequestMarshaller GetInstance();
    public static EnableVpcClassicLinkDnsSupportRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableVpcClassicLinkDnsSupportResponseUnmarshaller _instance;
    public static EnableVpcClassicLinkDnsSupportResponseUnmarshaller Instance { get; }
    private static EnableVpcClassicLinkDnsSupportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableVpcClassicLinkDnsSupportResponseUnmarshaller GetInstance();
    public static EnableVpcClassicLinkDnsSupportResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkRequestMarshaller : object {
    private static EnableVpcClassicLinkRequestMarshaller _instance;
    public static EnableVpcClassicLinkRequestMarshaller Instance { get; }
    private static EnableVpcClassicLinkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableVpcClassicLinkRequest publicRequest);
    internal static EnableVpcClassicLinkRequestMarshaller GetInstance();
    public static EnableVpcClassicLinkRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableVpcClassicLinkResponseUnmarshaller _instance;
    public static EnableVpcClassicLinkResponseUnmarshaller Instance { get; }
    private static EnableVpcClassicLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableVpcClassicLinkResponseUnmarshaller GetInstance();
    public static EnableVpcClassicLinkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnaSrdSpecificationRequestUnmarshaller : object {
    private static EnaSrdSpecificationRequestUnmarshaller _instance;
    public static EnaSrdSpecificationRequestUnmarshaller Instance { get; }
    private static EnaSrdSpecificationRequestUnmarshaller();
    public sealed virtual EnaSrdSpecificationRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnaSrdSpecificationRequest Unmarshall(JsonUnmarshallerContext context);
    public static EnaSrdSpecificationRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnaSrdUdpSpecificationRequestUnmarshaller : object {
    private static EnaSrdUdpSpecificationRequestUnmarshaller _instance;
    public static EnaSrdUdpSpecificationRequestUnmarshaller Instance { get; }
    private static EnaSrdUdpSpecificationRequestUnmarshaller();
    public sealed virtual EnaSrdUdpSpecificationRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnaSrdUdpSpecificationRequest Unmarshall(JsonUnmarshallerContext context);
    public static EnaSrdUdpSpecificationRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnclaveOptionsUnmarshaller : object {
    private static EnclaveOptionsUnmarshaller _instance;
    public static EnclaveOptionsUnmarshaller Instance { get; }
    private static EnclaveOptionsUnmarshaller();
    public sealed virtual EnclaveOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnclaveOptions Unmarshall(JsonUnmarshallerContext context);
    public static EnclaveOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EventInformationUnmarshaller : object {
    private static EventInformationUnmarshaller _instance;
    public static EventInformationUnmarshaller Instance { get; }
    private static EventInformationUnmarshaller();
    public sealed virtual EventInformation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventInformation Unmarshall(JsonUnmarshallerContext context);
    public static EventInformationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExplanationUnmarshaller : object {
    private static ExplanationUnmarshaller _instance;
    public static ExplanationUnmarshaller Instance { get; }
    private static ExplanationUnmarshaller();
    public sealed virtual Explanation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Explanation Unmarshall(JsonUnmarshallerContext context);
    public static ExplanationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportClientVpnClientCertificateRevocationListRequestMarshaller : object {
    private static ExportClientVpnClientCertificateRevocationListRequestMarshaller _instance;
    public static ExportClientVpnClientCertificateRevocationListRequestMarshaller Instance { get; }
    private static ExportClientVpnClientCertificateRevocationListRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExportClientVpnClientCertificateRevocationListRequest publicRequest);
    internal static ExportClientVpnClientCertificateRevocationListRequestMarshaller GetInstance();
    public static ExportClientVpnClientCertificateRevocationListRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportClientVpnClientCertificateRevocationListResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ExportClientVpnClientCertificateRevocationListResponseUnmarshaller _instance;
    public static ExportClientVpnClientCertificateRevocationListResponseUnmarshaller Instance { get; }
    private static ExportClientVpnClientCertificateRevocationListResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExportClientVpnClientCertificateRevocationListResponseUnmarshaller GetInstance();
    public static ExportClientVpnClientCertificateRevocationListResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportClientVpnClientConfigurationRequestMarshaller : object {
    private static ExportClientVpnClientConfigurationRequestMarshaller _instance;
    public static ExportClientVpnClientConfigurationRequestMarshaller Instance { get; }
    private static ExportClientVpnClientConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExportClientVpnClientConfigurationRequest publicRequest);
    internal static ExportClientVpnClientConfigurationRequestMarshaller GetInstance();
    public static ExportClientVpnClientConfigurationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportClientVpnClientConfigurationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ExportClientVpnClientConfigurationResponseUnmarshaller _instance;
    public static ExportClientVpnClientConfigurationResponseUnmarshaller Instance { get; }
    private static ExportClientVpnClientConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExportClientVpnClientConfigurationResponseUnmarshaller GetInstance();
    public static ExportClientVpnClientConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportImageRequestMarshaller : object {
    private static ExportImageRequestMarshaller _instance;
    public static ExportImageRequestMarshaller Instance { get; }
    private static ExportImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExportImageRequest publicRequest);
    internal static ExportImageRequestMarshaller GetInstance();
    public static ExportImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ExportImageResponseUnmarshaller _instance;
    public static ExportImageResponseUnmarshaller Instance { get; }
    private static ExportImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExportImageResponseUnmarshaller GetInstance();
    public static ExportImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportImageTaskUnmarshaller : object {
    private static ExportImageTaskUnmarshaller _instance;
    public static ExportImageTaskUnmarshaller Instance { get; }
    private static ExportImageTaskUnmarshaller();
    public sealed virtual ExportImageTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportImageTask Unmarshall(JsonUnmarshallerContext context);
    public static ExportImageTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskS3LocationUnmarshaller : object {
    private static ExportTaskS3LocationUnmarshaller _instance;
    public static ExportTaskS3LocationUnmarshaller Instance { get; }
    private static ExportTaskS3LocationUnmarshaller();
    public sealed virtual ExportTaskS3Location Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTaskS3Location Unmarshall(JsonUnmarshallerContext context);
    public static ExportTaskS3LocationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller : object {
    private static ExportTaskUnmarshaller _instance;
    public static ExportTaskUnmarshaller Instance { get; }
    private static ExportTaskUnmarshaller();
    public sealed virtual ExportTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTask Unmarshall(JsonUnmarshallerContext context);
    public static ExportTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportToS3TaskUnmarshaller : object {
    private static ExportToS3TaskUnmarshaller _instance;
    public static ExportToS3TaskUnmarshaller Instance { get; }
    private static ExportToS3TaskUnmarshaller();
    public sealed virtual ExportToS3Task Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportToS3Task Unmarshall(JsonUnmarshallerContext context);
    public static ExportToS3TaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportTransitGatewayRoutesRequestMarshaller : object {
    private static ExportTransitGatewayRoutesRequestMarshaller _instance;
    public static ExportTransitGatewayRoutesRequestMarshaller Instance { get; }
    private static ExportTransitGatewayRoutesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExportTransitGatewayRoutesRequest publicRequest);
    internal static ExportTransitGatewayRoutesRequestMarshaller GetInstance();
    public static ExportTransitGatewayRoutesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportTransitGatewayRoutesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ExportTransitGatewayRoutesResponseUnmarshaller _instance;
    public static ExportTransitGatewayRoutesResponseUnmarshaller Instance { get; }
    private static ExportTransitGatewayRoutesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExportTransitGatewayRoutesResponseUnmarshaller GetInstance();
    public static ExportTransitGatewayRoutesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FailedCapacityReservationFleetCancellationResultUnmarshaller : object {
    private static FailedCapacityReservationFleetCancellationResultUnmarshaller _instance;
    public static FailedCapacityReservationFleetCancellationResultUnmarshaller Instance { get; }
    private static FailedCapacityReservationFleetCancellationResultUnmarshaller();
    public sealed virtual FailedCapacityReservationFleetCancellationResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FailedCapacityReservationFleetCancellationResult Unmarshall(JsonUnmarshallerContext context);
    public static FailedCapacityReservationFleetCancellationResultUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FailedQueuedPurchaseDeletionUnmarshaller : object {
    private static FailedQueuedPurchaseDeletionUnmarshaller _instance;
    public static FailedQueuedPurchaseDeletionUnmarshaller Instance { get; }
    private static FailedQueuedPurchaseDeletionUnmarshaller();
    public sealed virtual FailedQueuedPurchaseDeletion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FailedQueuedPurchaseDeletion Unmarshall(JsonUnmarshallerContext context);
    public static FailedQueuedPurchaseDeletionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FastLaunchLaunchTemplateSpecificationResponseUnmarshaller : object {
    private static FastLaunchLaunchTemplateSpecificationResponseUnmarshaller _instance;
    public static FastLaunchLaunchTemplateSpecificationResponseUnmarshaller Instance { get; }
    private static FastLaunchLaunchTemplateSpecificationResponseUnmarshaller();
    public sealed virtual FastLaunchLaunchTemplateSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FastLaunchLaunchTemplateSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static FastLaunchLaunchTemplateSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FastLaunchSnapshotConfigurationResponseUnmarshaller : object {
    private static FastLaunchSnapshotConfigurationResponseUnmarshaller _instance;
    public static FastLaunchSnapshotConfigurationResponseUnmarshaller Instance { get; }
    private static FastLaunchSnapshotConfigurationResponseUnmarshaller();
    public sealed virtual FastLaunchSnapshotConfigurationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FastLaunchSnapshotConfigurationResponse Unmarshall(JsonUnmarshallerContext context);
    public static FastLaunchSnapshotConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FederatedAuthenticationUnmarshaller : object {
    private static FederatedAuthenticationUnmarshaller _instance;
    public static FederatedAuthenticationUnmarshaller Instance { get; }
    private static FederatedAuthenticationUnmarshaller();
    public sealed virtual FederatedAuthentication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FederatedAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static FederatedAuthenticationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FilterPortRangeUnmarshaller : object {
    private static FilterPortRangeUnmarshaller _instance;
    public static FilterPortRangeUnmarshaller Instance { get; }
    private static FilterPortRangeUnmarshaller();
    public sealed virtual FilterPortRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FilterPortRange Unmarshall(JsonUnmarshallerContext context);
    public static FilterPortRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FirewallStatefulRuleUnmarshaller : object {
    private static FirewallStatefulRuleUnmarshaller _instance;
    public static FirewallStatefulRuleUnmarshaller Instance { get; }
    private static FirewallStatefulRuleUnmarshaller();
    public sealed virtual FirewallStatefulRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FirewallStatefulRule Unmarshall(JsonUnmarshallerContext context);
    public static FirewallStatefulRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FirewallStatelessRuleUnmarshaller : object {
    private static FirewallStatelessRuleUnmarshaller _instance;
    public static FirewallStatelessRuleUnmarshaller Instance { get; }
    private static FirewallStatelessRuleUnmarshaller();
    public sealed virtual FirewallStatelessRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FirewallStatelessRule Unmarshall(JsonUnmarshallerContext context);
    public static FirewallStatelessRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FleetCapacityReservationUnmarshaller : object {
    private static FleetCapacityReservationUnmarshaller _instance;
    public static FleetCapacityReservationUnmarshaller Instance { get; }
    private static FleetCapacityReservationUnmarshaller();
    public sealed virtual FleetCapacityReservation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetCapacityReservation Unmarshall(JsonUnmarshallerContext context);
    public static FleetCapacityReservationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FleetDataUnmarshaller : object {
    private static FleetDataUnmarshaller _instance;
    public static FleetDataUnmarshaller Instance { get; }
    private static FleetDataUnmarshaller();
    public sealed virtual FleetData Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetData Unmarshall(JsonUnmarshallerContext context);
    public static FleetDataUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FleetLaunchTemplateConfigUnmarshaller : object {
    private static FleetLaunchTemplateConfigUnmarshaller _instance;
    public static FleetLaunchTemplateConfigUnmarshaller Instance { get; }
    private static FleetLaunchTemplateConfigUnmarshaller();
    public sealed virtual FleetLaunchTemplateConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetLaunchTemplateConfig Unmarshall(JsonUnmarshallerContext context);
    public static FleetLaunchTemplateConfigUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FleetLaunchTemplateOverridesUnmarshaller : object {
    private static FleetLaunchTemplateOverridesUnmarshaller _instance;
    public static FleetLaunchTemplateOverridesUnmarshaller Instance { get; }
    private static FleetLaunchTemplateOverridesUnmarshaller();
    public sealed virtual FleetLaunchTemplateOverrides Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetLaunchTemplateOverrides Unmarshall(JsonUnmarshallerContext context);
    public static FleetLaunchTemplateOverridesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FleetLaunchTemplateSpecificationUnmarshaller : object {
    private static FleetLaunchTemplateSpecificationUnmarshaller _instance;
    public static FleetLaunchTemplateSpecificationUnmarshaller Instance { get; }
    private static FleetLaunchTemplateSpecificationUnmarshaller();
    public sealed virtual FleetLaunchTemplateSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetLaunchTemplateSpecification Unmarshall(JsonUnmarshallerContext context);
    public static FleetLaunchTemplateSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FleetSpotCapacityRebalanceUnmarshaller : object {
    private static FleetSpotCapacityRebalanceUnmarshaller _instance;
    public static FleetSpotCapacityRebalanceUnmarshaller Instance { get; }
    private static FleetSpotCapacityRebalanceUnmarshaller();
    public sealed virtual FleetSpotCapacityRebalance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetSpotCapacityRebalance Unmarshall(JsonUnmarshallerContext context);
    public static FleetSpotCapacityRebalanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FleetSpotMaintenanceStrategiesUnmarshaller : object {
    private static FleetSpotMaintenanceStrategiesUnmarshaller _instance;
    public static FleetSpotMaintenanceStrategiesUnmarshaller Instance { get; }
    private static FleetSpotMaintenanceStrategiesUnmarshaller();
    public sealed virtual FleetSpotMaintenanceStrategies Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetSpotMaintenanceStrategies Unmarshall(JsonUnmarshallerContext context);
    public static FleetSpotMaintenanceStrategiesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FlowLogUnmarshaller : object {
    private static FlowLogUnmarshaller _instance;
    public static FlowLogUnmarshaller Instance { get; }
    private static FlowLogUnmarshaller();
    public sealed virtual FlowLog Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FlowLog Unmarshall(JsonUnmarshallerContext context);
    public static FlowLogUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FpgaDeviceInfoUnmarshaller : object {
    private static FpgaDeviceInfoUnmarshaller _instance;
    public static FpgaDeviceInfoUnmarshaller Instance { get; }
    private static FpgaDeviceInfoUnmarshaller();
    public sealed virtual FpgaDeviceInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FpgaDeviceInfo Unmarshall(JsonUnmarshallerContext context);
    public static FpgaDeviceInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FpgaDeviceMemoryInfoUnmarshaller : object {
    private static FpgaDeviceMemoryInfoUnmarshaller _instance;
    public static FpgaDeviceMemoryInfoUnmarshaller Instance { get; }
    private static FpgaDeviceMemoryInfoUnmarshaller();
    public sealed virtual FpgaDeviceMemoryInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FpgaDeviceMemoryInfo Unmarshall(JsonUnmarshallerContext context);
    public static FpgaDeviceMemoryInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FpgaImageAttributeUnmarshaller : object {
    private static FpgaImageAttributeUnmarshaller _instance;
    public static FpgaImageAttributeUnmarshaller Instance { get; }
    private static FpgaImageAttributeUnmarshaller();
    public sealed virtual FpgaImageAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FpgaImageAttribute Unmarshall(JsonUnmarshallerContext context);
    public static FpgaImageAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FpgaImageStateUnmarshaller : object {
    private static FpgaImageStateUnmarshaller _instance;
    public static FpgaImageStateUnmarshaller Instance { get; }
    private static FpgaImageStateUnmarshaller();
    public sealed virtual FpgaImageState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FpgaImageState Unmarshall(JsonUnmarshallerContext context);
    public static FpgaImageStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FpgaImageUnmarshaller : object {
    private static FpgaImageUnmarshaller _instance;
    public static FpgaImageUnmarshaller Instance { get; }
    private static FpgaImageUnmarshaller();
    public sealed virtual FpgaImage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FpgaImage Unmarshall(JsonUnmarshallerContext context);
    public static FpgaImageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FpgaInfoUnmarshaller : object {
    private static FpgaInfoUnmarshaller _instance;
    public static FpgaInfoUnmarshaller Instance { get; }
    private static FpgaInfoUnmarshaller();
    public sealed virtual FpgaInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FpgaInfo Unmarshall(JsonUnmarshallerContext context);
    public static FpgaInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetAssociatedEnclaveCertificateIamRolesRequestMarshaller : object {
    private static GetAssociatedEnclaveCertificateIamRolesRequestMarshaller _instance;
    public static GetAssociatedEnclaveCertificateIamRolesRequestMarshaller Instance { get; }
    private static GetAssociatedEnclaveCertificateIamRolesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAssociatedEnclaveCertificateIamRolesRequest publicRequest);
    internal static GetAssociatedEnclaveCertificateIamRolesRequestMarshaller GetInstance();
    public static GetAssociatedEnclaveCertificateIamRolesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetAssociatedEnclaveCertificateIamRolesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetAssociatedEnclaveCertificateIamRolesResponseUnmarshaller _instance;
    public static GetAssociatedEnclaveCertificateIamRolesResponseUnmarshaller Instance { get; }
    private static GetAssociatedEnclaveCertificateIamRolesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAssociatedEnclaveCertificateIamRolesResponseUnmarshaller GetInstance();
    public static GetAssociatedEnclaveCertificateIamRolesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetAssociatedIpv6PoolCidrsRequestMarshaller : object {
    private static GetAssociatedIpv6PoolCidrsRequestMarshaller _instance;
    public static GetAssociatedIpv6PoolCidrsRequestMarshaller Instance { get; }
    private static GetAssociatedIpv6PoolCidrsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAssociatedIpv6PoolCidrsRequest publicRequest);
    internal static GetAssociatedIpv6PoolCidrsRequestMarshaller GetInstance();
    public static GetAssociatedIpv6PoolCidrsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetAssociatedIpv6PoolCidrsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetAssociatedIpv6PoolCidrsResponseUnmarshaller _instance;
    public static GetAssociatedIpv6PoolCidrsResponseUnmarshaller Instance { get; }
    private static GetAssociatedIpv6PoolCidrsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAssociatedIpv6PoolCidrsResponseUnmarshaller GetInstance();
    public static GetAssociatedIpv6PoolCidrsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetAwsNetworkPerformanceDataRequestMarshaller : object {
    private static GetAwsNetworkPerformanceDataRequestMarshaller _instance;
    public static GetAwsNetworkPerformanceDataRequestMarshaller Instance { get; }
    private static GetAwsNetworkPerformanceDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAwsNetworkPerformanceDataRequest publicRequest);
    internal static GetAwsNetworkPerformanceDataRequestMarshaller GetInstance();
    public static GetAwsNetworkPerformanceDataRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetAwsNetworkPerformanceDataResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetAwsNetworkPerformanceDataResponseUnmarshaller _instance;
    public static GetAwsNetworkPerformanceDataResponseUnmarshaller Instance { get; }
    private static GetAwsNetworkPerformanceDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAwsNetworkPerformanceDataResponseUnmarshaller GetInstance();
    public static GetAwsNetworkPerformanceDataResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetCapacityReservationUsageRequestMarshaller : object {
    private static GetCapacityReservationUsageRequestMarshaller _instance;
    public static GetCapacityReservationUsageRequestMarshaller Instance { get; }
    private static GetCapacityReservationUsageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCapacityReservationUsageRequest publicRequest);
    internal static GetCapacityReservationUsageRequestMarshaller GetInstance();
    public static GetCapacityReservationUsageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetCapacityReservationUsageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetCapacityReservationUsageResponseUnmarshaller _instance;
    public static GetCapacityReservationUsageResponseUnmarshaller Instance { get; }
    private static GetCapacityReservationUsageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCapacityReservationUsageResponseUnmarshaller GetInstance();
    public static GetCapacityReservationUsageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetCoipPoolUsageRequestMarshaller : object {
    private static GetCoipPoolUsageRequestMarshaller _instance;
    public static GetCoipPoolUsageRequestMarshaller Instance { get; }
    private static GetCoipPoolUsageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCoipPoolUsageRequest publicRequest);
    internal static GetCoipPoolUsageRequestMarshaller GetInstance();
    public static GetCoipPoolUsageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetCoipPoolUsageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetCoipPoolUsageResponseUnmarshaller _instance;
    public static GetCoipPoolUsageResponseUnmarshaller Instance { get; }
    private static GetCoipPoolUsageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCoipPoolUsageResponseUnmarshaller GetInstance();
    public static GetCoipPoolUsageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputRequestMarshaller : object {
    private static GetConsoleOutputRequestMarshaller _instance;
    public static GetConsoleOutputRequestMarshaller Instance { get; }
    private static GetConsoleOutputRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetConsoleOutputRequest publicRequest);
    internal static GetConsoleOutputRequestMarshaller GetInstance();
    public static GetConsoleOutputRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetConsoleOutputResponseUnmarshaller _instance;
    public static GetConsoleOutputResponseUnmarshaller Instance { get; }
    private static GetConsoleOutputResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetConsoleOutputResponseUnmarshaller GetInstance();
    public static GetConsoleOutputResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotRequestMarshaller : object {
    private static GetConsoleScreenshotRequestMarshaller _instance;
    public static GetConsoleScreenshotRequestMarshaller Instance { get; }
    private static GetConsoleScreenshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetConsoleScreenshotRequest publicRequest);
    internal static GetConsoleScreenshotRequestMarshaller GetInstance();
    public static GetConsoleScreenshotRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetConsoleScreenshotResponseUnmarshaller _instance;
    public static GetConsoleScreenshotResponseUnmarshaller Instance { get; }
    private static GetConsoleScreenshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetConsoleScreenshotResponseUnmarshaller GetInstance();
    public static GetConsoleScreenshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetDefaultCreditSpecificationRequestMarshaller : object {
    private static GetDefaultCreditSpecificationRequestMarshaller _instance;
    public static GetDefaultCreditSpecificationRequestMarshaller Instance { get; }
    private static GetDefaultCreditSpecificationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDefaultCreditSpecificationRequest publicRequest);
    internal static GetDefaultCreditSpecificationRequestMarshaller GetInstance();
    public static GetDefaultCreditSpecificationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetDefaultCreditSpecificationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetDefaultCreditSpecificationResponseUnmarshaller _instance;
    public static GetDefaultCreditSpecificationResponseUnmarshaller Instance { get; }
    private static GetDefaultCreditSpecificationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDefaultCreditSpecificationResponseUnmarshaller GetInstance();
    public static GetDefaultCreditSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetEbsDefaultKmsKeyIdRequestMarshaller : object {
    private static GetEbsDefaultKmsKeyIdRequestMarshaller _instance;
    public static GetEbsDefaultKmsKeyIdRequestMarshaller Instance { get; }
    private static GetEbsDefaultKmsKeyIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEbsDefaultKmsKeyIdRequest publicRequest);
    internal static GetEbsDefaultKmsKeyIdRequestMarshaller GetInstance();
    public static GetEbsDefaultKmsKeyIdRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetEbsDefaultKmsKeyIdResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetEbsDefaultKmsKeyIdResponseUnmarshaller _instance;
    public static GetEbsDefaultKmsKeyIdResponseUnmarshaller Instance { get; }
    private static GetEbsDefaultKmsKeyIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEbsDefaultKmsKeyIdResponseUnmarshaller GetInstance();
    public static GetEbsDefaultKmsKeyIdResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetEbsEncryptionByDefaultRequestMarshaller : object {
    private static GetEbsEncryptionByDefaultRequestMarshaller _instance;
    public static GetEbsEncryptionByDefaultRequestMarshaller Instance { get; }
    private static GetEbsEncryptionByDefaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEbsEncryptionByDefaultRequest publicRequest);
    internal static GetEbsEncryptionByDefaultRequestMarshaller GetInstance();
    public static GetEbsEncryptionByDefaultRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetEbsEncryptionByDefaultResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetEbsEncryptionByDefaultResponseUnmarshaller _instance;
    public static GetEbsEncryptionByDefaultResponseUnmarshaller Instance { get; }
    private static GetEbsEncryptionByDefaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEbsEncryptionByDefaultResponseUnmarshaller GetInstance();
    public static GetEbsEncryptionByDefaultResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetFlowLogsIntegrationTemplateRequestMarshaller : object {
    private static GetFlowLogsIntegrationTemplateRequestMarshaller _instance;
    public static GetFlowLogsIntegrationTemplateRequestMarshaller Instance { get; }
    private static GetFlowLogsIntegrationTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFlowLogsIntegrationTemplateRequest publicRequest);
    internal static GetFlowLogsIntegrationTemplateRequestMarshaller GetInstance();
    public static GetFlowLogsIntegrationTemplateRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetFlowLogsIntegrationTemplateResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetFlowLogsIntegrationTemplateResponseUnmarshaller _instance;
    public static GetFlowLogsIntegrationTemplateResponseUnmarshaller Instance { get; }
    private static GetFlowLogsIntegrationTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFlowLogsIntegrationTemplateResponseUnmarshaller GetInstance();
    public static GetFlowLogsIntegrationTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetGroupsForCapacityReservationRequestMarshaller : object {
    private static GetGroupsForCapacityReservationRequestMarshaller _instance;
    public static GetGroupsForCapacityReservationRequestMarshaller Instance { get; }
    private static GetGroupsForCapacityReservationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetGroupsForCapacityReservationRequest publicRequest);
    internal static GetGroupsForCapacityReservationRequestMarshaller GetInstance();
    public static GetGroupsForCapacityReservationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetGroupsForCapacityReservationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetGroupsForCapacityReservationResponseUnmarshaller _instance;
    public static GetGroupsForCapacityReservationResponseUnmarshaller Instance { get; }
    private static GetGroupsForCapacityReservationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetGroupsForCapacityReservationResponseUnmarshaller GetInstance();
    public static GetGroupsForCapacityReservationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewRequestMarshaller : object {
    private static GetHostReservationPurchasePreviewRequestMarshaller _instance;
    public static GetHostReservationPurchasePreviewRequestMarshaller Instance { get; }
    private static GetHostReservationPurchasePreviewRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetHostReservationPurchasePreviewRequest publicRequest);
    internal static GetHostReservationPurchasePreviewRequestMarshaller GetInstance();
    public static GetHostReservationPurchasePreviewRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetHostReservationPurchasePreviewResponseUnmarshaller _instance;
    public static GetHostReservationPurchasePreviewResponseUnmarshaller Instance { get; }
    private static GetHostReservationPurchasePreviewResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetHostReservationPurchasePreviewResponseUnmarshaller GetInstance();
    public static GetHostReservationPurchasePreviewResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetImageBlockPublicAccessStateRequestMarshaller : object {
    private static GetImageBlockPublicAccessStateRequestMarshaller _instance;
    public static GetImageBlockPublicAccessStateRequestMarshaller Instance { get; }
    private static GetImageBlockPublicAccessStateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetImageBlockPublicAccessStateRequest publicRequest);
    internal static GetImageBlockPublicAccessStateRequestMarshaller GetInstance();
    public static GetImageBlockPublicAccessStateRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetImageBlockPublicAccessStateResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetImageBlockPublicAccessStateResponseUnmarshaller _instance;
    public static GetImageBlockPublicAccessStateResponseUnmarshaller Instance { get; }
    private static GetImageBlockPublicAccessStateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetImageBlockPublicAccessStateResponseUnmarshaller GetInstance();
    public static GetImageBlockPublicAccessStateResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceMetadataDefaultsRequestMarshaller : object {
    private static GetInstanceMetadataDefaultsRequestMarshaller _instance;
    public static GetInstanceMetadataDefaultsRequestMarshaller Instance { get; }
    private static GetInstanceMetadataDefaultsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInstanceMetadataDefaultsRequest publicRequest);
    internal static GetInstanceMetadataDefaultsRequestMarshaller GetInstance();
    public static GetInstanceMetadataDefaultsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceMetadataDefaultsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetInstanceMetadataDefaultsResponseUnmarshaller _instance;
    public static GetInstanceMetadataDefaultsResponseUnmarshaller Instance { get; }
    private static GetInstanceMetadataDefaultsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInstanceMetadataDefaultsResponseUnmarshaller GetInstance();
    public static GetInstanceMetadataDefaultsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceTpmEkPubRequestMarshaller : object {
    private static GetInstanceTpmEkPubRequestMarshaller _instance;
    public static GetInstanceTpmEkPubRequestMarshaller Instance { get; }
    private static GetInstanceTpmEkPubRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInstanceTpmEkPubRequest publicRequest);
    internal static GetInstanceTpmEkPubRequestMarshaller GetInstance();
    public static GetInstanceTpmEkPubRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceTpmEkPubResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetInstanceTpmEkPubResponseUnmarshaller _instance;
    public static GetInstanceTpmEkPubResponseUnmarshaller Instance { get; }
    private static GetInstanceTpmEkPubResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInstanceTpmEkPubResponseUnmarshaller GetInstance();
    public static GetInstanceTpmEkPubResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceTypesFromInstanceRequirementsRequestMarshaller : object {
    private static GetInstanceTypesFromInstanceRequirementsRequestMarshaller _instance;
    public static GetInstanceTypesFromInstanceRequirementsRequestMarshaller Instance { get; }
    private static GetInstanceTypesFromInstanceRequirementsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInstanceTypesFromInstanceRequirementsRequest publicRequest);
    internal static GetInstanceTypesFromInstanceRequirementsRequestMarshaller GetInstance();
    public static GetInstanceTypesFromInstanceRequirementsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceTypesFromInstanceRequirementsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetInstanceTypesFromInstanceRequirementsResponseUnmarshaller _instance;
    public static GetInstanceTypesFromInstanceRequirementsResponseUnmarshaller Instance { get; }
    private static GetInstanceTypesFromInstanceRequirementsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInstanceTypesFromInstanceRequirementsResponseUnmarshaller GetInstance();
    public static GetInstanceTypesFromInstanceRequirementsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceUefiDataRequestMarshaller : object {
    private static GetInstanceUefiDataRequestMarshaller _instance;
    public static GetInstanceUefiDataRequestMarshaller Instance { get; }
    private static GetInstanceUefiDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInstanceUefiDataRequest publicRequest);
    internal static GetInstanceUefiDataRequestMarshaller GetInstance();
    public static GetInstanceUefiDataRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetInstanceUefiDataResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetInstanceUefiDataResponseUnmarshaller _instance;
    public static GetInstanceUefiDataResponseUnmarshaller Instance { get; }
    private static GetInstanceUefiDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInstanceUefiDataResponseUnmarshaller GetInstance();
    public static GetInstanceUefiDataResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamAddressHistoryRequestMarshaller : object {
    private static GetIpamAddressHistoryRequestMarshaller _instance;
    public static GetIpamAddressHistoryRequestMarshaller Instance { get; }
    private static GetIpamAddressHistoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIpamAddressHistoryRequest publicRequest);
    internal static GetIpamAddressHistoryRequestMarshaller GetInstance();
    public static GetIpamAddressHistoryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamAddressHistoryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetIpamAddressHistoryResponseUnmarshaller _instance;
    public static GetIpamAddressHistoryResponseUnmarshaller Instance { get; }
    private static GetIpamAddressHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIpamAddressHistoryResponseUnmarshaller GetInstance();
    public static GetIpamAddressHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamDiscoveredAccountsRequestMarshaller : object {
    private static GetIpamDiscoveredAccountsRequestMarshaller _instance;
    public static GetIpamDiscoveredAccountsRequestMarshaller Instance { get; }
    private static GetIpamDiscoveredAccountsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIpamDiscoveredAccountsRequest publicRequest);
    internal static GetIpamDiscoveredAccountsRequestMarshaller GetInstance();
    public static GetIpamDiscoveredAccountsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamDiscoveredAccountsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetIpamDiscoveredAccountsResponseUnmarshaller _instance;
    public static GetIpamDiscoveredAccountsResponseUnmarshaller Instance { get; }
    private static GetIpamDiscoveredAccountsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIpamDiscoveredAccountsResponseUnmarshaller GetInstance();
    public static GetIpamDiscoveredAccountsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamDiscoveredPublicAddressesRequestMarshaller : object {
    private static GetIpamDiscoveredPublicAddressesRequestMarshaller _instance;
    public static GetIpamDiscoveredPublicAddressesRequestMarshaller Instance { get; }
    private static GetIpamDiscoveredPublicAddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIpamDiscoveredPublicAddressesRequest publicRequest);
    internal static GetIpamDiscoveredPublicAddressesRequestMarshaller GetInstance();
    public static GetIpamDiscoveredPublicAddressesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamDiscoveredPublicAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetIpamDiscoveredPublicAddressesResponseUnmarshaller _instance;
    public static GetIpamDiscoveredPublicAddressesResponseUnmarshaller Instance { get; }
    private static GetIpamDiscoveredPublicAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIpamDiscoveredPublicAddressesResponseUnmarshaller GetInstance();
    public static GetIpamDiscoveredPublicAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamDiscoveredResourceCidrsRequestMarshaller : object {
    private static GetIpamDiscoveredResourceCidrsRequestMarshaller _instance;
    public static GetIpamDiscoveredResourceCidrsRequestMarshaller Instance { get; }
    private static GetIpamDiscoveredResourceCidrsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIpamDiscoveredResourceCidrsRequest publicRequest);
    internal static GetIpamDiscoveredResourceCidrsRequestMarshaller GetInstance();
    public static GetIpamDiscoveredResourceCidrsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamDiscoveredResourceCidrsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetIpamDiscoveredResourceCidrsResponseUnmarshaller _instance;
    public static GetIpamDiscoveredResourceCidrsResponseUnmarshaller Instance { get; }
    private static GetIpamDiscoveredResourceCidrsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIpamDiscoveredResourceCidrsResponseUnmarshaller GetInstance();
    public static GetIpamDiscoveredResourceCidrsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamPoolAllocationsRequestMarshaller : object {
    private static GetIpamPoolAllocationsRequestMarshaller _instance;
    public static GetIpamPoolAllocationsRequestMarshaller Instance { get; }
    private static GetIpamPoolAllocationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIpamPoolAllocationsRequest publicRequest);
    internal static GetIpamPoolAllocationsRequestMarshaller GetInstance();
    public static GetIpamPoolAllocationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamPoolAllocationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetIpamPoolAllocationsResponseUnmarshaller _instance;
    public static GetIpamPoolAllocationsResponseUnmarshaller Instance { get; }
    private static GetIpamPoolAllocationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIpamPoolAllocationsResponseUnmarshaller GetInstance();
    public static GetIpamPoolAllocationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamPoolCidrsRequestMarshaller : object {
    private static GetIpamPoolCidrsRequestMarshaller _instance;
    public static GetIpamPoolCidrsRequestMarshaller Instance { get; }
    private static GetIpamPoolCidrsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIpamPoolCidrsRequest publicRequest);
    internal static GetIpamPoolCidrsRequestMarshaller GetInstance();
    public static GetIpamPoolCidrsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamPoolCidrsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetIpamPoolCidrsResponseUnmarshaller _instance;
    public static GetIpamPoolCidrsResponseUnmarshaller Instance { get; }
    private static GetIpamPoolCidrsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIpamPoolCidrsResponseUnmarshaller GetInstance();
    public static GetIpamPoolCidrsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamResourceCidrsRequestMarshaller : object {
    private static GetIpamResourceCidrsRequestMarshaller _instance;
    public static GetIpamResourceCidrsRequestMarshaller Instance { get; }
    private static GetIpamResourceCidrsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIpamResourceCidrsRequest publicRequest);
    internal static GetIpamResourceCidrsRequestMarshaller GetInstance();
    public static GetIpamResourceCidrsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetIpamResourceCidrsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetIpamResourceCidrsResponseUnmarshaller _instance;
    public static GetIpamResourceCidrsResponseUnmarshaller Instance { get; }
    private static GetIpamResourceCidrsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIpamResourceCidrsResponseUnmarshaller GetInstance();
    public static GetIpamResourceCidrsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetLaunchTemplateDataRequestMarshaller : object {
    private static GetLaunchTemplateDataRequestMarshaller _instance;
    public static GetLaunchTemplateDataRequestMarshaller Instance { get; }
    private static GetLaunchTemplateDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLaunchTemplateDataRequest publicRequest);
    internal static GetLaunchTemplateDataRequestMarshaller GetInstance();
    public static GetLaunchTemplateDataRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetLaunchTemplateDataResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetLaunchTemplateDataResponseUnmarshaller _instance;
    public static GetLaunchTemplateDataResponseUnmarshaller Instance { get; }
    private static GetLaunchTemplateDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLaunchTemplateDataResponseUnmarshaller GetInstance();
    public static GetLaunchTemplateDataResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetManagedPrefixListAssociationsRequestMarshaller : object {
    private static GetManagedPrefixListAssociationsRequestMarshaller _instance;
    public static GetManagedPrefixListAssociationsRequestMarshaller Instance { get; }
    private static GetManagedPrefixListAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetManagedPrefixListAssociationsRequest publicRequest);
    internal static GetManagedPrefixListAssociationsRequestMarshaller GetInstance();
    public static GetManagedPrefixListAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetManagedPrefixListAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetManagedPrefixListAssociationsResponseUnmarshaller _instance;
    public static GetManagedPrefixListAssociationsResponseUnmarshaller Instance { get; }
    private static GetManagedPrefixListAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetManagedPrefixListAssociationsResponseUnmarshaller GetInstance();
    public static GetManagedPrefixListAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetManagedPrefixListEntriesRequestMarshaller : object {
    private static GetManagedPrefixListEntriesRequestMarshaller _instance;
    public static GetManagedPrefixListEntriesRequestMarshaller Instance { get; }
    private static GetManagedPrefixListEntriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetManagedPrefixListEntriesRequest publicRequest);
    internal static GetManagedPrefixListEntriesRequestMarshaller GetInstance();
    public static GetManagedPrefixListEntriesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetManagedPrefixListEntriesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetManagedPrefixListEntriesResponseUnmarshaller _instance;
    public static GetManagedPrefixListEntriesResponseUnmarshaller Instance { get; }
    private static GetManagedPrefixListEntriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetManagedPrefixListEntriesResponseUnmarshaller GetInstance();
    public static GetManagedPrefixListEntriesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetNetworkInsightsAccessScopeAnalysisFindingsRequestMarshaller : object {
    private static GetNetworkInsightsAccessScopeAnalysisFindingsRequestMarshaller _instance;
    public static GetNetworkInsightsAccessScopeAnalysisFindingsRequestMarshaller Instance { get; }
    private static GetNetworkInsightsAccessScopeAnalysisFindingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetNetworkInsightsAccessScopeAnalysisFindingsRequest publicRequest);
    internal static GetNetworkInsightsAccessScopeAnalysisFindingsRequestMarshaller GetInstance();
    public static GetNetworkInsightsAccessScopeAnalysisFindingsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetNetworkInsightsAccessScopeAnalysisFindingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetNetworkInsightsAccessScopeAnalysisFindingsResponseUnmarshaller _instance;
    public static GetNetworkInsightsAccessScopeAnalysisFindingsResponseUnmarshaller Instance { get; }
    private static GetNetworkInsightsAccessScopeAnalysisFindingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetNetworkInsightsAccessScopeAnalysisFindingsResponseUnmarshaller GetInstance();
    public static GetNetworkInsightsAccessScopeAnalysisFindingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetNetworkInsightsAccessScopeContentRequestMarshaller : object {
    private static GetNetworkInsightsAccessScopeContentRequestMarshaller _instance;
    public static GetNetworkInsightsAccessScopeContentRequestMarshaller Instance { get; }
    private static GetNetworkInsightsAccessScopeContentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetNetworkInsightsAccessScopeContentRequest publicRequest);
    internal static GetNetworkInsightsAccessScopeContentRequestMarshaller GetInstance();
    public static GetNetworkInsightsAccessScopeContentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetNetworkInsightsAccessScopeContentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetNetworkInsightsAccessScopeContentResponseUnmarshaller _instance;
    public static GetNetworkInsightsAccessScopeContentResponseUnmarshaller Instance { get; }
    private static GetNetworkInsightsAccessScopeContentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetNetworkInsightsAccessScopeContentResponseUnmarshaller GetInstance();
    public static GetNetworkInsightsAccessScopeContentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataRequestMarshaller : object {
    private static GetPasswordDataRequestMarshaller _instance;
    public static GetPasswordDataRequestMarshaller Instance { get; }
    private static GetPasswordDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPasswordDataRequest publicRequest);
    internal static GetPasswordDataRequestMarshaller GetInstance();
    public static GetPasswordDataRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetPasswordDataResponseUnmarshaller _instance;
    public static GetPasswordDataResponseUnmarshaller Instance { get; }
    private static GetPasswordDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPasswordDataResponseUnmarshaller GetInstance();
    public static GetPasswordDataResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteRequestMarshaller : object {
    private static GetReservedInstancesExchangeQuoteRequestMarshaller _instance;
    public static GetReservedInstancesExchangeQuoteRequestMarshaller Instance { get; }
    private static GetReservedInstancesExchangeQuoteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetReservedInstancesExchangeQuoteRequest publicRequest);
    internal static GetReservedInstancesExchangeQuoteRequestMarshaller GetInstance();
    public static GetReservedInstancesExchangeQuoteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetReservedInstancesExchangeQuoteResponseUnmarshaller _instance;
    public static GetReservedInstancesExchangeQuoteResponseUnmarshaller Instance { get; }
    private static GetReservedInstancesExchangeQuoteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetReservedInstancesExchangeQuoteResponseUnmarshaller GetInstance();
    public static GetReservedInstancesExchangeQuoteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSecurityGroupsForVpcRequestMarshaller : object {
    private static GetSecurityGroupsForVpcRequestMarshaller _instance;
    public static GetSecurityGroupsForVpcRequestMarshaller Instance { get; }
    private static GetSecurityGroupsForVpcRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSecurityGroupsForVpcRequest publicRequest);
    internal static GetSecurityGroupsForVpcRequestMarshaller GetInstance();
    public static GetSecurityGroupsForVpcRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSecurityGroupsForVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetSecurityGroupsForVpcResponseUnmarshaller _instance;
    public static GetSecurityGroupsForVpcResponseUnmarshaller Instance { get; }
    private static GetSecurityGroupsForVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSecurityGroupsForVpcResponseUnmarshaller GetInstance();
    public static GetSecurityGroupsForVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSerialConsoleAccessStatusRequestMarshaller : object {
    private static GetSerialConsoleAccessStatusRequestMarshaller _instance;
    public static GetSerialConsoleAccessStatusRequestMarshaller Instance { get; }
    private static GetSerialConsoleAccessStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSerialConsoleAccessStatusRequest publicRequest);
    internal static GetSerialConsoleAccessStatusRequestMarshaller GetInstance();
    public static GetSerialConsoleAccessStatusRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSerialConsoleAccessStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetSerialConsoleAccessStatusResponseUnmarshaller _instance;
    public static GetSerialConsoleAccessStatusResponseUnmarshaller Instance { get; }
    private static GetSerialConsoleAccessStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSerialConsoleAccessStatusResponseUnmarshaller GetInstance();
    public static GetSerialConsoleAccessStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSnapshotBlockPublicAccessStateRequestMarshaller : object {
    private static GetSnapshotBlockPublicAccessStateRequestMarshaller _instance;
    public static GetSnapshotBlockPublicAccessStateRequestMarshaller Instance { get; }
    private static GetSnapshotBlockPublicAccessStateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSnapshotBlockPublicAccessStateRequest publicRequest);
    internal static GetSnapshotBlockPublicAccessStateRequestMarshaller GetInstance();
    public static GetSnapshotBlockPublicAccessStateRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSnapshotBlockPublicAccessStateResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetSnapshotBlockPublicAccessStateResponseUnmarshaller _instance;
    public static GetSnapshotBlockPublicAccessStateResponseUnmarshaller Instance { get; }
    private static GetSnapshotBlockPublicAccessStateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSnapshotBlockPublicAccessStateResponseUnmarshaller GetInstance();
    public static GetSnapshotBlockPublicAccessStateResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSpotPlacementScoresRequestMarshaller : object {
    private static GetSpotPlacementScoresRequestMarshaller _instance;
    public static GetSpotPlacementScoresRequestMarshaller Instance { get; }
    private static GetSpotPlacementScoresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSpotPlacementScoresRequest publicRequest);
    internal static GetSpotPlacementScoresRequestMarshaller GetInstance();
    public static GetSpotPlacementScoresRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSpotPlacementScoresResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetSpotPlacementScoresResponseUnmarshaller _instance;
    public static GetSpotPlacementScoresResponseUnmarshaller Instance { get; }
    private static GetSpotPlacementScoresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSpotPlacementScoresResponseUnmarshaller GetInstance();
    public static GetSpotPlacementScoresResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSubnetCidrReservationsRequestMarshaller : object {
    private static GetSubnetCidrReservationsRequestMarshaller _instance;
    public static GetSubnetCidrReservationsRequestMarshaller Instance { get; }
    private static GetSubnetCidrReservationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSubnetCidrReservationsRequest publicRequest);
    internal static GetSubnetCidrReservationsRequestMarshaller GetInstance();
    public static GetSubnetCidrReservationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetSubnetCidrReservationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetSubnetCidrReservationsResponseUnmarshaller _instance;
    public static GetSubnetCidrReservationsResponseUnmarshaller Instance { get; }
    private static GetSubnetCidrReservationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSubnetCidrReservationsResponseUnmarshaller GetInstance();
    public static GetSubnetCidrReservationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayAttachmentPropagationsRequestMarshaller : object {
    private static GetTransitGatewayAttachmentPropagationsRequestMarshaller _instance;
    public static GetTransitGatewayAttachmentPropagationsRequestMarshaller Instance { get; }
    private static GetTransitGatewayAttachmentPropagationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTransitGatewayAttachmentPropagationsRequest publicRequest);
    internal static GetTransitGatewayAttachmentPropagationsRequestMarshaller GetInstance();
    public static GetTransitGatewayAttachmentPropagationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayAttachmentPropagationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetTransitGatewayAttachmentPropagationsResponseUnmarshaller _instance;
    public static GetTransitGatewayAttachmentPropagationsResponseUnmarshaller Instance { get; }
    private static GetTransitGatewayAttachmentPropagationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTransitGatewayAttachmentPropagationsResponseUnmarshaller GetInstance();
    public static GetTransitGatewayAttachmentPropagationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayMulticastDomainAssociationsRequestMarshaller : object {
    private static GetTransitGatewayMulticastDomainAssociationsRequestMarshaller _instance;
    public static GetTransitGatewayMulticastDomainAssociationsRequestMarshaller Instance { get; }
    private static GetTransitGatewayMulticastDomainAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTransitGatewayMulticastDomainAssociationsRequest publicRequest);
    internal static GetTransitGatewayMulticastDomainAssociationsRequestMarshaller GetInstance();
    public static GetTransitGatewayMulticastDomainAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayMulticastDomainAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetTransitGatewayMulticastDomainAssociationsResponseUnmarshaller _instance;
    public static GetTransitGatewayMulticastDomainAssociationsResponseUnmarshaller Instance { get; }
    private static GetTransitGatewayMulticastDomainAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTransitGatewayMulticastDomainAssociationsResponseUnmarshaller GetInstance();
    public static GetTransitGatewayMulticastDomainAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayPolicyTableAssociationsRequestMarshaller : object {
    private static GetTransitGatewayPolicyTableAssociationsRequestMarshaller _instance;
    public static GetTransitGatewayPolicyTableAssociationsRequestMarshaller Instance { get; }
    private static GetTransitGatewayPolicyTableAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTransitGatewayPolicyTableAssociationsRequest publicRequest);
    internal static GetTransitGatewayPolicyTableAssociationsRequestMarshaller GetInstance();
    public static GetTransitGatewayPolicyTableAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayPolicyTableAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetTransitGatewayPolicyTableAssociationsResponseUnmarshaller _instance;
    public static GetTransitGatewayPolicyTableAssociationsResponseUnmarshaller Instance { get; }
    private static GetTransitGatewayPolicyTableAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTransitGatewayPolicyTableAssociationsResponseUnmarshaller GetInstance();
    public static GetTransitGatewayPolicyTableAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayPolicyTableEntriesRequestMarshaller : object {
    private static GetTransitGatewayPolicyTableEntriesRequestMarshaller _instance;
    public static GetTransitGatewayPolicyTableEntriesRequestMarshaller Instance { get; }
    private static GetTransitGatewayPolicyTableEntriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTransitGatewayPolicyTableEntriesRequest publicRequest);
    internal static GetTransitGatewayPolicyTableEntriesRequestMarshaller GetInstance();
    public static GetTransitGatewayPolicyTableEntriesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayPolicyTableEntriesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetTransitGatewayPolicyTableEntriesResponseUnmarshaller _instance;
    public static GetTransitGatewayPolicyTableEntriesResponseUnmarshaller Instance { get; }
    private static GetTransitGatewayPolicyTableEntriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTransitGatewayPolicyTableEntriesResponseUnmarshaller GetInstance();
    public static GetTransitGatewayPolicyTableEntriesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayPrefixListReferencesRequestMarshaller : object {
    private static GetTransitGatewayPrefixListReferencesRequestMarshaller _instance;
    public static GetTransitGatewayPrefixListReferencesRequestMarshaller Instance { get; }
    private static GetTransitGatewayPrefixListReferencesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTransitGatewayPrefixListReferencesRequest publicRequest);
    internal static GetTransitGatewayPrefixListReferencesRequestMarshaller GetInstance();
    public static GetTransitGatewayPrefixListReferencesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayPrefixListReferencesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetTransitGatewayPrefixListReferencesResponseUnmarshaller _instance;
    public static GetTransitGatewayPrefixListReferencesResponseUnmarshaller Instance { get; }
    private static GetTransitGatewayPrefixListReferencesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTransitGatewayPrefixListReferencesResponseUnmarshaller GetInstance();
    public static GetTransitGatewayPrefixListReferencesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayRouteTableAssociationsRequestMarshaller : object {
    private static GetTransitGatewayRouteTableAssociationsRequestMarshaller _instance;
    public static GetTransitGatewayRouteTableAssociationsRequestMarshaller Instance { get; }
    private static GetTransitGatewayRouteTableAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTransitGatewayRouteTableAssociationsRequest publicRequest);
    internal static GetTransitGatewayRouteTableAssociationsRequestMarshaller GetInstance();
    public static GetTransitGatewayRouteTableAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayRouteTableAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetTransitGatewayRouteTableAssociationsResponseUnmarshaller _instance;
    public static GetTransitGatewayRouteTableAssociationsResponseUnmarshaller Instance { get; }
    private static GetTransitGatewayRouteTableAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTransitGatewayRouteTableAssociationsResponseUnmarshaller GetInstance();
    public static GetTransitGatewayRouteTableAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayRouteTablePropagationsRequestMarshaller : object {
    private static GetTransitGatewayRouteTablePropagationsRequestMarshaller _instance;
    public static GetTransitGatewayRouteTablePropagationsRequestMarshaller Instance { get; }
    private static GetTransitGatewayRouteTablePropagationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTransitGatewayRouteTablePropagationsRequest publicRequest);
    internal static GetTransitGatewayRouteTablePropagationsRequestMarshaller GetInstance();
    public static GetTransitGatewayRouteTablePropagationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetTransitGatewayRouteTablePropagationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetTransitGatewayRouteTablePropagationsResponseUnmarshaller _instance;
    public static GetTransitGatewayRouteTablePropagationsResponseUnmarshaller Instance { get; }
    private static GetTransitGatewayRouteTablePropagationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTransitGatewayRouteTablePropagationsResponseUnmarshaller GetInstance();
    public static GetTransitGatewayRouteTablePropagationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVerifiedAccessEndpointPolicyRequestMarshaller : object {
    private static GetVerifiedAccessEndpointPolicyRequestMarshaller _instance;
    public static GetVerifiedAccessEndpointPolicyRequestMarshaller Instance { get; }
    private static GetVerifiedAccessEndpointPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVerifiedAccessEndpointPolicyRequest publicRequest);
    internal static GetVerifiedAccessEndpointPolicyRequestMarshaller GetInstance();
    public static GetVerifiedAccessEndpointPolicyRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVerifiedAccessEndpointPolicyResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetVerifiedAccessEndpointPolicyResponseUnmarshaller _instance;
    public static GetVerifiedAccessEndpointPolicyResponseUnmarshaller Instance { get; }
    private static GetVerifiedAccessEndpointPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVerifiedAccessEndpointPolicyResponseUnmarshaller GetInstance();
    public static GetVerifiedAccessEndpointPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVerifiedAccessGroupPolicyRequestMarshaller : object {
    private static GetVerifiedAccessGroupPolicyRequestMarshaller _instance;
    public static GetVerifiedAccessGroupPolicyRequestMarshaller Instance { get; }
    private static GetVerifiedAccessGroupPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVerifiedAccessGroupPolicyRequest publicRequest);
    internal static GetVerifiedAccessGroupPolicyRequestMarshaller GetInstance();
    public static GetVerifiedAccessGroupPolicyRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVerifiedAccessGroupPolicyResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetVerifiedAccessGroupPolicyResponseUnmarshaller _instance;
    public static GetVerifiedAccessGroupPolicyResponseUnmarshaller Instance { get; }
    private static GetVerifiedAccessGroupPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVerifiedAccessGroupPolicyResponseUnmarshaller GetInstance();
    public static GetVerifiedAccessGroupPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVpnConnectionDeviceSampleConfigurationRequestMarshaller : object {
    private static GetVpnConnectionDeviceSampleConfigurationRequestMarshaller _instance;
    public static GetVpnConnectionDeviceSampleConfigurationRequestMarshaller Instance { get; }
    private static GetVpnConnectionDeviceSampleConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVpnConnectionDeviceSampleConfigurationRequest publicRequest);
    internal static GetVpnConnectionDeviceSampleConfigurationRequestMarshaller GetInstance();
    public static GetVpnConnectionDeviceSampleConfigurationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVpnConnectionDeviceSampleConfigurationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetVpnConnectionDeviceSampleConfigurationResponseUnmarshaller _instance;
    public static GetVpnConnectionDeviceSampleConfigurationResponseUnmarshaller Instance { get; }
    private static GetVpnConnectionDeviceSampleConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVpnConnectionDeviceSampleConfigurationResponseUnmarshaller GetInstance();
    public static GetVpnConnectionDeviceSampleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVpnConnectionDeviceTypesRequestMarshaller : object {
    private static GetVpnConnectionDeviceTypesRequestMarshaller _instance;
    public static GetVpnConnectionDeviceTypesRequestMarshaller Instance { get; }
    private static GetVpnConnectionDeviceTypesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVpnConnectionDeviceTypesRequest publicRequest);
    internal static GetVpnConnectionDeviceTypesRequestMarshaller GetInstance();
    public static GetVpnConnectionDeviceTypesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVpnConnectionDeviceTypesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetVpnConnectionDeviceTypesResponseUnmarshaller _instance;
    public static GetVpnConnectionDeviceTypesResponseUnmarshaller Instance { get; }
    private static GetVpnConnectionDeviceTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVpnConnectionDeviceTypesResponseUnmarshaller GetInstance();
    public static GetVpnConnectionDeviceTypesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVpnTunnelReplacementStatusRequestMarshaller : object {
    private static GetVpnTunnelReplacementStatusRequestMarshaller _instance;
    public static GetVpnTunnelReplacementStatusRequestMarshaller Instance { get; }
    private static GetVpnTunnelReplacementStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVpnTunnelReplacementStatusRequest publicRequest);
    internal static GetVpnTunnelReplacementStatusRequestMarshaller GetInstance();
    public static GetVpnTunnelReplacementStatusRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetVpnTunnelReplacementStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetVpnTunnelReplacementStatusResponseUnmarshaller _instance;
    public static GetVpnTunnelReplacementStatusResponseUnmarshaller Instance { get; }
    private static GetVpnTunnelReplacementStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVpnTunnelReplacementStatusResponseUnmarshaller GetInstance();
    public static GetVpnTunnelReplacementStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GpuDeviceInfoUnmarshaller : object {
    private static GpuDeviceInfoUnmarshaller _instance;
    public static GpuDeviceInfoUnmarshaller Instance { get; }
    private static GpuDeviceInfoUnmarshaller();
    public sealed virtual GpuDeviceInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GpuDeviceInfo Unmarshall(JsonUnmarshallerContext context);
    public static GpuDeviceInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GpuDeviceMemoryInfoUnmarshaller : object {
    private static GpuDeviceMemoryInfoUnmarshaller _instance;
    public static GpuDeviceMemoryInfoUnmarshaller Instance { get; }
    private static GpuDeviceMemoryInfoUnmarshaller();
    public sealed virtual GpuDeviceMemoryInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GpuDeviceMemoryInfo Unmarshall(JsonUnmarshallerContext context);
    public static GpuDeviceMemoryInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GpuInfoUnmarshaller : object {
    private static GpuInfoUnmarshaller _instance;
    public static GpuInfoUnmarshaller Instance { get; }
    private static GpuInfoUnmarshaller();
    public sealed virtual GpuInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GpuInfo Unmarshall(JsonUnmarshallerContext context);
    public static GpuInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GroupIdentifierUnmarshaller : object {
    private static GroupIdentifierUnmarshaller _instance;
    public static GroupIdentifierUnmarshaller Instance { get; }
    private static GroupIdentifierUnmarshaller();
    public sealed virtual GroupIdentifier Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GroupIdentifier Unmarshall(JsonUnmarshallerContext context);
    public static GroupIdentifierUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HibernationOptionsUnmarshaller : object {
    private static HibernationOptionsUnmarshaller _instance;
    public static HibernationOptionsUnmarshaller Instance { get; }
    private static HibernationOptionsUnmarshaller();
    public sealed virtual HibernationOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HibernationOptions Unmarshall(JsonUnmarshallerContext context);
    public static HibernationOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HistoryRecordEntryUnmarshaller : object {
    private static HistoryRecordEntryUnmarshaller _instance;
    public static HistoryRecordEntryUnmarshaller Instance { get; }
    private static HistoryRecordEntryUnmarshaller();
    public sealed virtual HistoryRecordEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HistoryRecordEntry Unmarshall(JsonUnmarshallerContext context);
    public static HistoryRecordEntryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HistoryRecordUnmarshaller : object {
    private static HistoryRecordUnmarshaller _instance;
    public static HistoryRecordUnmarshaller Instance { get; }
    private static HistoryRecordUnmarshaller();
    public sealed virtual HistoryRecord Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HistoryRecord Unmarshall(JsonUnmarshallerContext context);
    public static HistoryRecordUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HostInstanceUnmarshaller : object {
    private static HostInstanceUnmarshaller _instance;
    public static HostInstanceUnmarshaller Instance { get; }
    private static HostInstanceUnmarshaller();
    public sealed virtual HostInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HostInstance Unmarshall(JsonUnmarshallerContext context);
    public static HostInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HostOfferingUnmarshaller : object {
    private static HostOfferingUnmarshaller _instance;
    public static HostOfferingUnmarshaller Instance { get; }
    private static HostOfferingUnmarshaller();
    public sealed virtual HostOffering Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HostOffering Unmarshall(JsonUnmarshallerContext context);
    public static HostOfferingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HostPropertiesUnmarshaller : object {
    private static HostPropertiesUnmarshaller _instance;
    public static HostPropertiesUnmarshaller Instance { get; }
    private static HostPropertiesUnmarshaller();
    public sealed virtual HostProperties Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HostProperties Unmarshall(JsonUnmarshallerContext context);
    public static HostPropertiesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HostReservationUnmarshaller : object {
    private static HostReservationUnmarshaller _instance;
    public static HostReservationUnmarshaller Instance { get; }
    private static HostReservationUnmarshaller();
    public sealed virtual HostReservation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HostReservation Unmarshall(JsonUnmarshallerContext context);
    public static HostReservationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HostUnmarshaller : object {
    private static HostUnmarshaller _instance;
    public static HostUnmarshaller Instance { get; }
    private static HostUnmarshaller();
    public sealed virtual Host Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Host Unmarshall(JsonUnmarshallerContext context);
    public static HostUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileAssociationUnmarshaller : object {
    private static IamInstanceProfileAssociationUnmarshaller _instance;
    public static IamInstanceProfileAssociationUnmarshaller Instance { get; }
    private static IamInstanceProfileAssociationUnmarshaller();
    public sealed virtual IamInstanceProfileAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamInstanceProfileAssociation Unmarshall(JsonUnmarshallerContext context);
    public static IamInstanceProfileAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileSpecificationUnmarshaller : object {
    private static IamInstanceProfileSpecificationUnmarshaller _instance;
    public static IamInstanceProfileSpecificationUnmarshaller Instance { get; }
    private static IamInstanceProfileSpecificationUnmarshaller();
    public sealed virtual IamInstanceProfileSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamInstanceProfileSpecification Unmarshall(JsonUnmarshallerContext context);
    public static IamInstanceProfileSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileUnmarshaller : object {
    private static IamInstanceProfileUnmarshaller _instance;
    public static IamInstanceProfileUnmarshaller Instance { get; }
    private static IamInstanceProfileUnmarshaller();
    public sealed virtual IamInstanceProfile Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamInstanceProfile Unmarshall(JsonUnmarshallerContext context);
    public static IamInstanceProfileUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IcmpTypeCodeUnmarshaller : object {
    private static IcmpTypeCodeUnmarshaller _instance;
    public static IcmpTypeCodeUnmarshaller Instance { get; }
    private static IcmpTypeCodeUnmarshaller();
    public sealed virtual IcmpTypeCode Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IcmpTypeCode Unmarshall(JsonUnmarshallerContext context);
    public static IcmpTypeCodeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IdFormatUnmarshaller : object {
    private static IdFormatUnmarshaller _instance;
    public static IdFormatUnmarshaller Instance { get; }
    private static IdFormatUnmarshaller();
    public sealed virtual IdFormat Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdFormat Unmarshall(JsonUnmarshallerContext context);
    public static IdFormatUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IKEVersionsListValueUnmarshaller : object {
    private static IKEVersionsListValueUnmarshaller _instance;
    public static IKEVersionsListValueUnmarshaller Instance { get; }
    private static IKEVersionsListValueUnmarshaller();
    public sealed virtual IKEVersionsListValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IKEVersionsListValue Unmarshall(JsonUnmarshallerContext context);
    public static IKEVersionsListValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImageAttributeUnmarshaller : object {
    private static ImageAttributeUnmarshaller _instance;
    public static ImageAttributeUnmarshaller Instance { get; }
    private static ImageAttributeUnmarshaller();
    public sealed virtual ImageAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImageAttribute Unmarshall(JsonUnmarshallerContext context);
    public static ImageAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImageRecycleBinInfoUnmarshaller : object {
    private static ImageRecycleBinInfoUnmarshaller _instance;
    public static ImageRecycleBinInfoUnmarshaller Instance { get; }
    private static ImageRecycleBinInfoUnmarshaller();
    public sealed virtual ImageRecycleBinInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImageRecycleBinInfo Unmarshall(JsonUnmarshallerContext context);
    public static ImageRecycleBinInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImageUnmarshaller : object {
    private static ImageUnmarshaller _instance;
    public static ImageUnmarshaller Instance { get; }
    private static ImageUnmarshaller();
    public sealed virtual Image Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Image Unmarshall(JsonUnmarshallerContext context);
    public static ImageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportClientVpnClientCertificateRevocationListRequestMarshaller : object {
    private static ImportClientVpnClientCertificateRevocationListRequestMarshaller _instance;
    public static ImportClientVpnClientCertificateRevocationListRequestMarshaller Instance { get; }
    private static ImportClientVpnClientCertificateRevocationListRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportClientVpnClientCertificateRevocationListRequest publicRequest);
    internal static ImportClientVpnClientCertificateRevocationListRequestMarshaller GetInstance();
    public static ImportClientVpnClientCertificateRevocationListRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportClientVpnClientCertificateRevocationListResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportClientVpnClientCertificateRevocationListResponseUnmarshaller _instance;
    public static ImportClientVpnClientCertificateRevocationListResponseUnmarshaller Instance { get; }
    private static ImportClientVpnClientCertificateRevocationListResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportClientVpnClientCertificateRevocationListResponseUnmarshaller GetInstance();
    public static ImportClientVpnClientCertificateRevocationListResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageLicenseConfigurationResponseUnmarshaller : object {
    private static ImportImageLicenseConfigurationResponseUnmarshaller _instance;
    public static ImportImageLicenseConfigurationResponseUnmarshaller Instance { get; }
    private static ImportImageLicenseConfigurationResponseUnmarshaller();
    public sealed virtual ImportImageLicenseConfigurationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportImageLicenseConfigurationResponse Unmarshall(JsonUnmarshallerContext context);
    public static ImportImageLicenseConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageRequestMarshaller : object {
    private static ImportImageRequestMarshaller _instance;
    public static ImportImageRequestMarshaller Instance { get; }
    private static ImportImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportImageRequest publicRequest);
    internal static ImportImageRequestMarshaller GetInstance();
    public static ImportImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportImageResponseUnmarshaller _instance;
    public static ImportImageResponseUnmarshaller Instance { get; }
    private static ImportImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportImageResponseUnmarshaller GetInstance();
    public static ImportImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageTaskUnmarshaller : object {
    private static ImportImageTaskUnmarshaller _instance;
    public static ImportImageTaskUnmarshaller Instance { get; }
    private static ImportImageTaskUnmarshaller();
    public sealed virtual ImportImageTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportImageTask Unmarshall(JsonUnmarshallerContext context);
    public static ImportImageTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceRequestMarshaller : object {
    private static ImportInstanceRequestMarshaller _instance;
    public static ImportInstanceRequestMarshaller Instance { get; }
    private static ImportInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportInstanceRequest publicRequest);
    internal static ImportInstanceRequestMarshaller GetInstance();
    public static ImportInstanceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportInstanceResponseUnmarshaller _instance;
    public static ImportInstanceResponseUnmarshaller Instance { get; }
    private static ImportInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportInstanceResponseUnmarshaller GetInstance();
    public static ImportInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceTaskDetailsUnmarshaller : object {
    private static ImportInstanceTaskDetailsUnmarshaller _instance;
    public static ImportInstanceTaskDetailsUnmarshaller Instance { get; }
    private static ImportInstanceTaskDetailsUnmarshaller();
    public sealed virtual ImportInstanceTaskDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportInstanceTaskDetails Unmarshall(JsonUnmarshallerContext context);
    public static ImportInstanceTaskDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceVolumeDetailItemUnmarshaller : object {
    private static ImportInstanceVolumeDetailItemUnmarshaller _instance;
    public static ImportInstanceVolumeDetailItemUnmarshaller Instance { get; }
    private static ImportInstanceVolumeDetailItemUnmarshaller();
    public sealed virtual ImportInstanceVolumeDetailItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportInstanceVolumeDetailItem Unmarshall(JsonUnmarshallerContext context);
    public static ImportInstanceVolumeDetailItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairRequestMarshaller : object {
    private static ImportKeyPairRequestMarshaller _instance;
    public static ImportKeyPairRequestMarshaller Instance { get; }
    private static ImportKeyPairRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportKeyPairRequest publicRequest);
    internal static ImportKeyPairRequestMarshaller GetInstance();
    public static ImportKeyPairRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportKeyPairResponseUnmarshaller _instance;
    public static ImportKeyPairResponseUnmarshaller Instance { get; }
    private static ImportKeyPairResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportKeyPairResponseUnmarshaller GetInstance();
    public static ImportKeyPairResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotRequestMarshaller : object {
    private static ImportSnapshotRequestMarshaller _instance;
    public static ImportSnapshotRequestMarshaller Instance { get; }
    private static ImportSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportSnapshotRequest publicRequest);
    internal static ImportSnapshotRequestMarshaller GetInstance();
    public static ImportSnapshotRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportSnapshotResponseUnmarshaller _instance;
    public static ImportSnapshotResponseUnmarshaller Instance { get; }
    private static ImportSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportSnapshotResponseUnmarshaller GetInstance();
    public static ImportSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotTaskUnmarshaller : object {
    private static ImportSnapshotTaskUnmarshaller _instance;
    public static ImportSnapshotTaskUnmarshaller Instance { get; }
    private static ImportSnapshotTaskUnmarshaller();
    public sealed virtual ImportSnapshotTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportSnapshotTask Unmarshall(JsonUnmarshallerContext context);
    public static ImportSnapshotTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeRequestMarshaller : object {
    private static ImportVolumeRequestMarshaller _instance;
    public static ImportVolumeRequestMarshaller Instance { get; }
    private static ImportVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportVolumeRequest publicRequest);
    internal static ImportVolumeRequestMarshaller GetInstance();
    public static ImportVolumeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportVolumeResponseUnmarshaller _instance;
    public static ImportVolumeResponseUnmarshaller Instance { get; }
    private static ImportVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportVolumeResponseUnmarshaller GetInstance();
    public static ImportVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeTaskDetailsUnmarshaller : object {
    private static ImportVolumeTaskDetailsUnmarshaller _instance;
    public static ImportVolumeTaskDetailsUnmarshaller Instance { get; }
    private static ImportVolumeTaskDetailsUnmarshaller();
    public sealed virtual ImportVolumeTaskDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportVolumeTaskDetails Unmarshall(JsonUnmarshallerContext context);
    public static ImportVolumeTaskDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InferenceAcceleratorInfoUnmarshaller : object {
    private static InferenceAcceleratorInfoUnmarshaller _instance;
    public static InferenceAcceleratorInfoUnmarshaller Instance { get; }
    private static InferenceAcceleratorInfoUnmarshaller();
    public sealed virtual InferenceAcceleratorInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InferenceAcceleratorInfo Unmarshall(JsonUnmarshallerContext context);
    public static InferenceAcceleratorInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InferenceDeviceInfoUnmarshaller : object {
    private static InferenceDeviceInfoUnmarshaller _instance;
    public static InferenceDeviceInfoUnmarshaller Instance { get; }
    private static InferenceDeviceInfoUnmarshaller();
    public sealed virtual InferenceDeviceInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InferenceDeviceInfo Unmarshall(JsonUnmarshallerContext context);
    public static InferenceDeviceInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InferenceDeviceMemoryInfoUnmarshaller : object {
    private static InferenceDeviceMemoryInfoUnmarshaller _instance;
    public static InferenceDeviceMemoryInfoUnmarshaller Instance { get; }
    private static InferenceDeviceMemoryInfoUnmarshaller();
    public sealed virtual InferenceDeviceMemoryInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InferenceDeviceMemoryInfo Unmarshall(JsonUnmarshallerContext context);
    public static InferenceDeviceMemoryInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttachmentEnaSrdSpecificationUnmarshaller : object {
    private static InstanceAttachmentEnaSrdSpecificationUnmarshaller _instance;
    public static InstanceAttachmentEnaSrdSpecificationUnmarshaller Instance { get; }
    private static InstanceAttachmentEnaSrdSpecificationUnmarshaller();
    public sealed virtual InstanceAttachmentEnaSrdSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAttachmentEnaSrdSpecification Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAttachmentEnaSrdSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttachmentEnaSrdUdpSpecificationUnmarshaller : object {
    private static InstanceAttachmentEnaSrdUdpSpecificationUnmarshaller _instance;
    public static InstanceAttachmentEnaSrdUdpSpecificationUnmarshaller Instance { get; }
    private static InstanceAttachmentEnaSrdUdpSpecificationUnmarshaller();
    public sealed virtual InstanceAttachmentEnaSrdUdpSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAttachmentEnaSrdUdpSpecification Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAttachmentEnaSrdUdpSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttributeUnmarshaller : object {
    private static InstanceAttributeUnmarshaller _instance;
    public static InstanceAttributeUnmarshaller Instance { get; }
    private static InstanceAttributeUnmarshaller();
    public sealed virtual InstanceAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAttribute Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller : object {
    private static InstanceBlockDeviceMappingUnmarshaller _instance;
    public static InstanceBlockDeviceMappingUnmarshaller Instance { get; }
    private static InstanceBlockDeviceMappingUnmarshaller();
    public sealed virtual InstanceBlockDeviceMapping Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceBlockDeviceMapping Unmarshall(JsonUnmarshallerContext context);
    public static InstanceBlockDeviceMappingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCapacityUnmarshaller : object {
    private static InstanceCapacityUnmarshaller _instance;
    public static InstanceCapacityUnmarshaller Instance { get; }
    private static InstanceCapacityUnmarshaller();
    public sealed virtual InstanceCapacity Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceCapacity Unmarshall(JsonUnmarshallerContext context);
    public static InstanceCapacityUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCountUnmarshaller : object {
    private static InstanceCountUnmarshaller _instance;
    public static InstanceCountUnmarshaller Instance { get; }
    private static InstanceCountUnmarshaller();
    public sealed virtual InstanceCount Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceCount Unmarshall(JsonUnmarshallerContext context);
    public static InstanceCountUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCreditSpecificationUnmarshaller : object {
    private static InstanceCreditSpecificationUnmarshaller _instance;
    public static InstanceCreditSpecificationUnmarshaller Instance { get; }
    private static InstanceCreditSpecificationUnmarshaller();
    public sealed virtual InstanceCreditSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceCreditSpecification Unmarshall(JsonUnmarshallerContext context);
    public static InstanceCreditSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceEventWindowAssociationTargetUnmarshaller : object {
    private static InstanceEventWindowAssociationTargetUnmarshaller _instance;
    public static InstanceEventWindowAssociationTargetUnmarshaller Instance { get; }
    private static InstanceEventWindowAssociationTargetUnmarshaller();
    public sealed virtual InstanceEventWindowAssociationTarget Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceEventWindowAssociationTarget Unmarshall(JsonUnmarshallerContext context);
    public static InstanceEventWindowAssociationTargetUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceEventWindowStateChangeUnmarshaller : object {
    private static InstanceEventWindowStateChangeUnmarshaller _instance;
    public static InstanceEventWindowStateChangeUnmarshaller Instance { get; }
    private static InstanceEventWindowStateChangeUnmarshaller();
    public sealed virtual InstanceEventWindowStateChange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceEventWindowStateChange Unmarshall(JsonUnmarshallerContext context);
    public static InstanceEventWindowStateChangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceEventWindowTimeRangeUnmarshaller : object {
    private static InstanceEventWindowTimeRangeUnmarshaller _instance;
    public static InstanceEventWindowTimeRangeUnmarshaller Instance { get; }
    private static InstanceEventWindowTimeRangeUnmarshaller();
    public sealed virtual InstanceEventWindowTimeRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceEventWindowTimeRange Unmarshall(JsonUnmarshallerContext context);
    public static InstanceEventWindowTimeRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceEventWindowUnmarshaller : object {
    private static InstanceEventWindowUnmarshaller _instance;
    public static InstanceEventWindowUnmarshaller Instance { get; }
    private static InstanceEventWindowUnmarshaller();
    public sealed virtual InstanceEventWindow Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceEventWindow Unmarshall(JsonUnmarshallerContext context);
    public static InstanceEventWindowUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceExportDetailsUnmarshaller : object {
    private static InstanceExportDetailsUnmarshaller _instance;
    public static InstanceExportDetailsUnmarshaller Instance { get; }
    private static InstanceExportDetailsUnmarshaller();
    public sealed virtual InstanceExportDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceExportDetails Unmarshall(JsonUnmarshallerContext context);
    public static InstanceExportDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceFamilyCreditSpecificationUnmarshaller : object {
    private static InstanceFamilyCreditSpecificationUnmarshaller _instance;
    public static InstanceFamilyCreditSpecificationUnmarshaller Instance { get; }
    private static InstanceFamilyCreditSpecificationUnmarshaller();
    public sealed virtual InstanceFamilyCreditSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceFamilyCreditSpecification Unmarshall(JsonUnmarshallerContext context);
    public static InstanceFamilyCreditSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceIpv4PrefixUnmarshaller : object {
    private static InstanceIpv4PrefixUnmarshaller _instance;
    public static InstanceIpv4PrefixUnmarshaller Instance { get; }
    private static InstanceIpv4PrefixUnmarshaller();
    public sealed virtual InstanceIpv4Prefix Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceIpv4Prefix Unmarshall(JsonUnmarshallerContext context);
    public static InstanceIpv4PrefixUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceIpv6AddressUnmarshaller : object {
    private static InstanceIpv6AddressUnmarshaller _instance;
    public static InstanceIpv6AddressUnmarshaller Instance { get; }
    private static InstanceIpv6AddressUnmarshaller();
    public sealed virtual InstanceIpv6Address Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceIpv6Address Unmarshall(JsonUnmarshallerContext context);
    public static InstanceIpv6AddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceIpv6PrefixUnmarshaller : object {
    private static InstanceIpv6PrefixUnmarshaller _instance;
    public static InstanceIpv6PrefixUnmarshaller Instance { get; }
    private static InstanceIpv6PrefixUnmarshaller();
    public sealed virtual InstanceIpv6Prefix Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceIpv6Prefix Unmarshall(JsonUnmarshallerContext context);
    public static InstanceIpv6PrefixUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMaintenanceOptionsUnmarshaller : object {
    private static InstanceMaintenanceOptionsUnmarshaller _instance;
    public static InstanceMaintenanceOptionsUnmarshaller Instance { get; }
    private static InstanceMaintenanceOptionsUnmarshaller();
    public sealed virtual InstanceMaintenanceOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceMaintenanceOptions Unmarshall(JsonUnmarshallerContext context);
    public static InstanceMaintenanceOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMetadataDefaultsResponseUnmarshaller : object {
    private static InstanceMetadataDefaultsResponseUnmarshaller _instance;
    public static InstanceMetadataDefaultsResponseUnmarshaller Instance { get; }
    private static InstanceMetadataDefaultsResponseUnmarshaller();
    public sealed virtual InstanceMetadataDefaultsResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceMetadataDefaultsResponse Unmarshall(JsonUnmarshallerContext context);
    public static InstanceMetadataDefaultsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMetadataOptionsResponseUnmarshaller : object {
    private static InstanceMetadataOptionsResponseUnmarshaller _instance;
    public static InstanceMetadataOptionsResponseUnmarshaller Instance { get; }
    private static InstanceMetadataOptionsResponseUnmarshaller();
    public sealed virtual InstanceMetadataOptionsResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceMetadataOptionsResponse Unmarshall(JsonUnmarshallerContext context);
    public static InstanceMetadataOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller : object {
    private static InstanceMonitoringUnmarshaller _instance;
    public static InstanceMonitoringUnmarshaller Instance { get; }
    private static InstanceMonitoringUnmarshaller();
    public sealed virtual InstanceMonitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceMonitoring Unmarshall(JsonUnmarshallerContext context);
    public static InstanceMonitoringUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAssociationUnmarshaller : object {
    private static InstanceNetworkInterfaceAssociationUnmarshaller _instance;
    public static InstanceNetworkInterfaceAssociationUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceAssociationUnmarshaller();
    public sealed virtual InstanceNetworkInterfaceAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterfaceAssociation Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAttachmentUnmarshaller : object {
    private static InstanceNetworkInterfaceAttachmentUnmarshaller _instance;
    public static InstanceNetworkInterfaceAttachmentUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceAttachmentUnmarshaller();
    public sealed virtual InstanceNetworkInterfaceAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterfaceAttachment Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceSpecificationUnmarshaller : object {
    private static InstanceNetworkInterfaceSpecificationUnmarshaller _instance;
    public static InstanceNetworkInterfaceSpecificationUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceSpecificationUnmarshaller();
    public sealed virtual InstanceNetworkInterfaceSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterfaceSpecification Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceUnmarshaller : object {
    private static InstanceNetworkInterfaceUnmarshaller _instance;
    public static InstanceNetworkInterfaceUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceUnmarshaller();
    public sealed virtual InstanceNetworkInterface Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterface Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstancePrivateIpAddressUnmarshaller : object {
    private static InstancePrivateIpAddressUnmarshaller _instance;
    public static InstancePrivateIpAddressUnmarshaller Instance { get; }
    private static InstancePrivateIpAddressUnmarshaller();
    public sealed virtual InstancePrivateIpAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstancePrivateIpAddress Unmarshall(JsonUnmarshallerContext context);
    public static InstancePrivateIpAddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceRequirementsUnmarshaller : object {
    private static InstanceRequirementsUnmarshaller _instance;
    public static InstanceRequirementsUnmarshaller Instance { get; }
    private static InstanceRequirementsUnmarshaller();
    public sealed virtual InstanceRequirements Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceRequirements Unmarshall(JsonUnmarshallerContext context);
    public static InstanceRequirementsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateChangeUnmarshaller : object {
    private static InstanceStateChangeUnmarshaller _instance;
    public static InstanceStateChangeUnmarshaller Instance { get; }
    private static InstanceStateChangeUnmarshaller();
    public sealed virtual InstanceStateChange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStateChange Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStateChangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller : object {
    private static InstanceStateUnmarshaller _instance;
    public static InstanceStateUnmarshaller Instance { get; }
    private static InstanceStateUnmarshaller();
    public sealed virtual InstanceState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceState Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusDetailsUnmarshaller : object {
    private static InstanceStatusDetailsUnmarshaller _instance;
    public static InstanceStatusDetailsUnmarshaller Instance { get; }
    private static InstanceStatusDetailsUnmarshaller();
    public sealed virtual InstanceStatusDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatusDetails Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusEventUnmarshaller : object {
    private static InstanceStatusEventUnmarshaller _instance;
    public static InstanceStatusEventUnmarshaller Instance { get; }
    private static InstanceStatusEventUnmarshaller();
    public sealed virtual InstanceStatusEvent Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatusEvent Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusEventUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusSummaryUnmarshaller : object {
    private static InstanceStatusSummaryUnmarshaller _instance;
    public static InstanceStatusSummaryUnmarshaller Instance { get; }
    private static InstanceStatusSummaryUnmarshaller();
    public sealed virtual InstanceStatusSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatusSummary Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusSummaryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusUnmarshaller : object {
    private static InstanceStatusUnmarshaller _instance;
    public static InstanceStatusUnmarshaller Instance { get; }
    private static InstanceStatusUnmarshaller();
    public sealed virtual InstanceStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatus Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStorageInfoUnmarshaller : object {
    private static InstanceStorageInfoUnmarshaller _instance;
    public static InstanceStorageInfoUnmarshaller Instance { get; }
    private static InstanceStorageInfoUnmarshaller();
    public sealed virtual InstanceStorageInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStorageInfo Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStorageInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceTagNotificationAttributeUnmarshaller : object {
    private static InstanceTagNotificationAttributeUnmarshaller _instance;
    public static InstanceTagNotificationAttributeUnmarshaller Instance { get; }
    private static InstanceTagNotificationAttributeUnmarshaller();
    public sealed virtual InstanceTagNotificationAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceTagNotificationAttribute Unmarshall(JsonUnmarshallerContext context);
    public static InstanceTagNotificationAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceTopologyUnmarshaller : object {
    private static InstanceTopologyUnmarshaller _instance;
    public static InstanceTopologyUnmarshaller Instance { get; }
    private static InstanceTopologyUnmarshaller();
    public sealed virtual InstanceTopology Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceTopology Unmarshall(JsonUnmarshallerContext context);
    public static InstanceTopologyUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceTypeInfoFromInstanceRequirementsUnmarshaller : object {
    private static InstanceTypeInfoFromInstanceRequirementsUnmarshaller _instance;
    public static InstanceTypeInfoFromInstanceRequirementsUnmarshaller Instance { get; }
    private static InstanceTypeInfoFromInstanceRequirementsUnmarshaller();
    public sealed virtual InstanceTypeInfoFromInstanceRequirements Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceTypeInfoFromInstanceRequirements Unmarshall(JsonUnmarshallerContext context);
    public static InstanceTypeInfoFromInstanceRequirementsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceTypeInfoUnmarshaller : object {
    private static InstanceTypeInfoUnmarshaller _instance;
    public static InstanceTypeInfoUnmarshaller Instance { get; }
    private static InstanceTypeInfoUnmarshaller();
    public sealed virtual InstanceTypeInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceTypeInfo Unmarshall(JsonUnmarshallerContext context);
    public static InstanceTypeInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceTypeOfferingUnmarshaller : object {
    private static InstanceTypeOfferingUnmarshaller _instance;
    public static InstanceTypeOfferingUnmarshaller Instance { get; }
    private static InstanceTypeOfferingUnmarshaller();
    public sealed virtual InstanceTypeOffering Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceTypeOffering Unmarshall(JsonUnmarshallerContext context);
    public static InstanceTypeOfferingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUnmarshaller : object {
    private static InstanceUnmarshaller _instance;
    public static InstanceUnmarshaller Instance { get; }
    private static InstanceUnmarshaller();
    public sealed virtual Instance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Instance Unmarshall(JsonUnmarshallerContext context);
    public static InstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUsageUnmarshaller : object {
    private static InstanceUsageUnmarshaller _instance;
    public static InstanceUsageUnmarshaller Instance { get; }
    private static InstanceUsageUnmarshaller();
    public sealed virtual InstanceUsage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceUsage Unmarshall(JsonUnmarshallerContext context);
    public static InstanceUsageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayAttachmentUnmarshaller : object {
    private static InternetGatewayAttachmentUnmarshaller _instance;
    public static InternetGatewayAttachmentUnmarshaller Instance { get; }
    private static InternetGatewayAttachmentUnmarshaller();
    public sealed virtual InternetGatewayAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InternetGatewayAttachment Unmarshall(JsonUnmarshallerContext context);
    public static InternetGatewayAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayUnmarshaller : object {
    private static InternetGatewayUnmarshaller _instance;
    public static InternetGatewayUnmarshaller Instance { get; }
    private static InternetGatewayUnmarshaller();
    public sealed virtual InternetGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InternetGateway Unmarshall(JsonUnmarshallerContext context);
    public static InternetGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamAddressHistoryRecordUnmarshaller : object {
    private static IpamAddressHistoryRecordUnmarshaller _instance;
    public static IpamAddressHistoryRecordUnmarshaller Instance { get; }
    private static IpamAddressHistoryRecordUnmarshaller();
    public sealed virtual IpamAddressHistoryRecord Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamAddressHistoryRecord Unmarshall(JsonUnmarshallerContext context);
    public static IpamAddressHistoryRecordUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamDiscoveredAccountUnmarshaller : object {
    private static IpamDiscoveredAccountUnmarshaller _instance;
    public static IpamDiscoveredAccountUnmarshaller Instance { get; }
    private static IpamDiscoveredAccountUnmarshaller();
    public sealed virtual IpamDiscoveredAccount Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamDiscoveredAccount Unmarshall(JsonUnmarshallerContext context);
    public static IpamDiscoveredAccountUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamDiscoveredPublicAddressUnmarshaller : object {
    private static IpamDiscoveredPublicAddressUnmarshaller _instance;
    public static IpamDiscoveredPublicAddressUnmarshaller Instance { get; }
    private static IpamDiscoveredPublicAddressUnmarshaller();
    public sealed virtual IpamDiscoveredPublicAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamDiscoveredPublicAddress Unmarshall(JsonUnmarshallerContext context);
    public static IpamDiscoveredPublicAddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamDiscoveredResourceCidrUnmarshaller : object {
    private static IpamDiscoveredResourceCidrUnmarshaller _instance;
    public static IpamDiscoveredResourceCidrUnmarshaller Instance { get; }
    private static IpamDiscoveredResourceCidrUnmarshaller();
    public sealed virtual IpamDiscoveredResourceCidr Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamDiscoveredResourceCidr Unmarshall(JsonUnmarshallerContext context);
    public static IpamDiscoveredResourceCidrUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamDiscoveryFailureReasonUnmarshaller : object {
    private static IpamDiscoveryFailureReasonUnmarshaller _instance;
    public static IpamDiscoveryFailureReasonUnmarshaller Instance { get; }
    private static IpamDiscoveryFailureReasonUnmarshaller();
    public sealed virtual IpamDiscoveryFailureReason Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamDiscoveryFailureReason Unmarshall(JsonUnmarshallerContext context);
    public static IpamDiscoveryFailureReasonUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamExternalResourceVerificationTokenUnmarshaller : object {
    private static IpamExternalResourceVerificationTokenUnmarshaller _instance;
    public static IpamExternalResourceVerificationTokenUnmarshaller Instance { get; }
    private static IpamExternalResourceVerificationTokenUnmarshaller();
    public sealed virtual IpamExternalResourceVerificationToken Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamExternalResourceVerificationToken Unmarshall(JsonUnmarshallerContext context);
    public static IpamExternalResourceVerificationTokenUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamOperatingRegionUnmarshaller : object {
    private static IpamOperatingRegionUnmarshaller _instance;
    public static IpamOperatingRegionUnmarshaller Instance { get; }
    private static IpamOperatingRegionUnmarshaller();
    public sealed virtual IpamOperatingRegion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamOperatingRegion Unmarshall(JsonUnmarshallerContext context);
    public static IpamOperatingRegionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPoolAllocationUnmarshaller : object {
    private static IpamPoolAllocationUnmarshaller _instance;
    public static IpamPoolAllocationUnmarshaller Instance { get; }
    private static IpamPoolAllocationUnmarshaller();
    public sealed virtual IpamPoolAllocation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPoolAllocation Unmarshall(JsonUnmarshallerContext context);
    public static IpamPoolAllocationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPoolCidrFailureReasonUnmarshaller : object {
    private static IpamPoolCidrFailureReasonUnmarshaller _instance;
    public static IpamPoolCidrFailureReasonUnmarshaller Instance { get; }
    private static IpamPoolCidrFailureReasonUnmarshaller();
    public sealed virtual IpamPoolCidrFailureReason Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPoolCidrFailureReason Unmarshall(JsonUnmarshallerContext context);
    public static IpamPoolCidrFailureReasonUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPoolCidrUnmarshaller : object {
    private static IpamPoolCidrUnmarshaller _instance;
    public static IpamPoolCidrUnmarshaller Instance { get; }
    private static IpamPoolCidrUnmarshaller();
    public sealed virtual IpamPoolCidr Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPoolCidr Unmarshall(JsonUnmarshallerContext context);
    public static IpamPoolCidrUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPoolSourceResourceUnmarshaller : object {
    private static IpamPoolSourceResourceUnmarshaller _instance;
    public static IpamPoolSourceResourceUnmarshaller Instance { get; }
    private static IpamPoolSourceResourceUnmarshaller();
    public sealed virtual IpamPoolSourceResource Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPoolSourceResource Unmarshall(JsonUnmarshallerContext context);
    public static IpamPoolSourceResourceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPoolUnmarshaller : object {
    private static IpamPoolUnmarshaller _instance;
    public static IpamPoolUnmarshaller Instance { get; }
    private static IpamPoolUnmarshaller();
    public sealed virtual IpamPool Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPool Unmarshall(JsonUnmarshallerContext context);
    public static IpamPoolUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPublicAddressSecurityGroupUnmarshaller : object {
    private static IpamPublicAddressSecurityGroupUnmarshaller _instance;
    public static IpamPublicAddressSecurityGroupUnmarshaller Instance { get; }
    private static IpamPublicAddressSecurityGroupUnmarshaller();
    public sealed virtual IpamPublicAddressSecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPublicAddressSecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static IpamPublicAddressSecurityGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPublicAddressTagsUnmarshaller : object {
    private static IpamPublicAddressTagsUnmarshaller _instance;
    public static IpamPublicAddressTagsUnmarshaller Instance { get; }
    private static IpamPublicAddressTagsUnmarshaller();
    public sealed virtual IpamPublicAddressTags Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPublicAddressTags Unmarshall(JsonUnmarshallerContext context);
    public static IpamPublicAddressTagsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamPublicAddressTagUnmarshaller : object {
    private static IpamPublicAddressTagUnmarshaller _instance;
    public static IpamPublicAddressTagUnmarshaller Instance { get; }
    private static IpamPublicAddressTagUnmarshaller();
    public sealed virtual IpamPublicAddressTag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamPublicAddressTag Unmarshall(JsonUnmarshallerContext context);
    public static IpamPublicAddressTagUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamResourceCidrUnmarshaller : object {
    private static IpamResourceCidrUnmarshaller _instance;
    public static IpamResourceCidrUnmarshaller Instance { get; }
    private static IpamResourceCidrUnmarshaller();
    public sealed virtual IpamResourceCidr Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamResourceCidr Unmarshall(JsonUnmarshallerContext context);
    public static IpamResourceCidrUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamResourceDiscoveryAssociationUnmarshaller : object {
    private static IpamResourceDiscoveryAssociationUnmarshaller _instance;
    public static IpamResourceDiscoveryAssociationUnmarshaller Instance { get; }
    private static IpamResourceDiscoveryAssociationUnmarshaller();
    public sealed virtual IpamResourceDiscoveryAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamResourceDiscoveryAssociation Unmarshall(JsonUnmarshallerContext context);
    public static IpamResourceDiscoveryAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamResourceDiscoveryUnmarshaller : object {
    private static IpamResourceDiscoveryUnmarshaller _instance;
    public static IpamResourceDiscoveryUnmarshaller Instance { get; }
    private static IpamResourceDiscoveryUnmarshaller();
    public sealed virtual IpamResourceDiscovery Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamResourceDiscovery Unmarshall(JsonUnmarshallerContext context);
    public static IpamResourceDiscoveryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamResourceTagUnmarshaller : object {
    private static IpamResourceTagUnmarshaller _instance;
    public static IpamResourceTagUnmarshaller Instance { get; }
    private static IpamResourceTagUnmarshaller();
    public sealed virtual IpamResourceTag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamResourceTag Unmarshall(JsonUnmarshallerContext context);
    public static IpamResourceTagUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamScopeUnmarshaller : object {
    private static IpamScopeUnmarshaller _instance;
    public static IpamScopeUnmarshaller Instance { get; }
    private static IpamScopeUnmarshaller();
    public sealed virtual IpamScope Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpamScope Unmarshall(JsonUnmarshallerContext context);
    public static IpamScopeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpamUnmarshaller : object {
    private static IpamUnmarshaller _instance;
    public static IpamUnmarshaller Instance { get; }
    private static IpamUnmarshaller();
    public sealed virtual Ipam Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipam Unmarshall(JsonUnmarshallerContext context);
    public static IpamUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpPermissionUnmarshaller : object {
    private static IpPermissionUnmarshaller _instance;
    public static IpPermissionUnmarshaller Instance { get; }
    private static IpPermissionUnmarshaller();
    public sealed virtual IpPermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpPermission Unmarshall(JsonUnmarshallerContext context);
    public static IpPermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpRangeUnmarshaller : object {
    private static IpRangeUnmarshaller _instance;
    public static IpRangeUnmarshaller Instance { get; }
    private static IpRangeUnmarshaller();
    public sealed virtual IpRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpRange Unmarshall(JsonUnmarshallerContext context);
    public static IpRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv4PrefixSpecificationRequestUnmarshaller : object {
    private static Ipv4PrefixSpecificationRequestUnmarshaller _instance;
    public static Ipv4PrefixSpecificationRequestUnmarshaller Instance { get; }
    private static Ipv4PrefixSpecificationRequestUnmarshaller();
    public sealed virtual Ipv4PrefixSpecificationRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv4PrefixSpecificationRequest Unmarshall(JsonUnmarshallerContext context);
    public static Ipv4PrefixSpecificationRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv4PrefixSpecificationResponseUnmarshaller : object {
    private static Ipv4PrefixSpecificationResponseUnmarshaller _instance;
    public static Ipv4PrefixSpecificationResponseUnmarshaller Instance { get; }
    private static Ipv4PrefixSpecificationResponseUnmarshaller();
    public sealed virtual Ipv4PrefixSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv4PrefixSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static Ipv4PrefixSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv4PrefixSpecificationUnmarshaller : object {
    private static Ipv4PrefixSpecificationUnmarshaller _instance;
    public static Ipv4PrefixSpecificationUnmarshaller Instance { get; }
    private static Ipv4PrefixSpecificationUnmarshaller();
    public sealed virtual Ipv4PrefixSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv4PrefixSpecification Unmarshall(JsonUnmarshallerContext context);
    public static Ipv4PrefixSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv6CidrAssociationUnmarshaller : object {
    private static Ipv6CidrAssociationUnmarshaller _instance;
    public static Ipv6CidrAssociationUnmarshaller Instance { get; }
    private static Ipv6CidrAssociationUnmarshaller();
    public sealed virtual Ipv6CidrAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv6CidrAssociation Unmarshall(JsonUnmarshallerContext context);
    public static Ipv6CidrAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv6CidrBlockUnmarshaller : object {
    private static Ipv6CidrBlockUnmarshaller _instance;
    public static Ipv6CidrBlockUnmarshaller Instance { get; }
    private static Ipv6CidrBlockUnmarshaller();
    public sealed virtual Ipv6CidrBlock Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv6CidrBlock Unmarshall(JsonUnmarshallerContext context);
    public static Ipv6CidrBlockUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv6PoolUnmarshaller : object {
    private static Ipv6PoolUnmarshaller _instance;
    public static Ipv6PoolUnmarshaller Instance { get; }
    private static Ipv6PoolUnmarshaller();
    public sealed virtual Ipv6Pool Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv6Pool Unmarshall(JsonUnmarshallerContext context);
    public static Ipv6PoolUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv6PrefixSpecificationRequestUnmarshaller : object {
    private static Ipv6PrefixSpecificationRequestUnmarshaller _instance;
    public static Ipv6PrefixSpecificationRequestUnmarshaller Instance { get; }
    private static Ipv6PrefixSpecificationRequestUnmarshaller();
    public sealed virtual Ipv6PrefixSpecificationRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv6PrefixSpecificationRequest Unmarshall(JsonUnmarshallerContext context);
    public static Ipv6PrefixSpecificationRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv6PrefixSpecificationResponseUnmarshaller : object {
    private static Ipv6PrefixSpecificationResponseUnmarshaller _instance;
    public static Ipv6PrefixSpecificationResponseUnmarshaller Instance { get; }
    private static Ipv6PrefixSpecificationResponseUnmarshaller();
    public sealed virtual Ipv6PrefixSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv6PrefixSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static Ipv6PrefixSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv6PrefixSpecificationUnmarshaller : object {
    private static Ipv6PrefixSpecificationUnmarshaller _instance;
    public static Ipv6PrefixSpecificationUnmarshaller Instance { get; }
    private static Ipv6PrefixSpecificationUnmarshaller();
    public sealed virtual Ipv6PrefixSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv6PrefixSpecification Unmarshall(JsonUnmarshallerContext context);
    public static Ipv6PrefixSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Ipv6RangeUnmarshaller : object {
    private static Ipv6RangeUnmarshaller _instance;
    public static Ipv6RangeUnmarshaller Instance { get; }
    private static Ipv6RangeUnmarshaller();
    public sealed virtual Ipv6Range Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ipv6Range Unmarshall(JsonUnmarshallerContext context);
    public static Ipv6RangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairInfoUnmarshaller : object {
    private static KeyPairInfoUnmarshaller _instance;
    public static KeyPairInfoUnmarshaller Instance { get; }
    private static KeyPairInfoUnmarshaller();
    public sealed virtual KeyPairInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyPairInfo Unmarshall(JsonUnmarshallerContext context);
    public static KeyPairInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairUnmarshaller : object {
    private static KeyPairUnmarshaller _instance;
    public static KeyPairUnmarshaller Instance { get; }
    private static KeyPairUnmarshaller();
    public sealed virtual KeyPair Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyPair Unmarshall(JsonUnmarshallerContext context);
    public static KeyPairUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LastErrorUnmarshaller : object {
    private static LastErrorUnmarshaller _instance;
    public static LastErrorUnmarshaller Instance { get; }
    private static LastErrorUnmarshaller();
    public sealed virtual LastError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LastError Unmarshall(JsonUnmarshallerContext context);
    public static LastErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchPermissionUnmarshaller : object {
    private static LaunchPermissionUnmarshaller _instance;
    public static LaunchPermissionUnmarshaller Instance { get; }
    private static LaunchPermissionUnmarshaller();
    public sealed virtual LaunchPermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchPermission Unmarshall(JsonUnmarshallerContext context);
    public static LaunchPermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchSpecificationUnmarshaller : object {
    private static LaunchSpecificationUnmarshaller _instance;
    public static LaunchSpecificationUnmarshaller Instance { get; }
    private static LaunchSpecificationUnmarshaller();
    public sealed virtual LaunchSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchSpecification Unmarshall(JsonUnmarshallerContext context);
    public static LaunchSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateAndOverridesResponseUnmarshaller : object {
    private static LaunchTemplateAndOverridesResponseUnmarshaller _instance;
    public static LaunchTemplateAndOverridesResponseUnmarshaller Instance { get; }
    private static LaunchTemplateAndOverridesResponseUnmarshaller();
    public sealed virtual LaunchTemplateAndOverridesResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateAndOverridesResponse Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateAndOverridesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateBlockDeviceMappingUnmarshaller : object {
    private static LaunchTemplateBlockDeviceMappingUnmarshaller _instance;
    public static LaunchTemplateBlockDeviceMappingUnmarshaller Instance { get; }
    private static LaunchTemplateBlockDeviceMappingUnmarshaller();
    public sealed virtual LaunchTemplateBlockDeviceMapping Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateBlockDeviceMapping Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateBlockDeviceMappingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateCapacityReservationSpecificationResponseUnmarshaller : object {
    private static LaunchTemplateCapacityReservationSpecificationResponseUnmarshaller _instance;
    public static LaunchTemplateCapacityReservationSpecificationResponseUnmarshaller Instance { get; }
    private static LaunchTemplateCapacityReservationSpecificationResponseUnmarshaller();
    public sealed virtual LaunchTemplateCapacityReservationSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateCapacityReservationSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateCapacityReservationSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateConfigUnmarshaller : object {
    private static LaunchTemplateConfigUnmarshaller _instance;
    public static LaunchTemplateConfigUnmarshaller Instance { get; }
    private static LaunchTemplateConfigUnmarshaller();
    public sealed virtual LaunchTemplateConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateConfig Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateConfigUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateCpuOptionsUnmarshaller : object {
    private static LaunchTemplateCpuOptionsUnmarshaller _instance;
    public static LaunchTemplateCpuOptionsUnmarshaller Instance { get; }
    private static LaunchTemplateCpuOptionsUnmarshaller();
    public sealed virtual LaunchTemplateCpuOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateCpuOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateCpuOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateEbsBlockDeviceUnmarshaller : object {
    private static LaunchTemplateEbsBlockDeviceUnmarshaller _instance;
    public static LaunchTemplateEbsBlockDeviceUnmarshaller Instance { get; }
    private static LaunchTemplateEbsBlockDeviceUnmarshaller();
    public sealed virtual LaunchTemplateEbsBlockDevice Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateEbsBlockDevice Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateEbsBlockDeviceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateElasticInferenceAcceleratorResponseUnmarshaller : object {
    private static LaunchTemplateElasticInferenceAcceleratorResponseUnmarshaller _instance;
    public static LaunchTemplateElasticInferenceAcceleratorResponseUnmarshaller Instance { get; }
    private static LaunchTemplateElasticInferenceAcceleratorResponseUnmarshaller();
    public sealed virtual LaunchTemplateElasticInferenceAcceleratorResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateElasticInferenceAcceleratorResponse Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateElasticInferenceAcceleratorResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateEnaSrdSpecificationUnmarshaller : object {
    private static LaunchTemplateEnaSrdSpecificationUnmarshaller _instance;
    public static LaunchTemplateEnaSrdSpecificationUnmarshaller Instance { get; }
    private static LaunchTemplateEnaSrdSpecificationUnmarshaller();
    public sealed virtual LaunchTemplateEnaSrdSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateEnaSrdSpecification Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateEnaSrdSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateEnaSrdUdpSpecificationUnmarshaller : object {
    private static LaunchTemplateEnaSrdUdpSpecificationUnmarshaller _instance;
    public static LaunchTemplateEnaSrdUdpSpecificationUnmarshaller Instance { get; }
    private static LaunchTemplateEnaSrdUdpSpecificationUnmarshaller();
    public sealed virtual LaunchTemplateEnaSrdUdpSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateEnaSrdUdpSpecification Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateEnaSrdUdpSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateEnclaveOptionsUnmarshaller : object {
    private static LaunchTemplateEnclaveOptionsUnmarshaller _instance;
    public static LaunchTemplateEnclaveOptionsUnmarshaller Instance { get; }
    private static LaunchTemplateEnclaveOptionsUnmarshaller();
    public sealed virtual LaunchTemplateEnclaveOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateEnclaveOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateEnclaveOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateHibernationOptionsUnmarshaller : object {
    private static LaunchTemplateHibernationOptionsUnmarshaller _instance;
    public static LaunchTemplateHibernationOptionsUnmarshaller Instance { get; }
    private static LaunchTemplateHibernationOptionsUnmarshaller();
    public sealed virtual LaunchTemplateHibernationOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateHibernationOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateHibernationOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateIamInstanceProfileSpecificationUnmarshaller : object {
    private static LaunchTemplateIamInstanceProfileSpecificationUnmarshaller _instance;
    public static LaunchTemplateIamInstanceProfileSpecificationUnmarshaller Instance { get; }
    private static LaunchTemplateIamInstanceProfileSpecificationUnmarshaller();
    public sealed virtual LaunchTemplateIamInstanceProfileSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateIamInstanceProfileSpecification Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateIamInstanceProfileSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateInstanceMaintenanceOptionsUnmarshaller : object {
    private static LaunchTemplateInstanceMaintenanceOptionsUnmarshaller _instance;
    public static LaunchTemplateInstanceMaintenanceOptionsUnmarshaller Instance { get; }
    private static LaunchTemplateInstanceMaintenanceOptionsUnmarshaller();
    public sealed virtual LaunchTemplateInstanceMaintenanceOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateInstanceMaintenanceOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateInstanceMaintenanceOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateInstanceMarketOptionsUnmarshaller : object {
    private static LaunchTemplateInstanceMarketOptionsUnmarshaller _instance;
    public static LaunchTemplateInstanceMarketOptionsUnmarshaller Instance { get; }
    private static LaunchTemplateInstanceMarketOptionsUnmarshaller();
    public sealed virtual LaunchTemplateInstanceMarketOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateInstanceMarketOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateInstanceMarketOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateInstanceMetadataOptionsUnmarshaller : object {
    private static LaunchTemplateInstanceMetadataOptionsUnmarshaller _instance;
    public static LaunchTemplateInstanceMetadataOptionsUnmarshaller Instance { get; }
    private static LaunchTemplateInstanceMetadataOptionsUnmarshaller();
    public sealed virtual LaunchTemplateInstanceMetadataOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateInstanceMetadataOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateInstanceMetadataOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateInstanceNetworkInterfaceSpecificationUnmarshaller : object {
    private static LaunchTemplateInstanceNetworkInterfaceSpecificationUnmarshaller _instance;
    public static LaunchTemplateInstanceNetworkInterfaceSpecificationUnmarshaller Instance { get; }
    private static LaunchTemplateInstanceNetworkInterfaceSpecificationUnmarshaller();
    public sealed virtual LaunchTemplateInstanceNetworkInterfaceSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateInstanceNetworkInterfaceSpecification Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateInstanceNetworkInterfaceSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateLicenseConfigurationUnmarshaller : object {
    private static LaunchTemplateLicenseConfigurationUnmarshaller _instance;
    public static LaunchTemplateLicenseConfigurationUnmarshaller Instance { get; }
    private static LaunchTemplateLicenseConfigurationUnmarshaller();
    public sealed virtual LaunchTemplateLicenseConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateLicenseConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateLicenseConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateOverridesUnmarshaller : object {
    private static LaunchTemplateOverridesUnmarshaller _instance;
    public static LaunchTemplateOverridesUnmarshaller Instance { get; }
    private static LaunchTemplateOverridesUnmarshaller();
    public sealed virtual LaunchTemplateOverrides Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateOverrides Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateOverridesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplatePlacementUnmarshaller : object {
    private static LaunchTemplatePlacementUnmarshaller _instance;
    public static LaunchTemplatePlacementUnmarshaller Instance { get; }
    private static LaunchTemplatePlacementUnmarshaller();
    public sealed virtual LaunchTemplatePlacement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplatePlacement Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplatePlacementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplatePrivateDnsNameOptionsUnmarshaller : object {
    private static LaunchTemplatePrivateDnsNameOptionsUnmarshaller _instance;
    public static LaunchTemplatePrivateDnsNameOptionsUnmarshaller Instance { get; }
    private static LaunchTemplatePrivateDnsNameOptionsUnmarshaller();
    public sealed virtual LaunchTemplatePrivateDnsNameOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplatePrivateDnsNameOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplatePrivateDnsNameOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplatesMonitoringUnmarshaller : object {
    private static LaunchTemplatesMonitoringUnmarshaller _instance;
    public static LaunchTemplatesMonitoringUnmarshaller Instance { get; }
    private static LaunchTemplatesMonitoringUnmarshaller();
    public sealed virtual LaunchTemplatesMonitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplatesMonitoring Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplatesMonitoringUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateSpotMarketOptionsUnmarshaller : object {
    private static LaunchTemplateSpotMarketOptionsUnmarshaller _instance;
    public static LaunchTemplateSpotMarketOptionsUnmarshaller Instance { get; }
    private static LaunchTemplateSpotMarketOptionsUnmarshaller();
    public sealed virtual LaunchTemplateSpotMarketOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateSpotMarketOptions Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateSpotMarketOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateTagSpecificationUnmarshaller : object {
    private static LaunchTemplateTagSpecificationUnmarshaller _instance;
    public static LaunchTemplateTagSpecificationUnmarshaller Instance { get; }
    private static LaunchTemplateTagSpecificationUnmarshaller();
    public sealed virtual LaunchTemplateTagSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateTagSpecification Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateTagSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateUnmarshaller : object {
    private static LaunchTemplateUnmarshaller _instance;
    public static LaunchTemplateUnmarshaller Instance { get; }
    private static LaunchTemplateUnmarshaller();
    public sealed virtual LaunchTemplate Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplate Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchTemplateVersionUnmarshaller : object {
    private static LaunchTemplateVersionUnmarshaller _instance;
    public static LaunchTemplateVersionUnmarshaller Instance { get; }
    private static LaunchTemplateVersionUnmarshaller();
    public sealed virtual LaunchTemplateVersion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchTemplateVersion Unmarshall(JsonUnmarshallerContext context);
    public static LaunchTemplateVersionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller : object {
    private static LicenseConfigurationUnmarshaller _instance;
    public static LicenseConfigurationUnmarshaller Instance { get; }
    private static LicenseConfigurationUnmarshaller();
    public sealed virtual LicenseConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LicenseConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static LicenseConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ListImagesInRecycleBinRequestMarshaller : object {
    private static ListImagesInRecycleBinRequestMarshaller _instance;
    public static ListImagesInRecycleBinRequestMarshaller Instance { get; }
    private static ListImagesInRecycleBinRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListImagesInRecycleBinRequest publicRequest);
    internal static ListImagesInRecycleBinRequestMarshaller GetInstance();
    public static ListImagesInRecycleBinRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ListImagesInRecycleBinResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ListImagesInRecycleBinResponseUnmarshaller _instance;
    public static ListImagesInRecycleBinResponseUnmarshaller Instance { get; }
    private static ListImagesInRecycleBinResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListImagesInRecycleBinResponseUnmarshaller GetInstance();
    public static ListImagesInRecycleBinResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ListSnapshotsInRecycleBinRequestMarshaller : object {
    private static ListSnapshotsInRecycleBinRequestMarshaller _instance;
    public static ListSnapshotsInRecycleBinRequestMarshaller Instance { get; }
    private static ListSnapshotsInRecycleBinRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSnapshotsInRecycleBinRequest publicRequest);
    internal static ListSnapshotsInRecycleBinRequestMarshaller GetInstance();
    public static ListSnapshotsInRecycleBinRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ListSnapshotsInRecycleBinResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ListSnapshotsInRecycleBinResponseUnmarshaller _instance;
    public static ListSnapshotsInRecycleBinResponseUnmarshaller Instance { get; }
    private static ListSnapshotsInRecycleBinResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSnapshotsInRecycleBinResponseUnmarshaller GetInstance();
    public static ListSnapshotsInRecycleBinResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LoadBalancersConfigUnmarshaller : object {
    private static LoadBalancersConfigUnmarshaller _instance;
    public static LoadBalancersConfigUnmarshaller Instance { get; }
    private static LoadBalancersConfigUnmarshaller();
    public sealed virtual LoadBalancersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancersConfig Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancersConfigUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LoadPermissionUnmarshaller : object {
    private static LoadPermissionUnmarshaller _instance;
    public static LoadPermissionUnmarshaller Instance { get; }
    private static LoadPermissionUnmarshaller();
    public sealed virtual LoadPermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadPermission Unmarshall(JsonUnmarshallerContext context);
    public static LoadPermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LocalGatewayRouteTableUnmarshaller : object {
    private static LocalGatewayRouteTableUnmarshaller _instance;
    public static LocalGatewayRouteTableUnmarshaller Instance { get; }
    private static LocalGatewayRouteTableUnmarshaller();
    public sealed virtual LocalGatewayRouteTable Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalGatewayRouteTable Unmarshall(JsonUnmarshallerContext context);
    public static LocalGatewayRouteTableUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LocalGatewayRouteTableVirtualInterfaceGroupAssociationUnmarshaller : object {
    private static LocalGatewayRouteTableVirtualInterfaceGroupAssociationUnmarshaller _instance;
    public static LocalGatewayRouteTableVirtualInterfaceGroupAssociationUnmarshaller Instance { get; }
    private static LocalGatewayRouteTableVirtualInterfaceGroupAssociationUnmarshaller();
    public sealed virtual LocalGatewayRouteTableVirtualInterfaceGroupAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalGatewayRouteTableVirtualInterfaceGroupAssociation Unmarshall(JsonUnmarshallerContext context);
    public static LocalGatewayRouteTableVirtualInterfaceGroupAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LocalGatewayRouteTableVpcAssociationUnmarshaller : object {
    private static LocalGatewayRouteTableVpcAssociationUnmarshaller _instance;
    public static LocalGatewayRouteTableVpcAssociationUnmarshaller Instance { get; }
    private static LocalGatewayRouteTableVpcAssociationUnmarshaller();
    public sealed virtual LocalGatewayRouteTableVpcAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalGatewayRouteTableVpcAssociation Unmarshall(JsonUnmarshallerContext context);
    public static LocalGatewayRouteTableVpcAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LocalGatewayRouteUnmarshaller : object {
    private static LocalGatewayRouteUnmarshaller _instance;
    public static LocalGatewayRouteUnmarshaller Instance { get; }
    private static LocalGatewayRouteUnmarshaller();
    public sealed virtual LocalGatewayRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalGatewayRoute Unmarshall(JsonUnmarshallerContext context);
    public static LocalGatewayRouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LocalGatewayUnmarshaller : object {
    private static LocalGatewayUnmarshaller _instance;
    public static LocalGatewayUnmarshaller Instance { get; }
    private static LocalGatewayUnmarshaller();
    public sealed virtual LocalGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalGateway Unmarshall(JsonUnmarshallerContext context);
    public static LocalGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LocalGatewayVirtualInterfaceGroupUnmarshaller : object {
    private static LocalGatewayVirtualInterfaceGroupUnmarshaller _instance;
    public static LocalGatewayVirtualInterfaceGroupUnmarshaller Instance { get; }
    private static LocalGatewayVirtualInterfaceGroupUnmarshaller();
    public sealed virtual LocalGatewayVirtualInterfaceGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalGatewayVirtualInterfaceGroup Unmarshall(JsonUnmarshallerContext context);
    public static LocalGatewayVirtualInterfaceGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LocalGatewayVirtualInterfaceUnmarshaller : object {
    private static LocalGatewayVirtualInterfaceUnmarshaller _instance;
    public static LocalGatewayVirtualInterfaceUnmarshaller Instance { get; }
    private static LocalGatewayVirtualInterfaceUnmarshaller();
    public sealed virtual LocalGatewayVirtualInterface Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalGatewayVirtualInterface Unmarshall(JsonUnmarshallerContext context);
    public static LocalGatewayVirtualInterfaceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LockedSnapshotsInfoUnmarshaller : object {
    private static LockedSnapshotsInfoUnmarshaller _instance;
    public static LockedSnapshotsInfoUnmarshaller Instance { get; }
    private static LockedSnapshotsInfoUnmarshaller();
    public sealed virtual LockedSnapshotsInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LockedSnapshotsInfo Unmarshall(JsonUnmarshallerContext context);
    public static LockedSnapshotsInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LockSnapshotRequestMarshaller : object {
    private static LockSnapshotRequestMarshaller _instance;
    public static LockSnapshotRequestMarshaller Instance { get; }
    private static LockSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(LockSnapshotRequest publicRequest);
    internal static LockSnapshotRequestMarshaller GetInstance();
    public static LockSnapshotRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LockSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static LockSnapshotResponseUnmarshaller _instance;
    public static LockSnapshotResponseUnmarshaller Instance { get; }
    private static LockSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static LockSnapshotResponseUnmarshaller GetInstance();
    public static LockSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MacHostUnmarshaller : object {
    private static MacHostUnmarshaller _instance;
    public static MacHostUnmarshaller Instance { get; }
    private static MacHostUnmarshaller();
    public sealed virtual MacHost Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MacHost Unmarshall(JsonUnmarshallerContext context);
    public static MacHostUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MaintenanceDetailsUnmarshaller : object {
    private static MaintenanceDetailsUnmarshaller _instance;
    public static MaintenanceDetailsUnmarshaller Instance { get; }
    private static MaintenanceDetailsUnmarshaller();
    public sealed virtual MaintenanceDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceDetails Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ManagedPrefixListUnmarshaller : object {
    private static ManagedPrefixListUnmarshaller _instance;
    public static ManagedPrefixListUnmarshaller Instance { get; }
    private static ManagedPrefixListUnmarshaller();
    public sealed virtual ManagedPrefixList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ManagedPrefixList Unmarshall(JsonUnmarshallerContext context);
    public static ManagedPrefixListUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MediaAcceleratorInfoUnmarshaller : object {
    private static MediaAcceleratorInfoUnmarshaller _instance;
    public static MediaAcceleratorInfoUnmarshaller Instance { get; }
    private static MediaAcceleratorInfoUnmarshaller();
    public sealed virtual MediaAcceleratorInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MediaAcceleratorInfo Unmarshall(JsonUnmarshallerContext context);
    public static MediaAcceleratorInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MediaDeviceInfoUnmarshaller : object {
    private static MediaDeviceInfoUnmarshaller _instance;
    public static MediaDeviceInfoUnmarshaller Instance { get; }
    private static MediaDeviceInfoUnmarshaller();
    public sealed virtual MediaDeviceInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MediaDeviceInfo Unmarshall(JsonUnmarshallerContext context);
    public static MediaDeviceInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MediaDeviceMemoryInfoUnmarshaller : object {
    private static MediaDeviceMemoryInfoUnmarshaller _instance;
    public static MediaDeviceMemoryInfoUnmarshaller Instance { get; }
    private static MediaDeviceMemoryInfoUnmarshaller();
    public sealed virtual MediaDeviceMemoryInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MediaDeviceMemoryInfo Unmarshall(JsonUnmarshallerContext context);
    public static MediaDeviceMemoryInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MemoryGiBPerVCpuUnmarshaller : object {
    private static MemoryGiBPerVCpuUnmarshaller _instance;
    public static MemoryGiBPerVCpuUnmarshaller Instance { get; }
    private static MemoryGiBPerVCpuUnmarshaller();
    public sealed virtual MemoryGiBPerVCpu Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MemoryGiBPerVCpu Unmarshall(JsonUnmarshallerContext context);
    public static MemoryGiBPerVCpuUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MemoryInfoUnmarshaller : object {
    private static MemoryInfoUnmarshaller _instance;
    public static MemoryInfoUnmarshaller Instance { get; }
    private static MemoryInfoUnmarshaller();
    public sealed virtual MemoryInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MemoryInfo Unmarshall(JsonUnmarshallerContext context);
    public static MemoryInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MemoryMiBUnmarshaller : object {
    private static MemoryMiBUnmarshaller _instance;
    public static MemoryMiBUnmarshaller Instance { get; }
    private static MemoryMiBUnmarshaller();
    public sealed virtual MemoryMiB Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MemoryMiB Unmarshall(JsonUnmarshallerContext context);
    public static MemoryMiBUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MetricPointUnmarshaller : object {
    private static MetricPointUnmarshaller _instance;
    public static MetricPointUnmarshaller Instance { get; }
    private static MetricPointUnmarshaller();
    public sealed virtual MetricPoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricPoint Unmarshall(JsonUnmarshallerContext context);
    public static MetricPointUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyAddressAttributeRequestMarshaller : object {
    private static ModifyAddressAttributeRequestMarshaller _instance;
    public static ModifyAddressAttributeRequestMarshaller Instance { get; }
    private static ModifyAddressAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyAddressAttributeRequest publicRequest);
    internal static ModifyAddressAttributeRequestMarshaller GetInstance();
    public static ModifyAddressAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyAddressAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyAddressAttributeResponseUnmarshaller _instance;
    public static ModifyAddressAttributeResponseUnmarshaller Instance { get; }
    private static ModifyAddressAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyAddressAttributeResponseUnmarshaller GetInstance();
    public static ModifyAddressAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyAvailabilityZoneGroupRequestMarshaller : object {
    private static ModifyAvailabilityZoneGroupRequestMarshaller _instance;
    public static ModifyAvailabilityZoneGroupRequestMarshaller Instance { get; }
    private static ModifyAvailabilityZoneGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyAvailabilityZoneGroupRequest publicRequest);
    internal static ModifyAvailabilityZoneGroupRequestMarshaller GetInstance();
    public static ModifyAvailabilityZoneGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyAvailabilityZoneGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyAvailabilityZoneGroupResponseUnmarshaller _instance;
    public static ModifyAvailabilityZoneGroupResponseUnmarshaller Instance { get; }
    private static ModifyAvailabilityZoneGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyAvailabilityZoneGroupResponseUnmarshaller GetInstance();
    public static ModifyAvailabilityZoneGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyCapacityReservationFleetRequestMarshaller : object {
    private static ModifyCapacityReservationFleetRequestMarshaller _instance;
    public static ModifyCapacityReservationFleetRequestMarshaller Instance { get; }
    private static ModifyCapacityReservationFleetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyCapacityReservationFleetRequest publicRequest);
    internal static ModifyCapacityReservationFleetRequestMarshaller GetInstance();
    public static ModifyCapacityReservationFleetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyCapacityReservationFleetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyCapacityReservationFleetResponseUnmarshaller _instance;
    public static ModifyCapacityReservationFleetResponseUnmarshaller Instance { get; }
    private static ModifyCapacityReservationFleetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyCapacityReservationFleetResponseUnmarshaller GetInstance();
    public static ModifyCapacityReservationFleetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyCapacityReservationRequestMarshaller : object {
    private static ModifyCapacityReservationRequestMarshaller _instance;
    public static ModifyCapacityReservationRequestMarshaller Instance { get; }
    private static ModifyCapacityReservationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyCapacityReservationRequest publicRequest);
    internal static ModifyCapacityReservationRequestMarshaller GetInstance();
    public static ModifyCapacityReservationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyCapacityReservationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyCapacityReservationResponseUnmarshaller _instance;
    public static ModifyCapacityReservationResponseUnmarshaller Instance { get; }
    private static ModifyCapacityReservationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyCapacityReservationResponseUnmarshaller GetInstance();
    public static ModifyCapacityReservationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyClientVpnEndpointRequestMarshaller : object {
    private static ModifyClientVpnEndpointRequestMarshaller _instance;
    public static ModifyClientVpnEndpointRequestMarshaller Instance { get; }
    private static ModifyClientVpnEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyClientVpnEndpointRequest publicRequest);
    internal static ModifyClientVpnEndpointRequestMarshaller GetInstance();
    public static ModifyClientVpnEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyClientVpnEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyClientVpnEndpointResponseUnmarshaller _instance;
    public static ModifyClientVpnEndpointResponseUnmarshaller Instance { get; }
    private static ModifyClientVpnEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyClientVpnEndpointResponseUnmarshaller GetInstance();
    public static ModifyClientVpnEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyDefaultCreditSpecificationRequestMarshaller : object {
    private static ModifyDefaultCreditSpecificationRequestMarshaller _instance;
    public static ModifyDefaultCreditSpecificationRequestMarshaller Instance { get; }
    private static ModifyDefaultCreditSpecificationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDefaultCreditSpecificationRequest publicRequest);
    internal static ModifyDefaultCreditSpecificationRequestMarshaller GetInstance();
    public static ModifyDefaultCreditSpecificationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyDefaultCreditSpecificationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyDefaultCreditSpecificationResponseUnmarshaller _instance;
    public static ModifyDefaultCreditSpecificationResponseUnmarshaller Instance { get; }
    private static ModifyDefaultCreditSpecificationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDefaultCreditSpecificationResponseUnmarshaller GetInstance();
    public static ModifyDefaultCreditSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyEbsDefaultKmsKeyIdRequestMarshaller : object {
    private static ModifyEbsDefaultKmsKeyIdRequestMarshaller _instance;
    public static ModifyEbsDefaultKmsKeyIdRequestMarshaller Instance { get; }
    private static ModifyEbsDefaultKmsKeyIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyEbsDefaultKmsKeyIdRequest publicRequest);
    internal static ModifyEbsDefaultKmsKeyIdRequestMarshaller GetInstance();
    public static ModifyEbsDefaultKmsKeyIdRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyEbsDefaultKmsKeyIdResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyEbsDefaultKmsKeyIdResponseUnmarshaller _instance;
    public static ModifyEbsDefaultKmsKeyIdResponseUnmarshaller Instance { get; }
    private static ModifyEbsDefaultKmsKeyIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyEbsDefaultKmsKeyIdResponseUnmarshaller GetInstance();
    public static ModifyEbsDefaultKmsKeyIdResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyFleetRequestMarshaller : object {
    private static ModifyFleetRequestMarshaller _instance;
    public static ModifyFleetRequestMarshaller Instance { get; }
    private static ModifyFleetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyFleetRequest publicRequest);
    internal static ModifyFleetRequestMarshaller GetInstance();
    public static ModifyFleetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyFleetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyFleetResponseUnmarshaller _instance;
    public static ModifyFleetResponseUnmarshaller Instance { get; }
    private static ModifyFleetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyFleetResponseUnmarshaller GetInstance();
    public static ModifyFleetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyFpgaImageAttributeRequestMarshaller : object {
    private static ModifyFpgaImageAttributeRequestMarshaller _instance;
    public static ModifyFpgaImageAttributeRequestMarshaller Instance { get; }
    private static ModifyFpgaImageAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyFpgaImageAttributeRequest publicRequest);
    internal static ModifyFpgaImageAttributeRequestMarshaller GetInstance();
    public static ModifyFpgaImageAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyFpgaImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyFpgaImageAttributeResponseUnmarshaller _instance;
    public static ModifyFpgaImageAttributeResponseUnmarshaller Instance { get; }
    private static ModifyFpgaImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyFpgaImageAttributeResponseUnmarshaller GetInstance();
    public static ModifyFpgaImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsRequestMarshaller : object {
    private static ModifyHostsRequestMarshaller _instance;
    public static ModifyHostsRequestMarshaller Instance { get; }
    private static ModifyHostsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyHostsRequest publicRequest);
    internal static ModifyHostsRequestMarshaller GetInstance();
    public static ModifyHostsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyHostsResponseUnmarshaller _instance;
    public static ModifyHostsResponseUnmarshaller Instance { get; }
    private static ModifyHostsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyHostsResponseUnmarshaller GetInstance();
    public static ModifyHostsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatRequestMarshaller : object {
    private static ModifyIdentityIdFormatRequestMarshaller _instance;
    public static ModifyIdentityIdFormatRequestMarshaller Instance { get; }
    private static ModifyIdentityIdFormatRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIdentityIdFormatRequest publicRequest);
    internal static ModifyIdentityIdFormatRequestMarshaller GetInstance();
    public static ModifyIdentityIdFormatRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyIdentityIdFormatResponseUnmarshaller _instance;
    public static ModifyIdentityIdFormatResponseUnmarshaller Instance { get; }
    private static ModifyIdentityIdFormatResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIdentityIdFormatResponseUnmarshaller GetInstance();
    public static ModifyIdentityIdFormatResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatRequestMarshaller : object {
    private static ModifyIdFormatRequestMarshaller _instance;
    public static ModifyIdFormatRequestMarshaller Instance { get; }
    private static ModifyIdFormatRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIdFormatRequest publicRequest);
    internal static ModifyIdFormatRequestMarshaller GetInstance();
    public static ModifyIdFormatRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyIdFormatResponseUnmarshaller _instance;
    public static ModifyIdFormatResponseUnmarshaller Instance { get; }
    private static ModifyIdFormatResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIdFormatResponseUnmarshaller GetInstance();
    public static ModifyIdFormatResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeRequestMarshaller : object {
    private static ModifyImageAttributeRequestMarshaller _instance;
    public static ModifyImageAttributeRequestMarshaller Instance { get; }
    private static ModifyImageAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyImageAttributeRequest publicRequest);
    internal static ModifyImageAttributeRequestMarshaller GetInstance();
    public static ModifyImageAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyImageAttributeResponseUnmarshaller _instance;
    public static ModifyImageAttributeResponseUnmarshaller Instance { get; }
    private static ModifyImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyImageAttributeResponseUnmarshaller GetInstance();
    public static ModifyImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeRequestMarshaller : object {
    private static ModifyInstanceAttributeRequestMarshaller _instance;
    public static ModifyInstanceAttributeRequestMarshaller Instance { get; }
    private static ModifyInstanceAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceAttributeRequest publicRequest);
    internal static ModifyInstanceAttributeRequestMarshaller GetInstance();
    public static ModifyInstanceAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceAttributeResponseUnmarshaller _instance;
    public static ModifyInstanceAttributeResponseUnmarshaller Instance { get; }
    private static ModifyInstanceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceAttributeResponseUnmarshaller GetInstance();
    public static ModifyInstanceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceCapacityReservationAttributesRequestMarshaller : object {
    private static ModifyInstanceCapacityReservationAttributesRequestMarshaller _instance;
    public static ModifyInstanceCapacityReservationAttributesRequestMarshaller Instance { get; }
    private static ModifyInstanceCapacityReservationAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceCapacityReservationAttributesRequest publicRequest);
    internal static ModifyInstanceCapacityReservationAttributesRequestMarshaller GetInstance();
    public static ModifyInstanceCapacityReservationAttributesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceCapacityReservationAttributesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceCapacityReservationAttributesResponseUnmarshaller _instance;
    public static ModifyInstanceCapacityReservationAttributesResponseUnmarshaller Instance { get; }
    private static ModifyInstanceCapacityReservationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceCapacityReservationAttributesResponseUnmarshaller GetInstance();
    public static ModifyInstanceCapacityReservationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceCreditSpecificationRequestMarshaller : object {
    private static ModifyInstanceCreditSpecificationRequestMarshaller _instance;
    public static ModifyInstanceCreditSpecificationRequestMarshaller Instance { get; }
    private static ModifyInstanceCreditSpecificationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceCreditSpecificationRequest publicRequest);
    internal static ModifyInstanceCreditSpecificationRequestMarshaller GetInstance();
    public static ModifyInstanceCreditSpecificationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceCreditSpecificationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceCreditSpecificationResponseUnmarshaller _instance;
    public static ModifyInstanceCreditSpecificationResponseUnmarshaller Instance { get; }
    private static ModifyInstanceCreditSpecificationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceCreditSpecificationResponseUnmarshaller GetInstance();
    public static ModifyInstanceCreditSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceEventStartTimeRequestMarshaller : object {
    private static ModifyInstanceEventStartTimeRequestMarshaller _instance;
    public static ModifyInstanceEventStartTimeRequestMarshaller Instance { get; }
    private static ModifyInstanceEventStartTimeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceEventStartTimeRequest publicRequest);
    internal static ModifyInstanceEventStartTimeRequestMarshaller GetInstance();
    public static ModifyInstanceEventStartTimeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceEventStartTimeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceEventStartTimeResponseUnmarshaller _instance;
    public static ModifyInstanceEventStartTimeResponseUnmarshaller Instance { get; }
    private static ModifyInstanceEventStartTimeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceEventStartTimeResponseUnmarshaller GetInstance();
    public static ModifyInstanceEventStartTimeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceEventWindowRequestMarshaller : object {
    private static ModifyInstanceEventWindowRequestMarshaller _instance;
    public static ModifyInstanceEventWindowRequestMarshaller Instance { get; }
    private static ModifyInstanceEventWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceEventWindowRequest publicRequest);
    internal static ModifyInstanceEventWindowRequestMarshaller GetInstance();
    public static ModifyInstanceEventWindowRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceEventWindowResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceEventWindowResponseUnmarshaller _instance;
    public static ModifyInstanceEventWindowResponseUnmarshaller Instance { get; }
    private static ModifyInstanceEventWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceEventWindowResponseUnmarshaller GetInstance();
    public static ModifyInstanceEventWindowResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceMaintenanceOptionsRequestMarshaller : object {
    private static ModifyInstanceMaintenanceOptionsRequestMarshaller _instance;
    public static ModifyInstanceMaintenanceOptionsRequestMarshaller Instance { get; }
    private static ModifyInstanceMaintenanceOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceMaintenanceOptionsRequest publicRequest);
    internal static ModifyInstanceMaintenanceOptionsRequestMarshaller GetInstance();
    public static ModifyInstanceMaintenanceOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceMaintenanceOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceMaintenanceOptionsResponseUnmarshaller _instance;
    public static ModifyInstanceMaintenanceOptionsResponseUnmarshaller Instance { get; }
    private static ModifyInstanceMaintenanceOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceMaintenanceOptionsResponseUnmarshaller GetInstance();
    public static ModifyInstanceMaintenanceOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceMetadataDefaultsRequestMarshaller : object {
    private static ModifyInstanceMetadataDefaultsRequestMarshaller _instance;
    public static ModifyInstanceMetadataDefaultsRequestMarshaller Instance { get; }
    private static ModifyInstanceMetadataDefaultsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceMetadataDefaultsRequest publicRequest);
    internal static ModifyInstanceMetadataDefaultsRequestMarshaller GetInstance();
    public static ModifyInstanceMetadataDefaultsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceMetadataDefaultsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceMetadataDefaultsResponseUnmarshaller _instance;
    public static ModifyInstanceMetadataDefaultsResponseUnmarshaller Instance { get; }
    private static ModifyInstanceMetadataDefaultsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceMetadataDefaultsResponseUnmarshaller GetInstance();
    public static ModifyInstanceMetadataDefaultsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceMetadataOptionsRequestMarshaller : object {
    private static ModifyInstanceMetadataOptionsRequestMarshaller _instance;
    public static ModifyInstanceMetadataOptionsRequestMarshaller Instance { get; }
    private static ModifyInstanceMetadataOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceMetadataOptionsRequest publicRequest);
    internal static ModifyInstanceMetadataOptionsRequestMarshaller GetInstance();
    public static ModifyInstanceMetadataOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceMetadataOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceMetadataOptionsResponseUnmarshaller _instance;
    public static ModifyInstanceMetadataOptionsResponseUnmarshaller Instance { get; }
    private static ModifyInstanceMetadataOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceMetadataOptionsResponseUnmarshaller GetInstance();
    public static ModifyInstanceMetadataOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementRequestMarshaller : object {
    private static ModifyInstancePlacementRequestMarshaller _instance;
    public static ModifyInstancePlacementRequestMarshaller Instance { get; }
    private static ModifyInstancePlacementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstancePlacementRequest publicRequest);
    internal static ModifyInstancePlacementRequestMarshaller GetInstance();
    public static ModifyInstancePlacementRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstancePlacementResponseUnmarshaller _instance;
    public static ModifyInstancePlacementResponseUnmarshaller Instance { get; }
    private static ModifyInstancePlacementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstancePlacementResponseUnmarshaller GetInstance();
    public static ModifyInstancePlacementResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamPoolRequestMarshaller : object {
    private static ModifyIpamPoolRequestMarshaller _instance;
    public static ModifyIpamPoolRequestMarshaller Instance { get; }
    private static ModifyIpamPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIpamPoolRequest publicRequest);
    internal static ModifyIpamPoolRequestMarshaller GetInstance();
    public static ModifyIpamPoolRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamPoolResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyIpamPoolResponseUnmarshaller _instance;
    public static ModifyIpamPoolResponseUnmarshaller Instance { get; }
    private static ModifyIpamPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIpamPoolResponseUnmarshaller GetInstance();
    public static ModifyIpamPoolResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamRequestMarshaller : object {
    private static ModifyIpamRequestMarshaller _instance;
    public static ModifyIpamRequestMarshaller Instance { get; }
    private static ModifyIpamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIpamRequest publicRequest);
    internal static ModifyIpamRequestMarshaller GetInstance();
    public static ModifyIpamRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamResourceCidrRequestMarshaller : object {
    private static ModifyIpamResourceCidrRequestMarshaller _instance;
    public static ModifyIpamResourceCidrRequestMarshaller Instance { get; }
    private static ModifyIpamResourceCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIpamResourceCidrRequest publicRequest);
    internal static ModifyIpamResourceCidrRequestMarshaller GetInstance();
    public static ModifyIpamResourceCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamResourceCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyIpamResourceCidrResponseUnmarshaller _instance;
    public static ModifyIpamResourceCidrResponseUnmarshaller Instance { get; }
    private static ModifyIpamResourceCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIpamResourceCidrResponseUnmarshaller GetInstance();
    public static ModifyIpamResourceCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamResourceDiscoveryRequestMarshaller : object {
    private static ModifyIpamResourceDiscoveryRequestMarshaller _instance;
    public static ModifyIpamResourceDiscoveryRequestMarshaller Instance { get; }
    private static ModifyIpamResourceDiscoveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIpamResourceDiscoveryRequest publicRequest);
    internal static ModifyIpamResourceDiscoveryRequestMarshaller GetInstance();
    public static ModifyIpamResourceDiscoveryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamResourceDiscoveryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyIpamResourceDiscoveryResponseUnmarshaller _instance;
    public static ModifyIpamResourceDiscoveryResponseUnmarshaller Instance { get; }
    private static ModifyIpamResourceDiscoveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIpamResourceDiscoveryResponseUnmarshaller GetInstance();
    public static ModifyIpamResourceDiscoveryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyIpamResponseUnmarshaller _instance;
    public static ModifyIpamResponseUnmarshaller Instance { get; }
    private static ModifyIpamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIpamResponseUnmarshaller GetInstance();
    public static ModifyIpamResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamScopeRequestMarshaller : object {
    private static ModifyIpamScopeRequestMarshaller _instance;
    public static ModifyIpamScopeRequestMarshaller Instance { get; }
    private static ModifyIpamScopeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIpamScopeRequest publicRequest);
    internal static ModifyIpamScopeRequestMarshaller GetInstance();
    public static ModifyIpamScopeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIpamScopeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyIpamScopeResponseUnmarshaller _instance;
    public static ModifyIpamScopeResponseUnmarshaller Instance { get; }
    private static ModifyIpamScopeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIpamScopeResponseUnmarshaller GetInstance();
    public static ModifyIpamScopeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyLaunchTemplateRequestMarshaller : object {
    private static ModifyLaunchTemplateRequestMarshaller _instance;
    public static ModifyLaunchTemplateRequestMarshaller Instance { get; }
    private static ModifyLaunchTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyLaunchTemplateRequest publicRequest);
    internal static ModifyLaunchTemplateRequestMarshaller GetInstance();
    public static ModifyLaunchTemplateRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyLaunchTemplateResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyLaunchTemplateResponseUnmarshaller _instance;
    public static ModifyLaunchTemplateResponseUnmarshaller Instance { get; }
    private static ModifyLaunchTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyLaunchTemplateResponseUnmarshaller GetInstance();
    public static ModifyLaunchTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyLocalGatewayRouteRequestMarshaller : object {
    private static ModifyLocalGatewayRouteRequestMarshaller _instance;
    public static ModifyLocalGatewayRouteRequestMarshaller Instance { get; }
    private static ModifyLocalGatewayRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyLocalGatewayRouteRequest publicRequest);
    internal static ModifyLocalGatewayRouteRequestMarshaller GetInstance();
    public static ModifyLocalGatewayRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyLocalGatewayRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyLocalGatewayRouteResponseUnmarshaller _instance;
    public static ModifyLocalGatewayRouteResponseUnmarshaller Instance { get; }
    private static ModifyLocalGatewayRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyLocalGatewayRouteResponseUnmarshaller GetInstance();
    public static ModifyLocalGatewayRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyManagedPrefixListRequestMarshaller : object {
    private static ModifyManagedPrefixListRequestMarshaller _instance;
    public static ModifyManagedPrefixListRequestMarshaller Instance { get; }
    private static ModifyManagedPrefixListRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyManagedPrefixListRequest publicRequest);
    internal static ModifyManagedPrefixListRequestMarshaller GetInstance();
    public static ModifyManagedPrefixListRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyManagedPrefixListResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyManagedPrefixListResponseUnmarshaller _instance;
    public static ModifyManagedPrefixListResponseUnmarshaller Instance { get; }
    private static ModifyManagedPrefixListResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyManagedPrefixListResponseUnmarshaller GetInstance();
    public static ModifyManagedPrefixListResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeRequestMarshaller : object {
    private static ModifyNetworkInterfaceAttributeRequestMarshaller _instance;
    public static ModifyNetworkInterfaceAttributeRequestMarshaller Instance { get; }
    private static ModifyNetworkInterfaceAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyNetworkInterfaceAttributeRequest publicRequest);
    internal static ModifyNetworkInterfaceAttributeRequestMarshaller GetInstance();
    public static ModifyNetworkInterfaceAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyNetworkInterfaceAttributeResponseUnmarshaller _instance;
    public static ModifyNetworkInterfaceAttributeResponseUnmarshaller Instance { get; }
    private static ModifyNetworkInterfaceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyNetworkInterfaceAttributeResponseUnmarshaller GetInstance();
    public static ModifyNetworkInterfaceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyPrivateDnsNameOptionsRequestMarshaller : object {
    private static ModifyPrivateDnsNameOptionsRequestMarshaller _instance;
    public static ModifyPrivateDnsNameOptionsRequestMarshaller Instance { get; }
    private static ModifyPrivateDnsNameOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyPrivateDnsNameOptionsRequest publicRequest);
    internal static ModifyPrivateDnsNameOptionsRequestMarshaller GetInstance();
    public static ModifyPrivateDnsNameOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyPrivateDnsNameOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyPrivateDnsNameOptionsResponseUnmarshaller _instance;
    public static ModifyPrivateDnsNameOptionsResponseUnmarshaller Instance { get; }
    private static ModifyPrivateDnsNameOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyPrivateDnsNameOptionsResponseUnmarshaller GetInstance();
    public static ModifyPrivateDnsNameOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesRequestMarshaller : object {
    private static ModifyReservedInstancesRequestMarshaller _instance;
    public static ModifyReservedInstancesRequestMarshaller Instance { get; }
    private static ModifyReservedInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyReservedInstancesRequest publicRequest);
    internal static ModifyReservedInstancesRequestMarshaller GetInstance();
    public static ModifyReservedInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyReservedInstancesResponseUnmarshaller _instance;
    public static ModifyReservedInstancesResponseUnmarshaller Instance { get; }
    private static ModifyReservedInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyReservedInstancesResponseUnmarshaller GetInstance();
    public static ModifyReservedInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySecurityGroupRulesRequestMarshaller : object {
    private static ModifySecurityGroupRulesRequestMarshaller _instance;
    public static ModifySecurityGroupRulesRequestMarshaller Instance { get; }
    private static ModifySecurityGroupRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifySecurityGroupRulesRequest publicRequest);
    internal static ModifySecurityGroupRulesRequestMarshaller GetInstance();
    public static ModifySecurityGroupRulesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySecurityGroupRulesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifySecurityGroupRulesResponseUnmarshaller _instance;
    public static ModifySecurityGroupRulesResponseUnmarshaller Instance { get; }
    private static ModifySecurityGroupRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifySecurityGroupRulesResponseUnmarshaller GetInstance();
    public static ModifySecurityGroupRulesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeRequestMarshaller : object {
    private static ModifySnapshotAttributeRequestMarshaller _instance;
    public static ModifySnapshotAttributeRequestMarshaller Instance { get; }
    private static ModifySnapshotAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifySnapshotAttributeRequest publicRequest);
    internal static ModifySnapshotAttributeRequestMarshaller GetInstance();
    public static ModifySnapshotAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifySnapshotAttributeResponseUnmarshaller _instance;
    public static ModifySnapshotAttributeResponseUnmarshaller Instance { get; }
    private static ModifySnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifySnapshotAttributeResponseUnmarshaller GetInstance();
    public static ModifySnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotTierRequestMarshaller : object {
    private static ModifySnapshotTierRequestMarshaller _instance;
    public static ModifySnapshotTierRequestMarshaller Instance { get; }
    private static ModifySnapshotTierRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifySnapshotTierRequest publicRequest);
    internal static ModifySnapshotTierRequestMarshaller GetInstance();
    public static ModifySnapshotTierRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotTierResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifySnapshotTierResponseUnmarshaller _instance;
    public static ModifySnapshotTierResponseUnmarshaller Instance { get; }
    private static ModifySnapshotTierResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifySnapshotTierResponseUnmarshaller GetInstance();
    public static ModifySnapshotTierResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestRequestMarshaller : object {
    private static ModifySpotFleetRequestRequestMarshaller _instance;
    public static ModifySpotFleetRequestRequestMarshaller Instance { get; }
    private static ModifySpotFleetRequestRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifySpotFleetRequestRequest publicRequest);
    internal static ModifySpotFleetRequestRequestMarshaller GetInstance();
    public static ModifySpotFleetRequestRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifySpotFleetRequestResponseUnmarshaller _instance;
    public static ModifySpotFleetRequestResponseUnmarshaller Instance { get; }
    private static ModifySpotFleetRequestResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifySpotFleetRequestResponseUnmarshaller GetInstance();
    public static ModifySpotFleetRequestResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeRequestMarshaller : object {
    private static ModifySubnetAttributeRequestMarshaller _instance;
    public static ModifySubnetAttributeRequestMarshaller Instance { get; }
    private static ModifySubnetAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifySubnetAttributeRequest publicRequest);
    internal static ModifySubnetAttributeRequestMarshaller GetInstance();
    public static ModifySubnetAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifySubnetAttributeResponseUnmarshaller _instance;
    public static ModifySubnetAttributeResponseUnmarshaller Instance { get; }
    private static ModifySubnetAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifySubnetAttributeResponseUnmarshaller GetInstance();
    public static ModifySubnetAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTrafficMirrorFilterNetworkServicesRequestMarshaller : object {
    private static ModifyTrafficMirrorFilterNetworkServicesRequestMarshaller _instance;
    public static ModifyTrafficMirrorFilterNetworkServicesRequestMarshaller Instance { get; }
    private static ModifyTrafficMirrorFilterNetworkServicesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTrafficMirrorFilterNetworkServicesRequest publicRequest);
    internal static ModifyTrafficMirrorFilterNetworkServicesRequestMarshaller GetInstance();
    public static ModifyTrafficMirrorFilterNetworkServicesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTrafficMirrorFilterNetworkServicesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyTrafficMirrorFilterNetworkServicesResponseUnmarshaller _instance;
    public static ModifyTrafficMirrorFilterNetworkServicesResponseUnmarshaller Instance { get; }
    private static ModifyTrafficMirrorFilterNetworkServicesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTrafficMirrorFilterNetworkServicesResponseUnmarshaller GetInstance();
    public static ModifyTrafficMirrorFilterNetworkServicesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTrafficMirrorFilterRuleRequestMarshaller : object {
    private static ModifyTrafficMirrorFilterRuleRequestMarshaller _instance;
    public static ModifyTrafficMirrorFilterRuleRequestMarshaller Instance { get; }
    private static ModifyTrafficMirrorFilterRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTrafficMirrorFilterRuleRequest publicRequest);
    internal static ModifyTrafficMirrorFilterRuleRequestMarshaller GetInstance();
    public static ModifyTrafficMirrorFilterRuleRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTrafficMirrorFilterRuleResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyTrafficMirrorFilterRuleResponseUnmarshaller _instance;
    public static ModifyTrafficMirrorFilterRuleResponseUnmarshaller Instance { get; }
    private static ModifyTrafficMirrorFilterRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTrafficMirrorFilterRuleResponseUnmarshaller GetInstance();
    public static ModifyTrafficMirrorFilterRuleResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTrafficMirrorSessionRequestMarshaller : object {
    private static ModifyTrafficMirrorSessionRequestMarshaller _instance;
    public static ModifyTrafficMirrorSessionRequestMarshaller Instance { get; }
    private static ModifyTrafficMirrorSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTrafficMirrorSessionRequest publicRequest);
    internal static ModifyTrafficMirrorSessionRequestMarshaller GetInstance();
    public static ModifyTrafficMirrorSessionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTrafficMirrorSessionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyTrafficMirrorSessionResponseUnmarshaller _instance;
    public static ModifyTrafficMirrorSessionResponseUnmarshaller Instance { get; }
    private static ModifyTrafficMirrorSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTrafficMirrorSessionResponseUnmarshaller GetInstance();
    public static ModifyTrafficMirrorSessionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTransitGatewayPrefixListReferenceRequestMarshaller : object {
    private static ModifyTransitGatewayPrefixListReferenceRequestMarshaller _instance;
    public static ModifyTransitGatewayPrefixListReferenceRequestMarshaller Instance { get; }
    private static ModifyTransitGatewayPrefixListReferenceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTransitGatewayPrefixListReferenceRequest publicRequest);
    internal static ModifyTransitGatewayPrefixListReferenceRequestMarshaller GetInstance();
    public static ModifyTransitGatewayPrefixListReferenceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTransitGatewayPrefixListReferenceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyTransitGatewayPrefixListReferenceResponseUnmarshaller _instance;
    public static ModifyTransitGatewayPrefixListReferenceResponseUnmarshaller Instance { get; }
    private static ModifyTransitGatewayPrefixListReferenceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTransitGatewayPrefixListReferenceResponseUnmarshaller GetInstance();
    public static ModifyTransitGatewayPrefixListReferenceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTransitGatewayRequestMarshaller : object {
    private static ModifyTransitGatewayRequestMarshaller _instance;
    public static ModifyTransitGatewayRequestMarshaller Instance { get; }
    private static ModifyTransitGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTransitGatewayRequest publicRequest);
    internal static ModifyTransitGatewayRequestMarshaller GetInstance();
    public static ModifyTransitGatewayRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTransitGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyTransitGatewayResponseUnmarshaller _instance;
    public static ModifyTransitGatewayResponseUnmarshaller Instance { get; }
    private static ModifyTransitGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTransitGatewayResponseUnmarshaller GetInstance();
    public static ModifyTransitGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTransitGatewayVpcAttachmentRequestMarshaller : object {
    private static ModifyTransitGatewayVpcAttachmentRequestMarshaller _instance;
    public static ModifyTransitGatewayVpcAttachmentRequestMarshaller Instance { get; }
    private static ModifyTransitGatewayVpcAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTransitGatewayVpcAttachmentRequest publicRequest);
    internal static ModifyTransitGatewayVpcAttachmentRequestMarshaller GetInstance();
    public static ModifyTransitGatewayVpcAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyTransitGatewayVpcAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyTransitGatewayVpcAttachmentResponseUnmarshaller _instance;
    public static ModifyTransitGatewayVpcAttachmentResponseUnmarshaller Instance { get; }
    private static ModifyTransitGatewayVpcAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTransitGatewayVpcAttachmentResponseUnmarshaller GetInstance();
    public static ModifyTransitGatewayVpcAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessEndpointPolicyRequestMarshaller : object {
    private static ModifyVerifiedAccessEndpointPolicyRequestMarshaller _instance;
    public static ModifyVerifiedAccessEndpointPolicyRequestMarshaller Instance { get; }
    private static ModifyVerifiedAccessEndpointPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVerifiedAccessEndpointPolicyRequest publicRequest);
    internal static ModifyVerifiedAccessEndpointPolicyRequestMarshaller GetInstance();
    public static ModifyVerifiedAccessEndpointPolicyRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessEndpointPolicyResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVerifiedAccessEndpointPolicyResponseUnmarshaller _instance;
    public static ModifyVerifiedAccessEndpointPolicyResponseUnmarshaller Instance { get; }
    private static ModifyVerifiedAccessEndpointPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVerifiedAccessEndpointPolicyResponseUnmarshaller GetInstance();
    public static ModifyVerifiedAccessEndpointPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessEndpointRequestMarshaller : object {
    private static ModifyVerifiedAccessEndpointRequestMarshaller _instance;
    public static ModifyVerifiedAccessEndpointRequestMarshaller Instance { get; }
    private static ModifyVerifiedAccessEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVerifiedAccessEndpointRequest publicRequest);
    internal static ModifyVerifiedAccessEndpointRequestMarshaller GetInstance();
    public static ModifyVerifiedAccessEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVerifiedAccessEndpointResponseUnmarshaller _instance;
    public static ModifyVerifiedAccessEndpointResponseUnmarshaller Instance { get; }
    private static ModifyVerifiedAccessEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVerifiedAccessEndpointResponseUnmarshaller GetInstance();
    public static ModifyVerifiedAccessEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessGroupPolicyRequestMarshaller : object {
    private static ModifyVerifiedAccessGroupPolicyRequestMarshaller _instance;
    public static ModifyVerifiedAccessGroupPolicyRequestMarshaller Instance { get; }
    private static ModifyVerifiedAccessGroupPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVerifiedAccessGroupPolicyRequest publicRequest);
    internal static ModifyVerifiedAccessGroupPolicyRequestMarshaller GetInstance();
    public static ModifyVerifiedAccessGroupPolicyRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessGroupPolicyResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVerifiedAccessGroupPolicyResponseUnmarshaller _instance;
    public static ModifyVerifiedAccessGroupPolicyResponseUnmarshaller Instance { get; }
    private static ModifyVerifiedAccessGroupPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVerifiedAccessGroupPolicyResponseUnmarshaller GetInstance();
    public static ModifyVerifiedAccessGroupPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessGroupRequestMarshaller : object {
    private static ModifyVerifiedAccessGroupRequestMarshaller _instance;
    public static ModifyVerifiedAccessGroupRequestMarshaller Instance { get; }
    private static ModifyVerifiedAccessGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVerifiedAccessGroupRequest publicRequest);
    internal static ModifyVerifiedAccessGroupRequestMarshaller GetInstance();
    public static ModifyVerifiedAccessGroupRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVerifiedAccessGroupResponseUnmarshaller _instance;
    public static ModifyVerifiedAccessGroupResponseUnmarshaller Instance { get; }
    private static ModifyVerifiedAccessGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVerifiedAccessGroupResponseUnmarshaller GetInstance();
    public static ModifyVerifiedAccessGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessInstanceLoggingConfigurationRequestMarshaller : object {
    private static ModifyVerifiedAccessInstanceLoggingConfigurationRequestMarshaller _instance;
    public static ModifyVerifiedAccessInstanceLoggingConfigurationRequestMarshaller Instance { get; }
    private static ModifyVerifiedAccessInstanceLoggingConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVerifiedAccessInstanceLoggingConfigurationRequest publicRequest);
    internal static ModifyVerifiedAccessInstanceLoggingConfigurationRequestMarshaller GetInstance();
    public static ModifyVerifiedAccessInstanceLoggingConfigurationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessInstanceLoggingConfigurationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVerifiedAccessInstanceLoggingConfigurationResponseUnmarshaller _instance;
    public static ModifyVerifiedAccessInstanceLoggingConfigurationResponseUnmarshaller Instance { get; }
    private static ModifyVerifiedAccessInstanceLoggingConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVerifiedAccessInstanceLoggingConfigurationResponseUnmarshaller GetInstance();
    public static ModifyVerifiedAccessInstanceLoggingConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessInstanceRequestMarshaller : object {
    private static ModifyVerifiedAccessInstanceRequestMarshaller _instance;
    public static ModifyVerifiedAccessInstanceRequestMarshaller Instance { get; }
    private static ModifyVerifiedAccessInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVerifiedAccessInstanceRequest publicRequest);
    internal static ModifyVerifiedAccessInstanceRequestMarshaller GetInstance();
    public static ModifyVerifiedAccessInstanceRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVerifiedAccessInstanceResponseUnmarshaller _instance;
    public static ModifyVerifiedAccessInstanceResponseUnmarshaller Instance { get; }
    private static ModifyVerifiedAccessInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVerifiedAccessInstanceResponseUnmarshaller GetInstance();
    public static ModifyVerifiedAccessInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessTrustProviderRequestMarshaller : object {
    private static ModifyVerifiedAccessTrustProviderRequestMarshaller _instance;
    public static ModifyVerifiedAccessTrustProviderRequestMarshaller Instance { get; }
    private static ModifyVerifiedAccessTrustProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVerifiedAccessTrustProviderRequest publicRequest);
    internal static ModifyVerifiedAccessTrustProviderRequestMarshaller GetInstance();
    public static ModifyVerifiedAccessTrustProviderRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVerifiedAccessTrustProviderResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVerifiedAccessTrustProviderResponseUnmarshaller _instance;
    public static ModifyVerifiedAccessTrustProviderResponseUnmarshaller Instance { get; }
    private static ModifyVerifiedAccessTrustProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVerifiedAccessTrustProviderResponseUnmarshaller GetInstance();
    public static ModifyVerifiedAccessTrustProviderResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeRequestMarshaller : object {
    private static ModifyVolumeAttributeRequestMarshaller _instance;
    public static ModifyVolumeAttributeRequestMarshaller Instance { get; }
    private static ModifyVolumeAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVolumeAttributeRequest publicRequest);
    internal static ModifyVolumeAttributeRequestMarshaller GetInstance();
    public static ModifyVolumeAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVolumeAttributeResponseUnmarshaller _instance;
    public static ModifyVolumeAttributeResponseUnmarshaller Instance { get; }
    private static ModifyVolumeAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVolumeAttributeResponseUnmarshaller GetInstance();
    public static ModifyVolumeAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeRequestMarshaller : object {
    private static ModifyVolumeRequestMarshaller _instance;
    public static ModifyVolumeRequestMarshaller Instance { get; }
    private static ModifyVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVolumeRequest publicRequest);
    internal static ModifyVolumeRequestMarshaller GetInstance();
    public static ModifyVolumeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVolumeResponseUnmarshaller _instance;
    public static ModifyVolumeResponseUnmarshaller Instance { get; }
    private static ModifyVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVolumeResponseUnmarshaller GetInstance();
    public static ModifyVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeRequestMarshaller : object {
    private static ModifyVpcAttributeRequestMarshaller _instance;
    public static ModifyVpcAttributeRequestMarshaller Instance { get; }
    private static ModifyVpcAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcAttributeRequest publicRequest);
    internal static ModifyVpcAttributeRequestMarshaller GetInstance();
    public static ModifyVpcAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcAttributeResponseUnmarshaller _instance;
    public static ModifyVpcAttributeResponseUnmarshaller Instance { get; }
    private static ModifyVpcAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcAttributeResponseUnmarshaller GetInstance();
    public static ModifyVpcAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointConnectionNotificationRequestMarshaller : object {
    private static ModifyVpcEndpointConnectionNotificationRequestMarshaller _instance;
    public static ModifyVpcEndpointConnectionNotificationRequestMarshaller Instance { get; }
    private static ModifyVpcEndpointConnectionNotificationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcEndpointConnectionNotificationRequest publicRequest);
    internal static ModifyVpcEndpointConnectionNotificationRequestMarshaller GetInstance();
    public static ModifyVpcEndpointConnectionNotificationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointConnectionNotificationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcEndpointConnectionNotificationResponseUnmarshaller _instance;
    public static ModifyVpcEndpointConnectionNotificationResponseUnmarshaller Instance { get; }
    private static ModifyVpcEndpointConnectionNotificationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcEndpointConnectionNotificationResponseUnmarshaller GetInstance();
    public static ModifyVpcEndpointConnectionNotificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointRequestMarshaller : object {
    private static ModifyVpcEndpointRequestMarshaller _instance;
    public static ModifyVpcEndpointRequestMarshaller Instance { get; }
    private static ModifyVpcEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcEndpointRequest publicRequest);
    internal static ModifyVpcEndpointRequestMarshaller GetInstance();
    public static ModifyVpcEndpointRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcEndpointResponseUnmarshaller _instance;
    public static ModifyVpcEndpointResponseUnmarshaller Instance { get; }
    private static ModifyVpcEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcEndpointResponseUnmarshaller GetInstance();
    public static ModifyVpcEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointServiceConfigurationRequestMarshaller : object {
    private static ModifyVpcEndpointServiceConfigurationRequestMarshaller _instance;
    public static ModifyVpcEndpointServiceConfigurationRequestMarshaller Instance { get; }
    private static ModifyVpcEndpointServiceConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcEndpointServiceConfigurationRequest publicRequest);
    internal static ModifyVpcEndpointServiceConfigurationRequestMarshaller GetInstance();
    public static ModifyVpcEndpointServiceConfigurationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointServiceConfigurationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcEndpointServiceConfigurationResponseUnmarshaller _instance;
    public static ModifyVpcEndpointServiceConfigurationResponseUnmarshaller Instance { get; }
    private static ModifyVpcEndpointServiceConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcEndpointServiceConfigurationResponseUnmarshaller GetInstance();
    public static ModifyVpcEndpointServiceConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointServicePayerResponsibilityRequestMarshaller : object {
    private static ModifyVpcEndpointServicePayerResponsibilityRequestMarshaller _instance;
    public static ModifyVpcEndpointServicePayerResponsibilityRequestMarshaller Instance { get; }
    private static ModifyVpcEndpointServicePayerResponsibilityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcEndpointServicePayerResponsibilityRequest publicRequest);
    internal static ModifyVpcEndpointServicePayerResponsibilityRequestMarshaller GetInstance();
    public static ModifyVpcEndpointServicePayerResponsibilityRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointServicePayerResponsibilityResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcEndpointServicePayerResponsibilityResponseUnmarshaller _instance;
    public static ModifyVpcEndpointServicePayerResponsibilityResponseUnmarshaller Instance { get; }
    private static ModifyVpcEndpointServicePayerResponsibilityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcEndpointServicePayerResponsibilityResponseUnmarshaller GetInstance();
    public static ModifyVpcEndpointServicePayerResponsibilityResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointServicePermissionsRequestMarshaller : object {
    private static ModifyVpcEndpointServicePermissionsRequestMarshaller _instance;
    public static ModifyVpcEndpointServicePermissionsRequestMarshaller Instance { get; }
    private static ModifyVpcEndpointServicePermissionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcEndpointServicePermissionsRequest publicRequest);
    internal static ModifyVpcEndpointServicePermissionsRequestMarshaller GetInstance();
    public static ModifyVpcEndpointServicePermissionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointServicePermissionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcEndpointServicePermissionsResponseUnmarshaller _instance;
    public static ModifyVpcEndpointServicePermissionsResponseUnmarshaller Instance { get; }
    private static ModifyVpcEndpointServicePermissionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcEndpointServicePermissionsResponseUnmarshaller GetInstance();
    public static ModifyVpcEndpointServicePermissionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsRequestMarshaller : object {
    private static ModifyVpcPeeringConnectionOptionsRequestMarshaller _instance;
    public static ModifyVpcPeeringConnectionOptionsRequestMarshaller Instance { get; }
    private static ModifyVpcPeeringConnectionOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcPeeringConnectionOptionsRequest publicRequest);
    internal static ModifyVpcPeeringConnectionOptionsRequestMarshaller GetInstance();
    public static ModifyVpcPeeringConnectionOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcPeeringConnectionOptionsResponseUnmarshaller _instance;
    public static ModifyVpcPeeringConnectionOptionsResponseUnmarshaller Instance { get; }
    private static ModifyVpcPeeringConnectionOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcPeeringConnectionOptionsResponseUnmarshaller GetInstance();
    public static ModifyVpcPeeringConnectionOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcTenancyRequestMarshaller : object {
    private static ModifyVpcTenancyRequestMarshaller _instance;
    public static ModifyVpcTenancyRequestMarshaller Instance { get; }
    private static ModifyVpcTenancyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcTenancyRequest publicRequest);
    internal static ModifyVpcTenancyRequestMarshaller GetInstance();
    public static ModifyVpcTenancyRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcTenancyResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcTenancyResponseUnmarshaller _instance;
    public static ModifyVpcTenancyResponseUnmarshaller Instance { get; }
    private static ModifyVpcTenancyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcTenancyResponseUnmarshaller GetInstance();
    public static ModifyVpcTenancyResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnConnectionOptionsRequestMarshaller : object {
    private static ModifyVpnConnectionOptionsRequestMarshaller _instance;
    public static ModifyVpnConnectionOptionsRequestMarshaller Instance { get; }
    private static ModifyVpnConnectionOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpnConnectionOptionsRequest publicRequest);
    internal static ModifyVpnConnectionOptionsRequestMarshaller GetInstance();
    public static ModifyVpnConnectionOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnConnectionOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpnConnectionOptionsResponseUnmarshaller _instance;
    public static ModifyVpnConnectionOptionsResponseUnmarshaller Instance { get; }
    private static ModifyVpnConnectionOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpnConnectionOptionsResponseUnmarshaller GetInstance();
    public static ModifyVpnConnectionOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnConnectionRequestMarshaller : object {
    private static ModifyVpnConnectionRequestMarshaller _instance;
    public static ModifyVpnConnectionRequestMarshaller Instance { get; }
    private static ModifyVpnConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpnConnectionRequest publicRequest);
    internal static ModifyVpnConnectionRequestMarshaller GetInstance();
    public static ModifyVpnConnectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpnConnectionResponseUnmarshaller _instance;
    public static ModifyVpnConnectionResponseUnmarshaller Instance { get; }
    private static ModifyVpnConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpnConnectionResponseUnmarshaller GetInstance();
    public static ModifyVpnConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnTunnelCertificateRequestMarshaller : object {
    private static ModifyVpnTunnelCertificateRequestMarshaller _instance;
    public static ModifyVpnTunnelCertificateRequestMarshaller Instance { get; }
    private static ModifyVpnTunnelCertificateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpnTunnelCertificateRequest publicRequest);
    internal static ModifyVpnTunnelCertificateRequestMarshaller GetInstance();
    public static ModifyVpnTunnelCertificateRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnTunnelCertificateResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpnTunnelCertificateResponseUnmarshaller _instance;
    public static ModifyVpnTunnelCertificateResponseUnmarshaller Instance { get; }
    private static ModifyVpnTunnelCertificateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpnTunnelCertificateResponseUnmarshaller GetInstance();
    public static ModifyVpnTunnelCertificateResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnTunnelOptionsRequestMarshaller : object {
    private static ModifyVpnTunnelOptionsRequestMarshaller _instance;
    public static ModifyVpnTunnelOptionsRequestMarshaller Instance { get; }
    private static ModifyVpnTunnelOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpnTunnelOptionsRequest publicRequest);
    internal static ModifyVpnTunnelOptionsRequestMarshaller GetInstance();
    public static ModifyVpnTunnelOptionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpnTunnelOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpnTunnelOptionsResponseUnmarshaller _instance;
    public static ModifyVpnTunnelOptionsResponseUnmarshaller Instance { get; }
    private static ModifyVpnTunnelOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpnTunnelOptionsResponseUnmarshaller GetInstance();
    public static ModifyVpnTunnelOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MonitoringUnmarshaller : object {
    private static MonitoringUnmarshaller _instance;
    public static MonitoringUnmarshaller Instance { get; }
    private static MonitoringUnmarshaller();
    public sealed virtual Monitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Monitoring Unmarshall(JsonUnmarshallerContext context);
    public static MonitoringUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesRequestMarshaller : object {
    private static MonitorInstancesRequestMarshaller _instance;
    public static MonitorInstancesRequestMarshaller Instance { get; }
    private static MonitorInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MonitorInstancesRequest publicRequest);
    internal static MonitorInstancesRequestMarshaller GetInstance();
    public static MonitorInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static MonitorInstancesResponseUnmarshaller _instance;
    public static MonitorInstancesResponseUnmarshaller Instance { get; }
    private static MonitorInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MonitorInstancesResponseUnmarshaller GetInstance();
    public static MonitorInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcRequestMarshaller : object {
    private static MoveAddressToVpcRequestMarshaller _instance;
    public static MoveAddressToVpcRequestMarshaller Instance { get; }
    private static MoveAddressToVpcRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MoveAddressToVpcRequest publicRequest);
    internal static MoveAddressToVpcRequestMarshaller GetInstance();
    public static MoveAddressToVpcRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static MoveAddressToVpcResponseUnmarshaller _instance;
    public static MoveAddressToVpcResponseUnmarshaller Instance { get; }
    private static MoveAddressToVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MoveAddressToVpcResponseUnmarshaller GetInstance();
    public static MoveAddressToVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MoveByoipCidrToIpamRequestMarshaller : object {
    private static MoveByoipCidrToIpamRequestMarshaller _instance;
    public static MoveByoipCidrToIpamRequestMarshaller Instance { get; }
    private static MoveByoipCidrToIpamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MoveByoipCidrToIpamRequest publicRequest);
    internal static MoveByoipCidrToIpamRequestMarshaller GetInstance();
    public static MoveByoipCidrToIpamRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MoveByoipCidrToIpamResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static MoveByoipCidrToIpamResponseUnmarshaller _instance;
    public static MoveByoipCidrToIpamResponseUnmarshaller Instance { get; }
    private static MoveByoipCidrToIpamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MoveByoipCidrToIpamResponseUnmarshaller GetInstance();
    public static MoveByoipCidrToIpamResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MovingAddressStatusUnmarshaller : object {
    private static MovingAddressStatusUnmarshaller _instance;
    public static MovingAddressStatusUnmarshaller Instance { get; }
    private static MovingAddressStatusUnmarshaller();
    public sealed virtual MovingAddressStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MovingAddressStatus Unmarshall(JsonUnmarshallerContext context);
    public static MovingAddressStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayAddressUnmarshaller : object {
    private static NatGatewayAddressUnmarshaller _instance;
    public static NatGatewayAddressUnmarshaller Instance { get; }
    private static NatGatewayAddressUnmarshaller();
    public sealed virtual NatGatewayAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NatGatewayAddress Unmarshall(JsonUnmarshallerContext context);
    public static NatGatewayAddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayUnmarshaller : object {
    private static NatGatewayUnmarshaller _instance;
    public static NatGatewayUnmarshaller Instance { get; }
    private static NatGatewayUnmarshaller();
    public sealed virtual NatGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NatGateway Unmarshall(JsonUnmarshallerContext context);
    public static NatGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclAssociationUnmarshaller : object {
    private static NetworkAclAssociationUnmarshaller _instance;
    public static NetworkAclAssociationUnmarshaller Instance { get; }
    private static NetworkAclAssociationUnmarshaller();
    public sealed virtual NetworkAclAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkAclAssociation Unmarshall(JsonUnmarshallerContext context);
    public static NetworkAclAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclEntryUnmarshaller : object {
    private static NetworkAclEntryUnmarshaller _instance;
    public static NetworkAclEntryUnmarshaller Instance { get; }
    private static NetworkAclEntryUnmarshaller();
    public sealed virtual NetworkAclEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkAclEntry Unmarshall(JsonUnmarshallerContext context);
    public static NetworkAclEntryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclUnmarshaller : object {
    private static NetworkAclUnmarshaller _instance;
    public static NetworkAclUnmarshaller Instance { get; }
    private static NetworkAclUnmarshaller();
    public sealed virtual NetworkAcl Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkAcl Unmarshall(JsonUnmarshallerContext context);
    public static NetworkAclUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkBandwidthGbpsUnmarshaller : object {
    private static NetworkBandwidthGbpsUnmarshaller _instance;
    public static NetworkBandwidthGbpsUnmarshaller Instance { get; }
    private static NetworkBandwidthGbpsUnmarshaller();
    public sealed virtual NetworkBandwidthGbps Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkBandwidthGbps Unmarshall(JsonUnmarshallerContext context);
    public static NetworkBandwidthGbpsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkCardInfoUnmarshaller : object {
    private static NetworkCardInfoUnmarshaller _instance;
    public static NetworkCardInfoUnmarshaller Instance { get; }
    private static NetworkCardInfoUnmarshaller();
    public sealed virtual NetworkCardInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkCardInfo Unmarshall(JsonUnmarshallerContext context);
    public static NetworkCardInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInfoUnmarshaller : object {
    private static NetworkInfoUnmarshaller _instance;
    public static NetworkInfoUnmarshaller Instance { get; }
    private static NetworkInfoUnmarshaller();
    public sealed virtual NetworkInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInfo Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInsightsAccessScopeAnalysisUnmarshaller : object {
    private static NetworkInsightsAccessScopeAnalysisUnmarshaller _instance;
    public static NetworkInsightsAccessScopeAnalysisUnmarshaller Instance { get; }
    private static NetworkInsightsAccessScopeAnalysisUnmarshaller();
    public sealed virtual NetworkInsightsAccessScopeAnalysis Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInsightsAccessScopeAnalysis Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInsightsAccessScopeAnalysisUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInsightsAccessScopeContentUnmarshaller : object {
    private static NetworkInsightsAccessScopeContentUnmarshaller _instance;
    public static NetworkInsightsAccessScopeContentUnmarshaller Instance { get; }
    private static NetworkInsightsAccessScopeContentUnmarshaller();
    public sealed virtual NetworkInsightsAccessScopeContent Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInsightsAccessScopeContent Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInsightsAccessScopeContentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInsightsAccessScopeUnmarshaller : object {
    private static NetworkInsightsAccessScopeUnmarshaller _instance;
    public static NetworkInsightsAccessScopeUnmarshaller Instance { get; }
    private static NetworkInsightsAccessScopeUnmarshaller();
    public sealed virtual NetworkInsightsAccessScope Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInsightsAccessScope Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInsightsAccessScopeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInsightsAnalysisUnmarshaller : object {
    private static NetworkInsightsAnalysisUnmarshaller _instance;
    public static NetworkInsightsAnalysisUnmarshaller Instance { get; }
    private static NetworkInsightsAnalysisUnmarshaller();
    public sealed virtual NetworkInsightsAnalysis Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInsightsAnalysis Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInsightsAnalysisUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInsightsPathUnmarshaller : object {
    private static NetworkInsightsPathUnmarshaller _instance;
    public static NetworkInsightsPathUnmarshaller Instance { get; }
    private static NetworkInsightsPathUnmarshaller();
    public sealed virtual NetworkInsightsPath Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInsightsPath Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInsightsPathUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAssociationUnmarshaller : object {
    private static NetworkInterfaceAssociationUnmarshaller _instance;
    public static NetworkInterfaceAssociationUnmarshaller Instance { get; }
    private static NetworkInterfaceAssociationUnmarshaller();
    public sealed virtual NetworkInterfaceAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfaceAssociation Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAttachmentUnmarshaller : object {
    private static NetworkInterfaceAttachmentUnmarshaller _instance;
    public static NetworkInterfaceAttachmentUnmarshaller Instance { get; }
    private static NetworkInterfaceAttachmentUnmarshaller();
    public sealed virtual NetworkInterfaceAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfaceAttachment Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceCountUnmarshaller : object {
    private static NetworkInterfaceCountUnmarshaller _instance;
    public static NetworkInterfaceCountUnmarshaller Instance { get; }
    private static NetworkInterfaceCountUnmarshaller();
    public sealed virtual NetworkInterfaceCount Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfaceCount Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceCountUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceIpv6AddressUnmarshaller : object {
    private static NetworkInterfaceIpv6AddressUnmarshaller _instance;
    public static NetworkInterfaceIpv6AddressUnmarshaller Instance { get; }
    private static NetworkInterfaceIpv6AddressUnmarshaller();
    public sealed virtual NetworkInterfaceIpv6Address Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfaceIpv6Address Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceIpv6AddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePermissionStateUnmarshaller : object {
    private static NetworkInterfacePermissionStateUnmarshaller _instance;
    public static NetworkInterfacePermissionStateUnmarshaller Instance { get; }
    private static NetworkInterfacePermissionStateUnmarshaller();
    public sealed virtual NetworkInterfacePermissionState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfacePermissionState Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfacePermissionStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePermissionUnmarshaller : object {
    private static NetworkInterfacePermissionUnmarshaller _instance;
    public static NetworkInterfacePermissionUnmarshaller Instance { get; }
    private static NetworkInterfacePermissionUnmarshaller();
    public sealed virtual NetworkInterfacePermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfacePermission Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfacePermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePrivateIpAddressUnmarshaller : object {
    private static NetworkInterfacePrivateIpAddressUnmarshaller _instance;
    public static NetworkInterfacePrivateIpAddressUnmarshaller Instance { get; }
    private static NetworkInterfacePrivateIpAddressUnmarshaller();
    public sealed virtual NetworkInterfacePrivateIpAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfacePrivateIpAddress Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfacePrivateIpAddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller : object {
    private static NetworkInterfaceUnmarshaller _instance;
    public static NetworkInterfaceUnmarshaller Instance { get; }
    private static NetworkInterfaceUnmarshaller();
    public sealed virtual NetworkInterface Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterface Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NeuronDeviceCoreInfoUnmarshaller : object {
    private static NeuronDeviceCoreInfoUnmarshaller _instance;
    public static NeuronDeviceCoreInfoUnmarshaller Instance { get; }
    private static NeuronDeviceCoreInfoUnmarshaller();
    public sealed virtual NeuronDeviceCoreInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NeuronDeviceCoreInfo Unmarshall(JsonUnmarshallerContext context);
    public static NeuronDeviceCoreInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NeuronDeviceInfoUnmarshaller : object {
    private static NeuronDeviceInfoUnmarshaller _instance;
    public static NeuronDeviceInfoUnmarshaller Instance { get; }
    private static NeuronDeviceInfoUnmarshaller();
    public sealed virtual NeuronDeviceInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NeuronDeviceInfo Unmarshall(JsonUnmarshallerContext context);
    public static NeuronDeviceInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NeuronDeviceMemoryInfoUnmarshaller : object {
    private static NeuronDeviceMemoryInfoUnmarshaller _instance;
    public static NeuronDeviceMemoryInfoUnmarshaller Instance { get; }
    private static NeuronDeviceMemoryInfoUnmarshaller();
    public sealed virtual NeuronDeviceMemoryInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NeuronDeviceMemoryInfo Unmarshall(JsonUnmarshallerContext context);
    public static NeuronDeviceMemoryInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NeuronInfoUnmarshaller : object {
    private static NeuronInfoUnmarshaller _instance;
    public static NeuronInfoUnmarshaller Instance { get; }
    private static NeuronInfoUnmarshaller();
    public sealed virtual NeuronInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NeuronInfo Unmarshall(JsonUnmarshallerContext context);
    public static NeuronInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NitroTpmInfoUnmarshaller : object {
    private static NitroTpmInfoUnmarshaller _instance;
    public static NitroTpmInfoUnmarshaller Instance { get; }
    private static NitroTpmInfoUnmarshaller();
    public sealed virtual NitroTpmInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NitroTpmInfo Unmarshall(JsonUnmarshallerContext context);
    public static NitroTpmInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.OidcOptionsUnmarshaller : object {
    private static OidcOptionsUnmarshaller _instance;
    public static OidcOptionsUnmarshaller Instance { get; }
    private static OidcOptionsUnmarshaller();
    public sealed virtual OidcOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OidcOptions Unmarshall(JsonUnmarshallerContext context);
    public static OidcOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.OnDemandOptionsUnmarshaller : object {
    private static OnDemandOptionsUnmarshaller _instance;
    public static OnDemandOptionsUnmarshaller Instance { get; }
    private static OnDemandOptionsUnmarshaller();
    public sealed virtual OnDemandOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OnDemandOptions Unmarshall(JsonUnmarshallerContext context);
    public static OnDemandOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PacketHeaderStatementUnmarshaller : object {
    private static PacketHeaderStatementUnmarshaller _instance;
    public static PacketHeaderStatementUnmarshaller Instance { get; }
    private static PacketHeaderStatementUnmarshaller();
    public sealed virtual PacketHeaderStatement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PacketHeaderStatement Unmarshall(JsonUnmarshallerContext context);
    public static PacketHeaderStatementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PathComponentUnmarshaller : object {
    private static PathComponentUnmarshaller _instance;
    public static PathComponentUnmarshaller Instance { get; }
    private static PathComponentUnmarshaller();
    public sealed virtual PathComponent Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PathComponent Unmarshall(JsonUnmarshallerContext context);
    public static PathComponentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PathFilterUnmarshaller : object {
    private static PathFilterUnmarshaller _instance;
    public static PathFilterUnmarshaller Instance { get; }
    private static PathFilterUnmarshaller();
    public sealed virtual PathFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PathFilter Unmarshall(JsonUnmarshallerContext context);
    public static PathFilterUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PathStatementUnmarshaller : object {
    private static PathStatementUnmarshaller _instance;
    public static PathStatementUnmarshaller Instance { get; }
    private static PathStatementUnmarshaller();
    public sealed virtual PathStatement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PathStatement Unmarshall(JsonUnmarshallerContext context);
    public static PathStatementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PciIdUnmarshaller : object {
    private static PciIdUnmarshaller _instance;
    public static PciIdUnmarshaller Instance { get; }
    private static PciIdUnmarshaller();
    public sealed virtual PciId Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PciId Unmarshall(JsonUnmarshallerContext context);
    public static PciIdUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PeeringAttachmentStatusUnmarshaller : object {
    private static PeeringAttachmentStatusUnmarshaller _instance;
    public static PeeringAttachmentStatusUnmarshaller Instance { get; }
    private static PeeringAttachmentStatusUnmarshaller();
    public sealed virtual PeeringAttachmentStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PeeringAttachmentStatus Unmarshall(JsonUnmarshallerContext context);
    public static PeeringAttachmentStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PeeringConnectionOptionsUnmarshaller : object {
    private static PeeringConnectionOptionsUnmarshaller _instance;
    public static PeeringConnectionOptionsUnmarshaller Instance { get; }
    private static PeeringConnectionOptionsUnmarshaller();
    public sealed virtual PeeringConnectionOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PeeringConnectionOptions Unmarshall(JsonUnmarshallerContext context);
    public static PeeringConnectionOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PeeringTgwInfoUnmarshaller : object {
    private static PeeringTgwInfoUnmarshaller _instance;
    public static PeeringTgwInfoUnmarshaller Instance { get; }
    private static PeeringTgwInfoUnmarshaller();
    public sealed virtual PeeringTgwInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PeeringTgwInfo Unmarshall(JsonUnmarshallerContext context);
    public static PeeringTgwInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Phase1DHGroupNumbersListValueUnmarshaller : object {
    private static Phase1DHGroupNumbersListValueUnmarshaller _instance;
    public static Phase1DHGroupNumbersListValueUnmarshaller Instance { get; }
    private static Phase1DHGroupNumbersListValueUnmarshaller();
    public sealed virtual Phase1DHGroupNumbersListValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Phase1DHGroupNumbersListValue Unmarshall(JsonUnmarshallerContext context);
    public static Phase1DHGroupNumbersListValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Phase1EncryptionAlgorithmsListValueUnmarshaller : object {
    private static Phase1EncryptionAlgorithmsListValueUnmarshaller _instance;
    public static Phase1EncryptionAlgorithmsListValueUnmarshaller Instance { get; }
    private static Phase1EncryptionAlgorithmsListValueUnmarshaller();
    public sealed virtual Phase1EncryptionAlgorithmsListValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Phase1EncryptionAlgorithmsListValue Unmarshall(JsonUnmarshallerContext context);
    public static Phase1EncryptionAlgorithmsListValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Phase1IntegrityAlgorithmsListValueUnmarshaller : object {
    private static Phase1IntegrityAlgorithmsListValueUnmarshaller _instance;
    public static Phase1IntegrityAlgorithmsListValueUnmarshaller Instance { get; }
    private static Phase1IntegrityAlgorithmsListValueUnmarshaller();
    public sealed virtual Phase1IntegrityAlgorithmsListValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Phase1IntegrityAlgorithmsListValue Unmarshall(JsonUnmarshallerContext context);
    public static Phase1IntegrityAlgorithmsListValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Phase2DHGroupNumbersListValueUnmarshaller : object {
    private static Phase2DHGroupNumbersListValueUnmarshaller _instance;
    public static Phase2DHGroupNumbersListValueUnmarshaller Instance { get; }
    private static Phase2DHGroupNumbersListValueUnmarshaller();
    public sealed virtual Phase2DHGroupNumbersListValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Phase2DHGroupNumbersListValue Unmarshall(JsonUnmarshallerContext context);
    public static Phase2DHGroupNumbersListValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Phase2EncryptionAlgorithmsListValueUnmarshaller : object {
    private static Phase2EncryptionAlgorithmsListValueUnmarshaller _instance;
    public static Phase2EncryptionAlgorithmsListValueUnmarshaller Instance { get; }
    private static Phase2EncryptionAlgorithmsListValueUnmarshaller();
    public sealed virtual Phase2EncryptionAlgorithmsListValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Phase2EncryptionAlgorithmsListValue Unmarshall(JsonUnmarshallerContext context);
    public static Phase2EncryptionAlgorithmsListValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.Phase2IntegrityAlgorithmsListValueUnmarshaller : object {
    private static Phase2IntegrityAlgorithmsListValueUnmarshaller _instance;
    public static Phase2IntegrityAlgorithmsListValueUnmarshaller Instance { get; }
    private static Phase2IntegrityAlgorithmsListValueUnmarshaller();
    public sealed virtual Phase2IntegrityAlgorithmsListValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Phase2IntegrityAlgorithmsListValue Unmarshall(JsonUnmarshallerContext context);
    public static Phase2IntegrityAlgorithmsListValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupInfoUnmarshaller : object {
    private static PlacementGroupInfoUnmarshaller _instance;
    public static PlacementGroupInfoUnmarshaller Instance { get; }
    private static PlacementGroupInfoUnmarshaller();
    public sealed virtual PlacementGroupInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PlacementGroupInfo Unmarshall(JsonUnmarshallerContext context);
    public static PlacementGroupInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupUnmarshaller : object {
    private static PlacementGroupUnmarshaller _instance;
    public static PlacementGroupUnmarshaller Instance { get; }
    private static PlacementGroupUnmarshaller();
    public sealed virtual PlacementGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PlacementGroup Unmarshall(JsonUnmarshallerContext context);
    public static PlacementGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PlacementResponseUnmarshaller : object {
    private static PlacementResponseUnmarshaller _instance;
    public static PlacementResponseUnmarshaller Instance { get; }
    private static PlacementResponseUnmarshaller();
    public sealed virtual PlacementResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PlacementResponse Unmarshall(JsonUnmarshallerContext context);
    public static PlacementResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PlacementUnmarshaller : object {
    private static PlacementUnmarshaller _instance;
    public static PlacementUnmarshaller Instance { get; }
    private static PlacementUnmarshaller();
    public sealed virtual Placement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Placement Unmarshall(JsonUnmarshallerContext context);
    public static PlacementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PoolCidrBlockUnmarshaller : object {
    private static PoolCidrBlockUnmarshaller _instance;
    public static PoolCidrBlockUnmarshaller Instance { get; }
    private static PoolCidrBlockUnmarshaller();
    public sealed virtual PoolCidrBlock Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PoolCidrBlock Unmarshall(JsonUnmarshallerContext context);
    public static PoolCidrBlockUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PortRangeUnmarshaller : object {
    private static PortRangeUnmarshaller _instance;
    public static PortRangeUnmarshaller Instance { get; }
    private static PortRangeUnmarshaller();
    public sealed virtual PortRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PortRange Unmarshall(JsonUnmarshallerContext context);
    public static PortRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListAssociationUnmarshaller : object {
    private static PrefixListAssociationUnmarshaller _instance;
    public static PrefixListAssociationUnmarshaller Instance { get; }
    private static PrefixListAssociationUnmarshaller();
    public sealed virtual PrefixListAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixListAssociation Unmarshall(JsonUnmarshallerContext context);
    public static PrefixListAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListEntryUnmarshaller : object {
    private static PrefixListEntryUnmarshaller _instance;
    public static PrefixListEntryUnmarshaller Instance { get; }
    private static PrefixListEntryUnmarshaller();
    public sealed virtual PrefixListEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixListEntry Unmarshall(JsonUnmarshallerContext context);
    public static PrefixListEntryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListIdUnmarshaller : object {
    private static PrefixListIdUnmarshaller _instance;
    public static PrefixListIdUnmarshaller Instance { get; }
    private static PrefixListIdUnmarshaller();
    public sealed virtual PrefixListId Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixListId Unmarshall(JsonUnmarshallerContext context);
    public static PrefixListIdUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListUnmarshaller : object {
    private static PrefixListUnmarshaller _instance;
    public static PrefixListUnmarshaller Instance { get; }
    private static PrefixListUnmarshaller();
    public sealed virtual PrefixList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixList Unmarshall(JsonUnmarshallerContext context);
    public static PrefixListUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PriceScheduleUnmarshaller : object {
    private static PriceScheduleUnmarshaller _instance;
    public static PriceScheduleUnmarshaller Instance { get; }
    private static PriceScheduleUnmarshaller();
    public sealed virtual PriceSchedule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PriceSchedule Unmarshall(JsonUnmarshallerContext context);
    public static PriceScheduleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PricingDetailUnmarshaller : object {
    private static PricingDetailUnmarshaller _instance;
    public static PricingDetailUnmarshaller Instance { get; }
    private static PricingDetailUnmarshaller();
    public sealed virtual PricingDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PricingDetail Unmarshall(JsonUnmarshallerContext context);
    public static PricingDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrincipalIdFormatUnmarshaller : object {
    private static PrincipalIdFormatUnmarshaller _instance;
    public static PrincipalIdFormatUnmarshaller Instance { get; }
    private static PrincipalIdFormatUnmarshaller();
    public sealed virtual PrincipalIdFormat Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrincipalIdFormat Unmarshall(JsonUnmarshallerContext context);
    public static PrincipalIdFormatUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrivateDnsDetailsUnmarshaller : object {
    private static PrivateDnsDetailsUnmarshaller _instance;
    public static PrivateDnsDetailsUnmarshaller Instance { get; }
    private static PrivateDnsDetailsUnmarshaller();
    public sealed virtual PrivateDnsDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrivateDnsDetails Unmarshall(JsonUnmarshallerContext context);
    public static PrivateDnsDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrivateDnsNameConfigurationUnmarshaller : object {
    private static PrivateDnsNameConfigurationUnmarshaller _instance;
    public static PrivateDnsNameConfigurationUnmarshaller Instance { get; }
    private static PrivateDnsNameConfigurationUnmarshaller();
    public sealed virtual PrivateDnsNameConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrivateDnsNameConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static PrivateDnsNameConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrivateDnsNameOptionsOnLaunchUnmarshaller : object {
    private static PrivateDnsNameOptionsOnLaunchUnmarshaller _instance;
    public static PrivateDnsNameOptionsOnLaunchUnmarshaller Instance { get; }
    private static PrivateDnsNameOptionsOnLaunchUnmarshaller();
    public sealed virtual PrivateDnsNameOptionsOnLaunch Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrivateDnsNameOptionsOnLaunch Unmarshall(JsonUnmarshallerContext context);
    public static PrivateDnsNameOptionsOnLaunchUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrivateDnsNameOptionsResponseUnmarshaller : object {
    private static PrivateDnsNameOptionsResponseUnmarshaller _instance;
    public static PrivateDnsNameOptionsResponseUnmarshaller Instance { get; }
    private static PrivateDnsNameOptionsResponseUnmarshaller();
    public sealed virtual PrivateDnsNameOptionsResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrivateDnsNameOptionsResponse Unmarshall(JsonUnmarshallerContext context);
    public static PrivateDnsNameOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrivateIpAddressSpecificationUnmarshaller : object {
    private static PrivateIpAddressSpecificationUnmarshaller _instance;
    public static PrivateIpAddressSpecificationUnmarshaller Instance { get; }
    private static PrivateIpAddressSpecificationUnmarshaller();
    public sealed virtual PrivateIpAddressSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrivateIpAddressSpecification Unmarshall(JsonUnmarshallerContext context);
    public static PrivateIpAddressSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProcessorInfoUnmarshaller : object {
    private static ProcessorInfoUnmarshaller _instance;
    public static ProcessorInfoUnmarshaller Instance { get; }
    private static ProcessorInfoUnmarshaller();
    public sealed virtual ProcessorInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProcessorInfo Unmarshall(JsonUnmarshallerContext context);
    public static ProcessorInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProductCodeUnmarshaller : object {
    private static ProductCodeUnmarshaller _instance;
    public static ProductCodeUnmarshaller Instance { get; }
    private static ProductCodeUnmarshaller();
    public sealed virtual ProductCode Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProductCode Unmarshall(JsonUnmarshallerContext context);
    public static ProductCodeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PropagatingVgwUnmarshaller : object {
    private static PropagatingVgwUnmarshaller _instance;
    public static PropagatingVgwUnmarshaller Instance { get; }
    private static PropagatingVgwUnmarshaller();
    public sealed virtual PropagatingVgw Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PropagatingVgw Unmarshall(JsonUnmarshallerContext context);
    public static PropagatingVgwUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionByoipCidrRequestMarshaller : object {
    private static ProvisionByoipCidrRequestMarshaller _instance;
    public static ProvisionByoipCidrRequestMarshaller Instance { get; }
    private static ProvisionByoipCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ProvisionByoipCidrRequest publicRequest);
    internal static ProvisionByoipCidrRequestMarshaller GetInstance();
    public static ProvisionByoipCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionByoipCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ProvisionByoipCidrResponseUnmarshaller _instance;
    public static ProvisionByoipCidrResponseUnmarshaller Instance { get; }
    private static ProvisionByoipCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ProvisionByoipCidrResponseUnmarshaller GetInstance();
    public static ProvisionByoipCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionedBandwidthUnmarshaller : object {
    private static ProvisionedBandwidthUnmarshaller _instance;
    public static ProvisionedBandwidthUnmarshaller Instance { get; }
    private static ProvisionedBandwidthUnmarshaller();
    public sealed virtual ProvisionedBandwidth Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedBandwidth Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedBandwidthUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionIpamByoasnRequestMarshaller : object {
    private static ProvisionIpamByoasnRequestMarshaller _instance;
    public static ProvisionIpamByoasnRequestMarshaller Instance { get; }
    private static ProvisionIpamByoasnRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ProvisionIpamByoasnRequest publicRequest);
    internal static ProvisionIpamByoasnRequestMarshaller GetInstance();
    public static ProvisionIpamByoasnRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionIpamByoasnResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ProvisionIpamByoasnResponseUnmarshaller _instance;
    public static ProvisionIpamByoasnResponseUnmarshaller Instance { get; }
    private static ProvisionIpamByoasnResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ProvisionIpamByoasnResponseUnmarshaller GetInstance();
    public static ProvisionIpamByoasnResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionIpamPoolCidrRequestMarshaller : object {
    private static ProvisionIpamPoolCidrRequestMarshaller _instance;
    public static ProvisionIpamPoolCidrRequestMarshaller Instance { get; }
    private static ProvisionIpamPoolCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ProvisionIpamPoolCidrRequest publicRequest);
    internal static ProvisionIpamPoolCidrRequestMarshaller GetInstance();
    public static ProvisionIpamPoolCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionIpamPoolCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ProvisionIpamPoolCidrResponseUnmarshaller _instance;
    public static ProvisionIpamPoolCidrResponseUnmarshaller Instance { get; }
    private static ProvisionIpamPoolCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ProvisionIpamPoolCidrResponseUnmarshaller GetInstance();
    public static ProvisionIpamPoolCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionPublicIpv4PoolCidrRequestMarshaller : object {
    private static ProvisionPublicIpv4PoolCidrRequestMarshaller _instance;
    public static ProvisionPublicIpv4PoolCidrRequestMarshaller Instance { get; }
    private static ProvisionPublicIpv4PoolCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ProvisionPublicIpv4PoolCidrRequest publicRequest);
    internal static ProvisionPublicIpv4PoolCidrRequestMarshaller GetInstance();
    public static ProvisionPublicIpv4PoolCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionPublicIpv4PoolCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ProvisionPublicIpv4PoolCidrResponseUnmarshaller _instance;
    public static ProvisionPublicIpv4PoolCidrResponseUnmarshaller Instance { get; }
    private static ProvisionPublicIpv4PoolCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ProvisionPublicIpv4PoolCidrResponseUnmarshaller GetInstance();
    public static ProvisionPublicIpv4PoolCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PtrUpdateStatusUnmarshaller : object {
    private static PtrUpdateStatusUnmarshaller _instance;
    public static PtrUpdateStatusUnmarshaller Instance { get; }
    private static PtrUpdateStatusUnmarshaller();
    public sealed virtual PtrUpdateStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PtrUpdateStatus Unmarshall(JsonUnmarshallerContext context);
    public static PtrUpdateStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PublicIpv4PoolRangeUnmarshaller : object {
    private static PublicIpv4PoolRangeUnmarshaller _instance;
    public static PublicIpv4PoolRangeUnmarshaller Instance { get; }
    private static PublicIpv4PoolRangeUnmarshaller();
    public sealed virtual PublicIpv4PoolRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicIpv4PoolRange Unmarshall(JsonUnmarshallerContext context);
    public static PublicIpv4PoolRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PublicIpv4PoolUnmarshaller : object {
    private static PublicIpv4PoolUnmarshaller _instance;
    public static PublicIpv4PoolUnmarshaller Instance { get; }
    private static PublicIpv4PoolUnmarshaller();
    public sealed virtual PublicIpv4Pool Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicIpv4Pool Unmarshall(JsonUnmarshallerContext context);
    public static PublicIpv4PoolUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseCapacityBlockRequestMarshaller : object {
    private static PurchaseCapacityBlockRequestMarshaller _instance;
    public static PurchaseCapacityBlockRequestMarshaller Instance { get; }
    private static PurchaseCapacityBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurchaseCapacityBlockRequest publicRequest);
    internal static PurchaseCapacityBlockRequestMarshaller GetInstance();
    public static PurchaseCapacityBlockRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseCapacityBlockResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static PurchaseCapacityBlockResponseUnmarshaller _instance;
    public static PurchaseCapacityBlockResponseUnmarshaller Instance { get; }
    private static PurchaseCapacityBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurchaseCapacityBlockResponseUnmarshaller GetInstance();
    public static PurchaseCapacityBlockResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationRequestMarshaller : object {
    private static PurchaseHostReservationRequestMarshaller _instance;
    public static PurchaseHostReservationRequestMarshaller Instance { get; }
    private static PurchaseHostReservationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurchaseHostReservationRequest publicRequest);
    internal static PurchaseHostReservationRequestMarshaller GetInstance();
    public static PurchaseHostReservationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static PurchaseHostReservationResponseUnmarshaller _instance;
    public static PurchaseHostReservationResponseUnmarshaller Instance { get; }
    private static PurchaseHostReservationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurchaseHostReservationResponseUnmarshaller GetInstance();
    public static PurchaseHostReservationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingRequestMarshaller : object {
    private static PurchaseReservedInstancesOfferingRequestMarshaller _instance;
    public static PurchaseReservedInstancesOfferingRequestMarshaller Instance { get; }
    private static PurchaseReservedInstancesOfferingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurchaseReservedInstancesOfferingRequest publicRequest);
    internal static PurchaseReservedInstancesOfferingRequestMarshaller GetInstance();
    public static PurchaseReservedInstancesOfferingRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static PurchaseReservedInstancesOfferingResponseUnmarshaller _instance;
    public static PurchaseReservedInstancesOfferingResponseUnmarshaller Instance { get; }
    private static PurchaseReservedInstancesOfferingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurchaseReservedInstancesOfferingResponseUnmarshaller GetInstance();
    public static PurchaseReservedInstancesOfferingResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesRequestMarshaller : object {
    private static PurchaseScheduledInstancesRequestMarshaller _instance;
    public static PurchaseScheduledInstancesRequestMarshaller Instance { get; }
    private static PurchaseScheduledInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurchaseScheduledInstancesRequest publicRequest);
    internal static PurchaseScheduledInstancesRequestMarshaller GetInstance();
    public static PurchaseScheduledInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static PurchaseScheduledInstancesResponseUnmarshaller _instance;
    public static PurchaseScheduledInstancesResponseUnmarshaller Instance { get; }
    private static PurchaseScheduledInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurchaseScheduledInstancesResponseUnmarshaller GetInstance();
    public static PurchaseScheduledInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseUnmarshaller : object {
    private static PurchaseUnmarshaller _instance;
    public static PurchaseUnmarshaller Instance { get; }
    private static PurchaseUnmarshaller();
    public sealed virtual Purchase Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Purchase Unmarshall(JsonUnmarshallerContext context);
    public static PurchaseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesRequestMarshaller : object {
    private static RebootInstancesRequestMarshaller _instance;
    public static RebootInstancesRequestMarshaller Instance { get; }
    private static RebootInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootInstancesRequest publicRequest);
    internal static RebootInstancesRequestMarshaller GetInstance();
    public static RebootInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RebootInstancesResponseUnmarshaller _instance;
    public static RebootInstancesResponseUnmarshaller Instance { get; }
    private static RebootInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootInstancesResponseUnmarshaller GetInstance();
    public static RebootInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller : object {
    private static RecurringChargeUnmarshaller _instance;
    public static RecurringChargeUnmarshaller Instance { get; }
    private static RecurringChargeUnmarshaller();
    public sealed virtual RecurringCharge Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecurringCharge Unmarshall(JsonUnmarshallerContext context);
    public static RecurringChargeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReferencedSecurityGroupUnmarshaller : object {
    private static ReferencedSecurityGroupUnmarshaller _instance;
    public static ReferencedSecurityGroupUnmarshaller Instance { get; }
    private static ReferencedSecurityGroupUnmarshaller();
    public sealed virtual ReferencedSecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReferencedSecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static ReferencedSecurityGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegionUnmarshaller : object {
    private static RegionUnmarshaller _instance;
    public static RegionUnmarshaller Instance { get; }
    private static RegionUnmarshaller();
    public sealed virtual Region Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Region Unmarshall(JsonUnmarshallerContext context);
    public static RegionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageRequestMarshaller : object {
    private static RegisterImageRequestMarshaller _instance;
    public static RegisterImageRequestMarshaller Instance { get; }
    private static RegisterImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterImageRequest publicRequest);
    internal static RegisterImageRequestMarshaller GetInstance();
    public static RegisterImageRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RegisterImageResponseUnmarshaller _instance;
    public static RegisterImageResponseUnmarshaller Instance { get; }
    private static RegisterImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterImageResponseUnmarshaller GetInstance();
    public static RegisterImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterInstanceEventNotificationAttributesRequestMarshaller : object {
    private static RegisterInstanceEventNotificationAttributesRequestMarshaller _instance;
    public static RegisterInstanceEventNotificationAttributesRequestMarshaller Instance { get; }
    private static RegisterInstanceEventNotificationAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterInstanceEventNotificationAttributesRequest publicRequest);
    internal static RegisterInstanceEventNotificationAttributesRequestMarshaller GetInstance();
    public static RegisterInstanceEventNotificationAttributesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterInstanceEventNotificationAttributesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RegisterInstanceEventNotificationAttributesResponseUnmarshaller _instance;
    public static RegisterInstanceEventNotificationAttributesResponseUnmarshaller Instance { get; }
    private static RegisterInstanceEventNotificationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterInstanceEventNotificationAttributesResponseUnmarshaller GetInstance();
    public static RegisterInstanceEventNotificationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterTransitGatewayMulticastGroupMembersRequestMarshaller : object {
    private static RegisterTransitGatewayMulticastGroupMembersRequestMarshaller _instance;
    public static RegisterTransitGatewayMulticastGroupMembersRequestMarshaller Instance { get; }
    private static RegisterTransitGatewayMulticastGroupMembersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterTransitGatewayMulticastGroupMembersRequest publicRequest);
    internal static RegisterTransitGatewayMulticastGroupMembersRequestMarshaller GetInstance();
    public static RegisterTransitGatewayMulticastGroupMembersRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller _instance;
    public static RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller Instance { get; }
    private static RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller GetInstance();
    public static RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterTransitGatewayMulticastGroupSourcesRequestMarshaller : object {
    private static RegisterTransitGatewayMulticastGroupSourcesRequestMarshaller _instance;
    public static RegisterTransitGatewayMulticastGroupSourcesRequestMarshaller Instance { get; }
    private static RegisterTransitGatewayMulticastGroupSourcesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterTransitGatewayMulticastGroupSourcesRequest publicRequest);
    internal static RegisterTransitGatewayMulticastGroupSourcesRequestMarshaller GetInstance();
    public static RegisterTransitGatewayMulticastGroupSourcesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RegisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller _instance;
    public static RegisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller Instance { get; }
    private static RegisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller GetInstance();
    public static RegisterTransitGatewayMulticastGroupSourcesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectTransitGatewayMulticastDomainAssociationsRequestMarshaller : object {
    private static RejectTransitGatewayMulticastDomainAssociationsRequestMarshaller _instance;
    public static RejectTransitGatewayMulticastDomainAssociationsRequestMarshaller Instance { get; }
    private static RejectTransitGatewayMulticastDomainAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RejectTransitGatewayMulticastDomainAssociationsRequest publicRequest);
    internal static RejectTransitGatewayMulticastDomainAssociationsRequestMarshaller GetInstance();
    public static RejectTransitGatewayMulticastDomainAssociationsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectTransitGatewayMulticastDomainAssociationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RejectTransitGatewayMulticastDomainAssociationsResponseUnmarshaller _instance;
    public static RejectTransitGatewayMulticastDomainAssociationsResponseUnmarshaller Instance { get; }
    private static RejectTransitGatewayMulticastDomainAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RejectTransitGatewayMulticastDomainAssociationsResponseUnmarshaller GetInstance();
    public static RejectTransitGatewayMulticastDomainAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectTransitGatewayPeeringAttachmentRequestMarshaller : object {
    private static RejectTransitGatewayPeeringAttachmentRequestMarshaller _instance;
    public static RejectTransitGatewayPeeringAttachmentRequestMarshaller Instance { get; }
    private static RejectTransitGatewayPeeringAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RejectTransitGatewayPeeringAttachmentRequest publicRequest);
    internal static RejectTransitGatewayPeeringAttachmentRequestMarshaller GetInstance();
    public static RejectTransitGatewayPeeringAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectTransitGatewayPeeringAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RejectTransitGatewayPeeringAttachmentResponseUnmarshaller _instance;
    public static RejectTransitGatewayPeeringAttachmentResponseUnmarshaller Instance { get; }
    private static RejectTransitGatewayPeeringAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RejectTransitGatewayPeeringAttachmentResponseUnmarshaller GetInstance();
    public static RejectTransitGatewayPeeringAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectTransitGatewayVpcAttachmentRequestMarshaller : object {
    private static RejectTransitGatewayVpcAttachmentRequestMarshaller _instance;
    public static RejectTransitGatewayVpcAttachmentRequestMarshaller Instance { get; }
    private static RejectTransitGatewayVpcAttachmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RejectTransitGatewayVpcAttachmentRequest publicRequest);
    internal static RejectTransitGatewayVpcAttachmentRequestMarshaller GetInstance();
    public static RejectTransitGatewayVpcAttachmentRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectTransitGatewayVpcAttachmentResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RejectTransitGatewayVpcAttachmentResponseUnmarshaller _instance;
    public static RejectTransitGatewayVpcAttachmentResponseUnmarshaller Instance { get; }
    private static RejectTransitGatewayVpcAttachmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RejectTransitGatewayVpcAttachmentResponseUnmarshaller GetInstance();
    public static RejectTransitGatewayVpcAttachmentResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcEndpointConnectionsRequestMarshaller : object {
    private static RejectVpcEndpointConnectionsRequestMarshaller _instance;
    public static RejectVpcEndpointConnectionsRequestMarshaller Instance { get; }
    private static RejectVpcEndpointConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RejectVpcEndpointConnectionsRequest publicRequest);
    internal static RejectVpcEndpointConnectionsRequestMarshaller GetInstance();
    public static RejectVpcEndpointConnectionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcEndpointConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RejectVpcEndpointConnectionsResponseUnmarshaller _instance;
    public static RejectVpcEndpointConnectionsResponseUnmarshaller Instance { get; }
    private static RejectVpcEndpointConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RejectVpcEndpointConnectionsResponseUnmarshaller GetInstance();
    public static RejectVpcEndpointConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionRequestMarshaller : object {
    private static RejectVpcPeeringConnectionRequestMarshaller _instance;
    public static RejectVpcPeeringConnectionRequestMarshaller Instance { get; }
    private static RejectVpcPeeringConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RejectVpcPeeringConnectionRequest publicRequest);
    internal static RejectVpcPeeringConnectionRequestMarshaller GetInstance();
    public static RejectVpcPeeringConnectionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RejectVpcPeeringConnectionResponseUnmarshaller _instance;
    public static RejectVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static RejectVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RejectVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static RejectVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressRequestMarshaller : object {
    private static ReleaseAddressRequestMarshaller _instance;
    public static ReleaseAddressRequestMarshaller Instance { get; }
    private static ReleaseAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReleaseAddressRequest publicRequest);
    internal static ReleaseAddressRequestMarshaller GetInstance();
    public static ReleaseAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReleaseAddressResponseUnmarshaller _instance;
    public static ReleaseAddressResponseUnmarshaller Instance { get; }
    private static ReleaseAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReleaseAddressResponseUnmarshaller GetInstance();
    public static ReleaseAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsRequestMarshaller : object {
    private static ReleaseHostsRequestMarshaller _instance;
    public static ReleaseHostsRequestMarshaller Instance { get; }
    private static ReleaseHostsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReleaseHostsRequest publicRequest);
    internal static ReleaseHostsRequestMarshaller GetInstance();
    public static ReleaseHostsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReleaseHostsResponseUnmarshaller _instance;
    public static ReleaseHostsResponseUnmarshaller Instance { get; }
    private static ReleaseHostsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReleaseHostsResponseUnmarshaller GetInstance();
    public static ReleaseHostsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseIpamPoolAllocationRequestMarshaller : object {
    private static ReleaseIpamPoolAllocationRequestMarshaller _instance;
    public static ReleaseIpamPoolAllocationRequestMarshaller Instance { get; }
    private static ReleaseIpamPoolAllocationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReleaseIpamPoolAllocationRequest publicRequest);
    internal static ReleaseIpamPoolAllocationRequestMarshaller GetInstance();
    public static ReleaseIpamPoolAllocationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseIpamPoolAllocationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReleaseIpamPoolAllocationResponseUnmarshaller _instance;
    public static ReleaseIpamPoolAllocationResponseUnmarshaller Instance { get; }
    private static ReleaseIpamPoolAllocationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReleaseIpamPoolAllocationResponseUnmarshaller GetInstance();
    public static ReleaseIpamPoolAllocationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceIamInstanceProfileAssociationRequestMarshaller : object {
    private static ReplaceIamInstanceProfileAssociationRequestMarshaller _instance;
    public static ReplaceIamInstanceProfileAssociationRequestMarshaller Instance { get; }
    private static ReplaceIamInstanceProfileAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceIamInstanceProfileAssociationRequest publicRequest);
    internal static ReplaceIamInstanceProfileAssociationRequestMarshaller GetInstance();
    public static ReplaceIamInstanceProfileAssociationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceIamInstanceProfileAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceIamInstanceProfileAssociationResponseUnmarshaller _instance;
    public static ReplaceIamInstanceProfileAssociationResponseUnmarshaller Instance { get; }
    private static ReplaceIamInstanceProfileAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceIamInstanceProfileAssociationResponseUnmarshaller GetInstance();
    public static ReplaceIamInstanceProfileAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationRequestMarshaller : object {
    private static ReplaceNetworkAclAssociationRequestMarshaller _instance;
    public static ReplaceNetworkAclAssociationRequestMarshaller Instance { get; }
    private static ReplaceNetworkAclAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceNetworkAclAssociationRequest publicRequest);
    internal static ReplaceNetworkAclAssociationRequestMarshaller GetInstance();
    public static ReplaceNetworkAclAssociationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceNetworkAclAssociationResponseUnmarshaller _instance;
    public static ReplaceNetworkAclAssociationResponseUnmarshaller Instance { get; }
    private static ReplaceNetworkAclAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceNetworkAclAssociationResponseUnmarshaller GetInstance();
    public static ReplaceNetworkAclAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryRequestMarshaller : object {
    private static ReplaceNetworkAclEntryRequestMarshaller _instance;
    public static ReplaceNetworkAclEntryRequestMarshaller Instance { get; }
    private static ReplaceNetworkAclEntryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceNetworkAclEntryRequest publicRequest);
    internal static ReplaceNetworkAclEntryRequestMarshaller GetInstance();
    public static ReplaceNetworkAclEntryRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceNetworkAclEntryResponseUnmarshaller _instance;
    public static ReplaceNetworkAclEntryResponseUnmarshaller Instance { get; }
    private static ReplaceNetworkAclEntryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceNetworkAclEntryResponseUnmarshaller GetInstance();
    public static ReplaceNetworkAclEntryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRootVolumeTaskUnmarshaller : object {
    private static ReplaceRootVolumeTaskUnmarshaller _instance;
    public static ReplaceRootVolumeTaskUnmarshaller Instance { get; }
    private static ReplaceRootVolumeTaskUnmarshaller();
    public sealed virtual ReplaceRootVolumeTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplaceRootVolumeTask Unmarshall(JsonUnmarshallerContext context);
    public static ReplaceRootVolumeTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteRequestMarshaller : object {
    private static ReplaceRouteRequestMarshaller _instance;
    public static ReplaceRouteRequestMarshaller Instance { get; }
    private static ReplaceRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceRouteRequest publicRequest);
    internal static ReplaceRouteRequestMarshaller GetInstance();
    public static ReplaceRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceRouteResponseUnmarshaller _instance;
    public static ReplaceRouteResponseUnmarshaller Instance { get; }
    private static ReplaceRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceRouteResponseUnmarshaller GetInstance();
    public static ReplaceRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationRequestMarshaller : object {
    private static ReplaceRouteTableAssociationRequestMarshaller _instance;
    public static ReplaceRouteTableAssociationRequestMarshaller Instance { get; }
    private static ReplaceRouteTableAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceRouteTableAssociationRequest publicRequest);
    internal static ReplaceRouteTableAssociationRequestMarshaller GetInstance();
    public static ReplaceRouteTableAssociationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceRouteTableAssociationResponseUnmarshaller _instance;
    public static ReplaceRouteTableAssociationResponseUnmarshaller Instance { get; }
    private static ReplaceRouteTableAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceRouteTableAssociationResponseUnmarshaller GetInstance();
    public static ReplaceRouteTableAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceTransitGatewayRouteRequestMarshaller : object {
    private static ReplaceTransitGatewayRouteRequestMarshaller _instance;
    public static ReplaceTransitGatewayRouteRequestMarshaller Instance { get; }
    private static ReplaceTransitGatewayRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceTransitGatewayRouteRequest publicRequest);
    internal static ReplaceTransitGatewayRouteRequestMarshaller GetInstance();
    public static ReplaceTransitGatewayRouteRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceTransitGatewayRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceTransitGatewayRouteResponseUnmarshaller _instance;
    public static ReplaceTransitGatewayRouteResponseUnmarshaller Instance { get; }
    private static ReplaceTransitGatewayRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceTransitGatewayRouteResponseUnmarshaller GetInstance();
    public static ReplaceTransitGatewayRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceVpnTunnelRequestMarshaller : object {
    private static ReplaceVpnTunnelRequestMarshaller _instance;
    public static ReplaceVpnTunnelRequestMarshaller Instance { get; }
    private static ReplaceVpnTunnelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceVpnTunnelRequest publicRequest);
    internal static ReplaceVpnTunnelRequestMarshaller GetInstance();
    public static ReplaceVpnTunnelRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceVpnTunnelResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceVpnTunnelResponseUnmarshaller _instance;
    public static ReplaceVpnTunnelResponseUnmarshaller Instance { get; }
    private static ReplaceVpnTunnelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceVpnTunnelResponseUnmarshaller GetInstance();
    public static ReplaceVpnTunnelResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusRequestMarshaller : object {
    private static ReportInstanceStatusRequestMarshaller _instance;
    public static ReportInstanceStatusRequestMarshaller Instance { get; }
    private static ReportInstanceStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReportInstanceStatusRequest publicRequest);
    internal static ReportInstanceStatusRequestMarshaller GetInstance();
    public static ReportInstanceStatusRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReportInstanceStatusResponseUnmarshaller _instance;
    public static ReportInstanceStatusResponseUnmarshaller Instance { get; }
    private static ReportInstanceStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReportInstanceStatusResponseUnmarshaller GetInstance();
    public static ReportInstanceStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetRequestMarshaller : object {
    private static RequestSpotFleetRequestMarshaller _instance;
    public static RequestSpotFleetRequestMarshaller Instance { get; }
    private static RequestSpotFleetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RequestSpotFleetRequest publicRequest);
    internal static RequestSpotFleetRequestMarshaller GetInstance();
    public static RequestSpotFleetRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RequestSpotFleetResponseUnmarshaller _instance;
    public static RequestSpotFleetResponseUnmarshaller Instance { get; }
    private static RequestSpotFleetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RequestSpotFleetResponseUnmarshaller GetInstance();
    public static RequestSpotFleetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesRequestMarshaller : object {
    private static RequestSpotInstancesRequestMarshaller _instance;
    public static RequestSpotInstancesRequestMarshaller Instance { get; }
    private static RequestSpotInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RequestSpotInstancesRequest publicRequest);
    internal static RequestSpotInstancesRequestMarshaller GetInstance();
    public static RequestSpotInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RequestSpotInstancesResponseUnmarshaller _instance;
    public static RequestSpotInstancesResponseUnmarshaller Instance { get; }
    private static RequestSpotInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RequestSpotInstancesResponseUnmarshaller GetInstance();
    public static RequestSpotInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservationUnmarshaller : object {
    private static ReservationUnmarshaller _instance;
    public static ReservationUnmarshaller Instance { get; }
    private static ReservationUnmarshaller();
    public sealed virtual Reservation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Reservation Unmarshall(JsonUnmarshallerContext context);
    public static ReservationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservationValueUnmarshaller : object {
    private static ReservationValueUnmarshaller _instance;
    public static ReservationValueUnmarshaller Instance { get; }
    private static ReservationValueUnmarshaller();
    public sealed virtual ReservationValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservationValue Unmarshall(JsonUnmarshallerContext context);
    public static ReservationValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstanceReservationValueUnmarshaller : object {
    private static ReservedInstanceReservationValueUnmarshaller _instance;
    public static ReservedInstanceReservationValueUnmarshaller Instance { get; }
    private static ReservedInstanceReservationValueUnmarshaller();
    public sealed virtual ReservedInstanceReservationValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstanceReservationValue Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstanceReservationValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesConfigurationUnmarshaller : object {
    private static ReservedInstancesConfigurationUnmarshaller _instance;
    public static ReservedInstancesConfigurationUnmarshaller Instance { get; }
    private static ReservedInstancesConfigurationUnmarshaller();
    public sealed virtual ReservedInstancesConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesIdUnmarshaller : object {
    private static ReservedInstancesIdUnmarshaller _instance;
    public static ReservedInstancesIdUnmarshaller Instance { get; }
    private static ReservedInstancesIdUnmarshaller();
    public sealed virtual ReservedInstancesId Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesId Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesIdUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesListingUnmarshaller : object {
    private static ReservedInstancesListingUnmarshaller _instance;
    public static ReservedInstancesListingUnmarshaller Instance { get; }
    private static ReservedInstancesListingUnmarshaller();
    public sealed virtual ReservedInstancesListing Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesListing Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesListingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationResultUnmarshaller : object {
    private static ReservedInstancesModificationResultUnmarshaller _instance;
    public static ReservedInstancesModificationResultUnmarshaller Instance { get; }
    private static ReservedInstancesModificationResultUnmarshaller();
    public sealed virtual ReservedInstancesModificationResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesModificationResult Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesModificationResultUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationUnmarshaller : object {
    private static ReservedInstancesModificationUnmarshaller _instance;
    public static ReservedInstancesModificationUnmarshaller Instance { get; }
    private static ReservedInstancesModificationUnmarshaller();
    public sealed virtual ReservedInstancesModification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesModification Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesModificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesOfferingUnmarshaller : object {
    private static ReservedInstancesOfferingUnmarshaller _instance;
    public static ReservedInstancesOfferingUnmarshaller Instance { get; }
    private static ReservedInstancesOfferingUnmarshaller();
    public sealed virtual ReservedInstancesOffering Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesOffering Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesOfferingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesUnmarshaller : object {
    private static ReservedInstancesUnmarshaller _instance;
    public static ReservedInstancesUnmarshaller Instance { get; }
    private static ReservedInstancesUnmarshaller();
    public sealed virtual ReservedInstances Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstances Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetAddressAttributeRequestMarshaller : object {
    private static ResetAddressAttributeRequestMarshaller _instance;
    public static ResetAddressAttributeRequestMarshaller Instance { get; }
    private static ResetAddressAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetAddressAttributeRequest publicRequest);
    internal static ResetAddressAttributeRequestMarshaller GetInstance();
    public static ResetAddressAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetAddressAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetAddressAttributeResponseUnmarshaller _instance;
    public static ResetAddressAttributeResponseUnmarshaller Instance { get; }
    private static ResetAddressAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetAddressAttributeResponseUnmarshaller GetInstance();
    public static ResetAddressAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetEbsDefaultKmsKeyIdRequestMarshaller : object {
    private static ResetEbsDefaultKmsKeyIdRequestMarshaller _instance;
    public static ResetEbsDefaultKmsKeyIdRequestMarshaller Instance { get; }
    private static ResetEbsDefaultKmsKeyIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetEbsDefaultKmsKeyIdRequest publicRequest);
    internal static ResetEbsDefaultKmsKeyIdRequestMarshaller GetInstance();
    public static ResetEbsDefaultKmsKeyIdRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetEbsDefaultKmsKeyIdResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetEbsDefaultKmsKeyIdResponseUnmarshaller _instance;
    public static ResetEbsDefaultKmsKeyIdResponseUnmarshaller Instance { get; }
    private static ResetEbsDefaultKmsKeyIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetEbsDefaultKmsKeyIdResponseUnmarshaller GetInstance();
    public static ResetEbsDefaultKmsKeyIdResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetFpgaImageAttributeRequestMarshaller : object {
    private static ResetFpgaImageAttributeRequestMarshaller _instance;
    public static ResetFpgaImageAttributeRequestMarshaller Instance { get; }
    private static ResetFpgaImageAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetFpgaImageAttributeRequest publicRequest);
    internal static ResetFpgaImageAttributeRequestMarshaller GetInstance();
    public static ResetFpgaImageAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetFpgaImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetFpgaImageAttributeResponseUnmarshaller _instance;
    public static ResetFpgaImageAttributeResponseUnmarshaller Instance { get; }
    private static ResetFpgaImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetFpgaImageAttributeResponseUnmarshaller GetInstance();
    public static ResetFpgaImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeRequestMarshaller : object {
    private static ResetImageAttributeRequestMarshaller _instance;
    public static ResetImageAttributeRequestMarshaller Instance { get; }
    private static ResetImageAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetImageAttributeRequest publicRequest);
    internal static ResetImageAttributeRequestMarshaller GetInstance();
    public static ResetImageAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetImageAttributeResponseUnmarshaller _instance;
    public static ResetImageAttributeResponseUnmarshaller Instance { get; }
    private static ResetImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetImageAttributeResponseUnmarshaller GetInstance();
    public static ResetImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeRequestMarshaller : object {
    private static ResetInstanceAttributeRequestMarshaller _instance;
    public static ResetInstanceAttributeRequestMarshaller Instance { get; }
    private static ResetInstanceAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetInstanceAttributeRequest publicRequest);
    internal static ResetInstanceAttributeRequestMarshaller GetInstance();
    public static ResetInstanceAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetInstanceAttributeResponseUnmarshaller _instance;
    public static ResetInstanceAttributeResponseUnmarshaller Instance { get; }
    private static ResetInstanceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetInstanceAttributeResponseUnmarshaller GetInstance();
    public static ResetInstanceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeRequestMarshaller : object {
    private static ResetNetworkInterfaceAttributeRequestMarshaller _instance;
    public static ResetNetworkInterfaceAttributeRequestMarshaller Instance { get; }
    private static ResetNetworkInterfaceAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetNetworkInterfaceAttributeRequest publicRequest);
    internal static ResetNetworkInterfaceAttributeRequestMarshaller GetInstance();
    public static ResetNetworkInterfaceAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetNetworkInterfaceAttributeResponseUnmarshaller _instance;
    public static ResetNetworkInterfaceAttributeResponseUnmarshaller Instance { get; }
    private static ResetNetworkInterfaceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetNetworkInterfaceAttributeResponseUnmarshaller GetInstance();
    public static ResetNetworkInterfaceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeRequestMarshaller : object {
    private static ResetSnapshotAttributeRequestMarshaller _instance;
    public static ResetSnapshotAttributeRequestMarshaller Instance { get; }
    private static ResetSnapshotAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetSnapshotAttributeRequest publicRequest);
    internal static ResetSnapshotAttributeRequestMarshaller GetInstance();
    public static ResetSnapshotAttributeRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetSnapshotAttributeResponseUnmarshaller _instance;
    public static ResetSnapshotAttributeResponseUnmarshaller Instance { get; }
    private static ResetSnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetSnapshotAttributeResponseUnmarshaller GetInstance();
    public static ResetSnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResourceStatementUnmarshaller : object {
    private static ResourceStatementUnmarshaller _instance;
    public static ResourceStatementUnmarshaller Instance { get; }
    private static ResourceStatementUnmarshaller();
    public sealed virtual ResourceStatement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceStatement Unmarshall(JsonUnmarshallerContext context);
    public static ResourceStatementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResponseErrorUnmarshaller : object {
    private static ResponseErrorUnmarshaller _instance;
    public static ResponseErrorUnmarshaller Instance { get; }
    private static ResponseErrorUnmarshaller();
    public sealed virtual ResponseError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseError Unmarshall(JsonUnmarshallerContext context);
    public static ResponseErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResponseLaunchTemplateDataUnmarshaller : object {
    private static ResponseLaunchTemplateDataUnmarshaller _instance;
    public static ResponseLaunchTemplateDataUnmarshaller Instance { get; }
    private static ResponseLaunchTemplateDataUnmarshaller();
    public sealed virtual ResponseLaunchTemplateData Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseLaunchTemplateData Unmarshall(JsonUnmarshallerContext context);
    public static ResponseLaunchTemplateDataUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicRequestMarshaller : object {
    private static RestoreAddressToClassicRequestMarshaller _instance;
    public static RestoreAddressToClassicRequestMarshaller Instance { get; }
    private static RestoreAddressToClassicRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreAddressToClassicRequest publicRequest);
    internal static RestoreAddressToClassicRequestMarshaller GetInstance();
    public static RestoreAddressToClassicRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RestoreAddressToClassicResponseUnmarshaller _instance;
    public static RestoreAddressToClassicResponseUnmarshaller Instance { get; }
    private static RestoreAddressToClassicResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreAddressToClassicResponseUnmarshaller GetInstance();
    public static RestoreAddressToClassicResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreImageFromRecycleBinRequestMarshaller : object {
    private static RestoreImageFromRecycleBinRequestMarshaller _instance;
    public static RestoreImageFromRecycleBinRequestMarshaller Instance { get; }
    private static RestoreImageFromRecycleBinRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreImageFromRecycleBinRequest publicRequest);
    internal static RestoreImageFromRecycleBinRequestMarshaller GetInstance();
    public static RestoreImageFromRecycleBinRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreImageFromRecycleBinResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RestoreImageFromRecycleBinResponseUnmarshaller _instance;
    public static RestoreImageFromRecycleBinResponseUnmarshaller Instance { get; }
    private static RestoreImageFromRecycleBinResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreImageFromRecycleBinResponseUnmarshaller GetInstance();
    public static RestoreImageFromRecycleBinResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreManagedPrefixListVersionRequestMarshaller : object {
    private static RestoreManagedPrefixListVersionRequestMarshaller _instance;
    public static RestoreManagedPrefixListVersionRequestMarshaller Instance { get; }
    private static RestoreManagedPrefixListVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreManagedPrefixListVersionRequest publicRequest);
    internal static RestoreManagedPrefixListVersionRequestMarshaller GetInstance();
    public static RestoreManagedPrefixListVersionRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreManagedPrefixListVersionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RestoreManagedPrefixListVersionResponseUnmarshaller _instance;
    public static RestoreManagedPrefixListVersionResponseUnmarshaller Instance { get; }
    private static RestoreManagedPrefixListVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreManagedPrefixListVersionResponseUnmarshaller GetInstance();
    public static RestoreManagedPrefixListVersionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreSnapshotFromRecycleBinRequestMarshaller : object {
    private static RestoreSnapshotFromRecycleBinRequestMarshaller _instance;
    public static RestoreSnapshotFromRecycleBinRequestMarshaller Instance { get; }
    private static RestoreSnapshotFromRecycleBinRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreSnapshotFromRecycleBinRequest publicRequest);
    internal static RestoreSnapshotFromRecycleBinRequestMarshaller GetInstance();
    public static RestoreSnapshotFromRecycleBinRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreSnapshotFromRecycleBinResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RestoreSnapshotFromRecycleBinResponseUnmarshaller _instance;
    public static RestoreSnapshotFromRecycleBinResponseUnmarshaller Instance { get; }
    private static RestoreSnapshotFromRecycleBinResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreSnapshotFromRecycleBinResponseUnmarshaller GetInstance();
    public static RestoreSnapshotFromRecycleBinResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreSnapshotTierRequestMarshaller : object {
    private static RestoreSnapshotTierRequestMarshaller _instance;
    public static RestoreSnapshotTierRequestMarshaller Instance { get; }
    private static RestoreSnapshotTierRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreSnapshotTierRequest publicRequest);
    internal static RestoreSnapshotTierRequestMarshaller GetInstance();
    public static RestoreSnapshotTierRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreSnapshotTierResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RestoreSnapshotTierResponseUnmarshaller _instance;
    public static RestoreSnapshotTierResponseUnmarshaller Instance { get; }
    private static RestoreSnapshotTierResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreSnapshotTierResponseUnmarshaller GetInstance();
    public static RestoreSnapshotTierResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeClientVpnIngressRequestMarshaller : object {
    private static RevokeClientVpnIngressRequestMarshaller _instance;
    public static RevokeClientVpnIngressRequestMarshaller Instance { get; }
    private static RevokeClientVpnIngressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeClientVpnIngressRequest publicRequest);
    internal static RevokeClientVpnIngressRequestMarshaller GetInstance();
    public static RevokeClientVpnIngressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeClientVpnIngressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RevokeClientVpnIngressResponseUnmarshaller _instance;
    public static RevokeClientVpnIngressResponseUnmarshaller Instance { get; }
    private static RevokeClientVpnIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeClientVpnIngressResponseUnmarshaller GetInstance();
    public static RevokeClientVpnIngressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressRequestMarshaller : object {
    private static RevokeSecurityGroupEgressRequestMarshaller _instance;
    public static RevokeSecurityGroupEgressRequestMarshaller Instance { get; }
    private static RevokeSecurityGroupEgressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeSecurityGroupEgressRequest publicRequest);
    internal static RevokeSecurityGroupEgressRequestMarshaller GetInstance();
    public static RevokeSecurityGroupEgressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RevokeSecurityGroupEgressResponseUnmarshaller _instance;
    public static RevokeSecurityGroupEgressResponseUnmarshaller Instance { get; }
    private static RevokeSecurityGroupEgressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeSecurityGroupEgressResponseUnmarshaller GetInstance();
    public static RevokeSecurityGroupEgressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressRequestMarshaller : object {
    private static RevokeSecurityGroupIngressRequestMarshaller _instance;
    public static RevokeSecurityGroupIngressRequestMarshaller Instance { get; }
    private static RevokeSecurityGroupIngressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeSecurityGroupIngressRequest publicRequest);
    internal static RevokeSecurityGroupIngressRequestMarshaller GetInstance();
    public static RevokeSecurityGroupIngressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RevokeSecurityGroupIngressResponseUnmarshaller _instance;
    public static RevokeSecurityGroupIngressResponseUnmarshaller Instance { get; }
    private static RevokeSecurityGroupIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeSecurityGroupIngressResponseUnmarshaller GetInstance();
    public static RevokeSecurityGroupIngressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationStateUnmarshaller : object {
    private static RouteTableAssociationStateUnmarshaller _instance;
    public static RouteTableAssociationStateUnmarshaller Instance { get; }
    private static RouteTableAssociationStateUnmarshaller();
    public sealed virtual RouteTableAssociationState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RouteTableAssociationState Unmarshall(JsonUnmarshallerContext context);
    public static RouteTableAssociationStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationUnmarshaller : object {
    private static RouteTableAssociationUnmarshaller _instance;
    public static RouteTableAssociationUnmarshaller Instance { get; }
    private static RouteTableAssociationUnmarshaller();
    public sealed virtual RouteTableAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RouteTableAssociation Unmarshall(JsonUnmarshallerContext context);
    public static RouteTableAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableUnmarshaller : object {
    private static RouteTableUnmarshaller _instance;
    public static RouteTableUnmarshaller Instance { get; }
    private static RouteTableUnmarshaller();
    public sealed virtual RouteTable Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RouteTable Unmarshall(JsonUnmarshallerContext context);
    public static RouteTableUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RouteUnmarshaller : object {
    private static RouteUnmarshaller _instance;
    public static RouteUnmarshaller Instance { get; }
    private static RouteUnmarshaller();
    public sealed virtual Route Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Route Unmarshall(JsonUnmarshallerContext context);
    public static RouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RuleGroupRuleOptionsPairUnmarshaller : object {
    private static RuleGroupRuleOptionsPairUnmarshaller _instance;
    public static RuleGroupRuleOptionsPairUnmarshaller Instance { get; }
    private static RuleGroupRuleOptionsPairUnmarshaller();
    public sealed virtual RuleGroupRuleOptionsPair Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleGroupRuleOptionsPair Unmarshall(JsonUnmarshallerContext context);
    public static RuleGroupRuleOptionsPairUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RuleGroupTypePairUnmarshaller : object {
    private static RuleGroupTypePairUnmarshaller _instance;
    public static RuleGroupTypePairUnmarshaller Instance { get; }
    private static RuleGroupTypePairUnmarshaller();
    public sealed virtual RuleGroupTypePair Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleGroupTypePair Unmarshall(JsonUnmarshallerContext context);
    public static RuleGroupTypePairUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RuleOptionUnmarshaller : object {
    private static RuleOptionUnmarshaller _instance;
    public static RuleOptionUnmarshaller Instance { get; }
    private static RuleOptionUnmarshaller();
    public sealed virtual RuleOption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleOption Unmarshall(JsonUnmarshallerContext context);
    public static RuleOptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesRequestMarshaller : object {
    private static RunInstancesRequestMarshaller _instance;
    public static RunInstancesRequestMarshaller Instance { get; }
    private static RunInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RunInstancesRequest publicRequest);
    internal static RunInstancesRequestMarshaller GetInstance();
    public static RunInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RunInstancesResponseUnmarshaller _instance;
    public static RunInstancesResponseUnmarshaller Instance { get; }
    private static RunInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RunInstancesResponseUnmarshaller GetInstance();
    public static RunInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesRequestMarshaller : object {
    private static RunScheduledInstancesRequestMarshaller _instance;
    public static RunScheduledInstancesRequestMarshaller Instance { get; }
    private static RunScheduledInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RunScheduledInstancesRequest publicRequest);
    internal static RunScheduledInstancesRequestMarshaller GetInstance();
    public static RunScheduledInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RunScheduledInstancesResponseUnmarshaller _instance;
    public static RunScheduledInstancesResponseUnmarshaller Instance { get; }
    private static RunScheduledInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RunScheduledInstancesResponseUnmarshaller GetInstance();
    public static RunScheduledInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.S3StorageUnmarshaller : object {
    private static S3StorageUnmarshaller _instance;
    public static S3StorageUnmarshaller Instance { get; }
    private static S3StorageUnmarshaller();
    public sealed virtual S3Storage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Storage Unmarshall(JsonUnmarshallerContext context);
    public static S3StorageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceAvailabilityUnmarshaller : object {
    private static ScheduledInstanceAvailabilityUnmarshaller _instance;
    public static ScheduledInstanceAvailabilityUnmarshaller Instance { get; }
    private static ScheduledInstanceAvailabilityUnmarshaller();
    public sealed virtual ScheduledInstanceAvailability Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScheduledInstanceAvailability Unmarshall(JsonUnmarshallerContext context);
    public static ScheduledInstanceAvailabilityUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceRecurrenceUnmarshaller : object {
    private static ScheduledInstanceRecurrenceUnmarshaller _instance;
    public static ScheduledInstanceRecurrenceUnmarshaller Instance { get; }
    private static ScheduledInstanceRecurrenceUnmarshaller();
    public sealed virtual ScheduledInstanceRecurrence Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScheduledInstanceRecurrence Unmarshall(JsonUnmarshallerContext context);
    public static ScheduledInstanceRecurrenceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceUnmarshaller : object {
    private static ScheduledInstanceUnmarshaller _instance;
    public static ScheduledInstanceUnmarshaller Instance { get; }
    private static ScheduledInstanceUnmarshaller();
    public sealed virtual ScheduledInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScheduledInstance Unmarshall(JsonUnmarshallerContext context);
    public static ScheduledInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SearchLocalGatewayRoutesRequestMarshaller : object {
    private static SearchLocalGatewayRoutesRequestMarshaller _instance;
    public static SearchLocalGatewayRoutesRequestMarshaller Instance { get; }
    private static SearchLocalGatewayRoutesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SearchLocalGatewayRoutesRequest publicRequest);
    internal static SearchLocalGatewayRoutesRequestMarshaller GetInstance();
    public static SearchLocalGatewayRoutesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SearchLocalGatewayRoutesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static SearchLocalGatewayRoutesResponseUnmarshaller _instance;
    public static SearchLocalGatewayRoutesResponseUnmarshaller Instance { get; }
    private static SearchLocalGatewayRoutesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SearchLocalGatewayRoutesResponseUnmarshaller GetInstance();
    public static SearchLocalGatewayRoutesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SearchTransitGatewayMulticastGroupsRequestMarshaller : object {
    private static SearchTransitGatewayMulticastGroupsRequestMarshaller _instance;
    public static SearchTransitGatewayMulticastGroupsRequestMarshaller Instance { get; }
    private static SearchTransitGatewayMulticastGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SearchTransitGatewayMulticastGroupsRequest publicRequest);
    internal static SearchTransitGatewayMulticastGroupsRequestMarshaller GetInstance();
    public static SearchTransitGatewayMulticastGroupsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SearchTransitGatewayMulticastGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static SearchTransitGatewayMulticastGroupsResponseUnmarshaller _instance;
    public static SearchTransitGatewayMulticastGroupsResponseUnmarshaller Instance { get; }
    private static SearchTransitGatewayMulticastGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SearchTransitGatewayMulticastGroupsResponseUnmarshaller GetInstance();
    public static SearchTransitGatewayMulticastGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SearchTransitGatewayRoutesRequestMarshaller : object {
    private static SearchTransitGatewayRoutesRequestMarshaller _instance;
    public static SearchTransitGatewayRoutesRequestMarshaller Instance { get; }
    private static SearchTransitGatewayRoutesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SearchTransitGatewayRoutesRequest publicRequest);
    internal static SearchTransitGatewayRoutesRequestMarshaller GetInstance();
    public static SearchTransitGatewayRoutesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SearchTransitGatewayRoutesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static SearchTransitGatewayRoutesResponseUnmarshaller _instance;
    public static SearchTransitGatewayRoutesResponseUnmarshaller Instance { get; }
    private static SearchTransitGatewayRoutesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SearchTransitGatewayRoutesResponseUnmarshaller GetInstance();
    public static SearchTransitGatewayRoutesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupForVpcUnmarshaller : object {
    private static SecurityGroupForVpcUnmarshaller _instance;
    public static SecurityGroupForVpcUnmarshaller Instance { get; }
    private static SecurityGroupForVpcUnmarshaller();
    public sealed virtual SecurityGroupForVpc Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecurityGroupForVpc Unmarshall(JsonUnmarshallerContext context);
    public static SecurityGroupForVpcUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupIdentifierUnmarshaller : object {
    private static SecurityGroupIdentifierUnmarshaller _instance;
    public static SecurityGroupIdentifierUnmarshaller Instance { get; }
    private static SecurityGroupIdentifierUnmarshaller();
    public sealed virtual SecurityGroupIdentifier Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecurityGroupIdentifier Unmarshall(JsonUnmarshallerContext context);
    public static SecurityGroupIdentifierUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupReferenceUnmarshaller : object {
    private static SecurityGroupReferenceUnmarshaller _instance;
    public static SecurityGroupReferenceUnmarshaller Instance { get; }
    private static SecurityGroupReferenceUnmarshaller();
    public sealed virtual SecurityGroupReference Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecurityGroupReference Unmarshall(JsonUnmarshallerContext context);
    public static SecurityGroupReferenceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupRuleUnmarshaller : object {
    private static SecurityGroupRuleUnmarshaller _instance;
    public static SecurityGroupRuleUnmarshaller Instance { get; }
    private static SecurityGroupRuleUnmarshaller();
    public sealed virtual SecurityGroupRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecurityGroupRule Unmarshall(JsonUnmarshallerContext context);
    public static SecurityGroupRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupUnmarshaller : object {
    private static SecurityGroupUnmarshaller _instance;
    public static SecurityGroupUnmarshaller Instance { get; }
    private static SecurityGroupUnmarshaller();
    public sealed virtual SecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static SecurityGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SendDiagnosticInterruptRequestMarshaller : object {
    private static SendDiagnosticInterruptRequestMarshaller _instance;
    public static SendDiagnosticInterruptRequestMarshaller Instance { get; }
    private static SendDiagnosticInterruptRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendDiagnosticInterruptRequest publicRequest);
    internal static SendDiagnosticInterruptRequestMarshaller GetInstance();
    public static SendDiagnosticInterruptRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SendDiagnosticInterruptResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static SendDiagnosticInterruptResponseUnmarshaller _instance;
    public static SendDiagnosticInterruptResponseUnmarshaller Instance { get; }
    private static SendDiagnosticInterruptResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendDiagnosticInterruptResponseUnmarshaller GetInstance();
    public static SendDiagnosticInterruptResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ServiceConfigurationUnmarshaller : object {
    private static ServiceConfigurationUnmarshaller _instance;
    public static ServiceConfigurationUnmarshaller Instance { get; }
    private static ServiceConfigurationUnmarshaller();
    public sealed virtual ServiceConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServiceConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ServiceConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ServiceDetailUnmarshaller : object {
    private static ServiceDetailUnmarshaller _instance;
    public static ServiceDetailUnmarshaller Instance { get; }
    private static ServiceDetailUnmarshaller();
    public sealed virtual ServiceDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServiceDetail Unmarshall(JsonUnmarshallerContext context);
    public static ServiceDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ServiceTypeDetailUnmarshaller : object {
    private static ServiceTypeDetailUnmarshaller _instance;
    public static ServiceTypeDetailUnmarshaller Instance { get; }
    private static ServiceTypeDetailUnmarshaller();
    public sealed virtual ServiceTypeDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServiceTypeDetail Unmarshall(JsonUnmarshallerContext context);
    public static ServiceTypeDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotDetailUnmarshaller : object {
    private static SnapshotDetailUnmarshaller _instance;
    public static SnapshotDetailUnmarshaller Instance { get; }
    private static SnapshotDetailUnmarshaller();
    public sealed virtual SnapshotDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotDetail Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotInfoUnmarshaller : object {
    private static SnapshotInfoUnmarshaller _instance;
    public static SnapshotInfoUnmarshaller Instance { get; }
    private static SnapshotInfoUnmarshaller();
    public sealed virtual SnapshotInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotInfo Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotRecycleBinInfoUnmarshaller : object {
    private static SnapshotRecycleBinInfoUnmarshaller _instance;
    public static SnapshotRecycleBinInfoUnmarshaller Instance { get; }
    private static SnapshotRecycleBinInfoUnmarshaller();
    public sealed virtual SnapshotRecycleBinInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotRecycleBinInfo Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotRecycleBinInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotTaskDetailUnmarshaller : object {
    private static SnapshotTaskDetailUnmarshaller _instance;
    public static SnapshotTaskDetailUnmarshaller Instance { get; }
    private static SnapshotTaskDetailUnmarshaller();
    public sealed virtual SnapshotTaskDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotTaskDetail Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotTaskDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotTierStatusUnmarshaller : object {
    private static SnapshotTierStatusUnmarshaller _instance;
    public static SnapshotTierStatusUnmarshaller Instance { get; }
    private static SnapshotTierStatusUnmarshaller();
    public sealed virtual SnapshotTierStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotTierStatus Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotTierStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotUnmarshaller : object {
    private static SnapshotUnmarshaller _instance;
    public static SnapshotUnmarshaller Instance { get; }
    private static SnapshotUnmarshaller();
    public sealed virtual Snapshot Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Snapshot Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotCapacityRebalanceUnmarshaller : object {
    private static SpotCapacityRebalanceUnmarshaller _instance;
    public static SpotCapacityRebalanceUnmarshaller Instance { get; }
    private static SpotCapacityRebalanceUnmarshaller();
    public sealed virtual SpotCapacityRebalance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotCapacityRebalance Unmarshall(JsonUnmarshallerContext context);
    public static SpotCapacityRebalanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotDatafeedSubscriptionUnmarshaller : object {
    private static SpotDatafeedSubscriptionUnmarshaller _instance;
    public static SpotDatafeedSubscriptionUnmarshaller Instance { get; }
    private static SpotDatafeedSubscriptionUnmarshaller();
    public sealed virtual SpotDatafeedSubscription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotDatafeedSubscription Unmarshall(JsonUnmarshallerContext context);
    public static SpotDatafeedSubscriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetLaunchSpecificationUnmarshaller : object {
    private static SpotFleetLaunchSpecificationUnmarshaller _instance;
    public static SpotFleetLaunchSpecificationUnmarshaller Instance { get; }
    private static SpotFleetLaunchSpecificationUnmarshaller();
    public sealed virtual SpotFleetLaunchSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetLaunchSpecification Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetLaunchSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetMonitoringUnmarshaller : object {
    private static SpotFleetMonitoringUnmarshaller _instance;
    public static SpotFleetMonitoringUnmarshaller Instance { get; }
    private static SpotFleetMonitoringUnmarshaller();
    public sealed virtual SpotFleetMonitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetMonitoring Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetMonitoringUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigDataUnmarshaller : object {
    private static SpotFleetRequestConfigDataUnmarshaller _instance;
    public static SpotFleetRequestConfigDataUnmarshaller Instance { get; }
    private static SpotFleetRequestConfigDataUnmarshaller();
    public sealed virtual SpotFleetRequestConfigData Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetRequestConfigData Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetRequestConfigDataUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigUnmarshaller : object {
    private static SpotFleetRequestConfigUnmarshaller _instance;
    public static SpotFleetRequestConfigUnmarshaller Instance { get; }
    private static SpotFleetRequestConfigUnmarshaller();
    public sealed virtual SpotFleetRequestConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetRequestConfig Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetRequestConfigUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetTagSpecificationUnmarshaller : object {
    private static SpotFleetTagSpecificationUnmarshaller _instance;
    public static SpotFleetTagSpecificationUnmarshaller Instance { get; }
    private static SpotFleetTagSpecificationUnmarshaller();
    public sealed virtual SpotFleetTagSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetTagSpecification Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetTagSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceRequestUnmarshaller : object {
    private static SpotInstanceRequestUnmarshaller _instance;
    public static SpotInstanceRequestUnmarshaller Instance { get; }
    private static SpotInstanceRequestUnmarshaller();
    public sealed virtual SpotInstanceRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotInstanceRequest Unmarshall(JsonUnmarshallerContext context);
    public static SpotInstanceRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStateFaultUnmarshaller : object {
    private static SpotInstanceStateFaultUnmarshaller _instance;
    public static SpotInstanceStateFaultUnmarshaller Instance { get; }
    private static SpotInstanceStateFaultUnmarshaller();
    public sealed virtual SpotInstanceStateFault Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotInstanceStateFault Unmarshall(JsonUnmarshallerContext context);
    public static SpotInstanceStateFaultUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStatusUnmarshaller : object {
    private static SpotInstanceStatusUnmarshaller _instance;
    public static SpotInstanceStatusUnmarshaller Instance { get; }
    private static SpotInstanceStatusUnmarshaller();
    public sealed virtual SpotInstanceStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotInstanceStatus Unmarshall(JsonUnmarshallerContext context);
    public static SpotInstanceStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotMaintenanceStrategiesUnmarshaller : object {
    private static SpotMaintenanceStrategiesUnmarshaller _instance;
    public static SpotMaintenanceStrategiesUnmarshaller Instance { get; }
    private static SpotMaintenanceStrategiesUnmarshaller();
    public sealed virtual SpotMaintenanceStrategies Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotMaintenanceStrategies Unmarshall(JsonUnmarshallerContext context);
    public static SpotMaintenanceStrategiesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotOptionsUnmarshaller : object {
    private static SpotOptionsUnmarshaller _instance;
    public static SpotOptionsUnmarshaller Instance { get; }
    private static SpotOptionsUnmarshaller();
    public sealed virtual SpotOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotOptions Unmarshall(JsonUnmarshallerContext context);
    public static SpotOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementScoreUnmarshaller : object {
    private static SpotPlacementScoreUnmarshaller _instance;
    public static SpotPlacementScoreUnmarshaller Instance { get; }
    private static SpotPlacementScoreUnmarshaller();
    public sealed virtual SpotPlacementScore Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotPlacementScore Unmarshall(JsonUnmarshallerContext context);
    public static SpotPlacementScoreUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementUnmarshaller : object {
    private static SpotPlacementUnmarshaller _instance;
    public static SpotPlacementUnmarshaller Instance { get; }
    private static SpotPlacementUnmarshaller();
    public sealed virtual SpotPlacement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotPlacement Unmarshall(JsonUnmarshallerContext context);
    public static SpotPlacementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotPriceUnmarshaller : object {
    private static SpotPriceUnmarshaller _instance;
    public static SpotPriceUnmarshaller Instance { get; }
    private static SpotPriceUnmarshaller();
    public sealed virtual SpotPrice Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotPrice Unmarshall(JsonUnmarshallerContext context);
    public static SpotPriceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StaleIpPermissionUnmarshaller : object {
    private static StaleIpPermissionUnmarshaller _instance;
    public static StaleIpPermissionUnmarshaller Instance { get; }
    private static StaleIpPermissionUnmarshaller();
    public sealed virtual StaleIpPermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StaleIpPermission Unmarshall(JsonUnmarshallerContext context);
    public static StaleIpPermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StaleSecurityGroupUnmarshaller : object {
    private static StaleSecurityGroupUnmarshaller _instance;
    public static StaleSecurityGroupUnmarshaller Instance { get; }
    private static StaleSecurityGroupUnmarshaller();
    public sealed virtual StaleSecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StaleSecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static StaleSecurityGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesRequestMarshaller : object {
    private static StartInstancesRequestMarshaller _instance;
    public static StartInstancesRequestMarshaller Instance { get; }
    private static StartInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartInstancesRequest publicRequest);
    internal static StartInstancesRequestMarshaller GetInstance();
    public static StartInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static StartInstancesResponseUnmarshaller _instance;
    public static StartInstancesResponseUnmarshaller Instance { get; }
    private static StartInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartInstancesResponseUnmarshaller GetInstance();
    public static StartInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartNetworkInsightsAccessScopeAnalysisRequestMarshaller : object {
    private static StartNetworkInsightsAccessScopeAnalysisRequestMarshaller _instance;
    public static StartNetworkInsightsAccessScopeAnalysisRequestMarshaller Instance { get; }
    private static StartNetworkInsightsAccessScopeAnalysisRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartNetworkInsightsAccessScopeAnalysisRequest publicRequest);
    internal static StartNetworkInsightsAccessScopeAnalysisRequestMarshaller GetInstance();
    public static StartNetworkInsightsAccessScopeAnalysisRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartNetworkInsightsAccessScopeAnalysisResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static StartNetworkInsightsAccessScopeAnalysisResponseUnmarshaller _instance;
    public static StartNetworkInsightsAccessScopeAnalysisResponseUnmarshaller Instance { get; }
    private static StartNetworkInsightsAccessScopeAnalysisResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartNetworkInsightsAccessScopeAnalysisResponseUnmarshaller GetInstance();
    public static StartNetworkInsightsAccessScopeAnalysisResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartNetworkInsightsAnalysisRequestMarshaller : object {
    private static StartNetworkInsightsAnalysisRequestMarshaller _instance;
    public static StartNetworkInsightsAnalysisRequestMarshaller Instance { get; }
    private static StartNetworkInsightsAnalysisRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartNetworkInsightsAnalysisRequest publicRequest);
    internal static StartNetworkInsightsAnalysisRequestMarshaller GetInstance();
    public static StartNetworkInsightsAnalysisRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartNetworkInsightsAnalysisResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static StartNetworkInsightsAnalysisResponseUnmarshaller _instance;
    public static StartNetworkInsightsAnalysisResponseUnmarshaller Instance { get; }
    private static StartNetworkInsightsAnalysisResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartNetworkInsightsAnalysisResponseUnmarshaller GetInstance();
    public static StartNetworkInsightsAnalysisResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartVpcEndpointServicePrivateDnsVerificationRequestMarshaller : object {
    private static StartVpcEndpointServicePrivateDnsVerificationRequestMarshaller _instance;
    public static StartVpcEndpointServicePrivateDnsVerificationRequestMarshaller Instance { get; }
    private static StartVpcEndpointServicePrivateDnsVerificationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartVpcEndpointServicePrivateDnsVerificationRequest publicRequest);
    internal static StartVpcEndpointServicePrivateDnsVerificationRequestMarshaller GetInstance();
    public static StartVpcEndpointServicePrivateDnsVerificationRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartVpcEndpointServicePrivateDnsVerificationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static StartVpcEndpointServicePrivateDnsVerificationResponseUnmarshaller _instance;
    public static StartVpcEndpointServicePrivateDnsVerificationResponseUnmarshaller Instance { get; }
    private static StartVpcEndpointServicePrivateDnsVerificationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartVpcEndpointServicePrivateDnsVerificationResponseUnmarshaller GetInstance();
    public static StartVpcEndpointServicePrivateDnsVerificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StateReasonUnmarshaller : object {
    private static StateReasonUnmarshaller _instance;
    public static StateReasonUnmarshaller Instance { get; }
    private static StateReasonUnmarshaller();
    public sealed virtual StateReason Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StateReason Unmarshall(JsonUnmarshallerContext context);
    public static StateReasonUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesRequestMarshaller : object {
    private static StopInstancesRequestMarshaller _instance;
    public static StopInstancesRequestMarshaller Instance { get; }
    private static StopInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopInstancesRequest publicRequest);
    internal static StopInstancesRequestMarshaller GetInstance();
    public static StopInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static StopInstancesResponseUnmarshaller _instance;
    public static StopInstancesResponseUnmarshaller Instance { get; }
    private static StopInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopInstancesResponseUnmarshaller GetInstance();
    public static StopInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StorageUnmarshaller : object {
    private static StorageUnmarshaller _instance;
    public static StorageUnmarshaller Instance { get; }
    private static StorageUnmarshaller();
    public sealed virtual Storage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Storage Unmarshall(JsonUnmarshallerContext context);
    public static StorageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StoreImageTaskResultUnmarshaller : object {
    private static StoreImageTaskResultUnmarshaller _instance;
    public static StoreImageTaskResultUnmarshaller Instance { get; }
    private static StoreImageTaskResultUnmarshaller();
    public sealed virtual StoreImageTaskResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StoreImageTaskResult Unmarshall(JsonUnmarshallerContext context);
    public static StoreImageTaskResultUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SubnetAssociationUnmarshaller : object {
    private static SubnetAssociationUnmarshaller _instance;
    public static SubnetAssociationUnmarshaller Instance { get; }
    private static SubnetAssociationUnmarshaller();
    public sealed virtual SubnetAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubnetAssociation Unmarshall(JsonUnmarshallerContext context);
    public static SubnetAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SubnetCidrBlockStateUnmarshaller : object {
    private static SubnetCidrBlockStateUnmarshaller _instance;
    public static SubnetCidrBlockStateUnmarshaller Instance { get; }
    private static SubnetCidrBlockStateUnmarshaller();
    public sealed virtual SubnetCidrBlockState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubnetCidrBlockState Unmarshall(JsonUnmarshallerContext context);
    public static SubnetCidrBlockStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SubnetCidrReservationUnmarshaller : object {
    private static SubnetCidrReservationUnmarshaller _instance;
    public static SubnetCidrReservationUnmarshaller Instance { get; }
    private static SubnetCidrReservationUnmarshaller();
    public sealed virtual SubnetCidrReservation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubnetCidrReservation Unmarshall(JsonUnmarshallerContext context);
    public static SubnetCidrReservationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SubnetIpv6CidrBlockAssociationUnmarshaller : object {
    private static SubnetIpv6CidrBlockAssociationUnmarshaller _instance;
    public static SubnetIpv6CidrBlockAssociationUnmarshaller Instance { get; }
    private static SubnetIpv6CidrBlockAssociationUnmarshaller();
    public sealed virtual SubnetIpv6CidrBlockAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubnetIpv6CidrBlockAssociation Unmarshall(JsonUnmarshallerContext context);
    public static SubnetIpv6CidrBlockAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SubnetUnmarshaller : object {
    private static SubnetUnmarshaller _instance;
    public static SubnetUnmarshaller Instance { get; }
    private static SubnetUnmarshaller();
    public sealed virtual Subnet Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Subnet Unmarshall(JsonUnmarshallerContext context);
    public static SubnetUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SubscriptionUnmarshaller : object {
    private static SubscriptionUnmarshaller _instance;
    public static SubscriptionUnmarshaller Instance { get; }
    private static SubscriptionUnmarshaller();
    public sealed virtual Subscription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Subscription Unmarshall(JsonUnmarshallerContext context);
    public static SubscriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SuccessfulInstanceCreditSpecificationItemUnmarshaller : object {
    private static SuccessfulInstanceCreditSpecificationItemUnmarshaller _instance;
    public static SuccessfulInstanceCreditSpecificationItemUnmarshaller Instance { get; }
    private static SuccessfulInstanceCreditSpecificationItemUnmarshaller();
    public sealed virtual SuccessfulInstanceCreditSpecificationItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SuccessfulInstanceCreditSpecificationItem Unmarshall(JsonUnmarshallerContext context);
    public static SuccessfulInstanceCreditSpecificationItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SuccessfulQueuedPurchaseDeletionUnmarshaller : object {
    private static SuccessfulQueuedPurchaseDeletionUnmarshaller _instance;
    public static SuccessfulQueuedPurchaseDeletionUnmarshaller Instance { get; }
    private static SuccessfulQueuedPurchaseDeletionUnmarshaller();
    public sealed virtual SuccessfulQueuedPurchaseDeletion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SuccessfulQueuedPurchaseDeletion Unmarshall(JsonUnmarshallerContext context);
    public static SuccessfulQueuedPurchaseDeletionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller : object {
    private static TagDescriptionUnmarshaller _instance;
    public static TagDescriptionUnmarshaller Instance { get; }
    private static TagDescriptionUnmarshaller();
    public sealed virtual TagDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TagDescription Unmarshall(JsonUnmarshallerContext context);
    public static TagDescriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TagSpecificationUnmarshaller : object {
    private static TagSpecificationUnmarshaller _instance;
    public static TagSpecificationUnmarshaller Instance { get; }
    private static TagSpecificationUnmarshaller();
    public sealed virtual TagSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TagSpecification Unmarshall(JsonUnmarshallerContext context);
    public static TagSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TargetCapacitySpecificationUnmarshaller : object {
    private static TargetCapacitySpecificationUnmarshaller _instance;
    public static TargetCapacitySpecificationUnmarshaller Instance { get; }
    private static TargetCapacitySpecificationUnmarshaller();
    public sealed virtual TargetCapacitySpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetCapacitySpecification Unmarshall(JsonUnmarshallerContext context);
    public static TargetCapacitySpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TargetConfigurationUnmarshaller : object {
    private static TargetConfigurationUnmarshaller _instance;
    public static TargetConfigurationUnmarshaller Instance { get; }
    private static TargetConfigurationUnmarshaller();
    public sealed virtual TargetConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static TargetConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TargetGroupsConfigUnmarshaller : object {
    private static TargetGroupsConfigUnmarshaller _instance;
    public static TargetGroupsConfigUnmarshaller Instance { get; }
    private static TargetGroupsConfigUnmarshaller();
    public sealed virtual TargetGroupsConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroupsConfig Unmarshall(JsonUnmarshallerContext context);
    public static TargetGroupsConfigUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TargetGroupUnmarshaller : object {
    private static TargetGroupUnmarshaller _instance;
    public static TargetGroupUnmarshaller Instance { get; }
    private static TargetGroupUnmarshaller();
    public sealed virtual TargetGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroup Unmarshall(JsonUnmarshallerContext context);
    public static TargetGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TargetNetworkUnmarshaller : object {
    private static TargetNetworkUnmarshaller _instance;
    public static TargetNetworkUnmarshaller Instance { get; }
    private static TargetNetworkUnmarshaller();
    public sealed virtual TargetNetwork Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetNetwork Unmarshall(JsonUnmarshallerContext context);
    public static TargetNetworkUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TargetReservationValueUnmarshaller : object {
    private static TargetReservationValueUnmarshaller _instance;
    public static TargetReservationValueUnmarshaller Instance { get; }
    private static TargetReservationValueUnmarshaller();
    public sealed virtual TargetReservationValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetReservationValue Unmarshall(JsonUnmarshallerContext context);
    public static TargetReservationValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TerminateClientVpnConnectionsRequestMarshaller : object {
    private static TerminateClientVpnConnectionsRequestMarshaller _instance;
    public static TerminateClientVpnConnectionsRequestMarshaller Instance { get; }
    private static TerminateClientVpnConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TerminateClientVpnConnectionsRequest publicRequest);
    internal static TerminateClientVpnConnectionsRequestMarshaller GetInstance();
    public static TerminateClientVpnConnectionsRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TerminateClientVpnConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static TerminateClientVpnConnectionsResponseUnmarshaller _instance;
    public static TerminateClientVpnConnectionsResponseUnmarshaller Instance { get; }
    private static TerminateClientVpnConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TerminateClientVpnConnectionsResponseUnmarshaller GetInstance();
    public static TerminateClientVpnConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TerminateConnectionStatusUnmarshaller : object {
    private static TerminateConnectionStatusUnmarshaller _instance;
    public static TerminateConnectionStatusUnmarshaller Instance { get; }
    private static TerminateConnectionStatusUnmarshaller();
    public sealed virtual TerminateConnectionStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TerminateConnectionStatus Unmarshall(JsonUnmarshallerContext context);
    public static TerminateConnectionStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesRequestMarshaller : object {
    private static TerminateInstancesRequestMarshaller _instance;
    public static TerminateInstancesRequestMarshaller Instance { get; }
    private static TerminateInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TerminateInstancesRequest publicRequest);
    internal static TerminateInstancesRequestMarshaller GetInstance();
    public static TerminateInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static TerminateInstancesResponseUnmarshaller _instance;
    public static TerminateInstancesResponseUnmarshaller Instance { get; }
    private static TerminateInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TerminateInstancesResponseUnmarshaller GetInstance();
    public static TerminateInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ThroughResourcesStatementUnmarshaller : object {
    private static ThroughResourcesStatementUnmarshaller _instance;
    public static ThroughResourcesStatementUnmarshaller Instance { get; }
    private static ThroughResourcesStatementUnmarshaller();
    public sealed virtual ThroughResourcesStatement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ThroughResourcesStatement Unmarshall(JsonUnmarshallerContext context);
    public static ThroughResourcesStatementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TotalLocalStorageGBUnmarshaller : object {
    private static TotalLocalStorageGBUnmarshaller _instance;
    public static TotalLocalStorageGBUnmarshaller Instance { get; }
    private static TotalLocalStorageGBUnmarshaller();
    public sealed virtual TotalLocalStorageGB Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TotalLocalStorageGB Unmarshall(JsonUnmarshallerContext context);
    public static TotalLocalStorageGBUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TrafficMirrorFilterRuleUnmarshaller : object {
    private static TrafficMirrorFilterRuleUnmarshaller _instance;
    public static TrafficMirrorFilterRuleUnmarshaller Instance { get; }
    private static TrafficMirrorFilterRuleUnmarshaller();
    public sealed virtual TrafficMirrorFilterRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrafficMirrorFilterRule Unmarshall(JsonUnmarshallerContext context);
    public static TrafficMirrorFilterRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TrafficMirrorFilterUnmarshaller : object {
    private static TrafficMirrorFilterUnmarshaller _instance;
    public static TrafficMirrorFilterUnmarshaller Instance { get; }
    private static TrafficMirrorFilterUnmarshaller();
    public sealed virtual TrafficMirrorFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrafficMirrorFilter Unmarshall(JsonUnmarshallerContext context);
    public static TrafficMirrorFilterUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TrafficMirrorPortRangeUnmarshaller : object {
    private static TrafficMirrorPortRangeUnmarshaller _instance;
    public static TrafficMirrorPortRangeUnmarshaller Instance { get; }
    private static TrafficMirrorPortRangeUnmarshaller();
    public sealed virtual TrafficMirrorPortRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrafficMirrorPortRange Unmarshall(JsonUnmarshallerContext context);
    public static TrafficMirrorPortRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TrafficMirrorSessionUnmarshaller : object {
    private static TrafficMirrorSessionUnmarshaller _instance;
    public static TrafficMirrorSessionUnmarshaller Instance { get; }
    private static TrafficMirrorSessionUnmarshaller();
    public sealed virtual TrafficMirrorSession Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrafficMirrorSession Unmarshall(JsonUnmarshallerContext context);
    public static TrafficMirrorSessionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TrafficMirrorTargetUnmarshaller : object {
    private static TrafficMirrorTargetUnmarshaller _instance;
    public static TrafficMirrorTargetUnmarshaller Instance { get; }
    private static TrafficMirrorTargetUnmarshaller();
    public sealed virtual TrafficMirrorTarget Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrafficMirrorTarget Unmarshall(JsonUnmarshallerContext context);
    public static TrafficMirrorTargetUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayAssociationUnmarshaller : object {
    private static TransitGatewayAssociationUnmarshaller _instance;
    public static TransitGatewayAssociationUnmarshaller Instance { get; }
    private static TransitGatewayAssociationUnmarshaller();
    public sealed virtual TransitGatewayAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayAssociation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayAttachmentAssociationUnmarshaller : object {
    private static TransitGatewayAttachmentAssociationUnmarshaller _instance;
    public static TransitGatewayAttachmentAssociationUnmarshaller Instance { get; }
    private static TransitGatewayAttachmentAssociationUnmarshaller();
    public sealed virtual TransitGatewayAttachmentAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayAttachmentAssociation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayAttachmentAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayAttachmentBgpConfigurationUnmarshaller : object {
    private static TransitGatewayAttachmentBgpConfigurationUnmarshaller _instance;
    public static TransitGatewayAttachmentBgpConfigurationUnmarshaller Instance { get; }
    private static TransitGatewayAttachmentBgpConfigurationUnmarshaller();
    public sealed virtual TransitGatewayAttachmentBgpConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayAttachmentBgpConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayAttachmentBgpConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayAttachmentPropagationUnmarshaller : object {
    private static TransitGatewayAttachmentPropagationUnmarshaller _instance;
    public static TransitGatewayAttachmentPropagationUnmarshaller Instance { get; }
    private static TransitGatewayAttachmentPropagationUnmarshaller();
    public sealed virtual TransitGatewayAttachmentPropagation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayAttachmentPropagation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayAttachmentPropagationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayAttachmentUnmarshaller : object {
    private static TransitGatewayAttachmentUnmarshaller _instance;
    public static TransitGatewayAttachmentUnmarshaller Instance { get; }
    private static TransitGatewayAttachmentUnmarshaller();
    public sealed virtual TransitGatewayAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayAttachment Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayConnectOptionsUnmarshaller : object {
    private static TransitGatewayConnectOptionsUnmarshaller _instance;
    public static TransitGatewayConnectOptionsUnmarshaller Instance { get; }
    private static TransitGatewayConnectOptionsUnmarshaller();
    public sealed virtual TransitGatewayConnectOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayConnectOptions Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayConnectOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayConnectPeerConfigurationUnmarshaller : object {
    private static TransitGatewayConnectPeerConfigurationUnmarshaller _instance;
    public static TransitGatewayConnectPeerConfigurationUnmarshaller Instance { get; }
    private static TransitGatewayConnectPeerConfigurationUnmarshaller();
    public sealed virtual TransitGatewayConnectPeerConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayConnectPeerConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayConnectPeerConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayConnectPeerUnmarshaller : object {
    private static TransitGatewayConnectPeerUnmarshaller _instance;
    public static TransitGatewayConnectPeerUnmarshaller Instance { get; }
    private static TransitGatewayConnectPeerUnmarshaller();
    public sealed virtual TransitGatewayConnectPeer Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayConnectPeer Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayConnectPeerUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayConnectUnmarshaller : object {
    private static TransitGatewayConnectUnmarshaller _instance;
    public static TransitGatewayConnectUnmarshaller Instance { get; }
    private static TransitGatewayConnectUnmarshaller();
    public sealed virtual TransitGatewayConnect Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayConnect Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayConnectUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastDeregisteredGroupMembersUnmarshaller : object {
    private static TransitGatewayMulticastDeregisteredGroupMembersUnmarshaller _instance;
    public static TransitGatewayMulticastDeregisteredGroupMembersUnmarshaller Instance { get; }
    private static TransitGatewayMulticastDeregisteredGroupMembersUnmarshaller();
    public sealed virtual TransitGatewayMulticastDeregisteredGroupMembers Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastDeregisteredGroupMembers Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastDeregisteredGroupMembersUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastDeregisteredGroupSourcesUnmarshaller : object {
    private static TransitGatewayMulticastDeregisteredGroupSourcesUnmarshaller _instance;
    public static TransitGatewayMulticastDeregisteredGroupSourcesUnmarshaller Instance { get; }
    private static TransitGatewayMulticastDeregisteredGroupSourcesUnmarshaller();
    public sealed virtual TransitGatewayMulticastDeregisteredGroupSources Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastDeregisteredGroupSources Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastDeregisteredGroupSourcesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastDomainAssociationsUnmarshaller : object {
    private static TransitGatewayMulticastDomainAssociationsUnmarshaller _instance;
    public static TransitGatewayMulticastDomainAssociationsUnmarshaller Instance { get; }
    private static TransitGatewayMulticastDomainAssociationsUnmarshaller();
    public sealed virtual TransitGatewayMulticastDomainAssociations Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastDomainAssociations Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastDomainAssociationsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastDomainAssociationUnmarshaller : object {
    private static TransitGatewayMulticastDomainAssociationUnmarshaller _instance;
    public static TransitGatewayMulticastDomainAssociationUnmarshaller Instance { get; }
    private static TransitGatewayMulticastDomainAssociationUnmarshaller();
    public sealed virtual TransitGatewayMulticastDomainAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastDomainAssociation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastDomainAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastDomainOptionsUnmarshaller : object {
    private static TransitGatewayMulticastDomainOptionsUnmarshaller _instance;
    public static TransitGatewayMulticastDomainOptionsUnmarshaller Instance { get; }
    private static TransitGatewayMulticastDomainOptionsUnmarshaller();
    public sealed virtual TransitGatewayMulticastDomainOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastDomainOptions Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastDomainOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastDomainUnmarshaller : object {
    private static TransitGatewayMulticastDomainUnmarshaller _instance;
    public static TransitGatewayMulticastDomainUnmarshaller Instance { get; }
    private static TransitGatewayMulticastDomainUnmarshaller();
    public sealed virtual TransitGatewayMulticastDomain Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastDomain Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastDomainUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastGroupUnmarshaller : object {
    private static TransitGatewayMulticastGroupUnmarshaller _instance;
    public static TransitGatewayMulticastGroupUnmarshaller Instance { get; }
    private static TransitGatewayMulticastGroupUnmarshaller();
    public sealed virtual TransitGatewayMulticastGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastGroup Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastRegisteredGroupMembersUnmarshaller : object {
    private static TransitGatewayMulticastRegisteredGroupMembersUnmarshaller _instance;
    public static TransitGatewayMulticastRegisteredGroupMembersUnmarshaller Instance { get; }
    private static TransitGatewayMulticastRegisteredGroupMembersUnmarshaller();
    public sealed virtual TransitGatewayMulticastRegisteredGroupMembers Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastRegisteredGroupMembers Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastRegisteredGroupMembersUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayMulticastRegisteredGroupSourcesUnmarshaller : object {
    private static TransitGatewayMulticastRegisteredGroupSourcesUnmarshaller _instance;
    public static TransitGatewayMulticastRegisteredGroupSourcesUnmarshaller Instance { get; }
    private static TransitGatewayMulticastRegisteredGroupSourcesUnmarshaller();
    public sealed virtual TransitGatewayMulticastRegisteredGroupSources Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayMulticastRegisteredGroupSources Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayMulticastRegisteredGroupSourcesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayOptionsUnmarshaller : object {
    private static TransitGatewayOptionsUnmarshaller _instance;
    public static TransitGatewayOptionsUnmarshaller Instance { get; }
    private static TransitGatewayOptionsUnmarshaller();
    public sealed virtual TransitGatewayOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayOptions Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPeeringAttachmentOptionsUnmarshaller : object {
    private static TransitGatewayPeeringAttachmentOptionsUnmarshaller _instance;
    public static TransitGatewayPeeringAttachmentOptionsUnmarshaller Instance { get; }
    private static TransitGatewayPeeringAttachmentOptionsUnmarshaller();
    public sealed virtual TransitGatewayPeeringAttachmentOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPeeringAttachmentOptions Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPeeringAttachmentOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPeeringAttachmentUnmarshaller : object {
    private static TransitGatewayPeeringAttachmentUnmarshaller _instance;
    public static TransitGatewayPeeringAttachmentUnmarshaller Instance { get; }
    private static TransitGatewayPeeringAttachmentUnmarshaller();
    public sealed virtual TransitGatewayPeeringAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPeeringAttachment Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPeeringAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPolicyRuleMetaDataUnmarshaller : object {
    private static TransitGatewayPolicyRuleMetaDataUnmarshaller _instance;
    public static TransitGatewayPolicyRuleMetaDataUnmarshaller Instance { get; }
    private static TransitGatewayPolicyRuleMetaDataUnmarshaller();
    public sealed virtual TransitGatewayPolicyRuleMetaData Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPolicyRuleMetaData Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPolicyRuleMetaDataUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPolicyRuleUnmarshaller : object {
    private static TransitGatewayPolicyRuleUnmarshaller _instance;
    public static TransitGatewayPolicyRuleUnmarshaller Instance { get; }
    private static TransitGatewayPolicyRuleUnmarshaller();
    public sealed virtual TransitGatewayPolicyRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPolicyRule Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPolicyRuleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPolicyTableAssociationUnmarshaller : object {
    private static TransitGatewayPolicyTableAssociationUnmarshaller _instance;
    public static TransitGatewayPolicyTableAssociationUnmarshaller Instance { get; }
    private static TransitGatewayPolicyTableAssociationUnmarshaller();
    public sealed virtual TransitGatewayPolicyTableAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPolicyTableAssociation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPolicyTableAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPolicyTableEntryUnmarshaller : object {
    private static TransitGatewayPolicyTableEntryUnmarshaller _instance;
    public static TransitGatewayPolicyTableEntryUnmarshaller Instance { get; }
    private static TransitGatewayPolicyTableEntryUnmarshaller();
    public sealed virtual TransitGatewayPolicyTableEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPolicyTableEntry Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPolicyTableEntryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPolicyTableUnmarshaller : object {
    private static TransitGatewayPolicyTableUnmarshaller _instance;
    public static TransitGatewayPolicyTableUnmarshaller Instance { get; }
    private static TransitGatewayPolicyTableUnmarshaller();
    public sealed virtual TransitGatewayPolicyTable Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPolicyTable Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPolicyTableUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPrefixListAttachmentUnmarshaller : object {
    private static TransitGatewayPrefixListAttachmentUnmarshaller _instance;
    public static TransitGatewayPrefixListAttachmentUnmarshaller Instance { get; }
    private static TransitGatewayPrefixListAttachmentUnmarshaller();
    public sealed virtual TransitGatewayPrefixListAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPrefixListAttachment Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPrefixListAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPrefixListReferenceUnmarshaller : object {
    private static TransitGatewayPrefixListReferenceUnmarshaller _instance;
    public static TransitGatewayPrefixListReferenceUnmarshaller Instance { get; }
    private static TransitGatewayPrefixListReferenceUnmarshaller();
    public sealed virtual TransitGatewayPrefixListReference Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPrefixListReference Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPrefixListReferenceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayPropagationUnmarshaller : object {
    private static TransitGatewayPropagationUnmarshaller _instance;
    public static TransitGatewayPropagationUnmarshaller Instance { get; }
    private static TransitGatewayPropagationUnmarshaller();
    public sealed virtual TransitGatewayPropagation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayPropagation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayPropagationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayRouteAttachmentUnmarshaller : object {
    private static TransitGatewayRouteAttachmentUnmarshaller _instance;
    public static TransitGatewayRouteAttachmentUnmarshaller Instance { get; }
    private static TransitGatewayRouteAttachmentUnmarshaller();
    public sealed virtual TransitGatewayRouteAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayRouteAttachment Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayRouteAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayRouteTableAnnouncementUnmarshaller : object {
    private static TransitGatewayRouteTableAnnouncementUnmarshaller _instance;
    public static TransitGatewayRouteTableAnnouncementUnmarshaller Instance { get; }
    private static TransitGatewayRouteTableAnnouncementUnmarshaller();
    public sealed virtual TransitGatewayRouteTableAnnouncement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayRouteTableAnnouncement Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayRouteTableAnnouncementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayRouteTableAssociationUnmarshaller : object {
    private static TransitGatewayRouteTableAssociationUnmarshaller _instance;
    public static TransitGatewayRouteTableAssociationUnmarshaller Instance { get; }
    private static TransitGatewayRouteTableAssociationUnmarshaller();
    public sealed virtual TransitGatewayRouteTableAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayRouteTableAssociation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayRouteTableAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayRouteTablePropagationUnmarshaller : object {
    private static TransitGatewayRouteTablePropagationUnmarshaller _instance;
    public static TransitGatewayRouteTablePropagationUnmarshaller Instance { get; }
    private static TransitGatewayRouteTablePropagationUnmarshaller();
    public sealed virtual TransitGatewayRouteTablePropagation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayRouteTablePropagation Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayRouteTablePropagationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayRouteTableRouteUnmarshaller : object {
    private static TransitGatewayRouteTableRouteUnmarshaller _instance;
    public static TransitGatewayRouteTableRouteUnmarshaller Instance { get; }
    private static TransitGatewayRouteTableRouteUnmarshaller();
    public sealed virtual TransitGatewayRouteTableRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayRouteTableRoute Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayRouteTableRouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayRouteTableUnmarshaller : object {
    private static TransitGatewayRouteTableUnmarshaller _instance;
    public static TransitGatewayRouteTableUnmarshaller Instance { get; }
    private static TransitGatewayRouteTableUnmarshaller();
    public sealed virtual TransitGatewayRouteTable Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayRouteTable Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayRouteTableUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayRouteUnmarshaller : object {
    private static TransitGatewayRouteUnmarshaller _instance;
    public static TransitGatewayRouteUnmarshaller Instance { get; }
    private static TransitGatewayRouteUnmarshaller();
    public sealed virtual TransitGatewayRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayRoute Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayRouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayUnmarshaller : object {
    private static TransitGatewayUnmarshaller _instance;
    public static TransitGatewayUnmarshaller Instance { get; }
    private static TransitGatewayUnmarshaller();
    public sealed virtual TransitGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGateway Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayVpcAttachmentOptionsUnmarshaller : object {
    private static TransitGatewayVpcAttachmentOptionsUnmarshaller _instance;
    public static TransitGatewayVpcAttachmentOptionsUnmarshaller Instance { get; }
    private static TransitGatewayVpcAttachmentOptionsUnmarshaller();
    public sealed virtual TransitGatewayVpcAttachmentOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayVpcAttachmentOptions Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayVpcAttachmentOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TransitGatewayVpcAttachmentUnmarshaller : object {
    private static TransitGatewayVpcAttachmentUnmarshaller _instance;
    public static TransitGatewayVpcAttachmentUnmarshaller Instance { get; }
    private static TransitGatewayVpcAttachmentUnmarshaller();
    public sealed virtual TransitGatewayVpcAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransitGatewayVpcAttachment Unmarshall(JsonUnmarshallerContext context);
    public static TransitGatewayVpcAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TrunkInterfaceAssociationUnmarshaller : object {
    private static TrunkInterfaceAssociationUnmarshaller _instance;
    public static TrunkInterfaceAssociationUnmarshaller Instance { get; }
    private static TrunkInterfaceAssociationUnmarshaller();
    public sealed virtual TrunkInterfaceAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrunkInterfaceAssociation Unmarshall(JsonUnmarshallerContext context);
    public static TrunkInterfaceAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TunnelOptionUnmarshaller : object {
    private static TunnelOptionUnmarshaller _instance;
    public static TunnelOptionUnmarshaller Instance { get; }
    private static TunnelOptionUnmarshaller();
    public sealed virtual TunnelOption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TunnelOption Unmarshall(JsonUnmarshallerContext context);
    public static TunnelOptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignIpv6AddressesRequestMarshaller : object {
    private static UnassignIpv6AddressesRequestMarshaller _instance;
    public static UnassignIpv6AddressesRequestMarshaller Instance { get; }
    private static UnassignIpv6AddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnassignIpv6AddressesRequest publicRequest);
    internal static UnassignIpv6AddressesRequestMarshaller GetInstance();
    public static UnassignIpv6AddressesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignIpv6AddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UnassignIpv6AddressesResponseUnmarshaller _instance;
    public static UnassignIpv6AddressesResponseUnmarshaller Instance { get; }
    private static UnassignIpv6AddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnassignIpv6AddressesResponseUnmarshaller GetInstance();
    public static UnassignIpv6AddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesRequestMarshaller : object {
    private static UnassignPrivateIpAddressesRequestMarshaller _instance;
    public static UnassignPrivateIpAddressesRequestMarshaller Instance { get; }
    private static UnassignPrivateIpAddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnassignPrivateIpAddressesRequest publicRequest);
    internal static UnassignPrivateIpAddressesRequestMarshaller GetInstance();
    public static UnassignPrivateIpAddressesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UnassignPrivateIpAddressesResponseUnmarshaller _instance;
    public static UnassignPrivateIpAddressesResponseUnmarshaller Instance { get; }
    private static UnassignPrivateIpAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnassignPrivateIpAddressesResponseUnmarshaller GetInstance();
    public static UnassignPrivateIpAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateNatGatewayAddressRequestMarshaller : object {
    private static UnassignPrivateNatGatewayAddressRequestMarshaller _instance;
    public static UnassignPrivateNatGatewayAddressRequestMarshaller Instance { get; }
    private static UnassignPrivateNatGatewayAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnassignPrivateNatGatewayAddressRequest publicRequest);
    internal static UnassignPrivateNatGatewayAddressRequestMarshaller GetInstance();
    public static UnassignPrivateNatGatewayAddressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateNatGatewayAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UnassignPrivateNatGatewayAddressResponseUnmarshaller _instance;
    public static UnassignPrivateNatGatewayAddressResponseUnmarshaller Instance { get; }
    private static UnassignPrivateNatGatewayAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnassignPrivateNatGatewayAddressResponseUnmarshaller GetInstance();
    public static UnassignPrivateNatGatewayAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnlockSnapshotRequestMarshaller : object {
    private static UnlockSnapshotRequestMarshaller _instance;
    public static UnlockSnapshotRequestMarshaller Instance { get; }
    private static UnlockSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnlockSnapshotRequest publicRequest);
    internal static UnlockSnapshotRequestMarshaller GetInstance();
    public static UnlockSnapshotRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnlockSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UnlockSnapshotResponseUnmarshaller _instance;
    public static UnlockSnapshotResponseUnmarshaller Instance { get; }
    private static UnlockSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnlockSnapshotResponseUnmarshaller GetInstance();
    public static UnlockSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesRequestMarshaller : object {
    private static UnmonitorInstancesRequestMarshaller _instance;
    public static UnmonitorInstancesRequestMarshaller Instance { get; }
    private static UnmonitorInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnmonitorInstancesRequest publicRequest);
    internal static UnmonitorInstancesRequestMarshaller GetInstance();
    public static UnmonitorInstancesRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UnmonitorInstancesResponseUnmarshaller _instance;
    public static UnmonitorInstancesResponseUnmarshaller Instance { get; }
    private static UnmonitorInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnmonitorInstancesResponseUnmarshaller GetInstance();
    public static UnmonitorInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulInstanceCreditSpecificationItemErrorUnmarshaller : object {
    private static UnsuccessfulInstanceCreditSpecificationItemErrorUnmarshaller _instance;
    public static UnsuccessfulInstanceCreditSpecificationItemErrorUnmarshaller Instance { get; }
    private static UnsuccessfulInstanceCreditSpecificationItemErrorUnmarshaller();
    public sealed virtual UnsuccessfulInstanceCreditSpecificationItemError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsuccessfulInstanceCreditSpecificationItemError Unmarshall(JsonUnmarshallerContext context);
    public static UnsuccessfulInstanceCreditSpecificationItemErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulInstanceCreditSpecificationItemUnmarshaller : object {
    private static UnsuccessfulInstanceCreditSpecificationItemUnmarshaller _instance;
    public static UnsuccessfulInstanceCreditSpecificationItemUnmarshaller Instance { get; }
    private static UnsuccessfulInstanceCreditSpecificationItemUnmarshaller();
    public sealed virtual UnsuccessfulInstanceCreditSpecificationItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsuccessfulInstanceCreditSpecificationItem Unmarshall(JsonUnmarshallerContext context);
    public static UnsuccessfulInstanceCreditSpecificationItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemErrorUnmarshaller : object {
    private static UnsuccessfulItemErrorUnmarshaller _instance;
    public static UnsuccessfulItemErrorUnmarshaller Instance { get; }
    private static UnsuccessfulItemErrorUnmarshaller();
    public sealed virtual UnsuccessfulItemError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsuccessfulItemError Unmarshall(JsonUnmarshallerContext context);
    public static UnsuccessfulItemErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemUnmarshaller : object {
    private static UnsuccessfulItemUnmarshaller _instance;
    public static UnsuccessfulItemUnmarshaller Instance { get; }
    private static UnsuccessfulItemUnmarshaller();
    public sealed virtual UnsuccessfulItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsuccessfulItem Unmarshall(JsonUnmarshallerContext context);
    public static UnsuccessfulItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UpdateSecurityGroupRuleDescriptionsEgressRequestMarshaller : object {
    private static UpdateSecurityGroupRuleDescriptionsEgressRequestMarshaller _instance;
    public static UpdateSecurityGroupRuleDescriptionsEgressRequestMarshaller Instance { get; }
    private static UpdateSecurityGroupRuleDescriptionsEgressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSecurityGroupRuleDescriptionsEgressRequest publicRequest);
    internal static UpdateSecurityGroupRuleDescriptionsEgressRequestMarshaller GetInstance();
    public static UpdateSecurityGroupRuleDescriptionsEgressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UpdateSecurityGroupRuleDescriptionsEgressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UpdateSecurityGroupRuleDescriptionsEgressResponseUnmarshaller _instance;
    public static UpdateSecurityGroupRuleDescriptionsEgressResponseUnmarshaller Instance { get; }
    private static UpdateSecurityGroupRuleDescriptionsEgressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSecurityGroupRuleDescriptionsEgressResponseUnmarshaller GetInstance();
    public static UpdateSecurityGroupRuleDescriptionsEgressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UpdateSecurityGroupRuleDescriptionsIngressRequestMarshaller : object {
    private static UpdateSecurityGroupRuleDescriptionsIngressRequestMarshaller _instance;
    public static UpdateSecurityGroupRuleDescriptionsIngressRequestMarshaller Instance { get; }
    private static UpdateSecurityGroupRuleDescriptionsIngressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSecurityGroupRuleDescriptionsIngressRequest publicRequest);
    internal static UpdateSecurityGroupRuleDescriptionsIngressRequestMarshaller GetInstance();
    public static UpdateSecurityGroupRuleDescriptionsIngressRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UpdateSecurityGroupRuleDescriptionsIngressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UpdateSecurityGroupRuleDescriptionsIngressResponseUnmarshaller _instance;
    public static UpdateSecurityGroupRuleDescriptionsIngressResponseUnmarshaller Instance { get; }
    private static UpdateSecurityGroupRuleDescriptionsIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSecurityGroupRuleDescriptionsIngressResponseUnmarshaller GetInstance();
    public static UpdateSecurityGroupRuleDescriptionsIngressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UserBucketDetailsUnmarshaller : object {
    private static UserBucketDetailsUnmarshaller _instance;
    public static UserBucketDetailsUnmarshaller Instance { get; }
    private static UserBucketDetailsUnmarshaller();
    public sealed virtual UserBucketDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserBucketDetails Unmarshall(JsonUnmarshallerContext context);
    public static UserBucketDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UserIdGroupPairUnmarshaller : object {
    private static UserIdGroupPairUnmarshaller _instance;
    public static UserIdGroupPairUnmarshaller Instance { get; }
    private static UserIdGroupPairUnmarshaller();
    public sealed virtual UserIdGroupPair Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserIdGroupPair Unmarshall(JsonUnmarshallerContext context);
    public static UserIdGroupPairUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ValidationErrorUnmarshaller : object {
    private static ValidationErrorUnmarshaller _instance;
    public static ValidationErrorUnmarshaller Instance { get; }
    private static ValidationErrorUnmarshaller();
    public sealed virtual ValidationError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidationError Unmarshall(JsonUnmarshallerContext context);
    public static ValidationErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ValidationWarningUnmarshaller : object {
    private static ValidationWarningUnmarshaller _instance;
    public static ValidationWarningUnmarshaller Instance { get; }
    private static ValidationWarningUnmarshaller();
    public sealed virtual ValidationWarning Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidationWarning Unmarshall(JsonUnmarshallerContext context);
    public static ValidationWarningUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VCpuCountRangeUnmarshaller : object {
    private static VCpuCountRangeUnmarshaller _instance;
    public static VCpuCountRangeUnmarshaller Instance { get; }
    private static VCpuCountRangeUnmarshaller();
    public sealed virtual VCpuCountRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VCpuCountRange Unmarshall(JsonUnmarshallerContext context);
    public static VCpuCountRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VCpuInfoUnmarshaller : object {
    private static VCpuInfoUnmarshaller _instance;
    public static VCpuInfoUnmarshaller Instance { get; }
    private static VCpuInfoUnmarshaller();
    public sealed virtual VCpuInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VCpuInfo Unmarshall(JsonUnmarshallerContext context);
    public static VCpuInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessEndpointEniOptionsUnmarshaller : object {
    private static VerifiedAccessEndpointEniOptionsUnmarshaller _instance;
    public static VerifiedAccessEndpointEniOptionsUnmarshaller Instance { get; }
    private static VerifiedAccessEndpointEniOptionsUnmarshaller();
    public sealed virtual VerifiedAccessEndpointEniOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessEndpointEniOptions Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessEndpointEniOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessEndpointLoadBalancerOptionsUnmarshaller : object {
    private static VerifiedAccessEndpointLoadBalancerOptionsUnmarshaller _instance;
    public static VerifiedAccessEndpointLoadBalancerOptionsUnmarshaller Instance { get; }
    private static VerifiedAccessEndpointLoadBalancerOptionsUnmarshaller();
    public sealed virtual VerifiedAccessEndpointLoadBalancerOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessEndpointLoadBalancerOptions Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessEndpointLoadBalancerOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessEndpointStatusUnmarshaller : object {
    private static VerifiedAccessEndpointStatusUnmarshaller _instance;
    public static VerifiedAccessEndpointStatusUnmarshaller Instance { get; }
    private static VerifiedAccessEndpointStatusUnmarshaller();
    public sealed virtual VerifiedAccessEndpointStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessEndpointStatus Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessEndpointStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessEndpointUnmarshaller : object {
    private static VerifiedAccessEndpointUnmarshaller _instance;
    public static VerifiedAccessEndpointUnmarshaller Instance { get; }
    private static VerifiedAccessEndpointUnmarshaller();
    public sealed virtual VerifiedAccessEndpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessEndpointUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessGroupUnmarshaller : object {
    private static VerifiedAccessGroupUnmarshaller _instance;
    public static VerifiedAccessGroupUnmarshaller Instance { get; }
    private static VerifiedAccessGroupUnmarshaller();
    public sealed virtual VerifiedAccessGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessGroup Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessInstanceLoggingConfigurationUnmarshaller : object {
    private static VerifiedAccessInstanceLoggingConfigurationUnmarshaller _instance;
    public static VerifiedAccessInstanceLoggingConfigurationUnmarshaller Instance { get; }
    private static VerifiedAccessInstanceLoggingConfigurationUnmarshaller();
    public sealed virtual VerifiedAccessInstanceLoggingConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessInstanceLoggingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessInstanceLoggingConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessInstanceUnmarshaller : object {
    private static VerifiedAccessInstanceUnmarshaller _instance;
    public static VerifiedAccessInstanceUnmarshaller Instance { get; }
    private static VerifiedAccessInstanceUnmarshaller();
    public sealed virtual VerifiedAccessInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessInstance Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessLogCloudWatchLogsDestinationUnmarshaller : object {
    private static VerifiedAccessLogCloudWatchLogsDestinationUnmarshaller _instance;
    public static VerifiedAccessLogCloudWatchLogsDestinationUnmarshaller Instance { get; }
    private static VerifiedAccessLogCloudWatchLogsDestinationUnmarshaller();
    public sealed virtual VerifiedAccessLogCloudWatchLogsDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessLogCloudWatchLogsDestination Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessLogCloudWatchLogsDestinationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessLogDeliveryStatusUnmarshaller : object {
    private static VerifiedAccessLogDeliveryStatusUnmarshaller _instance;
    public static VerifiedAccessLogDeliveryStatusUnmarshaller Instance { get; }
    private static VerifiedAccessLogDeliveryStatusUnmarshaller();
    public sealed virtual VerifiedAccessLogDeliveryStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessLogDeliveryStatus Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessLogDeliveryStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessLogKinesisDataFirehoseDestinationUnmarshaller : object {
    private static VerifiedAccessLogKinesisDataFirehoseDestinationUnmarshaller _instance;
    public static VerifiedAccessLogKinesisDataFirehoseDestinationUnmarshaller Instance { get; }
    private static VerifiedAccessLogKinesisDataFirehoseDestinationUnmarshaller();
    public sealed virtual VerifiedAccessLogKinesisDataFirehoseDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessLogKinesisDataFirehoseDestination Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessLogKinesisDataFirehoseDestinationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessLogS3DestinationUnmarshaller : object {
    private static VerifiedAccessLogS3DestinationUnmarshaller _instance;
    public static VerifiedAccessLogS3DestinationUnmarshaller Instance { get; }
    private static VerifiedAccessLogS3DestinationUnmarshaller();
    public sealed virtual VerifiedAccessLogS3Destination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessLogS3Destination Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessLogS3DestinationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessLogsUnmarshaller : object {
    private static VerifiedAccessLogsUnmarshaller _instance;
    public static VerifiedAccessLogsUnmarshaller Instance { get; }
    private static VerifiedAccessLogsUnmarshaller();
    public sealed virtual VerifiedAccessLogs Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessLogs Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessLogsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessSseSpecificationResponseUnmarshaller : object {
    private static VerifiedAccessSseSpecificationResponseUnmarshaller _instance;
    public static VerifiedAccessSseSpecificationResponseUnmarshaller Instance { get; }
    private static VerifiedAccessSseSpecificationResponseUnmarshaller();
    public sealed virtual VerifiedAccessSseSpecificationResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessSseSpecificationResponse Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessSseSpecificationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessTrustProviderCondensedUnmarshaller : object {
    private static VerifiedAccessTrustProviderCondensedUnmarshaller _instance;
    public static VerifiedAccessTrustProviderCondensedUnmarshaller Instance { get; }
    private static VerifiedAccessTrustProviderCondensedUnmarshaller();
    public sealed virtual VerifiedAccessTrustProviderCondensed Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessTrustProviderCondensed Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessTrustProviderCondensedUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VerifiedAccessTrustProviderUnmarshaller : object {
    private static VerifiedAccessTrustProviderUnmarshaller _instance;
    public static VerifiedAccessTrustProviderUnmarshaller Instance { get; }
    private static VerifiedAccessTrustProviderUnmarshaller();
    public sealed virtual VerifiedAccessTrustProvider Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerifiedAccessTrustProvider Unmarshall(JsonUnmarshallerContext context);
    public static VerifiedAccessTrustProviderUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VgwTelemetryUnmarshaller : object {
    private static VgwTelemetryUnmarshaller _instance;
    public static VgwTelemetryUnmarshaller Instance { get; }
    private static VgwTelemetryUnmarshaller();
    public sealed virtual VgwTelemetry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VgwTelemetry Unmarshall(JsonUnmarshallerContext context);
    public static VgwTelemetryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeAttachmentUnmarshaller : object {
    private static VolumeAttachmentUnmarshaller _instance;
    public static VolumeAttachmentUnmarshaller Instance { get; }
    private static VolumeAttachmentUnmarshaller();
    public sealed virtual VolumeAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeAttachment Unmarshall(JsonUnmarshallerContext context);
    public static VolumeAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeModificationUnmarshaller : object {
    private static VolumeModificationUnmarshaller _instance;
    public static VolumeModificationUnmarshaller Instance { get; }
    private static VolumeModificationUnmarshaller();
    public sealed virtual VolumeModification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeModification Unmarshall(JsonUnmarshallerContext context);
    public static VolumeModificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusActionUnmarshaller : object {
    private static VolumeStatusActionUnmarshaller _instance;
    public static VolumeStatusActionUnmarshaller Instance { get; }
    private static VolumeStatusActionUnmarshaller();
    public sealed virtual VolumeStatusAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusAction Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusActionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusAttachmentStatusUnmarshaller : object {
    private static VolumeStatusAttachmentStatusUnmarshaller _instance;
    public static VolumeStatusAttachmentStatusUnmarshaller Instance { get; }
    private static VolumeStatusAttachmentStatusUnmarshaller();
    public sealed virtual VolumeStatusAttachmentStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusAttachmentStatus Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusAttachmentStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusDetailsUnmarshaller : object {
    private static VolumeStatusDetailsUnmarshaller _instance;
    public static VolumeStatusDetailsUnmarshaller Instance { get; }
    private static VolumeStatusDetailsUnmarshaller();
    public sealed virtual VolumeStatusDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusDetails Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusEventUnmarshaller : object {
    private static VolumeStatusEventUnmarshaller _instance;
    public static VolumeStatusEventUnmarshaller Instance { get; }
    private static VolumeStatusEventUnmarshaller();
    public sealed virtual VolumeStatusEvent Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusEvent Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusEventUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusInfoUnmarshaller : object {
    private static VolumeStatusInfoUnmarshaller _instance;
    public static VolumeStatusInfoUnmarshaller Instance { get; }
    private static VolumeStatusInfoUnmarshaller();
    public sealed virtual VolumeStatusInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusInfo Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusItemUnmarshaller : object {
    private static VolumeStatusItemUnmarshaller _instance;
    public static VolumeStatusItemUnmarshaller Instance { get; }
    private static VolumeStatusItemUnmarshaller();
    public sealed virtual VolumeStatusItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusItem Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeUnmarshaller : object {
    private static VolumeUnmarshaller _instance;
    public static VolumeUnmarshaller Instance { get; }
    private static VolumeUnmarshaller();
    public sealed virtual Volume Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Volume Unmarshall(JsonUnmarshallerContext context);
    public static VolumeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcAttachmentUnmarshaller : object {
    private static VpcAttachmentUnmarshaller _instance;
    public static VpcAttachmentUnmarshaller Instance { get; }
    private static VpcAttachmentUnmarshaller();
    public sealed virtual VpcAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcAttachment Unmarshall(JsonUnmarshallerContext context);
    public static VpcAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcCidrBlockAssociationUnmarshaller : object {
    private static VpcCidrBlockAssociationUnmarshaller _instance;
    public static VpcCidrBlockAssociationUnmarshaller Instance { get; }
    private static VpcCidrBlockAssociationUnmarshaller();
    public sealed virtual VpcCidrBlockAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcCidrBlockAssociation Unmarshall(JsonUnmarshallerContext context);
    public static VpcCidrBlockAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcCidrBlockStateUnmarshaller : object {
    private static VpcCidrBlockStateUnmarshaller _instance;
    public static VpcCidrBlockStateUnmarshaller Instance { get; }
    private static VpcCidrBlockStateUnmarshaller();
    public sealed virtual VpcCidrBlockState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcCidrBlockState Unmarshall(JsonUnmarshallerContext context);
    public static VpcCidrBlockStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcClassicLinkUnmarshaller : object {
    private static VpcClassicLinkUnmarshaller _instance;
    public static VpcClassicLinkUnmarshaller Instance { get; }
    private static VpcClassicLinkUnmarshaller();
    public sealed virtual VpcClassicLink Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcClassicLink Unmarshall(JsonUnmarshallerContext context);
    public static VpcClassicLinkUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcEndpointConnectionUnmarshaller : object {
    private static VpcEndpointConnectionUnmarshaller _instance;
    public static VpcEndpointConnectionUnmarshaller Instance { get; }
    private static VpcEndpointConnectionUnmarshaller();
    public sealed virtual VpcEndpointConnection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcEndpointConnection Unmarshall(JsonUnmarshallerContext context);
    public static VpcEndpointConnectionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcEndpointUnmarshaller : object {
    private static VpcEndpointUnmarshaller _instance;
    public static VpcEndpointUnmarshaller Instance { get; }
    private static VpcEndpointUnmarshaller();
    public sealed virtual VpcEndpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static VpcEndpointUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcIpv6CidrBlockAssociationUnmarshaller : object {
    private static VpcIpv6CidrBlockAssociationUnmarshaller _instance;
    public static VpcIpv6CidrBlockAssociationUnmarshaller Instance { get; }
    private static VpcIpv6CidrBlockAssociationUnmarshaller();
    public sealed virtual VpcIpv6CidrBlockAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcIpv6CidrBlockAssociation Unmarshall(JsonUnmarshallerContext context);
    public static VpcIpv6CidrBlockAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionOptionsDescriptionUnmarshaller : object {
    private static VpcPeeringConnectionOptionsDescriptionUnmarshaller _instance;
    public static VpcPeeringConnectionOptionsDescriptionUnmarshaller Instance { get; }
    private static VpcPeeringConnectionOptionsDescriptionUnmarshaller();
    public sealed virtual VpcPeeringConnectionOptionsDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcPeeringConnectionOptionsDescription Unmarshall(JsonUnmarshallerContext context);
    public static VpcPeeringConnectionOptionsDescriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionStateReasonUnmarshaller : object {
    private static VpcPeeringConnectionStateReasonUnmarshaller _instance;
    public static VpcPeeringConnectionStateReasonUnmarshaller Instance { get; }
    private static VpcPeeringConnectionStateReasonUnmarshaller();
    public sealed virtual VpcPeeringConnectionStateReason Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcPeeringConnectionStateReason Unmarshall(JsonUnmarshallerContext context);
    public static VpcPeeringConnectionStateReasonUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionUnmarshaller : object {
    private static VpcPeeringConnectionUnmarshaller _instance;
    public static VpcPeeringConnectionUnmarshaller Instance { get; }
    private static VpcPeeringConnectionUnmarshaller();
    public sealed virtual VpcPeeringConnection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcPeeringConnection Unmarshall(JsonUnmarshallerContext context);
    public static VpcPeeringConnectionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionVpcInfoUnmarshaller : object {
    private static VpcPeeringConnectionVpcInfoUnmarshaller _instance;
    public static VpcPeeringConnectionVpcInfoUnmarshaller Instance { get; }
    private static VpcPeeringConnectionVpcInfoUnmarshaller();
    public sealed virtual VpcPeeringConnectionVpcInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcPeeringConnectionVpcInfo Unmarshall(JsonUnmarshallerContext context);
    public static VpcPeeringConnectionVpcInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcUnmarshaller : object {
    private static VpcUnmarshaller _instance;
    public static VpcUnmarshaller Instance { get; }
    private static VpcUnmarshaller();
    public sealed virtual Vpc Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Vpc Unmarshall(JsonUnmarshallerContext context);
    public static VpcUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionDeviceTypeUnmarshaller : object {
    private static VpnConnectionDeviceTypeUnmarshaller _instance;
    public static VpnConnectionDeviceTypeUnmarshaller Instance { get; }
    private static VpnConnectionDeviceTypeUnmarshaller();
    public sealed virtual VpnConnectionDeviceType Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnConnectionDeviceType Unmarshall(JsonUnmarshallerContext context);
    public static VpnConnectionDeviceTypeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionOptionsUnmarshaller : object {
    private static VpnConnectionOptionsUnmarshaller _instance;
    public static VpnConnectionOptionsUnmarshaller Instance { get; }
    private static VpnConnectionOptionsUnmarshaller();
    public sealed virtual VpnConnectionOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnConnectionOptions Unmarshall(JsonUnmarshallerContext context);
    public static VpnConnectionOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionUnmarshaller : object {
    private static VpnConnectionUnmarshaller _instance;
    public static VpnConnectionUnmarshaller Instance { get; }
    private static VpnConnectionUnmarshaller();
    public sealed virtual VpnConnection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnConnection Unmarshall(JsonUnmarshallerContext context);
    public static VpnConnectionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnGatewayUnmarshaller : object {
    private static VpnGatewayUnmarshaller _instance;
    public static VpnGatewayUnmarshaller Instance { get; }
    private static VpnGatewayUnmarshaller();
    public sealed virtual VpnGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnGateway Unmarshall(JsonUnmarshallerContext context);
    public static VpnGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnStaticRouteUnmarshaller : object {
    private static VpnStaticRouteUnmarshaller _instance;
    public static VpnStaticRouteUnmarshaller Instance { get; }
    private static VpnStaticRouteUnmarshaller();
    public sealed virtual VpnStaticRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnStaticRoute Unmarshall(JsonUnmarshallerContext context);
    public static VpnStaticRouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnTunnelLogOptionsUnmarshaller : object {
    private static VpnTunnelLogOptionsUnmarshaller _instance;
    public static VpnTunnelLogOptionsUnmarshaller Instance { get; }
    private static VpnTunnelLogOptionsUnmarshaller();
    public sealed virtual VpnTunnelLogOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnTunnelLogOptions Unmarshall(JsonUnmarshallerContext context);
    public static VpnTunnelLogOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.WithdrawByoipCidrRequestMarshaller : object {
    private static WithdrawByoipCidrRequestMarshaller _instance;
    public static WithdrawByoipCidrRequestMarshaller Instance { get; }
    private static WithdrawByoipCidrRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(WithdrawByoipCidrRequest publicRequest);
    internal static WithdrawByoipCidrRequestMarshaller GetInstance();
    public static WithdrawByoipCidrRequestMarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.WithdrawByoipCidrResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static WithdrawByoipCidrResponseUnmarshaller _instance;
    public static WithdrawByoipCidrResponseUnmarshaller Instance { get; }
    private static WithdrawByoipCidrResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static WithdrawByoipCidrResponseUnmarshaller GetInstance();
    public static WithdrawByoipCidrResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.InternetGateway : object {
    private List`1<InternetGatewayAttachment> _attachments;
    private string _internetGatewayId;
    private string _ownerId;
    private List`1<Tag> _tags;
    public List`1<InternetGatewayAttachment> Attachments { get; public set; }
    public string InternetGatewayId { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<InternetGatewayAttachment> get_Attachments();
    public void set_Attachments(List`1<InternetGatewayAttachment> value);
    internal bool IsSetAttachments();
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.InternetGatewayAttachment : object {
    private AttachmentStatus _state;
    private string _vpcId;
    public AttachmentStatus State { get; public set; }
    public string VpcId { get; public set; }
    public AttachmentStatus get_State();
    public void set_State(AttachmentStatus value);
    internal bool IsSetState();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.Ipam : object {
    private string _defaultResourceDiscoveryAssociationId;
    private string _defaultResourceDiscoveryId;
    private string _description;
    private string _ipamArn;
    private string _ipamId;
    private string _ipamRegion;
    private List`1<IpamOperatingRegion> _operatingRegions;
    private string _ownerId;
    private string _privateDefaultScopeId;
    private string _publicDefaultScopeId;
    private Nullable`1<int> _resourceDiscoveryAssociationCount;
    private Nullable`1<int> _scopeCount;
    private IpamState _state;
    private string _stateMessage;
    private List`1<Tag> _tags;
    private IpamTier _tier;
    public string DefaultResourceDiscoveryAssociationId { get; public set; }
    public string DefaultResourceDiscoveryId { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamArn { get; public set; }
    public string IpamId { get; public set; }
    public string IpamRegion { get; public set; }
    public List`1<IpamOperatingRegion> OperatingRegions { get; public set; }
    public string OwnerId { get; public set; }
    public string PrivateDefaultScopeId { get; public set; }
    public string PublicDefaultScopeId { get; public set; }
    public Nullable`1<int> ResourceDiscoveryAssociationCount { get; public set; }
    public Nullable`1<int> ScopeCount { get; public set; }
    public IpamState State { get; public set; }
    public string StateMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public IpamTier Tier { get; public set; }
    public string get_DefaultResourceDiscoveryAssociationId();
    public void set_DefaultResourceDiscoveryAssociationId(string value);
    internal bool IsSetDefaultResourceDiscoveryAssociationId();
    public string get_DefaultResourceDiscoveryId();
    public void set_DefaultResourceDiscoveryId(string value);
    internal bool IsSetDefaultResourceDiscoveryId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamArn();
    public void set_IpamArn(string value);
    internal bool IsSetIpamArn();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public string get_IpamRegion();
    public void set_IpamRegion(string value);
    internal bool IsSetIpamRegion();
    public List`1<IpamOperatingRegion> get_OperatingRegions();
    public void set_OperatingRegions(List`1<IpamOperatingRegion> value);
    internal bool IsSetOperatingRegions();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PrivateDefaultScopeId();
    public void set_PrivateDefaultScopeId(string value);
    internal bool IsSetPrivateDefaultScopeId();
    public string get_PublicDefaultScopeId();
    public void set_PublicDefaultScopeId(string value);
    internal bool IsSetPublicDefaultScopeId();
    public Nullable`1<int> get_ResourceDiscoveryAssociationCount();
    public void set_ResourceDiscoveryAssociationCount(Nullable`1<int> value);
    internal bool IsSetResourceDiscoveryAssociationCount();
    public Nullable`1<int> get_ScopeCount();
    public void set_ScopeCount(Nullable`1<int> value);
    internal bool IsSetScopeCount();
    public IpamState get_State();
    public void set_State(IpamState value);
    internal bool IsSetState();
    public string get_StateMessage();
    public void set_StateMessage(string value);
    internal bool IsSetStateMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public IpamTier get_Tier();
    public void set_Tier(IpamTier value);
    internal bool IsSetTier();
}
public class Amazon.EC2.Model.IpamAddressHistoryRecord : object {
    private string _resourceCidr;
    private IpamComplianceStatus _resourceComplianceStatus;
    private string _resourceId;
    private string _resourceName;
    private IpamOverlapStatus _resourceOverlapStatus;
    private string _resourceOwnerId;
    private string _resourceRegion;
    private IpamAddressHistoryResourceType _resourceType;
    private Nullable`1<DateTime> _sampledEndTime;
    private Nullable`1<DateTime> _sampledStartTime;
    private string _vpcId;
    public string ResourceCidr { get; public set; }
    public IpamComplianceStatus ResourceComplianceStatus { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceName { get; public set; }
    public IpamOverlapStatus ResourceOverlapStatus { get; public set; }
    public string ResourceOwnerId { get; public set; }
    public string ResourceRegion { get; public set; }
    public IpamAddressHistoryResourceType ResourceType { get; public set; }
    public Nullable`1<DateTime> SampledEndTime { get; public set; }
    public Nullable`1<DateTime> SampledStartTime { get; public set; }
    public string VpcId { get; public set; }
    public string get_ResourceCidr();
    public void set_ResourceCidr(string value);
    internal bool IsSetResourceCidr();
    public IpamComplianceStatus get_ResourceComplianceStatus();
    public void set_ResourceComplianceStatus(IpamComplianceStatus value);
    internal bool IsSetResourceComplianceStatus();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
    public IpamOverlapStatus get_ResourceOverlapStatus();
    public void set_ResourceOverlapStatus(IpamOverlapStatus value);
    internal bool IsSetResourceOverlapStatus();
    public string get_ResourceOwnerId();
    public void set_ResourceOwnerId(string value);
    internal bool IsSetResourceOwnerId();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
    public IpamAddressHistoryResourceType get_ResourceType();
    public void set_ResourceType(IpamAddressHistoryResourceType value);
    internal bool IsSetResourceType();
    public Nullable`1<DateTime> get_SampledEndTime();
    public void set_SampledEndTime(Nullable`1<DateTime> value);
    internal bool IsSetSampledEndTime();
    public Nullable`1<DateTime> get_SampledStartTime();
    public void set_SampledStartTime(Nullable`1<DateTime> value);
    internal bool IsSetSampledStartTime();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.IpamCidrAuthorizationContext : object {
    private string _message;
    private string _signature;
    public string Message { get; public set; }
    public string Signature { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Signature();
    public void set_Signature(string value);
    internal bool IsSetSignature();
}
public class Amazon.EC2.Model.IpamDiscoveredAccount : object {
    private string _accountId;
    private string _discoveryRegion;
    private IpamDiscoveryFailureReason _failureReason;
    private Nullable`1<DateTime> _lastAttemptedDiscoveryTime;
    private Nullable`1<DateTime> _lastSuccessfulDiscoveryTime;
    public string AccountId { get; public set; }
    public string DiscoveryRegion { get; public set; }
    public IpamDiscoveryFailureReason FailureReason { get; public set; }
    public Nullable`1<DateTime> LastAttemptedDiscoveryTime { get; public set; }
    public Nullable`1<DateTime> LastSuccessfulDiscoveryTime { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_DiscoveryRegion();
    public void set_DiscoveryRegion(string value);
    internal bool IsSetDiscoveryRegion();
    public IpamDiscoveryFailureReason get_FailureReason();
    public void set_FailureReason(IpamDiscoveryFailureReason value);
    internal bool IsSetFailureReason();
    public Nullable`1<DateTime> get_LastAttemptedDiscoveryTime();
    public void set_LastAttemptedDiscoveryTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAttemptedDiscoveryTime();
    public Nullable`1<DateTime> get_LastSuccessfulDiscoveryTime();
    public void set_LastSuccessfulDiscoveryTime(Nullable`1<DateTime> value);
    internal bool IsSetLastSuccessfulDiscoveryTime();
}
public class Amazon.EC2.Model.IpamDiscoveredPublicAddress : object {
    private string _address;
    private string _addressAllocationId;
    private string _addressOwnerId;
    private string _addressRegion;
    private IpamPublicAddressType _addressType;
    private IpamPublicAddressAssociationStatus _associationStatus;
    private string _instanceId;
    private string _ipamResourceDiscoveryId;
    private string _networkBorderGroup;
    private string _networkInterfaceDescription;
    private string _networkInterfaceId;
    private string _publicIpv4PoolId;
    private Nullable`1<DateTime> _sampleTime;
    private List`1<IpamPublicAddressSecurityGroup> _securityGroups;
    private IpamPublicAddressAwsService _service;
    private string _serviceResource;
    private string _subnetId;
    private IpamPublicAddressTags _tags;
    private string _vpcId;
    public string Address { get; public set; }
    public string AddressAllocationId { get; public set; }
    public string AddressOwnerId { get; public set; }
    public string AddressRegion { get; public set; }
    public IpamPublicAddressType AddressType { get; public set; }
    public IpamPublicAddressAssociationStatus AssociationStatus { get; public set; }
    public string InstanceId { get; public set; }
    public string IpamResourceDiscoveryId { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public string NetworkInterfaceDescription { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string PublicIpv4PoolId { get; public set; }
    public Nullable`1<DateTime> SampleTime { get; public set; }
    public List`1<IpamPublicAddressSecurityGroup> SecurityGroups { get; public set; }
    public IpamPublicAddressAwsService Service { get; public set; }
    public string ServiceResource { get; public set; }
    public string SubnetId { get; public set; }
    public IpamPublicAddressTags Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    internal bool IsSetAddress();
    public string get_AddressAllocationId();
    public void set_AddressAllocationId(string value);
    internal bool IsSetAddressAllocationId();
    public string get_AddressOwnerId();
    public void set_AddressOwnerId(string value);
    internal bool IsSetAddressOwnerId();
    public string get_AddressRegion();
    public void set_AddressRegion(string value);
    internal bool IsSetAddressRegion();
    public IpamPublicAddressType get_AddressType();
    public void set_AddressType(IpamPublicAddressType value);
    internal bool IsSetAddressType();
    public IpamPublicAddressAssociationStatus get_AssociationStatus();
    public void set_AssociationStatus(IpamPublicAddressAssociationStatus value);
    internal bool IsSetAssociationStatus();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public string get_NetworkInterfaceDescription();
    public void set_NetworkInterfaceDescription(string value);
    internal bool IsSetNetworkInterfaceDescription();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_PublicIpv4PoolId();
    public void set_PublicIpv4PoolId(string value);
    internal bool IsSetPublicIpv4PoolId();
    public Nullable`1<DateTime> get_SampleTime();
    public void set_SampleTime(Nullable`1<DateTime> value);
    internal bool IsSetSampleTime();
    public List`1<IpamPublicAddressSecurityGroup> get_SecurityGroups();
    public void set_SecurityGroups(List`1<IpamPublicAddressSecurityGroup> value);
    internal bool IsSetSecurityGroups();
    public IpamPublicAddressAwsService get_Service();
    public void set_Service(IpamPublicAddressAwsService value);
    internal bool IsSetService();
    public string get_ServiceResource();
    public void set_ServiceResource(string value);
    internal bool IsSetServiceResource();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public IpamPublicAddressTags get_Tags();
    public void set_Tags(IpamPublicAddressTags value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.IpamDiscoveredResourceCidr : object {
    private string _availabilityZoneId;
    private string _ipamResourceDiscoveryId;
    private Nullable`1<double> _ipUsage;
    private IpamNetworkInterfaceAttachmentStatus _networkInterfaceAttachmentStatus;
    private string _resourceCidr;
    private string _resourceId;
    private string _resourceOwnerId;
    private string _resourceRegion;
    private List`1<IpamResourceTag> _resourceTags;
    private IpamResourceType _resourceType;
    private Nullable`1<DateTime> _sampleTime;
    private string _vpcId;
    public string AvailabilityZoneId { get; public set; }
    public string IpamResourceDiscoveryId { get; public set; }
    public Nullable`1<double> IpUsage { get; public set; }
    public IpamNetworkInterfaceAttachmentStatus NetworkInterfaceAttachmentStatus { get; public set; }
    public string ResourceCidr { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceOwnerId { get; public set; }
    public string ResourceRegion { get; public set; }
    public List`1<IpamResourceTag> ResourceTags { get; public set; }
    public IpamResourceType ResourceType { get; public set; }
    public Nullable`1<DateTime> SampleTime { get; public set; }
    public string VpcId { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public Nullable`1<double> get_IpUsage();
    public void set_IpUsage(Nullable`1<double> value);
    internal bool IsSetIpUsage();
    public IpamNetworkInterfaceAttachmentStatus get_NetworkInterfaceAttachmentStatus();
    public void set_NetworkInterfaceAttachmentStatus(IpamNetworkInterfaceAttachmentStatus value);
    internal bool IsSetNetworkInterfaceAttachmentStatus();
    public string get_ResourceCidr();
    public void set_ResourceCidr(string value);
    internal bool IsSetResourceCidr();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwnerId();
    public void set_ResourceOwnerId(string value);
    internal bool IsSetResourceOwnerId();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
    public List`1<IpamResourceTag> get_ResourceTags();
    public void set_ResourceTags(List`1<IpamResourceTag> value);
    internal bool IsSetResourceTags();
    public IpamResourceType get_ResourceType();
    public void set_ResourceType(IpamResourceType value);
    internal bool IsSetResourceType();
    public Nullable`1<DateTime> get_SampleTime();
    public void set_SampleTime(Nullable`1<DateTime> value);
    internal bool IsSetSampleTime();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.IpamDiscoveryFailureReason : object {
    private IpamDiscoveryFailureCode _code;
    private string _message;
    public IpamDiscoveryFailureCode Code { get; public set; }
    public string Message { get; public set; }
    public IpamDiscoveryFailureCode get_Code();
    public void set_Code(IpamDiscoveryFailureCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.IpamExternalResourceVerificationToken : object {
    private string _ipamArn;
    private string _ipamExternalResourceVerificationTokenArn;
    private string _ipamExternalResourceVerificationTokenId;
    private string _ipamId;
    private string _ipamRegion;
    private Nullable`1<DateTime> _notAfter;
    private IpamExternalResourceVerificationTokenState _state;
    private TokenState _status;
    private List`1<Tag> _tags;
    private string _tokenName;
    private string _tokenValue;
    [AWSPropertyAttribute]
public string IpamArn { get; public set; }
    [AWSPropertyAttribute]
public string IpamExternalResourceVerificationTokenArn { get; public set; }
    public string IpamExternalResourceVerificationTokenId { get; public set; }
    public string IpamId { get; public set; }
    public string IpamRegion { get; public set; }
    public Nullable`1<DateTime> NotAfter { get; public set; }
    public IpamExternalResourceVerificationTokenState State { get; public set; }
    public TokenState Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TokenName { get; public set; }
    public string TokenValue { get; public set; }
    public string get_IpamArn();
    public void set_IpamArn(string value);
    internal bool IsSetIpamArn();
    public string get_IpamExternalResourceVerificationTokenArn();
    public void set_IpamExternalResourceVerificationTokenArn(string value);
    internal bool IsSetIpamExternalResourceVerificationTokenArn();
    public string get_IpamExternalResourceVerificationTokenId();
    public void set_IpamExternalResourceVerificationTokenId(string value);
    internal bool IsSetIpamExternalResourceVerificationTokenId();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public string get_IpamRegion();
    public void set_IpamRegion(string value);
    internal bool IsSetIpamRegion();
    public Nullable`1<DateTime> get_NotAfter();
    public void set_NotAfter(Nullable`1<DateTime> value);
    internal bool IsSetNotAfter();
    public IpamExternalResourceVerificationTokenState get_State();
    public void set_State(IpamExternalResourceVerificationTokenState value);
    internal bool IsSetState();
    public TokenState get_Status();
    public void set_Status(TokenState value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TokenName();
    public void set_TokenName(string value);
    internal bool IsSetTokenName();
    public string get_TokenValue();
    public void set_TokenValue(string value);
    internal bool IsSetTokenValue();
}
public class Amazon.EC2.Model.IpamOperatingRegion : object {
    private string _regionName;
    public string RegionName { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.EC2.Model.IpamPool : object {
    private AddressFamily _addressFamily;
    private Nullable`1<int> _allocationDefaultNetmaskLength;
    private Nullable`1<int> _allocationMaxNetmaskLength;
    private Nullable`1<int> _allocationMinNetmaskLength;
    private List`1<IpamResourceTag> _allocationResourceTags;
    private Nullable`1<bool> _autoImport;
    private IpamPoolAwsService _awsService;
    private string _description;
    private string _ipamArn;
    private string _ipamPoolArn;
    private string _ipamPoolId;
    private string _ipamRegion;
    private string _ipamScopeArn;
    private IpamScopeType _ipamScopeType;
    private string _locale;
    private string _ownerId;
    private Nullable`1<int> _poolDepth;
    private IpamPoolPublicIpSource _publicIpSource;
    private Nullable`1<bool> _publiclyAdvertisable;
    private string _sourceIpamPoolId;
    private IpamPoolSourceResource _sourceResource;
    private IpamPoolState _state;
    private string _stateMessage;
    private List`1<Tag> _tags;
    public AddressFamily AddressFamily { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationDefaultNetmaskLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationMaxNetmaskLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationMinNetmaskLength { get; public set; }
    public List`1<IpamResourceTag> AllocationResourceTags { get; public set; }
    public Nullable`1<bool> AutoImport { get; public set; }
    public IpamPoolAwsService AwsService { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamArn { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolArn { get; public set; }
    public string IpamPoolId { get; public set; }
    public string IpamRegion { get; public set; }
    [AWSPropertyAttribute]
public string IpamScopeArn { get; public set; }
    public IpamScopeType IpamScopeType { get; public set; }
    public string Locale { get; public set; }
    public string OwnerId { get; public set; }
    public Nullable`1<int> PoolDepth { get; public set; }
    public IpamPoolPublicIpSource PublicIpSource { get; public set; }
    public Nullable`1<bool> PubliclyAdvertisable { get; public set; }
    public string SourceIpamPoolId { get; public set; }
    public IpamPoolSourceResource SourceResource { get; public set; }
    public IpamPoolState State { get; public set; }
    public string StateMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public AddressFamily get_AddressFamily();
    public void set_AddressFamily(AddressFamily value);
    internal bool IsSetAddressFamily();
    public Nullable`1<int> get_AllocationDefaultNetmaskLength();
    public void set_AllocationDefaultNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationDefaultNetmaskLength();
    public Nullable`1<int> get_AllocationMaxNetmaskLength();
    public void set_AllocationMaxNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationMaxNetmaskLength();
    public Nullable`1<int> get_AllocationMinNetmaskLength();
    public void set_AllocationMinNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationMinNetmaskLength();
    public List`1<IpamResourceTag> get_AllocationResourceTags();
    public void set_AllocationResourceTags(List`1<IpamResourceTag> value);
    internal bool IsSetAllocationResourceTags();
    public Nullable`1<bool> get_AutoImport();
    public void set_AutoImport(Nullable`1<bool> value);
    internal bool IsSetAutoImport();
    public IpamPoolAwsService get_AwsService();
    public void set_AwsService(IpamPoolAwsService value);
    internal bool IsSetAwsService();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamArn();
    public void set_IpamArn(string value);
    internal bool IsSetIpamArn();
    public string get_IpamPoolArn();
    public void set_IpamPoolArn(string value);
    internal bool IsSetIpamPoolArn();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public string get_IpamRegion();
    public void set_IpamRegion(string value);
    internal bool IsSetIpamRegion();
    public string get_IpamScopeArn();
    public void set_IpamScopeArn(string value);
    internal bool IsSetIpamScopeArn();
    public IpamScopeType get_IpamScopeType();
    public void set_IpamScopeType(IpamScopeType value);
    internal bool IsSetIpamScopeType();
    public string get_Locale();
    public void set_Locale(string value);
    internal bool IsSetLocale();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public Nullable`1<int> get_PoolDepth();
    public void set_PoolDepth(Nullable`1<int> value);
    internal bool IsSetPoolDepth();
    public IpamPoolPublicIpSource get_PublicIpSource();
    public void set_PublicIpSource(IpamPoolPublicIpSource value);
    internal bool IsSetPublicIpSource();
    public Nullable`1<bool> get_PubliclyAdvertisable();
    public void set_PubliclyAdvertisable(Nullable`1<bool> value);
    internal bool IsSetPubliclyAdvertisable();
    public string get_SourceIpamPoolId();
    public void set_SourceIpamPoolId(string value);
    internal bool IsSetSourceIpamPoolId();
    public IpamPoolSourceResource get_SourceResource();
    public void set_SourceResource(IpamPoolSourceResource value);
    internal bool IsSetSourceResource();
    public IpamPoolState get_State();
    public void set_State(IpamPoolState value);
    internal bool IsSetState();
    public string get_StateMessage();
    public void set_StateMessage(string value);
    internal bool IsSetStateMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.IpamPoolAllocation : object {
    private string _cidr;
    private string _description;
    private string _ipamPoolAllocationId;
    private string _resourceId;
    private string _resourceOwner;
    private string _resourceRegion;
    private IpamPoolAllocationResourceType _resourceType;
    public string Cidr { get; public set; }
    public string Description { get; public set; }
    public string IpamPoolAllocationId { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceOwner { get; public set; }
    public string ResourceRegion { get; public set; }
    public IpamPoolAllocationResourceType ResourceType { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamPoolAllocationId();
    public void set_IpamPoolAllocationId(string value);
    internal bool IsSetIpamPoolAllocationId();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwner();
    public void set_ResourceOwner(string value);
    internal bool IsSetResourceOwner();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
    public IpamPoolAllocationResourceType get_ResourceType();
    public void set_ResourceType(IpamPoolAllocationResourceType value);
    internal bool IsSetResourceType();
}
public class Amazon.EC2.Model.IpamPoolCidr : object {
    private string _cidr;
    private IpamPoolCidrFailureReason _failureReason;
    private string _ipamPoolCidrId;
    private Nullable`1<int> _netmaskLength;
    private IpamPoolCidrState _state;
    public string Cidr { get; public set; }
    public IpamPoolCidrFailureReason FailureReason { get; public set; }
    public string IpamPoolCidrId { get; public set; }
    public Nullable`1<int> NetmaskLength { get; public set; }
    public IpamPoolCidrState State { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public IpamPoolCidrFailureReason get_FailureReason();
    public void set_FailureReason(IpamPoolCidrFailureReason value);
    internal bool IsSetFailureReason();
    public string get_IpamPoolCidrId();
    public void set_IpamPoolCidrId(string value);
    internal bool IsSetIpamPoolCidrId();
    public Nullable`1<int> get_NetmaskLength();
    public void set_NetmaskLength(Nullable`1<int> value);
    internal bool IsSetNetmaskLength();
    public IpamPoolCidrState get_State();
    public void set_State(IpamPoolCidrState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.IpamPoolCidrFailureReason : object {
    private IpamPoolCidrFailureCode _code;
    private string _message;
    public IpamPoolCidrFailureCode Code { get; public set; }
    public string Message { get; public set; }
    public IpamPoolCidrFailureCode get_Code();
    public void set_Code(IpamPoolCidrFailureCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.IpamPoolSourceResource : object {
    private string _resourceId;
    private string _resourceOwner;
    private string _resourceRegion;
    private IpamPoolSourceResourceType _resourceType;
    public string ResourceId { get; public set; }
    public string ResourceOwner { get; public set; }
    public string ResourceRegion { get; public set; }
    public IpamPoolSourceResourceType ResourceType { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwner();
    public void set_ResourceOwner(string value);
    internal bool IsSetResourceOwner();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
    public IpamPoolSourceResourceType get_ResourceType();
    public void set_ResourceType(IpamPoolSourceResourceType value);
    internal bool IsSetResourceType();
}
public class Amazon.EC2.Model.IpamPoolSourceResourceRequest : object {
    private string _resourceId;
    private string _resourceOwner;
    private string _resourceRegion;
    private IpamPoolSourceResourceType _resourceType;
    public string ResourceId { get; public set; }
    public string ResourceOwner { get; public set; }
    public string ResourceRegion { get; public set; }
    public IpamPoolSourceResourceType ResourceType { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwner();
    public void set_ResourceOwner(string value);
    internal bool IsSetResourceOwner();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
    public IpamPoolSourceResourceType get_ResourceType();
    public void set_ResourceType(IpamPoolSourceResourceType value);
    internal bool IsSetResourceType();
}
public class Amazon.EC2.Model.IpamPublicAddressSecurityGroup : object {
    private string _groupId;
    private string _groupName;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.IpamPublicAddressTag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.IpamPublicAddressTags : object {
    private List`1<IpamPublicAddressTag> _eipTags;
    public List`1<IpamPublicAddressTag> EipTags { get; public set; }
    public List`1<IpamPublicAddressTag> get_EipTags();
    public void set_EipTags(List`1<IpamPublicAddressTag> value);
    internal bool IsSetEipTags();
}
public class Amazon.EC2.Model.IpamResourceCidr : object {
    private string _availabilityZoneId;
    private IpamComplianceStatus _complianceStatus;
    private string _ipamId;
    private string _ipamPoolId;
    private string _ipamScopeId;
    private Nullable`1<double> _ipUsage;
    private IpamManagementState _managementState;
    private IpamOverlapStatus _overlapStatus;
    private string _resourceCidr;
    private string _resourceId;
    private string _resourceName;
    private string _resourceOwnerId;
    private string _resourceRegion;
    private List`1<IpamResourceTag> _resourceTags;
    private IpamResourceType _resourceType;
    private string _vpcId;
    public string AvailabilityZoneId { get; public set; }
    public IpamComplianceStatus ComplianceStatus { get; public set; }
    public string IpamId { get; public set; }
    public string IpamPoolId { get; public set; }
    public string IpamScopeId { get; public set; }
    public Nullable`1<double> IpUsage { get; public set; }
    public IpamManagementState ManagementState { get; public set; }
    public IpamOverlapStatus OverlapStatus { get; public set; }
    public string ResourceCidr { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceName { get; public set; }
    public string ResourceOwnerId { get; public set; }
    public string ResourceRegion { get; public set; }
    public List`1<IpamResourceTag> ResourceTags { get; public set; }
    public IpamResourceType ResourceType { get; public set; }
    public string VpcId { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public IpamComplianceStatus get_ComplianceStatus();
    public void set_ComplianceStatus(IpamComplianceStatus value);
    internal bool IsSetComplianceStatus();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public string get_IpamScopeId();
    public void set_IpamScopeId(string value);
    internal bool IsSetIpamScopeId();
    public Nullable`1<double> get_IpUsage();
    public void set_IpUsage(Nullable`1<double> value);
    internal bool IsSetIpUsage();
    public IpamManagementState get_ManagementState();
    public void set_ManagementState(IpamManagementState value);
    internal bool IsSetManagementState();
    public IpamOverlapStatus get_OverlapStatus();
    public void set_OverlapStatus(IpamOverlapStatus value);
    internal bool IsSetOverlapStatus();
    public string get_ResourceCidr();
    public void set_ResourceCidr(string value);
    internal bool IsSetResourceCidr();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
    public string get_ResourceOwnerId();
    public void set_ResourceOwnerId(string value);
    internal bool IsSetResourceOwnerId();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
    public List`1<IpamResourceTag> get_ResourceTags();
    public void set_ResourceTags(List`1<IpamResourceTag> value);
    internal bool IsSetResourceTags();
    public IpamResourceType get_ResourceType();
    public void set_ResourceType(IpamResourceType value);
    internal bool IsSetResourceType();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.IpamResourceDiscovery : object {
    private string _description;
    private string _ipamResourceDiscoveryArn;
    private string _ipamResourceDiscoveryId;
    private string _ipamResourceDiscoveryRegion;
    private Nullable`1<bool> _isDefault;
    private List`1<IpamOperatingRegion> _operatingRegions;
    private string _ownerId;
    private IpamResourceDiscoveryState _state;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public string IpamResourceDiscoveryArn { get; public set; }
    public string IpamResourceDiscoveryId { get; public set; }
    public string IpamResourceDiscoveryRegion { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public List`1<IpamOperatingRegion> OperatingRegions { get; public set; }
    public string OwnerId { get; public set; }
    public IpamResourceDiscoveryState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamResourceDiscoveryArn();
    public void set_IpamResourceDiscoveryArn(string value);
    internal bool IsSetIpamResourceDiscoveryArn();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public string get_IpamResourceDiscoveryRegion();
    public void set_IpamResourceDiscoveryRegion(string value);
    internal bool IsSetIpamResourceDiscoveryRegion();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public List`1<IpamOperatingRegion> get_OperatingRegions();
    public void set_OperatingRegions(List`1<IpamOperatingRegion> value);
    internal bool IsSetOperatingRegions();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public IpamResourceDiscoveryState get_State();
    public void set_State(IpamResourceDiscoveryState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.IpamResourceDiscoveryAssociation : object {
    private string _ipamArn;
    private string _ipamId;
    private string _ipamRegion;
    private string _ipamResourceDiscoveryAssociationArn;
    private string _ipamResourceDiscoveryAssociationId;
    private string _ipamResourceDiscoveryId;
    private Nullable`1<bool> _isDefault;
    private string _ownerId;
    private IpamAssociatedResourceDiscoveryStatus _resourceDiscoveryStatus;
    private IpamResourceDiscoveryAssociationState _state;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string IpamArn { get; public set; }
    public string IpamId { get; public set; }
    public string IpamRegion { get; public set; }
    public string IpamResourceDiscoveryAssociationArn { get; public set; }
    public string IpamResourceDiscoveryAssociationId { get; public set; }
    public string IpamResourceDiscoveryId { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public string OwnerId { get; public set; }
    public IpamAssociatedResourceDiscoveryStatus ResourceDiscoveryStatus { get; public set; }
    public IpamResourceDiscoveryAssociationState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_IpamArn();
    public void set_IpamArn(string value);
    internal bool IsSetIpamArn();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public string get_IpamRegion();
    public void set_IpamRegion(string value);
    internal bool IsSetIpamRegion();
    public string get_IpamResourceDiscoveryAssociationArn();
    public void set_IpamResourceDiscoveryAssociationArn(string value);
    internal bool IsSetIpamResourceDiscoveryAssociationArn();
    public string get_IpamResourceDiscoveryAssociationId();
    public void set_IpamResourceDiscoveryAssociationId(string value);
    internal bool IsSetIpamResourceDiscoveryAssociationId();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public IpamAssociatedResourceDiscoveryStatus get_ResourceDiscoveryStatus();
    public void set_ResourceDiscoveryStatus(IpamAssociatedResourceDiscoveryStatus value);
    internal bool IsSetResourceDiscoveryStatus();
    public IpamResourceDiscoveryAssociationState get_State();
    public void set_State(IpamResourceDiscoveryAssociationState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.IpamResourceTag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.IpamScope : object {
    private string _description;
    private string _ipamArn;
    private string _ipamRegion;
    private string _ipamScopeArn;
    private string _ipamScopeId;
    private IpamScopeType _ipamScopeType;
    private Nullable`1<bool> _isDefault;
    private string _ownerId;
    private Nullable`1<int> _poolCount;
    private IpamScopeState _state;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamArn { get; public set; }
    public string IpamRegion { get; public set; }
    [AWSPropertyAttribute]
public string IpamScopeArn { get; public set; }
    public string IpamScopeId { get; public set; }
    public IpamScopeType IpamScopeType { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public string OwnerId { get; public set; }
    public Nullable`1<int> PoolCount { get; public set; }
    public IpamScopeState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamArn();
    public void set_IpamArn(string value);
    internal bool IsSetIpamArn();
    public string get_IpamRegion();
    public void set_IpamRegion(string value);
    internal bool IsSetIpamRegion();
    public string get_IpamScopeArn();
    public void set_IpamScopeArn(string value);
    internal bool IsSetIpamScopeArn();
    public string get_IpamScopeId();
    public void set_IpamScopeId(string value);
    internal bool IsSetIpamScopeId();
    public IpamScopeType get_IpamScopeType();
    public void set_IpamScopeType(IpamScopeType value);
    internal bool IsSetIpamScopeType();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public Nullable`1<int> get_PoolCount();
    public void set_PoolCount(Nullable`1<int> value);
    internal bool IsSetPoolCount();
    public IpamScopeState get_State();
    public void set_State(IpamScopeState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.IpPermission : object {
    private List`1<string> _ipRanges;
    private Dictionary`2<string, IpRange> _internalIpRangesCollection;
    private bool _clearIpv4Ranges;
    private List`1<IpRange> _preIpv4Ranges;
    private Nullable`1<int> _fromPort;
    private string _ipProtocol;
    private List`1<IpRange> _ipv4Ranges;
    private List`1<Ipv6Range> _ipv6Ranges;
    private List`1<PrefixListId> _prefixListIds;
    private Nullable`1<int> _toPort;
    private List`1<UserIdGroupPair> _userIdGroupPairs;
    [ObsoleteAttribute("Deprecated in favor of Ipv4Ranges. Setting this property instead of Ipv4Ranges for UpdateSecurityGroupRuleDescriptionsIngressRequest results in no change in the CidrIp's description. An argument exception is thrown if both IpRanges and Ipv4Ranges properties are set in the IpPermission request object.")]
public List`1<string> IpRanges { get; public set; }
    internal List`1<IpRange> PreIpv4Ranges { get; internal set; }
    internal bool RestoreOldIpV4Range { get; internal set; }
    public Nullable`1<int> FromPort { get; public set; }
    public string IpProtocol { get; public set; }
    public List`1<IpRange> Ipv4Ranges { get; public set; }
    public List`1<Ipv6Range> Ipv6Ranges { get; public set; }
    public List`1<PrefixListId> PrefixListIds { get; public set; }
    public Nullable`1<int> ToPort { get; public set; }
    public List`1<UserIdGroupPair> UserIdGroupPairs { get; public set; }
    public List`1<string> get_IpRanges();
    public void set_IpRanges(List`1<string> value);
    internal bool IsSetIpRanges();
    internal List`1<IpRange> get_PreIpv4Ranges();
    internal void set_PreIpv4Ranges(List`1<IpRange> value);
    internal IpRangeValue CanModify();
    internal void SelectIpV4RangeForMarshalling(List`1<IpRange> list);
    internal void CopyIpv4RangesToInternalCollection(List`1<IpRange> list);
    internal void SelectIpRangeForMarshalling(List`1<string> list);
    internal bool get_RestoreOldIpV4Range();
    internal void set_RestoreOldIpV4Range(bool value);
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public string get_IpProtocol();
    public void set_IpProtocol(string value);
    internal bool IsSetIpProtocol();
    public List`1<IpRange> get_Ipv4Ranges();
    public void set_Ipv4Ranges(List`1<IpRange> value);
    internal bool IsSetIpv4Ranges();
    public List`1<Ipv6Range> get_Ipv6Ranges();
    public void set_Ipv6Ranges(List`1<Ipv6Range> value);
    internal bool IsSetIpv6Ranges();
    public List`1<PrefixListId> get_PrefixListIds();
    public void set_PrefixListIds(List`1<PrefixListId> value);
    internal bool IsSetPrefixListIds();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
    public List`1<UserIdGroupPair> get_UserIdGroupPairs();
    public void set_UserIdGroupPairs(List`1<UserIdGroupPair> value);
    internal bool IsSetUserIdGroupPairs();
}
public class Amazon.EC2.Model.IpRange : object {
    private string _cidrIp;
    private string _description;
    public string CidrIp { get; public set; }
    public string Description { get; public set; }
    public string get_CidrIp();
    public void set_CidrIp(string value);
    internal bool IsSetCidrIp();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.EC2.Model.Ipv4PrefixSpecification : object {
    private string _ipv4Prefix;
    public string Ipv4Prefix { get; public set; }
    public string get_Ipv4Prefix();
    public void set_Ipv4Prefix(string value);
    internal bool IsSetIpv4Prefix();
}
public class Amazon.EC2.Model.Ipv4PrefixSpecificationRequest : object {
    private string _ipv4Prefix;
    public string Ipv4Prefix { get; public set; }
    public string get_Ipv4Prefix();
    public void set_Ipv4Prefix(string value);
    internal bool IsSetIpv4Prefix();
}
public class Amazon.EC2.Model.Ipv4PrefixSpecificationResponse : object {
    private string _ipv4Prefix;
    public string Ipv4Prefix { get; public set; }
    public string get_Ipv4Prefix();
    public void set_Ipv4Prefix(string value);
    internal bool IsSetIpv4Prefix();
}
public class Amazon.EC2.Model.Ipv6CidrAssociation : object {
    private string _associatedResource;
    private string _ipv6Cidr;
    public string AssociatedResource { get; public set; }
    public string Ipv6Cidr { get; public set; }
    public string get_AssociatedResource();
    public void set_AssociatedResource(string value);
    internal bool IsSetAssociatedResource();
    public string get_Ipv6Cidr();
    public void set_Ipv6Cidr(string value);
    internal bool IsSetIpv6Cidr();
}
public class Amazon.EC2.Model.Ipv6CidrBlock : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Ipv6Pool : object {
    private string _description;
    private List`1<PoolCidrBlock> _poolCidrBlocks;
    private string _poolId;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public List`1<PoolCidrBlock> PoolCidrBlocks { get; public set; }
    public string PoolId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<PoolCidrBlock> get_PoolCidrBlocks();
    public void set_PoolCidrBlocks(List`1<PoolCidrBlock> value);
    internal bool IsSetPoolCidrBlocks();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.Ipv6PrefixSpecification : object {
    private string _ipv6Prefix;
    public string Ipv6Prefix { get; public set; }
    public string get_Ipv6Prefix();
    public void set_Ipv6Prefix(string value);
    internal bool IsSetIpv6Prefix();
}
public class Amazon.EC2.Model.Ipv6PrefixSpecificationRequest : object {
    private string _ipv6Prefix;
    public string Ipv6Prefix { get; public set; }
    public string get_Ipv6Prefix();
    public void set_Ipv6Prefix(string value);
    internal bool IsSetIpv6Prefix();
}
public class Amazon.EC2.Model.Ipv6PrefixSpecificationResponse : object {
    private string _ipv6Prefix;
    public string Ipv6Prefix { get; public set; }
    public string get_Ipv6Prefix();
    public void set_Ipv6Prefix(string value);
    internal bool IsSetIpv6Prefix();
}
public class Amazon.EC2.Model.Ipv6Range : object {
    private string _cidrIpv6;
    private string _description;
    public string CidrIpv6 { get; public set; }
    public string Description { get; public set; }
    public string get_CidrIpv6();
    public void set_CidrIpv6(string value);
    internal bool IsSetCidrIpv6();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public interface Amazon.EC2.Model.ISearchLocalGatewayRoutesPaginator {
    public IPaginatedEnumerable`1<SearchLocalGatewayRoutesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRoute> Routes { get; }
    public abstract virtual IPaginatedEnumerable`1<SearchLocalGatewayRoutesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LocalGatewayRoute> get_Routes();
}
public interface Amazon.EC2.Model.ISearchTransitGatewayMulticastGroupsPaginator {
    public IPaginatedEnumerable`1<SearchTransitGatewayMulticastGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayMulticastGroup> MulticastGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<SearchTransitGatewayMulticastGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TransitGatewayMulticastGroup> get_MulticastGroups();
}
public class Amazon.EC2.Model.KeyPair : object {
    private string _keyFingerprint;
    private string _keyMaterial;
    private string _keyName;
    private string _keyPairId;
    private List`1<Tag> _tags;
    public string KeyFingerprint { get; public set; }
    [AWSPropertyAttribute]
public string KeyMaterial { get; public set; }
    public string KeyName { get; public set; }
    public string KeyPairId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_KeyFingerprint();
    public void set_KeyFingerprint(string value);
    internal bool IsSetKeyFingerprint();
    public string get_KeyMaterial();
    public void set_KeyMaterial(string value);
    internal bool IsSetKeyMaterial();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_KeyPairId();
    public void set_KeyPairId(string value);
    internal bool IsSetKeyPairId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.KeyPairInfo : object {
    private Nullable`1<DateTime> _createTime;
    private string _keyFingerprint;
    private string _keyName;
    private string _keyPairId;
    private KeyType _keyType;
    private string _publicKey;
    private List`1<Tag> _tags;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public string KeyFingerprint { get; public set; }
    public string KeyName { get; public set; }
    public string KeyPairId { get; public set; }
    public KeyType KeyType { get; public set; }
    public string PublicKey { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_KeyFingerprint();
    public void set_KeyFingerprint(string value);
    internal bool IsSetKeyFingerprint();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_KeyPairId();
    public void set_KeyPairId(string value);
    internal bool IsSetKeyPairId();
    public KeyType get_KeyType();
    public void set_KeyType(KeyType value);
    internal bool IsSetKeyType();
    public string get_PublicKey();
    public void set_PublicKey(string value);
    internal bool IsSetPublicKey();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LastError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.LaunchPermission : object {
    private PermissionGroup _group;
    private string _organizationalUnitArn;
    private string _organizationArn;
    private string _userId;
    public PermissionGroup Group { get; public set; }
    public string OrganizationalUnitArn { get; public set; }
    public string OrganizationArn { get; public set; }
    public string UserId { get; public set; }
    public PermissionGroup get_Group();
    public void set_Group(PermissionGroup value);
    internal bool IsSetGroup();
    public string get_OrganizationalUnitArn();
    public void set_OrganizationalUnitArn(string value);
    internal bool IsSetOrganizationalUnitArn();
    public string get_OrganizationArn();
    public void set_OrganizationArn(string value);
    internal bool IsSetOrganizationArn();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
}
public class Amazon.EC2.Model.LaunchPermissionModifications : object {
    private List`1<LaunchPermission> _add;
    private List`1<LaunchPermission> _remove;
    public List`1<LaunchPermission> Add { get; public set; }
    public List`1<LaunchPermission> Remove { get; public set; }
    public List`1<LaunchPermission> get_Add();
    public void set_Add(List`1<LaunchPermission> value);
    internal bool IsSetAdd();
    public List`1<LaunchPermission> get_Remove();
    public void set_Remove(List`1<LaunchPermission> value);
    internal bool IsSetRemove();
}
public class Amazon.EC2.Model.LaunchSpecification : object {
    private string _addressingType;
    private List`1<GroupIdentifier> _allSecurityGroups;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private Nullable`1<bool> _ebsOptimized;
    private IamInstanceProfileSpecification _iamInstanceProfile;
    private string _imageId;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private Nullable`1<bool> _monitoringEnabled;
    private List`1<InstanceNetworkInterfaceSpecification> _networkInterfaces;
    private SpotPlacement _placement;
    private string _ramdiskId;
    private List`1<string> _securityGroups;
    private string _subnetId;
    private string _userData;
    public string AddressingType { get; public set; }
    public List`1<GroupIdentifier> AllSecurityGroups { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public Nullable`1<bool> MonitoringEnabled { get; public set; }
    public List`1<InstanceNetworkInterfaceSpecification> NetworkInterfaces { get; public set; }
    public SpotPlacement Placement { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public string SubnetId { get; public set; }
    [AWSPropertyAttribute]
public string UserData { get; public set; }
    public string get_AddressingType();
    public void set_AddressingType(string value);
    internal bool IsSetAddressingType();
    public List`1<GroupIdentifier> get_AllSecurityGroups();
    public void set_AllSecurityGroups(List`1<GroupIdentifier> value);
    internal bool IsSetAllSecurityGroups();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public Nullable`1<bool> get_MonitoringEnabled();
    public void set_MonitoringEnabled(Nullable`1<bool> value);
    internal bool IsSetMonitoringEnabled();
    public List`1<InstanceNetworkInterfaceSpecification> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterfaceSpecification> value);
    internal bool IsSetNetworkInterfaces();
    public SpotPlacement get_Placement();
    public void set_Placement(SpotPlacement value);
    internal bool IsSetPlacement();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.LaunchTemplate : object {
    private string _createdBy;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<long> _defaultVersionNumber;
    private Nullable`1<long> _latestVersionNumber;
    private string _launchTemplateId;
    private string _launchTemplateName;
    private List`1<Tag> _tags;
    public string CreatedBy { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<long> DefaultVersionNumber { get; public set; }
    public Nullable`1<long> LatestVersionNumber { get; public set; }
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    internal bool IsSetCreatedBy();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<long> get_DefaultVersionNumber();
    public void set_DefaultVersionNumber(Nullable`1<long> value);
    internal bool IsSetDefaultVersionNumber();
    public Nullable`1<long> get_LatestVersionNumber();
    public void set_LatestVersionNumber(Nullable`1<long> value);
    internal bool IsSetLatestVersionNumber();
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LaunchTemplateAndOverridesResponse : object {
    private FleetLaunchTemplateSpecification _launchTemplateSpecification;
    private FleetLaunchTemplateOverrides _overrides;
    public FleetLaunchTemplateSpecification LaunchTemplateSpecification { get; public set; }
    public FleetLaunchTemplateOverrides Overrides { get; public set; }
    public FleetLaunchTemplateSpecification get_LaunchTemplateSpecification();
    public void set_LaunchTemplateSpecification(FleetLaunchTemplateSpecification value);
    internal bool IsSetLaunchTemplateSpecification();
    public FleetLaunchTemplateOverrides get_Overrides();
    public void set_Overrides(FleetLaunchTemplateOverrides value);
    internal bool IsSetOverrides();
}
public class Amazon.EC2.Model.LaunchTemplateBlockDeviceMapping : object {
    private string _deviceName;
    private LaunchTemplateEbsBlockDevice _ebs;
    private string _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public LaunchTemplateEbsBlockDevice Ebs { get; public set; }
    public string NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public LaunchTemplateEbsBlockDevice get_Ebs();
    public void set_Ebs(LaunchTemplateEbsBlockDevice value);
    internal bool IsSetEbs();
    public string get_NoDevice();
    public void set_NoDevice(string value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.EC2.Model.LaunchTemplateBlockDeviceMappingRequest : object {
    private string _deviceName;
    private LaunchTemplateEbsBlockDeviceRequest _ebs;
    private string _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public LaunchTemplateEbsBlockDeviceRequest Ebs { get; public set; }
    public string NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public LaunchTemplateEbsBlockDeviceRequest get_Ebs();
    public void set_Ebs(LaunchTemplateEbsBlockDeviceRequest value);
    internal bool IsSetEbs();
    public string get_NoDevice();
    public void set_NoDevice(string value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.EC2.Model.LaunchTemplateCapacityReservationSpecificationRequest : object {
    private CapacityReservationPreference _capacityReservationPreference;
    private CapacityReservationTarget _capacityReservationTarget;
    public CapacityReservationPreference CapacityReservationPreference { get; public set; }
    public CapacityReservationTarget CapacityReservationTarget { get; public set; }
    public CapacityReservationPreference get_CapacityReservationPreference();
    public void set_CapacityReservationPreference(CapacityReservationPreference value);
    internal bool IsSetCapacityReservationPreference();
    public CapacityReservationTarget get_CapacityReservationTarget();
    public void set_CapacityReservationTarget(CapacityReservationTarget value);
    internal bool IsSetCapacityReservationTarget();
}
public class Amazon.EC2.Model.LaunchTemplateCapacityReservationSpecificationResponse : object {
    private CapacityReservationPreference _capacityReservationPreference;
    private CapacityReservationTargetResponse _capacityReservationTarget;
    public CapacityReservationPreference CapacityReservationPreference { get; public set; }
    public CapacityReservationTargetResponse CapacityReservationTarget { get; public set; }
    public CapacityReservationPreference get_CapacityReservationPreference();
    public void set_CapacityReservationPreference(CapacityReservationPreference value);
    internal bool IsSetCapacityReservationPreference();
    public CapacityReservationTargetResponse get_CapacityReservationTarget();
    public void set_CapacityReservationTarget(CapacityReservationTargetResponse value);
    internal bool IsSetCapacityReservationTarget();
}
public class Amazon.EC2.Model.LaunchTemplateConfig : object {
    private FleetLaunchTemplateSpecification _launchTemplateSpecification;
    private List`1<LaunchTemplateOverrides> _overrides;
    public FleetLaunchTemplateSpecification LaunchTemplateSpecification { get; public set; }
    public List`1<LaunchTemplateOverrides> Overrides { get; public set; }
    public FleetLaunchTemplateSpecification get_LaunchTemplateSpecification();
    public void set_LaunchTemplateSpecification(FleetLaunchTemplateSpecification value);
    internal bool IsSetLaunchTemplateSpecification();
    public List`1<LaunchTemplateOverrides> get_Overrides();
    public void set_Overrides(List`1<LaunchTemplateOverrides> value);
    internal bool IsSetOverrides();
}
public class Amazon.EC2.Model.LaunchTemplateCpuOptions : object {
    private AmdSevSnpSpecification _amdSevSnp;
    private Nullable`1<int> _coreCount;
    private Nullable`1<int> _threadsPerCore;
    public AmdSevSnpSpecification AmdSevSnp { get; public set; }
    public Nullable`1<int> CoreCount { get; public set; }
    public Nullable`1<int> ThreadsPerCore { get; public set; }
    public AmdSevSnpSpecification get_AmdSevSnp();
    public void set_AmdSevSnp(AmdSevSnpSpecification value);
    internal bool IsSetAmdSevSnp();
    public Nullable`1<int> get_CoreCount();
    public void set_CoreCount(Nullable`1<int> value);
    internal bool IsSetCoreCount();
    public Nullable`1<int> get_ThreadsPerCore();
    public void set_ThreadsPerCore(Nullable`1<int> value);
    internal bool IsSetThreadsPerCore();
}
public class Amazon.EC2.Model.LaunchTemplateCpuOptionsRequest : object {
    private AmdSevSnpSpecification _amdSevSnp;
    private Nullable`1<int> _coreCount;
    private Nullable`1<int> _threadsPerCore;
    public AmdSevSnpSpecification AmdSevSnp { get; public set; }
    public Nullable`1<int> CoreCount { get; public set; }
    public Nullable`1<int> ThreadsPerCore { get; public set; }
    public AmdSevSnpSpecification get_AmdSevSnp();
    public void set_AmdSevSnp(AmdSevSnpSpecification value);
    internal bool IsSetAmdSevSnp();
    public Nullable`1<int> get_CoreCount();
    public void set_CoreCount(Nullable`1<int> value);
    internal bool IsSetCoreCount();
    public Nullable`1<int> get_ThreadsPerCore();
    public void set_ThreadsPerCore(Nullable`1<int> value);
    internal bool IsSetThreadsPerCore();
}
public class Amazon.EC2.Model.LaunchTemplateEbsBlockDevice : object {
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _snapshotId;
    private Nullable`1<int> _throughput;
    private Nullable`1<int> _volumeSize;
    private VolumeType _volumeType;
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string SnapshotId { get; public set; }
    public Nullable`1<int> Throughput { get; public set; }
    public Nullable`1<int> VolumeSize { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public Nullable`1<int> get_Throughput();
    public void set_Throughput(Nullable`1<int> value);
    internal bool IsSetThroughput();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.LaunchTemplateEbsBlockDeviceRequest : object {
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _snapshotId;
    private Nullable`1<int> _throughput;
    private Nullable`1<int> _volumeSize;
    private VolumeType _volumeType;
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string SnapshotId { get; public set; }
    public Nullable`1<int> Throughput { get; public set; }
    public Nullable`1<int> VolumeSize { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public Nullable`1<int> get_Throughput();
    public void set_Throughput(Nullable`1<int> value);
    internal bool IsSetThroughput();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.LaunchTemplateElasticInferenceAccelerator : object {
    private Nullable`1<int> _count;
    private string _type;
    [AWSPropertyAttribute]
public Nullable`1<int> Count { get; public set; }
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.LaunchTemplateElasticInferenceAcceleratorResponse : object {
    private Nullable`1<int> _count;
    private string _type;
    public Nullable`1<int> Count { get; public set; }
    public string Type { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.LaunchTemplateEnaSrdSpecification : object {
    private Nullable`1<bool> _enaSrdEnabled;
    private LaunchTemplateEnaSrdUdpSpecification _enaSrdUdpSpecification;
    public Nullable`1<bool> EnaSrdEnabled { get; public set; }
    public LaunchTemplateEnaSrdUdpSpecification EnaSrdUdpSpecification { get; public set; }
    public Nullable`1<bool> get_EnaSrdEnabled();
    public void set_EnaSrdEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdEnabled();
    public LaunchTemplateEnaSrdUdpSpecification get_EnaSrdUdpSpecification();
    public void set_EnaSrdUdpSpecification(LaunchTemplateEnaSrdUdpSpecification value);
    internal bool IsSetEnaSrdUdpSpecification();
}
public class Amazon.EC2.Model.LaunchTemplateEnaSrdUdpSpecification : object {
    private Nullable`1<bool> _enaSrdUdpEnabled;
    public Nullable`1<bool> EnaSrdUdpEnabled { get; public set; }
    public Nullable`1<bool> get_EnaSrdUdpEnabled();
    public void set_EnaSrdUdpEnabled(Nullable`1<bool> value);
    internal bool IsSetEnaSrdUdpEnabled();
}
public class Amazon.EC2.Model.LaunchTemplateEnclaveOptions : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.LaunchTemplateEnclaveOptionsRequest : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.LaunchTemplateHibernationOptions : object {
    private Nullable`1<bool> _configured;
    public Nullable`1<bool> Configured { get; public set; }
    public Nullable`1<bool> get_Configured();
    public void set_Configured(Nullable`1<bool> value);
    internal bool IsSetConfigured();
}
public class Amazon.EC2.Model.LaunchTemplateHibernationOptionsRequest : object {
    private Nullable`1<bool> _configured;
    public Nullable`1<bool> Configured { get; public set; }
    public Nullable`1<bool> get_Configured();
    public void set_Configured(Nullable`1<bool> value);
    internal bool IsSetConfigured();
}
public class Amazon.EC2.Model.LaunchTemplateIamInstanceProfileSpecification : object {
    private string _arn;
    private string _name;
    public string Arn { get; public set; }
    public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.LaunchTemplateIamInstanceProfileSpecificationRequest : object {
    private string _arn;
    private string _name;
    public string Arn { get; public set; }
    public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceMaintenanceOptions : object {
    private LaunchTemplateAutoRecoveryState _autoRecovery;
    public LaunchTemplateAutoRecoveryState AutoRecovery { get; public set; }
    public LaunchTemplateAutoRecoveryState get_AutoRecovery();
    public void set_AutoRecovery(LaunchTemplateAutoRecoveryState value);
    internal bool IsSetAutoRecovery();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceMaintenanceOptionsRequest : object {
    private LaunchTemplateAutoRecoveryState _autoRecovery;
    public LaunchTemplateAutoRecoveryState AutoRecovery { get; public set; }
    public LaunchTemplateAutoRecoveryState get_AutoRecovery();
    public void set_AutoRecovery(LaunchTemplateAutoRecoveryState value);
    internal bool IsSetAutoRecovery();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceMarketOptions : object {
    private MarketType _marketType;
    private LaunchTemplateSpotMarketOptions _spotOptions;
    public MarketType MarketType { get; public set; }
    public LaunchTemplateSpotMarketOptions SpotOptions { get; public set; }
    public MarketType get_MarketType();
    public void set_MarketType(MarketType value);
    internal bool IsSetMarketType();
    public LaunchTemplateSpotMarketOptions get_SpotOptions();
    public void set_SpotOptions(LaunchTemplateSpotMarketOptions value);
    internal bool IsSetSpotOptions();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceMarketOptionsRequest : object {
    private MarketType _marketType;
    private LaunchTemplateSpotMarketOptionsRequest _spotOptions;
    public MarketType MarketType { get; public set; }
    public LaunchTemplateSpotMarketOptionsRequest SpotOptions { get; public set; }
    public MarketType get_MarketType();
    public void set_MarketType(MarketType value);
    internal bool IsSetMarketType();
    public LaunchTemplateSpotMarketOptionsRequest get_SpotOptions();
    public void set_SpotOptions(LaunchTemplateSpotMarketOptionsRequest value);
    internal bool IsSetSpotOptions();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceMetadataOptions : object {
    private LaunchTemplateInstanceMetadataEndpointState _httpEndpoint;
    private LaunchTemplateInstanceMetadataProtocolIpv6 _httpProtocolIpv6;
    private Nullable`1<int> _httpPutResponseHopLimit;
    private LaunchTemplateHttpTokensState _httpTokens;
    private LaunchTemplateInstanceMetadataTagsState _instanceMetadataTags;
    private LaunchTemplateInstanceMetadataOptionsState _state;
    public LaunchTemplateInstanceMetadataEndpointState HttpEndpoint { get; public set; }
    public LaunchTemplateInstanceMetadataProtocolIpv6 HttpProtocolIpv6 { get; public set; }
    public Nullable`1<int> HttpPutResponseHopLimit { get; public set; }
    public LaunchTemplateHttpTokensState HttpTokens { get; public set; }
    public LaunchTemplateInstanceMetadataTagsState InstanceMetadataTags { get; public set; }
    public LaunchTemplateInstanceMetadataOptionsState State { get; public set; }
    public LaunchTemplateInstanceMetadataEndpointState get_HttpEndpoint();
    public void set_HttpEndpoint(LaunchTemplateInstanceMetadataEndpointState value);
    internal bool IsSetHttpEndpoint();
    public LaunchTemplateInstanceMetadataProtocolIpv6 get_HttpProtocolIpv6();
    public void set_HttpProtocolIpv6(LaunchTemplateInstanceMetadataProtocolIpv6 value);
    internal bool IsSetHttpProtocolIpv6();
    public Nullable`1<int> get_HttpPutResponseHopLimit();
    public void set_HttpPutResponseHopLimit(Nullable`1<int> value);
    internal bool IsSetHttpPutResponseHopLimit();
    public LaunchTemplateHttpTokensState get_HttpTokens();
    public void set_HttpTokens(LaunchTemplateHttpTokensState value);
    internal bool IsSetHttpTokens();
    public LaunchTemplateInstanceMetadataTagsState get_InstanceMetadataTags();
    public void set_InstanceMetadataTags(LaunchTemplateInstanceMetadataTagsState value);
    internal bool IsSetInstanceMetadataTags();
    public LaunchTemplateInstanceMetadataOptionsState get_State();
    public void set_State(LaunchTemplateInstanceMetadataOptionsState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceMetadataOptionsRequest : object {
    private LaunchTemplateInstanceMetadataEndpointState _httpEndpoint;
    private LaunchTemplateInstanceMetadataProtocolIpv6 _httpProtocolIpv6;
    private Nullable`1<int> _httpPutResponseHopLimit;
    private LaunchTemplateHttpTokensState _httpTokens;
    private LaunchTemplateInstanceMetadataTagsState _instanceMetadataTags;
    public LaunchTemplateInstanceMetadataEndpointState HttpEndpoint { get; public set; }
    public LaunchTemplateInstanceMetadataProtocolIpv6 HttpProtocolIpv6 { get; public set; }
    public Nullable`1<int> HttpPutResponseHopLimit { get; public set; }
    public LaunchTemplateHttpTokensState HttpTokens { get; public set; }
    public LaunchTemplateInstanceMetadataTagsState InstanceMetadataTags { get; public set; }
    public LaunchTemplateInstanceMetadataEndpointState get_HttpEndpoint();
    public void set_HttpEndpoint(LaunchTemplateInstanceMetadataEndpointState value);
    internal bool IsSetHttpEndpoint();
    public LaunchTemplateInstanceMetadataProtocolIpv6 get_HttpProtocolIpv6();
    public void set_HttpProtocolIpv6(LaunchTemplateInstanceMetadataProtocolIpv6 value);
    internal bool IsSetHttpProtocolIpv6();
    public Nullable`1<int> get_HttpPutResponseHopLimit();
    public void set_HttpPutResponseHopLimit(Nullable`1<int> value);
    internal bool IsSetHttpPutResponseHopLimit();
    public LaunchTemplateHttpTokensState get_HttpTokens();
    public void set_HttpTokens(LaunchTemplateHttpTokensState value);
    internal bool IsSetHttpTokens();
    public LaunchTemplateInstanceMetadataTagsState get_InstanceMetadataTags();
    public void set_InstanceMetadataTags(LaunchTemplateInstanceMetadataTagsState value);
    internal bool IsSetInstanceMetadataTags();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceNetworkInterfaceSpecification : object {
    private Nullable`1<bool> _associateCarrierIpAddress;
    private Nullable`1<bool> _associatePublicIpAddress;
    private ConnectionTrackingSpecification _connectionTrackingSpecification;
    private Nullable`1<bool> _deleteOnTermination;
    private string _description;
    private Nullable`1<int> _deviceIndex;
    private LaunchTemplateEnaSrdSpecification _enaSrdSpecification;
    private List`1<string> _groups;
    private string _interfaceType;
    private Nullable`1<int> _ipv4PrefixCount;
    private List`1<Ipv4PrefixSpecificationResponse> _ipv4Prefixes;
    private Nullable`1<int> _ipv6AddressCount;
    private List`1<InstanceIpv6Address> _ipv6Addresses;
    private Nullable`1<int> _ipv6PrefixCount;
    private List`1<Ipv6PrefixSpecificationResponse> _ipv6Prefixes;
    private Nullable`1<int> _networkCardIndex;
    private string _networkInterfaceId;
    private Nullable`1<bool> _primaryIpv6;
    private string _privateIpAddress;
    private List`1<PrivateIpAddressSpecification> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private string _subnetId;
    public Nullable`1<bool> AssociateCarrierIpAddress { get; public set; }
    public Nullable`1<bool> AssociatePublicIpAddress { get; public set; }
    public ConnectionTrackingSpecification ConnectionTrackingSpecification { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> DeviceIndex { get; public set; }
    public LaunchTemplateEnaSrdSpecification EnaSrdSpecification { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string InterfaceType { get; public set; }
    public Nullable`1<int> Ipv4PrefixCount { get; public set; }
    public List`1<Ipv4PrefixSpecificationResponse> Ipv4Prefixes { get; public set; }
    public Nullable`1<int> Ipv6AddressCount { get; public set; }
    public List`1<InstanceIpv6Address> Ipv6Addresses { get; public set; }
    public Nullable`1<int> Ipv6PrefixCount { get; public set; }
    public List`1<Ipv6PrefixSpecificationResponse> Ipv6Prefixes { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public Nullable`1<bool> PrimaryIpv6 { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<PrivateIpAddressSpecification> PrivateIpAddresses { get; public set; }
    public Nullable`1<int> SecondaryPrivateIpAddressCount { get; public set; }
    public string SubnetId { get; public set; }
    public Nullable`1<bool> get_AssociateCarrierIpAddress();
    public void set_AssociateCarrierIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociateCarrierIpAddress();
    public Nullable`1<bool> get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociatePublicIpAddress();
    public ConnectionTrackingSpecification get_ConnectionTrackingSpecification();
    public void set_ConnectionTrackingSpecification(ConnectionTrackingSpecification value);
    internal bool IsSetConnectionTrackingSpecification();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_DeviceIndex();
    public void set_DeviceIndex(Nullable`1<int> value);
    internal bool IsSetDeviceIndex();
    public LaunchTemplateEnaSrdSpecification get_EnaSrdSpecification();
    public void set_EnaSrdSpecification(LaunchTemplateEnaSrdSpecification value);
    internal bool IsSetEnaSrdSpecification();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_InterfaceType();
    public void set_InterfaceType(string value);
    internal bool IsSetInterfaceType();
    public Nullable`1<int> get_Ipv4PrefixCount();
    public void set_Ipv4PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv4PrefixCount();
    public List`1<Ipv4PrefixSpecificationResponse> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<Ipv4PrefixSpecificationResponse> value);
    internal bool IsSetIpv4Prefixes();
    public Nullable`1<int> get_Ipv6AddressCount();
    public void set_Ipv6AddressCount(Nullable`1<int> value);
    internal bool IsSetIpv6AddressCount();
    public List`1<InstanceIpv6Address> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<InstanceIpv6Address> value);
    internal bool IsSetIpv6Addresses();
    public Nullable`1<int> get_Ipv6PrefixCount();
    public void set_Ipv6PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv6PrefixCount();
    public List`1<Ipv6PrefixSpecificationResponse> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<Ipv6PrefixSpecificationResponse> value);
    internal bool IsSetIpv6Prefixes();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<bool> get_PrimaryIpv6();
    public void set_PrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetPrimaryIpv6();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<PrivateIpAddressSpecification> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<PrivateIpAddressSpecification> value);
    internal bool IsSetPrivateIpAddresses();
    public Nullable`1<int> get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest : object {
    private Nullable`1<bool> _associateCarrierIpAddress;
    private Nullable`1<bool> _associatePublicIpAddress;
    private ConnectionTrackingSpecificationRequest _connectionTrackingSpecification;
    private Nullable`1<bool> _deleteOnTermination;
    private string _description;
    private Nullable`1<int> _deviceIndex;
    private EnaSrdSpecificationRequest _enaSrdSpecification;
    private List`1<string> _groups;
    private string _interfaceType;
    private Nullable`1<int> _ipv4PrefixCount;
    private List`1<Ipv4PrefixSpecificationRequest> _ipv4Prefixes;
    private Nullable`1<int> _ipv6AddressCount;
    private List`1<InstanceIpv6AddressRequest> _ipv6Addresses;
    private Nullable`1<int> _ipv6PrefixCount;
    private List`1<Ipv6PrefixSpecificationRequest> _ipv6Prefixes;
    private Nullable`1<int> _networkCardIndex;
    private string _networkInterfaceId;
    private Nullable`1<bool> _primaryIpv6;
    private string _privateIpAddress;
    private List`1<PrivateIpAddressSpecification> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private string _subnetId;
    public Nullable`1<bool> AssociateCarrierIpAddress { get; public set; }
    public Nullable`1<bool> AssociatePublicIpAddress { get; public set; }
    public ConnectionTrackingSpecificationRequest ConnectionTrackingSpecification { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> DeviceIndex { get; public set; }
    public EnaSrdSpecificationRequest EnaSrdSpecification { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string InterfaceType { get; public set; }
    public Nullable`1<int> Ipv4PrefixCount { get; public set; }
    public List`1<Ipv4PrefixSpecificationRequest> Ipv4Prefixes { get; public set; }
    public Nullable`1<int> Ipv6AddressCount { get; public set; }
    public List`1<InstanceIpv6AddressRequest> Ipv6Addresses { get; public set; }
    public Nullable`1<int> Ipv6PrefixCount { get; public set; }
    public List`1<Ipv6PrefixSpecificationRequest> Ipv6Prefixes { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public Nullable`1<bool> PrimaryIpv6 { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<PrivateIpAddressSpecification> PrivateIpAddresses { get; public set; }
    public Nullable`1<int> SecondaryPrivateIpAddressCount { get; public set; }
    public string SubnetId { get; public set; }
    public Nullable`1<bool> get_AssociateCarrierIpAddress();
    public void set_AssociateCarrierIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociateCarrierIpAddress();
    public Nullable`1<bool> get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociatePublicIpAddress();
    public ConnectionTrackingSpecificationRequest get_ConnectionTrackingSpecification();
    public void set_ConnectionTrackingSpecification(ConnectionTrackingSpecificationRequest value);
    internal bool IsSetConnectionTrackingSpecification();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_DeviceIndex();
    public void set_DeviceIndex(Nullable`1<int> value);
    internal bool IsSetDeviceIndex();
    public EnaSrdSpecificationRequest get_EnaSrdSpecification();
    public void set_EnaSrdSpecification(EnaSrdSpecificationRequest value);
    internal bool IsSetEnaSrdSpecification();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_InterfaceType();
    public void set_InterfaceType(string value);
    internal bool IsSetInterfaceType();
    public Nullable`1<int> get_Ipv4PrefixCount();
    public void set_Ipv4PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv4PrefixCount();
    public List`1<Ipv4PrefixSpecificationRequest> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<Ipv4PrefixSpecificationRequest> value);
    internal bool IsSetIpv4Prefixes();
    public Nullable`1<int> get_Ipv6AddressCount();
    public void set_Ipv6AddressCount(Nullable`1<int> value);
    internal bool IsSetIpv6AddressCount();
    public List`1<InstanceIpv6AddressRequest> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<InstanceIpv6AddressRequest> value);
    internal bool IsSetIpv6Addresses();
    public Nullable`1<int> get_Ipv6PrefixCount();
    public void set_Ipv6PrefixCount(Nullable`1<int> value);
    internal bool IsSetIpv6PrefixCount();
    public List`1<Ipv6PrefixSpecificationRequest> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<Ipv6PrefixSpecificationRequest> value);
    internal bool IsSetIpv6Prefixes();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<bool> get_PrimaryIpv6();
    public void set_PrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetPrimaryIpv6();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<PrivateIpAddressSpecification> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<PrivateIpAddressSpecification> value);
    internal bool IsSetPrivateIpAddresses();
    public Nullable`1<int> get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.LaunchTemplateLicenseConfiguration : object {
    private string _licenseConfigurationArn;
    public string LicenseConfigurationArn { get; public set; }
    public string get_LicenseConfigurationArn();
    public void set_LicenseConfigurationArn(string value);
    internal bool IsSetLicenseConfigurationArn();
}
public class Amazon.EC2.Model.LaunchTemplateLicenseConfigurationRequest : object {
    private string _licenseConfigurationArn;
    public string LicenseConfigurationArn { get; public set; }
    public string get_LicenseConfigurationArn();
    public void set_LicenseConfigurationArn(string value);
    internal bool IsSetLicenseConfigurationArn();
}
public class Amazon.EC2.Model.LaunchTemplateOverrides : object {
    private string _availabilityZone;
    private InstanceRequirements _instanceRequirements;
    private InstanceType _instanceType;
    private Nullable`1<double> _priority;
    private string _spotPrice;
    private string _subnetId;
    private Nullable`1<double> _weightedCapacity;
    public string AvailabilityZone { get; public set; }
    public InstanceRequirements InstanceRequirements { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public Nullable`1<double> Priority { get; public set; }
    public string SpotPrice { get; public set; }
    public string SubnetId { get; public set; }
    public Nullable`1<double> WeightedCapacity { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public InstanceRequirements get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirements value);
    internal bool IsSetInstanceRequirements();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public Nullable`1<double> get_Priority();
    public void set_Priority(Nullable`1<double> value);
    internal bool IsSetPriority();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public Nullable`1<double> get_WeightedCapacity();
    public void set_WeightedCapacity(Nullable`1<double> value);
    internal bool IsSetWeightedCapacity();
}
public class Amazon.EC2.Model.LaunchTemplatePlacement : object {
    private string _affinity;
    private string _availabilityZone;
    private string _groupId;
    private string _groupName;
    private string _hostId;
    private string _hostResourceGroupArn;
    private Nullable`1<int> _partitionNumber;
    private string _spreadDomain;
    private Tenancy _tenancy;
    public string Affinity { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string HostId { get; public set; }
    public string HostResourceGroupArn { get; public set; }
    public Nullable`1<int> PartitionNumber { get; public set; }
    public string SpreadDomain { get; public set; }
    public Tenancy Tenancy { get; public set; }
    public string get_Affinity();
    public void set_Affinity(string value);
    internal bool IsSetAffinity();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_HostId();
    public void set_HostId(string value);
    internal bool IsSetHostId();
    public string get_HostResourceGroupArn();
    public void set_HostResourceGroupArn(string value);
    internal bool IsSetHostResourceGroupArn();
    public Nullable`1<int> get_PartitionNumber();
    public void set_PartitionNumber(Nullable`1<int> value);
    internal bool IsSetPartitionNumber();
    public string get_SpreadDomain();
    public void set_SpreadDomain(string value);
    internal bool IsSetSpreadDomain();
    public Tenancy get_Tenancy();
    public void set_Tenancy(Tenancy value);
    internal bool IsSetTenancy();
}
public class Amazon.EC2.Model.LaunchTemplatePlacementRequest : object {
    private string _affinity;
    private string _availabilityZone;
    private string _groupId;
    private string _groupName;
    private string _hostId;
    private string _hostResourceGroupArn;
    private Nullable`1<int> _partitionNumber;
    private string _spreadDomain;
    private Tenancy _tenancy;
    public string Affinity { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string HostId { get; public set; }
    public string HostResourceGroupArn { get; public set; }
    public Nullable`1<int> PartitionNumber { get; public set; }
    public string SpreadDomain { get; public set; }
    public Tenancy Tenancy { get; public set; }
    public string get_Affinity();
    public void set_Affinity(string value);
    internal bool IsSetAffinity();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_HostId();
    public void set_HostId(string value);
    internal bool IsSetHostId();
    public string get_HostResourceGroupArn();
    public void set_HostResourceGroupArn(string value);
    internal bool IsSetHostResourceGroupArn();
    public Nullable`1<int> get_PartitionNumber();
    public void set_PartitionNumber(Nullable`1<int> value);
    internal bool IsSetPartitionNumber();
    public string get_SpreadDomain();
    public void set_SpreadDomain(string value);
    internal bool IsSetSpreadDomain();
    public Tenancy get_Tenancy();
    public void set_Tenancy(Tenancy value);
    internal bool IsSetTenancy();
}
public class Amazon.EC2.Model.LaunchTemplatePrivateDnsNameOptions : object {
    private Nullable`1<bool> _enableResourceNameDnsAAAARecord;
    private Nullable`1<bool> _enableResourceNameDnsARecord;
    private HostnameType _hostnameType;
    public Nullable`1<bool> EnableResourceNameDnsAAAARecord { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsARecord { get; public set; }
    public HostnameType HostnameType { get; public set; }
    public Nullable`1<bool> get_EnableResourceNameDnsAAAARecord();
    public void set_EnableResourceNameDnsAAAARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsAAAARecord();
    public Nullable`1<bool> get_EnableResourceNameDnsARecord();
    public void set_EnableResourceNameDnsARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsARecord();
    public HostnameType get_HostnameType();
    public void set_HostnameType(HostnameType value);
    internal bool IsSetHostnameType();
}
public class Amazon.EC2.Model.LaunchTemplatePrivateDnsNameOptionsRequest : object {
    private Nullable`1<bool> _enableResourceNameDnsAAAARecord;
    private Nullable`1<bool> _enableResourceNameDnsARecord;
    private HostnameType _hostnameType;
    public Nullable`1<bool> EnableResourceNameDnsAAAARecord { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsARecord { get; public set; }
    public HostnameType HostnameType { get; public set; }
    public Nullable`1<bool> get_EnableResourceNameDnsAAAARecord();
    public void set_EnableResourceNameDnsAAAARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsAAAARecord();
    public Nullable`1<bool> get_EnableResourceNameDnsARecord();
    public void set_EnableResourceNameDnsARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsARecord();
    public HostnameType get_HostnameType();
    public void set_HostnameType(HostnameType value);
    internal bool IsSetHostnameType();
}
public class Amazon.EC2.Model.LaunchTemplatesMonitoring : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.LaunchTemplatesMonitoringRequest : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.LaunchTemplateSpecification : object {
    private string _launchTemplateId;
    private string _launchTemplateName;
    private string _version;
    public string LaunchTemplateId { get; public set; }
    public string LaunchTemplateName { get; public set; }
    public string Version { get; public set; }
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.EC2.Model.LaunchTemplateSpotMarketOptions : object {
    private Nullable`1<int> _blockDurationMinutes;
    private InstanceInterruptionBehavior _instanceInterruptionBehavior;
    private string _maxPrice;
    private SpotInstanceType _spotInstanceType;
    private Nullable`1<DateTime> _validUntil;
    public Nullable`1<int> BlockDurationMinutes { get; public set; }
    public InstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public string MaxPrice { get; public set; }
    public SpotInstanceType SpotInstanceType { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public Nullable`1<int> get_BlockDurationMinutes();
    public void set_BlockDurationMinutes(Nullable`1<int> value);
    internal bool IsSetBlockDurationMinutes();
    public InstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(InstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public string get_MaxPrice();
    public void set_MaxPrice(string value);
    internal bool IsSetMaxPrice();
    public SpotInstanceType get_SpotInstanceType();
    public void set_SpotInstanceType(SpotInstanceType value);
    internal bool IsSetSpotInstanceType();
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
    internal bool IsSetValidUntil();
}
public class Amazon.EC2.Model.LaunchTemplateSpotMarketOptionsRequest : object {
    private Nullable`1<int> _blockDurationMinutes;
    private InstanceInterruptionBehavior _instanceInterruptionBehavior;
    private string _maxPrice;
    private SpotInstanceType _spotInstanceType;
    private Nullable`1<DateTime> _validUntilUtc;
    private Nullable`1<DateTime> _validUntil;
    public Nullable`1<int> BlockDurationMinutes { get; public set; }
    public InstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public string MaxPrice { get; public set; }
    public SpotInstanceType SpotInstanceType { get; public set; }
    public Nullable`1<DateTime> ValidUntilUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidUntil is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidUntil { get; public set; }
    public Nullable`1<int> get_BlockDurationMinutes();
    public void set_BlockDurationMinutes(Nullable`1<int> value);
    internal bool IsSetBlockDurationMinutes();
    public InstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(InstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public string get_MaxPrice();
    public void set_MaxPrice(string value);
    internal bool IsSetMaxPrice();
    public SpotInstanceType get_SpotInstanceType();
    public void set_SpotInstanceType(SpotInstanceType value);
    internal bool IsSetSpotInstanceType();
    public Nullable`1<DateTime> get_ValidUntilUtc();
    public void set_ValidUntilUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidUntilUtc();
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.LaunchTemplateTagSpecification : object {
    private ResourceType _resourceType;
    private List`1<Tag> _tags;
    public ResourceType ResourceType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LaunchTemplateTagSpecificationRequest : object {
    private ResourceType _resourceType;
    private List`1<Tag> _tags;
    public ResourceType ResourceType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LaunchTemplateVersion : object {
    private string _createdBy;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<bool> _defaultVersion;
    private ResponseLaunchTemplateData _launchTemplateData;
    private string _launchTemplateId;
    private string _launchTemplateName;
    private string _versionDescription;
    private Nullable`1<long> _versionNumber;
    public string CreatedBy { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<bool> DefaultVersion { get; public set; }
    public ResponseLaunchTemplateData LaunchTemplateData { get; public set; }
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    [AWSPropertyAttribute]
public string VersionDescription { get; public set; }
    public Nullable`1<long> VersionNumber { get; public set; }
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    internal bool IsSetCreatedBy();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<bool> get_DefaultVersion();
    public void set_DefaultVersion(Nullable`1<bool> value);
    internal bool IsSetDefaultVersion();
    public ResponseLaunchTemplateData get_LaunchTemplateData();
    public void set_LaunchTemplateData(ResponseLaunchTemplateData value);
    internal bool IsSetLaunchTemplateData();
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
    public string get_VersionDescription();
    public void set_VersionDescription(string value);
    internal bool IsSetVersionDescription();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.EC2.Model.LicenseConfiguration : object {
    private string _licenseConfigurationArn;
    public string LicenseConfigurationArn { get; public set; }
    public string get_LicenseConfigurationArn();
    public void set_LicenseConfigurationArn(string value);
    internal bool IsSetLicenseConfigurationArn();
}
public class Amazon.EC2.Model.LicenseConfigurationRequest : object {
    private string _licenseConfigurationArn;
    public string LicenseConfigurationArn { get; public set; }
    public string get_LicenseConfigurationArn();
    public void set_LicenseConfigurationArn(string value);
    internal bool IsSetLicenseConfigurationArn();
}
internal class Amazon.EC2.Model.ListImagesInRecycleBinPaginator : object {
    private IAmazonEC2 _client;
    private ListImagesInRecycleBinRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListImagesInRecycleBinResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImageRecycleBinInfo> Images { get; }
    internal ListImagesInRecycleBinPaginator(IAmazonEC2 client, ListImagesInRecycleBinRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListImagesInRecycleBinResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ImageRecycleBinInfo> get_Images();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.ListImagesInRecycleBinPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-ListImagesInRecycleBinResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListImagesInRecycleBinResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.ListImagesInRecycleBinResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.ListImagesInRecycleBinRequest : AmazonEC2Request {
    private List`1<string> _imageIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<string> ImageIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_ImageIds();
    public void set_ImageIds(List`1<string> value);
    internal bool IsSetImageIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.ListImagesInRecycleBinResponse : AmazonWebServiceResponse {
    private List`1<ImageRecycleBinInfo> _images;
    private string _nextToken;
    public List`1<ImageRecycleBinInfo> Images { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ImageRecycleBinInfo> get_Images();
    public void set_Images(List`1<ImageRecycleBinInfo> value);
    internal bool IsSetImages();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.EC2.Model.ListSnapshotsInRecycleBinPaginator : object {
    private IAmazonEC2 _client;
    private ListSnapshotsInRecycleBinRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListSnapshotsInRecycleBinResponse> Responses { get; }
    public IPaginatedEnumerable`1<SnapshotRecycleBinInfo> Snapshots { get; }
    internal ListSnapshotsInRecycleBinPaginator(IAmazonEC2 client, ListSnapshotsInRecycleBinRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListSnapshotsInRecycleBinResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SnapshotRecycleBinInfo> get_Snapshots();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.ListSnapshotsInRecycleBinPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-ListSnapshotsInRecycleBinResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListSnapshotsInRecycleBinResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.ListSnapshotsInRecycleBinResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.ListSnapshotsInRecycleBinRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _snapshotIds;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> SnapshotIds { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SnapshotIds();
    public void set_SnapshotIds(List`1<string> value);
    internal bool IsSetSnapshotIds();
}
public class Amazon.EC2.Model.ListSnapshotsInRecycleBinResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SnapshotRecycleBinInfo> _snapshots;
    public string NextToken { get; public set; }
    public List`1<SnapshotRecycleBinInfo> Snapshots { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SnapshotRecycleBinInfo> get_Snapshots();
    public void set_Snapshots(List`1<SnapshotRecycleBinInfo> value);
    internal bool IsSetSnapshots();
}
public class Amazon.EC2.Model.LoadBalancersConfig : object {
    private ClassicLoadBalancersConfig _classicLoadBalancersConfig;
    private TargetGroupsConfig _targetGroupsConfig;
    public ClassicLoadBalancersConfig ClassicLoadBalancersConfig { get; public set; }
    public TargetGroupsConfig TargetGroupsConfig { get; public set; }
    public ClassicLoadBalancersConfig get_ClassicLoadBalancersConfig();
    public void set_ClassicLoadBalancersConfig(ClassicLoadBalancersConfig value);
    internal bool IsSetClassicLoadBalancersConfig();
    public TargetGroupsConfig get_TargetGroupsConfig();
    public void set_TargetGroupsConfig(TargetGroupsConfig value);
    internal bool IsSetTargetGroupsConfig();
}
public class Amazon.EC2.Model.LoadPermission : object {
    private PermissionGroup _group;
    private string _userId;
    public PermissionGroup Group { get; public set; }
    public string UserId { get; public set; }
    public PermissionGroup get_Group();
    public void set_Group(PermissionGroup value);
    internal bool IsSetGroup();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
}
public class Amazon.EC2.Model.LoadPermissionModifications : object {
    private List`1<LoadPermissionRequest> _add;
    private List`1<LoadPermissionRequest> _remove;
    public List`1<LoadPermissionRequest> Add { get; public set; }
    public List`1<LoadPermissionRequest> Remove { get; public set; }
    public List`1<LoadPermissionRequest> get_Add();
    public void set_Add(List`1<LoadPermissionRequest> value);
    internal bool IsSetAdd();
    public List`1<LoadPermissionRequest> get_Remove();
    public void set_Remove(List`1<LoadPermissionRequest> value);
    internal bool IsSetRemove();
}
public class Amazon.EC2.Model.LoadPermissionRequest : object {
    private PermissionGroup _group;
    private string _userId;
    public PermissionGroup Group { get; public set; }
    public string UserId { get; public set; }
    public PermissionGroup get_Group();
    public void set_Group(PermissionGroup value);
    internal bool IsSetGroup();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
}
public class Amazon.EC2.Model.LocalGateway : object {
    private string _localGatewayId;
    private string _outpostArn;
    private string _ownerId;
    private string _state;
    private List`1<Tag> _tags;
    public string LocalGatewayId { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public string State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LocalGatewayRoute : object {
    private string _coipPoolId;
    private string _destinationCidrBlock;
    private string _destinationPrefixListId;
    private string _localGatewayRouteTableArn;
    private string _localGatewayRouteTableId;
    private string _localGatewayVirtualInterfaceGroupId;
    private string _networkInterfaceId;
    private string _ownerId;
    private LocalGatewayRouteState _state;
    private string _subnetId;
    private LocalGatewayRouteType _type;
    public string CoipPoolId { get; public set; }
    public string DestinationCidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableArn { get; public set; }
    public string LocalGatewayRouteTableId { get; public set; }
    public string LocalGatewayVirtualInterfaceGroupId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string OwnerId { get; public set; }
    public LocalGatewayRouteState State { get; public set; }
    public string SubnetId { get; public set; }
    public LocalGatewayRouteType Type { get; public set; }
    public string get_CoipPoolId();
    public void set_CoipPoolId(string value);
    internal bool IsSetCoipPoolId();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_LocalGatewayRouteTableArn();
    public void set_LocalGatewayRouteTableArn(string value);
    internal bool IsSetLocalGatewayRouteTableArn();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_LocalGatewayVirtualInterfaceGroupId();
    public void set_LocalGatewayVirtualInterfaceGroupId(string value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroupId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public LocalGatewayRouteState get_State();
    public void set_State(LocalGatewayRouteState value);
    internal bool IsSetState();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public LocalGatewayRouteType get_Type();
    public void set_Type(LocalGatewayRouteType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.LocalGatewayRouteTable : object {
    private string _localGatewayId;
    private string _localGatewayRouteTableArn;
    private string _localGatewayRouteTableId;
    private LocalGatewayRouteTableMode _mode;
    private string _outpostArn;
    private string _ownerId;
    private string _state;
    private StateReason _stateReason;
    private List`1<Tag> _tags;
    public string LocalGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableArn { get; public set; }
    public string LocalGatewayRouteTableId { get; public set; }
    public LocalGatewayRouteTableMode Mode { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public string State { get; public set; }
    public StateReason StateReason { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_LocalGatewayRouteTableArn();
    public void set_LocalGatewayRouteTableArn(string value);
    internal bool IsSetLocalGatewayRouteTableArn();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public LocalGatewayRouteTableMode get_Mode();
    public void set_Mode(LocalGatewayRouteTableMode value);
    internal bool IsSetMode();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public StateReason get_StateReason();
    public void set_StateReason(StateReason value);
    internal bool IsSetStateReason();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LocalGatewayRouteTableVirtualInterfaceGroupAssociation : object {
    private string _localGatewayId;
    private string _localGatewayRouteTableArn;
    private string _localGatewayRouteTableId;
    private string _localGatewayRouteTableVirtualInterfaceGroupAssociationId;
    private string _localGatewayVirtualInterfaceGroupId;
    private string _ownerId;
    private string _state;
    private List`1<Tag> _tags;
    public string LocalGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableArn { get; public set; }
    public string LocalGatewayRouteTableId { get; public set; }
    public string LocalGatewayRouteTableVirtualInterfaceGroupAssociationId { get; public set; }
    public string LocalGatewayVirtualInterfaceGroupId { get; public set; }
    public string OwnerId { get; public set; }
    public string State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_LocalGatewayRouteTableArn();
    public void set_LocalGatewayRouteTableArn(string value);
    internal bool IsSetLocalGatewayRouteTableArn();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_LocalGatewayRouteTableVirtualInterfaceGroupAssociationId();
    public void set_LocalGatewayRouteTableVirtualInterfaceGroupAssociationId(string value);
    internal bool IsSetLocalGatewayRouteTableVirtualInterfaceGroupAssociationId();
    public string get_LocalGatewayVirtualInterfaceGroupId();
    public void set_LocalGatewayVirtualInterfaceGroupId(string value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroupId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LocalGatewayRouteTableVpcAssociation : object {
    private string _localGatewayId;
    private string _localGatewayRouteTableArn;
    private string _localGatewayRouteTableId;
    private string _localGatewayRouteTableVpcAssociationId;
    private string _ownerId;
    private string _state;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string LocalGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableArn { get; public set; }
    public string LocalGatewayRouteTableId { get; public set; }
    public string LocalGatewayRouteTableVpcAssociationId { get; public set; }
    public string OwnerId { get; public set; }
    public string State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_LocalGatewayRouteTableArn();
    public void set_LocalGatewayRouteTableArn(string value);
    internal bool IsSetLocalGatewayRouteTableArn();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_LocalGatewayRouteTableVpcAssociationId();
    public void set_LocalGatewayRouteTableVpcAssociationId(string value);
    internal bool IsSetLocalGatewayRouteTableVpcAssociationId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.LocalGatewayVirtualInterface : object {
    private string _localAddress;
    private Nullable`1<int> _localBgpAsn;
    private string _localGatewayId;
    private string _localGatewayVirtualInterfaceId;
    private string _ownerId;
    private string _peerAddress;
    private Nullable`1<int> _peerBgpAsn;
    private List`1<Tag> _tags;
    private Nullable`1<int> _vlan;
    public string LocalAddress { get; public set; }
    public Nullable`1<int> LocalBgpAsn { get; public set; }
    public string LocalGatewayId { get; public set; }
    public string LocalGatewayVirtualInterfaceId { get; public set; }
    public string OwnerId { get; public set; }
    public string PeerAddress { get; public set; }
    public Nullable`1<int> PeerBgpAsn { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<int> Vlan { get; public set; }
    public string get_LocalAddress();
    public void set_LocalAddress(string value);
    internal bool IsSetLocalAddress();
    public Nullable`1<int> get_LocalBgpAsn();
    public void set_LocalBgpAsn(Nullable`1<int> value);
    internal bool IsSetLocalBgpAsn();
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_LocalGatewayVirtualInterfaceId();
    public void set_LocalGatewayVirtualInterfaceId(string value);
    internal bool IsSetLocalGatewayVirtualInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PeerAddress();
    public void set_PeerAddress(string value);
    internal bool IsSetPeerAddress();
    public Nullable`1<int> get_PeerBgpAsn();
    public void set_PeerBgpAsn(Nullable`1<int> value);
    internal bool IsSetPeerBgpAsn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_Vlan();
    public void set_Vlan(Nullable`1<int> value);
    internal bool IsSetVlan();
}
public class Amazon.EC2.Model.LocalGatewayVirtualInterfaceGroup : object {
    private string _localGatewayId;
    private string _localGatewayVirtualInterfaceGroupId;
    private List`1<string> _localGatewayVirtualInterfaceIds;
    private string _ownerId;
    private List`1<Tag> _tags;
    public string LocalGatewayId { get; public set; }
    public string LocalGatewayVirtualInterfaceGroupId { get; public set; }
    public List`1<string> LocalGatewayVirtualInterfaceIds { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_LocalGatewayVirtualInterfaceGroupId();
    public void set_LocalGatewayVirtualInterfaceGroupId(string value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroupId();
    public List`1<string> get_LocalGatewayVirtualInterfaceIds();
    public void set_LocalGatewayVirtualInterfaceIds(List`1<string> value);
    internal bool IsSetLocalGatewayVirtualInterfaceIds();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.LockedSnapshotsInfo : object {
    private Nullable`1<int> _coolOffPeriod;
    private Nullable`1<DateTime> _coolOffPeriodExpiresOn;
    private Nullable`1<DateTime> _lockCreatedOn;
    private Nullable`1<int> _lockDuration;
    private Nullable`1<DateTime> _lockDurationStartTime;
    private Nullable`1<DateTime> _lockExpiresOn;
    private LockState _lockState;
    private string _ownerId;
    private string _snapshotId;
    public Nullable`1<int> CoolOffPeriod { get; public set; }
    public Nullable`1<DateTime> CoolOffPeriodExpiresOn { get; public set; }
    public Nullable`1<DateTime> LockCreatedOn { get; public set; }
    public Nullable`1<int> LockDuration { get; public set; }
    public Nullable`1<DateTime> LockDurationStartTime { get; public set; }
    public Nullable`1<DateTime> LockExpiresOn { get; public set; }
    public LockState LockState { get; public set; }
    public string OwnerId { get; public set; }
    public string SnapshotId { get; public set; }
    public Nullable`1<int> get_CoolOffPeriod();
    public void set_CoolOffPeriod(Nullable`1<int> value);
    internal bool IsSetCoolOffPeriod();
    public Nullable`1<DateTime> get_CoolOffPeriodExpiresOn();
    public void set_CoolOffPeriodExpiresOn(Nullable`1<DateTime> value);
    internal bool IsSetCoolOffPeriodExpiresOn();
    public Nullable`1<DateTime> get_LockCreatedOn();
    public void set_LockCreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetLockCreatedOn();
    public Nullable`1<int> get_LockDuration();
    public void set_LockDuration(Nullable`1<int> value);
    internal bool IsSetLockDuration();
    public Nullable`1<DateTime> get_LockDurationStartTime();
    public void set_LockDurationStartTime(Nullable`1<DateTime> value);
    internal bool IsSetLockDurationStartTime();
    public Nullable`1<DateTime> get_LockExpiresOn();
    public void set_LockExpiresOn(Nullable`1<DateTime> value);
    internal bool IsSetLockExpiresOn();
    public LockState get_LockState();
    public void set_LockState(LockState value);
    internal bool IsSetLockState();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.LockSnapshotRequest : AmazonEC2Request {
    private Nullable`1<int> _coolOffPeriod;
    private Nullable`1<DateTime> _expirationDate;
    private Nullable`1<int> _lockDuration;
    private LockMode _lockMode;
    private string _snapshotId;
    [AWSPropertyAttribute]
public Nullable`1<int> CoolOffPeriod { get; public set; }
    public Nullable`1<DateTime> ExpirationDate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> LockDuration { get; public set; }
    [AWSPropertyAttribute]
public LockMode LockMode { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public Nullable`1<int> get_CoolOffPeriod();
    public void set_CoolOffPeriod(Nullable`1<int> value);
    internal bool IsSetCoolOffPeriod();
    public Nullable`1<DateTime> get_ExpirationDate();
    public void set_ExpirationDate(Nullable`1<DateTime> value);
    internal bool IsSetExpirationDate();
    public Nullable`1<int> get_LockDuration();
    public void set_LockDuration(Nullable`1<int> value);
    internal bool IsSetLockDuration();
    public LockMode get_LockMode();
    public void set_LockMode(LockMode value);
    internal bool IsSetLockMode();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.LockSnapshotResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _coolOffPeriod;
    private Nullable`1<DateTime> _coolOffPeriodExpiresOn;
    private Nullable`1<DateTime> _lockCreatedOn;
    private Nullable`1<int> _lockDuration;
    private Nullable`1<DateTime> _lockDurationStartTime;
    private Nullable`1<DateTime> _lockExpiresOn;
    private LockState _lockState;
    private string _snapshotId;
    public Nullable`1<int> CoolOffPeriod { get; public set; }
    public Nullable`1<DateTime> CoolOffPeriodExpiresOn { get; public set; }
    public Nullable`1<DateTime> LockCreatedOn { get; public set; }
    public Nullable`1<int> LockDuration { get; public set; }
    public Nullable`1<DateTime> LockDurationStartTime { get; public set; }
    public Nullable`1<DateTime> LockExpiresOn { get; public set; }
    public LockState LockState { get; public set; }
    public string SnapshotId { get; public set; }
    public Nullable`1<int> get_CoolOffPeriod();
    public void set_CoolOffPeriod(Nullable`1<int> value);
    internal bool IsSetCoolOffPeriod();
    public Nullable`1<DateTime> get_CoolOffPeriodExpiresOn();
    public void set_CoolOffPeriodExpiresOn(Nullable`1<DateTime> value);
    internal bool IsSetCoolOffPeriodExpiresOn();
    public Nullable`1<DateTime> get_LockCreatedOn();
    public void set_LockCreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetLockCreatedOn();
    public Nullable`1<int> get_LockDuration();
    public void set_LockDuration(Nullable`1<int> value);
    internal bool IsSetLockDuration();
    public Nullable`1<DateTime> get_LockDurationStartTime();
    public void set_LockDurationStartTime(Nullable`1<DateTime> value);
    internal bool IsSetLockDurationStartTime();
    public Nullable`1<DateTime> get_LockExpiresOn();
    public void set_LockExpiresOn(Nullable`1<DateTime> value);
    internal bool IsSetLockExpiresOn();
    public LockState get_LockState();
    public void set_LockState(LockState value);
    internal bool IsSetLockState();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.MacHost : object {
    private string _hostId;
    private List`1<string> _macOSLatestSupportedVersions;
    public string HostId { get; public set; }
    public List`1<string> MacOSLatestSupportedVersions { get; public set; }
    public string get_HostId();
    public void set_HostId(string value);
    internal bool IsSetHostId();
    public List`1<string> get_MacOSLatestSupportedVersions();
    public void set_MacOSLatestSupportedVersions(List`1<string> value);
    internal bool IsSetMacOSLatestSupportedVersions();
}
public class Amazon.EC2.Model.MaintenanceDetails : object {
    private Nullable`1<DateTime> _lastMaintenanceApplied;
    private Nullable`1<DateTime> _maintenanceAutoAppliedAfter;
    private string _pendingMaintenance;
    public Nullable`1<DateTime> LastMaintenanceApplied { get; public set; }
    public Nullable`1<DateTime> MaintenanceAutoAppliedAfter { get; public set; }
    public string PendingMaintenance { get; public set; }
    public Nullable`1<DateTime> get_LastMaintenanceApplied();
    public void set_LastMaintenanceApplied(Nullable`1<DateTime> value);
    internal bool IsSetLastMaintenanceApplied();
    public Nullable`1<DateTime> get_MaintenanceAutoAppliedAfter();
    public void set_MaintenanceAutoAppliedAfter(Nullable`1<DateTime> value);
    internal bool IsSetMaintenanceAutoAppliedAfter();
    public string get_PendingMaintenance();
    public void set_PendingMaintenance(string value);
    internal bool IsSetPendingMaintenance();
}
public class Amazon.EC2.Model.ManagedPrefixList : object {
    private string _addressFamily;
    private Nullable`1<int> _maxEntries;
    private string _ownerId;
    private string _prefixListArn;
    private string _prefixListId;
    private string _prefixListName;
    private PrefixListState _state;
    private string _stateMessage;
    private List`1<Tag> _tags;
    private Nullable`1<long> _version;
    public string AddressFamily { get; public set; }
    public Nullable`1<int> MaxEntries { get; public set; }
    public string OwnerId { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListArn { get; public set; }
    public string PrefixListId { get; public set; }
    public string PrefixListName { get; public set; }
    public PrefixListState State { get; public set; }
    public string StateMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public string get_AddressFamily();
    public void set_AddressFamily(string value);
    internal bool IsSetAddressFamily();
    public Nullable`1<int> get_MaxEntries();
    public void set_MaxEntries(Nullable`1<int> value);
    internal bool IsSetMaxEntries();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PrefixListArn();
    public void set_PrefixListArn(string value);
    internal bool IsSetPrefixListArn();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_PrefixListName();
    public void set_PrefixListName(string value);
    internal bool IsSetPrefixListName();
    public PrefixListState get_State();
    public void set_State(PrefixListState value);
    internal bool IsSetState();
    public string get_StateMessage();
    public void set_StateMessage(string value);
    internal bool IsSetStateMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.EC2.Model.MediaAcceleratorInfo : object {
    private List`1<MediaDeviceInfo> _accelerators;
    private Nullable`1<int> _totalMediaMemoryInMiB;
    public List`1<MediaDeviceInfo> Accelerators { get; public set; }
    public Nullable`1<int> TotalMediaMemoryInMiB { get; public set; }
    public List`1<MediaDeviceInfo> get_Accelerators();
    public void set_Accelerators(List`1<MediaDeviceInfo> value);
    internal bool IsSetAccelerators();
    public Nullable`1<int> get_TotalMediaMemoryInMiB();
    public void set_TotalMediaMemoryInMiB(Nullable`1<int> value);
    internal bool IsSetTotalMediaMemoryInMiB();
}
public class Amazon.EC2.Model.MediaDeviceInfo : object {
    private Nullable`1<int> _count;
    private string _manufacturer;
    private MediaDeviceMemoryInfo _memoryInfo;
    private string _name;
    public Nullable`1<int> Count { get; public set; }
    public string Manufacturer { get; public set; }
    public MediaDeviceMemoryInfo MemoryInfo { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public string get_Manufacturer();
    public void set_Manufacturer(string value);
    internal bool IsSetManufacturer();
    public MediaDeviceMemoryInfo get_MemoryInfo();
    public void set_MemoryInfo(MediaDeviceMemoryInfo value);
    internal bool IsSetMemoryInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.MediaDeviceMemoryInfo : object {
    private Nullable`1<int> _sizeInMiB;
    public Nullable`1<int> SizeInMiB { get; public set; }
    public Nullable`1<int> get_SizeInMiB();
    public void set_SizeInMiB(Nullable`1<int> value);
    internal bool IsSetSizeInMiB();
}
public class Amazon.EC2.Model.MemoryGiBPerVCpu : object {
    private Nullable`1<double> _max;
    private Nullable`1<double> _min;
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<double> get_Max();
    public void set_Max(Nullable`1<double> value);
    internal bool IsSetMax();
    public Nullable`1<double> get_Min();
    public void set_Min(Nullable`1<double> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.MemoryGiBPerVCpuRequest : object {
    private Nullable`1<double> _max;
    private Nullable`1<double> _min;
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<double> get_Max();
    public void set_Max(Nullable`1<double> value);
    internal bool IsSetMax();
    public Nullable`1<double> get_Min();
    public void set_Min(Nullable`1<double> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.MemoryInfo : object {
    private Nullable`1<long> _sizeInMiB;
    public Nullable`1<long> SizeInMiB { get; public set; }
    public Nullable`1<long> get_SizeInMiB();
    public void set_SizeInMiB(Nullable`1<long> value);
    internal bool IsSetSizeInMiB();
}
public class Amazon.EC2.Model.MemoryMiB : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.MemoryMiBRequest : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.MetricPoint : object {
    private Nullable`1<DateTime> _endDate;
    private Nullable`1<DateTime> _startDate;
    private string _status;
    private Nullable`1<float> _value;
    public Nullable`1<DateTime> EndDate { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<float> Value { get; public set; }
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<float> get_Value();
    public void set_Value(Nullable`1<float> value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.ModifyAddressAttributeRequest : AmazonEC2Request {
    private string _allocationId;
    private string _domainName;
    [AWSPropertyAttribute]
public string AllocationId { get; public set; }
    public string DomainName { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.EC2.Model.ModifyAddressAttributeResponse : AmazonWebServiceResponse {
    private AddressAttribute _address;
    public AddressAttribute Address { get; public set; }
    public AddressAttribute get_Address();
    public void set_Address(AddressAttribute value);
    internal bool IsSetAddress();
}
public class Amazon.EC2.Model.ModifyAvailabilityZoneGroupRequest : AmazonEC2Request {
    private string _groupName;
    private ModifyAvailabilityZoneOptInStatus _optInStatus;
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public ModifyAvailabilityZoneOptInStatus OptInStatus { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public ModifyAvailabilityZoneOptInStatus get_OptInStatus();
    public void set_OptInStatus(ModifyAvailabilityZoneOptInStatus value);
    internal bool IsSetOptInStatus();
}
public class Amazon.EC2.Model.ModifyAvailabilityZoneGroupResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyCapacityReservationFleetRequest : AmazonEC2Request {
    private string _capacityReservationFleetId;
    private Nullable`1<DateTime> _endDate;
    private Nullable`1<bool> _removeEndDate;
    private Nullable`1<int> _totalTargetCapacity;
    [AWSPropertyAttribute]
public string CapacityReservationFleetId { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public Nullable`1<bool> RemoveEndDate { get; public set; }
    public Nullable`1<int> TotalTargetCapacity { get; public set; }
    public string get_CapacityReservationFleetId();
    public void set_CapacityReservationFleetId(string value);
    internal bool IsSetCapacityReservationFleetId();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public Nullable`1<bool> get_RemoveEndDate();
    public void set_RemoveEndDate(Nullable`1<bool> value);
    internal bool IsSetRemoveEndDate();
    public Nullable`1<int> get_TotalTargetCapacity();
    public void set_TotalTargetCapacity(Nullable`1<int> value);
    internal bool IsSetTotalTargetCapacity();
}
public class Amazon.EC2.Model.ModifyCapacityReservationFleetResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyCapacityReservationRequest : AmazonEC2Request {
    private Nullable`1<bool> _accept;
    private string _additionalInfo;
    private string _capacityReservationId;
    private Nullable`1<DateTime> _endDate;
    private EndDateType _endDateType;
    private Nullable`1<int> _instanceCount;
    public Nullable`1<bool> Accept { get; public set; }
    public string AdditionalInfo { get; public set; }
    [AWSPropertyAttribute]
public string CapacityReservationId { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public EndDateType EndDateType { get; public set; }
    public Nullable`1<int> InstanceCount { get; public set; }
    public Nullable`1<bool> get_Accept();
    public void set_Accept(Nullable`1<bool> value);
    internal bool IsSetAccept();
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public string get_CapacityReservationId();
    public void set_CapacityReservationId(string value);
    internal bool IsSetCapacityReservationId();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public EndDateType get_EndDateType();
    public void set_EndDateType(EndDateType value);
    internal bool IsSetEndDateType();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
}
public class Amazon.EC2.Model.ModifyCapacityReservationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyClientVpnEndpointRequest : AmazonEC2Request {
    private ClientConnectOptions _clientConnectOptions;
    private ClientLoginBannerOptions _clientLoginBannerOptions;
    private string _clientVpnEndpointId;
    private ConnectionLogOptions _connectionLogOptions;
    private string _description;
    private DnsServersOptionsModifyStructure _dnsServers;
    private List`1<string> _securityGroupIds;
    private SelfServicePortal _selfServicePortal;
    private string _serverCertificateArn;
    private Nullable`1<int> _sessionTimeoutHours;
    private Nullable`1<bool> _splitTunnel;
    private string _vpcId;
    private Nullable`1<int> _vpnPort;
    public ClientConnectOptions ClientConnectOptions { get; public set; }
    public ClientLoginBannerOptions ClientLoginBannerOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public ConnectionLogOptions ConnectionLogOptions { get; public set; }
    public string Description { get; public set; }
    public DnsServersOptionsModifyStructure DnsServers { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public SelfServicePortal SelfServicePortal { get; public set; }
    public string ServerCertificateArn { get; public set; }
    public Nullable`1<int> SessionTimeoutHours { get; public set; }
    public Nullable`1<bool> SplitTunnel { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> VpnPort { get; public set; }
    public ClientConnectOptions get_ClientConnectOptions();
    public void set_ClientConnectOptions(ClientConnectOptions value);
    internal bool IsSetClientConnectOptions();
    public ClientLoginBannerOptions get_ClientLoginBannerOptions();
    public void set_ClientLoginBannerOptions(ClientLoginBannerOptions value);
    internal bool IsSetClientLoginBannerOptions();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public ConnectionLogOptions get_ConnectionLogOptions();
    public void set_ConnectionLogOptions(ConnectionLogOptions value);
    internal bool IsSetConnectionLogOptions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DnsServersOptionsModifyStructure get_DnsServers();
    public void set_DnsServers(DnsServersOptionsModifyStructure value);
    internal bool IsSetDnsServers();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public SelfServicePortal get_SelfServicePortal();
    public void set_SelfServicePortal(SelfServicePortal value);
    internal bool IsSetSelfServicePortal();
    public string get_ServerCertificateArn();
    public void set_ServerCertificateArn(string value);
    internal bool IsSetServerCertificateArn();
    public Nullable`1<int> get_SessionTimeoutHours();
    public void set_SessionTimeoutHours(Nullable`1<int> value);
    internal bool IsSetSessionTimeoutHours();
    public Nullable`1<bool> get_SplitTunnel();
    public void set_SplitTunnel(Nullable`1<bool> value);
    internal bool IsSetSplitTunnel();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public Nullable`1<int> get_VpnPort();
    public void set_VpnPort(Nullable`1<int> value);
    internal bool IsSetVpnPort();
}
public class Amazon.EC2.Model.ModifyClientVpnEndpointResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyDefaultCreditSpecificationRequest : AmazonEC2Request {
    private string _cpuCredits;
    private UnlimitedSupportedInstanceFamily _instanceFamily;
    [AWSPropertyAttribute]
public string CpuCredits { get; public set; }
    [AWSPropertyAttribute]
public UnlimitedSupportedInstanceFamily InstanceFamily { get; public set; }
    public string get_CpuCredits();
    public void set_CpuCredits(string value);
    internal bool IsSetCpuCredits();
    public UnlimitedSupportedInstanceFamily get_InstanceFamily();
    public void set_InstanceFamily(UnlimitedSupportedInstanceFamily value);
    internal bool IsSetInstanceFamily();
}
public class Amazon.EC2.Model.ModifyDefaultCreditSpecificationResponse : AmazonWebServiceResponse {
    private InstanceFamilyCreditSpecification _instanceFamilyCreditSpecification;
    public InstanceFamilyCreditSpecification InstanceFamilyCreditSpecification { get; public set; }
    public InstanceFamilyCreditSpecification get_InstanceFamilyCreditSpecification();
    public void set_InstanceFamilyCreditSpecification(InstanceFamilyCreditSpecification value);
    internal bool IsSetInstanceFamilyCreditSpecification();
}
public class Amazon.EC2.Model.ModifyEbsDefaultKmsKeyIdRequest : AmazonEC2Request {
    private string _kmsKeyId;
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
}
public class Amazon.EC2.Model.ModifyEbsDefaultKmsKeyIdResponse : AmazonWebServiceResponse {
    private string _kmsKeyId;
    public string KmsKeyId { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
}
public class Amazon.EC2.Model.ModifyFleetRequest : AmazonEC2Request {
    private string _context;
    private FleetExcessCapacityTerminationPolicy _excessCapacityTerminationPolicy;
    private string _fleetId;
    private List`1<FleetLaunchTemplateConfigRequest> _launchTemplateConfigs;
    private TargetCapacitySpecificationRequest _targetCapacitySpecification;
    public string Context { get; public set; }
    public FleetExcessCapacityTerminationPolicy ExcessCapacityTerminationPolicy { get; public set; }
    [AWSPropertyAttribute]
public string FleetId { get; public set; }
    [AWSPropertyAttribute]
public List`1<FleetLaunchTemplateConfigRequest> LaunchTemplateConfigs { get; public set; }
    public TargetCapacitySpecificationRequest TargetCapacitySpecification { get; public set; }
    public string get_Context();
    public void set_Context(string value);
    internal bool IsSetContext();
    public FleetExcessCapacityTerminationPolicy get_ExcessCapacityTerminationPolicy();
    public void set_ExcessCapacityTerminationPolicy(FleetExcessCapacityTerminationPolicy value);
    internal bool IsSetExcessCapacityTerminationPolicy();
    public string get_FleetId();
    public void set_FleetId(string value);
    internal bool IsSetFleetId();
    public List`1<FleetLaunchTemplateConfigRequest> get_LaunchTemplateConfigs();
    public void set_LaunchTemplateConfigs(List`1<FleetLaunchTemplateConfigRequest> value);
    internal bool IsSetLaunchTemplateConfigs();
    public TargetCapacitySpecificationRequest get_TargetCapacitySpecification();
    public void set_TargetCapacitySpecification(TargetCapacitySpecificationRequest value);
    internal bool IsSetTargetCapacitySpecification();
}
public class Amazon.EC2.Model.ModifyFleetResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyFpgaImageAttributeRequest : AmazonEC2Request {
    private FpgaImageAttributeName _attribute;
    private string _description;
    private string _fpgaImageId;
    private LoadPermissionModifications _loadPermission;
    private string _name;
    private OperationType _operationType;
    private List`1<string> _productCodes;
    private List`1<string> _userGroups;
    private List`1<string> _userIds;
    public FpgaImageAttributeName Attribute { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FpgaImageId { get; public set; }
    public LoadPermissionModifications LoadPermission { get; public set; }
    public string Name { get; public set; }
    public OperationType OperationType { get; public set; }
    public List`1<string> ProductCodes { get; public set; }
    public List`1<string> UserGroups { get; public set; }
    public List`1<string> UserIds { get; public set; }
    public FpgaImageAttributeName get_Attribute();
    public void set_Attribute(FpgaImageAttributeName value);
    internal bool IsSetAttribute();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
    public LoadPermissionModifications get_LoadPermission();
    public void set_LoadPermission(LoadPermissionModifications value);
    internal bool IsSetLoadPermission();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OperationType get_OperationType();
    public void set_OperationType(OperationType value);
    internal bool IsSetOperationType();
    public List`1<string> get_ProductCodes();
    public void set_ProductCodes(List`1<string> value);
    internal bool IsSetProductCodes();
    public List`1<string> get_UserGroups();
    public void set_UserGroups(List`1<string> value);
    internal bool IsSetUserGroups();
    public List`1<string> get_UserIds();
    public void set_UserIds(List`1<string> value);
    internal bool IsSetUserIds();
}
public class Amazon.EC2.Model.ModifyFpgaImageAttributeResponse : AmazonWebServiceResponse {
    private FpgaImageAttribute _fpgaImageAttribute;
    public FpgaImageAttribute FpgaImageAttribute { get; public set; }
    public FpgaImageAttribute get_FpgaImageAttribute();
    public void set_FpgaImageAttribute(FpgaImageAttribute value);
    internal bool IsSetFpgaImageAttribute();
}
public class Amazon.EC2.Model.ModifyHostsRequest : AmazonEC2Request {
    private AutoPlacement _autoPlacement;
    private List`1<string> _hostIds;
    private HostMaintenance _hostMaintenance;
    private HostRecovery _hostRecovery;
    private string _instanceFamily;
    private string _instanceType;
    public AutoPlacement AutoPlacement { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> HostIds { get; public set; }
    public HostMaintenance HostMaintenance { get; public set; }
    public HostRecovery HostRecovery { get; public set; }
    public string InstanceFamily { get; public set; }
    public string InstanceType { get; public set; }
    public AutoPlacement get_AutoPlacement();
    public void set_AutoPlacement(AutoPlacement value);
    internal bool IsSetAutoPlacement();
    public List`1<string> get_HostIds();
    public void set_HostIds(List`1<string> value);
    internal bool IsSetHostIds();
    public HostMaintenance get_HostMaintenance();
    public void set_HostMaintenance(HostMaintenance value);
    internal bool IsSetHostMaintenance();
    public HostRecovery get_HostRecovery();
    public void set_HostRecovery(HostRecovery value);
    internal bool IsSetHostRecovery();
    public string get_InstanceFamily();
    public void set_InstanceFamily(string value);
    internal bool IsSetInstanceFamily();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
}
public class Amazon.EC2.Model.ModifyHostsResponse : AmazonWebServiceResponse {
    private List`1<string> _successful;
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<string> Successful { get; public set; }
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<string> get_Successful();
    public void set_Successful(List`1<string> value);
    internal bool IsSetSuccessful();
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.ModifyIdentityIdFormatRequest : AmazonEC2Request {
    private string _principalArn;
    private string _resource;
    private Nullable`1<bool> _useLongIds;
    [AWSPropertyAttribute]
public string PrincipalArn { get; public set; }
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> UseLongIds { get; public set; }
    public string get_PrincipalArn();
    public void set_PrincipalArn(string value);
    internal bool IsSetPrincipalArn();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public Nullable`1<bool> get_UseLongIds();
    public void set_UseLongIds(Nullable`1<bool> value);
    internal bool IsSetUseLongIds();
}
public class Amazon.EC2.Model.ModifyIdentityIdFormatResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyIdFormatRequest : AmazonEC2Request {
    private string _resource;
    private Nullable`1<bool> _useLongIds;
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> UseLongIds { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public Nullable`1<bool> get_UseLongIds();
    public void set_UseLongIds(Nullable`1<bool> value);
    internal bool IsSetUseLongIds();
}
public class Amazon.EC2.Model.ModifyIdFormatResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyImageAttributeRequest : AmazonEC2Request {
    private string _attribute;
    private string _description;
    private string _imageId;
    private string _imdsSupport;
    private LaunchPermissionModifications _launchPermission;
    private OperationType _operationType;
    private List`1<string> _organizationalUnitArns;
    private List`1<string> _organizationArns;
    private List`1<string> _productCodes;
    private List`1<string> _userGroups;
    private List`1<string> _userIds;
    private string _value;
    public string Attribute { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string ImdsSupport { get; public set; }
    public LaunchPermissionModifications LaunchPermission { get; public set; }
    public OperationType OperationType { get; public set; }
    public List`1<string> OrganizationalUnitArns { get; public set; }
    public List`1<string> OrganizationArns { get; public set; }
    public List`1<string> ProductCodes { get; public set; }
    public List`1<string> UserGroups { get; public set; }
    public List`1<string> UserIds { get; public set; }
    public string Value { get; public set; }
    public ModifyImageAttributeRequest(string imageId, string attribute);
    public string get_Attribute();
    public void set_Attribute(string value);
    internal bool IsSetAttribute();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImdsSupport();
    public void set_ImdsSupport(string value);
    internal bool IsSetImdsSupport();
    public LaunchPermissionModifications get_LaunchPermission();
    public void set_LaunchPermission(LaunchPermissionModifications value);
    internal bool IsSetLaunchPermission();
    public OperationType get_OperationType();
    public void set_OperationType(OperationType value);
    internal bool IsSetOperationType();
    public List`1<string> get_OrganizationalUnitArns();
    public void set_OrganizationalUnitArns(List`1<string> value);
    internal bool IsSetOrganizationalUnitArns();
    public List`1<string> get_OrganizationArns();
    public void set_OrganizationArns(List`1<string> value);
    internal bool IsSetOrganizationArns();
    public List`1<string> get_ProductCodes();
    public void set_ProductCodes(List`1<string> value);
    internal bool IsSetProductCodes();
    public List`1<string> get_UserGroups();
    public void set_UserGroups(List`1<string> value);
    internal bool IsSetUserGroups();
    public List`1<string> get_UserIds();
    public void set_UserIds(List`1<string> value);
    internal bool IsSetUserIds();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.ModifyImageAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyInstanceAttributeRequest : AmazonEC2Request {
    private InstanceAttributeName _attribute;
    private List`1<InstanceBlockDeviceMappingSpecification> _blockDeviceMappings;
    private Nullable`1<bool> _disableApiStop;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private Nullable`1<bool> _enaSupport;
    private List`1<string> _groups;
    private string _instanceId;
    private string _instanceInitiatedShutdownBehavior;
    private string _instanceType;
    private string _kernel;
    private string _ramdisk;
    private Nullable`1<bool> _sourceDestCheck;
    private string _sriovNetSupport;
    private string _userData;
    private string _value;
    public InstanceAttributeName Attribute { get; public set; }
    public List`1<InstanceBlockDeviceMappingSpecification> BlockDeviceMappings { get; public set; }
    public Nullable`1<bool> DisableApiStop { get; public set; }
    public Nullable`1<bool> DisableApiTermination { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public Nullable`1<bool> EnaSupport { get; public set; }
    public List`1<string> Groups { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string InstanceInitiatedShutdownBehavior { get; public set; }
    public string InstanceType { get; public set; }
    public string Kernel { get; public set; }
    public string Ramdisk { get; public set; }
    public Nullable`1<bool> SourceDestCheck { get; public set; }
    public string SriovNetSupport { get; public set; }
    public string UserData { get; public set; }
    public string Value { get; public set; }
    public ModifyInstanceAttributeRequest(string instanceId, InstanceAttributeName attribute);
    public InstanceAttributeName get_Attribute();
    public void set_Attribute(InstanceAttributeName value);
    internal bool IsSetAttribute();
    public List`1<InstanceBlockDeviceMappingSpecification> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<InstanceBlockDeviceMappingSpecification> value);
    internal bool IsSetBlockDeviceMappings();
    public Nullable`1<bool> get_DisableApiStop();
    public void set_DisableApiStop(Nullable`1<bool> value);
    internal bool IsSetDisableApiStop();
    public Nullable`1<bool> get_DisableApiTermination();
    public void set_DisableApiTermination(Nullable`1<bool> value);
    internal bool IsSetDisableApiTermination();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public Nullable`1<bool> get_EnaSupport();
    public void set_EnaSupport(Nullable`1<bool> value);
    internal bool IsSetEnaSupport();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(string value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_Kernel();
    public void set_Kernel(string value);
    internal bool IsSetKernel();
    public string get_Ramdisk();
    public void set_Ramdisk(string value);
    internal bool IsSetRamdisk();
    public Nullable`1<bool> get_SourceDestCheck();
    public void set_SourceDestCheck(Nullable`1<bool> value);
    internal bool IsSetSourceDestCheck();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.ModifyInstanceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyInstanceCapacityReservationAttributesRequest : AmazonEC2Request {
    private CapacityReservationSpecification _capacityReservationSpecification;
    private string _instanceId;
    [AWSPropertyAttribute]
public CapacityReservationSpecification CapacityReservationSpecification { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public CapacityReservationSpecification get_CapacityReservationSpecification();
    public void set_CapacityReservationSpecification(CapacityReservationSpecification value);
    internal bool IsSetCapacityReservationSpecification();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.ModifyInstanceCapacityReservationAttributesResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyInstanceCreditSpecificationRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<InstanceCreditSpecificationRequest> _instanceCreditSpecifications;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<InstanceCreditSpecificationRequest> InstanceCreditSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<InstanceCreditSpecificationRequest> get_InstanceCreditSpecifications();
    public void set_InstanceCreditSpecifications(List`1<InstanceCreditSpecificationRequest> value);
    internal bool IsSetInstanceCreditSpecifications();
}
public class Amazon.EC2.Model.ModifyInstanceCreditSpecificationResponse : AmazonWebServiceResponse {
    private List`1<SuccessfulInstanceCreditSpecificationItem> _successfulInstanceCreditSpecifications;
    private List`1<UnsuccessfulInstanceCreditSpecificationItem> _unsuccessfulInstanceCreditSpecifications;
    public List`1<SuccessfulInstanceCreditSpecificationItem> SuccessfulInstanceCreditSpecifications { get; public set; }
    public List`1<UnsuccessfulInstanceCreditSpecificationItem> UnsuccessfulInstanceCreditSpecifications { get; public set; }
    public List`1<SuccessfulInstanceCreditSpecificationItem> get_SuccessfulInstanceCreditSpecifications();
    public void set_SuccessfulInstanceCreditSpecifications(List`1<SuccessfulInstanceCreditSpecificationItem> value);
    internal bool IsSetSuccessfulInstanceCreditSpecifications();
    public List`1<UnsuccessfulInstanceCreditSpecificationItem> get_UnsuccessfulInstanceCreditSpecifications();
    public void set_UnsuccessfulInstanceCreditSpecifications(List`1<UnsuccessfulInstanceCreditSpecificationItem> value);
    internal bool IsSetUnsuccessfulInstanceCreditSpecifications();
}
public class Amazon.EC2.Model.ModifyInstanceEventStartTimeRequest : AmazonEC2Request {
    private string _instanceEventId;
    private string _instanceId;
    private Nullable`1<DateTime> _notBefore;
    [AWSPropertyAttribute]
public string InstanceEventId { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> NotBefore { get; public set; }
    public string get_InstanceEventId();
    public void set_InstanceEventId(string value);
    internal bool IsSetInstanceEventId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<DateTime> get_NotBefore();
    public void set_NotBefore(Nullable`1<DateTime> value);
    internal bool IsSetNotBefore();
}
public class Amazon.EC2.Model.ModifyInstanceEventStartTimeResponse : AmazonWebServiceResponse {
    private InstanceStatusEvent _event;
    public InstanceStatusEvent Event { get; public set; }
    public InstanceStatusEvent get_Event();
    public void set_Event(InstanceStatusEvent value);
    internal bool IsSetEvent();
}
public class Amazon.EC2.Model.ModifyInstanceEventWindowRequest : AmazonEC2Request {
    private string _cronExpression;
    private string _instanceEventWindowId;
    private string _name;
    private List`1<InstanceEventWindowTimeRangeRequest> _timeRanges;
    public string CronExpression { get; public set; }
    [AWSPropertyAttribute]
public string InstanceEventWindowId { get; public set; }
    public string Name { get; public set; }
    public List`1<InstanceEventWindowTimeRangeRequest> TimeRanges { get; public set; }
    public string get_CronExpression();
    public void set_CronExpression(string value);
    internal bool IsSetCronExpression();
    public string get_InstanceEventWindowId();
    public void set_InstanceEventWindowId(string value);
    internal bool IsSetInstanceEventWindowId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<InstanceEventWindowTimeRangeRequest> get_TimeRanges();
    public void set_TimeRanges(List`1<InstanceEventWindowTimeRangeRequest> value);
    internal bool IsSetTimeRanges();
}
public class Amazon.EC2.Model.ModifyInstanceEventWindowResponse : AmazonWebServiceResponse {
    private InstanceEventWindow _instanceEventWindow;
    public InstanceEventWindow InstanceEventWindow { get; public set; }
    public InstanceEventWindow get_InstanceEventWindow();
    public void set_InstanceEventWindow(InstanceEventWindow value);
    internal bool IsSetInstanceEventWindow();
}
public class Amazon.EC2.Model.ModifyInstanceMaintenanceOptionsRequest : AmazonEC2Request {
    private InstanceAutoRecoveryState _autoRecovery;
    private string _instanceId;
    public InstanceAutoRecoveryState AutoRecovery { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public InstanceAutoRecoveryState get_AutoRecovery();
    public void set_AutoRecovery(InstanceAutoRecoveryState value);
    internal bool IsSetAutoRecovery();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.ModifyInstanceMaintenanceOptionsResponse : AmazonWebServiceResponse {
    private InstanceAutoRecoveryState _autoRecovery;
    private string _instanceId;
    public InstanceAutoRecoveryState AutoRecovery { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceAutoRecoveryState get_AutoRecovery();
    public void set_AutoRecovery(InstanceAutoRecoveryState value);
    internal bool IsSetAutoRecovery();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.ModifyInstanceMetadataDefaultsRequest : AmazonEC2Request {
    private DefaultInstanceMetadataEndpointState _httpEndpoint;
    private Nullable`1<int> _httpPutResponseHopLimit;
    private MetadataDefaultHttpTokensState _httpTokens;
    private DefaultInstanceMetadataTagsState _instanceMetadataTags;
    public DefaultInstanceMetadataEndpointState HttpEndpoint { get; public set; }
    public Nullable`1<int> HttpPutResponseHopLimit { get; public set; }
    public MetadataDefaultHttpTokensState HttpTokens { get; public set; }
    public DefaultInstanceMetadataTagsState InstanceMetadataTags { get; public set; }
    public DefaultInstanceMetadataEndpointState get_HttpEndpoint();
    public void set_HttpEndpoint(DefaultInstanceMetadataEndpointState value);
    internal bool IsSetHttpEndpoint();
    public Nullable`1<int> get_HttpPutResponseHopLimit();
    public void set_HttpPutResponseHopLimit(Nullable`1<int> value);
    internal bool IsSetHttpPutResponseHopLimit();
    public MetadataDefaultHttpTokensState get_HttpTokens();
    public void set_HttpTokens(MetadataDefaultHttpTokensState value);
    internal bool IsSetHttpTokens();
    public DefaultInstanceMetadataTagsState get_InstanceMetadataTags();
    public void set_InstanceMetadataTags(DefaultInstanceMetadataTagsState value);
    internal bool IsSetInstanceMetadataTags();
}
public class Amazon.EC2.Model.ModifyInstanceMetadataDefaultsResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyInstanceMetadataOptionsRequest : AmazonEC2Request {
    private InstanceMetadataEndpointState _httpEndpoint;
    private InstanceMetadataProtocolState _httpProtocolIpv6;
    private Nullable`1<int> _httpPutResponseHopLimit;
    private HttpTokensState _httpTokens;
    private string _instanceId;
    private InstanceMetadataTagsState _instanceMetadataTags;
    public InstanceMetadataEndpointState HttpEndpoint { get; public set; }
    public InstanceMetadataProtocolState HttpProtocolIpv6 { get; public set; }
    public Nullable`1<int> HttpPutResponseHopLimit { get; public set; }
    public HttpTokensState HttpTokens { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public InstanceMetadataTagsState InstanceMetadataTags { get; public set; }
    public InstanceMetadataEndpointState get_HttpEndpoint();
    public void set_HttpEndpoint(InstanceMetadataEndpointState value);
    internal bool IsSetHttpEndpoint();
    public InstanceMetadataProtocolState get_HttpProtocolIpv6();
    public void set_HttpProtocolIpv6(InstanceMetadataProtocolState value);
    internal bool IsSetHttpProtocolIpv6();
    public Nullable`1<int> get_HttpPutResponseHopLimit();
    public void set_HttpPutResponseHopLimit(Nullable`1<int> value);
    internal bool IsSetHttpPutResponseHopLimit();
    public HttpTokensState get_HttpTokens();
    public void set_HttpTokens(HttpTokensState value);
    internal bool IsSetHttpTokens();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceMetadataTagsState get_InstanceMetadataTags();
    public void set_InstanceMetadataTags(InstanceMetadataTagsState value);
    internal bool IsSetInstanceMetadataTags();
}
public class Amazon.EC2.Model.ModifyInstanceMetadataOptionsResponse : AmazonWebServiceResponse {
    private string _instanceId;
    private InstanceMetadataOptionsResponse _instanceMetadataOptions;
    public string InstanceId { get; public set; }
    public InstanceMetadataOptionsResponse InstanceMetadataOptions { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceMetadataOptionsResponse get_InstanceMetadataOptions();
    public void set_InstanceMetadataOptions(InstanceMetadataOptionsResponse value);
    internal bool IsSetInstanceMetadataOptions();
}
public class Amazon.EC2.Model.ModifyInstancePlacementRequest : AmazonEC2Request {
    private Affinity _affinity;
    private string _groupId;
    private string _groupName;
    private string _hostId;
    private string _hostResourceGroupArn;
    private string _instanceId;
    private Nullable`1<int> _partitionNumber;
    private HostTenancy _tenancy;
    public Affinity Affinity { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string HostId { get; public set; }
    public string HostResourceGroupArn { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public Nullable`1<int> PartitionNumber { get; public set; }
    public HostTenancy Tenancy { get; public set; }
    public Affinity get_Affinity();
    public void set_Affinity(Affinity value);
    internal bool IsSetAffinity();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_HostId();
    public void set_HostId(string value);
    internal bool IsSetHostId();
    public string get_HostResourceGroupArn();
    public void set_HostResourceGroupArn(string value);
    internal bool IsSetHostResourceGroupArn();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_PartitionNumber();
    public void set_PartitionNumber(Nullable`1<int> value);
    internal bool IsSetPartitionNumber();
    public HostTenancy get_Tenancy();
    public void set_Tenancy(HostTenancy value);
    internal bool IsSetTenancy();
}
public class Amazon.EC2.Model.ModifyInstancePlacementResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyIpamPoolRequest : AmazonEC2Request {
    private List`1<RequestIpamResourceTag> _addAllocationResourceTags;
    private Nullable`1<int> _allocationDefaultNetmaskLength;
    private Nullable`1<int> _allocationMaxNetmaskLength;
    private Nullable`1<int> _allocationMinNetmaskLength;
    private Nullable`1<bool> _autoImport;
    private Nullable`1<bool> _clearAllocationDefaultNetmaskLength;
    private string _description;
    private string _ipamPoolId;
    private List`1<RequestIpamResourceTag> _removeAllocationResourceTags;
    public List`1<RequestIpamResourceTag> AddAllocationResourceTags { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationDefaultNetmaskLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationMaxNetmaskLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AllocationMinNetmaskLength { get; public set; }
    public Nullable`1<bool> AutoImport { get; public set; }
    public Nullable`1<bool> ClearAllocationDefaultNetmaskLength { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    public List`1<RequestIpamResourceTag> RemoveAllocationResourceTags { get; public set; }
    public List`1<RequestIpamResourceTag> get_AddAllocationResourceTags();
    public void set_AddAllocationResourceTags(List`1<RequestIpamResourceTag> value);
    internal bool IsSetAddAllocationResourceTags();
    public Nullable`1<int> get_AllocationDefaultNetmaskLength();
    public void set_AllocationDefaultNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationDefaultNetmaskLength();
    public Nullable`1<int> get_AllocationMaxNetmaskLength();
    public void set_AllocationMaxNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationMaxNetmaskLength();
    public Nullable`1<int> get_AllocationMinNetmaskLength();
    public void set_AllocationMinNetmaskLength(Nullable`1<int> value);
    internal bool IsSetAllocationMinNetmaskLength();
    public Nullable`1<bool> get_AutoImport();
    public void set_AutoImport(Nullable`1<bool> value);
    internal bool IsSetAutoImport();
    public Nullable`1<bool> get_ClearAllocationDefaultNetmaskLength();
    public void set_ClearAllocationDefaultNetmaskLength(Nullable`1<bool> value);
    internal bool IsSetClearAllocationDefaultNetmaskLength();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public List`1<RequestIpamResourceTag> get_RemoveAllocationResourceTags();
    public void set_RemoveAllocationResourceTags(List`1<RequestIpamResourceTag> value);
    internal bool IsSetRemoveAllocationResourceTags();
}
public class Amazon.EC2.Model.ModifyIpamPoolResponse : AmazonWebServiceResponse {
    private IpamPool _ipamPool;
    public IpamPool IpamPool { get; public set; }
    public IpamPool get_IpamPool();
    public void set_IpamPool(IpamPool value);
    internal bool IsSetIpamPool();
}
public class Amazon.EC2.Model.ModifyIpamRequest : AmazonEC2Request {
    private List`1<AddIpamOperatingRegion> _addOperatingRegions;
    private string _description;
    private string _ipamId;
    private List`1<RemoveIpamOperatingRegion> _removeOperatingRegions;
    private IpamTier _tier;
    [AWSPropertyAttribute]
public List`1<AddIpamOperatingRegion> AddOperatingRegions { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamId { get; public set; }
    [AWSPropertyAttribute]
public List`1<RemoveIpamOperatingRegion> RemoveOperatingRegions { get; public set; }
    public IpamTier Tier { get; public set; }
    public List`1<AddIpamOperatingRegion> get_AddOperatingRegions();
    public void set_AddOperatingRegions(List`1<AddIpamOperatingRegion> value);
    internal bool IsSetAddOperatingRegions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
    public List`1<RemoveIpamOperatingRegion> get_RemoveOperatingRegions();
    public void set_RemoveOperatingRegions(List`1<RemoveIpamOperatingRegion> value);
    internal bool IsSetRemoveOperatingRegions();
    public IpamTier get_Tier();
    public void set_Tier(IpamTier value);
    internal bool IsSetTier();
}
public class Amazon.EC2.Model.ModifyIpamResourceCidrRequest : AmazonEC2Request {
    private string _currentIpamScopeId;
    private string _destinationIpamScopeId;
    private Nullable`1<bool> _monitored;
    private string _resourceCidr;
    private string _resourceId;
    private string _resourceRegion;
    [AWSPropertyAttribute]
public string CurrentIpamScopeId { get; public set; }
    public string DestinationIpamScopeId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Monitored { get; public set; }
    [AWSPropertyAttribute]
public string ResourceCidr { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceRegion { get; public set; }
    public string get_CurrentIpamScopeId();
    public void set_CurrentIpamScopeId(string value);
    internal bool IsSetCurrentIpamScopeId();
    public string get_DestinationIpamScopeId();
    public void set_DestinationIpamScopeId(string value);
    internal bool IsSetDestinationIpamScopeId();
    public Nullable`1<bool> get_Monitored();
    public void set_Monitored(Nullable`1<bool> value);
    internal bool IsSetMonitored();
    public string get_ResourceCidr();
    public void set_ResourceCidr(string value);
    internal bool IsSetResourceCidr();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceRegion();
    public void set_ResourceRegion(string value);
    internal bool IsSetResourceRegion();
}
public class Amazon.EC2.Model.ModifyIpamResourceCidrResponse : AmazonWebServiceResponse {
    private IpamResourceCidr _ipamResourceCidr;
    public IpamResourceCidr IpamResourceCidr { get; public set; }
    public IpamResourceCidr get_IpamResourceCidr();
    public void set_IpamResourceCidr(IpamResourceCidr value);
    internal bool IsSetIpamResourceCidr();
}
public class Amazon.EC2.Model.ModifyIpamResourceDiscoveryRequest : AmazonEC2Request {
    private List`1<AddIpamOperatingRegion> _addOperatingRegions;
    private string _description;
    private string _ipamResourceDiscoveryId;
    private List`1<RemoveIpamOperatingRegion> _removeOperatingRegions;
    [AWSPropertyAttribute]
public List`1<AddIpamOperatingRegion> AddOperatingRegions { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamResourceDiscoveryId { get; public set; }
    [AWSPropertyAttribute]
public List`1<RemoveIpamOperatingRegion> RemoveOperatingRegions { get; public set; }
    public List`1<AddIpamOperatingRegion> get_AddOperatingRegions();
    public void set_AddOperatingRegions(List`1<AddIpamOperatingRegion> value);
    internal bool IsSetAddOperatingRegions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamResourceDiscoveryId();
    public void set_IpamResourceDiscoveryId(string value);
    internal bool IsSetIpamResourceDiscoveryId();
    public List`1<RemoveIpamOperatingRegion> get_RemoveOperatingRegions();
    public void set_RemoveOperatingRegions(List`1<RemoveIpamOperatingRegion> value);
    internal bool IsSetRemoveOperatingRegions();
}
public class Amazon.EC2.Model.ModifyIpamResourceDiscoveryResponse : AmazonWebServiceResponse {
    private IpamResourceDiscovery _ipamResourceDiscovery;
    public IpamResourceDiscovery IpamResourceDiscovery { get; public set; }
    public IpamResourceDiscovery get_IpamResourceDiscovery();
    public void set_IpamResourceDiscovery(IpamResourceDiscovery value);
    internal bool IsSetIpamResourceDiscovery();
}
public class Amazon.EC2.Model.ModifyIpamResponse : AmazonWebServiceResponse {
    private Ipam _ipam;
    public Ipam Ipam { get; public set; }
    public Ipam get_Ipam();
    public void set_Ipam(Ipam value);
    internal bool IsSetIpam();
}
public class Amazon.EC2.Model.ModifyIpamScopeRequest : AmazonEC2Request {
    private string _description;
    private string _ipamScopeId;
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IpamScopeId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IpamScopeId();
    public void set_IpamScopeId(string value);
    internal bool IsSetIpamScopeId();
}
public class Amazon.EC2.Model.ModifyIpamScopeResponse : AmazonWebServiceResponse {
    private IpamScope _ipamScope;
    public IpamScope IpamScope { get; public set; }
    public IpamScope get_IpamScope();
    public void set_IpamScope(IpamScope value);
    internal bool IsSetIpamScope();
}
public class Amazon.EC2.Model.ModifyLaunchTemplateRequest : AmazonEC2Request {
    private string _clientToken;
    private string _defaultVersion;
    private string _launchTemplateId;
    private string _launchTemplateName;
    public string ClientToken { get; public set; }
    public string DefaultVersion { get; public set; }
    public string LaunchTemplateId { get; public set; }
    [AWSPropertyAttribute]
public string LaunchTemplateName { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DefaultVersion();
    public void set_DefaultVersion(string value);
    internal bool IsSetDefaultVersion();
    public string get_LaunchTemplateId();
    public void set_LaunchTemplateId(string value);
    internal bool IsSetLaunchTemplateId();
    public string get_LaunchTemplateName();
    public void set_LaunchTemplateName(string value);
    internal bool IsSetLaunchTemplateName();
}
public class Amazon.EC2.Model.ModifyLaunchTemplateResponse : AmazonWebServiceResponse {
    private LaunchTemplate _launchTemplate;
    public LaunchTemplate LaunchTemplate { get; public set; }
    public LaunchTemplate get_LaunchTemplate();
    public void set_LaunchTemplate(LaunchTemplate value);
    internal bool IsSetLaunchTemplate();
}
public class Amazon.EC2.Model.ModifyLocalGatewayRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _destinationPrefixListId;
    private string _localGatewayRouteTableId;
    private string _localGatewayVirtualInterfaceGroupId;
    private string _networkInterfaceId;
    public string DestinationCidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    public string LocalGatewayVirtualInterfaceGroupId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public string get_LocalGatewayVirtualInterfaceGroupId();
    public void set_LocalGatewayVirtualInterfaceGroupId(string value);
    internal bool IsSetLocalGatewayVirtualInterfaceGroupId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.ModifyLocalGatewayRouteResponse : AmazonWebServiceResponse {
    private LocalGatewayRoute _route;
    public LocalGatewayRoute Route { get; public set; }
    public LocalGatewayRoute get_Route();
    public void set_Route(LocalGatewayRoute value);
    internal bool IsSetRoute();
}
public class Amazon.EC2.Model.ModifyManagedPrefixListRequest : AmazonEC2Request {
    private List`1<AddPrefixListEntry> _addEntries;
    private Nullable`1<long> _currentVersion;
    private Nullable`1<int> _maxEntries;
    private string _prefixListId;
    private string _prefixListName;
    private List`1<RemovePrefixListEntry> _removeEntries;
    [AWSPropertyAttribute]
public List`1<AddPrefixListEntry> AddEntries { get; public set; }
    public Nullable`1<long> CurrentVersion { get; public set; }
    public Nullable`1<int> MaxEntries { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    public string PrefixListName { get; public set; }
    [AWSPropertyAttribute]
public List`1<RemovePrefixListEntry> RemoveEntries { get; public set; }
    public List`1<AddPrefixListEntry> get_AddEntries();
    public void set_AddEntries(List`1<AddPrefixListEntry> value);
    internal bool IsSetAddEntries();
    public Nullable`1<long> get_CurrentVersion();
    public void set_CurrentVersion(Nullable`1<long> value);
    internal bool IsSetCurrentVersion();
    public Nullable`1<int> get_MaxEntries();
    public void set_MaxEntries(Nullable`1<int> value);
    internal bool IsSetMaxEntries();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_PrefixListName();
    public void set_PrefixListName(string value);
    internal bool IsSetPrefixListName();
    public List`1<RemovePrefixListEntry> get_RemoveEntries();
    public void set_RemoveEntries(List`1<RemovePrefixListEntry> value);
    internal bool IsSetRemoveEntries();
}
public class Amazon.EC2.Model.ModifyManagedPrefixListResponse : AmazonWebServiceResponse {
    private ManagedPrefixList _prefixList;
    public ManagedPrefixList PrefixList { get; public set; }
    public ManagedPrefixList get_PrefixList();
    public void set_PrefixList(ManagedPrefixList value);
    internal bool IsSetPrefixList();
}
public class Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest : AmazonEC2Request {
    private Nullable`1<bool> _associatePublicIpAddress;
    private NetworkInterfaceAttachmentChanges _attachment;
    private ConnectionTrackingSpecificationRequest _connectionTrackingSpecification;
    private string _description;
    private Nullable`1<bool> _enablePrimaryIpv6;
    private EnaSrdSpecification _enaSrdSpecification;
    private List`1<string> _groups;
    private string _networkInterfaceId;
    private Nullable`1<bool> _sourceDestCheck;
    public Nullable`1<bool> AssociatePublicIpAddress { get; public set; }
    public NetworkInterfaceAttachmentChanges Attachment { get; public set; }
    public ConnectionTrackingSpecificationRequest ConnectionTrackingSpecification { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> EnablePrimaryIpv6 { get; public set; }
    public EnaSrdSpecification EnaSrdSpecification { get; public set; }
    public List`1<string> Groups { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public Nullable`1<bool> SourceDestCheck { get; public set; }
    public Nullable`1<bool> get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociatePublicIpAddress();
    public NetworkInterfaceAttachmentChanges get_Attachment();
    public void set_Attachment(NetworkInterfaceAttachmentChanges value);
    internal bool IsSetAttachment();
    public ConnectionTrackingSpecificationRequest get_ConnectionTrackingSpecification();
    public void set_ConnectionTrackingSpecification(ConnectionTrackingSpecificationRequest value);
    internal bool IsSetConnectionTrackingSpecification();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_EnablePrimaryIpv6();
    public void set_EnablePrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetEnablePrimaryIpv6();
    public EnaSrdSpecification get_EnaSrdSpecification();
    public void set_EnaSrdSpecification(EnaSrdSpecification value);
    internal bool IsSetEnaSrdSpecification();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<bool> get_SourceDestCheck();
    public void set_SourceDestCheck(Nullable`1<bool> value);
    internal bool IsSetSourceDestCheck();
}
public class Amazon.EC2.Model.ModifyNetworkInterfaceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyPrivateDnsNameOptionsRequest : AmazonEC2Request {
    private Nullable`1<bool> _enableResourceNameDnsAAAARecord;
    private Nullable`1<bool> _enableResourceNameDnsARecord;
    private string _instanceId;
    private HostnameType _privateDnsHostnameType;
    public Nullable`1<bool> EnableResourceNameDnsAAAARecord { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsARecord { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public HostnameType PrivateDnsHostnameType { get; public set; }
    public Nullable`1<bool> get_EnableResourceNameDnsAAAARecord();
    public void set_EnableResourceNameDnsAAAARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsAAAARecord();
    public Nullable`1<bool> get_EnableResourceNameDnsARecord();
    public void set_EnableResourceNameDnsARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsARecord();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public HostnameType get_PrivateDnsHostnameType();
    public void set_PrivateDnsHostnameType(HostnameType value);
    internal bool IsSetPrivateDnsHostnameType();
}
public class Amazon.EC2.Model.ModifyPrivateDnsNameOptionsResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyReservedInstancesRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<string> _reservedInstancesIds;
    private List`1<ReservedInstancesConfiguration> _targetConfigurations;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ReservedInstancesIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReservedInstancesConfiguration> TargetConfigurations { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_ReservedInstancesIds();
    public void set_ReservedInstancesIds(List`1<string> value);
    internal bool IsSetReservedInstancesIds();
    public List`1<ReservedInstancesConfiguration> get_TargetConfigurations();
    public void set_TargetConfigurations(List`1<ReservedInstancesConfiguration> value);
    internal bool IsSetTargetConfigurations();
}
public class Amazon.EC2.Model.ModifyReservedInstancesResponse : AmazonWebServiceResponse {
    private string _reservedInstancesModificationId;
    public string ReservedInstancesModificationId { get; public set; }
    public string get_ReservedInstancesModificationId();
    public void set_ReservedInstancesModificationId(string value);
    internal bool IsSetReservedInstancesModificationId();
}
public class Amazon.EC2.Model.ModifySecurityGroupRulesRequest : AmazonEC2Request {
    private string _groupId;
    private List`1<SecurityGroupRuleUpdate> _securityGroupRules;
    [AWSPropertyAttribute]
public string GroupId { get; public set; }
    [AWSPropertyAttribute]
public List`1<SecurityGroupRuleUpdate> SecurityGroupRules { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public List`1<SecurityGroupRuleUpdate> get_SecurityGroupRules();
    public void set_SecurityGroupRules(List`1<SecurityGroupRuleUpdate> value);
    internal bool IsSetSecurityGroupRules();
}
public class Amazon.EC2.Model.ModifySecurityGroupRulesResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifySnapshotAttributeRequest : AmazonEC2Request {
    private SnapshotAttributeName _attribute;
    private CreateVolumePermissionModifications _createVolumePermission;
    private List`1<string> _groupNames;
    private OperationType _operationType;
    private string _snapshotId;
    private List`1<string> _userIds;
    public SnapshotAttributeName Attribute { get; public set; }
    public CreateVolumePermissionModifications CreateVolumePermission { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public OperationType OperationType { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public List`1<string> UserIds { get; public set; }
    public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType);
    public SnapshotAttributeName get_Attribute();
    public void set_Attribute(SnapshotAttributeName value);
    internal bool IsSetAttribute();
    public CreateVolumePermissionModifications get_CreateVolumePermission();
    public void set_CreateVolumePermission(CreateVolumePermissionModifications value);
    internal bool IsSetCreateVolumePermission();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public OperationType get_OperationType();
    public void set_OperationType(OperationType value);
    internal bool IsSetOperationType();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public List`1<string> get_UserIds();
    public void set_UserIds(List`1<string> value);
    internal bool IsSetUserIds();
}
public class Amazon.EC2.Model.ModifySnapshotAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifySnapshotTierRequest : AmazonEC2Request {
    private string _snapshotId;
    private TargetStorageTier _storageTier;
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public TargetStorageTier StorageTier { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public TargetStorageTier get_StorageTier();
    public void set_StorageTier(TargetStorageTier value);
    internal bool IsSetStorageTier();
}
public class Amazon.EC2.Model.ModifySnapshotTierResponse : AmazonWebServiceResponse {
    private string _snapshotId;
    private Nullable`1<DateTime> _tieringStartTime;
    public string SnapshotId { get; public set; }
    public Nullable`1<DateTime> TieringStartTime { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public Nullable`1<DateTime> get_TieringStartTime();
    public void set_TieringStartTime(Nullable`1<DateTime> value);
    internal bool IsSetTieringStartTime();
}
public class Amazon.EC2.Model.ModifySpotFleetRequestRequest : AmazonEC2Request {
    private string _context;
    private ExcessCapacityTerminationPolicy _excessCapacityTerminationPolicy;
    private List`1<LaunchTemplateConfig> _launchTemplateConfigs;
    private Nullable`1<int> _onDemandTargetCapacity;
    private string _spotFleetRequestId;
    private Nullable`1<int> _targetCapacity;
    public string Context { get; public set; }
    public ExcessCapacityTerminationPolicy ExcessCapacityTerminationPolicy { get; public set; }
    public List`1<LaunchTemplateConfig> LaunchTemplateConfigs { get; public set; }
    public Nullable`1<int> OnDemandTargetCapacity { get; public set; }
    [AWSPropertyAttribute]
public string SpotFleetRequestId { get; public set; }
    public Nullable`1<int> TargetCapacity { get; public set; }
    public string get_Context();
    public void set_Context(string value);
    internal bool IsSetContext();
    public ExcessCapacityTerminationPolicy get_ExcessCapacityTerminationPolicy();
    public void set_ExcessCapacityTerminationPolicy(ExcessCapacityTerminationPolicy value);
    internal bool IsSetExcessCapacityTerminationPolicy();
    public List`1<LaunchTemplateConfig> get_LaunchTemplateConfigs();
    public void set_LaunchTemplateConfigs(List`1<LaunchTemplateConfig> value);
    internal bool IsSetLaunchTemplateConfigs();
    public Nullable`1<int> get_OnDemandTargetCapacity();
    public void set_OnDemandTargetCapacity(Nullable`1<int> value);
    internal bool IsSetOnDemandTargetCapacity();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
    public Nullable`1<int> get_TargetCapacity();
    public void set_TargetCapacity(Nullable`1<int> value);
    internal bool IsSetTargetCapacity();
}
public class Amazon.EC2.Model.ModifySpotFleetRequestResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifySubnetAttributeRequest : AmazonEC2Request {
    private Nullable`1<bool> _assignIpv6AddressOnCreation;
    private string _customerOwnedIpv4Pool;
    private Nullable`1<bool> _disableLniAtDeviceIndex;
    private Nullable`1<bool> _enableDns64;
    private Nullable`1<int> _enableLniAtDeviceIndex;
    private Nullable`1<bool> _enableResourceNameDnsAAAARecordOnLaunch;
    private Nullable`1<bool> _enableResourceNameDnsARecordOnLaunch;
    private Nullable`1<bool> _mapCustomerOwnedIpOnLaunch;
    private Nullable`1<bool> _mapPublicIpOnLaunch;
    private HostnameType _privateDnsHostnameTypeOnLaunch;
    private string _subnetId;
    public Nullable`1<bool> AssignIpv6AddressOnCreation { get; public set; }
    public string CustomerOwnedIpv4Pool { get; public set; }
    public Nullable`1<bool> DisableLniAtDeviceIndex { get; public set; }
    public Nullable`1<bool> EnableDns64 { get; public set; }
    public Nullable`1<int> EnableLniAtDeviceIndex { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsAAAARecordOnLaunch { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsARecordOnLaunch { get; public set; }
    public Nullable`1<bool> MapCustomerOwnedIpOnLaunch { get; public set; }
    public Nullable`1<bool> MapPublicIpOnLaunch { get; public set; }
    public HostnameType PrivateDnsHostnameTypeOnLaunch { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public Nullable`1<bool> get_AssignIpv6AddressOnCreation();
    public void set_AssignIpv6AddressOnCreation(Nullable`1<bool> value);
    internal bool IsSetAssignIpv6AddressOnCreation();
    public string get_CustomerOwnedIpv4Pool();
    public void set_CustomerOwnedIpv4Pool(string value);
    internal bool IsSetCustomerOwnedIpv4Pool();
    public Nullable`1<bool> get_DisableLniAtDeviceIndex();
    public void set_DisableLniAtDeviceIndex(Nullable`1<bool> value);
    internal bool IsSetDisableLniAtDeviceIndex();
    public Nullable`1<bool> get_EnableDns64();
    public void set_EnableDns64(Nullable`1<bool> value);
    internal bool IsSetEnableDns64();
    public Nullable`1<int> get_EnableLniAtDeviceIndex();
    public void set_EnableLniAtDeviceIndex(Nullable`1<int> value);
    internal bool IsSetEnableLniAtDeviceIndex();
    public Nullable`1<bool> get_EnableResourceNameDnsAAAARecordOnLaunch();
    public void set_EnableResourceNameDnsAAAARecordOnLaunch(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsAAAARecordOnLaunch();
    public Nullable`1<bool> get_EnableResourceNameDnsARecordOnLaunch();
    public void set_EnableResourceNameDnsARecordOnLaunch(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsARecordOnLaunch();
    public Nullable`1<bool> get_MapCustomerOwnedIpOnLaunch();
    public void set_MapCustomerOwnedIpOnLaunch(Nullable`1<bool> value);
    internal bool IsSetMapCustomerOwnedIpOnLaunch();
    public Nullable`1<bool> get_MapPublicIpOnLaunch();
    public void set_MapPublicIpOnLaunch(Nullable`1<bool> value);
    internal bool IsSetMapPublicIpOnLaunch();
    public HostnameType get_PrivateDnsHostnameTypeOnLaunch();
    public void set_PrivateDnsHostnameTypeOnLaunch(HostnameType value);
    internal bool IsSetPrivateDnsHostnameTypeOnLaunch();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.ModifySubnetAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyTrafficMirrorFilterNetworkServicesRequest : AmazonEC2Request {
    private List`1<string> _addNetworkServices;
    private List`1<string> _removeNetworkServices;
    private string _trafficMirrorFilterId;
    public List`1<string> AddNetworkServices { get; public set; }
    public List`1<string> RemoveNetworkServices { get; public set; }
    [AWSPropertyAttribute]
public string TrafficMirrorFilterId { get; public set; }
    public List`1<string> get_AddNetworkServices();
    public void set_AddNetworkServices(List`1<string> value);
    internal bool IsSetAddNetworkServices();
    public List`1<string> get_RemoveNetworkServices();
    public void set_RemoveNetworkServices(List`1<string> value);
    internal bool IsSetRemoveNetworkServices();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
}
public class Amazon.EC2.Model.ModifyTrafficMirrorFilterNetworkServicesResponse : AmazonWebServiceResponse {
    private TrafficMirrorFilter _trafficMirrorFilter;
    public TrafficMirrorFilter TrafficMirrorFilter { get; public set; }
    public TrafficMirrorFilter get_TrafficMirrorFilter();
    public void set_TrafficMirrorFilter(TrafficMirrorFilter value);
    internal bool IsSetTrafficMirrorFilter();
}
public class Amazon.EC2.Model.ModifyTrafficMirrorFilterRuleRequest : AmazonEC2Request {
    private string _description;
    private string _destinationCidrBlock;
    private TrafficMirrorPortRangeRequest _destinationPortRange;
    private Nullable`1<int> _protocol;
    private List`1<string> _removeFields;
    private TrafficMirrorRuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    private string _sourceCidrBlock;
    private TrafficMirrorPortRangeRequest _sourcePortRange;
    private TrafficDirection _trafficDirection;
    private string _trafficMirrorFilterRuleId;
    public string Description { get; public set; }
    public string DestinationCidrBlock { get; public set; }
    public TrafficMirrorPortRangeRequest DestinationPortRange { get; public set; }
    public Nullable`1<int> Protocol { get; public set; }
    public List`1<string> RemoveFields { get; public set; }
    public TrafficMirrorRuleAction RuleAction { get; public set; }
    public Nullable`1<int> RuleNumber { get; public set; }
    public string SourceCidrBlock { get; public set; }
    public TrafficMirrorPortRangeRequest SourcePortRange { get; public set; }
    public TrafficDirection TrafficDirection { get; public set; }
    [AWSPropertyAttribute]
public string TrafficMirrorFilterRuleId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public TrafficMirrorPortRangeRequest get_DestinationPortRange();
    public void set_DestinationPortRange(TrafficMirrorPortRangeRequest value);
    internal bool IsSetDestinationPortRange();
    public Nullable`1<int> get_Protocol();
    public void set_Protocol(Nullable`1<int> value);
    internal bool IsSetProtocol();
    public List`1<string> get_RemoveFields();
    public void set_RemoveFields(List`1<string> value);
    internal bool IsSetRemoveFields();
    public TrafficMirrorRuleAction get_RuleAction();
    public void set_RuleAction(TrafficMirrorRuleAction value);
    internal bool IsSetRuleAction();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
    public string get_SourceCidrBlock();
    public void set_SourceCidrBlock(string value);
    internal bool IsSetSourceCidrBlock();
    public TrafficMirrorPortRangeRequest get_SourcePortRange();
    public void set_SourcePortRange(TrafficMirrorPortRangeRequest value);
    internal bool IsSetSourcePortRange();
    public TrafficDirection get_TrafficDirection();
    public void set_TrafficDirection(TrafficDirection value);
    internal bool IsSetTrafficDirection();
    public string get_TrafficMirrorFilterRuleId();
    public void set_TrafficMirrorFilterRuleId(string value);
    internal bool IsSetTrafficMirrorFilterRuleId();
}
public class Amazon.EC2.Model.ModifyTrafficMirrorFilterRuleResponse : AmazonWebServiceResponse {
    private TrafficMirrorFilterRule _trafficMirrorFilterRule;
    public TrafficMirrorFilterRule TrafficMirrorFilterRule { get; public set; }
    public TrafficMirrorFilterRule get_TrafficMirrorFilterRule();
    public void set_TrafficMirrorFilterRule(TrafficMirrorFilterRule value);
    internal bool IsSetTrafficMirrorFilterRule();
}
public class Amazon.EC2.Model.ModifyTrafficMirrorSessionRequest : AmazonEC2Request {
    private string _description;
    private Nullable`1<int> _packetLength;
    private List`1<string> _removeFields;
    private Nullable`1<int> _sessionNumber;
    private string _trafficMirrorFilterId;
    private string _trafficMirrorSessionId;
    private string _trafficMirrorTargetId;
    private Nullable`1<int> _virtualNetworkId;
    public string Description { get; public set; }
    public Nullable`1<int> PacketLength { get; public set; }
    public List`1<string> RemoveFields { get; public set; }
    public Nullable`1<int> SessionNumber { get; public set; }
    public string TrafficMirrorFilterId { get; public set; }
    [AWSPropertyAttribute]
public string TrafficMirrorSessionId { get; public set; }
    public string TrafficMirrorTargetId { get; public set; }
    public Nullable`1<int> VirtualNetworkId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_PacketLength();
    public void set_PacketLength(Nullable`1<int> value);
    internal bool IsSetPacketLength();
    public List`1<string> get_RemoveFields();
    public void set_RemoveFields(List`1<string> value);
    internal bool IsSetRemoveFields();
    public Nullable`1<int> get_SessionNumber();
    public void set_SessionNumber(Nullable`1<int> value);
    internal bool IsSetSessionNumber();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
    public string get_TrafficMirrorSessionId();
    public void set_TrafficMirrorSessionId(string value);
    internal bool IsSetTrafficMirrorSessionId();
    public string get_TrafficMirrorTargetId();
    public void set_TrafficMirrorTargetId(string value);
    internal bool IsSetTrafficMirrorTargetId();
    public Nullable`1<int> get_VirtualNetworkId();
    public void set_VirtualNetworkId(Nullable`1<int> value);
    internal bool IsSetVirtualNetworkId();
}
public class Amazon.EC2.Model.ModifyTrafficMirrorSessionResponse : AmazonWebServiceResponse {
    private TrafficMirrorSession _trafficMirrorSession;
    public TrafficMirrorSession TrafficMirrorSession { get; public set; }
    public TrafficMirrorSession get_TrafficMirrorSession();
    public void set_TrafficMirrorSession(TrafficMirrorSession value);
    internal bool IsSetTrafficMirrorSession();
}
public class Amazon.EC2.Model.ModifyTransitGatewayOptions : object {
    private List`1<string> _addTransitGatewayCidrBlocks;
    private Nullable`1<long> _amazonSideAsn;
    private string _associationDefaultRouteTableId;
    private AutoAcceptSharedAttachmentsValue _autoAcceptSharedAttachments;
    private DefaultRouteTableAssociationValue _defaultRouteTableAssociation;
    private DefaultRouteTablePropagationValue _defaultRouteTablePropagation;
    private DnsSupportValue _dnsSupport;
    private string _propagationDefaultRouteTableId;
    private List`1<string> _removeTransitGatewayCidrBlocks;
    private SecurityGroupReferencingSupportValue _securityGroupReferencingSupport;
    private VpnEcmpSupportValue _vpnEcmpSupport;
    public List`1<string> AddTransitGatewayCidrBlocks { get; public set; }
    public Nullable`1<long> AmazonSideAsn { get; public set; }
    public string AssociationDefaultRouteTableId { get; public set; }
    public AutoAcceptSharedAttachmentsValue AutoAcceptSharedAttachments { get; public set; }
    public DefaultRouteTableAssociationValue DefaultRouteTableAssociation { get; public set; }
    public DefaultRouteTablePropagationValue DefaultRouteTablePropagation { get; public set; }
    public DnsSupportValue DnsSupport { get; public set; }
    public string PropagationDefaultRouteTableId { get; public set; }
    public List`1<string> RemoveTransitGatewayCidrBlocks { get; public set; }
    public SecurityGroupReferencingSupportValue SecurityGroupReferencingSupport { get; public set; }
    public VpnEcmpSupportValue VpnEcmpSupport { get; public set; }
    public List`1<string> get_AddTransitGatewayCidrBlocks();
    public void set_AddTransitGatewayCidrBlocks(List`1<string> value);
    internal bool IsSetAddTransitGatewayCidrBlocks();
    public Nullable`1<long> get_AmazonSideAsn();
    public void set_AmazonSideAsn(Nullable`1<long> value);
    internal bool IsSetAmazonSideAsn();
    public string get_AssociationDefaultRouteTableId();
    public void set_AssociationDefaultRouteTableId(string value);
    internal bool IsSetAssociationDefaultRouteTableId();
    public AutoAcceptSharedAttachmentsValue get_AutoAcceptSharedAttachments();
    public void set_AutoAcceptSharedAttachments(AutoAcceptSharedAttachmentsValue value);
    internal bool IsSetAutoAcceptSharedAttachments();
    public DefaultRouteTableAssociationValue get_DefaultRouteTableAssociation();
    public void set_DefaultRouteTableAssociation(DefaultRouteTableAssociationValue value);
    internal bool IsSetDefaultRouteTableAssociation();
    public DefaultRouteTablePropagationValue get_DefaultRouteTablePropagation();
    public void set_DefaultRouteTablePropagation(DefaultRouteTablePropagationValue value);
    internal bool IsSetDefaultRouteTablePropagation();
    public DnsSupportValue get_DnsSupport();
    public void set_DnsSupport(DnsSupportValue value);
    internal bool IsSetDnsSupport();
    public string get_PropagationDefaultRouteTableId();
    public void set_PropagationDefaultRouteTableId(string value);
    internal bool IsSetPropagationDefaultRouteTableId();
    public List`1<string> get_RemoveTransitGatewayCidrBlocks();
    public void set_RemoveTransitGatewayCidrBlocks(List`1<string> value);
    internal bool IsSetRemoveTransitGatewayCidrBlocks();
    public SecurityGroupReferencingSupportValue get_SecurityGroupReferencingSupport();
    public void set_SecurityGroupReferencingSupport(SecurityGroupReferencingSupportValue value);
    internal bool IsSetSecurityGroupReferencingSupport();
    public VpnEcmpSupportValue get_VpnEcmpSupport();
    public void set_VpnEcmpSupport(VpnEcmpSupportValue value);
    internal bool IsSetVpnEcmpSupport();
}
public class Amazon.EC2.Model.ModifyTransitGatewayPrefixListReferenceRequest : AmazonEC2Request {
    private Nullable`1<bool> _blackhole;
    private string _prefixListId;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableId;
    public Nullable`1<bool> Blackhole { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public Nullable`1<bool> get_Blackhole();
    public void set_Blackhole(Nullable`1<bool> value);
    internal bool IsSetBlackhole();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.ModifyTransitGatewayPrefixListReferenceResponse : AmazonWebServiceResponse {
    private TransitGatewayPrefixListReference _transitGatewayPrefixListReference;
    public TransitGatewayPrefixListReference TransitGatewayPrefixListReference { get; public set; }
    public TransitGatewayPrefixListReference get_TransitGatewayPrefixListReference();
    public void set_TransitGatewayPrefixListReference(TransitGatewayPrefixListReference value);
    internal bool IsSetTransitGatewayPrefixListReference();
}
public class Amazon.EC2.Model.ModifyTransitGatewayRequest : AmazonEC2Request {
    private string _description;
    private ModifyTransitGatewayOptions _options;
    private string _transitGatewayId;
    public string Description { get; public set; }
    public ModifyTransitGatewayOptions Options { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ModifyTransitGatewayOptions get_Options();
    public void set_Options(ModifyTransitGatewayOptions value);
    internal bool IsSetOptions();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.ModifyTransitGatewayResponse : AmazonWebServiceResponse {
    private TransitGateway _transitGateway;
    public TransitGateway TransitGateway { get; public set; }
    public TransitGateway get_TransitGateway();
    public void set_TransitGateway(TransitGateway value);
    internal bool IsSetTransitGateway();
}
public class Amazon.EC2.Model.ModifyTransitGatewayVpcAttachmentRequest : AmazonEC2Request {
    private List`1<string> _addSubnetIds;
    private ModifyTransitGatewayVpcAttachmentRequestOptions _options;
    private List`1<string> _removeSubnetIds;
    private string _transitGatewayAttachmentId;
    public List`1<string> AddSubnetIds { get; public set; }
    public ModifyTransitGatewayVpcAttachmentRequestOptions Options { get; public set; }
    public List`1<string> RemoveSubnetIds { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public List`1<string> get_AddSubnetIds();
    public void set_AddSubnetIds(List`1<string> value);
    internal bool IsSetAddSubnetIds();
    public ModifyTransitGatewayVpcAttachmentRequestOptions get_Options();
    public void set_Options(ModifyTransitGatewayVpcAttachmentRequestOptions value);
    internal bool IsSetOptions();
    public List`1<string> get_RemoveSubnetIds();
    public void set_RemoveSubnetIds(List`1<string> value);
    internal bool IsSetRemoveSubnetIds();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.ModifyTransitGatewayVpcAttachmentRequestOptions : object {
    private ApplianceModeSupportValue _applianceModeSupport;
    private DnsSupportValue _dnsSupport;
    private Ipv6SupportValue _ipv6Support;
    private SecurityGroupReferencingSupportValue _securityGroupReferencingSupport;
    public ApplianceModeSupportValue ApplianceModeSupport { get; public set; }
    public DnsSupportValue DnsSupport { get; public set; }
    public Ipv6SupportValue Ipv6Support { get; public set; }
    public SecurityGroupReferencingSupportValue SecurityGroupReferencingSupport { get; public set; }
    public ApplianceModeSupportValue get_ApplianceModeSupport();
    public void set_ApplianceModeSupport(ApplianceModeSupportValue value);
    internal bool IsSetApplianceModeSupport();
    public DnsSupportValue get_DnsSupport();
    public void set_DnsSupport(DnsSupportValue value);
    internal bool IsSetDnsSupport();
    public Ipv6SupportValue get_Ipv6Support();
    public void set_Ipv6Support(Ipv6SupportValue value);
    internal bool IsSetIpv6Support();
    public SecurityGroupReferencingSupportValue get_SecurityGroupReferencingSupport();
    public void set_SecurityGroupReferencingSupport(SecurityGroupReferencingSupportValue value);
    internal bool IsSetSecurityGroupReferencingSupport();
}
public class Amazon.EC2.Model.ModifyTransitGatewayVpcAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayVpcAttachment _transitGatewayVpcAttachment;
    public TransitGatewayVpcAttachment TransitGatewayVpcAttachment { get; public set; }
    public TransitGatewayVpcAttachment get_TransitGatewayVpcAttachment();
    public void set_TransitGatewayVpcAttachment(TransitGatewayVpcAttachment value);
    internal bool IsSetTransitGatewayVpcAttachment();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessEndpointEniOptions : object {
    private Nullable`1<int> _port;
    private VerifiedAccessEndpointProtocol _protocol;
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public VerifiedAccessEndpointProtocol Protocol { get; public set; }
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public VerifiedAccessEndpointProtocol get_Protocol();
    public void set_Protocol(VerifiedAccessEndpointProtocol value);
    internal bool IsSetProtocol();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessEndpointLoadBalancerOptions : object {
    private Nullable`1<int> _port;
    private VerifiedAccessEndpointProtocol _protocol;
    private List`1<string> _subnetIds;
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public VerifiedAccessEndpointProtocol Protocol { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public VerifiedAccessEndpointProtocol get_Protocol();
    public void set_Protocol(VerifiedAccessEndpointProtocol value);
    internal bool IsSetProtocol();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessEndpointPolicyRequest : AmazonEC2Request {
    private string _clientToken;
    private string _policyDocument;
    private Nullable`1<bool> _policyEnabled;
    private VerifiedAccessSseSpecificationRequest _sseSpecification;
    private string _verifiedAccessEndpointId;
    public string ClientToken { get; public set; }
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PolicyEnabled { get; public set; }
    public VerifiedAccessSseSpecificationRequest SseSpecification { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessEndpointId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PolicyEnabled();
    public void set_PolicyEnabled(Nullable`1<bool> value);
    internal bool IsSetPolicyEnabled();
    public VerifiedAccessSseSpecificationRequest get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationRequest value);
    internal bool IsSetSseSpecification();
    public string get_VerifiedAccessEndpointId();
    public void set_VerifiedAccessEndpointId(string value);
    internal bool IsSetVerifiedAccessEndpointId();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessEndpointPolicyResponse : AmazonWebServiceResponse {
    private string _policyDocument;
    private Nullable`1<bool> _policyEnabled;
    private VerifiedAccessSseSpecificationResponse _sseSpecification;
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PolicyEnabled { get; public set; }
    public VerifiedAccessSseSpecificationResponse SseSpecification { get; public set; }
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PolicyEnabled();
    public void set_PolicyEnabled(Nullable`1<bool> value);
    internal bool IsSetPolicyEnabled();
    public VerifiedAccessSseSpecificationResponse get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationResponse value);
    internal bool IsSetSseSpecification();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessEndpointRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private ModifyVerifiedAccessEndpointLoadBalancerOptions _loadBalancerOptions;
    private ModifyVerifiedAccessEndpointEniOptions _networkInterfaceOptions;
    private string _verifiedAccessEndpointId;
    private string _verifiedAccessGroupId;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public ModifyVerifiedAccessEndpointLoadBalancerOptions LoadBalancerOptions { get; public set; }
    public ModifyVerifiedAccessEndpointEniOptions NetworkInterfaceOptions { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessEndpointId { get; public set; }
    public string VerifiedAccessGroupId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ModifyVerifiedAccessEndpointLoadBalancerOptions get_LoadBalancerOptions();
    public void set_LoadBalancerOptions(ModifyVerifiedAccessEndpointLoadBalancerOptions value);
    internal bool IsSetLoadBalancerOptions();
    public ModifyVerifiedAccessEndpointEniOptions get_NetworkInterfaceOptions();
    public void set_NetworkInterfaceOptions(ModifyVerifiedAccessEndpointEniOptions value);
    internal bool IsSetNetworkInterfaceOptions();
    public string get_VerifiedAccessEndpointId();
    public void set_VerifiedAccessEndpointId(string value);
    internal bool IsSetVerifiedAccessEndpointId();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessEndpointResponse : AmazonWebServiceResponse {
    private VerifiedAccessEndpoint _verifiedAccessEndpoint;
    public VerifiedAccessEndpoint VerifiedAccessEndpoint { get; public set; }
    public VerifiedAccessEndpoint get_VerifiedAccessEndpoint();
    public void set_VerifiedAccessEndpoint(VerifiedAccessEndpoint value);
    internal bool IsSetVerifiedAccessEndpoint();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessGroupPolicyRequest : AmazonEC2Request {
    private string _clientToken;
    private string _policyDocument;
    private Nullable`1<bool> _policyEnabled;
    private VerifiedAccessSseSpecificationRequest _sseSpecification;
    private string _verifiedAccessGroupId;
    public string ClientToken { get; public set; }
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PolicyEnabled { get; public set; }
    public VerifiedAccessSseSpecificationRequest SseSpecification { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessGroupId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PolicyEnabled();
    public void set_PolicyEnabled(Nullable`1<bool> value);
    internal bool IsSetPolicyEnabled();
    public VerifiedAccessSseSpecificationRequest get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationRequest value);
    internal bool IsSetSseSpecification();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessGroupPolicyResponse : AmazonWebServiceResponse {
    private string _policyDocument;
    private Nullable`1<bool> _policyEnabled;
    private VerifiedAccessSseSpecificationResponse _sseSpecification;
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PolicyEnabled { get; public set; }
    public VerifiedAccessSseSpecificationResponse SseSpecification { get; public set; }
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PolicyEnabled();
    public void set_PolicyEnabled(Nullable`1<bool> value);
    internal bool IsSetPolicyEnabled();
    public VerifiedAccessSseSpecificationResponse get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationResponse value);
    internal bool IsSetSseSpecification();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessGroupRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _verifiedAccessGroupId;
    private string _verifiedAccessInstanceId;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessGroupId { get; public set; }
    public string VerifiedAccessInstanceId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessGroupResponse : AmazonWebServiceResponse {
    private VerifiedAccessGroup _verifiedAccessGroup;
    public VerifiedAccessGroup VerifiedAccessGroup { get; public set; }
    public VerifiedAccessGroup get_VerifiedAccessGroup();
    public void set_VerifiedAccessGroup(VerifiedAccessGroup value);
    internal bool IsSetVerifiedAccessGroup();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessInstanceLoggingConfigurationRequest : AmazonEC2Request {
    private VerifiedAccessLogOptions _accessLogs;
    private string _clientToken;
    private string _verifiedAccessInstanceId;
    [AWSPropertyAttribute]
public VerifiedAccessLogOptions AccessLogs { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessInstanceId { get; public set; }
    public VerifiedAccessLogOptions get_AccessLogs();
    public void set_AccessLogs(VerifiedAccessLogOptions value);
    internal bool IsSetAccessLogs();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessInstanceLoggingConfigurationResponse : AmazonWebServiceResponse {
    private VerifiedAccessInstanceLoggingConfiguration _loggingConfiguration;
    public VerifiedAccessInstanceLoggingConfiguration LoggingConfiguration { get; public set; }
    public VerifiedAccessInstanceLoggingConfiguration get_LoggingConfiguration();
    public void set_LoggingConfiguration(VerifiedAccessInstanceLoggingConfiguration value);
    internal bool IsSetLoggingConfiguration();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessInstanceRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _verifiedAccessInstanceId;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessInstanceId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessInstanceResponse : AmazonWebServiceResponse {
    private VerifiedAccessInstance _verifiedAccessInstance;
    public VerifiedAccessInstance VerifiedAccessInstance { get; public set; }
    public VerifiedAccessInstance get_VerifiedAccessInstance();
    public void set_VerifiedAccessInstance(VerifiedAccessInstance value);
    internal bool IsSetVerifiedAccessInstance();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessTrustProviderDeviceOptions : object {
    private string _publicSigningKeyUrl;
    public string PublicSigningKeyUrl { get; public set; }
    public string get_PublicSigningKeyUrl();
    public void set_PublicSigningKeyUrl(string value);
    internal bool IsSetPublicSigningKeyUrl();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessTrustProviderOidcOptions : object {
    private string _authorizationEndpoint;
    private string _clientId;
    private string _clientSecret;
    private string _issuer;
    private string _scope;
    private string _tokenEndpoint;
    private string _userInfoEndpoint;
    public string AuthorizationEndpoint { get; public set; }
    public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ClientSecret { get; public set; }
    public string Issuer { get; public set; }
    public string Scope { get; public set; }
    public string TokenEndpoint { get; public set; }
    public string UserInfoEndpoint { get; public set; }
    public string get_AuthorizationEndpoint();
    public void set_AuthorizationEndpoint(string value);
    internal bool IsSetAuthorizationEndpoint();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientSecret();
    public void set_ClientSecret(string value);
    internal bool IsSetClientSecret();
    public string get_Issuer();
    public void set_Issuer(string value);
    internal bool IsSetIssuer();
    public string get_Scope();
    public void set_Scope(string value);
    internal bool IsSetScope();
    public string get_TokenEndpoint();
    public void set_TokenEndpoint(string value);
    internal bool IsSetTokenEndpoint();
    public string get_UserInfoEndpoint();
    public void set_UserInfoEndpoint(string value);
    internal bool IsSetUserInfoEndpoint();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessTrustProviderRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private ModifyVerifiedAccessTrustProviderDeviceOptions _deviceOptions;
    private ModifyVerifiedAccessTrustProviderOidcOptions _oidcOptions;
    private VerifiedAccessSseSpecificationRequest _sseSpecification;
    private string _verifiedAccessTrustProviderId;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public ModifyVerifiedAccessTrustProviderDeviceOptions DeviceOptions { get; public set; }
    public ModifyVerifiedAccessTrustProviderOidcOptions OidcOptions { get; public set; }
    public VerifiedAccessSseSpecificationRequest SseSpecification { get; public set; }
    [AWSPropertyAttribute]
public string VerifiedAccessTrustProviderId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ModifyVerifiedAccessTrustProviderDeviceOptions get_DeviceOptions();
    public void set_DeviceOptions(ModifyVerifiedAccessTrustProviderDeviceOptions value);
    internal bool IsSetDeviceOptions();
    public ModifyVerifiedAccessTrustProviderOidcOptions get_OidcOptions();
    public void set_OidcOptions(ModifyVerifiedAccessTrustProviderOidcOptions value);
    internal bool IsSetOidcOptions();
    public VerifiedAccessSseSpecificationRequest get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationRequest value);
    internal bool IsSetSseSpecification();
    public string get_VerifiedAccessTrustProviderId();
    public void set_VerifiedAccessTrustProviderId(string value);
    internal bool IsSetVerifiedAccessTrustProviderId();
}
public class Amazon.EC2.Model.ModifyVerifiedAccessTrustProviderResponse : AmazonWebServiceResponse {
    private VerifiedAccessTrustProvider _verifiedAccessTrustProvider;
    public VerifiedAccessTrustProvider VerifiedAccessTrustProvider { get; public set; }
    public VerifiedAccessTrustProvider get_VerifiedAccessTrustProvider();
    public void set_VerifiedAccessTrustProvider(VerifiedAccessTrustProvider value);
    internal bool IsSetVerifiedAccessTrustProvider();
}
public class Amazon.EC2.Model.ModifyVolumeAttributeRequest : AmazonEC2Request {
    private Nullable`1<bool> _autoEnableIO;
    private string _volumeId;
    public Nullable`1<bool> AutoEnableIO { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public Nullable`1<bool> get_AutoEnableIO();
    public void set_AutoEnableIO(Nullable`1<bool> value);
    internal bool IsSetAutoEnableIO();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.ModifyVolumeAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyVolumeRequest : AmazonEC2Request {
    private Nullable`1<int> _iops;
    private Nullable`1<bool> _multiAttachEnabled;
    private Nullable`1<int> _size;
    private Nullable`1<int> _throughput;
    private string _volumeId;
    private VolumeType _volumeType;
    public Nullable`1<int> Iops { get; public set; }
    public Nullable`1<bool> MultiAttachEnabled { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public Nullable`1<int> Throughput { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public Nullable`1<bool> get_MultiAttachEnabled();
    public void set_MultiAttachEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiAttachEnabled();
    public Nullable`1<int> get_Size();
    public void set_Size(Nullable`1<int> value);
    internal bool IsSetSize();
    public Nullable`1<int> get_Throughput();
    public void set_Throughput(Nullable`1<int> value);
    internal bool IsSetThroughput();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.ModifyVolumeResponse : AmazonWebServiceResponse {
    private VolumeModification _volumeModification;
    public VolumeModification VolumeModification { get; public set; }
    public VolumeModification get_VolumeModification();
    public void set_VolumeModification(VolumeModification value);
    internal bool IsSetVolumeModification();
}
public class Amazon.EC2.Model.ModifyVpcAttributeRequest : AmazonEC2Request {
    private Nullable`1<bool> _enableDnsHostnames;
    private Nullable`1<bool> _enableDnsSupport;
    private Nullable`1<bool> _enableNetworkAddressUsageMetrics;
    private string _vpcId;
    public Nullable`1<bool> EnableDnsHostnames { get; public set; }
    public Nullable`1<bool> EnableDnsSupport { get; public set; }
    public Nullable`1<bool> EnableNetworkAddressUsageMetrics { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public Nullable`1<bool> get_EnableDnsHostnames();
    public void set_EnableDnsHostnames(Nullable`1<bool> value);
    internal bool IsSetEnableDnsHostnames();
    public Nullable`1<bool> get_EnableDnsSupport();
    public void set_EnableDnsSupport(Nullable`1<bool> value);
    internal bool IsSetEnableDnsSupport();
    public Nullable`1<bool> get_EnableNetworkAddressUsageMetrics();
    public void set_EnableNetworkAddressUsageMetrics(Nullable`1<bool> value);
    internal bool IsSetEnableNetworkAddressUsageMetrics();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.ModifyVpcAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyVpcEndpointConnectionNotificationRequest : AmazonEC2Request {
    private List`1<string> _connectionEvents;
    private string _connectionNotificationArn;
    private string _connectionNotificationId;
    public List`1<string> ConnectionEvents { get; public set; }
    public string ConnectionNotificationArn { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionNotificationId { get; public set; }
    public List`1<string> get_ConnectionEvents();
    public void set_ConnectionEvents(List`1<string> value);
    internal bool IsSetConnectionEvents();
    public string get_ConnectionNotificationArn();
    public void set_ConnectionNotificationArn(string value);
    internal bool IsSetConnectionNotificationArn();
    public string get_ConnectionNotificationId();
    public void set_ConnectionNotificationId(string value);
    internal bool IsSetConnectionNotificationId();
}
public class Amazon.EC2.Model.ModifyVpcEndpointConnectionNotificationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _returnValue;
    public Nullable`1<bool> ReturnValue { get; public set; }
    public Nullable`1<bool> get_ReturnValue();
    public void set_ReturnValue(Nullable`1<bool> value);
    internal bool IsSetReturnValue();
}
public class Amazon.EC2.Model.ModifyVpcEndpointRequest : AmazonEC2Request {
    private List`1<string> _addRouteTableIds;
    private List`1<string> _addSecurityGroupIds;
    private List`1<string> _addSubnetIds;
    private DnsOptionsSpecification _dnsOptions;
    private IpAddressType _ipAddressType;
    private string _policyDocument;
    private Nullable`1<bool> _privateDnsEnabled;
    private List`1<string> _removeRouteTableIds;
    private List`1<string> _removeSecurityGroupIds;
    private List`1<string> _removeSubnetIds;
    private Nullable`1<bool> _resetPolicy;
    private List`1<SubnetConfiguration> _subnetConfigurations;
    private string _vpcEndpointId;
    public List`1<string> AddRouteTableIds { get; public set; }
    public List`1<string> AddSecurityGroupIds { get; public set; }
    public List`1<string> AddSubnetIds { get; public set; }
    public DnsOptionsSpecification DnsOptions { get; public set; }
    public IpAddressType IpAddressType { get; public set; }
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PrivateDnsEnabled { get; public set; }
    public List`1<string> RemoveRouteTableIds { get; public set; }
    public List`1<string> RemoveSecurityGroupIds { get; public set; }
    public List`1<string> RemoveSubnetIds { get; public set; }
    public Nullable`1<bool> ResetPolicy { get; public set; }
    public List`1<SubnetConfiguration> SubnetConfigurations { get; public set; }
    [AWSPropertyAttribute]
public string VpcEndpointId { get; public set; }
    public List`1<string> get_AddRouteTableIds();
    public void set_AddRouteTableIds(List`1<string> value);
    internal bool IsSetAddRouteTableIds();
    public List`1<string> get_AddSecurityGroupIds();
    public void set_AddSecurityGroupIds(List`1<string> value);
    internal bool IsSetAddSecurityGroupIds();
    public List`1<string> get_AddSubnetIds();
    public void set_AddSubnetIds(List`1<string> value);
    internal bool IsSetAddSubnetIds();
    public DnsOptionsSpecification get_DnsOptions();
    public void set_DnsOptions(DnsOptionsSpecification value);
    internal bool IsSetDnsOptions();
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PrivateDnsEnabled();
    public void set_PrivateDnsEnabled(Nullable`1<bool> value);
    internal bool IsSetPrivateDnsEnabled();
    public List`1<string> get_RemoveRouteTableIds();
    public void set_RemoveRouteTableIds(List`1<string> value);
    internal bool IsSetRemoveRouteTableIds();
    public List`1<string> get_RemoveSecurityGroupIds();
    public void set_RemoveSecurityGroupIds(List`1<string> value);
    internal bool IsSetRemoveSecurityGroupIds();
    public List`1<string> get_RemoveSubnetIds();
    public void set_RemoveSubnetIds(List`1<string> value);
    internal bool IsSetRemoveSubnetIds();
    public Nullable`1<bool> get_ResetPolicy();
    public void set_ResetPolicy(Nullable`1<bool> value);
    internal bool IsSetResetPolicy();
    public List`1<SubnetConfiguration> get_SubnetConfigurations();
    public void set_SubnetConfigurations(List`1<SubnetConfiguration> value);
    internal bool IsSetSubnetConfigurations();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
}
public class Amazon.EC2.Model.ModifyVpcEndpointResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyVpcEndpointServiceConfigurationRequest : AmazonEC2Request {
    private Nullable`1<bool> _acceptanceRequired;
    private List`1<string> _addGatewayLoadBalancerArns;
    private List`1<string> _addNetworkLoadBalancerArns;
    private List`1<string> _addSupportedIpAddressTypes;
    private string _privateDnsName;
    private List`1<string> _removeGatewayLoadBalancerArns;
    private List`1<string> _removeNetworkLoadBalancerArns;
    private Nullable`1<bool> _removePrivateDnsName;
    private List`1<string> _removeSupportedIpAddressTypes;
    private string _serviceId;
    public Nullable`1<bool> AcceptanceRequired { get; public set; }
    public List`1<string> AddGatewayLoadBalancerArns { get; public set; }
    public List`1<string> AddNetworkLoadBalancerArns { get; public set; }
    public List`1<string> AddSupportedIpAddressTypes { get; public set; }
    public string PrivateDnsName { get; public set; }
    public List`1<string> RemoveGatewayLoadBalancerArns { get; public set; }
    public List`1<string> RemoveNetworkLoadBalancerArns { get; public set; }
    public Nullable`1<bool> RemovePrivateDnsName { get; public set; }
    public List`1<string> RemoveSupportedIpAddressTypes { get; public set; }
    [AWSPropertyAttribute]
public string ServiceId { get; public set; }
    public Nullable`1<bool> get_AcceptanceRequired();
    public void set_AcceptanceRequired(Nullable`1<bool> value);
    internal bool IsSetAcceptanceRequired();
    public List`1<string> get_AddGatewayLoadBalancerArns();
    public void set_AddGatewayLoadBalancerArns(List`1<string> value);
    internal bool IsSetAddGatewayLoadBalancerArns();
    public List`1<string> get_AddNetworkLoadBalancerArns();
    public void set_AddNetworkLoadBalancerArns(List`1<string> value);
    internal bool IsSetAddNetworkLoadBalancerArns();
    public List`1<string> get_AddSupportedIpAddressTypes();
    public void set_AddSupportedIpAddressTypes(List`1<string> value);
    internal bool IsSetAddSupportedIpAddressTypes();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public List`1<string> get_RemoveGatewayLoadBalancerArns();
    public void set_RemoveGatewayLoadBalancerArns(List`1<string> value);
    internal bool IsSetRemoveGatewayLoadBalancerArns();
    public List`1<string> get_RemoveNetworkLoadBalancerArns();
    public void set_RemoveNetworkLoadBalancerArns(List`1<string> value);
    internal bool IsSetRemoveNetworkLoadBalancerArns();
    public Nullable`1<bool> get_RemovePrivateDnsName();
    public void set_RemovePrivateDnsName(Nullable`1<bool> value);
    internal bool IsSetRemovePrivateDnsName();
    public List`1<string> get_RemoveSupportedIpAddressTypes();
    public void set_RemoveSupportedIpAddressTypes(List`1<string> value);
    internal bool IsSetRemoveSupportedIpAddressTypes();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
}
public class Amazon.EC2.Model.ModifyVpcEndpointServiceConfigurationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ModifyVpcEndpointServicePayerResponsibilityRequest : AmazonEC2Request {
    private PayerResponsibility _payerResponsibility;
    private string _serviceId;
    [AWSPropertyAttribute]
public PayerResponsibility PayerResponsibility { get; public set; }
    [AWSPropertyAttribute]
public string ServiceId { get; public set; }
    public PayerResponsibility get_PayerResponsibility();
    public void set_PayerResponsibility(PayerResponsibility value);
    internal bool IsSetPayerResponsibility();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
}
public class Amazon.EC2.Model.ModifyVpcEndpointServicePayerResponsibilityResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _returnValue;
    public Nullable`1<bool> ReturnValue { get; public set; }
    public Nullable`1<bool> get_ReturnValue();
    public void set_ReturnValue(Nullable`1<bool> value);
    internal bool IsSetReturnValue();
}
public class Amazon.EC2.Model.ModifyVpcEndpointServicePermissionsRequest : AmazonEC2Request {
    private List`1<string> _addAllowedPrincipals;
    private List`1<string> _removeAllowedPrincipals;
    private string _serviceId;
    public List`1<string> AddAllowedPrincipals { get; public set; }
    public List`1<string> RemoveAllowedPrincipals { get; public set; }
    [AWSPropertyAttribute]
public string ServiceId { get; public set; }
    public List`1<string> get_AddAllowedPrincipals();
    public void set_AddAllowedPrincipals(List`1<string> value);
    internal bool IsSetAddAllowedPrincipals();
    public List`1<string> get_RemoveAllowedPrincipals();
    public void set_RemoveAllowedPrincipals(List`1<string> value);
    internal bool IsSetRemoveAllowedPrincipals();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
}
public class Amazon.EC2.Model.ModifyVpcEndpointServicePermissionsResponse : AmazonWebServiceResponse {
    private List`1<AddedPrincipal> _addedPrincipals;
    private Nullable`1<bool> _returnValue;
    public List`1<AddedPrincipal> AddedPrincipals { get; public set; }
    public Nullable`1<bool> ReturnValue { get; public set; }
    public List`1<AddedPrincipal> get_AddedPrincipals();
    public void set_AddedPrincipals(List`1<AddedPrincipal> value);
    internal bool IsSetAddedPrincipals();
    public Nullable`1<bool> get_ReturnValue();
    public void set_ReturnValue(Nullable`1<bool> value);
    internal bool IsSetReturnValue();
}
public class Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest : AmazonEC2Request {
    private PeeringConnectionOptionsRequest _accepterPeeringConnectionOptions;
    private PeeringConnectionOptionsRequest _requesterPeeringConnectionOptions;
    private string _vpcPeeringConnectionId;
    public PeeringConnectionOptionsRequest AccepterPeeringConnectionOptions { get; public set; }
    public PeeringConnectionOptionsRequest RequesterPeeringConnectionOptions { get; public set; }
    [AWSPropertyAttribute]
public string VpcPeeringConnectionId { get; public set; }
    public PeeringConnectionOptionsRequest get_AccepterPeeringConnectionOptions();
    public void set_AccepterPeeringConnectionOptions(PeeringConnectionOptionsRequest value);
    internal bool IsSetAccepterPeeringConnectionOptions();
    public PeeringConnectionOptionsRequest get_RequesterPeeringConnectionOptions();
    public void set_RequesterPeeringConnectionOptions(PeeringConnectionOptionsRequest value);
    internal bool IsSetRequesterPeeringConnectionOptions();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsResponse : AmazonWebServiceResponse {
    private PeeringConnectionOptions _accepterPeeringConnectionOptions;
    private PeeringConnectionOptions _requesterPeeringConnectionOptions;
    public PeeringConnectionOptions AccepterPeeringConnectionOptions { get; public set; }
    public PeeringConnectionOptions RequesterPeeringConnectionOptions { get; public set; }
    public PeeringConnectionOptions get_AccepterPeeringConnectionOptions();
    public void set_AccepterPeeringConnectionOptions(PeeringConnectionOptions value);
    internal bool IsSetAccepterPeeringConnectionOptions();
    public PeeringConnectionOptions get_RequesterPeeringConnectionOptions();
    public void set_RequesterPeeringConnectionOptions(PeeringConnectionOptions value);
    internal bool IsSetRequesterPeeringConnectionOptions();
}
public class Amazon.EC2.Model.ModifyVpcTenancyRequest : AmazonEC2Request {
    private VpcTenancy _instanceTenancy;
    private string _vpcId;
    [AWSPropertyAttribute]
public VpcTenancy InstanceTenancy { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public VpcTenancy get_InstanceTenancy();
    public void set_InstanceTenancy(VpcTenancy value);
    internal bool IsSetInstanceTenancy();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.ModifyVpcTenancyResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _returnValue;
    public Nullable`1<bool> ReturnValue { get; public set; }
    public Nullable`1<bool> get_ReturnValue();
    public void set_ReturnValue(Nullable`1<bool> value);
    internal bool IsSetReturnValue();
}
public class Amazon.EC2.Model.ModifyVpnConnectionOptionsRequest : AmazonEC2Request {
    private string _localIpv4NetworkCidr;
    private string _localIpv6NetworkCidr;
    private string _remoteIpv4NetworkCidr;
    private string _remoteIpv6NetworkCidr;
    private string _vpnConnectionId;
    public string LocalIpv4NetworkCidr { get; public set; }
    public string LocalIpv6NetworkCidr { get; public set; }
    public string RemoteIpv4NetworkCidr { get; public set; }
    public string RemoteIpv6NetworkCidr { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    public string get_LocalIpv4NetworkCidr();
    public void set_LocalIpv4NetworkCidr(string value);
    internal bool IsSetLocalIpv4NetworkCidr();
    public string get_LocalIpv6NetworkCidr();
    public void set_LocalIpv6NetworkCidr(string value);
    internal bool IsSetLocalIpv6NetworkCidr();
    public string get_RemoteIpv4NetworkCidr();
    public void set_RemoteIpv4NetworkCidr(string value);
    internal bool IsSetRemoteIpv4NetworkCidr();
    public string get_RemoteIpv6NetworkCidr();
    public void set_RemoteIpv6NetworkCidr(string value);
    internal bool IsSetRemoteIpv6NetworkCidr();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.ModifyVpnConnectionOptionsResponse : AmazonWebServiceResponse {
    private VpnConnection _vpnConnection;
    public VpnConnection VpnConnection { get; public set; }
    public VpnConnection get_VpnConnection();
    public void set_VpnConnection(VpnConnection value);
    internal bool IsSetVpnConnection();
}
public class Amazon.EC2.Model.ModifyVpnConnectionRequest : AmazonEC2Request {
    private string _customerGatewayId;
    private string _transitGatewayId;
    private string _vpnConnectionId;
    private string _vpnGatewayId;
    public string CustomerGatewayId { get; public set; }
    public string TransitGatewayId { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    public string VpnGatewayId { get; public set; }
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.ModifyVpnConnectionResponse : AmazonWebServiceResponse {
    private VpnConnection _vpnConnection;
    public VpnConnection VpnConnection { get; public set; }
    public VpnConnection get_VpnConnection();
    public void set_VpnConnection(VpnConnection value);
    internal bool IsSetVpnConnection();
}
public class Amazon.EC2.Model.ModifyVpnTunnelCertificateRequest : AmazonEC2Request {
    private string _vpnConnectionId;
    private string _vpnTunnelOutsideIpAddress;
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    [AWSPropertyAttribute]
public string VpnTunnelOutsideIpAddress { get; public set; }
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnTunnelOutsideIpAddress();
    public void set_VpnTunnelOutsideIpAddress(string value);
    internal bool IsSetVpnTunnelOutsideIpAddress();
}
public class Amazon.EC2.Model.ModifyVpnTunnelCertificateResponse : AmazonWebServiceResponse {
    private VpnConnection _vpnConnection;
    public VpnConnection VpnConnection { get; public set; }
    public VpnConnection get_VpnConnection();
    public void set_VpnConnection(VpnConnection value);
    internal bool IsSetVpnConnection();
}
public class Amazon.EC2.Model.ModifyVpnTunnelOptionsRequest : AmazonEC2Request {
    private Nullable`1<bool> _skipTunnelReplacement;
    private ModifyVpnTunnelOptionsSpecification _tunnelOptions;
    private string _vpnConnectionId;
    private string _vpnTunnelOutsideIpAddress;
    public Nullable`1<bool> SkipTunnelReplacement { get; public set; }
    [AWSPropertyAttribute]
public ModifyVpnTunnelOptionsSpecification TunnelOptions { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    [AWSPropertyAttribute]
public string VpnTunnelOutsideIpAddress { get; public set; }
    public Nullable`1<bool> get_SkipTunnelReplacement();
    public void set_SkipTunnelReplacement(Nullable`1<bool> value);
    internal bool IsSetSkipTunnelReplacement();
    public ModifyVpnTunnelOptionsSpecification get_TunnelOptions();
    public void set_TunnelOptions(ModifyVpnTunnelOptionsSpecification value);
    internal bool IsSetTunnelOptions();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnTunnelOutsideIpAddress();
    public void set_VpnTunnelOutsideIpAddress(string value);
    internal bool IsSetVpnTunnelOutsideIpAddress();
}
public class Amazon.EC2.Model.ModifyVpnTunnelOptionsResponse : AmazonWebServiceResponse {
    private VpnConnection _vpnConnection;
    public VpnConnection VpnConnection { get; public set; }
    public VpnConnection get_VpnConnection();
    public void set_VpnConnection(VpnConnection value);
    internal bool IsSetVpnConnection();
}
public class Amazon.EC2.Model.ModifyVpnTunnelOptionsSpecification : object {
    private string _dpdTimeoutAction;
    private Nullable`1<int> _dpdTimeoutSeconds;
    private Nullable`1<bool> _enableTunnelLifecycleControl;
    private List`1<IKEVersionsRequestListValue> _ikeVersions;
    private VpnTunnelLogOptionsSpecification _logOptions;
    private List`1<Phase1DHGroupNumbersRequestListValue> _phase1DHGroupNumbers;
    private List`1<Phase1EncryptionAlgorithmsRequestListValue> _phase1EncryptionAlgorithms;
    private List`1<Phase1IntegrityAlgorithmsRequestListValue> _phase1IntegrityAlgorithms;
    private Nullable`1<int> _phase1LifetimeSeconds;
    private List`1<Phase2DHGroupNumbersRequestListValue> _phase2DHGroupNumbers;
    private List`1<Phase2EncryptionAlgorithmsRequestListValue> _phase2EncryptionAlgorithms;
    private List`1<Phase2IntegrityAlgorithmsRequestListValue> _phase2IntegrityAlgorithms;
    private Nullable`1<int> _phase2LifetimeSeconds;
    private string _preSharedKey;
    private Nullable`1<int> _rekeyFuzzPercentage;
    private Nullable`1<int> _rekeyMarginTimeSeconds;
    private Nullable`1<int> _replayWindowSize;
    private string _startupAction;
    private string _tunnelInsideCidr;
    private string _tunnelInsideIpv6Cidr;
    public string DPDTimeoutAction { get; public set; }
    public Nullable`1<int> DPDTimeoutSeconds { get; public set; }
    public Nullable`1<bool> EnableTunnelLifecycleControl { get; public set; }
    public List`1<IKEVersionsRequestListValue> IKEVersions { get; public set; }
    public VpnTunnelLogOptionsSpecification LogOptions { get; public set; }
    public List`1<Phase1DHGroupNumbersRequestListValue> Phase1DHGroupNumbers { get; public set; }
    public List`1<Phase1EncryptionAlgorithmsRequestListValue> Phase1EncryptionAlgorithms { get; public set; }
    public List`1<Phase1IntegrityAlgorithmsRequestListValue> Phase1IntegrityAlgorithms { get; public set; }
    public Nullable`1<int> Phase1LifetimeSeconds { get; public set; }
    public List`1<Phase2DHGroupNumbersRequestListValue> Phase2DHGroupNumbers { get; public set; }
    public List`1<Phase2EncryptionAlgorithmsRequestListValue> Phase2EncryptionAlgorithms { get; public set; }
    public List`1<Phase2IntegrityAlgorithmsRequestListValue> Phase2IntegrityAlgorithms { get; public set; }
    public Nullable`1<int> Phase2LifetimeSeconds { get; public set; }
    [AWSPropertyAttribute]
public string PreSharedKey { get; public set; }
    public Nullable`1<int> RekeyFuzzPercentage { get; public set; }
    public Nullable`1<int> RekeyMarginTimeSeconds { get; public set; }
    public Nullable`1<int> ReplayWindowSize { get; public set; }
    public string StartupAction { get; public set; }
    public string TunnelInsideCidr { get; public set; }
    public string TunnelInsideIpv6Cidr { get; public set; }
    public string get_DPDTimeoutAction();
    public void set_DPDTimeoutAction(string value);
    internal bool IsSetDPDTimeoutAction();
    public Nullable`1<int> get_DPDTimeoutSeconds();
    public void set_DPDTimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetDPDTimeoutSeconds();
    public Nullable`1<bool> get_EnableTunnelLifecycleControl();
    public void set_EnableTunnelLifecycleControl(Nullable`1<bool> value);
    internal bool IsSetEnableTunnelLifecycleControl();
    public List`1<IKEVersionsRequestListValue> get_IKEVersions();
    public void set_IKEVersions(List`1<IKEVersionsRequestListValue> value);
    internal bool IsSetIKEVersions();
    public VpnTunnelLogOptionsSpecification get_LogOptions();
    public void set_LogOptions(VpnTunnelLogOptionsSpecification value);
    internal bool IsSetLogOptions();
    public List`1<Phase1DHGroupNumbersRequestListValue> get_Phase1DHGroupNumbers();
    public void set_Phase1DHGroupNumbers(List`1<Phase1DHGroupNumbersRequestListValue> value);
    internal bool IsSetPhase1DHGroupNumbers();
    public List`1<Phase1EncryptionAlgorithmsRequestListValue> get_Phase1EncryptionAlgorithms();
    public void set_Phase1EncryptionAlgorithms(List`1<Phase1EncryptionAlgorithmsRequestListValue> value);
    internal bool IsSetPhase1EncryptionAlgorithms();
    public List`1<Phase1IntegrityAlgorithmsRequestListValue> get_Phase1IntegrityAlgorithms();
    public void set_Phase1IntegrityAlgorithms(List`1<Phase1IntegrityAlgorithmsRequestListValue> value);
    internal bool IsSetPhase1IntegrityAlgorithms();
    public Nullable`1<int> get_Phase1LifetimeSeconds();
    public void set_Phase1LifetimeSeconds(Nullable`1<int> value);
    internal bool IsSetPhase1LifetimeSeconds();
    public List`1<Phase2DHGroupNumbersRequestListValue> get_Phase2DHGroupNumbers();
    public void set_Phase2DHGroupNumbers(List`1<Phase2DHGroupNumbersRequestListValue> value);
    internal bool IsSetPhase2DHGroupNumbers();
    public List`1<Phase2EncryptionAlgorithmsRequestListValue> get_Phase2EncryptionAlgorithms();
    public void set_Phase2EncryptionAlgorithms(List`1<Phase2EncryptionAlgorithmsRequestListValue> value);
    internal bool IsSetPhase2EncryptionAlgorithms();
    public List`1<Phase2IntegrityAlgorithmsRequestListValue> get_Phase2IntegrityAlgorithms();
    public void set_Phase2IntegrityAlgorithms(List`1<Phase2IntegrityAlgorithmsRequestListValue> value);
    internal bool IsSetPhase2IntegrityAlgorithms();
    public Nullable`1<int> get_Phase2LifetimeSeconds();
    public void set_Phase2LifetimeSeconds(Nullable`1<int> value);
    internal bool IsSetPhase2LifetimeSeconds();
    public string get_PreSharedKey();
    public void set_PreSharedKey(string value);
    internal bool IsSetPreSharedKey();
    public Nullable`1<int> get_RekeyFuzzPercentage();
    public void set_RekeyFuzzPercentage(Nullable`1<int> value);
    internal bool IsSetRekeyFuzzPercentage();
    public Nullable`1<int> get_RekeyMarginTimeSeconds();
    public void set_RekeyMarginTimeSeconds(Nullable`1<int> value);
    internal bool IsSetRekeyMarginTimeSeconds();
    public Nullable`1<int> get_ReplayWindowSize();
    public void set_ReplayWindowSize(Nullable`1<int> value);
    internal bool IsSetReplayWindowSize();
    public string get_StartupAction();
    public void set_StartupAction(string value);
    internal bool IsSetStartupAction();
    public string get_TunnelInsideCidr();
    public void set_TunnelInsideCidr(string value);
    internal bool IsSetTunnelInsideCidr();
    public string get_TunnelInsideIpv6Cidr();
    public void set_TunnelInsideIpv6Cidr(string value);
    internal bool IsSetTunnelInsideIpv6Cidr();
}
public class Amazon.EC2.Model.Monitoring : object {
    private MonitoringState _state;
    public MonitoringState State { get; public set; }
    public MonitoringState get_State();
    public void set_State(MonitoringState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.MonitorInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    public MonitorInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.MonitorInstancesResponse : AmazonWebServiceResponse {
    private List`1<InstanceMonitoring> _instanceMonitorings;
    public List`1<InstanceMonitoring> InstanceMonitorings { get; public set; }
    public List`1<InstanceMonitoring> get_InstanceMonitorings();
    public void set_InstanceMonitorings(List`1<InstanceMonitoring> value);
    internal bool IsSetInstanceMonitorings();
}
public class Amazon.EC2.Model.MoveAddressToVpcRequest : AmazonEC2Request {
    private string _publicIp;
    [AWSPropertyAttribute]
public string PublicIp { get; public set; }
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.MoveAddressToVpcResponse : AmazonWebServiceResponse {
    private string _allocationId;
    private Status _status;
    public string AllocationId { get; public set; }
    public Status Status { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public Status get_Status();
    public void set_Status(Status value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.MoveByoipCidrToIpamRequest : AmazonEC2Request {
    private string _cidr;
    private string _ipamPoolId;
    private string _ipamPoolOwner;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolOwner { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public string get_IpamPoolOwner();
    public void set_IpamPoolOwner(string value);
    internal bool IsSetIpamPoolOwner();
}
public class Amazon.EC2.Model.MoveByoipCidrToIpamResponse : AmazonWebServiceResponse {
    private ByoipCidr _byoipCidr;
    public ByoipCidr ByoipCidr { get; public set; }
    public ByoipCidr get_ByoipCidr();
    public void set_ByoipCidr(ByoipCidr value);
    internal bool IsSetByoipCidr();
}
public class Amazon.EC2.Model.MovingAddressStatus : object {
    private MoveStatus _moveStatus;
    private string _publicIp;
    public MoveStatus MoveStatus { get; public set; }
    public string PublicIp { get; public set; }
    public MoveStatus get_MoveStatus();
    public void set_MoveStatus(MoveStatus value);
    internal bool IsSetMoveStatus();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.NatGateway : object {
    private ConnectivityType _connectivityType;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<DateTime> _deleteTime;
    private string _failureCode;
    private string _failureMessage;
    private List`1<NatGatewayAddress> _natGatewayAddresses;
    private string _natGatewayId;
    private ProvisionedBandwidth _provisionedBandwidth;
    private NatGatewayState _state;
    private string _subnetId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public ConnectivityType ConnectivityType { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<DateTime> DeleteTime { get; public set; }
    public string FailureCode { get; public set; }
    public string FailureMessage { get; public set; }
    public List`1<NatGatewayAddress> NatGatewayAddresses { get; public set; }
    public string NatGatewayId { get; public set; }
    public ProvisionedBandwidth ProvisionedBandwidth { get; public set; }
    public NatGatewayState State { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public ConnectivityType get_ConnectivityType();
    public void set_ConnectivityType(ConnectivityType value);
    internal bool IsSetConnectivityType();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<DateTime> get_DeleteTime();
    public void set_DeleteTime(Nullable`1<DateTime> value);
    internal bool IsSetDeleteTime();
    public string get_FailureCode();
    public void set_FailureCode(string value);
    internal bool IsSetFailureCode();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public List`1<NatGatewayAddress> get_NatGatewayAddresses();
    public void set_NatGatewayAddresses(List`1<NatGatewayAddress> value);
    internal bool IsSetNatGatewayAddresses();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public ProvisionedBandwidth get_ProvisionedBandwidth();
    public void set_ProvisionedBandwidth(ProvisionedBandwidth value);
    internal bool IsSetProvisionedBandwidth();
    public NatGatewayState get_State();
    public void set_State(NatGatewayState value);
    internal bool IsSetState();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.NatGatewayAddress : object {
    private string _allocationId;
    private string _associationId;
    private string _failureMessage;
    private Nullable`1<bool> _isPrimary;
    private string _networkInterfaceId;
    private string _privateIp;
    private string _publicIp;
    private NatGatewayAddressStatus _status;
    public string AllocationId { get; public set; }
    public string AssociationId { get; public set; }
    public string FailureMessage { get; public set; }
    public Nullable`1<bool> IsPrimary { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string PrivateIp { get; public set; }
    public string PublicIp { get; public set; }
    public NatGatewayAddressStatus Status { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public Nullable`1<bool> get_IsPrimary();
    public void set_IsPrimary(Nullable`1<bool> value);
    internal bool IsSetIsPrimary();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_PrivateIp();
    public void set_PrivateIp(string value);
    internal bool IsSetPrivateIp();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public NatGatewayAddressStatus get_Status();
    public void set_Status(NatGatewayAddressStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.NetworkAcl : object {
    private List`1<NetworkAclAssociation> _associations;
    private List`1<NetworkAclEntry> _entries;
    private Nullable`1<bool> _isDefault;
    private string _networkAclId;
    private string _ownerId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public List`1<NetworkAclAssociation> Associations { get; public set; }
    public List`1<NetworkAclEntry> Entries { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public string NetworkAclId { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public List`1<NetworkAclAssociation> get_Associations();
    public void set_Associations(List`1<NetworkAclAssociation> value);
    internal bool IsSetAssociations();
    public List`1<NetworkAclEntry> get_Entries();
    public void set_Entries(List`1<NetworkAclEntry> value);
    internal bool IsSetEntries();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.NetworkAclAssociation : object {
    private string _networkAclAssociationId;
    private string _networkAclId;
    private string _subnetId;
    public string NetworkAclAssociationId { get; public set; }
    public string NetworkAclId { get; public set; }
    public string SubnetId { get; public set; }
    public string get_NetworkAclAssociationId();
    public void set_NetworkAclAssociationId(string value);
    internal bool IsSetNetworkAclAssociationId();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.NetworkAclEntry : object {
    private string _cidrBlock;
    private Nullable`1<bool> _egress;
    private IcmpTypeCode _icmpTypeCode;
    private string _ipv6CidrBlock;
    private PortRange _portRange;
    private string _protocol;
    private RuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    public string CidrBlock { get; public set; }
    public Nullable`1<bool> Egress { get; public set; }
    public IcmpTypeCode IcmpTypeCode { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    public PortRange PortRange { get; public set; }
    public string Protocol { get; public set; }
    public RuleAction RuleAction { get; public set; }
    public Nullable`1<int> RuleNumber { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public Nullable`1<bool> get_Egress();
    public void set_Egress(Nullable`1<bool> value);
    internal bool IsSetEgress();
    public IcmpTypeCode get_IcmpTypeCode();
    public void set_IcmpTypeCode(IcmpTypeCode value);
    internal bool IsSetIcmpTypeCode();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public RuleAction get_RuleAction();
    public void set_RuleAction(RuleAction value);
    internal bool IsSetRuleAction();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.NetworkBandwidthGbps : object {
    private Nullable`1<double> _max;
    private Nullable`1<double> _min;
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<double> get_Max();
    public void set_Max(Nullable`1<double> value);
    internal bool IsSetMax();
    public Nullable`1<double> get_Min();
    public void set_Min(Nullable`1<double> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.NetworkBandwidthGbpsRequest : object {
    private Nullable`1<double> _max;
    private Nullable`1<double> _min;
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<double> get_Max();
    public void set_Max(Nullable`1<double> value);
    internal bool IsSetMax();
    public Nullable`1<double> get_Min();
    public void set_Min(Nullable`1<double> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.NetworkCardInfo : object {
    private Nullable`1<double> _baselineBandwidthInGbps;
    private Nullable`1<int> _maximumNetworkInterfaces;
    private Nullable`1<int> _networkCardIndex;
    private string _networkPerformance;
    private Nullable`1<double> _peakBandwidthInGbps;
    public Nullable`1<double> BaselineBandwidthInGbps { get; public set; }
    public Nullable`1<int> MaximumNetworkInterfaces { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    public string NetworkPerformance { get; public set; }
    public Nullable`1<double> PeakBandwidthInGbps { get; public set; }
    public Nullable`1<double> get_BaselineBandwidthInGbps();
    public void set_BaselineBandwidthInGbps(Nullable`1<double> value);
    internal bool IsSetBaselineBandwidthInGbps();
    public Nullable`1<int> get_MaximumNetworkInterfaces();
    public void set_MaximumNetworkInterfaces(Nullable`1<int> value);
    internal bool IsSetMaximumNetworkInterfaces();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
    public string get_NetworkPerformance();
    public void set_NetworkPerformance(string value);
    internal bool IsSetNetworkPerformance();
    public Nullable`1<double> get_PeakBandwidthInGbps();
    public void set_PeakBandwidthInGbps(Nullable`1<double> value);
    internal bool IsSetPeakBandwidthInGbps();
}
public class Amazon.EC2.Model.NetworkInfo : object {
    private Nullable`1<int> _defaultNetworkCardIndex;
    private EfaInfo _efaInfo;
    private Nullable`1<bool> _efaSupported;
    private Nullable`1<bool> _enaSrdSupported;
    private EnaSupport _enaSupport;
    private Nullable`1<bool> _encryptionInTransitSupported;
    private Nullable`1<int> _ipv4AddressesPerInterface;
    private Nullable`1<int> _ipv6AddressesPerInterface;
    private Nullable`1<bool> _ipv6Supported;
    private Nullable`1<int> _maximumNetworkCards;
    private Nullable`1<int> _maximumNetworkInterfaces;
    private List`1<NetworkCardInfo> _networkCards;
    private string _networkPerformance;
    public Nullable`1<int> DefaultNetworkCardIndex { get; public set; }
    public EfaInfo EfaInfo { get; public set; }
    public Nullable`1<bool> EfaSupported { get; public set; }
    public Nullable`1<bool> EnaSrdSupported { get; public set; }
    public EnaSupport EnaSupport { get; public set; }
    public Nullable`1<bool> EncryptionInTransitSupported { get; public set; }
    public Nullable`1<int> Ipv4AddressesPerInterface { get; public set; }
    public Nullable`1<int> Ipv6AddressesPerInterface { get; public set; }
    public Nullable`1<bool> Ipv6Supported { get; public set; }
    public Nullable`1<int> MaximumNetworkCards { get; public set; }
    public Nullable`1<int> MaximumNetworkInterfaces { get; public set; }
    public List`1<NetworkCardInfo> NetworkCards { get; public set; }
    public string NetworkPerformance { get; public set; }
    public Nullable`1<int> get_DefaultNetworkCardIndex();
    public void set_DefaultNetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetDefaultNetworkCardIndex();
    public EfaInfo get_EfaInfo();
    public void set_EfaInfo(EfaInfo value);
    internal bool IsSetEfaInfo();
    public Nullable`1<bool> get_EfaSupported();
    public void set_EfaSupported(Nullable`1<bool> value);
    internal bool IsSetEfaSupported();
    public Nullable`1<bool> get_EnaSrdSupported();
    public void set_EnaSrdSupported(Nullable`1<bool> value);
    internal bool IsSetEnaSrdSupported();
    public EnaSupport get_EnaSupport();
    public void set_EnaSupport(EnaSupport value);
    internal bool IsSetEnaSupport();
    public Nullable`1<bool> get_EncryptionInTransitSupported();
    public void set_EncryptionInTransitSupported(Nullable`1<bool> value);
    internal bool IsSetEncryptionInTransitSupported();
    public Nullable`1<int> get_Ipv4AddressesPerInterface();
    public void set_Ipv4AddressesPerInterface(Nullable`1<int> value);
    internal bool IsSetIpv4AddressesPerInterface();
    public Nullable`1<int> get_Ipv6AddressesPerInterface();
    public void set_Ipv6AddressesPerInterface(Nullable`1<int> value);
    internal bool IsSetIpv6AddressesPerInterface();
    public Nullable`1<bool> get_Ipv6Supported();
    public void set_Ipv6Supported(Nullable`1<bool> value);
    internal bool IsSetIpv6Supported();
    public Nullable`1<int> get_MaximumNetworkCards();
    public void set_MaximumNetworkCards(Nullable`1<int> value);
    internal bool IsSetMaximumNetworkCards();
    public Nullable`1<int> get_MaximumNetworkInterfaces();
    public void set_MaximumNetworkInterfaces(Nullable`1<int> value);
    internal bool IsSetMaximumNetworkInterfaces();
    public List`1<NetworkCardInfo> get_NetworkCards();
    public void set_NetworkCards(List`1<NetworkCardInfo> value);
    internal bool IsSetNetworkCards();
    public string get_NetworkPerformance();
    public void set_NetworkPerformance(string value);
    internal bool IsSetNetworkPerformance();
}
public class Amazon.EC2.Model.NetworkInsightsAccessScope : object {
    private Nullable`1<DateTime> _createdDate;
    private string _networkInsightsAccessScopeArn;
    private string _networkInsightsAccessScopeId;
    private List`1<Tag> _tags;
    private Nullable`1<DateTime> _updatedDate;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInsightsAccessScopeArn { get; public set; }
    public string NetworkInsightsAccessScopeId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<DateTime> UpdatedDate { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_NetworkInsightsAccessScopeArn();
    public void set_NetworkInsightsAccessScopeArn(string value);
    internal bool IsSetNetworkInsightsAccessScopeArn();
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<DateTime> get_UpdatedDate();
    public void set_UpdatedDate(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedDate();
}
public class Amazon.EC2.Model.NetworkInsightsAccessScopeAnalysis : object {
    private Nullable`1<int> _analyzedEniCount;
    private Nullable`1<DateTime> _endDate;
    private FindingsFound _findingsFound;
    private string _networkInsightsAccessScopeAnalysisArn;
    private string _networkInsightsAccessScopeAnalysisId;
    private string _networkInsightsAccessScopeId;
    private Nullable`1<DateTime> _startDate;
    private AnalysisStatus _status;
    private string _statusMessage;
    private List`1<Tag> _tags;
    private string _warningMessage;
    public Nullable`1<int> AnalyzedEniCount { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    public FindingsFound FindingsFound { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInsightsAccessScopeAnalysisArn { get; public set; }
    public string NetworkInsightsAccessScopeAnalysisId { get; public set; }
    public string NetworkInsightsAccessScopeId { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public AnalysisStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string WarningMessage { get; public set; }
    public Nullable`1<int> get_AnalyzedEniCount();
    public void set_AnalyzedEniCount(Nullable`1<int> value);
    internal bool IsSetAnalyzedEniCount();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public FindingsFound get_FindingsFound();
    public void set_FindingsFound(FindingsFound value);
    internal bool IsSetFindingsFound();
    public string get_NetworkInsightsAccessScopeAnalysisArn();
    public void set_NetworkInsightsAccessScopeAnalysisArn(string value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisArn();
    public string get_NetworkInsightsAccessScopeAnalysisId();
    public void set_NetworkInsightsAccessScopeAnalysisId(string value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysisId();
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public AnalysisStatus get_Status();
    public void set_Status(AnalysisStatus value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_WarningMessage();
    public void set_WarningMessage(string value);
    internal bool IsSetWarningMessage();
}
public class Amazon.EC2.Model.NetworkInsightsAccessScopeContent : object {
    private List`1<AccessScopePath> _excludePaths;
    private List`1<AccessScopePath> _matchPaths;
    private string _networkInsightsAccessScopeId;
    public List`1<AccessScopePath> ExcludePaths { get; public set; }
    public List`1<AccessScopePath> MatchPaths { get; public set; }
    public string NetworkInsightsAccessScopeId { get; public set; }
    public List`1<AccessScopePath> get_ExcludePaths();
    public void set_ExcludePaths(List`1<AccessScopePath> value);
    internal bool IsSetExcludePaths();
    public List`1<AccessScopePath> get_MatchPaths();
    public void set_MatchPaths(List`1<AccessScopePath> value);
    internal bool IsSetMatchPaths();
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
}
public class Amazon.EC2.Model.NetworkInsightsAnalysis : object {
    private List`1<string> _additionalAccounts;
    private List`1<AlternatePathHint> _alternatePathHints;
    private List`1<Explanation> _explanations;
    private List`1<string> _filterInArns;
    private List`1<PathComponent> _forwardPathComponents;
    private string _networkInsightsAnalysisArn;
    private string _networkInsightsAnalysisId;
    private string _networkInsightsPathId;
    private Nullable`1<bool> _networkPathFound;
    private List`1<PathComponent> _returnPathComponents;
    private Nullable`1<DateTime> _startDate;
    private AnalysisStatus _status;
    private string _statusMessage;
    private List`1<string> _suggestedAccounts;
    private List`1<Tag> _tags;
    private string _warningMessage;
    public List`1<string> AdditionalAccounts { get; public set; }
    public List`1<AlternatePathHint> AlternatePathHints { get; public set; }
    public List`1<Explanation> Explanations { get; public set; }
    public List`1<string> FilterInArns { get; public set; }
    public List`1<PathComponent> ForwardPathComponents { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInsightsAnalysisArn { get; public set; }
    public string NetworkInsightsAnalysisId { get; public set; }
    public string NetworkInsightsPathId { get; public set; }
    public Nullable`1<bool> NetworkPathFound { get; public set; }
    public List`1<PathComponent> ReturnPathComponents { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public AnalysisStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<string> SuggestedAccounts { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string WarningMessage { get; public set; }
    public List`1<string> get_AdditionalAccounts();
    public void set_AdditionalAccounts(List`1<string> value);
    internal bool IsSetAdditionalAccounts();
    public List`1<AlternatePathHint> get_AlternatePathHints();
    public void set_AlternatePathHints(List`1<AlternatePathHint> value);
    internal bool IsSetAlternatePathHints();
    public List`1<Explanation> get_Explanations();
    public void set_Explanations(List`1<Explanation> value);
    internal bool IsSetExplanations();
    public List`1<string> get_FilterInArns();
    public void set_FilterInArns(List`1<string> value);
    internal bool IsSetFilterInArns();
    public List`1<PathComponent> get_ForwardPathComponents();
    public void set_ForwardPathComponents(List`1<PathComponent> value);
    internal bool IsSetForwardPathComponents();
    public string get_NetworkInsightsAnalysisArn();
    public void set_NetworkInsightsAnalysisArn(string value);
    internal bool IsSetNetworkInsightsAnalysisArn();
    public string get_NetworkInsightsAnalysisId();
    public void set_NetworkInsightsAnalysisId(string value);
    internal bool IsSetNetworkInsightsAnalysisId();
    public string get_NetworkInsightsPathId();
    public void set_NetworkInsightsPathId(string value);
    internal bool IsSetNetworkInsightsPathId();
    public Nullable`1<bool> get_NetworkPathFound();
    public void set_NetworkPathFound(Nullable`1<bool> value);
    internal bool IsSetNetworkPathFound();
    public List`1<PathComponent> get_ReturnPathComponents();
    public void set_ReturnPathComponents(List`1<PathComponent> value);
    internal bool IsSetReturnPathComponents();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public AnalysisStatus get_Status();
    public void set_Status(AnalysisStatus value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<string> get_SuggestedAccounts();
    public void set_SuggestedAccounts(List`1<string> value);
    internal bool IsSetSuggestedAccounts();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_WarningMessage();
    public void set_WarningMessage(string value);
    internal bool IsSetWarningMessage();
}
public class Amazon.EC2.Model.NetworkInsightsPath : object {
    private Nullable`1<DateTime> _createdDate;
    private string _destination;
    private string _destinationArn;
    private string _destinationIp;
    private Nullable`1<int> _destinationPort;
    private PathFilter _filterAtDestination;
    private PathFilter _filterAtSource;
    private string _networkInsightsPathArn;
    private string _networkInsightsPathId;
    private Protocol _protocol;
    private string _source;
    private string _sourceArn;
    private string _sourceIp;
    private List`1<Tag> _tags;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Destination { get; public set; }
    [AWSPropertyAttribute]
public string DestinationArn { get; public set; }
    [AWSPropertyAttribute]
public string DestinationIp { get; public set; }
    public Nullable`1<int> DestinationPort { get; public set; }
    public PathFilter FilterAtDestination { get; public set; }
    public PathFilter FilterAtSource { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInsightsPathArn { get; public set; }
    public string NetworkInsightsPathId { get; public set; }
    public Protocol Protocol { get; public set; }
    public string Source { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceIp { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public string get_DestinationArn();
    public void set_DestinationArn(string value);
    internal bool IsSetDestinationArn();
    public string get_DestinationIp();
    public void set_DestinationIp(string value);
    internal bool IsSetDestinationIp();
    public Nullable`1<int> get_DestinationPort();
    public void set_DestinationPort(Nullable`1<int> value);
    internal bool IsSetDestinationPort();
    public PathFilter get_FilterAtDestination();
    public void set_FilterAtDestination(PathFilter value);
    internal bool IsSetFilterAtDestination();
    public PathFilter get_FilterAtSource();
    public void set_FilterAtSource(PathFilter value);
    internal bool IsSetFilterAtSource();
    public string get_NetworkInsightsPathArn();
    public void set_NetworkInsightsPathArn(string value);
    internal bool IsSetNetworkInsightsPathArn();
    public string get_NetworkInsightsPathId();
    public void set_NetworkInsightsPathId(string value);
    internal bool IsSetNetworkInsightsPathId();
    public Protocol get_Protocol();
    public void set_Protocol(Protocol value);
    internal bool IsSetProtocol();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public string get_SourceIp();
    public void set_SourceIp(string value);
    internal bool IsSetSourceIp();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.NetworkInterface : object {
    private NetworkInterfaceAssociation _association;
    private NetworkInterfaceAttachment _attachment;
    private string _availabilityZone;
    private ConnectionTrackingConfiguration _connectionTrackingConfiguration;
    private Nullable`1<bool> _denyAllIgwTraffic;
    private string _description;
    private List`1<GroupIdentifier> _groups;
    private NetworkInterfaceType _interfaceType;
    private List`1<Ipv4PrefixSpecification> _ipv4Prefixes;
    private string _ipv6Address;
    private List`1<NetworkInterfaceIpv6Address> _ipv6Addresses;
    private Nullable`1<bool> _ipv6Native;
    private List`1<Ipv6PrefixSpecification> _ipv6Prefixes;
    private string _macAddress;
    private string _networkInterfaceId;
    private string _outpostArn;
    private string _ownerId;
    private string _privateDnsName;
    private string _privateIpAddress;
    private List`1<NetworkInterfacePrivateIpAddress> _privateIpAddresses;
    private string _requesterId;
    private Nullable`1<bool> _requesterManaged;
    private Nullable`1<bool> _sourceDestCheck;
    private NetworkInterfaceStatus _status;
    private string _subnetId;
    private List`1<Tag> _tagSet;
    private string _vpcId;
    public NetworkInterfaceAssociation Association { get; public set; }
    public NetworkInterfaceAttachment Attachment { get; public set; }
    public string AvailabilityZone { get; public set; }
    public ConnectionTrackingConfiguration ConnectionTrackingConfiguration { get; public set; }
    public Nullable`1<bool> DenyAllIgwTraffic { get; public set; }
    public string Description { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public NetworkInterfaceType InterfaceType { get; public set; }
    public List`1<Ipv4PrefixSpecification> Ipv4Prefixes { get; public set; }
    public string Ipv6Address { get; public set; }
    public List`1<NetworkInterfaceIpv6Address> Ipv6Addresses { get; public set; }
    public Nullable`1<bool> Ipv6Native { get; public set; }
    public List`1<Ipv6PrefixSpecification> Ipv6Prefixes { get; public set; }
    public string MacAddress { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<NetworkInterfacePrivateIpAddress> PrivateIpAddresses { get; public set; }
    public string RequesterId { get; public set; }
    public Nullable`1<bool> RequesterManaged { get; public set; }
    public Nullable`1<bool> SourceDestCheck { get; public set; }
    public NetworkInterfaceStatus Status { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> TagSet { get; public set; }
    public string VpcId { get; public set; }
    public NetworkInterfaceAssociation get_Association();
    public void set_Association(NetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public NetworkInterfaceAttachment get_Attachment();
    public void set_Attachment(NetworkInterfaceAttachment value);
    internal bool IsSetAttachment();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public ConnectionTrackingConfiguration get_ConnectionTrackingConfiguration();
    public void set_ConnectionTrackingConfiguration(ConnectionTrackingConfiguration value);
    internal bool IsSetConnectionTrackingConfiguration();
    public Nullable`1<bool> get_DenyAllIgwTraffic();
    public void set_DenyAllIgwTraffic(Nullable`1<bool> value);
    internal bool IsSetDenyAllIgwTraffic();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public NetworkInterfaceType get_InterfaceType();
    public void set_InterfaceType(NetworkInterfaceType value);
    internal bool IsSetInterfaceType();
    public List`1<Ipv4PrefixSpecification> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<Ipv4PrefixSpecification> value);
    internal bool IsSetIpv4Prefixes();
    public string get_Ipv6Address();
    public void set_Ipv6Address(string value);
    internal bool IsSetIpv6Address();
    public List`1<NetworkInterfaceIpv6Address> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<NetworkInterfaceIpv6Address> value);
    internal bool IsSetIpv6Addresses();
    public Nullable`1<bool> get_Ipv6Native();
    public void set_Ipv6Native(Nullable`1<bool> value);
    internal bool IsSetIpv6Native();
    public List`1<Ipv6PrefixSpecification> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<Ipv6PrefixSpecification> value);
    internal bool IsSetIpv6Prefixes();
    public string get_MacAddress();
    public void set_MacAddress(string value);
    internal bool IsSetMacAddress();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<NetworkInterfacePrivateIpAddress> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<NetworkInterfacePrivateIpAddress> value);
    internal bool IsSetPrivateIpAddresses();
    public string get_RequesterId();
    public void set_RequesterId(string value);
    internal bool IsSetRequesterId();
    public Nullable`1<bool> get_RequesterManaged();
    public void set_RequesterManaged(Nullable`1<bool> value);
    internal bool IsSetRequesterManaged();
    public Nullable`1<bool> get_SourceDestCheck();
    public void set_SourceDestCheck(Nullable`1<bool> value);
    internal bool IsSetSourceDestCheck();
    public NetworkInterfaceStatus get_Status();
    public void set_Status(NetworkInterfaceStatus value);
    internal bool IsSetStatus();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_TagSet();
    public void set_TagSet(List`1<Tag> value);
    internal bool IsSetTagSet();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.NetworkInterfaceAssociation : object {
    private string _allocationId;
    private string _associationId;
    private string _carrierIp;
    private string _customerOwnedIp;
    private string _ipOwnerId;
    private string _publicDnsName;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public string AssociationId { get; public set; }
    public string CarrierIp { get; public set; }
    public string CustomerOwnedIp { get; public set; }
    public string IpOwnerId { get; public set; }
    public string PublicDnsName { get; public set; }
    public string PublicIp { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_CarrierIp();
    public void set_CarrierIp(string value);
    internal bool IsSetCarrierIp();
    public string get_CustomerOwnedIp();
    public void set_CustomerOwnedIp(string value);
    internal bool IsSetCustomerOwnedIp();
    public string get_IpOwnerId();
    public void set_IpOwnerId(string value);
    internal bool IsSetIpOwnerId();
    public string get_PublicDnsName();
    public void set_PublicDnsName(string value);
    internal bool IsSetPublicDnsName();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.NetworkInterfaceAttachment : object {
    private string _attachmentId;
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<int> _deviceIndex;
    private AttachmentEnaSrdSpecification _enaSrdSpecification;
    private string _instanceId;
    private string _instanceOwnerId;
    private Nullable`1<int> _networkCardIndex;
    private AttachmentStatus _status;
    public string AttachmentId { get; public set; }
    public Nullable`1<DateTime> AttachTime { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public Nullable`1<int> DeviceIndex { get; public set; }
    public AttachmentEnaSrdSpecification EnaSrdSpecification { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceOwnerId { get; public set; }
    public Nullable`1<int> NetworkCardIndex { get; public set; }
    public AttachmentStatus Status { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public Nullable`1<DateTime> get_AttachTime();
    public void set_AttachTime(Nullable`1<DateTime> value);
    internal bool IsSetAttachTime();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public Nullable`1<int> get_DeviceIndex();
    public void set_DeviceIndex(Nullable`1<int> value);
    internal bool IsSetDeviceIndex();
    public AttachmentEnaSrdSpecification get_EnaSrdSpecification();
    public void set_EnaSrdSpecification(AttachmentEnaSrdSpecification value);
    internal bool IsSetEnaSrdSpecification();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceOwnerId();
    public void set_InstanceOwnerId(string value);
    internal bool IsSetInstanceOwnerId();
    public Nullable`1<int> get_NetworkCardIndex();
    public void set_NetworkCardIndex(Nullable`1<int> value);
    internal bool IsSetNetworkCardIndex();
    public AttachmentStatus get_Status();
    public void set_Status(AttachmentStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.NetworkInterfaceAttachmentChanges : object {
    private string _attachmentId;
    private Nullable`1<bool> _deleteOnTermination;
    public string AttachmentId { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
}
public class Amazon.EC2.Model.NetworkInterfaceCount : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.NetworkInterfaceCountRequest : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.NetworkInterfaceIpv6Address : object {
    private string _ipv6Address;
    private Nullable`1<bool> _isPrimaryIpv6;
    public string Ipv6Address { get; public set; }
    public Nullable`1<bool> IsPrimaryIpv6 { get; public set; }
    public string get_Ipv6Address();
    public void set_Ipv6Address(string value);
    internal bool IsSetIpv6Address();
    public Nullable`1<bool> get_IsPrimaryIpv6();
    public void set_IsPrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetIsPrimaryIpv6();
}
public class Amazon.EC2.Model.NetworkInterfacePermission : object {
    private string _awsAccountId;
    private string _awsService;
    private string _networkInterfaceId;
    private string _networkInterfacePermissionId;
    private InterfacePermissionType _permission;
    private NetworkInterfacePermissionState _permissionState;
    public string AwsAccountId { get; public set; }
    public string AwsService { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string NetworkInterfacePermissionId { get; public set; }
    public InterfacePermissionType Permission { get; public set; }
    public NetworkInterfacePermissionState PermissionState { get; public set; }
    public string get_AwsAccountId();
    public void set_AwsAccountId(string value);
    internal bool IsSetAwsAccountId();
    public string get_AwsService();
    public void set_AwsService(string value);
    internal bool IsSetAwsService();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_NetworkInterfacePermissionId();
    public void set_NetworkInterfacePermissionId(string value);
    internal bool IsSetNetworkInterfacePermissionId();
    public InterfacePermissionType get_Permission();
    public void set_Permission(InterfacePermissionType value);
    internal bool IsSetPermission();
    public NetworkInterfacePermissionState get_PermissionState();
    public void set_PermissionState(NetworkInterfacePermissionState value);
    internal bool IsSetPermissionState();
}
public class Amazon.EC2.Model.NetworkInterfacePermissionState : object {
    private NetworkInterfacePermissionStateCode _state;
    private string _statusMessage;
    public NetworkInterfacePermissionStateCode State { get; public set; }
    public string StatusMessage { get; public set; }
    public NetworkInterfacePermissionStateCode get_State();
    public void set_State(NetworkInterfacePermissionStateCode value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.NetworkInterfacePrivateIpAddress : object {
    private NetworkInterfaceAssociation _association;
    private Nullable`1<bool> _primary;
    private string _privateDnsName;
    private string _privateIpAddress;
    public NetworkInterfaceAssociation Association { get; public set; }
    public Nullable`1<bool> Primary { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public NetworkInterfaceAssociation get_Association();
    public void set_Association(NetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public Nullable`1<bool> get_Primary();
    public void set_Primary(Nullable`1<bool> value);
    internal bool IsSetPrimary();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
public class Amazon.EC2.Model.NeuronDeviceCoreInfo : object {
    private Nullable`1<int> _count;
    private Nullable`1<int> _version;
    public Nullable`1<int> Count { get; public set; }
    public Nullable`1<int> Version { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public Nullable`1<int> get_Version();
    public void set_Version(Nullable`1<int> value);
    internal bool IsSetVersion();
}
public class Amazon.EC2.Model.NeuronDeviceInfo : object {
    private NeuronDeviceCoreInfo _coreInfo;
    private Nullable`1<int> _count;
    private NeuronDeviceMemoryInfo _memoryInfo;
    private string _name;
    public NeuronDeviceCoreInfo CoreInfo { get; public set; }
    public Nullable`1<int> Count { get; public set; }
    public NeuronDeviceMemoryInfo MemoryInfo { get; public set; }
    public string Name { get; public set; }
    public NeuronDeviceCoreInfo get_CoreInfo();
    public void set_CoreInfo(NeuronDeviceCoreInfo value);
    internal bool IsSetCoreInfo();
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public NeuronDeviceMemoryInfo get_MemoryInfo();
    public void set_MemoryInfo(NeuronDeviceMemoryInfo value);
    internal bool IsSetMemoryInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.NeuronDeviceMemoryInfo : object {
    private Nullable`1<int> _sizeInMiB;
    public Nullable`1<int> SizeInMiB { get; public set; }
    public Nullable`1<int> get_SizeInMiB();
    public void set_SizeInMiB(Nullable`1<int> value);
    internal bool IsSetSizeInMiB();
}
public class Amazon.EC2.Model.NeuronInfo : object {
    private List`1<NeuronDeviceInfo> _neuronDevices;
    private Nullable`1<int> _totalNeuronDeviceMemoryInMiB;
    public List`1<NeuronDeviceInfo> NeuronDevices { get; public set; }
    public Nullable`1<int> TotalNeuronDeviceMemoryInMiB { get; public set; }
    public List`1<NeuronDeviceInfo> get_NeuronDevices();
    public void set_NeuronDevices(List`1<NeuronDeviceInfo> value);
    internal bool IsSetNeuronDevices();
    public Nullable`1<int> get_TotalNeuronDeviceMemoryInMiB();
    public void set_TotalNeuronDeviceMemoryInMiB(Nullable`1<int> value);
    internal bool IsSetTotalNeuronDeviceMemoryInMiB();
}
public class Amazon.EC2.Model.NitroTpmInfo : object {
    private List`1<string> _supportedVersions;
    public List`1<string> SupportedVersions { get; public set; }
    public List`1<string> get_SupportedVersions();
    public void set_SupportedVersions(List`1<string> value);
    internal bool IsSetSupportedVersions();
}
public class Amazon.EC2.Model.OidcOptions : object {
    private string _authorizationEndpoint;
    private string _clientId;
    private string _clientSecret;
    private string _issuer;
    private string _scope;
    private string _tokenEndpoint;
    private string _userInfoEndpoint;
    public string AuthorizationEndpoint { get; public set; }
    public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ClientSecret { get; public set; }
    public string Issuer { get; public set; }
    public string Scope { get; public set; }
    public string TokenEndpoint { get; public set; }
    public string UserInfoEndpoint { get; public set; }
    public string get_AuthorizationEndpoint();
    public void set_AuthorizationEndpoint(string value);
    internal bool IsSetAuthorizationEndpoint();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientSecret();
    public void set_ClientSecret(string value);
    internal bool IsSetClientSecret();
    public string get_Issuer();
    public void set_Issuer(string value);
    internal bool IsSetIssuer();
    public string get_Scope();
    public void set_Scope(string value);
    internal bool IsSetScope();
    public string get_TokenEndpoint();
    public void set_TokenEndpoint(string value);
    internal bool IsSetTokenEndpoint();
    public string get_UserInfoEndpoint();
    public void set_UserInfoEndpoint(string value);
    internal bool IsSetUserInfoEndpoint();
}
public class Amazon.EC2.Model.OnDemandOptions : object {
    private FleetOnDemandAllocationStrategy _allocationStrategy;
    private CapacityReservationOptions _capacityReservationOptions;
    private string _maxTotalPrice;
    private Nullable`1<int> _minTargetCapacity;
    private Nullable`1<bool> _singleAvailabilityZone;
    private Nullable`1<bool> _singleInstanceType;
    public FleetOnDemandAllocationStrategy AllocationStrategy { get; public set; }
    public CapacityReservationOptions CapacityReservationOptions { get; public set; }
    public string MaxTotalPrice { get; public set; }
    public Nullable`1<int> MinTargetCapacity { get; public set; }
    public Nullable`1<bool> SingleAvailabilityZone { get; public set; }
    public Nullable`1<bool> SingleInstanceType { get; public set; }
    public FleetOnDemandAllocationStrategy get_AllocationStrategy();
    public void set_AllocationStrategy(FleetOnDemandAllocationStrategy value);
    internal bool IsSetAllocationStrategy();
    public CapacityReservationOptions get_CapacityReservationOptions();
    public void set_CapacityReservationOptions(CapacityReservationOptions value);
    internal bool IsSetCapacityReservationOptions();
    public string get_MaxTotalPrice();
    public void set_MaxTotalPrice(string value);
    internal bool IsSetMaxTotalPrice();
    public Nullable`1<int> get_MinTargetCapacity();
    public void set_MinTargetCapacity(Nullable`1<int> value);
    internal bool IsSetMinTargetCapacity();
    public Nullable`1<bool> get_SingleAvailabilityZone();
    public void set_SingleAvailabilityZone(Nullable`1<bool> value);
    internal bool IsSetSingleAvailabilityZone();
    public Nullable`1<bool> get_SingleInstanceType();
    public void set_SingleInstanceType(Nullable`1<bool> value);
    internal bool IsSetSingleInstanceType();
}
public class Amazon.EC2.Model.OnDemandOptionsRequest : object {
    private FleetOnDemandAllocationStrategy _allocationStrategy;
    private CapacityReservationOptionsRequest _capacityReservationOptions;
    private string _maxTotalPrice;
    private Nullable`1<int> _minTargetCapacity;
    private Nullable`1<bool> _singleAvailabilityZone;
    private Nullable`1<bool> _singleInstanceType;
    public FleetOnDemandAllocationStrategy AllocationStrategy { get; public set; }
    public CapacityReservationOptionsRequest CapacityReservationOptions { get; public set; }
    public string MaxTotalPrice { get; public set; }
    public Nullable`1<int> MinTargetCapacity { get; public set; }
    public Nullable`1<bool> SingleAvailabilityZone { get; public set; }
    public Nullable`1<bool> SingleInstanceType { get; public set; }
    public FleetOnDemandAllocationStrategy get_AllocationStrategy();
    public void set_AllocationStrategy(FleetOnDemandAllocationStrategy value);
    internal bool IsSetAllocationStrategy();
    public CapacityReservationOptionsRequest get_CapacityReservationOptions();
    public void set_CapacityReservationOptions(CapacityReservationOptionsRequest value);
    internal bool IsSetCapacityReservationOptions();
    public string get_MaxTotalPrice();
    public void set_MaxTotalPrice(string value);
    internal bool IsSetMaxTotalPrice();
    public Nullable`1<int> get_MinTargetCapacity();
    public void set_MinTargetCapacity(Nullable`1<int> value);
    internal bool IsSetMinTargetCapacity();
    public Nullable`1<bool> get_SingleAvailabilityZone();
    public void set_SingleAvailabilityZone(Nullable`1<bool> value);
    internal bool IsSetSingleAvailabilityZone();
    public Nullable`1<bool> get_SingleInstanceType();
    public void set_SingleInstanceType(Nullable`1<bool> value);
    internal bool IsSetSingleInstanceType();
}
public class Amazon.EC2.Model.PacketHeaderStatement : object {
    private List`1<string> _destinationAddresses;
    private List`1<string> _destinationPorts;
    private List`1<string> _destinationPrefixLists;
    private List`1<string> _protocols;
    private List`1<string> _sourceAddresses;
    private List`1<string> _sourcePorts;
    private List`1<string> _sourcePrefixLists;
    public List`1<string> DestinationAddresses { get; public set; }
    public List`1<string> DestinationPorts { get; public set; }
    public List`1<string> DestinationPrefixLists { get; public set; }
    public List`1<string> Protocols { get; public set; }
    public List`1<string> SourceAddresses { get; public set; }
    public List`1<string> SourcePorts { get; public set; }
    public List`1<string> SourcePrefixLists { get; public set; }
    public List`1<string> get_DestinationAddresses();
    public void set_DestinationAddresses(List`1<string> value);
    internal bool IsSetDestinationAddresses();
    public List`1<string> get_DestinationPorts();
    public void set_DestinationPorts(List`1<string> value);
    internal bool IsSetDestinationPorts();
    public List`1<string> get_DestinationPrefixLists();
    public void set_DestinationPrefixLists(List`1<string> value);
    internal bool IsSetDestinationPrefixLists();
    public List`1<string> get_Protocols();
    public void set_Protocols(List`1<string> value);
    internal bool IsSetProtocols();
    public List`1<string> get_SourceAddresses();
    public void set_SourceAddresses(List`1<string> value);
    internal bool IsSetSourceAddresses();
    public List`1<string> get_SourcePorts();
    public void set_SourcePorts(List`1<string> value);
    internal bool IsSetSourcePorts();
    public List`1<string> get_SourcePrefixLists();
    public void set_SourcePrefixLists(List`1<string> value);
    internal bool IsSetSourcePrefixLists();
}
public class Amazon.EC2.Model.PacketHeaderStatementRequest : object {
    private List`1<string> _destinationAddresses;
    private List`1<string> _destinationPorts;
    private List`1<string> _destinationPrefixLists;
    private List`1<string> _protocols;
    private List`1<string> _sourceAddresses;
    private List`1<string> _sourcePorts;
    private List`1<string> _sourcePrefixLists;
    public List`1<string> DestinationAddresses { get; public set; }
    public List`1<string> DestinationPorts { get; public set; }
    public List`1<string> DestinationPrefixLists { get; public set; }
    public List`1<string> Protocols { get; public set; }
    public List`1<string> SourceAddresses { get; public set; }
    public List`1<string> SourcePorts { get; public set; }
    public List`1<string> SourcePrefixLists { get; public set; }
    public List`1<string> get_DestinationAddresses();
    public void set_DestinationAddresses(List`1<string> value);
    internal bool IsSetDestinationAddresses();
    public List`1<string> get_DestinationPorts();
    public void set_DestinationPorts(List`1<string> value);
    internal bool IsSetDestinationPorts();
    public List`1<string> get_DestinationPrefixLists();
    public void set_DestinationPrefixLists(List`1<string> value);
    internal bool IsSetDestinationPrefixLists();
    public List`1<string> get_Protocols();
    public void set_Protocols(List`1<string> value);
    internal bool IsSetProtocols();
    public List`1<string> get_SourceAddresses();
    public void set_SourceAddresses(List`1<string> value);
    internal bool IsSetSourceAddresses();
    public List`1<string> get_SourcePorts();
    public void set_SourcePorts(List`1<string> value);
    internal bool IsSetSourcePorts();
    public List`1<string> get_SourcePrefixLists();
    public void set_SourcePrefixLists(List`1<string> value);
    internal bool IsSetSourcePrefixLists();
}
public class Amazon.EC2.Model.PathComponent : object {
    private AnalysisAclRule _aclRule;
    private List`1<AdditionalDetail> _additionalDetails;
    private AnalysisComponent _attachedTo;
    private AnalysisComponent _component;
    private AnalysisComponent _destinationVpc;
    private AnalysisComponent _elasticLoadBalancerListener;
    private List`1<Explanation> _explanations;
    private FirewallStatefulRule _firewallStatefulRule;
    private FirewallStatelessRule _firewallStatelessRule;
    private AnalysisPacketHeader _inboundHeader;
    private AnalysisPacketHeader _outboundHeader;
    private AnalysisRouteTableRoute _routeTableRoute;
    private AnalysisSecurityGroupRule _securityGroupRule;
    private Nullable`1<int> _sequenceNumber;
    private string _serviceName;
    private AnalysisComponent _sourceVpc;
    private AnalysisComponent _subnet;
    private AnalysisComponent _transitGateway;
    private TransitGatewayRouteTableRoute _transitGatewayRouteTableRoute;
    private AnalysisComponent _vpc;
    public AnalysisAclRule AclRule { get; public set; }
    public List`1<AdditionalDetail> AdditionalDetails { get; public set; }
    public AnalysisComponent AttachedTo { get; public set; }
    public AnalysisComponent Component { get; public set; }
    public AnalysisComponent DestinationVpc { get; public set; }
    public AnalysisComponent ElasticLoadBalancerListener { get; public set; }
    public List`1<Explanation> Explanations { get; public set; }
    public FirewallStatefulRule FirewallStatefulRule { get; public set; }
    public FirewallStatelessRule FirewallStatelessRule { get; public set; }
    public AnalysisPacketHeader InboundHeader { get; public set; }
    public AnalysisPacketHeader OutboundHeader { get; public set; }
    public AnalysisRouteTableRoute RouteTableRoute { get; public set; }
    public AnalysisSecurityGroupRule SecurityGroupRule { get; public set; }
    public Nullable`1<int> SequenceNumber { get; public set; }
    public string ServiceName { get; public set; }
    public AnalysisComponent SourceVpc { get; public set; }
    public AnalysisComponent Subnet { get; public set; }
    public AnalysisComponent TransitGateway { get; public set; }
    public TransitGatewayRouteTableRoute TransitGatewayRouteTableRoute { get; public set; }
    public AnalysisComponent Vpc { get; public set; }
    public AnalysisAclRule get_AclRule();
    public void set_AclRule(AnalysisAclRule value);
    internal bool IsSetAclRule();
    public List`1<AdditionalDetail> get_AdditionalDetails();
    public void set_AdditionalDetails(List`1<AdditionalDetail> value);
    internal bool IsSetAdditionalDetails();
    public AnalysisComponent get_AttachedTo();
    public void set_AttachedTo(AnalysisComponent value);
    internal bool IsSetAttachedTo();
    public AnalysisComponent get_Component();
    public void set_Component(AnalysisComponent value);
    internal bool IsSetComponent();
    public AnalysisComponent get_DestinationVpc();
    public void set_DestinationVpc(AnalysisComponent value);
    internal bool IsSetDestinationVpc();
    public AnalysisComponent get_ElasticLoadBalancerListener();
    public void set_ElasticLoadBalancerListener(AnalysisComponent value);
    internal bool IsSetElasticLoadBalancerListener();
    public List`1<Explanation> get_Explanations();
    public void set_Explanations(List`1<Explanation> value);
    internal bool IsSetExplanations();
    public FirewallStatefulRule get_FirewallStatefulRule();
    public void set_FirewallStatefulRule(FirewallStatefulRule value);
    internal bool IsSetFirewallStatefulRule();
    public FirewallStatelessRule get_FirewallStatelessRule();
    public void set_FirewallStatelessRule(FirewallStatelessRule value);
    internal bool IsSetFirewallStatelessRule();
    public AnalysisPacketHeader get_InboundHeader();
    public void set_InboundHeader(AnalysisPacketHeader value);
    internal bool IsSetInboundHeader();
    public AnalysisPacketHeader get_OutboundHeader();
    public void set_OutboundHeader(AnalysisPacketHeader value);
    internal bool IsSetOutboundHeader();
    public AnalysisRouteTableRoute get_RouteTableRoute();
    public void set_RouteTableRoute(AnalysisRouteTableRoute value);
    internal bool IsSetRouteTableRoute();
    public AnalysisSecurityGroupRule get_SecurityGroupRule();
    public void set_SecurityGroupRule(AnalysisSecurityGroupRule value);
    internal bool IsSetSecurityGroupRule();
    public Nullable`1<int> get_SequenceNumber();
    public void set_SequenceNumber(Nullable`1<int> value);
    internal bool IsSetSequenceNumber();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public AnalysisComponent get_SourceVpc();
    public void set_SourceVpc(AnalysisComponent value);
    internal bool IsSetSourceVpc();
    public AnalysisComponent get_Subnet();
    public void set_Subnet(AnalysisComponent value);
    internal bool IsSetSubnet();
    public AnalysisComponent get_TransitGateway();
    public void set_TransitGateway(AnalysisComponent value);
    internal bool IsSetTransitGateway();
    public TransitGatewayRouteTableRoute get_TransitGatewayRouteTableRoute();
    public void set_TransitGatewayRouteTableRoute(TransitGatewayRouteTableRoute value);
    internal bool IsSetTransitGatewayRouteTableRoute();
    public AnalysisComponent get_Vpc();
    public void set_Vpc(AnalysisComponent value);
    internal bool IsSetVpc();
}
public class Amazon.EC2.Model.PathFilter : object {
    private string _destinationAddress;
    private FilterPortRange _destinationPortRange;
    private string _sourceAddress;
    private FilterPortRange _sourcePortRange;
    [AWSPropertyAttribute]
public string DestinationAddress { get; public set; }
    public FilterPortRange DestinationPortRange { get; public set; }
    [AWSPropertyAttribute]
public string SourceAddress { get; public set; }
    public FilterPortRange SourcePortRange { get; public set; }
    public string get_DestinationAddress();
    public void set_DestinationAddress(string value);
    internal bool IsSetDestinationAddress();
    public FilterPortRange get_DestinationPortRange();
    public void set_DestinationPortRange(FilterPortRange value);
    internal bool IsSetDestinationPortRange();
    public string get_SourceAddress();
    public void set_SourceAddress(string value);
    internal bool IsSetSourceAddress();
    public FilterPortRange get_SourcePortRange();
    public void set_SourcePortRange(FilterPortRange value);
    internal bool IsSetSourcePortRange();
}
public class Amazon.EC2.Model.PathRequestFilter : object {
    private string _destinationAddress;
    private RequestFilterPortRange _destinationPortRange;
    private string _sourceAddress;
    private RequestFilterPortRange _sourcePortRange;
    [AWSPropertyAttribute]
public string DestinationAddress { get; public set; }
    public RequestFilterPortRange DestinationPortRange { get; public set; }
    [AWSPropertyAttribute]
public string SourceAddress { get; public set; }
    public RequestFilterPortRange SourcePortRange { get; public set; }
    public string get_DestinationAddress();
    public void set_DestinationAddress(string value);
    internal bool IsSetDestinationAddress();
    public RequestFilterPortRange get_DestinationPortRange();
    public void set_DestinationPortRange(RequestFilterPortRange value);
    internal bool IsSetDestinationPortRange();
    public string get_SourceAddress();
    public void set_SourceAddress(string value);
    internal bool IsSetSourceAddress();
    public RequestFilterPortRange get_SourcePortRange();
    public void set_SourcePortRange(RequestFilterPortRange value);
    internal bool IsSetSourcePortRange();
}
public class Amazon.EC2.Model.PathStatement : object {
    private PacketHeaderStatement _packetHeaderStatement;
    private ResourceStatement _resourceStatement;
    public PacketHeaderStatement PacketHeaderStatement { get; public set; }
    public ResourceStatement ResourceStatement { get; public set; }
    public PacketHeaderStatement get_PacketHeaderStatement();
    public void set_PacketHeaderStatement(PacketHeaderStatement value);
    internal bool IsSetPacketHeaderStatement();
    public ResourceStatement get_ResourceStatement();
    public void set_ResourceStatement(ResourceStatement value);
    internal bool IsSetResourceStatement();
}
public class Amazon.EC2.Model.PathStatementRequest : object {
    private PacketHeaderStatementRequest _packetHeaderStatement;
    private ResourceStatementRequest _resourceStatement;
    public PacketHeaderStatementRequest PacketHeaderStatement { get; public set; }
    public ResourceStatementRequest ResourceStatement { get; public set; }
    public PacketHeaderStatementRequest get_PacketHeaderStatement();
    public void set_PacketHeaderStatement(PacketHeaderStatementRequest value);
    internal bool IsSetPacketHeaderStatement();
    public ResourceStatementRequest get_ResourceStatement();
    public void set_ResourceStatement(ResourceStatementRequest value);
    internal bool IsSetResourceStatement();
}
public class Amazon.EC2.Model.PciId : object {
    private string _deviceId;
    private string _subsystemId;
    private string _subsystemVendorId;
    private string _vendorId;
    public string DeviceId { get; public set; }
    public string SubsystemId { get; public set; }
    public string SubsystemVendorId { get; public set; }
    public string VendorId { get; public set; }
    public string get_DeviceId();
    public void set_DeviceId(string value);
    internal bool IsSetDeviceId();
    public string get_SubsystemId();
    public void set_SubsystemId(string value);
    internal bool IsSetSubsystemId();
    public string get_SubsystemVendorId();
    public void set_SubsystemVendorId(string value);
    internal bool IsSetSubsystemVendorId();
    public string get_VendorId();
    public void set_VendorId(string value);
    internal bool IsSetVendorId();
}
public class Amazon.EC2.Model.PeeringAttachmentStatus : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.PeeringConnectionOptions : object {
    private Nullable`1<bool> _allowDnsResolutionFromRemoteVpc;
    private Nullable`1<bool> _allowEgressFromLocalClassicLinkToRemoteVpc;
    private Nullable`1<bool> _allowEgressFromLocalVpcToRemoteClassicLink;
    public Nullable`1<bool> AllowDnsResolutionFromRemoteVpc { get; public set; }
    public Nullable`1<bool> AllowEgressFromLocalClassicLinkToRemoteVpc { get; public set; }
    public Nullable`1<bool> AllowEgressFromLocalVpcToRemoteClassicLink { get; public set; }
    public Nullable`1<bool> get_AllowDnsResolutionFromRemoteVpc();
    public void set_AllowDnsResolutionFromRemoteVpc(Nullable`1<bool> value);
    internal bool IsSetAllowDnsResolutionFromRemoteVpc();
    public Nullable`1<bool> get_AllowEgressFromLocalClassicLinkToRemoteVpc();
    public void set_AllowEgressFromLocalClassicLinkToRemoteVpc(Nullable`1<bool> value);
    internal bool IsSetAllowEgressFromLocalClassicLinkToRemoteVpc();
    public Nullable`1<bool> get_AllowEgressFromLocalVpcToRemoteClassicLink();
    public void set_AllowEgressFromLocalVpcToRemoteClassicLink(Nullable`1<bool> value);
    internal bool IsSetAllowEgressFromLocalVpcToRemoteClassicLink();
}
public class Amazon.EC2.Model.PeeringConnectionOptionsRequest : object {
    private Nullable`1<bool> _allowDnsResolutionFromRemoteVpc;
    private Nullable`1<bool> _allowEgressFromLocalClassicLinkToRemoteVpc;
    private Nullable`1<bool> _allowEgressFromLocalVpcToRemoteClassicLink;
    public Nullable`1<bool> AllowDnsResolutionFromRemoteVpc { get; public set; }
    public Nullable`1<bool> AllowEgressFromLocalClassicLinkToRemoteVpc { get; public set; }
    public Nullable`1<bool> AllowEgressFromLocalVpcToRemoteClassicLink { get; public set; }
    public Nullable`1<bool> get_AllowDnsResolutionFromRemoteVpc();
    public void set_AllowDnsResolutionFromRemoteVpc(Nullable`1<bool> value);
    internal bool IsSetAllowDnsResolutionFromRemoteVpc();
    public Nullable`1<bool> get_AllowEgressFromLocalClassicLinkToRemoteVpc();
    public void set_AllowEgressFromLocalClassicLinkToRemoteVpc(Nullable`1<bool> value);
    internal bool IsSetAllowEgressFromLocalClassicLinkToRemoteVpc();
    public Nullable`1<bool> get_AllowEgressFromLocalVpcToRemoteClassicLink();
    public void set_AllowEgressFromLocalVpcToRemoteClassicLink(Nullable`1<bool> value);
    internal bool IsSetAllowEgressFromLocalVpcToRemoteClassicLink();
}
public class Amazon.EC2.Model.PeeringTgwInfo : object {
    private string _coreNetworkId;
    private string _ownerId;
    private string _region;
    private string _transitGatewayId;
    public string CoreNetworkId { get; public set; }
    public string OwnerId { get; public set; }
    public string Region { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string get_CoreNetworkId();
    public void set_CoreNetworkId(string value);
    internal bool IsSetCoreNetworkId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.Phase1DHGroupNumbersListValue : object {
    private Nullable`1<int> _value;
    public Nullable`1<int> Value { get; public set; }
    public Nullable`1<int> get_Value();
    public void set_Value(Nullable`1<int> value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase1DHGroupNumbersRequestListValue : object {
    private Nullable`1<int> _value;
    public Nullable`1<int> Value { get; public set; }
    public Nullable`1<int> get_Value();
    public void set_Value(Nullable`1<int> value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase1EncryptionAlgorithmsListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase1EncryptionAlgorithmsRequestListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase1IntegrityAlgorithmsListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase1IntegrityAlgorithmsRequestListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase2DHGroupNumbersListValue : object {
    private Nullable`1<int> _value;
    public Nullable`1<int> Value { get; public set; }
    public Nullable`1<int> get_Value();
    public void set_Value(Nullable`1<int> value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase2DHGroupNumbersRequestListValue : object {
    private Nullable`1<int> _value;
    public Nullable`1<int> Value { get; public set; }
    public Nullable`1<int> get_Value();
    public void set_Value(Nullable`1<int> value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase2EncryptionAlgorithmsListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase2EncryptionAlgorithmsRequestListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase2IntegrityAlgorithmsListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Phase2IntegrityAlgorithmsRequestListValue : object {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.Placement : object {
    private string _affinity;
    private string _availabilityZone;
    private string _groupId;
    private string _groupName;
    private string _hostId;
    private string _hostResourceGroupArn;
    private Nullable`1<int> _partitionNumber;
    private string _spreadDomain;
    private Tenancy _tenancy;
    public string Affinity { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string HostId { get; public set; }
    public string HostResourceGroupArn { get; public set; }
    public Nullable`1<int> PartitionNumber { get; public set; }
    public string SpreadDomain { get; public set; }
    public Tenancy Tenancy { get; public set; }
    public Placement(string availabilityZone);
    public string get_Affinity();
    public void set_Affinity(string value);
    internal bool IsSetAffinity();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_HostId();
    public void set_HostId(string value);
    internal bool IsSetHostId();
    public string get_HostResourceGroupArn();
    public void set_HostResourceGroupArn(string value);
    internal bool IsSetHostResourceGroupArn();
    public Nullable`1<int> get_PartitionNumber();
    public void set_PartitionNumber(Nullable`1<int> value);
    internal bool IsSetPartitionNumber();
    public string get_SpreadDomain();
    public void set_SpreadDomain(string value);
    internal bool IsSetSpreadDomain();
    public Tenancy get_Tenancy();
    public void set_Tenancy(Tenancy value);
    internal bool IsSetTenancy();
}
public class Amazon.EC2.Model.PlacementGroup : object {
    private string _groupArn;
    private string _groupId;
    private string _groupName;
    private Nullable`1<int> _partitionCount;
    private SpreadLevel _spreadLevel;
    private PlacementGroupState _state;
    private PlacementStrategy _strategy;
    private List`1<Tag> _tags;
    public string GroupArn { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public Nullable`1<int> PartitionCount { get; public set; }
    public SpreadLevel SpreadLevel { get; public set; }
    public PlacementGroupState State { get; public set; }
    public PlacementStrategy Strategy { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public PlacementGroup(string groupName);
    public string get_GroupArn();
    public void set_GroupArn(string value);
    internal bool IsSetGroupArn();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Nullable`1<int> get_PartitionCount();
    public void set_PartitionCount(Nullable`1<int> value);
    internal bool IsSetPartitionCount();
    public SpreadLevel get_SpreadLevel();
    public void set_SpreadLevel(SpreadLevel value);
    internal bool IsSetSpreadLevel();
    public PlacementGroupState get_State();
    public void set_State(PlacementGroupState value);
    internal bool IsSetState();
    public PlacementStrategy get_Strategy();
    public void set_Strategy(PlacementStrategy value);
    internal bool IsSetStrategy();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.PlacementGroupInfo : object {
    private List`1<string> _supportedStrategies;
    public List`1<string> SupportedStrategies { get; public set; }
    public List`1<string> get_SupportedStrategies();
    public void set_SupportedStrategies(List`1<string> value);
    internal bool IsSetSupportedStrategies();
}
public class Amazon.EC2.Model.PlacementResponse : object {
    private string _groupName;
    public string GroupName { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.PoolCidrBlock : object {
    private string _cidr;
    public string Cidr { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
}
public class Amazon.EC2.Model.PortRange : object {
    private Nullable`1<int> _from;
    private Nullable`1<int> _to;
    public Nullable`1<int> From { get; public set; }
    public Nullable`1<int> To { get; public set; }
    public Nullable`1<int> get_From();
    public void set_From(Nullable`1<int> value);
    internal bool IsSetFrom();
    public Nullable`1<int> get_To();
    public void set_To(Nullable`1<int> value);
    internal bool IsSetTo();
}
public class Amazon.EC2.Model.PrefixList : object {
    private List`1<string> _cidrs;
    private string _prefixListId;
    private string _prefixListName;
    public List`1<string> Cidrs { get; public set; }
    public string PrefixListId { get; public set; }
    public string PrefixListName { get; public set; }
    public List`1<string> get_Cidrs();
    public void set_Cidrs(List`1<string> value);
    internal bool IsSetCidrs();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_PrefixListName();
    public void set_PrefixListName(string value);
    internal bool IsSetPrefixListName();
}
public class Amazon.EC2.Model.PrefixListAssociation : object {
    private string _resourceId;
    private string _resourceOwner;
    public string ResourceId { get; public set; }
    public string ResourceOwner { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwner();
    public void set_ResourceOwner(string value);
    internal bool IsSetResourceOwner();
}
public class Amazon.EC2.Model.PrefixListEntry : object {
    private string _cidr;
    private string _description;
    public string Cidr { get; public set; }
    public string Description { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.EC2.Model.PrefixListId : object {
    private string _description;
    private string _id;
    public string Description { get; public set; }
    public string Id { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.EC2.Model.PriceSchedule : object {
    private Nullable`1<bool> _active;
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<double> _price;
    private Nullable`1<long> _term;
    public Nullable`1<bool> Active { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<double> Price { get; public set; }
    public Nullable`1<long> Term { get; public set; }
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    internal bool IsSetActive();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<double> get_Price();
    public void set_Price(Nullable`1<double> value);
    internal bool IsSetPrice();
    public Nullable`1<long> get_Term();
    public void set_Term(Nullable`1<long> value);
    internal bool IsSetTerm();
}
public class Amazon.EC2.Model.PriceScheduleSpecification : object {
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<double> _price;
    private Nullable`1<long> _term;
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<double> Price { get; public set; }
    public Nullable`1<long> Term { get; public set; }
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<double> get_Price();
    public void set_Price(Nullable`1<double> value);
    internal bool IsSetPrice();
    public Nullable`1<long> get_Term();
    public void set_Term(Nullable`1<long> value);
    internal bool IsSetTerm();
}
public class Amazon.EC2.Model.PricingDetail : object {
    private Nullable`1<int> _count;
    private Nullable`1<double> _price;
    public Nullable`1<int> Count { get; public set; }
    public Nullable`1<double> Price { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public Nullable`1<double> get_Price();
    public void set_Price(Nullable`1<double> value);
    internal bool IsSetPrice();
}
public class Amazon.EC2.Model.PrincipalIdFormat : object {
    private string _arn;
    private List`1<IdFormat> _statuses;
    public string Arn { get; public set; }
    public List`1<IdFormat> Statuses { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public List`1<IdFormat> get_Statuses();
    public void set_Statuses(List`1<IdFormat> value);
    internal bool IsSetStatuses();
}
public class Amazon.EC2.Model.PrivateDnsDetails : object {
    private string _privateDnsName;
    public string PrivateDnsName { get; public set; }
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
}
public class Amazon.EC2.Model.PrivateDnsNameConfiguration : object {
    private string _name;
    private DnsNameState _state;
    private string _type;
    private string _value;
    public string Name { get; public set; }
    public DnsNameState State { get; public set; }
    public string Type { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public DnsNameState get_State();
    public void set_State(DnsNameState value);
    internal bool IsSetState();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.PrivateDnsNameOptionsOnLaunch : object {
    private Nullable`1<bool> _enableResourceNameDnsAAAARecord;
    private Nullable`1<bool> _enableResourceNameDnsARecord;
    private HostnameType _hostnameType;
    public Nullable`1<bool> EnableResourceNameDnsAAAARecord { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsARecord { get; public set; }
    public HostnameType HostnameType { get; public set; }
    public Nullable`1<bool> get_EnableResourceNameDnsAAAARecord();
    public void set_EnableResourceNameDnsAAAARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsAAAARecord();
    public Nullable`1<bool> get_EnableResourceNameDnsARecord();
    public void set_EnableResourceNameDnsARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsARecord();
    public HostnameType get_HostnameType();
    public void set_HostnameType(HostnameType value);
    internal bool IsSetHostnameType();
}
public class Amazon.EC2.Model.PrivateDnsNameOptionsRequest : object {
    private Nullable`1<bool> _enableResourceNameDnsAAAARecord;
    private Nullable`1<bool> _enableResourceNameDnsARecord;
    private HostnameType _hostnameType;
    public Nullable`1<bool> EnableResourceNameDnsAAAARecord { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsARecord { get; public set; }
    public HostnameType HostnameType { get; public set; }
    public Nullable`1<bool> get_EnableResourceNameDnsAAAARecord();
    public void set_EnableResourceNameDnsAAAARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsAAAARecord();
    public Nullable`1<bool> get_EnableResourceNameDnsARecord();
    public void set_EnableResourceNameDnsARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsARecord();
    public HostnameType get_HostnameType();
    public void set_HostnameType(HostnameType value);
    internal bool IsSetHostnameType();
}
public class Amazon.EC2.Model.PrivateDnsNameOptionsResponse : object {
    private Nullable`1<bool> _enableResourceNameDnsAAAARecord;
    private Nullable`1<bool> _enableResourceNameDnsARecord;
    private HostnameType _hostnameType;
    public Nullable`1<bool> EnableResourceNameDnsAAAARecord { get; public set; }
    public Nullable`1<bool> EnableResourceNameDnsARecord { get; public set; }
    public HostnameType HostnameType { get; public set; }
    public Nullable`1<bool> get_EnableResourceNameDnsAAAARecord();
    public void set_EnableResourceNameDnsAAAARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsAAAARecord();
    public Nullable`1<bool> get_EnableResourceNameDnsARecord();
    public void set_EnableResourceNameDnsARecord(Nullable`1<bool> value);
    internal bool IsSetEnableResourceNameDnsARecord();
    public HostnameType get_HostnameType();
    public void set_HostnameType(HostnameType value);
    internal bool IsSetHostnameType();
}
public class Amazon.EC2.Model.PrivateIpAddressSpecification : object {
    private Nullable`1<bool> _primary;
    private string _privateIpAddress;
    public Nullable`1<bool> Primary { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public Nullable`1<bool> get_Primary();
    public void set_Primary(Nullable`1<bool> value);
    internal bool IsSetPrimary();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
public class Amazon.EC2.Model.ProcessorInfo : object {
    private string _manufacturer;
    private List`1<string> _supportedArchitectures;
    private List`1<string> _supportedFeatures;
    private Nullable`1<double> _sustainedClockSpeedInGhz;
    public string Manufacturer { get; public set; }
    public List`1<string> SupportedArchitectures { get; public set; }
    public List`1<string> SupportedFeatures { get; public set; }
    public Nullable`1<double> SustainedClockSpeedInGhz { get; public set; }
    public string get_Manufacturer();
    public void set_Manufacturer(string value);
    internal bool IsSetManufacturer();
    public List`1<string> get_SupportedArchitectures();
    public void set_SupportedArchitectures(List`1<string> value);
    internal bool IsSetSupportedArchitectures();
    public List`1<string> get_SupportedFeatures();
    public void set_SupportedFeatures(List`1<string> value);
    internal bool IsSetSupportedFeatures();
    public Nullable`1<double> get_SustainedClockSpeedInGhz();
    public void set_SustainedClockSpeedInGhz(Nullable`1<double> value);
    internal bool IsSetSustainedClockSpeedInGhz();
}
public class Amazon.EC2.Model.ProductCode : object {
    private string _productCodeId;
    private ProductCodeValues _productCodeType;
    public string ProductCodeId { get; public set; }
    public ProductCodeValues ProductCodeType { get; public set; }
    public string get_ProductCodeId();
    public void set_ProductCodeId(string value);
    internal bool IsSetProductCodeId();
    public ProductCodeValues get_ProductCodeType();
    public void set_ProductCodeType(ProductCodeValues value);
    internal bool IsSetProductCodeType();
}
public class Amazon.EC2.Model.PropagatingVgw : object {
    private string _gatewayId;
    public string GatewayId { get; public set; }
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
}
public class Amazon.EC2.Model.ProvisionByoipCidrRequest : AmazonEC2Request {
    private string _cidr;
    private CidrAuthorizationContext _cidrAuthorizationContext;
    private string _description;
    private Nullable`1<bool> _multiRegion;
    private string _networkBorderGroup;
    private List`1<TagSpecification> _poolTagSpecifications;
    private Nullable`1<bool> _publiclyAdvertisable;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public CidrAuthorizationContext CidrAuthorizationContext { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> MultiRegion { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public List`1<TagSpecification> PoolTagSpecifications { get; public set; }
    public Nullable`1<bool> PubliclyAdvertisable { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public CidrAuthorizationContext get_CidrAuthorizationContext();
    public void set_CidrAuthorizationContext(CidrAuthorizationContext value);
    internal bool IsSetCidrAuthorizationContext();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_MultiRegion();
    public void set_MultiRegion(Nullable`1<bool> value);
    internal bool IsSetMultiRegion();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public List`1<TagSpecification> get_PoolTagSpecifications();
    public void set_PoolTagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetPoolTagSpecifications();
    public Nullable`1<bool> get_PubliclyAdvertisable();
    public void set_PubliclyAdvertisable(Nullable`1<bool> value);
    internal bool IsSetPubliclyAdvertisable();
}
public class Amazon.EC2.Model.ProvisionByoipCidrResponse : AmazonWebServiceResponse {
    private ByoipCidr _byoipCidr;
    public ByoipCidr ByoipCidr { get; public set; }
    public ByoipCidr get_ByoipCidr();
    public void set_ByoipCidr(ByoipCidr value);
    internal bool IsSetByoipCidr();
}
public class Amazon.EC2.Model.ProvisionedBandwidth : object {
    private string _provisioned;
    private Nullable`1<DateTime> _provisionTime;
    private string _requested;
    private Nullable`1<DateTime> _requestTime;
    private string _status;
    public string Provisioned { get; public set; }
    public Nullable`1<DateTime> ProvisionTime { get; public set; }
    public string Requested { get; public set; }
    public Nullable`1<DateTime> RequestTime { get; public set; }
    public string Status { get; public set; }
    public string get_Provisioned();
    public void set_Provisioned(string value);
    internal bool IsSetProvisioned();
    public Nullable`1<DateTime> get_ProvisionTime();
    public void set_ProvisionTime(Nullable`1<DateTime> value);
    internal bool IsSetProvisionTime();
    public string get_Requested();
    public void set_Requested(string value);
    internal bool IsSetRequested();
    public Nullable`1<DateTime> get_RequestTime();
    public void set_RequestTime(Nullable`1<DateTime> value);
    internal bool IsSetRequestTime();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.ProvisionIpamByoasnRequest : AmazonEC2Request {
    private string _asn;
    private AsnAuthorizationContext _asnAuthorizationContext;
    private string _ipamId;
    [AWSPropertyAttribute]
public string Asn { get; public set; }
    [AWSPropertyAttribute]
public AsnAuthorizationContext AsnAuthorizationContext { get; public set; }
    [AWSPropertyAttribute]
public string IpamId { get; public set; }
    public string get_Asn();
    public void set_Asn(string value);
    internal bool IsSetAsn();
    public AsnAuthorizationContext get_AsnAuthorizationContext();
    public void set_AsnAuthorizationContext(AsnAuthorizationContext value);
    internal bool IsSetAsnAuthorizationContext();
    public string get_IpamId();
    public void set_IpamId(string value);
    internal bool IsSetIpamId();
}
public class Amazon.EC2.Model.ProvisionIpamByoasnResponse : AmazonWebServiceResponse {
    private Byoasn _byoasn;
    public Byoasn Byoasn { get; public set; }
    public Byoasn get_Byoasn();
    public void set_Byoasn(Byoasn value);
    internal bool IsSetByoasn();
}
public class Amazon.EC2.Model.ProvisionIpamPoolCidrRequest : AmazonEC2Request {
    private string _cidr;
    private IpamCidrAuthorizationContext _cidrAuthorizationContext;
    private string _clientToken;
    private string _ipamExternalResourceVerificationTokenId;
    private string _ipamPoolId;
    private Nullable`1<int> _netmaskLength;
    private VerificationMethod _verificationMethod;
    public string Cidr { get; public set; }
    public IpamCidrAuthorizationContext CidrAuthorizationContext { get; public set; }
    public string ClientToken { get; public set; }
    public string IpamExternalResourceVerificationTokenId { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    public Nullable`1<int> NetmaskLength { get; public set; }
    public VerificationMethod VerificationMethod { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public IpamCidrAuthorizationContext get_CidrAuthorizationContext();
    public void set_CidrAuthorizationContext(IpamCidrAuthorizationContext value);
    internal bool IsSetCidrAuthorizationContext();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_IpamExternalResourceVerificationTokenId();
    public void set_IpamExternalResourceVerificationTokenId(string value);
    internal bool IsSetIpamExternalResourceVerificationTokenId();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public Nullable`1<int> get_NetmaskLength();
    public void set_NetmaskLength(Nullable`1<int> value);
    internal bool IsSetNetmaskLength();
    public VerificationMethod get_VerificationMethod();
    public void set_VerificationMethod(VerificationMethod value);
    internal bool IsSetVerificationMethod();
}
public class Amazon.EC2.Model.ProvisionIpamPoolCidrResponse : AmazonWebServiceResponse {
    private IpamPoolCidr _ipamPoolCidr;
    public IpamPoolCidr IpamPoolCidr { get; public set; }
    public IpamPoolCidr get_IpamPoolCidr();
    public void set_IpamPoolCidr(IpamPoolCidr value);
    internal bool IsSetIpamPoolCidr();
}
public class Amazon.EC2.Model.ProvisionPublicIpv4PoolCidrRequest : AmazonEC2Request {
    private string _ipamPoolId;
    private Nullable`1<int> _netmaskLength;
    private string _networkBorderGroup;
    private string _poolId;
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NetmaskLength { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
    public Nullable`1<int> get_NetmaskLength();
    public void set_NetmaskLength(Nullable`1<int> value);
    internal bool IsSetNetmaskLength();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.ProvisionPublicIpv4PoolCidrResponse : AmazonWebServiceResponse {
    private PublicIpv4PoolRange _poolAddressRange;
    private string _poolId;
    public PublicIpv4PoolRange PoolAddressRange { get; public set; }
    public string PoolId { get; public set; }
    public PublicIpv4PoolRange get_PoolAddressRange();
    public void set_PoolAddressRange(PublicIpv4PoolRange value);
    internal bool IsSetPoolAddressRange();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
}
public class Amazon.EC2.Model.PtrUpdateStatus : object {
    private string _reason;
    private string _status;
    private string _value;
    public string Reason { get; public set; }
    public string Status { get; public set; }
    public string Value { get; public set; }
    public string get_Reason();
    public void set_Reason(string value);
    internal bool IsSetReason();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.PublicIpv4Pool : object {
    private string _description;
    private string _networkBorderGroup;
    private List`1<PublicIpv4PoolRange> _poolAddressRanges;
    private string _poolId;
    private List`1<Tag> _tags;
    private Nullable`1<int> _totalAddressCount;
    private Nullable`1<int> _totalAvailableAddressCount;
    public string Description { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public List`1<PublicIpv4PoolRange> PoolAddressRanges { get; public set; }
    public string PoolId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<int> TotalAddressCount { get; public set; }
    public Nullable`1<int> TotalAvailableAddressCount { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public List`1<PublicIpv4PoolRange> get_PoolAddressRanges();
    public void set_PoolAddressRanges(List`1<PublicIpv4PoolRange> value);
    internal bool IsSetPoolAddressRanges();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_TotalAddressCount();
    public void set_TotalAddressCount(Nullable`1<int> value);
    internal bool IsSetTotalAddressCount();
    public Nullable`1<int> get_TotalAvailableAddressCount();
    public void set_TotalAvailableAddressCount(Nullable`1<int> value);
    internal bool IsSetTotalAvailableAddressCount();
}
public class Amazon.EC2.Model.PublicIpv4PoolRange : object {
    private Nullable`1<int> _addressCount;
    private Nullable`1<int> _availableAddressCount;
    private string _firstAddress;
    private string _lastAddress;
    public Nullable`1<int> AddressCount { get; public set; }
    public Nullable`1<int> AvailableAddressCount { get; public set; }
    public string FirstAddress { get; public set; }
    public string LastAddress { get; public set; }
    public Nullable`1<int> get_AddressCount();
    public void set_AddressCount(Nullable`1<int> value);
    internal bool IsSetAddressCount();
    public Nullable`1<int> get_AvailableAddressCount();
    public void set_AvailableAddressCount(Nullable`1<int> value);
    internal bool IsSetAvailableAddressCount();
    public string get_FirstAddress();
    public void set_FirstAddress(string value);
    internal bool IsSetFirstAddress();
    public string get_LastAddress();
    public void set_LastAddress(string value);
    internal bool IsSetLastAddress();
}
public class Amazon.EC2.Model.Purchase : object {
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<int> _duration;
    private List`1<string> _hostIdSet;
    private string _hostReservationId;
    private string _hourlyPrice;
    private string _instanceFamily;
    private PaymentOption _paymentOption;
    private string _upfrontPrice;
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<int> Duration { get; public set; }
    public List`1<string> HostIdSet { get; public set; }
    public string HostReservationId { get; public set; }
    public string HourlyPrice { get; public set; }
    public string InstanceFamily { get; public set; }
    public PaymentOption PaymentOption { get; public set; }
    public string UpfrontPrice { get; public set; }
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public List`1<string> get_HostIdSet();
    public void set_HostIdSet(List`1<string> value);
    internal bool IsSetHostIdSet();
    public string get_HostReservationId();
    public void set_HostReservationId(string value);
    internal bool IsSetHostReservationId();
    public string get_HourlyPrice();
    public void set_HourlyPrice(string value);
    internal bool IsSetHourlyPrice();
    public string get_InstanceFamily();
    public void set_InstanceFamily(string value);
    internal bool IsSetInstanceFamily();
    public PaymentOption get_PaymentOption();
    public void set_PaymentOption(PaymentOption value);
    internal bool IsSetPaymentOption();
    public string get_UpfrontPrice();
    public void set_UpfrontPrice(string value);
    internal bool IsSetUpfrontPrice();
}
public class Amazon.EC2.Model.PurchaseCapacityBlockRequest : AmazonEC2Request {
    private string _capacityBlockOfferingId;
    private CapacityReservationInstancePlatform _instancePlatform;
    private List`1<TagSpecification> _tagSpecifications;
    [AWSPropertyAttribute]
public string CapacityBlockOfferingId { get; public set; }
    [AWSPropertyAttribute]
public CapacityReservationInstancePlatform InstancePlatform { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_CapacityBlockOfferingId();
    public void set_CapacityBlockOfferingId(string value);
    internal bool IsSetCapacityBlockOfferingId();
    public CapacityReservationInstancePlatform get_InstancePlatform();
    public void set_InstancePlatform(CapacityReservationInstancePlatform value);
    internal bool IsSetInstancePlatform();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.PurchaseCapacityBlockResponse : AmazonWebServiceResponse {
    private CapacityReservation _capacityReservation;
    public CapacityReservation CapacityReservation { get; public set; }
    public CapacityReservation get_CapacityReservation();
    public void set_CapacityReservation(CapacityReservation value);
    internal bool IsSetCapacityReservation();
}
public class Amazon.EC2.Model.PurchaseHostReservationRequest : AmazonEC2Request {
    private string _clientToken;
    private CurrencyCodeValues _currencyCode;
    private List`1<string> _hostIdSet;
    private string _limitPrice;
    private string _offeringId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> HostIdSet { get; public set; }
    public string LimitPrice { get; public set; }
    [AWSPropertyAttribute]
public string OfferingId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public List`1<string> get_HostIdSet();
    public void set_HostIdSet(List`1<string> value);
    internal bool IsSetHostIdSet();
    public string get_LimitPrice();
    public void set_LimitPrice(string value);
    internal bool IsSetLimitPrice();
    public string get_OfferingId();
    public void set_OfferingId(string value);
    internal bool IsSetOfferingId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.PurchaseHostReservationResponse : AmazonWebServiceResponse {
    private string _clientToken;
    private CurrencyCodeValues _currencyCode;
    private List`1<Purchase> _purchase;
    private string _totalHourlyPrice;
    private string _totalUpfrontPrice;
    public string ClientToken { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public List`1<Purchase> Purchase { get; public set; }
    public string TotalHourlyPrice { get; public set; }
    public string TotalUpfrontPrice { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public List`1<Purchase> get_Purchase();
    public void set_Purchase(List`1<Purchase> value);
    internal bool IsSetPurchase();
    public string get_TotalHourlyPrice();
    public void set_TotalHourlyPrice(string value);
    internal bool IsSetTotalHourlyPrice();
    public string get_TotalUpfrontPrice();
    public void set_TotalUpfrontPrice(string value);
    internal bool IsSetTotalUpfrontPrice();
}
public class Amazon.EC2.Model.PurchaseRequest : object {
    private Nullable`1<int> _instanceCount;
    private string _purchaseToken;
    [AWSPropertyAttribute]
public Nullable`1<int> InstanceCount { get; public set; }
    [AWSPropertyAttribute]
public string PurchaseToken { get; public set; }
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public string get_PurchaseToken();
    public void set_PurchaseToken(string value);
    internal bool IsSetPurchaseToken();
}
public class Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest : AmazonEC2Request {
    private Nullable`1<int> _instanceCount;
    private ReservedInstanceLimitPrice _limitPrice;
    private Nullable`1<DateTime> _purchaseTime;
    private string _reservedInstancesOfferingId;
    [AWSPropertyAttribute]
public Nullable`1<int> InstanceCount { get; public set; }
    public ReservedInstanceLimitPrice LimitPrice { get; public set; }
    public Nullable`1<DateTime> PurchaseTime { get; public set; }
    [AWSPropertyAttribute]
public string ReservedInstancesOfferingId { get; public set; }
    public PurchaseReservedInstancesOfferingRequest(string reservedInstancesOfferingId, Nullable`1<int> instanceCount);
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public ReservedInstanceLimitPrice get_LimitPrice();
    public void set_LimitPrice(ReservedInstanceLimitPrice value);
    internal bool IsSetLimitPrice();
    public Nullable`1<DateTime> get_PurchaseTime();
    public void set_PurchaseTime(Nullable`1<DateTime> value);
    internal bool IsSetPurchaseTime();
    public string get_ReservedInstancesOfferingId();
    public void set_ReservedInstancesOfferingId(string value);
    internal bool IsSetReservedInstancesOfferingId();
}
public class Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse : AmazonWebServiceResponse {
    private string _reservedInstancesId;
    public string ReservedInstancesId { get; public set; }
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
}
public class Amazon.EC2.Model.PurchaseScheduledInstancesRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<PurchaseRequest> _purchaseRequests;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<PurchaseRequest> PurchaseRequests { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<PurchaseRequest> get_PurchaseRequests();
    public void set_PurchaseRequests(List`1<PurchaseRequest> value);
    internal bool IsSetPurchaseRequests();
}
public class Amazon.EC2.Model.PurchaseScheduledInstancesResponse : AmazonWebServiceResponse {
    private List`1<ScheduledInstance> _scheduledInstanceSet;
    public List`1<ScheduledInstance> ScheduledInstanceSet { get; public set; }
    public List`1<ScheduledInstance> get_ScheduledInstanceSet();
    public void set_ScheduledInstanceSet(List`1<ScheduledInstance> value);
    internal bool IsSetScheduledInstanceSet();
}
public class Amazon.EC2.Model.RebootInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    public RebootInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.RebootInstancesResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.RecurringCharge : object {
    private Nullable`1<double> _amount;
    private RecurringChargeFrequency _frequency;
    public Nullable`1<double> Amount { get; public set; }
    public RecurringChargeFrequency Frequency { get; public set; }
    public Nullable`1<double> get_Amount();
    public void set_Amount(Nullable`1<double> value);
    internal bool IsSetAmount();
    public RecurringChargeFrequency get_Frequency();
    public void set_Frequency(RecurringChargeFrequency value);
    internal bool IsSetFrequency();
}
public class Amazon.EC2.Model.ReferencedSecurityGroup : object {
    private string _groupId;
    private string _peeringStatus;
    private string _userId;
    private string _vpcId;
    private string _vpcPeeringConnectionId;
    public string GroupId { get; public set; }
    public string PeeringStatus { get; public set; }
    public string UserId { get; public set; }
    public string VpcId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_PeeringStatus();
    public void set_PeeringStatus(string value);
    internal bool IsSetPeeringStatus();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.Region : object {
    private string _endpoint;
    private string _optInStatus;
    private string _regionName;
    public string Endpoint { get; public set; }
    public string OptInStatus { get; public set; }
    public string RegionName { get; public set; }
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_OptInStatus();
    public void set_OptInStatus(string value);
    internal bool IsSetOptInStatus();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.EC2.Model.RegisterImageRequest : AmazonEC2Request {
    private ArchitectureValues _architecture;
    private List`1<string> _billingProducts;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private BootModeValues _bootMode;
    private string _description;
    private Nullable`1<bool> _enaSupport;
    private string _imageLocation;
    private ImdsSupportValues _imdsSupport;
    private string _kernelId;
    private string _name;
    private string _ramdiskId;
    private string _rootDeviceName;
    private string _sriovNetSupport;
    private List`1<TagSpecification> _tagSpecifications;
    private TpmSupportValues _tpmSupport;
    private string _uefiData;
    private string _virtualizationType;
    public ArchitectureValues Architecture { get; public set; }
    public List`1<string> BillingProducts { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public BootModeValues BootMode { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> EnaSupport { get; public set; }
    public string ImageLocation { get; public set; }
    public ImdsSupportValues ImdsSupport { get; public set; }
    public string KernelId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public string SriovNetSupport { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public TpmSupportValues TpmSupport { get; public set; }
    [AWSPropertyAttribute]
public string UefiData { get; public set; }
    public string VirtualizationType { get; public set; }
    public RegisterImageRequest(string imageLocation);
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<string> get_BillingProducts();
    public void set_BillingProducts(List`1<string> value);
    internal bool IsSetBillingProducts();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public BootModeValues get_BootMode();
    public void set_BootMode(BootModeValues value);
    internal bool IsSetBootMode();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_EnaSupport();
    public void set_EnaSupport(Nullable`1<bool> value);
    internal bool IsSetEnaSupport();
    public string get_ImageLocation();
    public void set_ImageLocation(string value);
    internal bool IsSetImageLocation();
    public ImdsSupportValues get_ImdsSupport();
    public void set_ImdsSupport(ImdsSupportValues value);
    internal bool IsSetImdsSupport();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public TpmSupportValues get_TpmSupport();
    public void set_TpmSupport(TpmSupportValues value);
    internal bool IsSetTpmSupport();
    public string get_UefiData();
    public void set_UefiData(string value);
    internal bool IsSetUefiData();
    public string get_VirtualizationType();
    public void set_VirtualizationType(string value);
    internal bool IsSetVirtualizationType();
}
public class Amazon.EC2.Model.RegisterImageResponse : AmazonWebServiceResponse {
    private string _imageId;
    public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.RegisterInstanceEventNotificationAttributesRequest : AmazonEC2Request {
    private RegisterInstanceTagAttributeRequest _instanceTagAttribute;
    [AWSPropertyAttribute]
public RegisterInstanceTagAttributeRequest InstanceTagAttribute { get; public set; }
    public RegisterInstanceTagAttributeRequest get_InstanceTagAttribute();
    public void set_InstanceTagAttribute(RegisterInstanceTagAttributeRequest value);
    internal bool IsSetInstanceTagAttribute();
}
public class Amazon.EC2.Model.RegisterInstanceEventNotificationAttributesResponse : AmazonWebServiceResponse {
    private InstanceTagNotificationAttribute _instanceTagAttribute;
    public InstanceTagNotificationAttribute InstanceTagAttribute { get; public set; }
    public InstanceTagNotificationAttribute get_InstanceTagAttribute();
    public void set_InstanceTagAttribute(InstanceTagNotificationAttribute value);
    internal bool IsSetInstanceTagAttribute();
}
public class Amazon.EC2.Model.RegisterInstanceTagAttributeRequest : object {
    private Nullable`1<bool> _includeAllTagsOfInstance;
    private List`1<string> _instanceTagKeys;
    public Nullable`1<bool> IncludeAllTagsOfInstance { get; public set; }
    public List`1<string> InstanceTagKeys { get; public set; }
    public Nullable`1<bool> get_IncludeAllTagsOfInstance();
    public void set_IncludeAllTagsOfInstance(Nullable`1<bool> value);
    internal bool IsSetIncludeAllTagsOfInstance();
    public List`1<string> get_InstanceTagKeys();
    public void set_InstanceTagKeys(List`1<string> value);
    internal bool IsSetInstanceTagKeys();
}
public class Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupMembersRequest : AmazonEC2Request {
    private string _groupIpAddress;
    private List`1<string> _networkInterfaceIds;
    private string _transitGatewayMulticastDomainId;
    public string GroupIpAddress { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> NetworkInterfaceIds { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupMembersResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastRegisteredGroupMembers _registeredMulticastGroupMembers;
    public TransitGatewayMulticastRegisteredGroupMembers RegisteredMulticastGroupMembers { get; public set; }
    public TransitGatewayMulticastRegisteredGroupMembers get_RegisteredMulticastGroupMembers();
    public void set_RegisteredMulticastGroupMembers(TransitGatewayMulticastRegisteredGroupMembers value);
    internal bool IsSetRegisteredMulticastGroupMembers();
}
public class Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupSourcesRequest : AmazonEC2Request {
    private string _groupIpAddress;
    private List`1<string> _networkInterfaceIds;
    private string _transitGatewayMulticastDomainId;
    public string GroupIpAddress { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> NetworkInterfaceIds { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupSourcesResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastRegisteredGroupSources _registeredMulticastGroupSources;
    public TransitGatewayMulticastRegisteredGroupSources RegisteredMulticastGroupSources { get; public set; }
    public TransitGatewayMulticastRegisteredGroupSources get_RegisteredMulticastGroupSources();
    public void set_RegisteredMulticastGroupSources(TransitGatewayMulticastRegisteredGroupSources value);
    internal bool IsSetRegisteredMulticastGroupSources();
}
public class Amazon.EC2.Model.RejectTransitGatewayMulticastDomainAssociationsRequest : AmazonEC2Request {
    private List`1<string> _subnetIds;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayMulticastDomainId;
    public List`1<string> SubnetIds { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.RejectTransitGatewayMulticastDomainAssociationsResponse : AmazonWebServiceResponse {
    private TransitGatewayMulticastDomainAssociations _associations;
    public TransitGatewayMulticastDomainAssociations Associations { get; public set; }
    public TransitGatewayMulticastDomainAssociations get_Associations();
    public void set_Associations(TransitGatewayMulticastDomainAssociations value);
    internal bool IsSetAssociations();
}
public class Amazon.EC2.Model.RejectTransitGatewayPeeringAttachmentRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.RejectTransitGatewayPeeringAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayPeeringAttachment _transitGatewayPeeringAttachment;
    public TransitGatewayPeeringAttachment TransitGatewayPeeringAttachment { get; public set; }
    public TransitGatewayPeeringAttachment get_TransitGatewayPeeringAttachment();
    public void set_TransitGatewayPeeringAttachment(TransitGatewayPeeringAttachment value);
    internal bool IsSetTransitGatewayPeeringAttachment();
}
public class Amazon.EC2.Model.RejectTransitGatewayVpcAttachmentRequest : AmazonEC2Request {
    private string _transitGatewayAttachmentId;
    [AWSPropertyAttribute]
public string TransitGatewayAttachmentId { get; public set; }
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.RejectTransitGatewayVpcAttachmentResponse : AmazonWebServiceResponse {
    private TransitGatewayVpcAttachment _transitGatewayVpcAttachment;
    public TransitGatewayVpcAttachment TransitGatewayVpcAttachment { get; public set; }
    public TransitGatewayVpcAttachment get_TransitGatewayVpcAttachment();
    public void set_TransitGatewayVpcAttachment(TransitGatewayVpcAttachment value);
    internal bool IsSetTransitGatewayVpcAttachment();
}
public class Amazon.EC2.Model.RejectVpcEndpointConnectionsRequest : AmazonEC2Request {
    private string _serviceId;
    private List`1<string> _vpcEndpointIds;
    [AWSPropertyAttribute]
public string ServiceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VpcEndpointIds { get; public set; }
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public List`1<string> get_VpcEndpointIds();
    public void set_VpcEndpointIds(List`1<string> value);
    internal bool IsSetVpcEndpointIds();
}
public class Amazon.EC2.Model.RejectVpcEndpointConnectionsResponse : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.RejectVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _vpcPeeringConnectionId;
    [AWSPropertyAttribute]
public string VpcPeeringConnectionId { get; public set; }
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.RejectVpcPeeringConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReleaseAddressRequest : AmazonEC2Request {
    private string _allocationId;
    private string _networkBorderGroup;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public string PublicIp { get; public set; }
    public ReleaseAddressRequest(string publicIp);
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.ReleaseAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReleaseHostsRequest : AmazonEC2Request {
    private List`1<string> _hostIds;
    [AWSPropertyAttribute]
public List`1<string> HostIds { get; public set; }
    public List`1<string> get_HostIds();
    public void set_HostIds(List`1<string> value);
    internal bool IsSetHostIds();
}
public class Amazon.EC2.Model.ReleaseHostsResponse : AmazonWebServiceResponse {
    private List`1<string> _successful;
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<string> Successful { get; public set; }
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<string> get_Successful();
    public void set_Successful(List`1<string> value);
    internal bool IsSetSuccessful();
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.ReleaseIpamPoolAllocationRequest : AmazonEC2Request {
    private string _cidr;
    private string _ipamPoolAllocationId;
    private string _ipamPoolId;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolAllocationId { get; public set; }
    [AWSPropertyAttribute]
public string IpamPoolId { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_IpamPoolAllocationId();
    public void set_IpamPoolAllocationId(string value);
    internal bool IsSetIpamPoolAllocationId();
    public string get_IpamPoolId();
    public void set_IpamPoolId(string value);
    internal bool IsSetIpamPoolId();
}
public class Amazon.EC2.Model.ReleaseIpamPoolAllocationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _success;
    public Nullable`1<bool> Success { get; public set; }
    public Nullable`1<bool> get_Success();
    public void set_Success(Nullable`1<bool> value);
    internal bool IsSetSuccess();
}
public class Amazon.EC2.Model.RemoveIpamOperatingRegion : object {
    private string _regionName;
    public string RegionName { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.EC2.Model.RemovePrefixListEntry : object {
    private string _cidr;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
}
public class Amazon.EC2.Model.ReplaceIamInstanceProfileAssociationRequest : AmazonEC2Request {
    private string _associationId;
    private IamInstanceProfileSpecification _iamInstanceProfile;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
}
public class Amazon.EC2.Model.ReplaceIamInstanceProfileAssociationResponse : AmazonWebServiceResponse {
    private IamInstanceProfileAssociation _iamInstanceProfileAssociation;
    public IamInstanceProfileAssociation IamInstanceProfileAssociation { get; public set; }
    public IamInstanceProfileAssociation get_IamInstanceProfileAssociation();
    public void set_IamInstanceProfileAssociation(IamInstanceProfileAssociation value);
    internal bool IsSetIamInstanceProfileAssociation();
}
public class Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest : AmazonEC2Request {
    private string _associationId;
    private string _networkAclId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public string NetworkAclId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
}
public class Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse : AmazonWebServiceResponse {
    private string _newAssociationId;
    public string NewAssociationId { get; public set; }
    public string get_NewAssociationId();
    public void set_NewAssociationId(string value);
    internal bool IsSetNewAssociationId();
}
public class Amazon.EC2.Model.ReplaceNetworkAclEntryRequest : AmazonEC2Request {
    private string _cidrBlock;
    private Nullable`1<bool> _egress;
    private IcmpTypeCode _icmpTypeCode;
    private string _ipv6CidrBlock;
    private string _networkAclId;
    private PortRange _portRange;
    private string _protocol;
    private RuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    public string CidrBlock { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Egress { get; public set; }
    public IcmpTypeCode IcmpTypeCode { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    [AWSPropertyAttribute]
public string NetworkAclId { get; public set; }
    public PortRange PortRange { get; public set; }
    [AWSPropertyAttribute]
public string Protocol { get; public set; }
    [AWSPropertyAttribute]
public RuleAction RuleAction { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RuleNumber { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public Nullable`1<bool> get_Egress();
    public void set_Egress(Nullable`1<bool> value);
    internal bool IsSetEgress();
    public IcmpTypeCode get_IcmpTypeCode();
    public void set_IcmpTypeCode(IcmpTypeCode value);
    internal bool IsSetIcmpTypeCode();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public RuleAction get_RuleAction();
    public void set_RuleAction(RuleAction value);
    internal bool IsSetRuleAction();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.ReplaceNetworkAclEntryResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReplaceRootVolumeTask : object {
    private string _completeTime;
    private Nullable`1<bool> _deleteReplacedRootVolume;
    private string _imageId;
    private string _instanceId;
    private string _replaceRootVolumeTaskId;
    private string _snapshotId;
    private string _startTime;
    private List`1<Tag> _tags;
    private ReplaceRootVolumeTaskState _taskState;
    public string CompleteTime { get; public set; }
    public Nullable`1<bool> DeleteReplacedRootVolume { get; public set; }
    public string ImageId { get; public set; }
    public string InstanceId { get; public set; }
    public string ReplaceRootVolumeTaskId { get; public set; }
    public string SnapshotId { get; public set; }
    public string StartTime { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public ReplaceRootVolumeTaskState TaskState { get; public set; }
    public string get_CompleteTime();
    public void set_CompleteTime(string value);
    internal bool IsSetCompleteTime();
    public Nullable`1<bool> get_DeleteReplacedRootVolume();
    public void set_DeleteReplacedRootVolume(Nullable`1<bool> value);
    internal bool IsSetDeleteReplacedRootVolume();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_ReplaceRootVolumeTaskId();
    public void set_ReplaceRootVolumeTaskId(string value);
    internal bool IsSetReplaceRootVolumeTaskId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_StartTime();
    public void set_StartTime(string value);
    internal bool IsSetStartTime();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public ReplaceRootVolumeTaskState get_TaskState();
    public void set_TaskState(ReplaceRootVolumeTaskState value);
    internal bool IsSetTaskState();
}
public class Amazon.EC2.Model.ReplaceRouteRequest : AmazonEC2Request {
    private string _carrierGatewayId;
    private string _coreNetworkArn;
    private string _destinationCidrBlock;
    private string _destinationIpv6CidrBlock;
    private string _destinationPrefixListId;
    private string _egressOnlyInternetGatewayId;
    private string _gatewayId;
    private string _instanceId;
    private string _localGatewayId;
    private Nullable`1<bool> _localTarget;
    private string _natGatewayId;
    private string _networkInterfaceId;
    private string _routeTableId;
    private string _transitGatewayId;
    private string _vpcEndpointId;
    private string _vpcPeeringConnectionId;
    public string CarrierGatewayId { get; public set; }
    public string CoreNetworkArn { get; public set; }
    public string DestinationCidrBlock { get; public set; }
    public string DestinationIpv6CidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    public string EgressOnlyInternetGatewayId { get; public set; }
    public string GatewayId { get; public set; }
    public string InstanceId { get; public set; }
    public string LocalGatewayId { get; public set; }
    public Nullable`1<bool> LocalTarget { get; public set; }
    public string NatGatewayId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string VpcEndpointId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_CarrierGatewayId();
    public void set_CarrierGatewayId(string value);
    internal bool IsSetCarrierGatewayId();
    public string get_CoreNetworkArn();
    public void set_CoreNetworkArn(string value);
    internal bool IsSetCoreNetworkArn();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationIpv6CidrBlock();
    public void set_DestinationIpv6CidrBlock(string value);
    internal bool IsSetDestinationIpv6CidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_EgressOnlyInternetGatewayId();
    public void set_EgressOnlyInternetGatewayId(string value);
    internal bool IsSetEgressOnlyInternetGatewayId();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public Nullable`1<bool> get_LocalTarget();
    public void set_LocalTarget(Nullable`1<bool> value);
    internal bool IsSetLocalTarget();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.ReplaceRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReplaceRouteTableAssociationRequest : AmazonEC2Request {
    private string _associationId;
    private string _routeTableId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public string RouteTableId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.ReplaceRouteTableAssociationResponse : AmazonWebServiceResponse {
    private RouteTableAssociationState _associationState;
    private string _newAssociationId;
    public RouteTableAssociationState AssociationState { get; public set; }
    public string NewAssociationId { get; public set; }
    public RouteTableAssociationState get_AssociationState();
    public void set_AssociationState(RouteTableAssociationState value);
    internal bool IsSetAssociationState();
    public string get_NewAssociationId();
    public void set_NewAssociationId(string value);
    internal bool IsSetNewAssociationId();
}
public class Amazon.EC2.Model.ReplaceTransitGatewayRouteRequest : AmazonEC2Request {
    private Nullable`1<bool> _blackhole;
    private string _destinationCidrBlock;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableId;
    public Nullable`1<bool> Blackhole { get; public set; }
    [AWSPropertyAttribute]
public string DestinationCidrBlock { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public Nullable`1<bool> get_Blackhole();
    public void set_Blackhole(Nullable`1<bool> value);
    internal bool IsSetBlackhole();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.ReplaceTransitGatewayRouteResponse : AmazonWebServiceResponse {
    private TransitGatewayRoute _route;
    public TransitGatewayRoute Route { get; public set; }
    public TransitGatewayRoute get_Route();
    public void set_Route(TransitGatewayRoute value);
    internal bool IsSetRoute();
}
public class Amazon.EC2.Model.ReplaceVpnTunnelRequest : AmazonEC2Request {
    private Nullable`1<bool> _applyPendingMaintenance;
    private string _vpnConnectionId;
    private string _vpnTunnelOutsideIpAddress;
    public Nullable`1<bool> ApplyPendingMaintenance { get; public set; }
    [AWSPropertyAttribute]
public string VpnConnectionId { get; public set; }
    [AWSPropertyAttribute]
public string VpnTunnelOutsideIpAddress { get; public set; }
    public Nullable`1<bool> get_ApplyPendingMaintenance();
    public void set_ApplyPendingMaintenance(Nullable`1<bool> value);
    internal bool IsSetApplyPendingMaintenance();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnTunnelOutsideIpAddress();
    public void set_VpnTunnelOutsideIpAddress(string value);
    internal bool IsSetVpnTunnelOutsideIpAddress();
}
public class Amazon.EC2.Model.ReplaceVpnTunnelResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ReportInstanceStatusRequest : AmazonEC2Request {
    private string _description;
    private Nullable`1<DateTime> _endTimeUtc;
    private List`1<string> _instances;
    private List`1<string> _reasonCodes;
    private Nullable`1<DateTime> _startTimeUtc;
    private ReportStatusType _status;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    public string Description { get; public set; }
    public Nullable`1<DateTime> EndTimeUtc { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Instances { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ReasonCodes { get; public set; }
    public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [AWSPropertyAttribute]
public ReportStatusType Status { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc results in both EndTime and EndTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EndTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EndTime { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_EndTimeUtc();
    public void set_EndTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetEndTimeUtc();
    public List`1<string> get_Instances();
    public void set_Instances(List`1<string> value);
    internal bool IsSetInstances();
    public List`1<string> get_ReasonCodes();
    public void set_ReasonCodes(List`1<string> value);
    internal bool IsSetReasonCodes();
    public Nullable`1<DateTime> get_StartTimeUtc();
    public void set_StartTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartTimeUtc();
    public ReportStatusType get_Status();
    public void set_Status(ReportStatusType value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.ReportInstanceStatusResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.RequestFilterPortRange : object {
    private Nullable`1<int> _fromPort;
    private Nullable`1<int> _toPort;
    [AWSPropertyAttribute]
public Nullable`1<int> FromPort { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ToPort { get; public set; }
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
}
public class Amazon.EC2.Model.RequestIpamResourceTag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.RequestLaunchTemplateData : object {
    private List`1<LaunchTemplateBlockDeviceMappingRequest> _blockDeviceMappings;
    private LaunchTemplateCapacityReservationSpecificationRequest _capacityReservationSpecification;
    private LaunchTemplateCpuOptionsRequest _cpuOptions;
    private CreditSpecificationRequest _creditSpecification;
    private Nullable`1<bool> _disableApiStop;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private List`1<ElasticGpuSpecification> _elasticGpuSpecifications;
    private List`1<LaunchTemplateElasticInferenceAccelerator> _elasticInferenceAccelerators;
    private LaunchTemplateEnclaveOptionsRequest _enclaveOptions;
    private LaunchTemplateHibernationOptionsRequest _hibernationOptions;
    private LaunchTemplateIamInstanceProfileSpecificationRequest _iamInstanceProfile;
    private string _imageId;
    private ShutdownBehavior _instanceInitiatedShutdownBehavior;
    private LaunchTemplateInstanceMarketOptionsRequest _instanceMarketOptions;
    private InstanceRequirementsRequest _instanceRequirements;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private List`1<LaunchTemplateLicenseConfigurationRequest> _licenseSpecifications;
    private LaunchTemplateInstanceMaintenanceOptionsRequest _maintenanceOptions;
    private LaunchTemplateInstanceMetadataOptionsRequest _metadataOptions;
    private LaunchTemplatesMonitoringRequest _monitoring;
    private List`1<LaunchTemplateInstanceNetworkInterfaceSpecificationRequest> _networkInterfaces;
    private LaunchTemplatePlacementRequest _placement;
    private LaunchTemplatePrivateDnsNameOptionsRequest _privateDnsNameOptions;
    private string _ramDiskId;
    private List`1<string> _securityGroupIds;
    private List`1<string> _securityGroups;
    private List`1<LaunchTemplateTagSpecificationRequest> _tagSpecifications;
    private string _userData;
    public List`1<LaunchTemplateBlockDeviceMappingRequest> BlockDeviceMappings { get; public set; }
    public LaunchTemplateCapacityReservationSpecificationRequest CapacityReservationSpecification { get; public set; }
    public LaunchTemplateCpuOptionsRequest CpuOptions { get; public set; }
    public CreditSpecificationRequest CreditSpecification { get; public set; }
    public Nullable`1<bool> DisableApiStop { get; public set; }
    public Nullable`1<bool> DisableApiTermination { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public List`1<ElasticGpuSpecification> ElasticGpuSpecifications { get; public set; }
    public List`1<LaunchTemplateElasticInferenceAccelerator> ElasticInferenceAccelerators { get; public set; }
    public LaunchTemplateEnclaveOptionsRequest EnclaveOptions { get; public set; }
    public LaunchTemplateHibernationOptionsRequest HibernationOptions { get; public set; }
    public LaunchTemplateIamInstanceProfileSpecificationRequest IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public ShutdownBehavior InstanceInitiatedShutdownBehavior { get; public set; }
    public LaunchTemplateInstanceMarketOptionsRequest InstanceMarketOptions { get; public set; }
    public InstanceRequirementsRequest InstanceRequirements { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public List`1<LaunchTemplateLicenseConfigurationRequest> LicenseSpecifications { get; public set; }
    public LaunchTemplateInstanceMaintenanceOptionsRequest MaintenanceOptions { get; public set; }
    public LaunchTemplateInstanceMetadataOptionsRequest MetadataOptions { get; public set; }
    public LaunchTemplatesMonitoringRequest Monitoring { get; public set; }
    public List`1<LaunchTemplateInstanceNetworkInterfaceSpecificationRequest> NetworkInterfaces { get; public set; }
    public LaunchTemplatePlacementRequest Placement { get; public set; }
    public LaunchTemplatePrivateDnsNameOptionsRequest PrivateDnsNameOptions { get; public set; }
    public string RamDiskId { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public List`1<LaunchTemplateTagSpecificationRequest> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string UserData { get; public set; }
    public List`1<LaunchTemplateBlockDeviceMappingRequest> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<LaunchTemplateBlockDeviceMappingRequest> value);
    internal bool IsSetBlockDeviceMappings();
    public LaunchTemplateCapacityReservationSpecificationRequest get_CapacityReservationSpecification();
    public void set_CapacityReservationSpecification(LaunchTemplateCapacityReservationSpecificationRequest value);
    internal bool IsSetCapacityReservationSpecification();
    public LaunchTemplateCpuOptionsRequest get_CpuOptions();
    public void set_CpuOptions(LaunchTemplateCpuOptionsRequest value);
    internal bool IsSetCpuOptions();
    public CreditSpecificationRequest get_CreditSpecification();
    public void set_CreditSpecification(CreditSpecificationRequest value);
    internal bool IsSetCreditSpecification();
    public Nullable`1<bool> get_DisableApiStop();
    public void set_DisableApiStop(Nullable`1<bool> value);
    internal bool IsSetDisableApiStop();
    public Nullable`1<bool> get_DisableApiTermination();
    public void set_DisableApiTermination(Nullable`1<bool> value);
    internal bool IsSetDisableApiTermination();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public List`1<ElasticGpuSpecification> get_ElasticGpuSpecifications();
    public void set_ElasticGpuSpecifications(List`1<ElasticGpuSpecification> value);
    internal bool IsSetElasticGpuSpecifications();
    public List`1<LaunchTemplateElasticInferenceAccelerator> get_ElasticInferenceAccelerators();
    public void set_ElasticInferenceAccelerators(List`1<LaunchTemplateElasticInferenceAccelerator> value);
    internal bool IsSetElasticInferenceAccelerators();
    public LaunchTemplateEnclaveOptionsRequest get_EnclaveOptions();
    public void set_EnclaveOptions(LaunchTemplateEnclaveOptionsRequest value);
    internal bool IsSetEnclaveOptions();
    public LaunchTemplateHibernationOptionsRequest get_HibernationOptions();
    public void set_HibernationOptions(LaunchTemplateHibernationOptionsRequest value);
    internal bool IsSetHibernationOptions();
    public LaunchTemplateIamInstanceProfileSpecificationRequest get_IamInstanceProfile();
    public void set_IamInstanceProfile(LaunchTemplateIamInstanceProfileSpecificationRequest value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public ShutdownBehavior get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(ShutdownBehavior value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public LaunchTemplateInstanceMarketOptionsRequest get_InstanceMarketOptions();
    public void set_InstanceMarketOptions(LaunchTemplateInstanceMarketOptionsRequest value);
    internal bool IsSetInstanceMarketOptions();
    public InstanceRequirementsRequest get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirementsRequest value);
    internal bool IsSetInstanceRequirements();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public List`1<LaunchTemplateLicenseConfigurationRequest> get_LicenseSpecifications();
    public void set_LicenseSpecifications(List`1<LaunchTemplateLicenseConfigurationRequest> value);
    internal bool IsSetLicenseSpecifications();
    public LaunchTemplateInstanceMaintenanceOptionsRequest get_MaintenanceOptions();
    public void set_MaintenanceOptions(LaunchTemplateInstanceMaintenanceOptionsRequest value);
    internal bool IsSetMaintenanceOptions();
    public LaunchTemplateInstanceMetadataOptionsRequest get_MetadataOptions();
    public void set_MetadataOptions(LaunchTemplateInstanceMetadataOptionsRequest value);
    internal bool IsSetMetadataOptions();
    public LaunchTemplatesMonitoringRequest get_Monitoring();
    public void set_Monitoring(LaunchTemplatesMonitoringRequest value);
    internal bool IsSetMonitoring();
    public List`1<LaunchTemplateInstanceNetworkInterfaceSpecificationRequest> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<LaunchTemplateInstanceNetworkInterfaceSpecificationRequest> value);
    internal bool IsSetNetworkInterfaces();
    public LaunchTemplatePlacementRequest get_Placement();
    public void set_Placement(LaunchTemplatePlacementRequest value);
    internal bool IsSetPlacement();
    public LaunchTemplatePrivateDnsNameOptionsRequest get_PrivateDnsNameOptions();
    public void set_PrivateDnsNameOptions(LaunchTemplatePrivateDnsNameOptionsRequest value);
    internal bool IsSetPrivateDnsNameOptions();
    public string get_RamDiskId();
    public void set_RamDiskId(string value);
    internal bool IsSetRamDiskId();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public List`1<LaunchTemplateTagSpecificationRequest> get_TagSpecifications();
    public void set_TagSpecifications(List`1<LaunchTemplateTagSpecificationRequest> value);
    internal bool IsSetTagSpecifications();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.RequestSpotFleetRequest : AmazonEC2Request {
    private SpotFleetRequestConfigData _spotFleetRequestConfig;
    [AWSPropertyAttribute]
public SpotFleetRequestConfigData SpotFleetRequestConfig { get; public set; }
    public SpotFleetRequestConfigData get_SpotFleetRequestConfig();
    public void set_SpotFleetRequestConfig(SpotFleetRequestConfigData value);
    internal bool IsSetSpotFleetRequestConfig();
}
public class Amazon.EC2.Model.RequestSpotFleetResponse : AmazonWebServiceResponse {
    private string _spotFleetRequestId;
    public string SpotFleetRequestId { get; public set; }
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.RequestSpotInstancesRequest : AmazonEC2Request {
    private string _availabilityZoneGroup;
    private Nullable`1<int> _blockDurationMinutes;
    private string _clientToken;
    private Nullable`1<int> _instanceCount;
    private InstanceInterruptionBehavior _instanceInterruptionBehavior;
    private string _launchGroup;
    private LaunchSpecification _launchSpecification;
    private string _spotPrice;
    private List`1<TagSpecification> _tagSpecifications;
    private SpotInstanceType _type;
    private Nullable`1<DateTime> _validFromUtc;
    private Nullable`1<DateTime> _validUntilUtc;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public string AvailabilityZoneGroup { get; public set; }
    public Nullable`1<int> BlockDurationMinutes { get; public set; }
    public string ClientToken { get; public set; }
    public Nullable`1<int> InstanceCount { get; public set; }
    public InstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public string LaunchGroup { get; public set; }
    public LaunchSpecification LaunchSpecification { get; public set; }
    public string SpotPrice { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public SpotInstanceType Type { get; public set; }
    public Nullable`1<DateTime> ValidFromUtc { get; public set; }
    public Nullable`1<DateTime> ValidUntilUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidFromUtc instead. Setting either ValidFrom or ValidFromUtc results in both ValidFrom and ValidFromUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidFrom is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidFrom { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidUntil is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidUntil { get; public set; }
    public RequestSpotInstancesRequest(string spotPrice);
    public string get_AvailabilityZoneGroup();
    public void set_AvailabilityZoneGroup(string value);
    internal bool IsSetAvailabilityZoneGroup();
    public Nullable`1<int> get_BlockDurationMinutes();
    public void set_BlockDurationMinutes(Nullable`1<int> value);
    internal bool IsSetBlockDurationMinutes();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public InstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(InstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public string get_LaunchGroup();
    public void set_LaunchGroup(string value);
    internal bool IsSetLaunchGroup();
    public LaunchSpecification get_LaunchSpecification();
    public void set_LaunchSpecification(LaunchSpecification value);
    internal bool IsSetLaunchSpecification();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public SpotInstanceType get_Type();
    public void set_Type(SpotInstanceType value);
    internal bool IsSetType();
    public Nullable`1<DateTime> get_ValidFromUtc();
    public void set_ValidFromUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidFromUtc();
    public Nullable`1<DateTime> get_ValidUntilUtc();
    public void set_ValidUntilUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidUntilUtc();
    public Nullable`1<DateTime> get_ValidFrom();
    public void set_ValidFrom(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.RequestSpotInstancesResponse : AmazonWebServiceResponse {
    private List`1<SpotInstanceRequest> _spotInstanceRequests;
    public List`1<SpotInstanceRequest> SpotInstanceRequests { get; public set; }
    public List`1<SpotInstanceRequest> get_SpotInstanceRequests();
    public void set_SpotInstanceRequests(List`1<SpotInstanceRequest> value);
    internal bool IsSetSpotInstanceRequests();
}
public class Amazon.EC2.Model.Reservation : object {
    private List`1<string> _groupNames;
    private List`1<GroupIdentifier> _groups;
    private List`1<Instance> _instances;
    private string _ownerId;
    private string _requesterId;
    private string _reservationId;
    public List`1<string> GroupNames { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public List`1<Instance> Instances { get; public set; }
    public string OwnerId { get; public set; }
    public string RequesterId { get; public set; }
    public string ReservationId { get; public set; }
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_RequesterId();
    public void set_RequesterId(string value);
    internal bool IsSetRequesterId();
    public string get_ReservationId();
    public void set_ReservationId(string value);
    internal bool IsSetReservationId();
}
public class Amazon.EC2.Model.ReservationFleetInstanceSpecification : object {
    private string _availabilityZone;
    private string _availabilityZoneId;
    private Nullable`1<bool> _ebsOptimized;
    private CapacityReservationInstancePlatform _instancePlatform;
    private InstanceType _instanceType;
    private Nullable`1<int> _priority;
    private Nullable`1<double> _weight;
    public string AvailabilityZone { get; public set; }
    public string AvailabilityZoneId { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public CapacityReservationInstancePlatform InstancePlatform { get; public set; }
    public InstanceType InstanceType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public Nullable`1<double> Weight { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public CapacityReservationInstancePlatform get_InstancePlatform();
    public void set_InstancePlatform(CapacityReservationInstancePlatform value);
    internal bool IsSetInstancePlatform();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public Nullable`1<double> get_Weight();
    public void set_Weight(Nullable`1<double> value);
    internal bool IsSetWeight();
}
public class Amazon.EC2.Model.ReservationValue : object {
    private string _hourlyPrice;
    private string _remainingTotalValue;
    private string _remainingUpfrontValue;
    public string HourlyPrice { get; public set; }
    public string RemainingTotalValue { get; public set; }
    public string RemainingUpfrontValue { get; public set; }
    public string get_HourlyPrice();
    public void set_HourlyPrice(string value);
    internal bool IsSetHourlyPrice();
    public string get_RemainingTotalValue();
    public void set_RemainingTotalValue(string value);
    internal bool IsSetRemainingTotalValue();
    public string get_RemainingUpfrontValue();
    public void set_RemainingUpfrontValue(string value);
    internal bool IsSetRemainingUpfrontValue();
}
public class Amazon.EC2.Model.ReservedInstanceLimitPrice : object {
    private Nullable`1<double> _amount;
    private CurrencyCodeValues _currencyCode;
    public Nullable`1<double> Amount { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<double> get_Amount();
    public void set_Amount(Nullable`1<double> value);
    internal bool IsSetAmount();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
}
public class Amazon.EC2.Model.ReservedInstanceReservationValue : object {
    private ReservationValue _reservationValue;
    private string _reservedInstanceId;
    public ReservationValue ReservationValue { get; public set; }
    public string ReservedInstanceId { get; public set; }
    public ReservationValue get_ReservationValue();
    public void set_ReservationValue(ReservationValue value);
    internal bool IsSetReservationValue();
    public string get_ReservedInstanceId();
    public void set_ReservedInstanceId(string value);
    internal bool IsSetReservedInstanceId();
}
public class Amazon.EC2.Model.ReservedInstances : object {
    private string _availabilityZone;
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<long> _duration;
    private Nullable`1<DateTime> _end;
    private Nullable`1<float> _fixedPrice;
    private Nullable`1<int> _instanceCount;
    private Tenancy _instanceTenancy;
    private InstanceType _instanceType;
    private OfferingClassType _offeringClass;
    private OfferingTypeValues _offeringType;
    private RIProductDescription _productDescription;
    private List`1<RecurringCharge> _recurringCharges;
    private string _reservedInstancesId;
    private Scope _scope;
    private Nullable`1<DateTime> _start;
    private ReservedInstanceState _state;
    private List`1<Tag> _tags;
    private Nullable`1<float> _usagePrice;
    public string AvailabilityZone { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<long> Duration { get; public set; }
    public Nullable`1<DateTime> End { get; public set; }
    public Nullable`1<float> FixedPrice { get; public set; }
    public Nullable`1<int> InstanceCount { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public OfferingClassType OfferingClass { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public List`1<RecurringCharge> RecurringCharges { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public Scope Scope { get; public set; }
    public Nullable`1<DateTime> Start { get; public set; }
    public ReservedInstanceState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<float> UsagePrice { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<long> get_Duration();
    public void set_Duration(Nullable`1<long> value);
    internal bool IsSetDuration();
    public Nullable`1<DateTime> get_End();
    public void set_End(Nullable`1<DateTime> value);
    internal bool IsSetEnd();
    public Nullable`1<float> get_FixedPrice();
    public void set_FixedPrice(Nullable`1<float> value);
    internal bool IsSetFixedPrice();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public OfferingClassType get_OfferingClass();
    public void set_OfferingClass(OfferingClassType value);
    internal bool IsSetOfferingClass();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public List`1<RecurringCharge> get_RecurringCharges();
    public void set_RecurringCharges(List`1<RecurringCharge> value);
    internal bool IsSetRecurringCharges();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public Scope get_Scope();
    public void set_Scope(Scope value);
    internal bool IsSetScope();
    public Nullable`1<DateTime> get_Start();
    public void set_Start(Nullable`1<DateTime> value);
    internal bool IsSetStart();
    public ReservedInstanceState get_State();
    public void set_State(ReservedInstanceState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<float> get_UsagePrice();
    public void set_UsagePrice(Nullable`1<float> value);
    internal bool IsSetUsagePrice();
}
public class Amazon.EC2.Model.ReservedInstancesConfiguration : object {
    private string _availabilityZone;
    private Nullable`1<int> _instanceCount;
    private InstanceType _instanceType;
    private string _platform;
    private Scope _scope;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<int> InstanceCount { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string Platform { get; public set; }
    public Scope Scope { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public Scope get_Scope();
    public void set_Scope(Scope value);
    internal bool IsSetScope();
}
public class Amazon.EC2.Model.ReservedInstancesId : object {
    private string _id;
    public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.EC2.Model.ReservedInstancesListing : object {
    private string _clientToken;
    private Nullable`1<DateTime> _createDate;
    private List`1<InstanceCount> _instanceCounts;
    private List`1<PriceSchedule> _priceSchedules;
    private string _reservedInstancesId;
    private string _reservedInstancesListingId;
    private ListingStatus _status;
    private string _statusMessage;
    private List`1<Tag> _tags;
    private Nullable`1<DateTime> _updateDate;
    public string ClientToken { get; public set; }
    public Nullable`1<DateTime> CreateDate { get; public set; }
    public List`1<InstanceCount> InstanceCounts { get; public set; }
    public List`1<PriceSchedule> PriceSchedules { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public string ReservedInstancesListingId { get; public set; }
    public ListingStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<DateTime> UpdateDate { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<DateTime> get_CreateDate();
    public void set_CreateDate(Nullable`1<DateTime> value);
    internal bool IsSetCreateDate();
    public List`1<InstanceCount> get_InstanceCounts();
    public void set_InstanceCounts(List`1<InstanceCount> value);
    internal bool IsSetInstanceCounts();
    public List`1<PriceSchedule> get_PriceSchedules();
    public void set_PriceSchedules(List`1<PriceSchedule> value);
    internal bool IsSetPriceSchedules();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public string get_ReservedInstancesListingId();
    public void set_ReservedInstancesListingId(string value);
    internal bool IsSetReservedInstancesListingId();
    public ListingStatus get_Status();
    public void set_Status(ListingStatus value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<DateTime> get_UpdateDate();
    public void set_UpdateDate(Nullable`1<DateTime> value);
    internal bool IsSetUpdateDate();
}
public class Amazon.EC2.Model.ReservedInstancesModification : object {
    private string _clientToken;
    private Nullable`1<DateTime> _createDate;
    private Nullable`1<DateTime> _effectiveDate;
    private List`1<ReservedInstancesModificationResult> _modificationResults;
    private List`1<ReservedInstancesId> _reservedInstancesIds;
    private string _reservedInstancesModificationId;
    private string _status;
    private string _statusMessage;
    private Nullable`1<DateTime> _updateDate;
    public string ClientToken { get; public set; }
    public Nullable`1<DateTime> CreateDate { get; public set; }
    public Nullable`1<DateTime> EffectiveDate { get; public set; }
    public List`1<ReservedInstancesModificationResult> ModificationResults { get; public set; }
    public List`1<ReservedInstancesId> ReservedInstancesIds { get; public set; }
    public string ReservedInstancesModificationId { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public Nullable`1<DateTime> UpdateDate { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<DateTime> get_CreateDate();
    public void set_CreateDate(Nullable`1<DateTime> value);
    internal bool IsSetCreateDate();
    public Nullable`1<DateTime> get_EffectiveDate();
    public void set_EffectiveDate(Nullable`1<DateTime> value);
    internal bool IsSetEffectiveDate();
    public List`1<ReservedInstancesModificationResult> get_ModificationResults();
    public void set_ModificationResults(List`1<ReservedInstancesModificationResult> value);
    internal bool IsSetModificationResults();
    public List`1<ReservedInstancesId> get_ReservedInstancesIds();
    public void set_ReservedInstancesIds(List`1<ReservedInstancesId> value);
    internal bool IsSetReservedInstancesIds();
    public string get_ReservedInstancesModificationId();
    public void set_ReservedInstancesModificationId(string value);
    internal bool IsSetReservedInstancesModificationId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public Nullable`1<DateTime> get_UpdateDate();
    public void set_UpdateDate(Nullable`1<DateTime> value);
    internal bool IsSetUpdateDate();
}
public class Amazon.EC2.Model.ReservedInstancesModificationResult : object {
    private string _reservedInstancesId;
    private ReservedInstancesConfiguration _targetConfiguration;
    public string ReservedInstancesId { get; public set; }
    public ReservedInstancesConfiguration TargetConfiguration { get; public set; }
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public ReservedInstancesConfiguration get_TargetConfiguration();
    public void set_TargetConfiguration(ReservedInstancesConfiguration value);
    internal bool IsSetTargetConfiguration();
}
public class Amazon.EC2.Model.ReservedInstancesOffering : object {
    private string _availabilityZone;
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<long> _duration;
    private Nullable`1<float> _fixedPrice;
    private Tenancy _instanceTenancy;
    private InstanceType _instanceType;
    private Nullable`1<bool> _marketplace;
    private OfferingClassType _offeringClass;
    private OfferingTypeValues _offeringType;
    private List`1<PricingDetail> _pricingDetails;
    private RIProductDescription _productDescription;
    private List`1<RecurringCharge> _recurringCharges;
    private string _reservedInstancesOfferingId;
    private Scope _scope;
    private Nullable`1<float> _usagePrice;
    public string AvailabilityZone { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public Nullable`1<long> Duration { get; public set; }
    public Nullable`1<float> FixedPrice { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public Nullable`1<bool> Marketplace { get; public set; }
    public OfferingClassType OfferingClass { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public List`1<PricingDetail> PricingDetails { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public List`1<RecurringCharge> RecurringCharges { get; public set; }
    public string ReservedInstancesOfferingId { get; public set; }
    public Scope Scope { get; public set; }
    public Nullable`1<float> UsagePrice { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public Nullable`1<long> get_Duration();
    public void set_Duration(Nullable`1<long> value);
    internal bool IsSetDuration();
    public Nullable`1<float> get_FixedPrice();
    public void set_FixedPrice(Nullable`1<float> value);
    internal bool IsSetFixedPrice();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public Nullable`1<bool> get_Marketplace();
    public void set_Marketplace(Nullable`1<bool> value);
    internal bool IsSetMarketplace();
    public OfferingClassType get_OfferingClass();
    public void set_OfferingClass(OfferingClassType value);
    internal bool IsSetOfferingClass();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public List`1<PricingDetail> get_PricingDetails();
    public void set_PricingDetails(List`1<PricingDetail> value);
    internal bool IsSetPricingDetails();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public List`1<RecurringCharge> get_RecurringCharges();
    public void set_RecurringCharges(List`1<RecurringCharge> value);
    internal bool IsSetRecurringCharges();
    public string get_ReservedInstancesOfferingId();
    public void set_ReservedInstancesOfferingId(string value);
    internal bool IsSetReservedInstancesOfferingId();
    public Scope get_Scope();
    public void set_Scope(Scope value);
    internal bool IsSetScope();
    public Nullable`1<float> get_UsagePrice();
    public void set_UsagePrice(Nullable`1<float> value);
    internal bool IsSetUsagePrice();
}
public class Amazon.EC2.Model.ResetAddressAttributeRequest : AmazonEC2Request {
    private string _allocationId;
    private AddressAttributeName _attribute;
    [AWSPropertyAttribute]
public string AllocationId { get; public set; }
    [AWSPropertyAttribute]
public AddressAttributeName Attribute { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public AddressAttributeName get_Attribute();
    public void set_Attribute(AddressAttributeName value);
    internal bool IsSetAttribute();
}
public class Amazon.EC2.Model.ResetAddressAttributeResponse : AmazonWebServiceResponse {
    private AddressAttribute _address;
    public AddressAttribute Address { get; public set; }
    public AddressAttribute get_Address();
    public void set_Address(AddressAttribute value);
    internal bool IsSetAddress();
}
public class Amazon.EC2.Model.ResetEbsDefaultKmsKeyIdRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.ResetEbsDefaultKmsKeyIdResponse : AmazonWebServiceResponse {
    private string _kmsKeyId;
    public string KmsKeyId { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
}
public class Amazon.EC2.Model.ResetFpgaImageAttributeRequest : AmazonEC2Request {
    private ResetFpgaImageAttributeName _attribute;
    private string _fpgaImageId;
    public ResetFpgaImageAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string FpgaImageId { get; public set; }
    public ResetFpgaImageAttributeName get_Attribute();
    public void set_Attribute(ResetFpgaImageAttributeName value);
    internal bool IsSetAttribute();
    public string get_FpgaImageId();
    public void set_FpgaImageId(string value);
    internal bool IsSetFpgaImageId();
}
public class Amazon.EC2.Model.ResetFpgaImageAttributeResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ResetImageAttributeRequest : AmazonEC2Request {
    private ResetImageAttributeName _attribute;
    private string _imageId;
    [AWSPropertyAttribute]
public ResetImageAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute);
    public ResetImageAttributeName get_Attribute();
    public void set_Attribute(ResetImageAttributeName value);
    internal bool IsSetAttribute();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.ResetImageAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ResetInstanceAttributeRequest : AmazonEC2Request {
    private InstanceAttributeName _attribute;
    private string _instanceId;
    [AWSPropertyAttribute]
public InstanceAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public ResetInstanceAttributeRequest(string instanceId, InstanceAttributeName attribute);
    public InstanceAttributeName get_Attribute();
    public void set_Attribute(InstanceAttributeName value);
    internal bool IsSetAttribute();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.ResetInstanceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest : AmazonEC2Request {
    private string _networkInterfaceId;
    private string _sourceDestCheck;
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public string SourceDestCheck { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_SourceDestCheck();
    public void set_SourceDestCheck(string value);
    internal bool IsSetSourceDestCheck();
}
public class Amazon.EC2.Model.ResetNetworkInterfaceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ResetSnapshotAttributeRequest : AmazonEC2Request {
    private SnapshotAttributeName _attribute;
    private string _snapshotId;
    [AWSPropertyAttribute]
public SnapshotAttributeName Attribute { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public ResetSnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute);
    public SnapshotAttributeName get_Attribute();
    public void set_Attribute(SnapshotAttributeName value);
    internal bool IsSetAttribute();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.ResetSnapshotAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ResourceStatement : object {
    private List`1<string> _resources;
    private List`1<string> _resourceTypes;
    public List`1<string> Resources { get; public set; }
    public List`1<string> ResourceTypes { get; public set; }
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
    public List`1<string> get_ResourceTypes();
    public void set_ResourceTypes(List`1<string> value);
    internal bool IsSetResourceTypes();
}
public class Amazon.EC2.Model.ResourceStatementRequest : object {
    private List`1<string> _resources;
    private List`1<string> _resourceTypes;
    public List`1<string> Resources { get; public set; }
    public List`1<string> ResourceTypes { get; public set; }
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
    public List`1<string> get_ResourceTypes();
    public void set_ResourceTypes(List`1<string> value);
    internal bool IsSetResourceTypes();
}
public class Amazon.EC2.Model.ResponseError : object {
    private LaunchTemplateErrorCode _code;
    private string _message;
    public LaunchTemplateErrorCode Code { get; public set; }
    public string Message { get; public set; }
    public LaunchTemplateErrorCode get_Code();
    public void set_Code(LaunchTemplateErrorCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.ResponseLaunchTemplateData : object {
    private List`1<LaunchTemplateBlockDeviceMapping> _blockDeviceMappings;
    private LaunchTemplateCapacityReservationSpecificationResponse _capacityReservationSpecification;
    private LaunchTemplateCpuOptions _cpuOptions;
    private CreditSpecification _creditSpecification;
    private Nullable`1<bool> _disableApiStop;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private List`1<ElasticGpuSpecificationResponse> _elasticGpuSpecifications;
    private List`1<LaunchTemplateElasticInferenceAcceleratorResponse> _elasticInferenceAccelerators;
    private LaunchTemplateEnclaveOptions _enclaveOptions;
    private LaunchTemplateHibernationOptions _hibernationOptions;
    private LaunchTemplateIamInstanceProfileSpecification _iamInstanceProfile;
    private string _imageId;
    private ShutdownBehavior _instanceInitiatedShutdownBehavior;
    private LaunchTemplateInstanceMarketOptions _instanceMarketOptions;
    private InstanceRequirements _instanceRequirements;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private List`1<LaunchTemplateLicenseConfiguration> _licenseSpecifications;
    private LaunchTemplateInstanceMaintenanceOptions _maintenanceOptions;
    private LaunchTemplateInstanceMetadataOptions _metadataOptions;
    private LaunchTemplatesMonitoring _monitoring;
    private List`1<LaunchTemplateInstanceNetworkInterfaceSpecification> _networkInterfaces;
    private LaunchTemplatePlacement _placement;
    private LaunchTemplatePrivateDnsNameOptions _privateDnsNameOptions;
    private string _ramDiskId;
    private List`1<string> _securityGroupIds;
    private List`1<string> _securityGroups;
    private List`1<LaunchTemplateTagSpecification> _tagSpecifications;
    private string _userData;
    public List`1<LaunchTemplateBlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public LaunchTemplateCapacityReservationSpecificationResponse CapacityReservationSpecification { get; public set; }
    public LaunchTemplateCpuOptions CpuOptions { get; public set; }
    public CreditSpecification CreditSpecification { get; public set; }
    public Nullable`1<bool> DisableApiStop { get; public set; }
    public Nullable`1<bool> DisableApiTermination { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public List`1<ElasticGpuSpecificationResponse> ElasticGpuSpecifications { get; public set; }
    public List`1<LaunchTemplateElasticInferenceAcceleratorResponse> ElasticInferenceAccelerators { get; public set; }
    public LaunchTemplateEnclaveOptions EnclaveOptions { get; public set; }
    public LaunchTemplateHibernationOptions HibernationOptions { get; public set; }
    public LaunchTemplateIamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public ShutdownBehavior InstanceInitiatedShutdownBehavior { get; public set; }
    public LaunchTemplateInstanceMarketOptions InstanceMarketOptions { get; public set; }
    public InstanceRequirements InstanceRequirements { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public List`1<LaunchTemplateLicenseConfiguration> LicenseSpecifications { get; public set; }
    public LaunchTemplateInstanceMaintenanceOptions MaintenanceOptions { get; public set; }
    public LaunchTemplateInstanceMetadataOptions MetadataOptions { get; public set; }
    public LaunchTemplatesMonitoring Monitoring { get; public set; }
    public List`1<LaunchTemplateInstanceNetworkInterfaceSpecification> NetworkInterfaces { get; public set; }
    public LaunchTemplatePlacement Placement { get; public set; }
    public LaunchTemplatePrivateDnsNameOptions PrivateDnsNameOptions { get; public set; }
    public string RamDiskId { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public List`1<LaunchTemplateTagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string UserData { get; public set; }
    public List`1<LaunchTemplateBlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<LaunchTemplateBlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public LaunchTemplateCapacityReservationSpecificationResponse get_CapacityReservationSpecification();
    public void set_CapacityReservationSpecification(LaunchTemplateCapacityReservationSpecificationResponse value);
    internal bool IsSetCapacityReservationSpecification();
    public LaunchTemplateCpuOptions get_CpuOptions();
    public void set_CpuOptions(LaunchTemplateCpuOptions value);
    internal bool IsSetCpuOptions();
    public CreditSpecification get_CreditSpecification();
    public void set_CreditSpecification(CreditSpecification value);
    internal bool IsSetCreditSpecification();
    public Nullable`1<bool> get_DisableApiStop();
    public void set_DisableApiStop(Nullable`1<bool> value);
    internal bool IsSetDisableApiStop();
    public Nullable`1<bool> get_DisableApiTermination();
    public void set_DisableApiTermination(Nullable`1<bool> value);
    internal bool IsSetDisableApiTermination();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public List`1<ElasticGpuSpecificationResponse> get_ElasticGpuSpecifications();
    public void set_ElasticGpuSpecifications(List`1<ElasticGpuSpecificationResponse> value);
    internal bool IsSetElasticGpuSpecifications();
    public List`1<LaunchTemplateElasticInferenceAcceleratorResponse> get_ElasticInferenceAccelerators();
    public void set_ElasticInferenceAccelerators(List`1<LaunchTemplateElasticInferenceAcceleratorResponse> value);
    internal bool IsSetElasticInferenceAccelerators();
    public LaunchTemplateEnclaveOptions get_EnclaveOptions();
    public void set_EnclaveOptions(LaunchTemplateEnclaveOptions value);
    internal bool IsSetEnclaveOptions();
    public LaunchTemplateHibernationOptions get_HibernationOptions();
    public void set_HibernationOptions(LaunchTemplateHibernationOptions value);
    internal bool IsSetHibernationOptions();
    public LaunchTemplateIamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(LaunchTemplateIamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public ShutdownBehavior get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(ShutdownBehavior value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public LaunchTemplateInstanceMarketOptions get_InstanceMarketOptions();
    public void set_InstanceMarketOptions(LaunchTemplateInstanceMarketOptions value);
    internal bool IsSetInstanceMarketOptions();
    public InstanceRequirements get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirements value);
    internal bool IsSetInstanceRequirements();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public List`1<LaunchTemplateLicenseConfiguration> get_LicenseSpecifications();
    public void set_LicenseSpecifications(List`1<LaunchTemplateLicenseConfiguration> value);
    internal bool IsSetLicenseSpecifications();
    public LaunchTemplateInstanceMaintenanceOptions get_MaintenanceOptions();
    public void set_MaintenanceOptions(LaunchTemplateInstanceMaintenanceOptions value);
    internal bool IsSetMaintenanceOptions();
    public LaunchTemplateInstanceMetadataOptions get_MetadataOptions();
    public void set_MetadataOptions(LaunchTemplateInstanceMetadataOptions value);
    internal bool IsSetMetadataOptions();
    public LaunchTemplatesMonitoring get_Monitoring();
    public void set_Monitoring(LaunchTemplatesMonitoring value);
    internal bool IsSetMonitoring();
    public List`1<LaunchTemplateInstanceNetworkInterfaceSpecification> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<LaunchTemplateInstanceNetworkInterfaceSpecification> value);
    internal bool IsSetNetworkInterfaces();
    public LaunchTemplatePlacement get_Placement();
    public void set_Placement(LaunchTemplatePlacement value);
    internal bool IsSetPlacement();
    public LaunchTemplatePrivateDnsNameOptions get_PrivateDnsNameOptions();
    public void set_PrivateDnsNameOptions(LaunchTemplatePrivateDnsNameOptions value);
    internal bool IsSetPrivateDnsNameOptions();
    public string get_RamDiskId();
    public void set_RamDiskId(string value);
    internal bool IsSetRamDiskId();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public List`1<LaunchTemplateTagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<LaunchTemplateTagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.RestoreAddressToClassicRequest : AmazonEC2Request {
    private string _publicIp;
    [AWSPropertyAttribute]
public string PublicIp { get; public set; }
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.RestoreAddressToClassicResponse : AmazonWebServiceResponse {
    private string _publicIp;
    private Status _status;
    public string PublicIp { get; public set; }
    public Status Status { get; public set; }
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public Status get_Status();
    public void set_Status(Status value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.RestoreImageFromRecycleBinRequest : AmazonEC2Request {
    private string _imageId;
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.RestoreImageFromRecycleBinResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.RestoreManagedPrefixListVersionRequest : AmazonEC2Request {
    private Nullable`1<long> _currentVersion;
    private string _prefixListId;
    private Nullable`1<long> _previousVersion;
    [AWSPropertyAttribute]
public Nullable`1<long> CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public string PrefixListId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> PreviousVersion { get; public set; }
    public Nullable`1<long> get_CurrentVersion();
    public void set_CurrentVersion(Nullable`1<long> value);
    internal bool IsSetCurrentVersion();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public Nullable`1<long> get_PreviousVersion();
    public void set_PreviousVersion(Nullable`1<long> value);
    internal bool IsSetPreviousVersion();
}
public class Amazon.EC2.Model.RestoreManagedPrefixListVersionResponse : AmazonWebServiceResponse {
    private ManagedPrefixList _prefixList;
    public ManagedPrefixList PrefixList { get; public set; }
    public ManagedPrefixList get_PrefixList();
    public void set_PrefixList(ManagedPrefixList value);
    internal bool IsSetPrefixList();
}
public class Amazon.EC2.Model.RestoreSnapshotFromRecycleBinRequest : AmazonEC2Request {
    private string _snapshotId;
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.RestoreSnapshotFromRecycleBinResponse : AmazonWebServiceResponse {
    private string _description;
    private Nullable`1<bool> _encrypted;
    private string _outpostArn;
    private string _ownerId;
    private string _progress;
    private string _snapshotId;
    private SSEType _sseType;
    private Nullable`1<DateTime> _startTime;
    private SnapshotState _state;
    private string _volumeId;
    private Nullable`1<int> _volumeSize;
    public string Description { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public string Progress { get; public set; }
    public string SnapshotId { get; public set; }
    public SSEType SseType { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public SnapshotState State { get; public set; }
    public string VolumeId { get; public set; }
    public Nullable`1<int> VolumeSize { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public SSEType get_SseType();
    public void set_SseType(SSEType value);
    internal bool IsSetSseType();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public SnapshotState get_State();
    public void set_State(SnapshotState value);
    internal bool IsSetState();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
}
public class Amazon.EC2.Model.RestoreSnapshotTierRequest : AmazonEC2Request {
    private Nullable`1<bool> _permanentRestore;
    private string _snapshotId;
    private Nullable`1<int> _temporaryRestoreDays;
    public Nullable`1<bool> PermanentRestore { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public Nullable`1<int> TemporaryRestoreDays { get; public set; }
    public Nullable`1<bool> get_PermanentRestore();
    public void set_PermanentRestore(Nullable`1<bool> value);
    internal bool IsSetPermanentRestore();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public Nullable`1<int> get_TemporaryRestoreDays();
    public void set_TemporaryRestoreDays(Nullable`1<int> value);
    internal bool IsSetTemporaryRestoreDays();
}
public class Amazon.EC2.Model.RestoreSnapshotTierResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _isPermanentRestore;
    private Nullable`1<int> _restoreDuration;
    private Nullable`1<DateTime> _restoreStartTime;
    private string _snapshotId;
    public Nullable`1<bool> IsPermanentRestore { get; public set; }
    public Nullable`1<int> RestoreDuration { get; public set; }
    public Nullable`1<DateTime> RestoreStartTime { get; public set; }
    public string SnapshotId { get; public set; }
    public Nullable`1<bool> get_IsPermanentRestore();
    public void set_IsPermanentRestore(Nullable`1<bool> value);
    internal bool IsSetIsPermanentRestore();
    public Nullable`1<int> get_RestoreDuration();
    public void set_RestoreDuration(Nullable`1<int> value);
    internal bool IsSetRestoreDuration();
    public Nullable`1<DateTime> get_RestoreStartTime();
    public void set_RestoreStartTime(Nullable`1<DateTime> value);
    internal bool IsSetRestoreStartTime();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.RevokeClientVpnIngressRequest : AmazonEC2Request {
    private string _accessGroupId;
    private string _clientVpnEndpointId;
    private Nullable`1<bool> _revokeAllGroups;
    private string _targetNetworkCidr;
    public string AccessGroupId { get; public set; }
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public Nullable`1<bool> RevokeAllGroups { get; public set; }
    [AWSPropertyAttribute]
public string TargetNetworkCidr { get; public set; }
    public string get_AccessGroupId();
    public void set_AccessGroupId(string value);
    internal bool IsSetAccessGroupId();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public Nullable`1<bool> get_RevokeAllGroups();
    public void set_RevokeAllGroups(Nullable`1<bool> value);
    internal bool IsSetRevokeAllGroups();
    public string get_TargetNetworkCidr();
    public void set_TargetNetworkCidr(string value);
    internal bool IsSetTargetNetworkCidr();
}
public class Amazon.EC2.Model.RevokeClientVpnIngressResponse : AmazonWebServiceResponse {
    private ClientVpnAuthorizationRuleStatus _status;
    public ClientVpnAuthorizationRuleStatus Status { get; public set; }
    public ClientVpnAuthorizationRuleStatus get_Status();
    public void set_Status(ClientVpnAuthorizationRuleStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.RevokeSecurityGroupEgressRequest : AmazonEC2Request {
    private string _groupId;
    private List`1<IpPermission> _ipPermissions;
    private List`1<string> _securityGroupRuleIds;
    [AWSPropertyAttribute]
public string GroupId { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<string> SecurityGroupRuleIds { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<string> get_SecurityGroupRuleIds();
    public void set_SecurityGroupRuleIds(List`1<string> value);
    internal bool IsSetSecurityGroupRuleIds();
}
public class Amazon.EC2.Model.RevokeSecurityGroupEgressResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    private List`1<IpPermission> _unknownIpPermissions;
    public Nullable`1<bool> Return { get; public set; }
    public List`1<IpPermission> UnknownIpPermissions { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
    public List`1<IpPermission> get_UnknownIpPermissions();
    public void set_UnknownIpPermissions(List`1<IpPermission> value);
    internal bool IsSetUnknownIpPermissions();
}
public class Amazon.EC2.Model.RevokeSecurityGroupIngressRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    private List`1<string> _securityGroupRuleIds;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<string> SecurityGroupRuleIds { get; public set; }
    public RevokeSecurityGroupIngressRequest(string groupName, List`1<IpPermission> ipPermissions);
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<string> get_SecurityGroupRuleIds();
    public void set_SecurityGroupRuleIds(List`1<string> value);
    internal bool IsSetSecurityGroupRuleIds();
}
public class Amazon.EC2.Model.RevokeSecurityGroupIngressResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    private List`1<IpPermission> _unknownIpPermissions;
    public Nullable`1<bool> Return { get; public set; }
    public List`1<IpPermission> UnknownIpPermissions { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
    public List`1<IpPermission> get_UnknownIpPermissions();
    public void set_UnknownIpPermissions(List`1<IpPermission> value);
    internal bool IsSetUnknownIpPermissions();
}
public class Amazon.EC2.Model.Route : object {
    private string _carrierGatewayId;
    private string _coreNetworkArn;
    private string _destinationCidrBlock;
    private string _destinationIpv6CidrBlock;
    private string _destinationPrefixListId;
    private string _egressOnlyInternetGatewayId;
    private string _gatewayId;
    private string _instanceId;
    private string _instanceOwnerId;
    private string _localGatewayId;
    private string _natGatewayId;
    private string _networkInterfaceId;
    private RouteOrigin _origin;
    private RouteState _state;
    private string _transitGatewayId;
    private string _vpcPeeringConnectionId;
    public string CarrierGatewayId { get; public set; }
    public string CoreNetworkArn { get; public set; }
    public string DestinationCidrBlock { get; public set; }
    public string DestinationIpv6CidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    public string EgressOnlyInternetGatewayId { get; public set; }
    public string GatewayId { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceOwnerId { get; public set; }
    public string LocalGatewayId { get; public set; }
    public string NatGatewayId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public RouteOrigin Origin { get; public set; }
    public RouteState State { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_CarrierGatewayId();
    public void set_CarrierGatewayId(string value);
    internal bool IsSetCarrierGatewayId();
    public string get_CoreNetworkArn();
    public void set_CoreNetworkArn(string value);
    internal bool IsSetCoreNetworkArn();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationIpv6CidrBlock();
    public void set_DestinationIpv6CidrBlock(string value);
    internal bool IsSetDestinationIpv6CidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_EgressOnlyInternetGatewayId();
    public void set_EgressOnlyInternetGatewayId(string value);
    internal bool IsSetEgressOnlyInternetGatewayId();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceOwnerId();
    public void set_InstanceOwnerId(string value);
    internal bool IsSetInstanceOwnerId();
    public string get_LocalGatewayId();
    public void set_LocalGatewayId(string value);
    internal bool IsSetLocalGatewayId();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public RouteOrigin get_Origin();
    public void set_Origin(RouteOrigin value);
    internal bool IsSetOrigin();
    public RouteState get_State();
    public void set_State(RouteState value);
    internal bool IsSetState();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.RouteTable : object {
    private List`1<RouteTableAssociation> _associations;
    private string _ownerId;
    private List`1<PropagatingVgw> _propagatingVgws;
    private List`1<Route> _routes;
    private string _routeTableId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public List`1<RouteTableAssociation> Associations { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<PropagatingVgw> PropagatingVgws { get; public set; }
    public List`1<Route> Routes { get; public set; }
    public string RouteTableId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public List`1<RouteTableAssociation> get_Associations();
    public void set_Associations(List`1<RouteTableAssociation> value);
    internal bool IsSetAssociations();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<PropagatingVgw> get_PropagatingVgws();
    public void set_PropagatingVgws(List`1<PropagatingVgw> value);
    internal bool IsSetPropagatingVgws();
    public List`1<Route> get_Routes();
    public void set_Routes(List`1<Route> value);
    internal bool IsSetRoutes();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.RouteTableAssociation : object {
    private RouteTableAssociationState _associationState;
    private string _gatewayId;
    private Nullable`1<bool> _main;
    private string _routeTableAssociationId;
    private string _routeTableId;
    private string _subnetId;
    public RouteTableAssociationState AssociationState { get; public set; }
    public string GatewayId { get; public set; }
    public Nullable`1<bool> Main { get; public set; }
    public string RouteTableAssociationId { get; public set; }
    public string RouteTableId { get; public set; }
    public string SubnetId { get; public set; }
    public RouteTableAssociationState get_AssociationState();
    public void set_AssociationState(RouteTableAssociationState value);
    internal bool IsSetAssociationState();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public Nullable`1<bool> get_Main();
    public void set_Main(Nullable`1<bool> value);
    internal bool IsSetMain();
    public string get_RouteTableAssociationId();
    public void set_RouteTableAssociationId(string value);
    internal bool IsSetRouteTableAssociationId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.RouteTableAssociationState : object {
    private RouteTableAssociationStateCode _state;
    private string _statusMessage;
    public RouteTableAssociationStateCode State { get; public set; }
    public string StatusMessage { get; public set; }
    public RouteTableAssociationStateCode get_State();
    public void set_State(RouteTableAssociationStateCode value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.RuleGroupRuleOptionsPair : object {
    private string _ruleGroupArn;
    private List`1<RuleOption> _ruleOptions;
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    public List`1<RuleOption> RuleOptions { get; public set; }
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public List`1<RuleOption> get_RuleOptions();
    public void set_RuleOptions(List`1<RuleOption> value);
    internal bool IsSetRuleOptions();
}
public class Amazon.EC2.Model.RuleGroupTypePair : object {
    private string _ruleGroupArn;
    private string _ruleGroupType;
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    public string RuleGroupType { get; public set; }
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public string get_RuleGroupType();
    public void set_RuleGroupType(string value);
    internal bool IsSetRuleGroupType();
}
public class Amazon.EC2.Model.RuleOption : object {
    private string _keyword;
    private List`1<string> _settings;
    public string Keyword { get; public set; }
    public List`1<string> Settings { get; public set; }
    public string get_Keyword();
    public void set_Keyword(string value);
    internal bool IsSetKeyword();
    public List`1<string> get_Settings();
    public void set_Settings(List`1<string> value);
    internal bool IsSetSettings();
}
public class Amazon.EC2.Model.RunInstancesRequest : AmazonEC2Request {
    private string _additionalInfo;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private CapacityReservationSpecification _capacityReservationSpecification;
    private string _clientToken;
    private CpuOptionsRequest _cpuOptions;
    private CreditSpecificationRequest _creditSpecification;
    private Nullable`1<bool> _disableApiStop;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private List`1<ElasticGpuSpecification> _elasticGpuSpecification;
    private List`1<ElasticInferenceAccelerator> _elasticInferenceAccelerators;
    private Nullable`1<bool> _enablePrimaryIpv6;
    private EnclaveOptionsRequest _enclaveOptions;
    private HibernationOptionsRequest _hibernationOptions;
    private IamInstanceProfileSpecification _iamInstanceProfile;
    private string _imageId;
    private ShutdownBehavior _instanceInitiatedShutdownBehavior;
    private InstanceMarketOptionsRequest _instanceMarketOptions;
    private InstanceType _instanceType;
    private Nullable`1<int> _ipv6AddressCount;
    private List`1<InstanceIpv6Address> _ipv6Addresses;
    private string _kernelId;
    private string _keyName;
    private LaunchTemplateSpecification _launchTemplate;
    private List`1<LicenseConfigurationRequest> _licenseSpecifications;
    private InstanceMaintenanceOptionsRequest _maintenanceOptions;
    private Nullable`1<int> _maxCount;
    private InstanceMetadataOptionsRequest _metadataOptions;
    private Nullable`1<int> _minCount;
    private Nullable`1<bool> _monitoring;
    private List`1<InstanceNetworkInterfaceSpecification> _networkInterfaces;
    private Placement _placement;
    private PrivateDnsNameOptionsRequest _privateDnsNameOptions;
    private string _privateIpAddress;
    private string _ramdiskId;
    private List`1<string> _securityGroupIds;
    private List`1<string> _securityGroups;
    private string _subnetId;
    private List`1<TagSpecification> _tagSpecifications;
    private string _userData;
    public string AdditionalInfo { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public CapacityReservationSpecification CapacityReservationSpecification { get; public set; }
    public string ClientToken { get; public set; }
    public CpuOptionsRequest CpuOptions { get; public set; }
    public CreditSpecificationRequest CreditSpecification { get; public set; }
    public Nullable`1<bool> DisableApiStop { get; public set; }
    public Nullable`1<bool> DisableApiTermination { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public List`1<ElasticGpuSpecification> ElasticGpuSpecification { get; public set; }
    public List`1<ElasticInferenceAccelerator> ElasticInferenceAccelerators { get; public set; }
    public Nullable`1<bool> EnablePrimaryIpv6 { get; public set; }
    public EnclaveOptionsRequest EnclaveOptions { get; public set; }
    public HibernationOptionsRequest HibernationOptions { get; public set; }
    public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public ShutdownBehavior InstanceInitiatedShutdownBehavior { get; public set; }
    public InstanceMarketOptionsRequest InstanceMarketOptions { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public Nullable`1<int> Ipv6AddressCount { get; public set; }
    public List`1<InstanceIpv6Address> Ipv6Addresses { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public LaunchTemplateSpecification LaunchTemplate { get; public set; }
    public List`1<LicenseConfigurationRequest> LicenseSpecifications { get; public set; }
    public InstanceMaintenanceOptionsRequest MaintenanceOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxCount { get; public set; }
    public InstanceMetadataOptionsRequest MetadataOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MinCount { get; public set; }
    public Nullable`1<bool> Monitoring { get; public set; }
    public List`1<InstanceNetworkInterfaceSpecification> NetworkInterfaces { get; public set; }
    public Placement Placement { get; public set; }
    public PrivateDnsNameOptionsRequest PrivateDnsNameOptions { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string UserData { get; public set; }
    public RunInstancesRequest(string imageId, Nullable`1<int> minCount, Nullable`1<int> maxCount);
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public CapacityReservationSpecification get_CapacityReservationSpecification();
    public void set_CapacityReservationSpecification(CapacityReservationSpecification value);
    internal bool IsSetCapacityReservationSpecification();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public CpuOptionsRequest get_CpuOptions();
    public void set_CpuOptions(CpuOptionsRequest value);
    internal bool IsSetCpuOptions();
    public CreditSpecificationRequest get_CreditSpecification();
    public void set_CreditSpecification(CreditSpecificationRequest value);
    internal bool IsSetCreditSpecification();
    public Nullable`1<bool> get_DisableApiStop();
    public void set_DisableApiStop(Nullable`1<bool> value);
    internal bool IsSetDisableApiStop();
    public Nullable`1<bool> get_DisableApiTermination();
    public void set_DisableApiTermination(Nullable`1<bool> value);
    internal bool IsSetDisableApiTermination();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public List`1<ElasticGpuSpecification> get_ElasticGpuSpecification();
    public void set_ElasticGpuSpecification(List`1<ElasticGpuSpecification> value);
    internal bool IsSetElasticGpuSpecification();
    public List`1<ElasticInferenceAccelerator> get_ElasticInferenceAccelerators();
    public void set_ElasticInferenceAccelerators(List`1<ElasticInferenceAccelerator> value);
    internal bool IsSetElasticInferenceAccelerators();
    public Nullable`1<bool> get_EnablePrimaryIpv6();
    public void set_EnablePrimaryIpv6(Nullable`1<bool> value);
    internal bool IsSetEnablePrimaryIpv6();
    public EnclaveOptionsRequest get_EnclaveOptions();
    public void set_EnclaveOptions(EnclaveOptionsRequest value);
    internal bool IsSetEnclaveOptions();
    public HibernationOptionsRequest get_HibernationOptions();
    public void set_HibernationOptions(HibernationOptionsRequest value);
    internal bool IsSetHibernationOptions();
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public ShutdownBehavior get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(ShutdownBehavior value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public InstanceMarketOptionsRequest get_InstanceMarketOptions();
    public void set_InstanceMarketOptions(InstanceMarketOptionsRequest value);
    internal bool IsSetInstanceMarketOptions();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public Nullable`1<int> get_Ipv6AddressCount();
    public void set_Ipv6AddressCount(Nullable`1<int> value);
    internal bool IsSetIpv6AddressCount();
    public List`1<InstanceIpv6Address> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<InstanceIpv6Address> value);
    internal bool IsSetIpv6Addresses();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public LaunchTemplateSpecification get_LaunchTemplate();
    public void set_LaunchTemplate(LaunchTemplateSpecification value);
    internal bool IsSetLaunchTemplate();
    public List`1<LicenseConfigurationRequest> get_LicenseSpecifications();
    public void set_LicenseSpecifications(List`1<LicenseConfigurationRequest> value);
    internal bool IsSetLicenseSpecifications();
    public InstanceMaintenanceOptionsRequest get_MaintenanceOptions();
    public void set_MaintenanceOptions(InstanceMaintenanceOptionsRequest value);
    internal bool IsSetMaintenanceOptions();
    public Nullable`1<int> get_MaxCount();
    public void set_MaxCount(Nullable`1<int> value);
    internal bool IsSetMaxCount();
    public InstanceMetadataOptionsRequest get_MetadataOptions();
    public void set_MetadataOptions(InstanceMetadataOptionsRequest value);
    internal bool IsSetMetadataOptions();
    public Nullable`1<int> get_MinCount();
    public void set_MinCount(Nullable`1<int> value);
    internal bool IsSetMinCount();
    public Nullable`1<bool> get_Monitoring();
    public void set_Monitoring(Nullable`1<bool> value);
    internal bool IsSetMonitoring();
    public List`1<InstanceNetworkInterfaceSpecification> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterfaceSpecification> value);
    internal bool IsSetNetworkInterfaces();
    public Placement get_Placement();
    public void set_Placement(Placement value);
    internal bool IsSetPlacement();
    public PrivateDnsNameOptionsRequest get_PrivateDnsNameOptions();
    public void set_PrivateDnsNameOptions(PrivateDnsNameOptionsRequest value);
    internal bool IsSetPrivateDnsNameOptions();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.RunInstancesResponse : AmazonWebServiceResponse {
    private Reservation _reservation;
    public Reservation Reservation { get; public set; }
    public Reservation get_Reservation();
    public void set_Reservation(Reservation value);
    internal bool IsSetReservation();
}
public class Amazon.EC2.Model.RunScheduledInstancesRequest : AmazonEC2Request {
    private string _clientToken;
    private Nullable`1<int> _instanceCount;
    private ScheduledInstancesLaunchSpecification _launchSpecification;
    private string _scheduledInstanceId;
    public string ClientToken { get; public set; }
    public Nullable`1<int> InstanceCount { get; public set; }
    [AWSPropertyAttribute]
public ScheduledInstancesLaunchSpecification LaunchSpecification { get; public set; }
    [AWSPropertyAttribute]
public string ScheduledInstanceId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public ScheduledInstancesLaunchSpecification get_LaunchSpecification();
    public void set_LaunchSpecification(ScheduledInstancesLaunchSpecification value);
    internal bool IsSetLaunchSpecification();
    public string get_ScheduledInstanceId();
    public void set_ScheduledInstanceId(string value);
    internal bool IsSetScheduledInstanceId();
}
public class Amazon.EC2.Model.RunScheduledInstancesResponse : AmazonWebServiceResponse {
    private List`1<string> _instanceIdSet;
    public List`1<string> InstanceIdSet { get; public set; }
    public List`1<string> get_InstanceIdSet();
    public void set_InstanceIdSet(List`1<string> value);
    internal bool IsSetInstanceIdSet();
}
public class Amazon.EC2.Model.S3ObjectTag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.S3Storage : object {
    private string _awsAccessKeyId;
    private string _bucket;
    private string _prefix;
    private string _uploadPolicy;
    private string _uploadPolicySignature;
    public string AWSAccessKeyId { get; public set; }
    public string Bucket { get; public set; }
    public string Prefix { get; public set; }
    public string UploadPolicy { get; public set; }
    [AWSPropertyAttribute]
public string UploadPolicySignature { get; public set; }
    public string get_AWSAccessKeyId();
    public void set_AWSAccessKeyId(string value);
    internal bool IsSetAWSAccessKeyId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_UploadPolicy();
    public void set_UploadPolicy(string value);
    internal bool IsSetUploadPolicy();
    public string get_UploadPolicySignature();
    public void set_UploadPolicySignature(string value);
    internal bool IsSetUploadPolicySignature();
}
public class Amazon.EC2.Model.ScheduledInstance : object {
    private string _availabilityZone;
    private Nullable`1<DateTime> _createDate;
    private string _hourlyPrice;
    private Nullable`1<int> _instanceCount;
    private string _instanceType;
    private string _networkPlatform;
    private Nullable`1<DateTime> _nextSlotStartTime;
    private string _platform;
    private Nullable`1<DateTime> _previousSlotEndTime;
    private ScheduledInstanceRecurrence _recurrence;
    private string _scheduledInstanceId;
    private Nullable`1<int> _slotDurationInHours;
    private Nullable`1<DateTime> _termEndDate;
    private Nullable`1<DateTime> _termStartDate;
    private Nullable`1<int> _totalScheduledInstanceHours;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> CreateDate { get; public set; }
    public string HourlyPrice { get; public set; }
    public Nullable`1<int> InstanceCount { get; public set; }
    public string InstanceType { get; public set; }
    public string NetworkPlatform { get; public set; }
    public Nullable`1<DateTime> NextSlotStartTime { get; public set; }
    public string Platform { get; public set; }
    public Nullable`1<DateTime> PreviousSlotEndTime { get; public set; }
    public ScheduledInstanceRecurrence Recurrence { get; public set; }
    public string ScheduledInstanceId { get; public set; }
    public Nullable`1<int> SlotDurationInHours { get; public set; }
    public Nullable`1<DateTime> TermEndDate { get; public set; }
    public Nullable`1<DateTime> TermStartDate { get; public set; }
    public Nullable`1<int> TotalScheduledInstanceHours { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_CreateDate();
    public void set_CreateDate(Nullable`1<DateTime> value);
    internal bool IsSetCreateDate();
    public string get_HourlyPrice();
    public void set_HourlyPrice(string value);
    internal bool IsSetHourlyPrice();
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_NetworkPlatform();
    public void set_NetworkPlatform(string value);
    internal bool IsSetNetworkPlatform();
    public Nullable`1<DateTime> get_NextSlotStartTime();
    public void set_NextSlotStartTime(Nullable`1<DateTime> value);
    internal bool IsSetNextSlotStartTime();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public Nullable`1<DateTime> get_PreviousSlotEndTime();
    public void set_PreviousSlotEndTime(Nullable`1<DateTime> value);
    internal bool IsSetPreviousSlotEndTime();
    public ScheduledInstanceRecurrence get_Recurrence();
    public void set_Recurrence(ScheduledInstanceRecurrence value);
    internal bool IsSetRecurrence();
    public string get_ScheduledInstanceId();
    public void set_ScheduledInstanceId(string value);
    internal bool IsSetScheduledInstanceId();
    public Nullable`1<int> get_SlotDurationInHours();
    public void set_SlotDurationInHours(Nullable`1<int> value);
    internal bool IsSetSlotDurationInHours();
    public Nullable`1<DateTime> get_TermEndDate();
    public void set_TermEndDate(Nullable`1<DateTime> value);
    internal bool IsSetTermEndDate();
    public Nullable`1<DateTime> get_TermStartDate();
    public void set_TermStartDate(Nullable`1<DateTime> value);
    internal bool IsSetTermStartDate();
    public Nullable`1<int> get_TotalScheduledInstanceHours();
    public void set_TotalScheduledInstanceHours(Nullable`1<int> value);
    internal bool IsSetTotalScheduledInstanceHours();
}
public class Amazon.EC2.Model.ScheduledInstanceAvailability : object {
    private string _availabilityZone;
    private Nullable`1<int> _availableInstanceCount;
    private Nullable`1<DateTime> _firstSlotStartTime;
    private string _hourlyPrice;
    private string _instanceType;
    private Nullable`1<int> _maxTermDurationInDays;
    private Nullable`1<int> _minTermDurationInDays;
    private string _networkPlatform;
    private string _platform;
    private string _purchaseToken;
    private ScheduledInstanceRecurrence _recurrence;
    private Nullable`1<int> _slotDurationInHours;
    private Nullable`1<int> _totalScheduledInstanceHours;
    public string AvailabilityZone { get; public set; }
    public Nullable`1<int> AvailableInstanceCount { get; public set; }
    public Nullable`1<DateTime> FirstSlotStartTime { get; public set; }
    public string HourlyPrice { get; public set; }
    public string InstanceType { get; public set; }
    public Nullable`1<int> MaxTermDurationInDays { get; public set; }
    public Nullable`1<int> MinTermDurationInDays { get; public set; }
    public string NetworkPlatform { get; public set; }
    public string Platform { get; public set; }
    public string PurchaseToken { get; public set; }
    public ScheduledInstanceRecurrence Recurrence { get; public set; }
    public Nullable`1<int> SlotDurationInHours { get; public set; }
    public Nullable`1<int> TotalScheduledInstanceHours { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<int> get_AvailableInstanceCount();
    public void set_AvailableInstanceCount(Nullable`1<int> value);
    internal bool IsSetAvailableInstanceCount();
    public Nullable`1<DateTime> get_FirstSlotStartTime();
    public void set_FirstSlotStartTime(Nullable`1<DateTime> value);
    internal bool IsSetFirstSlotStartTime();
    public string get_HourlyPrice();
    public void set_HourlyPrice(string value);
    internal bool IsSetHourlyPrice();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public Nullable`1<int> get_MaxTermDurationInDays();
    public void set_MaxTermDurationInDays(Nullable`1<int> value);
    internal bool IsSetMaxTermDurationInDays();
    public Nullable`1<int> get_MinTermDurationInDays();
    public void set_MinTermDurationInDays(Nullable`1<int> value);
    internal bool IsSetMinTermDurationInDays();
    public string get_NetworkPlatform();
    public void set_NetworkPlatform(string value);
    internal bool IsSetNetworkPlatform();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_PurchaseToken();
    public void set_PurchaseToken(string value);
    internal bool IsSetPurchaseToken();
    public ScheduledInstanceRecurrence get_Recurrence();
    public void set_Recurrence(ScheduledInstanceRecurrence value);
    internal bool IsSetRecurrence();
    public Nullable`1<int> get_SlotDurationInHours();
    public void set_SlotDurationInHours(Nullable`1<int> value);
    internal bool IsSetSlotDurationInHours();
    public Nullable`1<int> get_TotalScheduledInstanceHours();
    public void set_TotalScheduledInstanceHours(Nullable`1<int> value);
    internal bool IsSetTotalScheduledInstanceHours();
}
public class Amazon.EC2.Model.ScheduledInstanceRecurrence : object {
    private string _frequency;
    private Nullable`1<int> _interval;
    private List`1<int> _occurrenceDaySet;
    private Nullable`1<bool> _occurrenceRelativeToEnd;
    private string _occurrenceUnit;
    public string Frequency { get; public set; }
    public Nullable`1<int> Interval { get; public set; }
    public List`1<int> OccurrenceDaySet { get; public set; }
    public Nullable`1<bool> OccurrenceRelativeToEnd { get; public set; }
    public string OccurrenceUnit { get; public set; }
    public string get_Frequency();
    public void set_Frequency(string value);
    internal bool IsSetFrequency();
    public Nullable`1<int> get_Interval();
    public void set_Interval(Nullable`1<int> value);
    internal bool IsSetInterval();
    public List`1<int> get_OccurrenceDaySet();
    public void set_OccurrenceDaySet(List`1<int> value);
    internal bool IsSetOccurrenceDaySet();
    public Nullable`1<bool> get_OccurrenceRelativeToEnd();
    public void set_OccurrenceRelativeToEnd(Nullable`1<bool> value);
    internal bool IsSetOccurrenceRelativeToEnd();
    public string get_OccurrenceUnit();
    public void set_OccurrenceUnit(string value);
    internal bool IsSetOccurrenceUnit();
}
public class Amazon.EC2.Model.ScheduledInstanceRecurrenceRequest : object {
    private string _frequency;
    private Nullable`1<int> _interval;
    private List`1<int> _occurrenceDays;
    private Nullable`1<bool> _occurrenceRelativeToEnd;
    private string _occurrenceUnit;
    public string Frequency { get; public set; }
    public Nullable`1<int> Interval { get; public set; }
    public List`1<int> OccurrenceDays { get; public set; }
    public Nullable`1<bool> OccurrenceRelativeToEnd { get; public set; }
    public string OccurrenceUnit { get; public set; }
    public string get_Frequency();
    public void set_Frequency(string value);
    internal bool IsSetFrequency();
    public Nullable`1<int> get_Interval();
    public void set_Interval(Nullable`1<int> value);
    internal bool IsSetInterval();
    public List`1<int> get_OccurrenceDays();
    public void set_OccurrenceDays(List`1<int> value);
    internal bool IsSetOccurrenceDays();
    public Nullable`1<bool> get_OccurrenceRelativeToEnd();
    public void set_OccurrenceRelativeToEnd(Nullable`1<bool> value);
    internal bool IsSetOccurrenceRelativeToEnd();
    public string get_OccurrenceUnit();
    public void set_OccurrenceUnit(string value);
    internal bool IsSetOccurrenceUnit();
}
public class Amazon.EC2.Model.ScheduledInstancesBlockDeviceMapping : object {
    private string _deviceName;
    private ScheduledInstancesEbs _ebs;
    private string _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public ScheduledInstancesEbs Ebs { get; public set; }
    public string NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public ScheduledInstancesEbs get_Ebs();
    public void set_Ebs(ScheduledInstancesEbs value);
    internal bool IsSetEbs();
    public string get_NoDevice();
    public void set_NoDevice(string value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.EC2.Model.ScheduledInstancesEbs : object {
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _snapshotId;
    private Nullable`1<int> _volumeSize;
    private string _volumeType;
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string SnapshotId { get; public set; }
    public Nullable`1<int> VolumeSize { get; public set; }
    public string VolumeType { get; public set; }
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
    public string get_VolumeType();
    public void set_VolumeType(string value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.ScheduledInstancesIamInstanceProfile : object {
    private string _arn;
    private string _name;
    public string Arn { get; public set; }
    public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.ScheduledInstancesIpv6Address : object {
    private string _ipv6Address;
    public string Ipv6Address { get; public set; }
    public string get_Ipv6Address();
    public void set_Ipv6Address(string value);
    internal bool IsSetIpv6Address();
}
public class Amazon.EC2.Model.ScheduledInstancesLaunchSpecification : object {
    private List`1<ScheduledInstancesBlockDeviceMapping> _blockDeviceMappings;
    private Nullable`1<bool> _ebsOptimized;
    private ScheduledInstancesIamInstanceProfile _iamInstanceProfile;
    private string _imageId;
    private string _instanceType;
    private string _kernelId;
    private string _keyName;
    private ScheduledInstancesMonitoring _monitoring;
    private List`1<ScheduledInstancesNetworkInterface> _networkInterfaces;
    private ScheduledInstancesPlacement _placement;
    private string _ramdiskId;
    private List`1<string> _securityGroupIds;
    private string _subnetId;
    private string _userData;
    public List`1<ScheduledInstancesBlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public ScheduledInstancesIamInstanceProfile IamInstanceProfile { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    public string InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public ScheduledInstancesMonitoring Monitoring { get; public set; }
    public List`1<ScheduledInstancesNetworkInterface> NetworkInterfaces { get; public set; }
    public ScheduledInstancesPlacement Placement { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public string SubnetId { get; public set; }
    public string UserData { get; public set; }
    public List`1<ScheduledInstancesBlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<ScheduledInstancesBlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public ScheduledInstancesIamInstanceProfile get_IamInstanceProfile();
    public void set_IamInstanceProfile(ScheduledInstancesIamInstanceProfile value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public ScheduledInstancesMonitoring get_Monitoring();
    public void set_Monitoring(ScheduledInstancesMonitoring value);
    internal bool IsSetMonitoring();
    public List`1<ScheduledInstancesNetworkInterface> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<ScheduledInstancesNetworkInterface> value);
    internal bool IsSetNetworkInterfaces();
    public ScheduledInstancesPlacement get_Placement();
    public void set_Placement(ScheduledInstancesPlacement value);
    internal bool IsSetPlacement();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.ScheduledInstancesMonitoring : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.ScheduledInstancesNetworkInterface : object {
    private Nullable`1<bool> _associatePublicIpAddress;
    private Nullable`1<bool> _deleteOnTermination;
    private string _description;
    private Nullable`1<int> _deviceIndex;
    private List`1<string> _groups;
    private Nullable`1<int> _ipv6AddressCount;
    private List`1<ScheduledInstancesIpv6Address> _ipv6Addresses;
    private string _networkInterfaceId;
    private string _privateIpAddress;
    private List`1<ScheduledInstancesPrivateIpAddressConfig> _privateIpAddressConfigs;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private string _subnetId;
    public Nullable`1<bool> AssociatePublicIpAddress { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> DeviceIndex { get; public set; }
    public List`1<string> Groups { get; public set; }
    public Nullable`1<int> Ipv6AddressCount { get; public set; }
    public List`1<ScheduledInstancesIpv6Address> Ipv6Addresses { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<ScheduledInstancesPrivateIpAddressConfig> PrivateIpAddressConfigs { get; public set; }
    public Nullable`1<int> SecondaryPrivateIpAddressCount { get; public set; }
    public string SubnetId { get; public set; }
    public Nullable`1<bool> get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(Nullable`1<bool> value);
    internal bool IsSetAssociatePublicIpAddress();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_DeviceIndex();
    public void set_DeviceIndex(Nullable`1<int> value);
    internal bool IsSetDeviceIndex();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public Nullable`1<int> get_Ipv6AddressCount();
    public void set_Ipv6AddressCount(Nullable`1<int> value);
    internal bool IsSetIpv6AddressCount();
    public List`1<ScheduledInstancesIpv6Address> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<ScheduledInstancesIpv6Address> value);
    internal bool IsSetIpv6Addresses();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<ScheduledInstancesPrivateIpAddressConfig> get_PrivateIpAddressConfigs();
    public void set_PrivateIpAddressConfigs(List`1<ScheduledInstancesPrivateIpAddressConfig> value);
    internal bool IsSetPrivateIpAddressConfigs();
    public Nullable`1<int> get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(Nullable`1<int> value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.ScheduledInstancesPlacement : object {
    private string _availabilityZone;
    private string _groupName;
    public string AvailabilityZone { get; public set; }
    public string GroupName { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.ScheduledInstancesPrivateIpAddressConfig : object {
    private Nullable`1<bool> _primary;
    private string _privateIpAddress;
    public Nullable`1<bool> Primary { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public Nullable`1<bool> get_Primary();
    public void set_Primary(Nullable`1<bool> value);
    internal bool IsSetPrimary();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
internal class Amazon.EC2.Model.SearchLocalGatewayRoutesPaginator : object {
    private IAmazonEC2 _client;
    private SearchLocalGatewayRoutesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<SearchLocalGatewayRoutesResponse> Responses { get; }
    public IPaginatedEnumerable`1<LocalGatewayRoute> Routes { get; }
    internal SearchLocalGatewayRoutesPaginator(IAmazonEC2 client, SearchLocalGatewayRoutesRequest request);
    public sealed virtual IPaginatedEnumerable`1<SearchLocalGatewayRoutesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LocalGatewayRoute> get_Routes();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.SearchLocalGatewayRoutesPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-SearchLocalGatewayRoutesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<SearchLocalGatewayRoutesResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.SearchLocalGatewayRoutesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.SearchLocalGatewayRoutesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _localGatewayRouteTableId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string LocalGatewayRouteTableId { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_LocalGatewayRouteTableId();
    public void set_LocalGatewayRouteTableId(string value);
    internal bool IsSetLocalGatewayRouteTableId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.SearchLocalGatewayRoutesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<LocalGatewayRoute> _routes;
    public string NextToken { get; public set; }
    public List`1<LocalGatewayRoute> Routes { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<LocalGatewayRoute> get_Routes();
    public void set_Routes(List`1<LocalGatewayRoute> value);
    internal bool IsSetRoutes();
}
internal class Amazon.EC2.Model.SearchTransitGatewayMulticastGroupsPaginator : object {
    private IAmazonEC2 _client;
    private SearchTransitGatewayMulticastGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<SearchTransitGatewayMulticastGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TransitGatewayMulticastGroup> MulticastGroups { get; }
    internal SearchTransitGatewayMulticastGroupsPaginator(IAmazonEC2 client, SearchTransitGatewayMulticastGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<SearchTransitGatewayMulticastGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TransitGatewayMulticastGroup> get_MulticastGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.EC2.Model.SearchTransitGatewayMulticastGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-EC2-Model-SearchTransitGatewayMulticastGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<SearchTransitGatewayMulticastGroupsResponse> Amazon.Runtime.IPaginator<Amazon.EC2.Model.SearchTransitGatewayMulticastGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.EC2.Model.SearchTransitGatewayMulticastGroupsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _transitGatewayMulticastDomainId;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.SearchTransitGatewayMulticastGroupsResponse : AmazonWebServiceResponse {
    private List`1<TransitGatewayMulticastGroup> _multicastGroups;
    private string _nextToken;
    public List`1<TransitGatewayMulticastGroup> MulticastGroups { get; public set; }
    public string NextToken { get; public set; }
    public List`1<TransitGatewayMulticastGroup> get_MulticastGroups();
    public void set_MulticastGroups(List`1<TransitGatewayMulticastGroup> value);
    internal bool IsSetMulticastGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.SearchTransitGatewayRoutesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _transitGatewayRouteTableId;
    [AWSPropertyAttribute]
public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string TransitGatewayRouteTableId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.SearchTransitGatewayRoutesResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _additionalRoutesAvailable;
    private List`1<TransitGatewayRoute> _routes;
    public Nullable`1<bool> AdditionalRoutesAvailable { get; public set; }
    public List`1<TransitGatewayRoute> Routes { get; public set; }
    public Nullable`1<bool> get_AdditionalRoutesAvailable();
    public void set_AdditionalRoutesAvailable(Nullable`1<bool> value);
    internal bool IsSetAdditionalRoutesAvailable();
    public List`1<TransitGatewayRoute> get_Routes();
    public void set_Routes(List`1<TransitGatewayRoute> value);
    internal bool IsSetRoutes();
}
public class Amazon.EC2.Model.SecurityGroup : object {
    private string _description;
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    private List`1<IpPermission> _ipPermissionsEgress;
    private string _ownerId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string Description { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<IpPermission> IpPermissionsEgress { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<IpPermission> get_IpPermissionsEgress();
    public void set_IpPermissionsEgress(List`1<IpPermission> value);
    internal bool IsSetIpPermissionsEgress();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.SecurityGroupForVpc : object {
    private string _description;
    private string _groupId;
    private string _groupName;
    private string _ownerId;
    private string _primaryVpcId;
    private List`1<Tag> _tags;
    public string Description { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string OwnerId { get; public set; }
    public string PrimaryVpcId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PrimaryVpcId();
    public void set_PrimaryVpcId(string value);
    internal bool IsSetPrimaryVpcId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.SecurityGroupIdentifier : object {
    private string _groupId;
    private string _groupName;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.SecurityGroupReference : object {
    private string _groupId;
    private string _referencingVpcId;
    private string _transitGatewayId;
    private string _vpcPeeringConnectionId;
    public string GroupId { get; public set; }
    public string ReferencingVpcId { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_ReferencingVpcId();
    public void set_ReferencingVpcId(string value);
    internal bool IsSetReferencingVpcId();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.SecurityGroupRule : object {
    private string _cidrIpv4;
    private string _cidrIpv6;
    private string _description;
    private Nullable`1<int> _fromPort;
    private string _groupId;
    private string _groupOwnerId;
    private string _ipProtocol;
    private Nullable`1<bool> _isEgress;
    private string _prefixListId;
    private ReferencedSecurityGroup _referencedGroupInfo;
    private string _securityGroupRuleId;
    private List`1<Tag> _tags;
    private Nullable`1<int> _toPort;
    public string CidrIpv4 { get; public set; }
    public string CidrIpv6 { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> FromPort { get; public set; }
    public string GroupId { get; public set; }
    public string GroupOwnerId { get; public set; }
    public string IpProtocol { get; public set; }
    public Nullable`1<bool> IsEgress { get; public set; }
    public string PrefixListId { get; public set; }
    public ReferencedSecurityGroup ReferencedGroupInfo { get; public set; }
    public string SecurityGroupRuleId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<int> ToPort { get; public set; }
    public string get_CidrIpv4();
    public void set_CidrIpv4(string value);
    internal bool IsSetCidrIpv4();
    public string get_CidrIpv6();
    public void set_CidrIpv6(string value);
    internal bool IsSetCidrIpv6();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupOwnerId();
    public void set_GroupOwnerId(string value);
    internal bool IsSetGroupOwnerId();
    public string get_IpProtocol();
    public void set_IpProtocol(string value);
    internal bool IsSetIpProtocol();
    public Nullable`1<bool> get_IsEgress();
    public void set_IsEgress(Nullable`1<bool> value);
    internal bool IsSetIsEgress();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public ReferencedSecurityGroup get_ReferencedGroupInfo();
    public void set_ReferencedGroupInfo(ReferencedSecurityGroup value);
    internal bool IsSetReferencedGroupInfo();
    public string get_SecurityGroupRuleId();
    public void set_SecurityGroupRuleId(string value);
    internal bool IsSetSecurityGroupRuleId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
}
public class Amazon.EC2.Model.SecurityGroupRuleDescription : object {
    private string _description;
    private string _securityGroupRuleId;
    public string Description { get; public set; }
    public string SecurityGroupRuleId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_SecurityGroupRuleId();
    public void set_SecurityGroupRuleId(string value);
    internal bool IsSetSecurityGroupRuleId();
}
public class Amazon.EC2.Model.SecurityGroupRuleRequest : object {
    private string _cidrIpv4;
    private string _cidrIpv6;
    private string _description;
    private Nullable`1<int> _fromPort;
    private string _ipProtocol;
    private string _prefixListId;
    private string _referencedGroupId;
    private Nullable`1<int> _toPort;
    public string CidrIpv4 { get; public set; }
    public string CidrIpv6 { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> FromPort { get; public set; }
    public string IpProtocol { get; public set; }
    public string PrefixListId { get; public set; }
    public string ReferencedGroupId { get; public set; }
    public Nullable`1<int> ToPort { get; public set; }
    public string get_CidrIpv4();
    public void set_CidrIpv4(string value);
    internal bool IsSetCidrIpv4();
    public string get_CidrIpv6();
    public void set_CidrIpv6(string value);
    internal bool IsSetCidrIpv6();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public string get_IpProtocol();
    public void set_IpProtocol(string value);
    internal bool IsSetIpProtocol();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_ReferencedGroupId();
    public void set_ReferencedGroupId(string value);
    internal bool IsSetReferencedGroupId();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
}
public class Amazon.EC2.Model.SecurityGroupRuleUpdate : object {
    private SecurityGroupRuleRequest _securityGroupRule;
    private string _securityGroupRuleId;
    public SecurityGroupRuleRequest SecurityGroupRule { get; public set; }
    [AWSPropertyAttribute]
public string SecurityGroupRuleId { get; public set; }
    public SecurityGroupRuleRequest get_SecurityGroupRule();
    public void set_SecurityGroupRule(SecurityGroupRuleRequest value);
    internal bool IsSetSecurityGroupRule();
    public string get_SecurityGroupRuleId();
    public void set_SecurityGroupRuleId(string value);
    internal bool IsSetSecurityGroupRuleId();
}
public class Amazon.EC2.Model.SendDiagnosticInterruptRequest : AmazonEC2Request {
    private string _instanceId;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.SendDiagnosticInterruptResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ServiceConfiguration : object {
    private Nullable`1<bool> _acceptanceRequired;
    private List`1<string> _availabilityZones;
    private List`1<string> _baseEndpointDnsNames;
    private List`1<string> _gatewayLoadBalancerArns;
    private Nullable`1<bool> _managesVpcEndpoints;
    private List`1<string> _networkLoadBalancerArns;
    private PayerResponsibility _payerResponsibility;
    private string _privateDnsName;
    private PrivateDnsNameConfiguration _privateDnsNameConfiguration;
    private string _serviceId;
    private string _serviceName;
    private ServiceState _serviceState;
    private List`1<ServiceTypeDetail> _serviceType;
    private List`1<string> _supportedIpAddressTypes;
    private List`1<Tag> _tags;
    public Nullable`1<bool> AcceptanceRequired { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public List`1<string> BaseEndpointDnsNames { get; public set; }
    public List`1<string> GatewayLoadBalancerArns { get; public set; }
    public Nullable`1<bool> ManagesVpcEndpoints { get; public set; }
    public List`1<string> NetworkLoadBalancerArns { get; public set; }
    public PayerResponsibility PayerResponsibility { get; public set; }
    public string PrivateDnsName { get; public set; }
    public PrivateDnsNameConfiguration PrivateDnsNameConfiguration { get; public set; }
    public string ServiceId { get; public set; }
    public string ServiceName { get; public set; }
    public ServiceState ServiceState { get; public set; }
    public List`1<ServiceTypeDetail> ServiceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SupportedIpAddressTypes { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_AcceptanceRequired();
    public void set_AcceptanceRequired(Nullable`1<bool> value);
    internal bool IsSetAcceptanceRequired();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public List`1<string> get_BaseEndpointDnsNames();
    public void set_BaseEndpointDnsNames(List`1<string> value);
    internal bool IsSetBaseEndpointDnsNames();
    public List`1<string> get_GatewayLoadBalancerArns();
    public void set_GatewayLoadBalancerArns(List`1<string> value);
    internal bool IsSetGatewayLoadBalancerArns();
    public Nullable`1<bool> get_ManagesVpcEndpoints();
    public void set_ManagesVpcEndpoints(Nullable`1<bool> value);
    internal bool IsSetManagesVpcEndpoints();
    public List`1<string> get_NetworkLoadBalancerArns();
    public void set_NetworkLoadBalancerArns(List`1<string> value);
    internal bool IsSetNetworkLoadBalancerArns();
    public PayerResponsibility get_PayerResponsibility();
    public void set_PayerResponsibility(PayerResponsibility value);
    internal bool IsSetPayerResponsibility();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public PrivateDnsNameConfiguration get_PrivateDnsNameConfiguration();
    public void set_PrivateDnsNameConfiguration(PrivateDnsNameConfiguration value);
    internal bool IsSetPrivateDnsNameConfiguration();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public ServiceState get_ServiceState();
    public void set_ServiceState(ServiceState value);
    internal bool IsSetServiceState();
    public List`1<ServiceTypeDetail> get_ServiceType();
    public void set_ServiceType(List`1<ServiceTypeDetail> value);
    internal bool IsSetServiceType();
    public List`1<string> get_SupportedIpAddressTypes();
    public void set_SupportedIpAddressTypes(List`1<string> value);
    internal bool IsSetSupportedIpAddressTypes();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.ServiceDetail : object {
    private Nullable`1<bool> _acceptanceRequired;
    private List`1<string> _availabilityZones;
    private List`1<string> _baseEndpointDnsNames;
    private Nullable`1<bool> _managesVpcEndpoints;
    private string _owner;
    private PayerResponsibility _payerResponsibility;
    private string _privateDnsName;
    private List`1<PrivateDnsDetails> _privateDnsNames;
    private DnsNameState _privateDnsNameVerificationState;
    private string _serviceId;
    private string _serviceName;
    private List`1<ServiceTypeDetail> _serviceType;
    private List`1<string> _supportedIpAddressTypes;
    private List`1<Tag> _tags;
    private Nullable`1<bool> _vpcEndpointPolicySupported;
    public Nullable`1<bool> AcceptanceRequired { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public List`1<string> BaseEndpointDnsNames { get; public set; }
    public Nullable`1<bool> ManagesVpcEndpoints { get; public set; }
    public string Owner { get; public set; }
    public PayerResponsibility PayerResponsibility { get; public set; }
    public string PrivateDnsName { get; public set; }
    public List`1<PrivateDnsDetails> PrivateDnsNames { get; public set; }
    public DnsNameState PrivateDnsNameVerificationState { get; public set; }
    public string ServiceId { get; public set; }
    public string ServiceName { get; public set; }
    public List`1<ServiceTypeDetail> ServiceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SupportedIpAddressTypes { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> VpcEndpointPolicySupported { get; public set; }
    public Nullable`1<bool> get_AcceptanceRequired();
    public void set_AcceptanceRequired(Nullable`1<bool> value);
    internal bool IsSetAcceptanceRequired();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public List`1<string> get_BaseEndpointDnsNames();
    public void set_BaseEndpointDnsNames(List`1<string> value);
    internal bool IsSetBaseEndpointDnsNames();
    public Nullable`1<bool> get_ManagesVpcEndpoints();
    public void set_ManagesVpcEndpoints(Nullable`1<bool> value);
    internal bool IsSetManagesVpcEndpoints();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public PayerResponsibility get_PayerResponsibility();
    public void set_PayerResponsibility(PayerResponsibility value);
    internal bool IsSetPayerResponsibility();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public List`1<PrivateDnsDetails> get_PrivateDnsNames();
    public void set_PrivateDnsNames(List`1<PrivateDnsDetails> value);
    internal bool IsSetPrivateDnsNames();
    public DnsNameState get_PrivateDnsNameVerificationState();
    public void set_PrivateDnsNameVerificationState(DnsNameState value);
    internal bool IsSetPrivateDnsNameVerificationState();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public List`1<ServiceTypeDetail> get_ServiceType();
    public void set_ServiceType(List`1<ServiceTypeDetail> value);
    internal bool IsSetServiceType();
    public List`1<string> get_SupportedIpAddressTypes();
    public void set_SupportedIpAddressTypes(List`1<string> value);
    internal bool IsSetSupportedIpAddressTypes();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<bool> get_VpcEndpointPolicySupported();
    public void set_VpcEndpointPolicySupported(Nullable`1<bool> value);
    internal bool IsSetVpcEndpointPolicySupported();
}
public class Amazon.EC2.Model.ServiceTypeDetail : object {
    private ServiceType _serviceType;
    public ServiceType ServiceType { get; public set; }
    public ServiceType get_ServiceType();
    public void set_ServiceType(ServiceType value);
    internal bool IsSetServiceType();
}
public class Amazon.EC2.Model.SlotDateTimeRangeRequest : object {
    private Nullable`1<DateTime> _earliestTimeUtc;
    private Nullable`1<DateTime> _latestTimeUtc;
    private Nullable`1<DateTime> _earliestTime;
    private Nullable`1<DateTime> _latestTime;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EarliestTimeUtc { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LatestTimeUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EarliestTimeUtc instead. Setting either EarliestTime or EarliestTimeUtc results in both EarliestTime and EarliestTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EarliestTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EarliestTime { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use LatestTimeUtc instead. Setting either LatestTime or LatestTimeUtc results in both LatestTime and LatestTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. LatestTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> LatestTime { get; public set; }
    public Nullable`1<DateTime> get_EarliestTimeUtc();
    public void set_EarliestTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetEarliestTimeUtc();
    public Nullable`1<DateTime> get_LatestTimeUtc();
    public void set_LatestTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetLatestTimeUtc();
    public Nullable`1<DateTime> get_EarliestTime();
    public void set_EarliestTime(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_LatestTime();
    public void set_LatestTime(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.SlotStartTimeRangeRequest : object {
    private Nullable`1<DateTime> _earliestTimeUtc;
    private Nullable`1<DateTime> _latestTimeUtc;
    private Nullable`1<DateTime> _earliestTime;
    private Nullable`1<DateTime> _latestTime;
    public Nullable`1<DateTime> EarliestTimeUtc { get; public set; }
    public Nullable`1<DateTime> LatestTimeUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EarliestTimeUtc instead. Setting either EarliestTime or EarliestTimeUtc results in both EarliestTime and EarliestTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EarliestTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EarliestTime { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use LatestTimeUtc instead. Setting either LatestTime or LatestTimeUtc results in both LatestTime and LatestTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. LatestTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> LatestTime { get; public set; }
    public Nullable`1<DateTime> get_EarliestTimeUtc();
    public void set_EarliestTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetEarliestTimeUtc();
    public Nullable`1<DateTime> get_LatestTimeUtc();
    public void set_LatestTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetLatestTimeUtc();
    public Nullable`1<DateTime> get_EarliestTime();
    public void set_EarliestTime(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_LatestTime();
    public void set_LatestTime(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.Snapshot : object {
    private string _dataEncryptionKeyId;
    private string _description;
    private Nullable`1<bool> _encrypted;
    private string _kmsKeyId;
    private string _outpostArn;
    private string _ownerAlias;
    private string _ownerId;
    private string _progress;
    private Nullable`1<DateTime> _restoreExpiryTime;
    private string _snapshotId;
    private SSEType _sseType;
    private Nullable`1<DateTime> _startTime;
    private SnapshotState _state;
    private string _stateMessage;
    private StorageTier _storageTier;
    private List`1<Tag> _tags;
    private string _volumeId;
    private Nullable`1<int> _volumeSize;
    public string DataEncryptionKeyId { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string KmsKeyId { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerAlias { get; public set; }
    public string OwnerId { get; public set; }
    public string Progress { get; public set; }
    public Nullable`1<DateTime> RestoreExpiryTime { get; public set; }
    public string SnapshotId { get; public set; }
    public SSEType SseType { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public SnapshotState State { get; public set; }
    public string StateMessage { get; public set; }
    public StorageTier StorageTier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VolumeId { get; public set; }
    public Nullable`1<int> VolumeSize { get; public set; }
    public string get_DataEncryptionKeyId();
    public void set_DataEncryptionKeyId(string value);
    internal bool IsSetDataEncryptionKeyId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerAlias();
    public void set_OwnerAlias(string value);
    internal bool IsSetOwnerAlias();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public Nullable`1<DateTime> get_RestoreExpiryTime();
    public void set_RestoreExpiryTime(Nullable`1<DateTime> value);
    internal bool IsSetRestoreExpiryTime();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public SSEType get_SseType();
    public void set_SseType(SSEType value);
    internal bool IsSetSseType();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public SnapshotState get_State();
    public void set_State(SnapshotState value);
    internal bool IsSetState();
    public string get_StateMessage();
    public void set_StateMessage(string value);
    internal bool IsSetStateMessage();
    public StorageTier get_StorageTier();
    public void set_StorageTier(StorageTier value);
    internal bool IsSetStorageTier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
}
public class Amazon.EC2.Model.SnapshotDetail : object {
    private string _description;
    private string _deviceName;
    private Nullable`1<double> _diskImageSize;
    private string _format;
    private string _progress;
    private string _snapshotId;
    private string _status;
    private string _statusMessage;
    private string _url;
    private UserBucketDetails _userBucket;
    public string Description { get; public set; }
    public string DeviceName { get; public set; }
    public Nullable`1<double> DiskImageSize { get; public set; }
    public string Format { get; public set; }
    public string Progress { get; public set; }
    public string SnapshotId { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    [AWSPropertyAttribute]
public string Url { get; public set; }
    public UserBucketDetails UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public Nullable`1<double> get_DiskImageSize();
    public void set_DiskImageSize(Nullable`1<double> value);
    internal bool IsSetDiskImageSize();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucketDetails get_UserBucket();
    public void set_UserBucket(UserBucketDetails value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.SnapshotDiskContainer : object {
    private string _description;
    private string _format;
    private string _url;
    private UserBucket _userBucket;
    public string Description { get; public set; }
    public string Format { get; public set; }
    [AWSPropertyAttribute]
public string Url { get; public set; }
    public UserBucket UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucket get_UserBucket();
    public void set_UserBucket(UserBucket value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.SnapshotInfo : object {
    private string _description;
    private Nullable`1<bool> _encrypted;
    private string _outpostArn;
    private string _ownerId;
    private string _progress;
    private string _snapshotId;
    private SSEType _sseType;
    private Nullable`1<DateTime> _startTime;
    private SnapshotState _state;
    private List`1<Tag> _tags;
    private string _volumeId;
    private Nullable`1<int> _volumeSize;
    public string Description { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public string Progress { get; public set; }
    public string SnapshotId { get; public set; }
    public SSEType SseType { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public SnapshotState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VolumeId { get; public set; }
    public Nullable`1<int> VolumeSize { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public SSEType get_SseType();
    public void set_SseType(SSEType value);
    internal bool IsSetSseType();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public SnapshotState get_State();
    public void set_State(SnapshotState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
}
public class Amazon.EC2.Model.SnapshotRecycleBinInfo : object {
    private string _description;
    private Nullable`1<DateTime> _recycleBinEnterTime;
    private Nullable`1<DateTime> _recycleBinExitTime;
    private string _snapshotId;
    private string _volumeId;
    public string Description { get; public set; }
    public Nullable`1<DateTime> RecycleBinEnterTime { get; public set; }
    public Nullable`1<DateTime> RecycleBinExitTime { get; public set; }
    public string SnapshotId { get; public set; }
    public string VolumeId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_RecycleBinEnterTime();
    public void set_RecycleBinEnterTime(Nullable`1<DateTime> value);
    internal bool IsSetRecycleBinEnterTime();
    public Nullable`1<DateTime> get_RecycleBinExitTime();
    public void set_RecycleBinExitTime(Nullable`1<DateTime> value);
    internal bool IsSetRecycleBinExitTime();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.SnapshotTaskDetail : object {
    private string _description;
    private Nullable`1<double> _diskImageSize;
    private Nullable`1<bool> _encrypted;
    private string _format;
    private string _kmsKeyId;
    private string _progress;
    private string _snapshotId;
    private string _status;
    private string _statusMessage;
    private string _url;
    private UserBucketDetails _userBucket;
    public string Description { get; public set; }
    public Nullable`1<double> DiskImageSize { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string Format { get; public set; }
    public string KmsKeyId { get; public set; }
    public string Progress { get; public set; }
    public string SnapshotId { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    [AWSPropertyAttribute]
public string Url { get; public set; }
    public UserBucketDetails UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<double> get_DiskImageSize();
    public void set_DiskImageSize(Nullable`1<double> value);
    internal bool IsSetDiskImageSize();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucketDetails get_UserBucket();
    public void set_UserBucket(UserBucketDetails value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.SnapshotTierStatus : object {
    private Nullable`1<DateTime> _archivalCompleteTime;
    private TieringOperationStatus _lastTieringOperationStatus;
    private string _lastTieringOperationStatusDetail;
    private Nullable`1<int> _lastTieringProgress;
    private Nullable`1<DateTime> _lastTieringStartTime;
    private string _ownerId;
    private Nullable`1<DateTime> _restoreExpiryTime;
    private string _snapshotId;
    private SnapshotState _status;
    private StorageTier _storageTier;
    private List`1<Tag> _tags;
    private string _volumeId;
    public Nullable`1<DateTime> ArchivalCompleteTime { get; public set; }
    public TieringOperationStatus LastTieringOperationStatus { get; public set; }
    public string LastTieringOperationStatusDetail { get; public set; }
    public Nullable`1<int> LastTieringProgress { get; public set; }
    public Nullable`1<DateTime> LastTieringStartTime { get; public set; }
    public string OwnerId { get; public set; }
    public Nullable`1<DateTime> RestoreExpiryTime { get; public set; }
    public string SnapshotId { get; public set; }
    public SnapshotState Status { get; public set; }
    public StorageTier StorageTier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VolumeId { get; public set; }
    public Nullable`1<DateTime> get_ArchivalCompleteTime();
    public void set_ArchivalCompleteTime(Nullable`1<DateTime> value);
    internal bool IsSetArchivalCompleteTime();
    public TieringOperationStatus get_LastTieringOperationStatus();
    public void set_LastTieringOperationStatus(TieringOperationStatus value);
    internal bool IsSetLastTieringOperationStatus();
    public string get_LastTieringOperationStatusDetail();
    public void set_LastTieringOperationStatusDetail(string value);
    internal bool IsSetLastTieringOperationStatusDetail();
    public Nullable`1<int> get_LastTieringProgress();
    public void set_LastTieringProgress(Nullable`1<int> value);
    internal bool IsSetLastTieringProgress();
    public Nullable`1<DateTime> get_LastTieringStartTime();
    public void set_LastTieringStartTime(Nullable`1<DateTime> value);
    internal bool IsSetLastTieringStartTime();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public Nullable`1<DateTime> get_RestoreExpiryTime();
    public void set_RestoreExpiryTime(Nullable`1<DateTime> value);
    internal bool IsSetRestoreExpiryTime();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public SnapshotState get_Status();
    public void set_Status(SnapshotState value);
    internal bool IsSetStatus();
    public StorageTier get_StorageTier();
    public void set_StorageTier(StorageTier value);
    internal bool IsSetStorageTier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.SpotCapacityRebalance : object {
    private ReplacementStrategy _replacementStrategy;
    private Nullable`1<int> _terminationDelay;
    public ReplacementStrategy ReplacementStrategy { get; public set; }
    public Nullable`1<int> TerminationDelay { get; public set; }
    public ReplacementStrategy get_ReplacementStrategy();
    public void set_ReplacementStrategy(ReplacementStrategy value);
    internal bool IsSetReplacementStrategy();
    public Nullable`1<int> get_TerminationDelay();
    public void set_TerminationDelay(Nullable`1<int> value);
    internal bool IsSetTerminationDelay();
}
public class Amazon.EC2.Model.SpotDatafeedSubscription : object {
    private string _bucket;
    private SpotInstanceStateFault _fault;
    private string _ownerId;
    private string _prefix;
    private DatafeedSubscriptionState _state;
    public string Bucket { get; public set; }
    public SpotInstanceStateFault Fault { get; public set; }
    public string OwnerId { get; public set; }
    public string Prefix { get; public set; }
    public DatafeedSubscriptionState State { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public SpotInstanceStateFault get_Fault();
    public void set_Fault(SpotInstanceStateFault value);
    internal bool IsSetFault();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public DatafeedSubscriptionState get_State();
    public void set_State(DatafeedSubscriptionState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.SpotFleetLaunchSpecification : object {
    private string _addressingType;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private Nullable`1<bool> _ebsOptimized;
    private IamInstanceProfileSpecification _iamInstanceProfile;
    private string _imageId;
    private InstanceRequirements _instanceRequirements;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private SpotFleetMonitoring _monitoring;
    private List`1<InstanceNetworkInterfaceSpecification> _networkInterfaces;
    private SpotPlacement _placement;
    private string _ramdiskId;
    private List`1<GroupIdentifier> _securityGroups;
    private string _spotPrice;
    private string _subnetId;
    private List`1<SpotFleetTagSpecification> _tagSpecifications;
    private string _userData;
    private Nullable`1<double> _weightedCapacity;
    public string AddressingType { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public Nullable`1<bool> EbsOptimized { get; public set; }
    public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public InstanceRequirements InstanceRequirements { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public SpotFleetMonitoring Monitoring { get; public set; }
    public List`1<InstanceNetworkInterfaceSpecification> NetworkInterfaces { get; public set; }
    public SpotPlacement Placement { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<GroupIdentifier> SecurityGroups { get; public set; }
    public string SpotPrice { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<SpotFleetTagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public string UserData { get; public set; }
    public Nullable`1<double> WeightedCapacity { get; public set; }
    public string get_AddressingType();
    public void set_AddressingType(string value);
    internal bool IsSetAddressingType();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public Nullable`1<bool> get_EbsOptimized();
    public void set_EbsOptimized(Nullable`1<bool> value);
    internal bool IsSetEbsOptimized();
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public InstanceRequirements get_InstanceRequirements();
    public void set_InstanceRequirements(InstanceRequirements value);
    internal bool IsSetInstanceRequirements();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public SpotFleetMonitoring get_Monitoring();
    public void set_Monitoring(SpotFleetMonitoring value);
    internal bool IsSetMonitoring();
    public List`1<InstanceNetworkInterfaceSpecification> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterfaceSpecification> value);
    internal bool IsSetNetworkInterfaces();
    public SpotPlacement get_Placement();
    public void set_Placement(SpotPlacement value);
    internal bool IsSetPlacement();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<GroupIdentifier> get_SecurityGroups();
    public void set_SecurityGroups(List`1<GroupIdentifier> value);
    internal bool IsSetSecurityGroups();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<SpotFleetTagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<SpotFleetTagSpecification> value);
    internal bool IsSetTagSpecifications();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
    public Nullable`1<double> get_WeightedCapacity();
    public void set_WeightedCapacity(Nullable`1<double> value);
    internal bool IsSetWeightedCapacity();
}
public class Amazon.EC2.Model.SpotFleetMonitoring : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.SpotFleetRequestConfig : object {
    private ActivityStatus _activityStatus;
    private SpotFleetRequestConfigData _configData;
    private Nullable`1<DateTime> _createTime;
    private string _spotFleetRequestId;
    private BatchState _spotFleetRequestState;
    private List`1<Tag> _tags;
    public ActivityStatus ActivityStatus { get; public set; }
    public SpotFleetRequestConfigData ConfigData { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public BatchState SpotFleetRequestState { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public ActivityStatus get_ActivityStatus();
    public void set_ActivityStatus(ActivityStatus value);
    internal bool IsSetActivityStatus();
    public SpotFleetRequestConfigData get_ConfigData();
    public void set_ConfigData(SpotFleetRequestConfigData value);
    internal bool IsSetConfigData();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
    public BatchState get_SpotFleetRequestState();
    public void set_SpotFleetRequestState(BatchState value);
    internal bool IsSetSpotFleetRequestState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.SpotFleetRequestConfigData : object {
    private AllocationStrategy _allocationStrategy;
    private string _clientToken;
    private string _context;
    private ExcessCapacityTerminationPolicy _excessCapacityTerminationPolicy;
    private Nullable`1<double> _fulfilledCapacity;
    private string _iamFleetRole;
    private InstanceInterruptionBehavior _instanceInterruptionBehavior;
    private Nullable`1<int> _instancePoolsToUseCount;
    private List`1<SpotFleetLaunchSpecification> _launchSpecifications;
    private List`1<LaunchTemplateConfig> _launchTemplateConfigs;
    private LoadBalancersConfig _loadBalancersConfig;
    private OnDemandAllocationStrategy _onDemandAllocationStrategy;
    private Nullable`1<double> _onDemandFulfilledCapacity;
    private string _onDemandMaxTotalPrice;
    private Nullable`1<int> _onDemandTargetCapacity;
    private Nullable`1<bool> _replaceUnhealthyInstances;
    private SpotMaintenanceStrategies _spotMaintenanceStrategies;
    private string _spotMaxTotalPrice;
    private string _spotPrice;
    private List`1<TagSpecification> _tagSpecifications;
    private Nullable`1<int> _targetCapacity;
    private TargetCapacityUnitType _targetCapacityUnitType;
    private Nullable`1<bool> _terminateInstancesWithExpiration;
    private FleetType _type;
    private Nullable`1<DateTime> _validFromUtc;
    private Nullable`1<DateTime> _validUntilUtc;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public AllocationStrategy AllocationStrategy { get; public set; }
    public string ClientToken { get; public set; }
    public string Context { get; public set; }
    public ExcessCapacityTerminationPolicy ExcessCapacityTerminationPolicy { get; public set; }
    public Nullable`1<double> FulfilledCapacity { get; public set; }
    [AWSPropertyAttribute]
public string IamFleetRole { get; public set; }
    public InstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public Nullable`1<int> InstancePoolsToUseCount { get; public set; }
    public List`1<SpotFleetLaunchSpecification> LaunchSpecifications { get; public set; }
    public List`1<LaunchTemplateConfig> LaunchTemplateConfigs { get; public set; }
    public LoadBalancersConfig LoadBalancersConfig { get; public set; }
    public OnDemandAllocationStrategy OnDemandAllocationStrategy { get; public set; }
    public Nullable`1<double> OnDemandFulfilledCapacity { get; public set; }
    public string OnDemandMaxTotalPrice { get; public set; }
    public Nullable`1<int> OnDemandTargetCapacity { get; public set; }
    public Nullable`1<bool> ReplaceUnhealthyInstances { get; public set; }
    public SpotMaintenanceStrategies SpotMaintenanceStrategies { get; public set; }
    public string SpotMaxTotalPrice { get; public set; }
    public string SpotPrice { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TargetCapacity { get; public set; }
    public TargetCapacityUnitType TargetCapacityUnitType { get; public set; }
    public Nullable`1<bool> TerminateInstancesWithExpiration { get; public set; }
    public FleetType Type { get; public set; }
    public Nullable`1<DateTime> ValidFromUtc { get; public set; }
    public Nullable`1<DateTime> ValidUntilUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidFromUtc instead. Setting either ValidFrom or ValidFromUtc results in both ValidFrom and ValidFromUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidFrom is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidFrom { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidUntil is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidUntil { get; public set; }
    public AllocationStrategy get_AllocationStrategy();
    public void set_AllocationStrategy(AllocationStrategy value);
    internal bool IsSetAllocationStrategy();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Context();
    public void set_Context(string value);
    internal bool IsSetContext();
    public ExcessCapacityTerminationPolicy get_ExcessCapacityTerminationPolicy();
    public void set_ExcessCapacityTerminationPolicy(ExcessCapacityTerminationPolicy value);
    internal bool IsSetExcessCapacityTerminationPolicy();
    public Nullable`1<double> get_FulfilledCapacity();
    public void set_FulfilledCapacity(Nullable`1<double> value);
    internal bool IsSetFulfilledCapacity();
    public string get_IamFleetRole();
    public void set_IamFleetRole(string value);
    internal bool IsSetIamFleetRole();
    public InstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(InstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public Nullable`1<int> get_InstancePoolsToUseCount();
    public void set_InstancePoolsToUseCount(Nullable`1<int> value);
    internal bool IsSetInstancePoolsToUseCount();
    public List`1<SpotFleetLaunchSpecification> get_LaunchSpecifications();
    public void set_LaunchSpecifications(List`1<SpotFleetLaunchSpecification> value);
    internal bool IsSetLaunchSpecifications();
    public List`1<LaunchTemplateConfig> get_LaunchTemplateConfigs();
    public void set_LaunchTemplateConfigs(List`1<LaunchTemplateConfig> value);
    internal bool IsSetLaunchTemplateConfigs();
    public LoadBalancersConfig get_LoadBalancersConfig();
    public void set_LoadBalancersConfig(LoadBalancersConfig value);
    internal bool IsSetLoadBalancersConfig();
    public OnDemandAllocationStrategy get_OnDemandAllocationStrategy();
    public void set_OnDemandAllocationStrategy(OnDemandAllocationStrategy value);
    internal bool IsSetOnDemandAllocationStrategy();
    public Nullable`1<double> get_OnDemandFulfilledCapacity();
    public void set_OnDemandFulfilledCapacity(Nullable`1<double> value);
    internal bool IsSetOnDemandFulfilledCapacity();
    public string get_OnDemandMaxTotalPrice();
    public void set_OnDemandMaxTotalPrice(string value);
    internal bool IsSetOnDemandMaxTotalPrice();
    public Nullable`1<int> get_OnDemandTargetCapacity();
    public void set_OnDemandTargetCapacity(Nullable`1<int> value);
    internal bool IsSetOnDemandTargetCapacity();
    public Nullable`1<bool> get_ReplaceUnhealthyInstances();
    public void set_ReplaceUnhealthyInstances(Nullable`1<bool> value);
    internal bool IsSetReplaceUnhealthyInstances();
    public SpotMaintenanceStrategies get_SpotMaintenanceStrategies();
    public void set_SpotMaintenanceStrategies(SpotMaintenanceStrategies value);
    internal bool IsSetSpotMaintenanceStrategies();
    public string get_SpotMaxTotalPrice();
    public void set_SpotMaxTotalPrice(string value);
    internal bool IsSetSpotMaxTotalPrice();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
    public Nullable`1<int> get_TargetCapacity();
    public void set_TargetCapacity(Nullable`1<int> value);
    internal bool IsSetTargetCapacity();
    public TargetCapacityUnitType get_TargetCapacityUnitType();
    public void set_TargetCapacityUnitType(TargetCapacityUnitType value);
    internal bool IsSetTargetCapacityUnitType();
    public Nullable`1<bool> get_TerminateInstancesWithExpiration();
    public void set_TerminateInstancesWithExpiration(Nullable`1<bool> value);
    internal bool IsSetTerminateInstancesWithExpiration();
    public FleetType get_Type();
    public void set_Type(FleetType value);
    internal bool IsSetType();
    public Nullable`1<DateTime> get_ValidFromUtc();
    public void set_ValidFromUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidFromUtc();
    public Nullable`1<DateTime> get_ValidUntilUtc();
    public void set_ValidUntilUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidUntilUtc();
    public Nullable`1<DateTime> get_ValidFrom();
    public void set_ValidFrom(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.SpotFleetTagSpecification : object {
    private ResourceType _resourceType;
    private List`1<Tag> _tags;
    public ResourceType ResourceType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.SpotInstanceRequest : object {
    private string _actualBlockHourlyPrice;
    private string _availabilityZoneGroup;
    private Nullable`1<int> _blockDurationMinutes;
    private Nullable`1<DateTime> _createTime;
    private SpotInstanceStateFault _fault;
    private string _instanceId;
    private InstanceInterruptionBehavior _instanceInterruptionBehavior;
    private string _launchedAvailabilityZone;
    private string _launchGroup;
    private LaunchSpecification _launchSpecification;
    private RIProductDescription _productDescription;
    private string _spotInstanceRequestId;
    private string _spotPrice;
    private SpotInstanceState _state;
    private SpotInstanceStatus _status;
    private List`1<Tag> _tags;
    private SpotInstanceType _type;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public string ActualBlockHourlyPrice { get; public set; }
    public string AvailabilityZoneGroup { get; public set; }
    public Nullable`1<int> BlockDurationMinutes { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public SpotInstanceStateFault Fault { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public string LaunchedAvailabilityZone { get; public set; }
    public string LaunchGroup { get; public set; }
    public LaunchSpecification LaunchSpecification { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public string SpotInstanceRequestId { get; public set; }
    public string SpotPrice { get; public set; }
    public SpotInstanceState State { get; public set; }
    public SpotInstanceStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public SpotInstanceType Type { get; public set; }
    public Nullable`1<DateTime> ValidFrom { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public string get_ActualBlockHourlyPrice();
    public void set_ActualBlockHourlyPrice(string value);
    internal bool IsSetActualBlockHourlyPrice();
    public string get_AvailabilityZoneGroup();
    public void set_AvailabilityZoneGroup(string value);
    internal bool IsSetAvailabilityZoneGroup();
    public Nullable`1<int> get_BlockDurationMinutes();
    public void set_BlockDurationMinutes(Nullable`1<int> value);
    internal bool IsSetBlockDurationMinutes();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public SpotInstanceStateFault get_Fault();
    public void set_Fault(SpotInstanceStateFault value);
    internal bool IsSetFault();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(InstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public string get_LaunchedAvailabilityZone();
    public void set_LaunchedAvailabilityZone(string value);
    internal bool IsSetLaunchedAvailabilityZone();
    public string get_LaunchGroup();
    public void set_LaunchGroup(string value);
    internal bool IsSetLaunchGroup();
    public LaunchSpecification get_LaunchSpecification();
    public void set_LaunchSpecification(LaunchSpecification value);
    internal bool IsSetLaunchSpecification();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public SpotInstanceState get_State();
    public void set_State(SpotInstanceState value);
    internal bool IsSetState();
    public SpotInstanceStatus get_Status();
    public void set_Status(SpotInstanceStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public SpotInstanceType get_Type();
    public void set_Type(SpotInstanceType value);
    internal bool IsSetType();
    public Nullable`1<DateTime> get_ValidFrom();
    public void set_ValidFrom(Nullable`1<DateTime> value);
    internal bool IsSetValidFrom();
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
    internal bool IsSetValidUntil();
}
public class Amazon.EC2.Model.SpotInstanceStateFault : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.SpotInstanceStatus : object {
    private string _code;
    private string _message;
    private Nullable`1<DateTime> _updateTime;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public Nullable`1<DateTime> UpdateTime { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<DateTime> get_UpdateTime();
    public void set_UpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdateTime();
}
public class Amazon.EC2.Model.SpotMaintenanceStrategies : object {
    private SpotCapacityRebalance _capacityRebalance;
    public SpotCapacityRebalance CapacityRebalance { get; public set; }
    public SpotCapacityRebalance get_CapacityRebalance();
    public void set_CapacityRebalance(SpotCapacityRebalance value);
    internal bool IsSetCapacityRebalance();
}
public class Amazon.EC2.Model.SpotMarketOptions : object {
    private Nullable`1<int> _blockDurationMinutes;
    private InstanceInterruptionBehavior _instanceInterruptionBehavior;
    private string _maxPrice;
    private SpotInstanceType _spotInstanceType;
    private Nullable`1<DateTime> _validUntilUtc;
    private Nullable`1<DateTime> _validUntil;
    public Nullable`1<int> BlockDurationMinutes { get; public set; }
    public InstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public string MaxPrice { get; public set; }
    public SpotInstanceType SpotInstanceType { get; public set; }
    public Nullable`1<DateTime> ValidUntilUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ValidUntil is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ValidUntil { get; public set; }
    public Nullable`1<int> get_BlockDurationMinutes();
    public void set_BlockDurationMinutes(Nullable`1<int> value);
    internal bool IsSetBlockDurationMinutes();
    public InstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(InstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public string get_MaxPrice();
    public void set_MaxPrice(string value);
    internal bool IsSetMaxPrice();
    public SpotInstanceType get_SpotInstanceType();
    public void set_SpotInstanceType(SpotInstanceType value);
    internal bool IsSetSpotInstanceType();
    public Nullable`1<DateTime> get_ValidUntilUtc();
    public void set_ValidUntilUtc(Nullable`1<DateTime> value);
    internal bool IsSetValidUntilUtc();
    public Nullable`1<DateTime> get_ValidUntil();
    public void set_ValidUntil(Nullable`1<DateTime> value);
}
public class Amazon.EC2.Model.SpotOptions : object {
    private SpotAllocationStrategy _allocationStrategy;
    private SpotInstanceInterruptionBehavior _instanceInterruptionBehavior;
    private Nullable`1<int> _instancePoolsToUseCount;
    private FleetSpotMaintenanceStrategies _maintenanceStrategies;
    private string _maxTotalPrice;
    private Nullable`1<int> _minTargetCapacity;
    private Nullable`1<bool> _singleAvailabilityZone;
    private Nullable`1<bool> _singleInstanceType;
    public SpotAllocationStrategy AllocationStrategy { get; public set; }
    public SpotInstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public Nullable`1<int> InstancePoolsToUseCount { get; public set; }
    public FleetSpotMaintenanceStrategies MaintenanceStrategies { get; public set; }
    public string MaxTotalPrice { get; public set; }
    public Nullable`1<int> MinTargetCapacity { get; public set; }
    public Nullable`1<bool> SingleAvailabilityZone { get; public set; }
    public Nullable`1<bool> SingleInstanceType { get; public set; }
    public SpotAllocationStrategy get_AllocationStrategy();
    public void set_AllocationStrategy(SpotAllocationStrategy value);
    internal bool IsSetAllocationStrategy();
    public SpotInstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(SpotInstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public Nullable`1<int> get_InstancePoolsToUseCount();
    public void set_InstancePoolsToUseCount(Nullable`1<int> value);
    internal bool IsSetInstancePoolsToUseCount();
    public FleetSpotMaintenanceStrategies get_MaintenanceStrategies();
    public void set_MaintenanceStrategies(FleetSpotMaintenanceStrategies value);
    internal bool IsSetMaintenanceStrategies();
    public string get_MaxTotalPrice();
    public void set_MaxTotalPrice(string value);
    internal bool IsSetMaxTotalPrice();
    public Nullable`1<int> get_MinTargetCapacity();
    public void set_MinTargetCapacity(Nullable`1<int> value);
    internal bool IsSetMinTargetCapacity();
    public Nullable`1<bool> get_SingleAvailabilityZone();
    public void set_SingleAvailabilityZone(Nullable`1<bool> value);
    internal bool IsSetSingleAvailabilityZone();
    public Nullable`1<bool> get_SingleInstanceType();
    public void set_SingleInstanceType(Nullable`1<bool> value);
    internal bool IsSetSingleInstanceType();
}
public class Amazon.EC2.Model.SpotOptionsRequest : object {
    private SpotAllocationStrategy _allocationStrategy;
    private SpotInstanceInterruptionBehavior _instanceInterruptionBehavior;
    private Nullable`1<int> _instancePoolsToUseCount;
    private FleetSpotMaintenanceStrategiesRequest _maintenanceStrategies;
    private string _maxTotalPrice;
    private Nullable`1<int> _minTargetCapacity;
    private Nullable`1<bool> _singleAvailabilityZone;
    private Nullable`1<bool> _singleInstanceType;
    public SpotAllocationStrategy AllocationStrategy { get; public set; }
    public SpotInstanceInterruptionBehavior InstanceInterruptionBehavior { get; public set; }
    public Nullable`1<int> InstancePoolsToUseCount { get; public set; }
    public FleetSpotMaintenanceStrategiesRequest MaintenanceStrategies { get; public set; }
    public string MaxTotalPrice { get; public set; }
    public Nullable`1<int> MinTargetCapacity { get; public set; }
    public Nullable`1<bool> SingleAvailabilityZone { get; public set; }
    public Nullable`1<bool> SingleInstanceType { get; public set; }
    public SpotAllocationStrategy get_AllocationStrategy();
    public void set_AllocationStrategy(SpotAllocationStrategy value);
    internal bool IsSetAllocationStrategy();
    public SpotInstanceInterruptionBehavior get_InstanceInterruptionBehavior();
    public void set_InstanceInterruptionBehavior(SpotInstanceInterruptionBehavior value);
    internal bool IsSetInstanceInterruptionBehavior();
    public Nullable`1<int> get_InstancePoolsToUseCount();
    public void set_InstancePoolsToUseCount(Nullable`1<int> value);
    internal bool IsSetInstancePoolsToUseCount();
    public FleetSpotMaintenanceStrategiesRequest get_MaintenanceStrategies();
    public void set_MaintenanceStrategies(FleetSpotMaintenanceStrategiesRequest value);
    internal bool IsSetMaintenanceStrategies();
    public string get_MaxTotalPrice();
    public void set_MaxTotalPrice(string value);
    internal bool IsSetMaxTotalPrice();
    public Nullable`1<int> get_MinTargetCapacity();
    public void set_MinTargetCapacity(Nullable`1<int> value);
    internal bool IsSetMinTargetCapacity();
    public Nullable`1<bool> get_SingleAvailabilityZone();
    public void set_SingleAvailabilityZone(Nullable`1<bool> value);
    internal bool IsSetSingleAvailabilityZone();
    public Nullable`1<bool> get_SingleInstanceType();
    public void set_SingleInstanceType(Nullable`1<bool> value);
    internal bool IsSetSingleInstanceType();
}
public class Amazon.EC2.Model.SpotPlacement : object {
    private string _availabilityZone;
    private string _groupName;
    private Tenancy _tenancy;
    public string AvailabilityZone { get; public set; }
    public string GroupName { get; public set; }
    public Tenancy Tenancy { get; public set; }
    public SpotPlacement(string availabilityZone);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Tenancy get_Tenancy();
    public void set_Tenancy(Tenancy value);
    internal bool IsSetTenancy();
}
public class Amazon.EC2.Model.SpotPlacementScore : object {
    private string _availabilityZoneId;
    private string _region;
    private Nullable`1<int> _score;
    public string AvailabilityZoneId { get; public set; }
    public string Region { get; public set; }
    public Nullable`1<int> Score { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public Nullable`1<int> get_Score();
    public void set_Score(Nullable`1<int> value);
    internal bool IsSetScore();
}
public class Amazon.EC2.Model.SpotPrice : object {
    private string _availabilityZone;
    private InstanceType _instanceType;
    private string _price;
    private RIProductDescription _productDescription;
    private Nullable`1<DateTime> _timestamp;
    public string AvailabilityZone { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string Price { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_Price();
    public void set_Price(string value);
    internal bool IsSetPrice();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.StaleIpPermission : object {
    private Nullable`1<int> _fromPort;
    private string _ipProtocol;
    private List`1<string> _ipRanges;
    private List`1<string> _prefixListIds;
    private Nullable`1<int> _toPort;
    private List`1<UserIdGroupPair> _userIdGroupPairs;
    public Nullable`1<int> FromPort { get; public set; }
    public string IpProtocol { get; public set; }
    public List`1<string> IpRanges { get; public set; }
    public List`1<string> PrefixListIds { get; public set; }
    public Nullable`1<int> ToPort { get; public set; }
    public List`1<UserIdGroupPair> UserIdGroupPairs { get; public set; }
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public string get_IpProtocol();
    public void set_IpProtocol(string value);
    internal bool IsSetIpProtocol();
    public List`1<string> get_IpRanges();
    public void set_IpRanges(List`1<string> value);
    internal bool IsSetIpRanges();
    public List`1<string> get_PrefixListIds();
    public void set_PrefixListIds(List`1<string> value);
    internal bool IsSetPrefixListIds();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
    public List`1<UserIdGroupPair> get_UserIdGroupPairs();
    public void set_UserIdGroupPairs(List`1<UserIdGroupPair> value);
    internal bool IsSetUserIdGroupPairs();
}
public class Amazon.EC2.Model.StaleSecurityGroup : object {
    private string _description;
    private string _groupId;
    private string _groupName;
    private List`1<StaleIpPermission> _staleIpPermissions;
    private List`1<StaleIpPermission> _staleIpPermissionsEgress;
    private string _vpcId;
    public string Description { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<StaleIpPermission> StaleIpPermissions { get; public set; }
    public List`1<StaleIpPermission> StaleIpPermissionsEgress { get; public set; }
    public string VpcId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<StaleIpPermission> get_StaleIpPermissions();
    public void set_StaleIpPermissions(List`1<StaleIpPermission> value);
    internal bool IsSetStaleIpPermissions();
    public List`1<StaleIpPermission> get_StaleIpPermissionsEgress();
    public void set_StaleIpPermissionsEgress(List`1<StaleIpPermission> value);
    internal bool IsSetStaleIpPermissionsEgress();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.StartInstancesRequest : AmazonEC2Request {
    private string _additionalInfo;
    private List`1<string> _instanceIds;
    public string AdditionalInfo { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    public StartInstancesRequest(List`1<string> instanceIds);
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.StartInstancesResponse : AmazonWebServiceResponse {
    private List`1<InstanceStateChange> _startingInstances;
    public List`1<InstanceStateChange> StartingInstances { get; public set; }
    public List`1<InstanceStateChange> get_StartingInstances();
    public void set_StartingInstances(List`1<InstanceStateChange> value);
    internal bool IsSetStartingInstances();
}
public class Amazon.EC2.Model.StartNetworkInsightsAccessScopeAnalysisRequest : AmazonEC2Request {
    private string _clientToken;
    private string _networkInsightsAccessScopeId;
    private List`1<TagSpecification> _tagSpecifications;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInsightsAccessScopeId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_NetworkInsightsAccessScopeId();
    public void set_NetworkInsightsAccessScopeId(string value);
    internal bool IsSetNetworkInsightsAccessScopeId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.StartNetworkInsightsAccessScopeAnalysisResponse : AmazonWebServiceResponse {
    private NetworkInsightsAccessScopeAnalysis _networkInsightsAccessScopeAnalysis;
    public NetworkInsightsAccessScopeAnalysis NetworkInsightsAccessScopeAnalysis { get; public set; }
    public NetworkInsightsAccessScopeAnalysis get_NetworkInsightsAccessScopeAnalysis();
    public void set_NetworkInsightsAccessScopeAnalysis(NetworkInsightsAccessScopeAnalysis value);
    internal bool IsSetNetworkInsightsAccessScopeAnalysis();
}
public class Amazon.EC2.Model.StartNetworkInsightsAnalysisRequest : AmazonEC2Request {
    private List`1<string> _additionalAccounts;
    private string _clientToken;
    private List`1<string> _filterInArns;
    private string _networkInsightsPathId;
    private List`1<TagSpecification> _tagSpecifications;
    public List`1<string> AdditionalAccounts { get; public set; }
    public string ClientToken { get; public set; }
    public List`1<string> FilterInArns { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInsightsPathId { get; public set; }
    public List`1<TagSpecification> TagSpecifications { get; public set; }
    public List`1<string> get_AdditionalAccounts();
    public void set_AdditionalAccounts(List`1<string> value);
    internal bool IsSetAdditionalAccounts();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_FilterInArns();
    public void set_FilterInArns(List`1<string> value);
    internal bool IsSetFilterInArns();
    public string get_NetworkInsightsPathId();
    public void set_NetworkInsightsPathId(string value);
    internal bool IsSetNetworkInsightsPathId();
    public List`1<TagSpecification> get_TagSpecifications();
    public void set_TagSpecifications(List`1<TagSpecification> value);
    internal bool IsSetTagSpecifications();
}
public class Amazon.EC2.Model.StartNetworkInsightsAnalysisResponse : AmazonWebServiceResponse {
    private NetworkInsightsAnalysis _networkInsightsAnalysis;
    public NetworkInsightsAnalysis NetworkInsightsAnalysis { get; public set; }
    public NetworkInsightsAnalysis get_NetworkInsightsAnalysis();
    public void set_NetworkInsightsAnalysis(NetworkInsightsAnalysis value);
    internal bool IsSetNetworkInsightsAnalysis();
}
public class Amazon.EC2.Model.StartVpcEndpointServicePrivateDnsVerificationRequest : AmazonEC2Request {
    private string _serviceId;
    [AWSPropertyAttribute]
public string ServiceId { get; public set; }
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
}
public class Amazon.EC2.Model.StartVpcEndpointServicePrivateDnsVerificationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _returnValue;
    public Nullable`1<bool> ReturnValue { get; public set; }
    public Nullable`1<bool> get_ReturnValue();
    public void set_ReturnValue(Nullable`1<bool> value);
    internal bool IsSetReturnValue();
}
public class Amazon.EC2.Model.StateReason : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.StopInstancesRequest : AmazonEC2Request {
    private Nullable`1<bool> _force;
    private Nullable`1<bool> _hibernate;
    private List`1<string> _instanceIds;
    public Nullable`1<bool> Force { get; public set; }
    public Nullable`1<bool> Hibernate { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    public StopInstancesRequest(List`1<string> instanceIds);
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
    public Nullable`1<bool> get_Hibernate();
    public void set_Hibernate(Nullable`1<bool> value);
    internal bool IsSetHibernate();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.StopInstancesResponse : AmazonWebServiceResponse {
    private List`1<InstanceStateChange> _stoppingInstances;
    public List`1<InstanceStateChange> StoppingInstances { get; public set; }
    public List`1<InstanceStateChange> get_StoppingInstances();
    public void set_StoppingInstances(List`1<InstanceStateChange> value);
    internal bool IsSetStoppingInstances();
}
public class Amazon.EC2.Model.Storage : object {
    private S3Storage _s3;
    public S3Storage S3 { get; public set; }
    public S3Storage get_S3();
    public void set_S3(S3Storage value);
    internal bool IsSetS3();
}
public class Amazon.EC2.Model.StorageLocation : object {
    private string _bucket;
    private string _key;
    public string Bucket { get; public set; }
    public string Key { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
}
public class Amazon.EC2.Model.StoreImageTaskResult : object {
    private string _amiId;
    private string _bucket;
    private Nullable`1<int> _progressPercentage;
    private string _s3objectKey;
    private string _storeTaskFailureReason;
    private string _storeTaskState;
    private Nullable`1<DateTime> _taskStartTime;
    public string AmiId { get; public set; }
    public string Bucket { get; public set; }
    public Nullable`1<int> ProgressPercentage { get; public set; }
    public string S3objectKey { get; public set; }
    public string StoreTaskFailureReason { get; public set; }
    public string StoreTaskState { get; public set; }
    public Nullable`1<DateTime> TaskStartTime { get; public set; }
    public string get_AmiId();
    public void set_AmiId(string value);
    internal bool IsSetAmiId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<int> get_ProgressPercentage();
    public void set_ProgressPercentage(Nullable`1<int> value);
    internal bool IsSetProgressPercentage();
    public string get_S3objectKey();
    public void set_S3objectKey(string value);
    internal bool IsSetS3objectKey();
    public string get_StoreTaskFailureReason();
    public void set_StoreTaskFailureReason(string value);
    internal bool IsSetStoreTaskFailureReason();
    public string get_StoreTaskState();
    public void set_StoreTaskState(string value);
    internal bool IsSetStoreTaskState();
    public Nullable`1<DateTime> get_TaskStartTime();
    public void set_TaskStartTime(Nullable`1<DateTime> value);
    internal bool IsSetTaskStartTime();
}
public class Amazon.EC2.Model.Subnet : object {
    private Nullable`1<bool> _assignIpv6AddressOnCreation;
    private string _availabilityZone;
    private string _availabilityZoneId;
    private Nullable`1<int> _availableIpAddressCount;
    private string _cidrBlock;
    private string _customerOwnedIpv4Pool;
    private Nullable`1<bool> _defaultForAz;
    private Nullable`1<bool> _enableDns64;
    private Nullable`1<int> _enableLniAtDeviceIndex;
    private List`1<SubnetIpv6CidrBlockAssociation> _ipv6CidrBlockAssociationSet;
    private Nullable`1<bool> _ipv6Native;
    private Nullable`1<bool> _mapCustomerOwnedIpOnLaunch;
    private Nullable`1<bool> _mapPublicIpOnLaunch;
    private string _outpostArn;
    private string _ownerId;
    private PrivateDnsNameOptionsOnLaunch _privateDnsNameOptionsOnLaunch;
    private SubnetState _state;
    private string _subnetArn;
    private string _subnetId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public Nullable`1<bool> AssignIpv6AddressOnCreation { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string AvailabilityZoneId { get; public set; }
    public Nullable`1<int> AvailableIpAddressCount { get; public set; }
    public string CidrBlock { get; public set; }
    public string CustomerOwnedIpv4Pool { get; public set; }
    public Nullable`1<bool> DefaultForAz { get; public set; }
    public Nullable`1<bool> EnableDns64 { get; public set; }
    public Nullable`1<int> EnableLniAtDeviceIndex { get; public set; }
    public List`1<SubnetIpv6CidrBlockAssociation> Ipv6CidrBlockAssociationSet { get; public set; }
    public Nullable`1<bool> Ipv6Native { get; public set; }
    public Nullable`1<bool> MapCustomerOwnedIpOnLaunch { get; public set; }
    public Nullable`1<bool> MapPublicIpOnLaunch { get; public set; }
    public string OutpostArn { get; public set; }
    public string OwnerId { get; public set; }
    public PrivateDnsNameOptionsOnLaunch PrivateDnsNameOptionsOnLaunch { get; public set; }
    public SubnetState State { get; public set; }
    public string SubnetArn { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_AssignIpv6AddressOnCreation();
    public void set_AssignIpv6AddressOnCreation(Nullable`1<bool> value);
    internal bool IsSetAssignIpv6AddressOnCreation();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public Nullable`1<int> get_AvailableIpAddressCount();
    public void set_AvailableIpAddressCount(Nullable`1<int> value);
    internal bool IsSetAvailableIpAddressCount();
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public string get_CustomerOwnedIpv4Pool();
    public void set_CustomerOwnedIpv4Pool(string value);
    internal bool IsSetCustomerOwnedIpv4Pool();
    public Nullable`1<bool> get_DefaultForAz();
    public void set_DefaultForAz(Nullable`1<bool> value);
    internal bool IsSetDefaultForAz();
    public Nullable`1<bool> get_EnableDns64();
    public void set_EnableDns64(Nullable`1<bool> value);
    internal bool IsSetEnableDns64();
    public Nullable`1<int> get_EnableLniAtDeviceIndex();
    public void set_EnableLniAtDeviceIndex(Nullable`1<int> value);
    internal bool IsSetEnableLniAtDeviceIndex();
    public List`1<SubnetIpv6CidrBlockAssociation> get_Ipv6CidrBlockAssociationSet();
    public void set_Ipv6CidrBlockAssociationSet(List`1<SubnetIpv6CidrBlockAssociation> value);
    internal bool IsSetIpv6CidrBlockAssociationSet();
    public Nullable`1<bool> get_Ipv6Native();
    public void set_Ipv6Native(Nullable`1<bool> value);
    internal bool IsSetIpv6Native();
    public Nullable`1<bool> get_MapCustomerOwnedIpOnLaunch();
    public void set_MapCustomerOwnedIpOnLaunch(Nullable`1<bool> value);
    internal bool IsSetMapCustomerOwnedIpOnLaunch();
    public Nullable`1<bool> get_MapPublicIpOnLaunch();
    public void set_MapPublicIpOnLaunch(Nullable`1<bool> value);
    internal bool IsSetMapPublicIpOnLaunch();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PrivateDnsNameOptionsOnLaunch get_PrivateDnsNameOptionsOnLaunch();
    public void set_PrivateDnsNameOptionsOnLaunch(PrivateDnsNameOptionsOnLaunch value);
    internal bool IsSetPrivateDnsNameOptionsOnLaunch();
    public SubnetState get_State();
    public void set_State(SubnetState value);
    internal bool IsSetState();
    public string get_SubnetArn();
    public void set_SubnetArn(string value);
    internal bool IsSetSubnetArn();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.SubnetAssociation : object {
    private TransitGatewayMulitcastDomainAssociationState _state;
    private string _subnetId;
    public TransitGatewayMulitcastDomainAssociationState State { get; public set; }
    public string SubnetId { get; public set; }
    public TransitGatewayMulitcastDomainAssociationState get_State();
    public void set_State(TransitGatewayMulitcastDomainAssociationState value);
    internal bool IsSetState();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.SubnetCidrBlockState : object {
    private SubnetCidrBlockStateCode _state;
    private string _statusMessage;
    public SubnetCidrBlockStateCode State { get; public set; }
    public string StatusMessage { get; public set; }
    public SubnetCidrBlockStateCode get_State();
    public void set_State(SubnetCidrBlockStateCode value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.SubnetCidrReservation : object {
    private string _cidr;
    private string _description;
    private string _ownerId;
    private SubnetCidrReservationType _reservationType;
    private string _subnetCidrReservationId;
    private string _subnetId;
    private List`1<Tag> _tags;
    public string Cidr { get; public set; }
    public string Description { get; public set; }
    public string OwnerId { get; public set; }
    public SubnetCidrReservationType ReservationType { get; public set; }
    public string SubnetCidrReservationId { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public SubnetCidrReservationType get_ReservationType();
    public void set_ReservationType(SubnetCidrReservationType value);
    internal bool IsSetReservationType();
    public string get_SubnetCidrReservationId();
    public void set_SubnetCidrReservationId(string value);
    internal bool IsSetSubnetCidrReservationId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.SubnetConfiguration : object {
    private string _ipv4;
    private string _ipv6;
    private string _subnetId;
    public string Ipv4 { get; public set; }
    public string Ipv6 { get; public set; }
    public string SubnetId { get; public set; }
    public string get_Ipv4();
    public void set_Ipv4(string value);
    internal bool IsSetIpv4();
    public string get_Ipv6();
    public void set_Ipv6(string value);
    internal bool IsSetIpv6();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.SubnetIpv6CidrBlockAssociation : object {
    private string _associationId;
    private string _ipv6CidrBlock;
    private SubnetCidrBlockState _ipv6CidrBlockState;
    public string AssociationId { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    public SubnetCidrBlockState Ipv6CidrBlockState { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public SubnetCidrBlockState get_Ipv6CidrBlockState();
    public void set_Ipv6CidrBlockState(SubnetCidrBlockState value);
    internal bool IsSetIpv6CidrBlockState();
}
public class Amazon.EC2.Model.Subscription : object {
    private string _destination;
    private MetricType _metric;
    private PeriodType _period;
    private string _source;
    private StatisticType _statistic;
    public string Destination { get; public set; }
    public MetricType Metric { get; public set; }
    public PeriodType Period { get; public set; }
    public string Source { get; public set; }
    public StatisticType Statistic { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public MetricType get_Metric();
    public void set_Metric(MetricType value);
    internal bool IsSetMetric();
    public PeriodType get_Period();
    public void set_Period(PeriodType value);
    internal bool IsSetPeriod();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public StatisticType get_Statistic();
    public void set_Statistic(StatisticType value);
    internal bool IsSetStatistic();
}
public class Amazon.EC2.Model.SuccessfulInstanceCreditSpecificationItem : object {
    private string _instanceId;
    public string InstanceId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.SuccessfulQueuedPurchaseDeletion : object {
    private string _reservedInstancesId;
    public string ReservedInstancesId { get; public set; }
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
}
public class Amazon.EC2.Model.Tag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public Tag(string key, string value);
    public Tag(string key);
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.TagDescription : object {
    private string _key;
    private string _resourceId;
    private ResourceType _resourceType;
    private string _value;
    public string Key { get; public set; }
    public string ResourceId { get; public set; }
    public ResourceType ResourceType { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.TagSpecification : object {
    private ResourceType _resourceType;
    private List`1<Tag> _tags;
    public ResourceType ResourceType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.TargetCapacitySpecification : object {
    private DefaultTargetCapacityType _defaultTargetCapacityType;
    private Nullable`1<int> _onDemandTargetCapacity;
    private Nullable`1<int> _spotTargetCapacity;
    private TargetCapacityUnitType _targetCapacityUnitType;
    private Nullable`1<int> _totalTargetCapacity;
    public DefaultTargetCapacityType DefaultTargetCapacityType { get; public set; }
    public Nullable`1<int> OnDemandTargetCapacity { get; public set; }
    public Nullable`1<int> SpotTargetCapacity { get; public set; }
    public TargetCapacityUnitType TargetCapacityUnitType { get; public set; }
    public Nullable`1<int> TotalTargetCapacity { get; public set; }
    public DefaultTargetCapacityType get_DefaultTargetCapacityType();
    public void set_DefaultTargetCapacityType(DefaultTargetCapacityType value);
    internal bool IsSetDefaultTargetCapacityType();
    public Nullable`1<int> get_OnDemandTargetCapacity();
    public void set_OnDemandTargetCapacity(Nullable`1<int> value);
    internal bool IsSetOnDemandTargetCapacity();
    public Nullable`1<int> get_SpotTargetCapacity();
    public void set_SpotTargetCapacity(Nullable`1<int> value);
    internal bool IsSetSpotTargetCapacity();
    public TargetCapacityUnitType get_TargetCapacityUnitType();
    public void set_TargetCapacityUnitType(TargetCapacityUnitType value);
    internal bool IsSetTargetCapacityUnitType();
    public Nullable`1<int> get_TotalTargetCapacity();
    public void set_TotalTargetCapacity(Nullable`1<int> value);
    internal bool IsSetTotalTargetCapacity();
}
public class Amazon.EC2.Model.TargetCapacitySpecificationRequest : object {
    private DefaultTargetCapacityType _defaultTargetCapacityType;
    private Nullable`1<int> _onDemandTargetCapacity;
    private Nullable`1<int> _spotTargetCapacity;
    private TargetCapacityUnitType _targetCapacityUnitType;
    private Nullable`1<int> _totalTargetCapacity;
    public DefaultTargetCapacityType DefaultTargetCapacityType { get; public set; }
    public Nullable`1<int> OnDemandTargetCapacity { get; public set; }
    public Nullable`1<int> SpotTargetCapacity { get; public set; }
    public TargetCapacityUnitType TargetCapacityUnitType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TotalTargetCapacity { get; public set; }
    public DefaultTargetCapacityType get_DefaultTargetCapacityType();
    public void set_DefaultTargetCapacityType(DefaultTargetCapacityType value);
    internal bool IsSetDefaultTargetCapacityType();
    public Nullable`1<int> get_OnDemandTargetCapacity();
    public void set_OnDemandTargetCapacity(Nullable`1<int> value);
    internal bool IsSetOnDemandTargetCapacity();
    public Nullable`1<int> get_SpotTargetCapacity();
    public void set_SpotTargetCapacity(Nullable`1<int> value);
    internal bool IsSetSpotTargetCapacity();
    public TargetCapacityUnitType get_TargetCapacityUnitType();
    public void set_TargetCapacityUnitType(TargetCapacityUnitType value);
    internal bool IsSetTargetCapacityUnitType();
    public Nullable`1<int> get_TotalTargetCapacity();
    public void set_TotalTargetCapacity(Nullable`1<int> value);
    internal bool IsSetTotalTargetCapacity();
}
public class Amazon.EC2.Model.TargetConfiguration : object {
    private Nullable`1<int> _instanceCount;
    private string _offeringId;
    public Nullable`1<int> InstanceCount { get; public set; }
    public string OfferingId { get; public set; }
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public string get_OfferingId();
    public void set_OfferingId(string value);
    internal bool IsSetOfferingId();
}
public class Amazon.EC2.Model.TargetConfigurationRequest : object {
    private Nullable`1<int> _instanceCount;
    private string _offeringId;
    public Nullable`1<int> InstanceCount { get; public set; }
    [AWSPropertyAttribute]
public string OfferingId { get; public set; }
    public Nullable`1<int> get_InstanceCount();
    public void set_InstanceCount(Nullable`1<int> value);
    internal bool IsSetInstanceCount();
    public string get_OfferingId();
    public void set_OfferingId(string value);
    internal bool IsSetOfferingId();
}
public class Amazon.EC2.Model.TargetGroup : object {
    private string _arn;
    public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.EC2.Model.TargetGroupsConfig : object {
    private List`1<TargetGroup> _targetGroups;
    [AWSPropertyAttribute]
public List`1<TargetGroup> TargetGroups { get; public set; }
    public List`1<TargetGroup> get_TargetGroups();
    public void set_TargetGroups(List`1<TargetGroup> value);
    internal bool IsSetTargetGroups();
}
public class Amazon.EC2.Model.TargetNetwork : object {
    private string _associationId;
    private string _clientVpnEndpointId;
    private List`1<string> _securityGroups;
    private AssociationStatus _status;
    private string _targetNetworkId;
    private string _vpcId;
    public string AssociationId { get; public set; }
    public string ClientVpnEndpointId { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public AssociationStatus Status { get; public set; }
    public string TargetNetworkId { get; public set; }
    public string VpcId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public AssociationStatus get_Status();
    public void set_Status(AssociationStatus value);
    internal bool IsSetStatus();
    public string get_TargetNetworkId();
    public void set_TargetNetworkId(string value);
    internal bool IsSetTargetNetworkId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.TargetReservationValue : object {
    private ReservationValue _reservationValue;
    private TargetConfiguration _targetConfiguration;
    public ReservationValue ReservationValue { get; public set; }
    public TargetConfiguration TargetConfiguration { get; public set; }
    public ReservationValue get_ReservationValue();
    public void set_ReservationValue(ReservationValue value);
    internal bool IsSetReservationValue();
    public TargetConfiguration get_TargetConfiguration();
    public void set_TargetConfiguration(TargetConfiguration value);
    internal bool IsSetTargetConfiguration();
}
public class Amazon.EC2.Model.TerminateClientVpnConnectionsRequest : AmazonEC2Request {
    private string _clientVpnEndpointId;
    private string _connectionId;
    private string _username;
    [AWSPropertyAttribute]
public string ClientVpnEndpointId { get; public set; }
    public string ConnectionId { get; public set; }
    public string Username { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.EC2.Model.TerminateClientVpnConnectionsResponse : AmazonWebServiceResponse {
    private string _clientVpnEndpointId;
    private List`1<TerminateConnectionStatus> _connectionStatuses;
    private string _username;
    public string ClientVpnEndpointId { get; public set; }
    public List`1<TerminateConnectionStatus> ConnectionStatuses { get; public set; }
    public string Username { get; public set; }
    public string get_ClientVpnEndpointId();
    public void set_ClientVpnEndpointId(string value);
    internal bool IsSetClientVpnEndpointId();
    public List`1<TerminateConnectionStatus> get_ConnectionStatuses();
    public void set_ConnectionStatuses(List`1<TerminateConnectionStatus> value);
    internal bool IsSetConnectionStatuses();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.EC2.Model.TerminateConnectionStatus : object {
    private string _connectionId;
    private ClientVpnConnectionStatus _currentStatus;
    private ClientVpnConnectionStatus _previousStatus;
    public string ConnectionId { get; public set; }
    public ClientVpnConnectionStatus CurrentStatus { get; public set; }
    public ClientVpnConnectionStatus PreviousStatus { get; public set; }
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public ClientVpnConnectionStatus get_CurrentStatus();
    public void set_CurrentStatus(ClientVpnConnectionStatus value);
    internal bool IsSetCurrentStatus();
    public ClientVpnConnectionStatus get_PreviousStatus();
    public void set_PreviousStatus(ClientVpnConnectionStatus value);
    internal bool IsSetPreviousStatus();
}
public class Amazon.EC2.Model.TerminateInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    public TerminateInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.TerminateInstancesResponse : AmazonWebServiceResponse {
    private List`1<InstanceStateChange> _terminatingInstances;
    public List`1<InstanceStateChange> TerminatingInstances { get; public set; }
    public List`1<InstanceStateChange> get_TerminatingInstances();
    public void set_TerminatingInstances(List`1<InstanceStateChange> value);
    internal bool IsSetTerminatingInstances();
}
public class Amazon.EC2.Model.ThroughResourcesStatement : object {
    private ResourceStatement _resourceStatement;
    public ResourceStatement ResourceStatement { get; public set; }
    public ResourceStatement get_ResourceStatement();
    public void set_ResourceStatement(ResourceStatement value);
    internal bool IsSetResourceStatement();
}
public class Amazon.EC2.Model.ThroughResourcesStatementRequest : object {
    private ResourceStatementRequest _resourceStatement;
    public ResourceStatementRequest ResourceStatement { get; public set; }
    public ResourceStatementRequest get_ResourceStatement();
    public void set_ResourceStatement(ResourceStatementRequest value);
    internal bool IsSetResourceStatement();
}
public class Amazon.EC2.Model.TotalLocalStorageGB : object {
    private Nullable`1<double> _max;
    private Nullable`1<double> _min;
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<double> get_Max();
    public void set_Max(Nullable`1<double> value);
    internal bool IsSetMax();
    public Nullable`1<double> get_Min();
    public void set_Min(Nullable`1<double> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.TotalLocalStorageGBRequest : object {
    private Nullable`1<double> _max;
    private Nullable`1<double> _min;
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<double> get_Max();
    public void set_Max(Nullable`1<double> value);
    internal bool IsSetMax();
    public Nullable`1<double> get_Min();
    public void set_Min(Nullable`1<double> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.TrafficMirrorFilter : object {
    private string _description;
    private List`1<TrafficMirrorFilterRule> _egressFilterRules;
    private List`1<TrafficMirrorFilterRule> _ingressFilterRules;
    private List`1<string> _networkServices;
    private List`1<Tag> _tags;
    private string _trafficMirrorFilterId;
    public string Description { get; public set; }
    public List`1<TrafficMirrorFilterRule> EgressFilterRules { get; public set; }
    public List`1<TrafficMirrorFilterRule> IngressFilterRules { get; public set; }
    public List`1<string> NetworkServices { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TrafficMirrorFilterId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<TrafficMirrorFilterRule> get_EgressFilterRules();
    public void set_EgressFilterRules(List`1<TrafficMirrorFilterRule> value);
    internal bool IsSetEgressFilterRules();
    public List`1<TrafficMirrorFilterRule> get_IngressFilterRules();
    public void set_IngressFilterRules(List`1<TrafficMirrorFilterRule> value);
    internal bool IsSetIngressFilterRules();
    public List`1<string> get_NetworkServices();
    public void set_NetworkServices(List`1<string> value);
    internal bool IsSetNetworkServices();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
}
public class Amazon.EC2.Model.TrafficMirrorFilterRule : object {
    private string _description;
    private string _destinationCidrBlock;
    private TrafficMirrorPortRange _destinationPortRange;
    private Nullable`1<int> _protocol;
    private TrafficMirrorRuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    private string _sourceCidrBlock;
    private TrafficMirrorPortRange _sourcePortRange;
    private List`1<Tag> _tags;
    private TrafficDirection _trafficDirection;
    private string _trafficMirrorFilterId;
    private string _trafficMirrorFilterRuleId;
    public string Description { get; public set; }
    public string DestinationCidrBlock { get; public set; }
    public TrafficMirrorPortRange DestinationPortRange { get; public set; }
    public Nullable`1<int> Protocol { get; public set; }
    public TrafficMirrorRuleAction RuleAction { get; public set; }
    public Nullable`1<int> RuleNumber { get; public set; }
    public string SourceCidrBlock { get; public set; }
    public TrafficMirrorPortRange SourcePortRange { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public TrafficDirection TrafficDirection { get; public set; }
    public string TrafficMirrorFilterId { get; public set; }
    public string TrafficMirrorFilterRuleId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public TrafficMirrorPortRange get_DestinationPortRange();
    public void set_DestinationPortRange(TrafficMirrorPortRange value);
    internal bool IsSetDestinationPortRange();
    public Nullable`1<int> get_Protocol();
    public void set_Protocol(Nullable`1<int> value);
    internal bool IsSetProtocol();
    public TrafficMirrorRuleAction get_RuleAction();
    public void set_RuleAction(TrafficMirrorRuleAction value);
    internal bool IsSetRuleAction();
    public Nullable`1<int> get_RuleNumber();
    public void set_RuleNumber(Nullable`1<int> value);
    internal bool IsSetRuleNumber();
    public string get_SourceCidrBlock();
    public void set_SourceCidrBlock(string value);
    internal bool IsSetSourceCidrBlock();
    public TrafficMirrorPortRange get_SourcePortRange();
    public void set_SourcePortRange(TrafficMirrorPortRange value);
    internal bool IsSetSourcePortRange();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TrafficDirection get_TrafficDirection();
    public void set_TrafficDirection(TrafficDirection value);
    internal bool IsSetTrafficDirection();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
    public string get_TrafficMirrorFilterRuleId();
    public void set_TrafficMirrorFilterRuleId(string value);
    internal bool IsSetTrafficMirrorFilterRuleId();
}
public class Amazon.EC2.Model.TrafficMirrorPortRange : object {
    private Nullable`1<int> _fromPort;
    private Nullable`1<int> _toPort;
    public Nullable`1<int> FromPort { get; public set; }
    public Nullable`1<int> ToPort { get; public set; }
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
}
public class Amazon.EC2.Model.TrafficMirrorPortRangeRequest : object {
    private Nullable`1<int> _fromPort;
    private Nullable`1<int> _toPort;
    public Nullable`1<int> FromPort { get; public set; }
    public Nullable`1<int> ToPort { get; public set; }
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
}
public class Amazon.EC2.Model.TrafficMirrorSession : object {
    private string _description;
    private string _networkInterfaceId;
    private string _ownerId;
    private Nullable`1<int> _packetLength;
    private Nullable`1<int> _sessionNumber;
    private List`1<Tag> _tags;
    private string _trafficMirrorFilterId;
    private string _trafficMirrorSessionId;
    private string _trafficMirrorTargetId;
    private Nullable`1<int> _virtualNetworkId;
    public string Description { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string OwnerId { get; public set; }
    public Nullable`1<int> PacketLength { get; public set; }
    public Nullable`1<int> SessionNumber { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TrafficMirrorFilterId { get; public set; }
    public string TrafficMirrorSessionId { get; public set; }
    public string TrafficMirrorTargetId { get; public set; }
    public Nullable`1<int> VirtualNetworkId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public Nullable`1<int> get_PacketLength();
    public void set_PacketLength(Nullable`1<int> value);
    internal bool IsSetPacketLength();
    public Nullable`1<int> get_SessionNumber();
    public void set_SessionNumber(Nullable`1<int> value);
    internal bool IsSetSessionNumber();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TrafficMirrorFilterId();
    public void set_TrafficMirrorFilterId(string value);
    internal bool IsSetTrafficMirrorFilterId();
    public string get_TrafficMirrorSessionId();
    public void set_TrafficMirrorSessionId(string value);
    internal bool IsSetTrafficMirrorSessionId();
    public string get_TrafficMirrorTargetId();
    public void set_TrafficMirrorTargetId(string value);
    internal bool IsSetTrafficMirrorTargetId();
    public Nullable`1<int> get_VirtualNetworkId();
    public void set_VirtualNetworkId(Nullable`1<int> value);
    internal bool IsSetVirtualNetworkId();
}
public class Amazon.EC2.Model.TrafficMirrorTarget : object {
    private string _description;
    private string _gatewayLoadBalancerEndpointId;
    private string _networkInterfaceId;
    private string _networkLoadBalancerArn;
    private string _ownerId;
    private List`1<Tag> _tags;
    private string _trafficMirrorTargetId;
    private TrafficMirrorTargetType _type;
    public string Description { get; public set; }
    public string GatewayLoadBalancerEndpointId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string NetworkLoadBalancerArn { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TrafficMirrorTargetId { get; public set; }
    public TrafficMirrorTargetType Type { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GatewayLoadBalancerEndpointId();
    public void set_GatewayLoadBalancerEndpointId(string value);
    internal bool IsSetGatewayLoadBalancerEndpointId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_NetworkLoadBalancerArn();
    public void set_NetworkLoadBalancerArn(string value);
    internal bool IsSetNetworkLoadBalancerArn();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TrafficMirrorTargetId();
    public void set_TrafficMirrorTargetId(string value);
    internal bool IsSetTrafficMirrorTargetId();
    public TrafficMirrorTargetType get_Type();
    public void set_Type(TrafficMirrorTargetType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.TransitGateway : object {
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private TransitGatewayOptions _options;
    private string _ownerId;
    private TransitGatewayState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayArn;
    private string _transitGatewayId;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string Description { get; public set; }
    public TransitGatewayOptions Options { get; public set; }
    public string OwnerId { get; public set; }
    public TransitGatewayState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayArn { get; public set; }
    public string TransitGatewayId { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public TransitGatewayOptions get_Options();
    public void set_Options(TransitGatewayOptions value);
    internal bool IsSetOptions();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public TransitGatewayState get_State();
    public void set_State(TransitGatewayState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayArn();
    public void set_TransitGatewayArn(string value);
    internal bool IsSetTransitGatewayArn();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
}
public class Amazon.EC2.Model.TransitGatewayAssociation : object {
    private string _resourceId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private TransitGatewayAssociationState _state;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableId;
    public string ResourceId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public TransitGatewayAssociationState State { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayRouteTableId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public TransitGatewayAssociationState get_State();
    public void set_State(TransitGatewayAssociationState value);
    internal bool IsSetState();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayAttachment : object {
    private TransitGatewayAttachmentAssociation _association;
    private Nullable`1<DateTime> _creationTime;
    private string _resourceId;
    private string _resourceOwnerId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private TransitGatewayAttachmentState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayId;
    private string _transitGatewayOwnerId;
    public TransitGatewayAttachmentAssociation Association { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceOwnerId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public TransitGatewayAttachmentState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string TransitGatewayOwnerId { get; public set; }
    public TransitGatewayAttachmentAssociation get_Association();
    public void set_Association(TransitGatewayAttachmentAssociation value);
    internal bool IsSetAssociation();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwnerId();
    public void set_ResourceOwnerId(string value);
    internal bool IsSetResourceOwnerId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public TransitGatewayAttachmentState get_State();
    public void set_State(TransitGatewayAttachmentState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_TransitGatewayOwnerId();
    public void set_TransitGatewayOwnerId(string value);
    internal bool IsSetTransitGatewayOwnerId();
}
public class Amazon.EC2.Model.TransitGatewayAttachmentAssociation : object {
    private TransitGatewayAssociationState _state;
    private string _transitGatewayRouteTableId;
    public TransitGatewayAssociationState State { get; public set; }
    public string TransitGatewayRouteTableId { get; public set; }
    public TransitGatewayAssociationState get_State();
    public void set_State(TransitGatewayAssociationState value);
    internal bool IsSetState();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayAttachmentBgpConfiguration : object {
    private BgpStatus _bgpStatus;
    private string _peerAddress;
    private Nullable`1<long> _peerAsn;
    private string _transitGatewayAddress;
    private Nullable`1<long> _transitGatewayAsn;
    public BgpStatus BgpStatus { get; public set; }
    public string PeerAddress { get; public set; }
    public Nullable`1<long> PeerAsn { get; public set; }
    public string TransitGatewayAddress { get; public set; }
    public Nullable`1<long> TransitGatewayAsn { get; public set; }
    public BgpStatus get_BgpStatus();
    public void set_BgpStatus(BgpStatus value);
    internal bool IsSetBgpStatus();
    public string get_PeerAddress();
    public void set_PeerAddress(string value);
    internal bool IsSetPeerAddress();
    public Nullable`1<long> get_PeerAsn();
    public void set_PeerAsn(Nullable`1<long> value);
    internal bool IsSetPeerAsn();
    public string get_TransitGatewayAddress();
    public void set_TransitGatewayAddress(string value);
    internal bool IsSetTransitGatewayAddress();
    public Nullable`1<long> get_TransitGatewayAsn();
    public void set_TransitGatewayAsn(Nullable`1<long> value);
    internal bool IsSetTransitGatewayAsn();
}
public class Amazon.EC2.Model.TransitGatewayAttachmentPropagation : object {
    private TransitGatewayPropagationState _state;
    private string _transitGatewayRouteTableId;
    public TransitGatewayPropagationState State { get; public set; }
    public string TransitGatewayRouteTableId { get; public set; }
    public TransitGatewayPropagationState get_State();
    public void set_State(TransitGatewayPropagationState value);
    internal bool IsSetState();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayConnect : object {
    private Nullable`1<DateTime> _creationTime;
    private TransitGatewayConnectOptions _options;
    private TransitGatewayAttachmentState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayId;
    private string _transportTransitGatewayAttachmentId;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public TransitGatewayConnectOptions Options { get; public set; }
    public TransitGatewayAttachmentState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string TransportTransitGatewayAttachmentId { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public TransitGatewayConnectOptions get_Options();
    public void set_Options(TransitGatewayConnectOptions value);
    internal bool IsSetOptions();
    public TransitGatewayAttachmentState get_State();
    public void set_State(TransitGatewayAttachmentState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_TransportTransitGatewayAttachmentId();
    public void set_TransportTransitGatewayAttachmentId(string value);
    internal bool IsSetTransportTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.TransitGatewayConnectOptions : object {
    private ProtocolValue _protocol;
    public ProtocolValue Protocol { get; public set; }
    public ProtocolValue get_Protocol();
    public void set_Protocol(ProtocolValue value);
    internal bool IsSetProtocol();
}
public class Amazon.EC2.Model.TransitGatewayConnectPeer : object {
    private TransitGatewayConnectPeerConfiguration _connectPeerConfiguration;
    private Nullable`1<DateTime> _creationTime;
    private TransitGatewayConnectPeerState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayConnectPeerId;
    public TransitGatewayConnectPeerConfiguration ConnectPeerConfiguration { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public TransitGatewayConnectPeerState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayConnectPeerId { get; public set; }
    public TransitGatewayConnectPeerConfiguration get_ConnectPeerConfiguration();
    public void set_ConnectPeerConfiguration(TransitGatewayConnectPeerConfiguration value);
    internal bool IsSetConnectPeerConfiguration();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public TransitGatewayConnectPeerState get_State();
    public void set_State(TransitGatewayConnectPeerState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayConnectPeerId();
    public void set_TransitGatewayConnectPeerId(string value);
    internal bool IsSetTransitGatewayConnectPeerId();
}
public class Amazon.EC2.Model.TransitGatewayConnectPeerConfiguration : object {
    private List`1<TransitGatewayAttachmentBgpConfiguration> _bgpConfigurations;
    private List`1<string> _insideCidrBlocks;
    private string _peerAddress;
    private ProtocolValue _protocol;
    private string _transitGatewayAddress;
    public List`1<TransitGatewayAttachmentBgpConfiguration> BgpConfigurations { get; public set; }
    public List`1<string> InsideCidrBlocks { get; public set; }
    public string PeerAddress { get; public set; }
    public ProtocolValue Protocol { get; public set; }
    public string TransitGatewayAddress { get; public set; }
    public List`1<TransitGatewayAttachmentBgpConfiguration> get_BgpConfigurations();
    public void set_BgpConfigurations(List`1<TransitGatewayAttachmentBgpConfiguration> value);
    internal bool IsSetBgpConfigurations();
    public List`1<string> get_InsideCidrBlocks();
    public void set_InsideCidrBlocks(List`1<string> value);
    internal bool IsSetInsideCidrBlocks();
    public string get_PeerAddress();
    public void set_PeerAddress(string value);
    internal bool IsSetPeerAddress();
    public ProtocolValue get_Protocol();
    public void set_Protocol(ProtocolValue value);
    internal bool IsSetProtocol();
    public string get_TransitGatewayAddress();
    public void set_TransitGatewayAddress(string value);
    internal bool IsSetTransitGatewayAddress();
}
public class Amazon.EC2.Model.TransitGatewayConnectRequestBgpOptions : object {
    private Nullable`1<long> _peerAsn;
    public Nullable`1<long> PeerAsn { get; public set; }
    public Nullable`1<long> get_PeerAsn();
    public void set_PeerAsn(Nullable`1<long> value);
    internal bool IsSetPeerAsn();
}
public class Amazon.EC2.Model.TransitGatewayMulticastDeregisteredGroupMembers : object {
    private List`1<string> _deregisteredNetworkInterfaceIds;
    private string _groupIpAddress;
    private string _transitGatewayMulticastDomainId;
    public List`1<string> DeregisteredNetworkInterfaceIds { get; public set; }
    public string GroupIpAddress { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<string> get_DeregisteredNetworkInterfaceIds();
    public void set_DeregisteredNetworkInterfaceIds(List`1<string> value);
    internal bool IsSetDeregisteredNetworkInterfaceIds();
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.TransitGatewayMulticastDeregisteredGroupSources : object {
    private List`1<string> _deregisteredNetworkInterfaceIds;
    private string _groupIpAddress;
    private string _transitGatewayMulticastDomainId;
    public List`1<string> DeregisteredNetworkInterfaceIds { get; public set; }
    public string GroupIpAddress { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public List`1<string> get_DeregisteredNetworkInterfaceIds();
    public void set_DeregisteredNetworkInterfaceIds(List`1<string> value);
    internal bool IsSetDeregisteredNetworkInterfaceIds();
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.TransitGatewayMulticastDomain : object {
    private Nullable`1<DateTime> _creationTime;
    private TransitGatewayMulticastDomainOptions _options;
    private string _ownerId;
    private TransitGatewayMulticastDomainState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayId;
    private string _transitGatewayMulticastDomainArn;
    private string _transitGatewayMulticastDomainId;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public TransitGatewayMulticastDomainOptions Options { get; public set; }
    public string OwnerId { get; public set; }
    public TransitGatewayMulticastDomainState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string TransitGatewayMulticastDomainArn { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public TransitGatewayMulticastDomainOptions get_Options();
    public void set_Options(TransitGatewayMulticastDomainOptions value);
    internal bool IsSetOptions();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public TransitGatewayMulticastDomainState get_State();
    public void set_State(TransitGatewayMulticastDomainState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_TransitGatewayMulticastDomainArn();
    public void set_TransitGatewayMulticastDomainArn(string value);
    internal bool IsSetTransitGatewayMulticastDomainArn();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.TransitGatewayMulticastDomainAssociation : object {
    private string _resourceId;
    private string _resourceOwnerId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private SubnetAssociation _subnet;
    private string _transitGatewayAttachmentId;
    public string ResourceId { get; public set; }
    public string ResourceOwnerId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public SubnetAssociation Subnet { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwnerId();
    public void set_ResourceOwnerId(string value);
    internal bool IsSetResourceOwnerId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public SubnetAssociation get_Subnet();
    public void set_Subnet(SubnetAssociation value);
    internal bool IsSetSubnet();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.TransitGatewayMulticastDomainAssociations : object {
    private string _resourceId;
    private string _resourceOwnerId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private List`1<SubnetAssociation> _subnets;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayMulticastDomainId;
    public string ResourceId { get; public set; }
    public string ResourceOwnerId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public List`1<SubnetAssociation> Subnets { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwnerId();
    public void set_ResourceOwnerId(string value);
    internal bool IsSetResourceOwnerId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public List`1<SubnetAssociation> get_Subnets();
    public void set_Subnets(List`1<SubnetAssociation> value);
    internal bool IsSetSubnets();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.TransitGatewayMulticastDomainOptions : object {
    private AutoAcceptSharedAssociationsValue _autoAcceptSharedAssociations;
    private Igmpv2SupportValue _igmpv2Support;
    private StaticSourcesSupportValue _staticSourcesSupport;
    public AutoAcceptSharedAssociationsValue AutoAcceptSharedAssociations { get; public set; }
    public Igmpv2SupportValue Igmpv2Support { get; public set; }
    public StaticSourcesSupportValue StaticSourcesSupport { get; public set; }
    public AutoAcceptSharedAssociationsValue get_AutoAcceptSharedAssociations();
    public void set_AutoAcceptSharedAssociations(AutoAcceptSharedAssociationsValue value);
    internal bool IsSetAutoAcceptSharedAssociations();
    public Igmpv2SupportValue get_Igmpv2Support();
    public void set_Igmpv2Support(Igmpv2SupportValue value);
    internal bool IsSetIgmpv2Support();
    public StaticSourcesSupportValue get_StaticSourcesSupport();
    public void set_StaticSourcesSupport(StaticSourcesSupportValue value);
    internal bool IsSetStaticSourcesSupport();
}
public class Amazon.EC2.Model.TransitGatewayMulticastGroup : object {
    private string _groupIpAddress;
    private Nullable`1<bool> _groupMember;
    private Nullable`1<bool> _groupSource;
    private MembershipType _memberType;
    private string _networkInterfaceId;
    private string _resourceId;
    private string _resourceOwnerId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private MembershipType _sourceType;
    private string _subnetId;
    private string _transitGatewayAttachmentId;
    public string GroupIpAddress { get; public set; }
    public Nullable`1<bool> GroupMember { get; public set; }
    public Nullable`1<bool> GroupSource { get; public set; }
    public MembershipType MemberType { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceOwnerId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public MembershipType SourceType { get; public set; }
    public string SubnetId { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public Nullable`1<bool> get_GroupMember();
    public void set_GroupMember(Nullable`1<bool> value);
    internal bool IsSetGroupMember();
    public Nullable`1<bool> get_GroupSource();
    public void set_GroupSource(Nullable`1<bool> value);
    internal bool IsSetGroupSource();
    public MembershipType get_MemberType();
    public void set_MemberType(MembershipType value);
    internal bool IsSetMemberType();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceOwnerId();
    public void set_ResourceOwnerId(string value);
    internal bool IsSetResourceOwnerId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public MembershipType get_SourceType();
    public void set_SourceType(MembershipType value);
    internal bool IsSetSourceType();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.TransitGatewayMulticastRegisteredGroupMembers : object {
    private string _groupIpAddress;
    private List`1<string> _registeredNetworkInterfaceIds;
    private string _transitGatewayMulticastDomainId;
    public string GroupIpAddress { get; public set; }
    public List`1<string> RegisteredNetworkInterfaceIds { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public List`1<string> get_RegisteredNetworkInterfaceIds();
    public void set_RegisteredNetworkInterfaceIds(List`1<string> value);
    internal bool IsSetRegisteredNetworkInterfaceIds();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.TransitGatewayMulticastRegisteredGroupSources : object {
    private string _groupIpAddress;
    private List`1<string> _registeredNetworkInterfaceIds;
    private string _transitGatewayMulticastDomainId;
    public string GroupIpAddress { get; public set; }
    public List`1<string> RegisteredNetworkInterfaceIds { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_GroupIpAddress();
    public void set_GroupIpAddress(string value);
    internal bool IsSetGroupIpAddress();
    public List`1<string> get_RegisteredNetworkInterfaceIds();
    public void set_RegisteredNetworkInterfaceIds(List`1<string> value);
    internal bool IsSetRegisteredNetworkInterfaceIds();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.EC2.Model.TransitGatewayOptions : object {
    private Nullable`1<long> _amazonSideAsn;
    private string _associationDefaultRouteTableId;
    private AutoAcceptSharedAttachmentsValue _autoAcceptSharedAttachments;
    private DefaultRouteTableAssociationValue _defaultRouteTableAssociation;
    private DefaultRouteTablePropagationValue _defaultRouteTablePropagation;
    private DnsSupportValue _dnsSupport;
    private MulticastSupportValue _multicastSupport;
    private string _propagationDefaultRouteTableId;
    private SecurityGroupReferencingSupportValue _securityGroupReferencingSupport;
    private List`1<string> _transitGatewayCidrBlocks;
    private VpnEcmpSupportValue _vpnEcmpSupport;
    public Nullable`1<long> AmazonSideAsn { get; public set; }
    public string AssociationDefaultRouteTableId { get; public set; }
    public AutoAcceptSharedAttachmentsValue AutoAcceptSharedAttachments { get; public set; }
    public DefaultRouteTableAssociationValue DefaultRouteTableAssociation { get; public set; }
    public DefaultRouteTablePropagationValue DefaultRouteTablePropagation { get; public set; }
    public DnsSupportValue DnsSupport { get; public set; }
    public MulticastSupportValue MulticastSupport { get; public set; }
    public string PropagationDefaultRouteTableId { get; public set; }
    public SecurityGroupReferencingSupportValue SecurityGroupReferencingSupport { get; public set; }
    public List`1<string> TransitGatewayCidrBlocks { get; public set; }
    public VpnEcmpSupportValue VpnEcmpSupport { get; public set; }
    public Nullable`1<long> get_AmazonSideAsn();
    public void set_AmazonSideAsn(Nullable`1<long> value);
    internal bool IsSetAmazonSideAsn();
    public string get_AssociationDefaultRouteTableId();
    public void set_AssociationDefaultRouteTableId(string value);
    internal bool IsSetAssociationDefaultRouteTableId();
    public AutoAcceptSharedAttachmentsValue get_AutoAcceptSharedAttachments();
    public void set_AutoAcceptSharedAttachments(AutoAcceptSharedAttachmentsValue value);
    internal bool IsSetAutoAcceptSharedAttachments();
    public DefaultRouteTableAssociationValue get_DefaultRouteTableAssociation();
    public void set_DefaultRouteTableAssociation(DefaultRouteTableAssociationValue value);
    internal bool IsSetDefaultRouteTableAssociation();
    public DefaultRouteTablePropagationValue get_DefaultRouteTablePropagation();
    public void set_DefaultRouteTablePropagation(DefaultRouteTablePropagationValue value);
    internal bool IsSetDefaultRouteTablePropagation();
    public DnsSupportValue get_DnsSupport();
    public void set_DnsSupport(DnsSupportValue value);
    internal bool IsSetDnsSupport();
    public MulticastSupportValue get_MulticastSupport();
    public void set_MulticastSupport(MulticastSupportValue value);
    internal bool IsSetMulticastSupport();
    public string get_PropagationDefaultRouteTableId();
    public void set_PropagationDefaultRouteTableId(string value);
    internal bool IsSetPropagationDefaultRouteTableId();
    public SecurityGroupReferencingSupportValue get_SecurityGroupReferencingSupport();
    public void set_SecurityGroupReferencingSupport(SecurityGroupReferencingSupportValue value);
    internal bool IsSetSecurityGroupReferencingSupport();
    public List`1<string> get_TransitGatewayCidrBlocks();
    public void set_TransitGatewayCidrBlocks(List`1<string> value);
    internal bool IsSetTransitGatewayCidrBlocks();
    public VpnEcmpSupportValue get_VpnEcmpSupport();
    public void set_VpnEcmpSupport(VpnEcmpSupportValue value);
    internal bool IsSetVpnEcmpSupport();
}
public class Amazon.EC2.Model.TransitGatewayPeeringAttachment : object {
    private PeeringTgwInfo _accepterTgwInfo;
    private string _accepterTransitGatewayAttachmentId;
    private Nullable`1<DateTime> _creationTime;
    private TransitGatewayPeeringAttachmentOptions _options;
    private PeeringTgwInfo _requesterTgwInfo;
    private TransitGatewayAttachmentState _state;
    private PeeringAttachmentStatus _status;
    private List`1<Tag> _tags;
    private string _transitGatewayAttachmentId;
    public PeeringTgwInfo AccepterTgwInfo { get; public set; }
    public string AccepterTransitGatewayAttachmentId { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public TransitGatewayPeeringAttachmentOptions Options { get; public set; }
    public PeeringTgwInfo RequesterTgwInfo { get; public set; }
    public TransitGatewayAttachmentState State { get; public set; }
    public PeeringAttachmentStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public PeeringTgwInfo get_AccepterTgwInfo();
    public void set_AccepterTgwInfo(PeeringTgwInfo value);
    internal bool IsSetAccepterTgwInfo();
    public string get_AccepterTransitGatewayAttachmentId();
    public void set_AccepterTransitGatewayAttachmentId(string value);
    internal bool IsSetAccepterTransitGatewayAttachmentId();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public TransitGatewayPeeringAttachmentOptions get_Options();
    public void set_Options(TransitGatewayPeeringAttachmentOptions value);
    internal bool IsSetOptions();
    public PeeringTgwInfo get_RequesterTgwInfo();
    public void set_RequesterTgwInfo(PeeringTgwInfo value);
    internal bool IsSetRequesterTgwInfo();
    public TransitGatewayAttachmentState get_State();
    public void set_State(TransitGatewayAttachmentState value);
    internal bool IsSetState();
    public PeeringAttachmentStatus get_Status();
    public void set_Status(PeeringAttachmentStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.TransitGatewayPeeringAttachmentOptions : object {
    private DynamicRoutingValue _dynamicRouting;
    public DynamicRoutingValue DynamicRouting { get; public set; }
    public DynamicRoutingValue get_DynamicRouting();
    public void set_DynamicRouting(DynamicRoutingValue value);
    internal bool IsSetDynamicRouting();
}
public class Amazon.EC2.Model.TransitGatewayPolicyRule : object {
    private string _destinationCidrBlock;
    private string _destinationPortRange;
    private TransitGatewayPolicyRuleMetaData _metaData;
    private string _protocol;
    private string _sourceCidrBlock;
    private string _sourcePortRange;
    public string DestinationCidrBlock { get; public set; }
    public string DestinationPortRange { get; public set; }
    public TransitGatewayPolicyRuleMetaData MetaData { get; public set; }
    public string Protocol { get; public set; }
    public string SourceCidrBlock { get; public set; }
    public string SourcePortRange { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationPortRange();
    public void set_DestinationPortRange(string value);
    internal bool IsSetDestinationPortRange();
    public TransitGatewayPolicyRuleMetaData get_MetaData();
    public void set_MetaData(TransitGatewayPolicyRuleMetaData value);
    internal bool IsSetMetaData();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_SourceCidrBlock();
    public void set_SourceCidrBlock(string value);
    internal bool IsSetSourceCidrBlock();
    public string get_SourcePortRange();
    public void set_SourcePortRange(string value);
    internal bool IsSetSourcePortRange();
}
public class Amazon.EC2.Model.TransitGatewayPolicyRuleMetaData : object {
    private string _metaDataKey;
    private string _metaDataValue;
    public string MetaDataKey { get; public set; }
    public string MetaDataValue { get; public set; }
    public string get_MetaDataKey();
    public void set_MetaDataKey(string value);
    internal bool IsSetMetaDataKey();
    public string get_MetaDataValue();
    public void set_MetaDataValue(string value);
    internal bool IsSetMetaDataValue();
}
public class Amazon.EC2.Model.TransitGatewayPolicyTable : object {
    private Nullable`1<DateTime> _creationTime;
    private TransitGatewayPolicyTableState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayId;
    private string _transitGatewayPolicyTableId;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public TransitGatewayPolicyTableState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string TransitGatewayPolicyTableId { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public TransitGatewayPolicyTableState get_State();
    public void set_State(TransitGatewayPolicyTableState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_TransitGatewayPolicyTableId();
    public void set_TransitGatewayPolicyTableId(string value);
    internal bool IsSetTransitGatewayPolicyTableId();
}
public class Amazon.EC2.Model.TransitGatewayPolicyTableAssociation : object {
    private string _resourceId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private TransitGatewayAssociationState _state;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayPolicyTableId;
    public string ResourceId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public TransitGatewayAssociationState State { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayPolicyTableId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public TransitGatewayAssociationState get_State();
    public void set_State(TransitGatewayAssociationState value);
    internal bool IsSetState();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayPolicyTableId();
    public void set_TransitGatewayPolicyTableId(string value);
    internal bool IsSetTransitGatewayPolicyTableId();
}
public class Amazon.EC2.Model.TransitGatewayPolicyTableEntry : object {
    private TransitGatewayPolicyRule _policyRule;
    private string _policyRuleNumber;
    private string _targetRouteTableId;
    public TransitGatewayPolicyRule PolicyRule { get; public set; }
    public string PolicyRuleNumber { get; public set; }
    public string TargetRouteTableId { get; public set; }
    public TransitGatewayPolicyRule get_PolicyRule();
    public void set_PolicyRule(TransitGatewayPolicyRule value);
    internal bool IsSetPolicyRule();
    public string get_PolicyRuleNumber();
    public void set_PolicyRuleNumber(string value);
    internal bool IsSetPolicyRuleNumber();
    public string get_TargetRouteTableId();
    public void set_TargetRouteTableId(string value);
    internal bool IsSetTargetRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayPrefixListAttachment : object {
    private string _resourceId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private string _transitGatewayAttachmentId;
    public string ResourceId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.TransitGatewayPrefixListReference : object {
    private Nullable`1<bool> _blackhole;
    private string _prefixListId;
    private string _prefixListOwnerId;
    private TransitGatewayPrefixListReferenceState _state;
    private TransitGatewayPrefixListAttachment _transitGatewayAttachment;
    private string _transitGatewayRouteTableId;
    public Nullable`1<bool> Blackhole { get; public set; }
    public string PrefixListId { get; public set; }
    public string PrefixListOwnerId { get; public set; }
    public TransitGatewayPrefixListReferenceState State { get; public set; }
    public TransitGatewayPrefixListAttachment TransitGatewayAttachment { get; public set; }
    public string TransitGatewayRouteTableId { get; public set; }
    public Nullable`1<bool> get_Blackhole();
    public void set_Blackhole(Nullable`1<bool> value);
    internal bool IsSetBlackhole();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_PrefixListOwnerId();
    public void set_PrefixListOwnerId(string value);
    internal bool IsSetPrefixListOwnerId();
    public TransitGatewayPrefixListReferenceState get_State();
    public void set_State(TransitGatewayPrefixListReferenceState value);
    internal bool IsSetState();
    public TransitGatewayPrefixListAttachment get_TransitGatewayAttachment();
    public void set_TransitGatewayAttachment(TransitGatewayPrefixListAttachment value);
    internal bool IsSetTransitGatewayAttachment();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayPropagation : object {
    private string _resourceId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private TransitGatewayPropagationState _state;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableAnnouncementId;
    private string _transitGatewayRouteTableId;
    public string ResourceId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public TransitGatewayPropagationState State { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayRouteTableAnnouncementId { get; public set; }
    public string TransitGatewayRouteTableId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public TransitGatewayPropagationState get_State();
    public void set_State(TransitGatewayPropagationState value);
    internal bool IsSetState();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableAnnouncementId();
    public void set_TransitGatewayRouteTableAnnouncementId(string value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayRequestOptions : object {
    private Nullable`1<long> _amazonSideAsn;
    private AutoAcceptSharedAttachmentsValue _autoAcceptSharedAttachments;
    private DefaultRouteTableAssociationValue _defaultRouteTableAssociation;
    private DefaultRouteTablePropagationValue _defaultRouteTablePropagation;
    private DnsSupportValue _dnsSupport;
    private MulticastSupportValue _multicastSupport;
    private SecurityGroupReferencingSupportValue _securityGroupReferencingSupport;
    private List`1<string> _transitGatewayCidrBlocks;
    private VpnEcmpSupportValue _vpnEcmpSupport;
    public Nullable`1<long> AmazonSideAsn { get; public set; }
    public AutoAcceptSharedAttachmentsValue AutoAcceptSharedAttachments { get; public set; }
    public DefaultRouteTableAssociationValue DefaultRouteTableAssociation { get; public set; }
    public DefaultRouteTablePropagationValue DefaultRouteTablePropagation { get; public set; }
    public DnsSupportValue DnsSupport { get; public set; }
    public MulticastSupportValue MulticastSupport { get; public set; }
    public SecurityGroupReferencingSupportValue SecurityGroupReferencingSupport { get; public set; }
    public List`1<string> TransitGatewayCidrBlocks { get; public set; }
    public VpnEcmpSupportValue VpnEcmpSupport { get; public set; }
    public Nullable`1<long> get_AmazonSideAsn();
    public void set_AmazonSideAsn(Nullable`1<long> value);
    internal bool IsSetAmazonSideAsn();
    public AutoAcceptSharedAttachmentsValue get_AutoAcceptSharedAttachments();
    public void set_AutoAcceptSharedAttachments(AutoAcceptSharedAttachmentsValue value);
    internal bool IsSetAutoAcceptSharedAttachments();
    public DefaultRouteTableAssociationValue get_DefaultRouteTableAssociation();
    public void set_DefaultRouteTableAssociation(DefaultRouteTableAssociationValue value);
    internal bool IsSetDefaultRouteTableAssociation();
    public DefaultRouteTablePropagationValue get_DefaultRouteTablePropagation();
    public void set_DefaultRouteTablePropagation(DefaultRouteTablePropagationValue value);
    internal bool IsSetDefaultRouteTablePropagation();
    public DnsSupportValue get_DnsSupport();
    public void set_DnsSupport(DnsSupportValue value);
    internal bool IsSetDnsSupport();
    public MulticastSupportValue get_MulticastSupport();
    public void set_MulticastSupport(MulticastSupportValue value);
    internal bool IsSetMulticastSupport();
    public SecurityGroupReferencingSupportValue get_SecurityGroupReferencingSupport();
    public void set_SecurityGroupReferencingSupport(SecurityGroupReferencingSupportValue value);
    internal bool IsSetSecurityGroupReferencingSupport();
    public List`1<string> get_TransitGatewayCidrBlocks();
    public void set_TransitGatewayCidrBlocks(List`1<string> value);
    internal bool IsSetTransitGatewayCidrBlocks();
    public VpnEcmpSupportValue get_VpnEcmpSupport();
    public void set_VpnEcmpSupport(VpnEcmpSupportValue value);
    internal bool IsSetVpnEcmpSupport();
}
public class Amazon.EC2.Model.TransitGatewayRoute : object {
    private string _destinationCidrBlock;
    private string _prefixListId;
    private TransitGatewayRouteState _state;
    private List`1<TransitGatewayRouteAttachment> _transitGatewayAttachments;
    private string _transitGatewayRouteTableAnnouncementId;
    private TransitGatewayRouteType _type;
    public string DestinationCidrBlock { get; public set; }
    public string PrefixListId { get; public set; }
    public TransitGatewayRouteState State { get; public set; }
    public List`1<TransitGatewayRouteAttachment> TransitGatewayAttachments { get; public set; }
    public string TransitGatewayRouteTableAnnouncementId { get; public set; }
    public TransitGatewayRouteType Type { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public TransitGatewayRouteState get_State();
    public void set_State(TransitGatewayRouteState value);
    internal bool IsSetState();
    public List`1<TransitGatewayRouteAttachment> get_TransitGatewayAttachments();
    public void set_TransitGatewayAttachments(List`1<TransitGatewayRouteAttachment> value);
    internal bool IsSetTransitGatewayAttachments();
    public string get_TransitGatewayRouteTableAnnouncementId();
    public void set_TransitGatewayRouteTableAnnouncementId(string value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementId();
    public TransitGatewayRouteType get_Type();
    public void set_Type(TransitGatewayRouteType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.TransitGatewayRouteAttachment : object {
    private string _resourceId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private string _transitGatewayAttachmentId;
    public string ResourceId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.TransitGatewayRouteTable : object {
    private Nullable`1<DateTime> _creationTime;
    private Nullable`1<bool> _defaultAssociationRouteTable;
    private Nullable`1<bool> _defaultPropagationRouteTable;
    private TransitGatewayRouteTableState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayId;
    private string _transitGatewayRouteTableId;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public Nullable`1<bool> DefaultAssociationRouteTable { get; public set; }
    public Nullable`1<bool> DefaultPropagationRouteTable { get; public set; }
    public TransitGatewayRouteTableState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string TransitGatewayRouteTableId { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public Nullable`1<bool> get_DefaultAssociationRouteTable();
    public void set_DefaultAssociationRouteTable(Nullable`1<bool> value);
    internal bool IsSetDefaultAssociationRouteTable();
    public Nullable`1<bool> get_DefaultPropagationRouteTable();
    public void set_DefaultPropagationRouteTable(Nullable`1<bool> value);
    internal bool IsSetDefaultPropagationRouteTable();
    public TransitGatewayRouteTableState get_State();
    public void set_State(TransitGatewayRouteTableState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayRouteTableAnnouncement : object {
    private TransitGatewayRouteTableAnnouncementDirection _announcementDirection;
    private string _coreNetworkId;
    private Nullable`1<DateTime> _creationTime;
    private string _peerCoreNetworkId;
    private string _peeringAttachmentId;
    private string _peerTransitGatewayId;
    private TransitGatewayRouteTableAnnouncementState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayId;
    private string _transitGatewayRouteTableAnnouncementId;
    private string _transitGatewayRouteTableId;
    public TransitGatewayRouteTableAnnouncementDirection AnnouncementDirection { get; public set; }
    public string CoreNetworkId { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string PeerCoreNetworkId { get; public set; }
    public string PeeringAttachmentId { get; public set; }
    public string PeerTransitGatewayId { get; public set; }
    public TransitGatewayRouteTableAnnouncementState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string TransitGatewayRouteTableAnnouncementId { get; public set; }
    public string TransitGatewayRouteTableId { get; public set; }
    public TransitGatewayRouteTableAnnouncementDirection get_AnnouncementDirection();
    public void set_AnnouncementDirection(TransitGatewayRouteTableAnnouncementDirection value);
    internal bool IsSetAnnouncementDirection();
    public string get_CoreNetworkId();
    public void set_CoreNetworkId(string value);
    internal bool IsSetCoreNetworkId();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_PeerCoreNetworkId();
    public void set_PeerCoreNetworkId(string value);
    internal bool IsSetPeerCoreNetworkId();
    public string get_PeeringAttachmentId();
    public void set_PeeringAttachmentId(string value);
    internal bool IsSetPeeringAttachmentId();
    public string get_PeerTransitGatewayId();
    public void set_PeerTransitGatewayId(string value);
    internal bool IsSetPeerTransitGatewayId();
    public TransitGatewayRouteTableAnnouncementState get_State();
    public void set_State(TransitGatewayRouteTableAnnouncementState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_TransitGatewayRouteTableAnnouncementId();
    public void set_TransitGatewayRouteTableAnnouncementId(string value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementId();
    public string get_TransitGatewayRouteTableId();
    public void set_TransitGatewayRouteTableId(string value);
    internal bool IsSetTransitGatewayRouteTableId();
}
public class Amazon.EC2.Model.TransitGatewayRouteTableAssociation : object {
    private string _resourceId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private TransitGatewayAssociationState _state;
    private string _transitGatewayAttachmentId;
    public string ResourceId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public TransitGatewayAssociationState State { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public TransitGatewayAssociationState get_State();
    public void set_State(TransitGatewayAssociationState value);
    internal bool IsSetState();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
}
public class Amazon.EC2.Model.TransitGatewayRouteTablePropagation : object {
    private string _resourceId;
    private TransitGatewayAttachmentResourceType _resourceType;
    private TransitGatewayPropagationState _state;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayRouteTableAnnouncementId;
    public string ResourceId { get; public set; }
    public TransitGatewayAttachmentResourceType ResourceType { get; public set; }
    public TransitGatewayPropagationState State { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayRouteTableAnnouncementId { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TransitGatewayAttachmentResourceType get_ResourceType();
    public void set_ResourceType(TransitGatewayAttachmentResourceType value);
    internal bool IsSetResourceType();
    public TransitGatewayPropagationState get_State();
    public void set_State(TransitGatewayPropagationState value);
    internal bool IsSetState();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayRouteTableAnnouncementId();
    public void set_TransitGatewayRouteTableAnnouncementId(string value);
    internal bool IsSetTransitGatewayRouteTableAnnouncementId();
}
public class Amazon.EC2.Model.TransitGatewayRouteTableRoute : object {
    private string _attachmentId;
    private string _destinationCidr;
    private string _prefixListId;
    private string _resourceId;
    private string _resourceType;
    private string _routeOrigin;
    private string _state;
    public string AttachmentId { get; public set; }
    public string DestinationCidr { get; public set; }
    public string PrefixListId { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceType { get; public set; }
    public string RouteOrigin { get; public set; }
    public string State { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public string get_DestinationCidr();
    public void set_DestinationCidr(string value);
    internal bool IsSetDestinationCidr();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public string get_RouteOrigin();
    public void set_RouteOrigin(string value);
    internal bool IsSetRouteOrigin();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.TransitGatewayVpcAttachment : object {
    private Nullable`1<DateTime> _creationTime;
    private TransitGatewayVpcAttachmentOptions _options;
    private TransitGatewayAttachmentState _state;
    private List`1<string> _subnetIds;
    private List`1<Tag> _tags;
    private string _transitGatewayAttachmentId;
    private string _transitGatewayId;
    private string _vpcId;
    private string _vpcOwnerId;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public TransitGatewayVpcAttachmentOptions Options { get; public set; }
    public TransitGatewayAttachmentState State { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayAttachmentId { get; public set; }
    public string TransitGatewayId { get; public set; }
    public string VpcId { get; public set; }
    public string VpcOwnerId { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public TransitGatewayVpcAttachmentOptions get_Options();
    public void set_Options(TransitGatewayVpcAttachmentOptions value);
    internal bool IsSetOptions();
    public TransitGatewayAttachmentState get_State();
    public void set_State(TransitGatewayAttachmentState value);
    internal bool IsSetState();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayAttachmentId();
    public void set_TransitGatewayAttachmentId(string value);
    internal bool IsSetTransitGatewayAttachmentId();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public string get_VpcOwnerId();
    public void set_VpcOwnerId(string value);
    internal bool IsSetVpcOwnerId();
}
public class Amazon.EC2.Model.TransitGatewayVpcAttachmentOptions : object {
    private ApplianceModeSupportValue _applianceModeSupport;
    private DnsSupportValue _dnsSupport;
    private Ipv6SupportValue _ipv6Support;
    private SecurityGroupReferencingSupportValue _securityGroupReferencingSupport;
    public ApplianceModeSupportValue ApplianceModeSupport { get; public set; }
    public DnsSupportValue DnsSupport { get; public set; }
    public Ipv6SupportValue Ipv6Support { get; public set; }
    public SecurityGroupReferencingSupportValue SecurityGroupReferencingSupport { get; public set; }
    public ApplianceModeSupportValue get_ApplianceModeSupport();
    public void set_ApplianceModeSupport(ApplianceModeSupportValue value);
    internal bool IsSetApplianceModeSupport();
    public DnsSupportValue get_DnsSupport();
    public void set_DnsSupport(DnsSupportValue value);
    internal bool IsSetDnsSupport();
    public Ipv6SupportValue get_Ipv6Support();
    public void set_Ipv6Support(Ipv6SupportValue value);
    internal bool IsSetIpv6Support();
    public SecurityGroupReferencingSupportValue get_SecurityGroupReferencingSupport();
    public void set_SecurityGroupReferencingSupport(SecurityGroupReferencingSupportValue value);
    internal bool IsSetSecurityGroupReferencingSupport();
}
public class Amazon.EC2.Model.TrunkInterfaceAssociation : object {
    private string _associationId;
    private string _branchInterfaceId;
    private Nullable`1<int> _greKey;
    private InterfaceProtocolType _interfaceProtocol;
    private List`1<Tag> _tags;
    private string _trunkInterfaceId;
    private Nullable`1<int> _vlanId;
    public string AssociationId { get; public set; }
    public string BranchInterfaceId { get; public set; }
    public Nullable`1<int> GreKey { get; public set; }
    public InterfaceProtocolType InterfaceProtocol { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TrunkInterfaceId { get; public set; }
    public Nullable`1<int> VlanId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_BranchInterfaceId();
    public void set_BranchInterfaceId(string value);
    internal bool IsSetBranchInterfaceId();
    public Nullable`1<int> get_GreKey();
    public void set_GreKey(Nullable`1<int> value);
    internal bool IsSetGreKey();
    public InterfaceProtocolType get_InterfaceProtocol();
    public void set_InterfaceProtocol(InterfaceProtocolType value);
    internal bool IsSetInterfaceProtocol();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TrunkInterfaceId();
    public void set_TrunkInterfaceId(string value);
    internal bool IsSetTrunkInterfaceId();
    public Nullable`1<int> get_VlanId();
    public void set_VlanId(Nullable`1<int> value);
    internal bool IsSetVlanId();
}
public class Amazon.EC2.Model.TunnelOption : object {
    private string _dpdTimeoutAction;
    private Nullable`1<int> _dpdTimeoutSeconds;
    private Nullable`1<bool> _enableTunnelLifecycleControl;
    private List`1<IKEVersionsListValue> _ikeVersions;
    private VpnTunnelLogOptions _logOptions;
    private string _outsideIpAddress;
    private List`1<Phase1DHGroupNumbersListValue> _phase1DHGroupNumbers;
    private List`1<Phase1EncryptionAlgorithmsListValue> _phase1EncryptionAlgorithms;
    private List`1<Phase1IntegrityAlgorithmsListValue> _phase1IntegrityAlgorithms;
    private Nullable`1<int> _phase1LifetimeSeconds;
    private List`1<Phase2DHGroupNumbersListValue> _phase2DHGroupNumbers;
    private List`1<Phase2EncryptionAlgorithmsListValue> _phase2EncryptionAlgorithms;
    private List`1<Phase2IntegrityAlgorithmsListValue> _phase2IntegrityAlgorithms;
    private Nullable`1<int> _phase2LifetimeSeconds;
    private string _preSharedKey;
    private Nullable`1<int> _rekeyFuzzPercentage;
    private Nullable`1<int> _rekeyMarginTimeSeconds;
    private Nullable`1<int> _replayWindowSize;
    private string _startupAction;
    private string _tunnelInsideCidr;
    private string _tunnelInsideIpv6Cidr;
    public string DpdTimeoutAction { get; public set; }
    public Nullable`1<int> DpdTimeoutSeconds { get; public set; }
    public Nullable`1<bool> EnableTunnelLifecycleControl { get; public set; }
    public List`1<IKEVersionsListValue> IkeVersions { get; public set; }
    public VpnTunnelLogOptions LogOptions { get; public set; }
    public string OutsideIpAddress { get; public set; }
    public List`1<Phase1DHGroupNumbersListValue> Phase1DHGroupNumbers { get; public set; }
    public List`1<Phase1EncryptionAlgorithmsListValue> Phase1EncryptionAlgorithms { get; public set; }
    public List`1<Phase1IntegrityAlgorithmsListValue> Phase1IntegrityAlgorithms { get; public set; }
    public Nullable`1<int> Phase1LifetimeSeconds { get; public set; }
    public List`1<Phase2DHGroupNumbersListValue> Phase2DHGroupNumbers { get; public set; }
    public List`1<Phase2EncryptionAlgorithmsListValue> Phase2EncryptionAlgorithms { get; public set; }
    public List`1<Phase2IntegrityAlgorithmsListValue> Phase2IntegrityAlgorithms { get; public set; }
    public Nullable`1<int> Phase2LifetimeSeconds { get; public set; }
    [AWSPropertyAttribute]
public string PreSharedKey { get; public set; }
    public Nullable`1<int> RekeyFuzzPercentage { get; public set; }
    public Nullable`1<int> RekeyMarginTimeSeconds { get; public set; }
    public Nullable`1<int> ReplayWindowSize { get; public set; }
    public string StartupAction { get; public set; }
    public string TunnelInsideCidr { get; public set; }
    public string TunnelInsideIpv6Cidr { get; public set; }
    public string get_DpdTimeoutAction();
    public void set_DpdTimeoutAction(string value);
    internal bool IsSetDpdTimeoutAction();
    public Nullable`1<int> get_DpdTimeoutSeconds();
    public void set_DpdTimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetDpdTimeoutSeconds();
    public Nullable`1<bool> get_EnableTunnelLifecycleControl();
    public void set_EnableTunnelLifecycleControl(Nullable`1<bool> value);
    internal bool IsSetEnableTunnelLifecycleControl();
    public List`1<IKEVersionsListValue> get_IkeVersions();
    public void set_IkeVersions(List`1<IKEVersionsListValue> value);
    internal bool IsSetIkeVersions();
    public VpnTunnelLogOptions get_LogOptions();
    public void set_LogOptions(VpnTunnelLogOptions value);
    internal bool IsSetLogOptions();
    public string get_OutsideIpAddress();
    public void set_OutsideIpAddress(string value);
    internal bool IsSetOutsideIpAddress();
    public List`1<Phase1DHGroupNumbersListValue> get_Phase1DHGroupNumbers();
    public void set_Phase1DHGroupNumbers(List`1<Phase1DHGroupNumbersListValue> value);
    internal bool IsSetPhase1DHGroupNumbers();
    public List`1<Phase1EncryptionAlgorithmsListValue> get_Phase1EncryptionAlgorithms();
    public void set_Phase1EncryptionAlgorithms(List`1<Phase1EncryptionAlgorithmsListValue> value);
    internal bool IsSetPhase1EncryptionAlgorithms();
    public List`1<Phase1IntegrityAlgorithmsListValue> get_Phase1IntegrityAlgorithms();
    public void set_Phase1IntegrityAlgorithms(List`1<Phase1IntegrityAlgorithmsListValue> value);
    internal bool IsSetPhase1IntegrityAlgorithms();
    public Nullable`1<int> get_Phase1LifetimeSeconds();
    public void set_Phase1LifetimeSeconds(Nullable`1<int> value);
    internal bool IsSetPhase1LifetimeSeconds();
    public List`1<Phase2DHGroupNumbersListValue> get_Phase2DHGroupNumbers();
    public void set_Phase2DHGroupNumbers(List`1<Phase2DHGroupNumbersListValue> value);
    internal bool IsSetPhase2DHGroupNumbers();
    public List`1<Phase2EncryptionAlgorithmsListValue> get_Phase2EncryptionAlgorithms();
    public void set_Phase2EncryptionAlgorithms(List`1<Phase2EncryptionAlgorithmsListValue> value);
    internal bool IsSetPhase2EncryptionAlgorithms();
    public List`1<Phase2IntegrityAlgorithmsListValue> get_Phase2IntegrityAlgorithms();
    public void set_Phase2IntegrityAlgorithms(List`1<Phase2IntegrityAlgorithmsListValue> value);
    internal bool IsSetPhase2IntegrityAlgorithms();
    public Nullable`1<int> get_Phase2LifetimeSeconds();
    public void set_Phase2LifetimeSeconds(Nullable`1<int> value);
    internal bool IsSetPhase2LifetimeSeconds();
    public string get_PreSharedKey();
    public void set_PreSharedKey(string value);
    internal bool IsSetPreSharedKey();
    public Nullable`1<int> get_RekeyFuzzPercentage();
    public void set_RekeyFuzzPercentage(Nullable`1<int> value);
    internal bool IsSetRekeyFuzzPercentage();
    public Nullable`1<int> get_RekeyMarginTimeSeconds();
    public void set_RekeyMarginTimeSeconds(Nullable`1<int> value);
    internal bool IsSetRekeyMarginTimeSeconds();
    public Nullable`1<int> get_ReplayWindowSize();
    public void set_ReplayWindowSize(Nullable`1<int> value);
    internal bool IsSetReplayWindowSize();
    public string get_StartupAction();
    public void set_StartupAction(string value);
    internal bool IsSetStartupAction();
    public string get_TunnelInsideCidr();
    public void set_TunnelInsideCidr(string value);
    internal bool IsSetTunnelInsideCidr();
    public string get_TunnelInsideIpv6Cidr();
    public void set_TunnelInsideIpv6Cidr(string value);
    internal bool IsSetTunnelInsideIpv6Cidr();
}
public class Amazon.EC2.Model.UnassignIpv6AddressesRequest : AmazonEC2Request {
    private List`1<string> _ipv6Addresses;
    private List`1<string> _ipv6Prefixes;
    private string _networkInterfaceId;
    public List`1<string> Ipv6Addresses { get; public set; }
    public List`1<string> Ipv6Prefixes { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public List`1<string> get_Ipv6Addresses();
    public void set_Ipv6Addresses(List`1<string> value);
    internal bool IsSetIpv6Addresses();
    public List`1<string> get_Ipv6Prefixes();
    public void set_Ipv6Prefixes(List`1<string> value);
    internal bool IsSetIpv6Prefixes();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.UnassignIpv6AddressesResponse : AmazonWebServiceResponse {
    private string _networkInterfaceId;
    private List`1<string> _unassignedIpv6Addresses;
    private List`1<string> _unassignedIpv6Prefixes;
    public string NetworkInterfaceId { get; public set; }
    public List`1<string> UnassignedIpv6Addresses { get; public set; }
    public List`1<string> UnassignedIpv6Prefixes { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public List`1<string> get_UnassignedIpv6Addresses();
    public void set_UnassignedIpv6Addresses(List`1<string> value);
    internal bool IsSetUnassignedIpv6Addresses();
    public List`1<string> get_UnassignedIpv6Prefixes();
    public void set_UnassignedIpv6Prefixes(List`1<string> value);
    internal bool IsSetUnassignedIpv6Prefixes();
}
public class Amazon.EC2.Model.UnassignPrivateIpAddressesRequest : AmazonEC2Request {
    private List`1<string> _ipv4Prefixes;
    private string _networkInterfaceId;
    private List`1<string> _privateIpAddresses;
    public List`1<string> Ipv4Prefixes { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public List`1<string> PrivateIpAddresses { get; public set; }
    public List`1<string> get_Ipv4Prefixes();
    public void set_Ipv4Prefixes(List`1<string> value);
    internal bool IsSetIpv4Prefixes();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public List`1<string> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<string> value);
    internal bool IsSetPrivateIpAddresses();
}
public class Amazon.EC2.Model.UnassignPrivateIpAddressesResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.UnassignPrivateNatGatewayAddressRequest : AmazonEC2Request {
    private Nullable`1<int> _maxDrainDurationSeconds;
    private string _natGatewayId;
    private List`1<string> _privateIpAddresses;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxDrainDurationSeconds { get; public set; }
    [AWSPropertyAttribute]
public string NatGatewayId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PrivateIpAddresses { get; public set; }
    public Nullable`1<int> get_MaxDrainDurationSeconds();
    public void set_MaxDrainDurationSeconds(Nullable`1<int> value);
    internal bool IsSetMaxDrainDurationSeconds();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
    public List`1<string> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<string> value);
    internal bool IsSetPrivateIpAddresses();
}
public class Amazon.EC2.Model.UnassignPrivateNatGatewayAddressResponse : AmazonWebServiceResponse {
    private List`1<NatGatewayAddress> _natGatewayAddresses;
    private string _natGatewayId;
    public List`1<NatGatewayAddress> NatGatewayAddresses { get; public set; }
    public string NatGatewayId { get; public set; }
    public List`1<NatGatewayAddress> get_NatGatewayAddresses();
    public void set_NatGatewayAddresses(List`1<NatGatewayAddress> value);
    internal bool IsSetNatGatewayAddresses();
    public string get_NatGatewayId();
    public void set_NatGatewayId(string value);
    internal bool IsSetNatGatewayId();
}
public class Amazon.EC2.Model.UnlockSnapshotRequest : AmazonEC2Request {
    private string _snapshotId;
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.UnlockSnapshotResponse : AmazonWebServiceResponse {
    private string _snapshotId;
    public string SnapshotId { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.UnmonitorInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    public UnmonitorInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.UnmonitorInstancesResponse : AmazonWebServiceResponse {
    private List`1<InstanceMonitoring> _instanceMonitorings;
    public List`1<InstanceMonitoring> InstanceMonitorings { get; public set; }
    public List`1<InstanceMonitoring> get_InstanceMonitorings();
    public void set_InstanceMonitorings(List`1<InstanceMonitoring> value);
    internal bool IsSetInstanceMonitorings();
}
public class Amazon.EC2.Model.UnsuccessfulInstanceCreditSpecificationItem : object {
    private UnsuccessfulInstanceCreditSpecificationItemError _error;
    private string _instanceId;
    public UnsuccessfulInstanceCreditSpecificationItemError Error { get; public set; }
    public string InstanceId { get; public set; }
    public UnsuccessfulInstanceCreditSpecificationItemError get_Error();
    public void set_Error(UnsuccessfulInstanceCreditSpecificationItemError value);
    internal bool IsSetError();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.UnsuccessfulInstanceCreditSpecificationItemError : object {
    private UnsuccessfulInstanceCreditSpecificationErrorCode _code;
    private string _message;
    public UnsuccessfulInstanceCreditSpecificationErrorCode Code { get; public set; }
    public string Message { get; public set; }
    public UnsuccessfulInstanceCreditSpecificationErrorCode get_Code();
    public void set_Code(UnsuccessfulInstanceCreditSpecificationErrorCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.UnsuccessfulItem : object {
    private UnsuccessfulItemError _error;
    private string _resourceId;
    public UnsuccessfulItemError Error { get; public set; }
    public string ResourceId { get; public set; }
    public UnsuccessfulItemError get_Error();
    public void set_Error(UnsuccessfulItemError value);
    internal bool IsSetError();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
}
public class Amazon.EC2.Model.UnsuccessfulItemError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsEgressRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    private List`1<SecurityGroupRuleDescription> _securityGroupRuleDescriptions;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<SecurityGroupRuleDescription> SecurityGroupRuleDescriptions { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<SecurityGroupRuleDescription> get_SecurityGroupRuleDescriptions();
    public void set_SecurityGroupRuleDescriptions(List`1<SecurityGroupRuleDescription> value);
    internal bool IsSetSecurityGroupRuleDescriptions();
}
public class Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsEgressResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsIngressRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    private List`1<SecurityGroupRuleDescription> _securityGroupRuleDescriptions;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<SecurityGroupRuleDescription> SecurityGroupRuleDescriptions { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<SecurityGroupRuleDescription> get_SecurityGroupRuleDescriptions();
    public void set_SecurityGroupRuleDescriptions(List`1<SecurityGroupRuleDescription> value);
    internal bool IsSetSecurityGroupRuleDescriptions();
}
public class Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsIngressResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public Nullable`1<bool> Return { get; public set; }
    public Nullable`1<bool> get_Return();
    public void set_Return(Nullable`1<bool> value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.UserBucket : object {
    private string _s3Bucket;
    private string _s3Key;
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
}
public class Amazon.EC2.Model.UserBucketDetails : object {
    private string _s3Bucket;
    private string _s3Key;
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
}
public class Amazon.EC2.Model.UserData : object {
    private string _data;
    public string Data { get; public set; }
    public string get_Data();
    public void set_Data(string value);
    internal bool IsSetData();
}
public class Amazon.EC2.Model.UserIdGroupPair : object {
    private string _description;
    private string _groupId;
    private string _groupName;
    private string _peeringStatus;
    private string _userId;
    private string _vpcId;
    private string _vpcPeeringConnectionId;
    public string Description { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string PeeringStatus { get; public set; }
    public string UserId { get; public set; }
    public string VpcId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_PeeringStatus();
    public void set_PeeringStatus(string value);
    internal bool IsSetPeeringStatus();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.ValidationError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.ValidationWarning : object {
    private List`1<ValidationError> _errors;
    public List`1<ValidationError> Errors { get; public set; }
    public List`1<ValidationError> get_Errors();
    public void set_Errors(List`1<ValidationError> value);
    internal bool IsSetErrors();
}
public class Amazon.EC2.Model.VCpuCountRange : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.VCpuCountRangeRequest : object {
    private Nullable`1<int> _max;
    private Nullable`1<int> _min;
    public Nullable`1<int> Max { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> get_Max();
    public void set_Max(Nullable`1<int> value);
    internal bool IsSetMax();
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    internal bool IsSetMin();
}
public class Amazon.EC2.Model.VCpuInfo : object {
    private Nullable`1<int> _defaultCores;
    private Nullable`1<int> _defaultThreadsPerCore;
    private Nullable`1<int> _defaultVCpus;
    private List`1<int> _validCores;
    private List`1<int> _validThreadsPerCore;
    public Nullable`1<int> DefaultCores { get; public set; }
    public Nullable`1<int> DefaultThreadsPerCore { get; public set; }
    public Nullable`1<int> DefaultVCpus { get; public set; }
    public List`1<int> ValidCores { get; public set; }
    public List`1<int> ValidThreadsPerCore { get; public set; }
    public Nullable`1<int> get_DefaultCores();
    public void set_DefaultCores(Nullable`1<int> value);
    internal bool IsSetDefaultCores();
    public Nullable`1<int> get_DefaultThreadsPerCore();
    public void set_DefaultThreadsPerCore(Nullable`1<int> value);
    internal bool IsSetDefaultThreadsPerCore();
    public Nullable`1<int> get_DefaultVCpus();
    public void set_DefaultVCpus(Nullable`1<int> value);
    internal bool IsSetDefaultVCpus();
    public List`1<int> get_ValidCores();
    public void set_ValidCores(List`1<int> value);
    internal bool IsSetValidCores();
    public List`1<int> get_ValidThreadsPerCore();
    public void set_ValidThreadsPerCore(List`1<int> value);
    internal bool IsSetValidThreadsPerCore();
}
public class Amazon.EC2.Model.VerifiedAccessEndpoint : object {
    private string _applicationDomain;
    private VerifiedAccessEndpointAttachmentType _attachmentType;
    private string _creationTime;
    private string _deletionTime;
    private string _description;
    private string _deviceValidationDomain;
    private string _domainCertificateArn;
    private string _endpointDomain;
    private VerifiedAccessEndpointType _endpointType;
    private string _lastUpdatedTime;
    private VerifiedAccessEndpointLoadBalancerOptions _loadBalancerOptions;
    private VerifiedAccessEndpointEniOptions _networkInterfaceOptions;
    private List`1<string> _securityGroupIds;
    private VerifiedAccessSseSpecificationResponse _sseSpecification;
    private VerifiedAccessEndpointStatus _status;
    private List`1<Tag> _tags;
    private string _verifiedAccessEndpointId;
    private string _verifiedAccessGroupId;
    private string _verifiedAccessInstanceId;
    public string ApplicationDomain { get; public set; }
    public VerifiedAccessEndpointAttachmentType AttachmentType { get; public set; }
    public string CreationTime { get; public set; }
    public string DeletionTime { get; public set; }
    public string Description { get; public set; }
    public string DeviceValidationDomain { get; public set; }
    public string DomainCertificateArn { get; public set; }
    public string EndpointDomain { get; public set; }
    public VerifiedAccessEndpointType EndpointType { get; public set; }
    public string LastUpdatedTime { get; public set; }
    public VerifiedAccessEndpointLoadBalancerOptions LoadBalancerOptions { get; public set; }
    public VerifiedAccessEndpointEniOptions NetworkInterfaceOptions { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public VerifiedAccessSseSpecificationResponse SseSpecification { get; public set; }
    public VerifiedAccessEndpointStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VerifiedAccessEndpointId { get; public set; }
    public string VerifiedAccessGroupId { get; public set; }
    public string VerifiedAccessInstanceId { get; public set; }
    public string get_ApplicationDomain();
    public void set_ApplicationDomain(string value);
    internal bool IsSetApplicationDomain();
    public VerifiedAccessEndpointAttachmentType get_AttachmentType();
    public void set_AttachmentType(VerifiedAccessEndpointAttachmentType value);
    internal bool IsSetAttachmentType();
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_DeletionTime();
    public void set_DeletionTime(string value);
    internal bool IsSetDeletionTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DeviceValidationDomain();
    public void set_DeviceValidationDomain(string value);
    internal bool IsSetDeviceValidationDomain();
    public string get_DomainCertificateArn();
    public void set_DomainCertificateArn(string value);
    internal bool IsSetDomainCertificateArn();
    public string get_EndpointDomain();
    public void set_EndpointDomain(string value);
    internal bool IsSetEndpointDomain();
    public VerifiedAccessEndpointType get_EndpointType();
    public void set_EndpointType(VerifiedAccessEndpointType value);
    internal bool IsSetEndpointType();
    public string get_LastUpdatedTime();
    public void set_LastUpdatedTime(string value);
    internal bool IsSetLastUpdatedTime();
    public VerifiedAccessEndpointLoadBalancerOptions get_LoadBalancerOptions();
    public void set_LoadBalancerOptions(VerifiedAccessEndpointLoadBalancerOptions value);
    internal bool IsSetLoadBalancerOptions();
    public VerifiedAccessEndpointEniOptions get_NetworkInterfaceOptions();
    public void set_NetworkInterfaceOptions(VerifiedAccessEndpointEniOptions value);
    internal bool IsSetNetworkInterfaceOptions();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public VerifiedAccessSseSpecificationResponse get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationResponse value);
    internal bool IsSetSseSpecification();
    public VerifiedAccessEndpointStatus get_Status();
    public void set_Status(VerifiedAccessEndpointStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VerifiedAccessEndpointId();
    public void set_VerifiedAccessEndpointId(string value);
    internal bool IsSetVerifiedAccessEndpointId();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.VerifiedAccessEndpointEniOptions : object {
    private string _networkInterfaceId;
    private Nullable`1<int> _port;
    private VerifiedAccessEndpointProtocol _protocol;
    public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public VerifiedAccessEndpointProtocol Protocol { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public VerifiedAccessEndpointProtocol get_Protocol();
    public void set_Protocol(VerifiedAccessEndpointProtocol value);
    internal bool IsSetProtocol();
}
public class Amazon.EC2.Model.VerifiedAccessEndpointLoadBalancerOptions : object {
    private string _loadBalancerArn;
    private Nullable`1<int> _port;
    private VerifiedAccessEndpointProtocol _protocol;
    private List`1<string> _subnetIds;
    public string LoadBalancerArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public VerifiedAccessEndpointProtocol Protocol { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public VerifiedAccessEndpointProtocol get_Protocol();
    public void set_Protocol(VerifiedAccessEndpointProtocol value);
    internal bool IsSetProtocol();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.EC2.Model.VerifiedAccessEndpointStatus : object {
    private VerifiedAccessEndpointStatusCode _code;
    private string _message;
    public VerifiedAccessEndpointStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public VerifiedAccessEndpointStatusCode get_Code();
    public void set_Code(VerifiedAccessEndpointStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.VerifiedAccessGroup : object {
    private string _creationTime;
    private string _deletionTime;
    private string _description;
    private string _lastUpdatedTime;
    private string _owner;
    private VerifiedAccessSseSpecificationResponse _sseSpecification;
    private List`1<Tag> _tags;
    private string _verifiedAccessGroupArn;
    private string _verifiedAccessGroupId;
    private string _verifiedAccessInstanceId;
    public string CreationTime { get; public set; }
    public string DeletionTime { get; public set; }
    public string Description { get; public set; }
    public string LastUpdatedTime { get; public set; }
    public string Owner { get; public set; }
    public VerifiedAccessSseSpecificationResponse SseSpecification { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VerifiedAccessGroupArn { get; public set; }
    public string VerifiedAccessGroupId { get; public set; }
    public string VerifiedAccessInstanceId { get; public set; }
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_DeletionTime();
    public void set_DeletionTime(string value);
    internal bool IsSetDeletionTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LastUpdatedTime();
    public void set_LastUpdatedTime(string value);
    internal bool IsSetLastUpdatedTime();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public VerifiedAccessSseSpecificationResponse get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationResponse value);
    internal bool IsSetSseSpecification();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VerifiedAccessGroupArn();
    public void set_VerifiedAccessGroupArn(string value);
    internal bool IsSetVerifiedAccessGroupArn();
    public string get_VerifiedAccessGroupId();
    public void set_VerifiedAccessGroupId(string value);
    internal bool IsSetVerifiedAccessGroupId();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.VerifiedAccessInstance : object {
    private string _creationTime;
    private string _description;
    private Nullable`1<bool> _fipsEnabled;
    private string _lastUpdatedTime;
    private List`1<Tag> _tags;
    private string _verifiedAccessInstanceId;
    private List`1<VerifiedAccessTrustProviderCondensed> _verifiedAccessTrustProviders;
    public string CreationTime { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> FipsEnabled { get; public set; }
    public string LastUpdatedTime { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VerifiedAccessInstanceId { get; public set; }
    public List`1<VerifiedAccessTrustProviderCondensed> VerifiedAccessTrustProviders { get; public set; }
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_FipsEnabled();
    public void set_FipsEnabled(Nullable`1<bool> value);
    internal bool IsSetFipsEnabled();
    public string get_LastUpdatedTime();
    public void set_LastUpdatedTime(string value);
    internal bool IsSetLastUpdatedTime();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
    public List`1<VerifiedAccessTrustProviderCondensed> get_VerifiedAccessTrustProviders();
    public void set_VerifiedAccessTrustProviders(List`1<VerifiedAccessTrustProviderCondensed> value);
    internal bool IsSetVerifiedAccessTrustProviders();
}
public class Amazon.EC2.Model.VerifiedAccessInstanceLoggingConfiguration : object {
    private VerifiedAccessLogs _accessLogs;
    private string _verifiedAccessInstanceId;
    public VerifiedAccessLogs AccessLogs { get; public set; }
    public string VerifiedAccessInstanceId { get; public set; }
    public VerifiedAccessLogs get_AccessLogs();
    public void set_AccessLogs(VerifiedAccessLogs value);
    internal bool IsSetAccessLogs();
    public string get_VerifiedAccessInstanceId();
    public void set_VerifiedAccessInstanceId(string value);
    internal bool IsSetVerifiedAccessInstanceId();
}
public class Amazon.EC2.Model.VerifiedAccessLogCloudWatchLogsDestination : object {
    private VerifiedAccessLogDeliveryStatus _deliveryStatus;
    private Nullable`1<bool> _enabled;
    private string _logGroup;
    public VerifiedAccessLogDeliveryStatus DeliveryStatus { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string LogGroup { get; public set; }
    public VerifiedAccessLogDeliveryStatus get_DeliveryStatus();
    public void set_DeliveryStatus(VerifiedAccessLogDeliveryStatus value);
    internal bool IsSetDeliveryStatus();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_LogGroup();
    public void set_LogGroup(string value);
    internal bool IsSetLogGroup();
}
public class Amazon.EC2.Model.VerifiedAccessLogCloudWatchLogsDestinationOptions : object {
    private Nullable`1<bool> _enabled;
    private string _logGroup;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string LogGroup { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_LogGroup();
    public void set_LogGroup(string value);
    internal bool IsSetLogGroup();
}
public class Amazon.EC2.Model.VerifiedAccessLogDeliveryStatus : object {
    private VerifiedAccessLogDeliveryStatusCode _code;
    private string _message;
    public VerifiedAccessLogDeliveryStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public VerifiedAccessLogDeliveryStatusCode get_Code();
    public void set_Code(VerifiedAccessLogDeliveryStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.VerifiedAccessLogKinesisDataFirehoseDestination : object {
    private VerifiedAccessLogDeliveryStatus _deliveryStatus;
    private string _deliveryStream;
    private Nullable`1<bool> _enabled;
    public VerifiedAccessLogDeliveryStatus DeliveryStatus { get; public set; }
    public string DeliveryStream { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public VerifiedAccessLogDeliveryStatus get_DeliveryStatus();
    public void set_DeliveryStatus(VerifiedAccessLogDeliveryStatus value);
    internal bool IsSetDeliveryStatus();
    public string get_DeliveryStream();
    public void set_DeliveryStream(string value);
    internal bool IsSetDeliveryStream();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.VerifiedAccessLogKinesisDataFirehoseDestinationOptions : object {
    private string _deliveryStream;
    private Nullable`1<bool> _enabled;
    public string DeliveryStream { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string get_DeliveryStream();
    public void set_DeliveryStream(string value);
    internal bool IsSetDeliveryStream();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.VerifiedAccessLogOptions : object {
    private VerifiedAccessLogCloudWatchLogsDestinationOptions _cloudWatchLogs;
    private Nullable`1<bool> _includeTrustContext;
    private VerifiedAccessLogKinesisDataFirehoseDestinationOptions _kinesisDataFirehose;
    private string _logVersion;
    private VerifiedAccessLogS3DestinationOptions _s3;
    public VerifiedAccessLogCloudWatchLogsDestinationOptions CloudWatchLogs { get; public set; }
    public Nullable`1<bool> IncludeTrustContext { get; public set; }
    public VerifiedAccessLogKinesisDataFirehoseDestinationOptions KinesisDataFirehose { get; public set; }
    public string LogVersion { get; public set; }
    public VerifiedAccessLogS3DestinationOptions S3 { get; public set; }
    public VerifiedAccessLogCloudWatchLogsDestinationOptions get_CloudWatchLogs();
    public void set_CloudWatchLogs(VerifiedAccessLogCloudWatchLogsDestinationOptions value);
    internal bool IsSetCloudWatchLogs();
    public Nullable`1<bool> get_IncludeTrustContext();
    public void set_IncludeTrustContext(Nullable`1<bool> value);
    internal bool IsSetIncludeTrustContext();
    public VerifiedAccessLogKinesisDataFirehoseDestinationOptions get_KinesisDataFirehose();
    public void set_KinesisDataFirehose(VerifiedAccessLogKinesisDataFirehoseDestinationOptions value);
    internal bool IsSetKinesisDataFirehose();
    public string get_LogVersion();
    public void set_LogVersion(string value);
    internal bool IsSetLogVersion();
    public VerifiedAccessLogS3DestinationOptions get_S3();
    public void set_S3(VerifiedAccessLogS3DestinationOptions value);
    internal bool IsSetS3();
}
public class Amazon.EC2.Model.VerifiedAccessLogs : object {
    private VerifiedAccessLogCloudWatchLogsDestination _cloudWatchLogs;
    private Nullable`1<bool> _includeTrustContext;
    private VerifiedAccessLogKinesisDataFirehoseDestination _kinesisDataFirehose;
    private string _logVersion;
    private VerifiedAccessLogS3Destination _s3;
    public VerifiedAccessLogCloudWatchLogsDestination CloudWatchLogs { get; public set; }
    public Nullable`1<bool> IncludeTrustContext { get; public set; }
    public VerifiedAccessLogKinesisDataFirehoseDestination KinesisDataFirehose { get; public set; }
    public string LogVersion { get; public set; }
    public VerifiedAccessLogS3Destination S3 { get; public set; }
    public VerifiedAccessLogCloudWatchLogsDestination get_CloudWatchLogs();
    public void set_CloudWatchLogs(VerifiedAccessLogCloudWatchLogsDestination value);
    internal bool IsSetCloudWatchLogs();
    public Nullable`1<bool> get_IncludeTrustContext();
    public void set_IncludeTrustContext(Nullable`1<bool> value);
    internal bool IsSetIncludeTrustContext();
    public VerifiedAccessLogKinesisDataFirehoseDestination get_KinesisDataFirehose();
    public void set_KinesisDataFirehose(VerifiedAccessLogKinesisDataFirehoseDestination value);
    internal bool IsSetKinesisDataFirehose();
    public string get_LogVersion();
    public void set_LogVersion(string value);
    internal bool IsSetLogVersion();
    public VerifiedAccessLogS3Destination get_S3();
    public void set_S3(VerifiedAccessLogS3Destination value);
    internal bool IsSetS3();
}
public class Amazon.EC2.Model.VerifiedAccessLogS3Destination : object {
    private string _bucketName;
    private string _bucketOwner;
    private VerifiedAccessLogDeliveryStatus _deliveryStatus;
    private Nullable`1<bool> _enabled;
    private string _prefix;
    public string BucketName { get; public set; }
    public string BucketOwner { get; public set; }
    public VerifiedAccessLogDeliveryStatus DeliveryStatus { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string Prefix { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_BucketOwner();
    public void set_BucketOwner(string value);
    internal bool IsSetBucketOwner();
    public VerifiedAccessLogDeliveryStatus get_DeliveryStatus();
    public void set_DeliveryStatus(VerifiedAccessLogDeliveryStatus value);
    internal bool IsSetDeliveryStatus();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.EC2.Model.VerifiedAccessLogS3DestinationOptions : object {
    private string _bucketName;
    private string _bucketOwner;
    private Nullable`1<bool> _enabled;
    private string _prefix;
    public string BucketName { get; public set; }
    public string BucketOwner { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string Prefix { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_BucketOwner();
    public void set_BucketOwner(string value);
    internal bool IsSetBucketOwner();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.EC2.Model.VerifiedAccessSseSpecificationRequest : object {
    private Nullable`1<bool> _customerManagedKeyEnabled;
    private string _kmsKeyArn;
    public Nullable`1<bool> CustomerManagedKeyEnabled { get; public set; }
    public string KmsKeyArn { get; public set; }
    public Nullable`1<bool> get_CustomerManagedKeyEnabled();
    public void set_CustomerManagedKeyEnabled(Nullable`1<bool> value);
    internal bool IsSetCustomerManagedKeyEnabled();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
}
public class Amazon.EC2.Model.VerifiedAccessSseSpecificationResponse : object {
    private Nullable`1<bool> _customerManagedKeyEnabled;
    private string _kmsKeyArn;
    public Nullable`1<bool> CustomerManagedKeyEnabled { get; public set; }
    public string KmsKeyArn { get; public set; }
    public Nullable`1<bool> get_CustomerManagedKeyEnabled();
    public void set_CustomerManagedKeyEnabled(Nullable`1<bool> value);
    internal bool IsSetCustomerManagedKeyEnabled();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
}
public class Amazon.EC2.Model.VerifiedAccessTrustProvider : object {
    private string _creationTime;
    private string _description;
    private DeviceOptions _deviceOptions;
    private DeviceTrustProviderType _deviceTrustProviderType;
    private string _lastUpdatedTime;
    private OidcOptions _oidcOptions;
    private string _policyReferenceName;
    private VerifiedAccessSseSpecificationResponse _sseSpecification;
    private List`1<Tag> _tags;
    private TrustProviderType _trustProviderType;
    private UserTrustProviderType _userTrustProviderType;
    private string _verifiedAccessTrustProviderId;
    public string CreationTime { get; public set; }
    public string Description { get; public set; }
    public DeviceOptions DeviceOptions { get; public set; }
    public DeviceTrustProviderType DeviceTrustProviderType { get; public set; }
    public string LastUpdatedTime { get; public set; }
    public OidcOptions OidcOptions { get; public set; }
    public string PolicyReferenceName { get; public set; }
    public VerifiedAccessSseSpecificationResponse SseSpecification { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public TrustProviderType TrustProviderType { get; public set; }
    public UserTrustProviderType UserTrustProviderType { get; public set; }
    public string VerifiedAccessTrustProviderId { get; public set; }
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DeviceOptions get_DeviceOptions();
    public void set_DeviceOptions(DeviceOptions value);
    internal bool IsSetDeviceOptions();
    public DeviceTrustProviderType get_DeviceTrustProviderType();
    public void set_DeviceTrustProviderType(DeviceTrustProviderType value);
    internal bool IsSetDeviceTrustProviderType();
    public string get_LastUpdatedTime();
    public void set_LastUpdatedTime(string value);
    internal bool IsSetLastUpdatedTime();
    public OidcOptions get_OidcOptions();
    public void set_OidcOptions(OidcOptions value);
    internal bool IsSetOidcOptions();
    public string get_PolicyReferenceName();
    public void set_PolicyReferenceName(string value);
    internal bool IsSetPolicyReferenceName();
    public VerifiedAccessSseSpecificationResponse get_SseSpecification();
    public void set_SseSpecification(VerifiedAccessSseSpecificationResponse value);
    internal bool IsSetSseSpecification();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TrustProviderType get_TrustProviderType();
    public void set_TrustProviderType(TrustProviderType value);
    internal bool IsSetTrustProviderType();
    public UserTrustProviderType get_UserTrustProviderType();
    public void set_UserTrustProviderType(UserTrustProviderType value);
    internal bool IsSetUserTrustProviderType();
    public string get_VerifiedAccessTrustProviderId();
    public void set_VerifiedAccessTrustProviderId(string value);
    internal bool IsSetVerifiedAccessTrustProviderId();
}
public class Amazon.EC2.Model.VerifiedAccessTrustProviderCondensed : object {
    private string _description;
    private DeviceTrustProviderType _deviceTrustProviderType;
    private TrustProviderType _trustProviderType;
    private UserTrustProviderType _userTrustProviderType;
    private string _verifiedAccessTrustProviderId;
    public string Description { get; public set; }
    public DeviceTrustProviderType DeviceTrustProviderType { get; public set; }
    public TrustProviderType TrustProviderType { get; public set; }
    public UserTrustProviderType UserTrustProviderType { get; public set; }
    public string VerifiedAccessTrustProviderId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DeviceTrustProviderType get_DeviceTrustProviderType();
    public void set_DeviceTrustProviderType(DeviceTrustProviderType value);
    internal bool IsSetDeviceTrustProviderType();
    public TrustProviderType get_TrustProviderType();
    public void set_TrustProviderType(TrustProviderType value);
    internal bool IsSetTrustProviderType();
    public UserTrustProviderType get_UserTrustProviderType();
    public void set_UserTrustProviderType(UserTrustProviderType value);
    internal bool IsSetUserTrustProviderType();
    public string get_VerifiedAccessTrustProviderId();
    public void set_VerifiedAccessTrustProviderId(string value);
    internal bool IsSetVerifiedAccessTrustProviderId();
}
public class Amazon.EC2.Model.VgwTelemetry : object {
    private Nullable`1<int> _acceptedRouteCount;
    private string _certificateArn;
    private Nullable`1<DateTime> _lastStatusChange;
    private string _outsideIpAddress;
    private TelemetryStatus _status;
    private string _statusMessage;
    public Nullable`1<int> AcceptedRouteCount { get; public set; }
    public string CertificateArn { get; public set; }
    public Nullable`1<DateTime> LastStatusChange { get; public set; }
    public string OutsideIpAddress { get; public set; }
    public TelemetryStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public Nullable`1<int> get_AcceptedRouteCount();
    public void set_AcceptedRouteCount(Nullable`1<int> value);
    internal bool IsSetAcceptedRouteCount();
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public Nullable`1<DateTime> get_LastStatusChange();
    public void set_LastStatusChange(Nullable`1<DateTime> value);
    internal bool IsSetLastStatusChange();
    public string get_OutsideIpAddress();
    public void set_OutsideIpAddress(string value);
    internal bool IsSetOutsideIpAddress();
    public TelemetryStatus get_Status();
    public void set_Status(TelemetryStatus value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.Volume : object {
    private List`1<VolumeAttachment> _attachments;
    private string _availabilityZone;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<bool> _fastRestored;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiAttachEnabled;
    private string _outpostArn;
    private Nullable`1<int> _size;
    private string _snapshotId;
    private SSEType _sseType;
    private VolumeState _state;
    private List`1<Tag> _tags;
    private Nullable`1<int> _throughput;
    private string _volumeId;
    private VolumeType _volumeType;
    public List`1<VolumeAttachment> Attachments { get; public set; }
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public Nullable`1<bool> FastRestored { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiAttachEnabled { get; public set; }
    public string OutpostArn { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public string SnapshotId { get; public set; }
    public SSEType SseType { get; public set; }
    public VolumeState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<int> Throughput { get; public set; }
    public string VolumeId { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public List`1<VolumeAttachment> get_Attachments();
    public void set_Attachments(List`1<VolumeAttachment> value);
    internal bool IsSetAttachments();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public Nullable`1<bool> get_FastRestored();
    public void set_FastRestored(Nullable`1<bool> value);
    internal bool IsSetFastRestored();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiAttachEnabled();
    public void set_MultiAttachEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiAttachEnabled();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public Nullable`1<int> get_Size();
    public void set_Size(Nullable`1<int> value);
    internal bool IsSetSize();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public SSEType get_SseType();
    public void set_SseType(SSEType value);
    internal bool IsSetSseType();
    public VolumeState get_State();
    public void set_State(VolumeState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_Throughput();
    public void set_Throughput(Nullable`1<int> value);
    internal bool IsSetThroughput();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.VolumeAttachment : object {
    private string _associatedResource;
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private string _device;
    private string _instanceId;
    private string _instanceOwningService;
    private VolumeAttachmentState _state;
    private string _volumeId;
    public string AssociatedResource { get; public set; }
    public Nullable`1<DateTime> AttachTime { get; public set; }
    public Nullable`1<bool> DeleteOnTermination { get; public set; }
    public string Device { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceOwningService { get; public set; }
    public VolumeAttachmentState State { get; public set; }
    public string VolumeId { get; public set; }
    public string get_AssociatedResource();
    public void set_AssociatedResource(string value);
    internal bool IsSetAssociatedResource();
    public Nullable`1<DateTime> get_AttachTime();
    public void set_AttachTime(Nullable`1<DateTime> value);
    internal bool IsSetAttachTime();
    public Nullable`1<bool> get_DeleteOnTermination();
    public void set_DeleteOnTermination(Nullable`1<bool> value);
    internal bool IsSetDeleteOnTermination();
    public string get_Device();
    public void set_Device(string value);
    internal bool IsSetDevice();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceOwningService();
    public void set_InstanceOwningService(string value);
    internal bool IsSetInstanceOwningService();
    public VolumeAttachmentState get_State();
    public void set_State(VolumeAttachmentState value);
    internal bool IsSetState();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.VolumeDetail : object {
    private Nullable`1<long> _size;
    [AWSPropertyAttribute]
public Nullable`1<long> Size { get; public set; }
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    internal bool IsSetSize();
}
public class Amazon.EC2.Model.VolumeModification : object {
    private Nullable`1<DateTime> _endTime;
    private VolumeModificationState _modificationState;
    private Nullable`1<int> _originalIops;
    private Nullable`1<bool> _originalMultiAttachEnabled;
    private Nullable`1<int> _originalSize;
    private Nullable`1<int> _originalThroughput;
    private VolumeType _originalVolumeType;
    private Nullable`1<long> _progress;
    private Nullable`1<DateTime> _startTime;
    private string _statusMessage;
    private Nullable`1<int> _targetIops;
    private Nullable`1<bool> _targetMultiAttachEnabled;
    private Nullable`1<int> _targetSize;
    private Nullable`1<int> _targetThroughput;
    private VolumeType _targetVolumeType;
    private string _volumeId;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public VolumeModificationState ModificationState { get; public set; }
    public Nullable`1<int> OriginalIops { get; public set; }
    public Nullable`1<bool> OriginalMultiAttachEnabled { get; public set; }
    public Nullable`1<int> OriginalSize { get; public set; }
    public Nullable`1<int> OriginalThroughput { get; public set; }
    public VolumeType OriginalVolumeType { get; public set; }
    public Nullable`1<long> Progress { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string StatusMessage { get; public set; }
    public Nullable`1<int> TargetIops { get; public set; }
    public Nullable`1<bool> TargetMultiAttachEnabled { get; public set; }
    public Nullable`1<int> TargetSize { get; public set; }
    public Nullable`1<int> TargetThroughput { get; public set; }
    public VolumeType TargetVolumeType { get; public set; }
    public string VolumeId { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public VolumeModificationState get_ModificationState();
    public void set_ModificationState(VolumeModificationState value);
    internal bool IsSetModificationState();
    public Nullable`1<int> get_OriginalIops();
    public void set_OriginalIops(Nullable`1<int> value);
    internal bool IsSetOriginalIops();
    public Nullable`1<bool> get_OriginalMultiAttachEnabled();
    public void set_OriginalMultiAttachEnabled(Nullable`1<bool> value);
    internal bool IsSetOriginalMultiAttachEnabled();
    public Nullable`1<int> get_OriginalSize();
    public void set_OriginalSize(Nullable`1<int> value);
    internal bool IsSetOriginalSize();
    public Nullable`1<int> get_OriginalThroughput();
    public void set_OriginalThroughput(Nullable`1<int> value);
    internal bool IsSetOriginalThroughput();
    public VolumeType get_OriginalVolumeType();
    public void set_OriginalVolumeType(VolumeType value);
    internal bool IsSetOriginalVolumeType();
    public Nullable`1<long> get_Progress();
    public void set_Progress(Nullable`1<long> value);
    internal bool IsSetProgress();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public Nullable`1<int> get_TargetIops();
    public void set_TargetIops(Nullable`1<int> value);
    internal bool IsSetTargetIops();
    public Nullable`1<bool> get_TargetMultiAttachEnabled();
    public void set_TargetMultiAttachEnabled(Nullable`1<bool> value);
    internal bool IsSetTargetMultiAttachEnabled();
    public Nullable`1<int> get_TargetSize();
    public void set_TargetSize(Nullable`1<int> value);
    internal bool IsSetTargetSize();
    public Nullable`1<int> get_TargetThroughput();
    public void set_TargetThroughput(Nullable`1<int> value);
    internal bool IsSetTargetThroughput();
    public VolumeType get_TargetVolumeType();
    public void set_TargetVolumeType(VolumeType value);
    internal bool IsSetTargetVolumeType();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.VolumeStatusAction : object {
    private string _code;
    private string _description;
    private string _eventId;
    private string _eventType;
    public string Code { get; public set; }
    public string Description { get; public set; }
    public string EventId { get; public set; }
    public string EventType { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public string get_EventType();
    public void set_EventType(string value);
    internal bool IsSetEventType();
}
public class Amazon.EC2.Model.VolumeStatusAttachmentStatus : object {
    private string _instanceId;
    private string _ioPerformance;
    public string InstanceId { get; public set; }
    public string IoPerformance { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_IoPerformance();
    public void set_IoPerformance(string value);
    internal bool IsSetIoPerformance();
}
public class Amazon.EC2.Model.VolumeStatusDetails : object {
    private VolumeStatusName _name;
    private string _status;
    public VolumeStatusName Name { get; public set; }
    public string Status { get; public set; }
    public VolumeStatusName get_Name();
    public void set_Name(VolumeStatusName value);
    internal bool IsSetName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.VolumeStatusEvent : object {
    private string _description;
    private string _eventId;
    private string _eventType;
    private string _instanceId;
    private Nullable`1<DateTime> _notAfter;
    private Nullable`1<DateTime> _notBefore;
    public string Description { get; public set; }
    public string EventId { get; public set; }
    public string EventType { get; public set; }
    public string InstanceId { get; public set; }
    public Nullable`1<DateTime> NotAfter { get; public set; }
    public Nullable`1<DateTime> NotBefore { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public string get_EventType();
    public void set_EventType(string value);
    internal bool IsSetEventType();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<DateTime> get_NotAfter();
    public void set_NotAfter(Nullable`1<DateTime> value);
    internal bool IsSetNotAfter();
    public Nullable`1<DateTime> get_NotBefore();
    public void set_NotBefore(Nullable`1<DateTime> value);
    internal bool IsSetNotBefore();
}
public class Amazon.EC2.Model.VolumeStatusInfo : object {
    private List`1<VolumeStatusDetails> _details;
    private VolumeStatusInfoStatus _status;
    public List`1<VolumeStatusDetails> Details { get; public set; }
    public VolumeStatusInfoStatus Status { get; public set; }
    public List`1<VolumeStatusDetails> get_Details();
    public void set_Details(List`1<VolumeStatusDetails> value);
    internal bool IsSetDetails();
    public VolumeStatusInfoStatus get_Status();
    public void set_Status(VolumeStatusInfoStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.VolumeStatusItem : object {
    private List`1<VolumeStatusAction> _actions;
    private List`1<VolumeStatusAttachmentStatus> _attachmentStatuses;
    private string _availabilityZone;
    private List`1<VolumeStatusEvent> _events;
    private string _outpostArn;
    private string _volumeId;
    private VolumeStatusInfo _volumeStatus;
    public List`1<VolumeStatusAction> Actions { get; public set; }
    public List`1<VolumeStatusAttachmentStatus> AttachmentStatuses { get; public set; }
    public string AvailabilityZone { get; public set; }
    public List`1<VolumeStatusEvent> Events { get; public set; }
    public string OutpostArn { get; public set; }
    public string VolumeId { get; public set; }
    public VolumeStatusInfo VolumeStatus { get; public set; }
    public List`1<VolumeStatusAction> get_Actions();
    public void set_Actions(List`1<VolumeStatusAction> value);
    internal bool IsSetActions();
    public List`1<VolumeStatusAttachmentStatus> get_AttachmentStatuses();
    public void set_AttachmentStatuses(List`1<VolumeStatusAttachmentStatus> value);
    internal bool IsSetAttachmentStatuses();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<VolumeStatusEvent> get_Events();
    public void set_Events(List`1<VolumeStatusEvent> value);
    internal bool IsSetEvents();
    public string get_OutpostArn();
    public void set_OutpostArn(string value);
    internal bool IsSetOutpostArn();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public VolumeStatusInfo get_VolumeStatus();
    public void set_VolumeStatus(VolumeStatusInfo value);
    internal bool IsSetVolumeStatus();
}
public class Amazon.EC2.Model.Vpc : object {
    private string _cidrBlock;
    private List`1<VpcCidrBlockAssociation> _cidrBlockAssociationSet;
    private string _dhcpOptionsId;
    private Tenancy _instanceTenancy;
    private List`1<VpcIpv6CidrBlockAssociation> _ipv6CidrBlockAssociationSet;
    private Nullable`1<bool> _isDefault;
    private string _ownerId;
    private VpcState _state;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string CidrBlock { get; public set; }
    public List`1<VpcCidrBlockAssociation> CidrBlockAssociationSet { get; public set; }
    public string DhcpOptionsId { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public List`1<VpcIpv6CidrBlockAssociation> Ipv6CidrBlockAssociationSet { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public string OwnerId { get; public set; }
    public VpcState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public List`1<VpcCidrBlockAssociation> get_CidrBlockAssociationSet();
    public void set_CidrBlockAssociationSet(List`1<VpcCidrBlockAssociation> value);
    internal bool IsSetCidrBlockAssociationSet();
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public List`1<VpcIpv6CidrBlockAssociation> get_Ipv6CidrBlockAssociationSet();
    public void set_Ipv6CidrBlockAssociationSet(List`1<VpcIpv6CidrBlockAssociation> value);
    internal bool IsSetIpv6CidrBlockAssociationSet();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public VpcState get_State();
    public void set_State(VpcState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcAttachment : object {
    private AttachmentStatus _state;
    private string _vpcId;
    public AttachmentStatus State { get; public set; }
    public string VpcId { get; public set; }
    public AttachmentStatus get_State();
    public void set_State(AttachmentStatus value);
    internal bool IsSetState();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcCidrBlockAssociation : object {
    private string _associationId;
    private string _cidrBlock;
    private VpcCidrBlockState _cidrBlockState;
    public string AssociationId { get; public set; }
    public string CidrBlock { get; public set; }
    public VpcCidrBlockState CidrBlockState { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public VpcCidrBlockState get_CidrBlockState();
    public void set_CidrBlockState(VpcCidrBlockState value);
    internal bool IsSetCidrBlockState();
}
public class Amazon.EC2.Model.VpcCidrBlockState : object {
    private VpcCidrBlockStateCode _state;
    private string _statusMessage;
    public VpcCidrBlockStateCode State { get; public set; }
    public string StatusMessage { get; public set; }
    public VpcCidrBlockStateCode get_State();
    public void set_State(VpcCidrBlockStateCode value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.VpcClassicLink : object {
    private Nullable`1<bool> _classicLinkEnabled;
    private List`1<Tag> _tags;
    private string _vpcId;
    public Nullable`1<bool> ClassicLinkEnabled { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_ClassicLinkEnabled();
    public void set_ClassicLinkEnabled(Nullable`1<bool> value);
    internal bool IsSetClassicLinkEnabled();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcEndpoint : object {
    private Nullable`1<DateTime> _creationTimestamp;
    private List`1<DnsEntry> _dnsEntries;
    private DnsOptions _dnsOptions;
    private List`1<SecurityGroupIdentifier> _groups;
    private IpAddressType _ipAddressType;
    private LastError _lastError;
    private List`1<string> _networkInterfaceIds;
    private string _ownerId;
    private string _policyDocument;
    private Nullable`1<bool> _privateDnsEnabled;
    private Nullable`1<bool> _requesterManaged;
    private List`1<string> _routeTableIds;
    private string _serviceName;
    private State _state;
    private List`1<string> _subnetIds;
    private List`1<Tag> _tags;
    private string _vpcEndpointId;
    private VpcEndpointType _vpcEndpointType;
    private string _vpcId;
    public Nullable`1<DateTime> CreationTimestamp { get; public set; }
    public List`1<DnsEntry> DnsEntries { get; public set; }
    public DnsOptions DnsOptions { get; public set; }
    public List`1<SecurityGroupIdentifier> Groups { get; public set; }
    public IpAddressType IpAddressType { get; public set; }
    public LastError LastError { get; public set; }
    public List`1<string> NetworkInterfaceIds { get; public set; }
    public string OwnerId { get; public set; }
    public string PolicyDocument { get; public set; }
    public Nullable`1<bool> PrivateDnsEnabled { get; public set; }
    public Nullable`1<bool> RequesterManaged { get; public set; }
    public List`1<string> RouteTableIds { get; public set; }
    public string ServiceName { get; public set; }
    public State State { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcEndpointId { get; public set; }
    public VpcEndpointType VpcEndpointType { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<DateTime> get_CreationTimestamp();
    public void set_CreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreationTimestamp();
    public List`1<DnsEntry> get_DnsEntries();
    public void set_DnsEntries(List`1<DnsEntry> value);
    internal bool IsSetDnsEntries();
    public DnsOptions get_DnsOptions();
    public void set_DnsOptions(DnsOptions value);
    internal bool IsSetDnsOptions();
    public List`1<SecurityGroupIdentifier> get_Groups();
    public void set_Groups(List`1<SecurityGroupIdentifier> value);
    internal bool IsSetGroups();
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public LastError get_LastError();
    public void set_LastError(LastError value);
    internal bool IsSetLastError();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public Nullable`1<bool> get_PrivateDnsEnabled();
    public void set_PrivateDnsEnabled(Nullable`1<bool> value);
    internal bool IsSetPrivateDnsEnabled();
    public Nullable`1<bool> get_RequesterManaged();
    public void set_RequesterManaged(Nullable`1<bool> value);
    internal bool IsSetRequesterManaged();
    public List`1<string> get_RouteTableIds();
    public void set_RouteTableIds(List`1<string> value);
    internal bool IsSetRouteTableIds();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
    public VpcEndpointType get_VpcEndpointType();
    public void set_VpcEndpointType(VpcEndpointType value);
    internal bool IsSetVpcEndpointType();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcEndpointConnection : object {
    private Nullable`1<DateTime> _creationTimestamp;
    private List`1<DnsEntry> _dnsEntries;
    private List`1<string> _gatewayLoadBalancerArns;
    private IpAddressType _ipAddressType;
    private List`1<string> _networkLoadBalancerArns;
    private string _serviceId;
    private List`1<Tag> _tags;
    private string _vpcEndpointConnectionId;
    private string _vpcEndpointId;
    private string _vpcEndpointOwner;
    private State _vpcEndpointState;
    public Nullable`1<DateTime> CreationTimestamp { get; public set; }
    public List`1<DnsEntry> DnsEntries { get; public set; }
    public List`1<string> GatewayLoadBalancerArns { get; public set; }
    public IpAddressType IpAddressType { get; public set; }
    public List`1<string> NetworkLoadBalancerArns { get; public set; }
    public string ServiceId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcEndpointConnectionId { get; public set; }
    public string VpcEndpointId { get; public set; }
    public string VpcEndpointOwner { get; public set; }
    public State VpcEndpointState { get; public set; }
    public Nullable`1<DateTime> get_CreationTimestamp();
    public void set_CreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreationTimestamp();
    public List`1<DnsEntry> get_DnsEntries();
    public void set_DnsEntries(List`1<DnsEntry> value);
    internal bool IsSetDnsEntries();
    public List`1<string> get_GatewayLoadBalancerArns();
    public void set_GatewayLoadBalancerArns(List`1<string> value);
    internal bool IsSetGatewayLoadBalancerArns();
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public List`1<string> get_NetworkLoadBalancerArns();
    public void set_NetworkLoadBalancerArns(List`1<string> value);
    internal bool IsSetNetworkLoadBalancerArns();
    public string get_ServiceId();
    public void set_ServiceId(string value);
    internal bool IsSetServiceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcEndpointConnectionId();
    public void set_VpcEndpointConnectionId(string value);
    internal bool IsSetVpcEndpointConnectionId();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
    public string get_VpcEndpointOwner();
    public void set_VpcEndpointOwner(string value);
    internal bool IsSetVpcEndpointOwner();
    public State get_VpcEndpointState();
    public void set_VpcEndpointState(State value);
    internal bool IsSetVpcEndpointState();
}
public class Amazon.EC2.Model.VpcIpv6CidrBlockAssociation : object {
    private string _associationId;
    private string _ipv6CidrBlock;
    private VpcCidrBlockState _ipv6CidrBlockState;
    private string _ipv6Pool;
    private string _networkBorderGroup;
    public string AssociationId { get; public set; }
    public string Ipv6CidrBlock { get; public set; }
    public VpcCidrBlockState Ipv6CidrBlockState { get; public set; }
    public string Ipv6Pool { get; public set; }
    public string NetworkBorderGroup { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_Ipv6CidrBlock();
    public void set_Ipv6CidrBlock(string value);
    internal bool IsSetIpv6CidrBlock();
    public VpcCidrBlockState get_Ipv6CidrBlockState();
    public void set_Ipv6CidrBlockState(VpcCidrBlockState value);
    internal bool IsSetIpv6CidrBlockState();
    public string get_Ipv6Pool();
    public void set_Ipv6Pool(string value);
    internal bool IsSetIpv6Pool();
    public string get_NetworkBorderGroup();
    public void set_NetworkBorderGroup(string value);
    internal bool IsSetNetworkBorderGroup();
}
public class Amazon.EC2.Model.VpcPeeringConnection : object {
    private VpcPeeringConnectionVpcInfo _accepterVpcInfo;
    private Nullable`1<DateTime> _expirationTime;
    private VpcPeeringConnectionVpcInfo _requesterVpcInfo;
    private VpcPeeringConnectionStateReason _status;
    private List`1<Tag> _tags;
    private string _vpcPeeringConnectionId;
    public VpcPeeringConnectionVpcInfo AccepterVpcInfo { get; public set; }
    public Nullable`1<DateTime> ExpirationTime { get; public set; }
    public VpcPeeringConnectionVpcInfo RequesterVpcInfo { get; public set; }
    public VpcPeeringConnectionStateReason Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public VpcPeeringConnectionVpcInfo get_AccepterVpcInfo();
    public void set_AccepterVpcInfo(VpcPeeringConnectionVpcInfo value);
    internal bool IsSetAccepterVpcInfo();
    public Nullable`1<DateTime> get_ExpirationTime();
    public void set_ExpirationTime(Nullable`1<DateTime> value);
    internal bool IsSetExpirationTime();
    public VpcPeeringConnectionVpcInfo get_RequesterVpcInfo();
    public void set_RequesterVpcInfo(VpcPeeringConnectionVpcInfo value);
    internal bool IsSetRequesterVpcInfo();
    public VpcPeeringConnectionStateReason get_Status();
    public void set_Status(VpcPeeringConnectionStateReason value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.VpcPeeringConnectionOptionsDescription : object {
    private Nullable`1<bool> _allowDnsResolutionFromRemoteVpc;
    private Nullable`1<bool> _allowEgressFromLocalClassicLinkToRemoteVpc;
    private Nullable`1<bool> _allowEgressFromLocalVpcToRemoteClassicLink;
    public Nullable`1<bool> AllowDnsResolutionFromRemoteVpc { get; public set; }
    public Nullable`1<bool> AllowEgressFromLocalClassicLinkToRemoteVpc { get; public set; }
    public Nullable`1<bool> AllowEgressFromLocalVpcToRemoteClassicLink { get; public set; }
    public Nullable`1<bool> get_AllowDnsResolutionFromRemoteVpc();
    public void set_AllowDnsResolutionFromRemoteVpc(Nullable`1<bool> value);
    internal bool IsSetAllowDnsResolutionFromRemoteVpc();
    public Nullable`1<bool> get_AllowEgressFromLocalClassicLinkToRemoteVpc();
    public void set_AllowEgressFromLocalClassicLinkToRemoteVpc(Nullable`1<bool> value);
    internal bool IsSetAllowEgressFromLocalClassicLinkToRemoteVpc();
    public Nullable`1<bool> get_AllowEgressFromLocalVpcToRemoteClassicLink();
    public void set_AllowEgressFromLocalVpcToRemoteClassicLink(Nullable`1<bool> value);
    internal bool IsSetAllowEgressFromLocalVpcToRemoteClassicLink();
}
public class Amazon.EC2.Model.VpcPeeringConnectionStateReason : object {
    private VpcPeeringConnectionStateReasonCode _code;
    private string _message;
    public VpcPeeringConnectionStateReasonCode Code { get; public set; }
    public string Message { get; public set; }
    public VpcPeeringConnectionStateReasonCode get_Code();
    public void set_Code(VpcPeeringConnectionStateReasonCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.VpcPeeringConnectionVpcInfo : object {
    private string _cidrBlock;
    private List`1<CidrBlock> _cidrBlockSet;
    private List`1<Ipv6CidrBlock> _ipv6CidrBlockSet;
    private string _ownerId;
    private VpcPeeringConnectionOptionsDescription _peeringOptions;
    private string _region;
    private string _vpcId;
    public string CidrBlock { get; public set; }
    public List`1<CidrBlock> CidrBlockSet { get; public set; }
    public List`1<Ipv6CidrBlock> Ipv6CidrBlockSet { get; public set; }
    public string OwnerId { get; public set; }
    public VpcPeeringConnectionOptionsDescription PeeringOptions { get; public set; }
    public string Region { get; public set; }
    public string VpcId { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public List`1<CidrBlock> get_CidrBlockSet();
    public void set_CidrBlockSet(List`1<CidrBlock> value);
    internal bool IsSetCidrBlockSet();
    public List`1<Ipv6CidrBlock> get_Ipv6CidrBlockSet();
    public void set_Ipv6CidrBlockSet(List`1<Ipv6CidrBlock> value);
    internal bool IsSetIpv6CidrBlockSet();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public VpcPeeringConnectionOptionsDescription get_PeeringOptions();
    public void set_PeeringOptions(VpcPeeringConnectionOptionsDescription value);
    internal bool IsSetPeeringOptions();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpnConnection : object {
    private string _category;
    private string _coreNetworkArn;
    private string _coreNetworkAttachmentArn;
    private string _customerGatewayConfiguration;
    private string _customerGatewayId;
    private GatewayAssociationState _gatewayAssociationState;
    private VpnConnectionOptions _options;
    private List`1<VpnStaticRoute> _routes;
    private VpnState _state;
    private List`1<Tag> _tags;
    private string _transitGatewayId;
    private GatewayType _type;
    private List`1<VgwTelemetry> _vgwTelemetry;
    private string _vpnConnectionId;
    private string _vpnGatewayId;
    public string Category { get; public set; }
    public string CoreNetworkArn { get; public set; }
    public string CoreNetworkAttachmentArn { get; public set; }
    [AWSPropertyAttribute]
public string CustomerGatewayConfiguration { get; public set; }
    public string CustomerGatewayId { get; public set; }
    public GatewayAssociationState GatewayAssociationState { get; public set; }
    public VpnConnectionOptions Options { get; public set; }
    public List`1<VpnStaticRoute> Routes { get; public set; }
    public VpnState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TransitGatewayId { get; public set; }
    public GatewayType Type { get; public set; }
    public List`1<VgwTelemetry> VgwTelemetry { get; public set; }
    public string VpnConnectionId { get; public set; }
    public string VpnGatewayId { get; public set; }
    public string get_Category();
    public void set_Category(string value);
    internal bool IsSetCategory();
    public string get_CoreNetworkArn();
    public void set_CoreNetworkArn(string value);
    internal bool IsSetCoreNetworkArn();
    public string get_CoreNetworkAttachmentArn();
    public void set_CoreNetworkAttachmentArn(string value);
    internal bool IsSetCoreNetworkAttachmentArn();
    public string get_CustomerGatewayConfiguration();
    public void set_CustomerGatewayConfiguration(string value);
    internal bool IsSetCustomerGatewayConfiguration();
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public GatewayAssociationState get_GatewayAssociationState();
    public void set_GatewayAssociationState(GatewayAssociationState value);
    internal bool IsSetGatewayAssociationState();
    public VpnConnectionOptions get_Options();
    public void set_Options(VpnConnectionOptions value);
    internal bool IsSetOptions();
    public List`1<VpnStaticRoute> get_Routes();
    public void set_Routes(List`1<VpnStaticRoute> value);
    internal bool IsSetRoutes();
    public VpnState get_State();
    public void set_State(VpnState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TransitGatewayId();
    public void set_TransitGatewayId(string value);
    internal bool IsSetTransitGatewayId();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
    public List`1<VgwTelemetry> get_VgwTelemetry();
    public void set_VgwTelemetry(List`1<VgwTelemetry> value);
    internal bool IsSetVgwTelemetry();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.VpnConnectionDeviceType : object {
    private string _platform;
    private string _software;
    private string _vendor;
    private string _vpnConnectionDeviceTypeId;
    public string Platform { get; public set; }
    public string Software { get; public set; }
    public string Vendor { get; public set; }
    public string VpnConnectionDeviceTypeId { get; public set; }
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_Software();
    public void set_Software(string value);
    internal bool IsSetSoftware();
    public string get_Vendor();
    public void set_Vendor(string value);
    internal bool IsSetVendor();
    public string get_VpnConnectionDeviceTypeId();
    public void set_VpnConnectionDeviceTypeId(string value);
    internal bool IsSetVpnConnectionDeviceTypeId();
}
public class Amazon.EC2.Model.VpnConnectionOptions : object {
    private Nullable`1<bool> _enableAcceleration;
    private string _localIpv4NetworkCidr;
    private string _localIpv6NetworkCidr;
    private string _outsideIpAddressType;
    private string _remoteIpv4NetworkCidr;
    private string _remoteIpv6NetworkCidr;
    private Nullable`1<bool> _staticRoutesOnly;
    private string _transportTransitGatewayAttachmentId;
    private TunnelInsideIpVersion _tunnelInsideIpVersion;
    private List`1<TunnelOption> _tunnelOptions;
    public Nullable`1<bool> EnableAcceleration { get; public set; }
    public string LocalIpv4NetworkCidr { get; public set; }
    public string LocalIpv6NetworkCidr { get; public set; }
    public string OutsideIpAddressType { get; public set; }
    public string RemoteIpv4NetworkCidr { get; public set; }
    public string RemoteIpv6NetworkCidr { get; public set; }
    public Nullable`1<bool> StaticRoutesOnly { get; public set; }
    public string TransportTransitGatewayAttachmentId { get; public set; }
    public TunnelInsideIpVersion TunnelInsideIpVersion { get; public set; }
    public List`1<TunnelOption> TunnelOptions { get; public set; }
    public Nullable`1<bool> get_EnableAcceleration();
    public void set_EnableAcceleration(Nullable`1<bool> value);
    internal bool IsSetEnableAcceleration();
    public string get_LocalIpv4NetworkCidr();
    public void set_LocalIpv4NetworkCidr(string value);
    internal bool IsSetLocalIpv4NetworkCidr();
    public string get_LocalIpv6NetworkCidr();
    public void set_LocalIpv6NetworkCidr(string value);
    internal bool IsSetLocalIpv6NetworkCidr();
    public string get_OutsideIpAddressType();
    public void set_OutsideIpAddressType(string value);
    internal bool IsSetOutsideIpAddressType();
    public string get_RemoteIpv4NetworkCidr();
    public void set_RemoteIpv4NetworkCidr(string value);
    internal bool IsSetRemoteIpv4NetworkCidr();
    public string get_RemoteIpv6NetworkCidr();
    public void set_RemoteIpv6NetworkCidr(string value);
    internal bool IsSetRemoteIpv6NetworkCidr();
    public Nullable`1<bool> get_StaticRoutesOnly();
    public void set_StaticRoutesOnly(Nullable`1<bool> value);
    internal bool IsSetStaticRoutesOnly();
    public string get_TransportTransitGatewayAttachmentId();
    public void set_TransportTransitGatewayAttachmentId(string value);
    internal bool IsSetTransportTransitGatewayAttachmentId();
    public TunnelInsideIpVersion get_TunnelInsideIpVersion();
    public void set_TunnelInsideIpVersion(TunnelInsideIpVersion value);
    internal bool IsSetTunnelInsideIpVersion();
    public List`1<TunnelOption> get_TunnelOptions();
    public void set_TunnelOptions(List`1<TunnelOption> value);
    internal bool IsSetTunnelOptions();
}
public class Amazon.EC2.Model.VpnConnectionOptionsSpecification : object {
    private Nullable`1<bool> _enableAcceleration;
    private string _localIpv4NetworkCidr;
    private string _localIpv6NetworkCidr;
    private string _outsideIpAddressType;
    private string _remoteIpv4NetworkCidr;
    private string _remoteIpv6NetworkCidr;
    private Nullable`1<bool> _staticRoutesOnly;
    private string _transportTransitGatewayAttachmentId;
    private TunnelInsideIpVersion _tunnelInsideIpVersion;
    private List`1<VpnTunnelOptionsSpecification> _tunnelOptions;
    public Nullable`1<bool> EnableAcceleration { get; public set; }
    public string LocalIpv4NetworkCidr { get; public set; }
    public string LocalIpv6NetworkCidr { get; public set; }
    public string OutsideIpAddressType { get; public set; }
    public string RemoteIpv4NetworkCidr { get; public set; }
    public string RemoteIpv6NetworkCidr { get; public set; }
    public Nullable`1<bool> StaticRoutesOnly { get; public set; }
    public string TransportTransitGatewayAttachmentId { get; public set; }
    public TunnelInsideIpVersion TunnelInsideIpVersion { get; public set; }
    public List`1<VpnTunnelOptionsSpecification> TunnelOptions { get; public set; }
    public Nullable`1<bool> get_EnableAcceleration();
    public void set_EnableAcceleration(Nullable`1<bool> value);
    internal bool IsSetEnableAcceleration();
    public string get_LocalIpv4NetworkCidr();
    public void set_LocalIpv4NetworkCidr(string value);
    internal bool IsSetLocalIpv4NetworkCidr();
    public string get_LocalIpv6NetworkCidr();
    public void set_LocalIpv6NetworkCidr(string value);
    internal bool IsSetLocalIpv6NetworkCidr();
    public string get_OutsideIpAddressType();
    public void set_OutsideIpAddressType(string value);
    internal bool IsSetOutsideIpAddressType();
    public string get_RemoteIpv4NetworkCidr();
    public void set_RemoteIpv4NetworkCidr(string value);
    internal bool IsSetRemoteIpv4NetworkCidr();
    public string get_RemoteIpv6NetworkCidr();
    public void set_RemoteIpv6NetworkCidr(string value);
    internal bool IsSetRemoteIpv6NetworkCidr();
    public Nullable`1<bool> get_StaticRoutesOnly();
    public void set_StaticRoutesOnly(Nullable`1<bool> value);
    internal bool IsSetStaticRoutesOnly();
    public string get_TransportTransitGatewayAttachmentId();
    public void set_TransportTransitGatewayAttachmentId(string value);
    internal bool IsSetTransportTransitGatewayAttachmentId();
    public TunnelInsideIpVersion get_TunnelInsideIpVersion();
    public void set_TunnelInsideIpVersion(TunnelInsideIpVersion value);
    internal bool IsSetTunnelInsideIpVersion();
    public List`1<VpnTunnelOptionsSpecification> get_TunnelOptions();
    public void set_TunnelOptions(List`1<VpnTunnelOptionsSpecification> value);
    internal bool IsSetTunnelOptions();
}
public class Amazon.EC2.Model.VpnGateway : object {
    private Nullable`1<long> _amazonSideAsn;
    private string _availabilityZone;
    private VpnState _state;
    private List`1<Tag> _tags;
    private GatewayType _type;
    private List`1<VpcAttachment> _vpcAttachments;
    private string _vpnGatewayId;
    public Nullable`1<long> AmazonSideAsn { get; public set; }
    public string AvailabilityZone { get; public set; }
    public VpnState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public GatewayType Type { get; public set; }
    public List`1<VpcAttachment> VpcAttachments { get; public set; }
    public string VpnGatewayId { get; public set; }
    public Nullable`1<long> get_AmazonSideAsn();
    public void set_AmazonSideAsn(Nullable`1<long> value);
    internal bool IsSetAmazonSideAsn();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public VpnState get_State();
    public void set_State(VpnState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
    public List`1<VpcAttachment> get_VpcAttachments();
    public void set_VpcAttachments(List`1<VpcAttachment> value);
    internal bool IsSetVpcAttachments();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.VpnStaticRoute : object {
    private string _destinationCidrBlock;
    private VpnStaticRouteSource _source;
    private VpnState _state;
    public string DestinationCidrBlock { get; public set; }
    public VpnStaticRouteSource Source { get; public set; }
    public VpnState State { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public VpnStaticRouteSource get_Source();
    public void set_Source(VpnStaticRouteSource value);
    internal bool IsSetSource();
    public VpnState get_State();
    public void set_State(VpnState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.VpnTunnelLogOptions : object {
    private CloudWatchLogOptions _cloudWatchLogOptions;
    public CloudWatchLogOptions CloudWatchLogOptions { get; public set; }
    public CloudWatchLogOptions get_CloudWatchLogOptions();
    public void set_CloudWatchLogOptions(CloudWatchLogOptions value);
    internal bool IsSetCloudWatchLogOptions();
}
public class Amazon.EC2.Model.VpnTunnelLogOptionsSpecification : object {
    private CloudWatchLogOptionsSpecification _cloudWatchLogOptions;
    public CloudWatchLogOptionsSpecification CloudWatchLogOptions { get; public set; }
    public CloudWatchLogOptionsSpecification get_CloudWatchLogOptions();
    public void set_CloudWatchLogOptions(CloudWatchLogOptionsSpecification value);
    internal bool IsSetCloudWatchLogOptions();
}
public class Amazon.EC2.Model.VpnTunnelOptionsSpecification : object {
    private string _dpdTimeoutAction;
    private Nullable`1<int> _dpdTimeoutSeconds;
    private Nullable`1<bool> _enableTunnelLifecycleControl;
    private List`1<IKEVersionsRequestListValue> _ikeVersions;
    private VpnTunnelLogOptionsSpecification _logOptions;
    private List`1<Phase1DHGroupNumbersRequestListValue> _phase1DHGroupNumbers;
    private List`1<Phase1EncryptionAlgorithmsRequestListValue> _phase1EncryptionAlgorithms;
    private List`1<Phase1IntegrityAlgorithmsRequestListValue> _phase1IntegrityAlgorithms;
    private Nullable`1<int> _phase1LifetimeSeconds;
    private List`1<Phase2DHGroupNumbersRequestListValue> _phase2DHGroupNumbers;
    private List`1<Phase2EncryptionAlgorithmsRequestListValue> _phase2EncryptionAlgorithms;
    private List`1<Phase2IntegrityAlgorithmsRequestListValue> _phase2IntegrityAlgorithms;
    private Nullable`1<int> _phase2LifetimeSeconds;
    private string _preSharedKey;
    private Nullable`1<int> _rekeyFuzzPercentage;
    private Nullable`1<int> _rekeyMarginTimeSeconds;
    private Nullable`1<int> _replayWindowSize;
    private string _startupAction;
    private string _tunnelInsideCidr;
    private string _tunnelInsideIpv6Cidr;
    public string DPDTimeoutAction { get; public set; }
    public Nullable`1<int> DPDTimeoutSeconds { get; public set; }
    public Nullable`1<bool> EnableTunnelLifecycleControl { get; public set; }
    public List`1<IKEVersionsRequestListValue> IKEVersions { get; public set; }
    public VpnTunnelLogOptionsSpecification LogOptions { get; public set; }
    public List`1<Phase1DHGroupNumbersRequestListValue> Phase1DHGroupNumbers { get; public set; }
    public List`1<Phase1EncryptionAlgorithmsRequestListValue> Phase1EncryptionAlgorithms { get; public set; }
    public List`1<Phase1IntegrityAlgorithmsRequestListValue> Phase1IntegrityAlgorithms { get; public set; }
    public Nullable`1<int> Phase1LifetimeSeconds { get; public set; }
    public List`1<Phase2DHGroupNumbersRequestListValue> Phase2DHGroupNumbers { get; public set; }
    public List`1<Phase2EncryptionAlgorithmsRequestListValue> Phase2EncryptionAlgorithms { get; public set; }
    public List`1<Phase2IntegrityAlgorithmsRequestListValue> Phase2IntegrityAlgorithms { get; public set; }
    public Nullable`1<int> Phase2LifetimeSeconds { get; public set; }
    [AWSPropertyAttribute]
public string PreSharedKey { get; public set; }
    public Nullable`1<int> RekeyFuzzPercentage { get; public set; }
    public Nullable`1<int> RekeyMarginTimeSeconds { get; public set; }
    public Nullable`1<int> ReplayWindowSize { get; public set; }
    public string StartupAction { get; public set; }
    public string TunnelInsideCidr { get; public set; }
    public string TunnelInsideIpv6Cidr { get; public set; }
    public string get_DPDTimeoutAction();
    public void set_DPDTimeoutAction(string value);
    internal bool IsSetDPDTimeoutAction();
    public Nullable`1<int> get_DPDTimeoutSeconds();
    public void set_DPDTimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetDPDTimeoutSeconds();
    public Nullable`1<bool> get_EnableTunnelLifecycleControl();
    public void set_EnableTunnelLifecycleControl(Nullable`1<bool> value);
    internal bool IsSetEnableTunnelLifecycleControl();
    public List`1<IKEVersionsRequestListValue> get_IKEVersions();
    public void set_IKEVersions(List`1<IKEVersionsRequestListValue> value);
    internal bool IsSetIKEVersions();
    public VpnTunnelLogOptionsSpecification get_LogOptions();
    public void set_LogOptions(VpnTunnelLogOptionsSpecification value);
    internal bool IsSetLogOptions();
    public List`1<Phase1DHGroupNumbersRequestListValue> get_Phase1DHGroupNumbers();
    public void set_Phase1DHGroupNumbers(List`1<Phase1DHGroupNumbersRequestListValue> value);
    internal bool IsSetPhase1DHGroupNumbers();
    public List`1<Phase1EncryptionAlgorithmsRequestListValue> get_Phase1EncryptionAlgorithms();
    public void set_Phase1EncryptionAlgorithms(List`1<Phase1EncryptionAlgorithmsRequestListValue> value);
    internal bool IsSetPhase1EncryptionAlgorithms();
    public List`1<Phase1IntegrityAlgorithmsRequestListValue> get_Phase1IntegrityAlgorithms();
    public void set_Phase1IntegrityAlgorithms(List`1<Phase1IntegrityAlgorithmsRequestListValue> value);
    internal bool IsSetPhase1IntegrityAlgorithms();
    public Nullable`1<int> get_Phase1LifetimeSeconds();
    public void set_Phase1LifetimeSeconds(Nullable`1<int> value);
    internal bool IsSetPhase1LifetimeSeconds();
    public List`1<Phase2DHGroupNumbersRequestListValue> get_Phase2DHGroupNumbers();
    public void set_Phase2DHGroupNumbers(List`1<Phase2DHGroupNumbersRequestListValue> value);
    internal bool IsSetPhase2DHGroupNumbers();
    public List`1<Phase2EncryptionAlgorithmsRequestListValue> get_Phase2EncryptionAlgorithms();
    public void set_Phase2EncryptionAlgorithms(List`1<Phase2EncryptionAlgorithmsRequestListValue> value);
    internal bool IsSetPhase2EncryptionAlgorithms();
    public List`1<Phase2IntegrityAlgorithmsRequestListValue> get_Phase2IntegrityAlgorithms();
    public void set_Phase2IntegrityAlgorithms(List`1<Phase2IntegrityAlgorithmsRequestListValue> value);
    internal bool IsSetPhase2IntegrityAlgorithms();
    public Nullable`1<int> get_Phase2LifetimeSeconds();
    public void set_Phase2LifetimeSeconds(Nullable`1<int> value);
    internal bool IsSetPhase2LifetimeSeconds();
    public string get_PreSharedKey();
    public void set_PreSharedKey(string value);
    internal bool IsSetPreSharedKey();
    public Nullable`1<int> get_RekeyFuzzPercentage();
    public void set_RekeyFuzzPercentage(Nullable`1<int> value);
    internal bool IsSetRekeyFuzzPercentage();
    public Nullable`1<int> get_RekeyMarginTimeSeconds();
    public void set_RekeyMarginTimeSeconds(Nullable`1<int> value);
    internal bool IsSetRekeyMarginTimeSeconds();
    public Nullable`1<int> get_ReplayWindowSize();
    public void set_ReplayWindowSize(Nullable`1<int> value);
    internal bool IsSetReplayWindowSize();
    public string get_StartupAction();
    public void set_StartupAction(string value);
    internal bool IsSetStartupAction();
    public string get_TunnelInsideCidr();
    public void set_TunnelInsideCidr(string value);
    internal bool IsSetTunnelInsideCidr();
    public string get_TunnelInsideIpv6Cidr();
    public void set_TunnelInsideIpv6Cidr(string value);
    internal bool IsSetTunnelInsideIpv6Cidr();
}
public class Amazon.EC2.Model.WithdrawByoipCidrRequest : AmazonEC2Request {
    private string _cidr;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
}
public class Amazon.EC2.Model.WithdrawByoipCidrResponse : AmazonWebServiceResponse {
    private ByoipCidr _byoipCidr;
    public ByoipCidr ByoipCidr { get; public set; }
    public ByoipCidr get_ByoipCidr();
    public void set_ByoipCidr(ByoipCidr value);
    internal bool IsSetByoipCidr();
}
public class Amazon.EC2.ModifyAvailabilityZoneOptInStatus : ConstantClass {
    public static ModifyAvailabilityZoneOptInStatus NotOptedIn;
    public static ModifyAvailabilityZoneOptInStatus OptedIn;
    public ModifyAvailabilityZoneOptInStatus(string value);
    private static ModifyAvailabilityZoneOptInStatus();
    public static ModifyAvailabilityZoneOptInStatus FindValue(string value);
    public static ModifyAvailabilityZoneOptInStatus op_Implicit(string value);
}
public class Amazon.EC2.MonitoringState : ConstantClass {
    public static MonitoringState Disabled;
    public static MonitoringState Disabling;
    public static MonitoringState Enabled;
    public static MonitoringState Pending;
    public MonitoringState(string value);
    private static MonitoringState();
    public static MonitoringState FindValue(string value);
    public static MonitoringState op_Implicit(string value);
}
public class Amazon.EC2.MoveStatus : ConstantClass {
    public static MoveStatus MovingToVpc;
    public static MoveStatus RestoringToClassic;
    public MoveStatus(string value);
    private static MoveStatus();
    public static MoveStatus FindValue(string value);
    public static MoveStatus op_Implicit(string value);
}
public class Amazon.EC2.MulticastSupportValue : ConstantClass {
    public static MulticastSupportValue Disable;
    public static MulticastSupportValue Enable;
    public MulticastSupportValue(string value);
    private static MulticastSupportValue();
    public static MulticastSupportValue FindValue(string value);
    public static MulticastSupportValue op_Implicit(string value);
}
public class Amazon.EC2.NatGatewayAddressStatus : ConstantClass {
    public static NatGatewayAddressStatus Assigning;
    public static NatGatewayAddressStatus Associating;
    public static NatGatewayAddressStatus Disassociating;
    public static NatGatewayAddressStatus Failed;
    public static NatGatewayAddressStatus Succeeded;
    public static NatGatewayAddressStatus Unassigning;
    public NatGatewayAddressStatus(string value);
    private static NatGatewayAddressStatus();
    public static NatGatewayAddressStatus FindValue(string value);
    public static NatGatewayAddressStatus op_Implicit(string value);
}
public class Amazon.EC2.NatGatewayState : ConstantClass {
    public static NatGatewayState Available;
    public static NatGatewayState Deleted;
    public static NatGatewayState Deleting;
    public static NatGatewayState Failed;
    public static NatGatewayState Pending;
    public NatGatewayState(string value);
    private static NatGatewayState();
    public static NatGatewayState FindValue(string value);
    public static NatGatewayState op_Implicit(string value);
}
public class Amazon.EC2.NetworkInterfaceAttribute : ConstantClass {
    public static NetworkInterfaceAttribute AssociatePublicIpAddress;
    public static NetworkInterfaceAttribute Attachment;
    public static NetworkInterfaceAttribute Description;
    public static NetworkInterfaceAttribute GroupSet;
    public static NetworkInterfaceAttribute SourceDestCheck;
    public NetworkInterfaceAttribute(string value);
    private static NetworkInterfaceAttribute();
    public static NetworkInterfaceAttribute FindValue(string value);
    public static NetworkInterfaceAttribute op_Implicit(string value);
}
public class Amazon.EC2.NetworkInterfaceCreationType : ConstantClass {
    public static NetworkInterfaceCreationType Branch;
    public static NetworkInterfaceCreationType Efa;
    public static NetworkInterfaceCreationType Trunk;
    public NetworkInterfaceCreationType(string value);
    private static NetworkInterfaceCreationType();
    public static NetworkInterfaceCreationType FindValue(string value);
    public static NetworkInterfaceCreationType op_Implicit(string value);
}
public class Amazon.EC2.NetworkInterfacePermissionStateCode : ConstantClass {
    public static NetworkInterfacePermissionStateCode Granted;
    public static NetworkInterfacePermissionStateCode Pending;
    public static NetworkInterfacePermissionStateCode Revoked;
    public static NetworkInterfacePermissionStateCode Revoking;
    public NetworkInterfacePermissionStateCode(string value);
    private static NetworkInterfacePermissionStateCode();
    public static NetworkInterfacePermissionStateCode FindValue(string value);
    public static NetworkInterfacePermissionStateCode op_Implicit(string value);
}
public class Amazon.EC2.NetworkInterfaceStatus : ConstantClass {
    public static NetworkInterfaceStatus Associated;
    public static NetworkInterfaceStatus Attaching;
    public static NetworkInterfaceStatus Available;
    public static NetworkInterfaceStatus Detaching;
    public static NetworkInterfaceStatus InUse;
    public NetworkInterfaceStatus(string value);
    private static NetworkInterfaceStatus();
    public static NetworkInterfaceStatus FindValue(string value);
    public static NetworkInterfaceStatus op_Implicit(string value);
}
public class Amazon.EC2.NetworkInterfaceType : ConstantClass {
    public static NetworkInterfaceType Api_gateway_managed;
    public static NetworkInterfaceType Aws_codestar_connections_managed;
    public static NetworkInterfaceType Branch;
    public static NetworkInterfaceType Efa;
    public static NetworkInterfaceType Gateway_load_balancer;
    public static NetworkInterfaceType Gateway_load_balancer_endpoint;
    public static NetworkInterfaceType Global_accelerator_managed;
    public static NetworkInterfaceType Interface;
    public static NetworkInterfaceType Iot_rules_managed;
    public static NetworkInterfaceType Lambda;
    public static NetworkInterfaceType Load_balancer;
    public static NetworkInterfaceType NatGateway;
    public static NetworkInterfaceType Network_load_balancer;
    public static NetworkInterfaceType Quicksight;
    public static NetworkInterfaceType Transit_gateway;
    public static NetworkInterfaceType Trunk;
    public static NetworkInterfaceType Vpc_endpoint;
    public NetworkInterfaceType(string value);
    private static NetworkInterfaceType();
    public static NetworkInterfaceType FindValue(string value);
    public static NetworkInterfaceType op_Implicit(string value);
}
public class Amazon.EC2.NitroEnclavesSupport : ConstantClass {
    public static NitroEnclavesSupport Supported;
    public static NitroEnclavesSupport Unsupported;
    public NitroEnclavesSupport(string value);
    private static NitroEnclavesSupport();
    public static NitroEnclavesSupport FindValue(string value);
    public static NitroEnclavesSupport op_Implicit(string value);
}
public class Amazon.EC2.NitroTpmSupport : ConstantClass {
    public static NitroTpmSupport Supported;
    public static NitroTpmSupport Unsupported;
    public NitroTpmSupport(string value);
    private static NitroTpmSupport();
    public static NitroTpmSupport FindValue(string value);
    public static NitroTpmSupport op_Implicit(string value);
}
public class Amazon.EC2.OfferingClassType : ConstantClass {
    public static OfferingClassType Convertible;
    public static OfferingClassType Standard;
    public OfferingClassType(string value);
    private static OfferingClassType();
    public static OfferingClassType FindValue(string value);
    public static OfferingClassType op_Implicit(string value);
}
public class Amazon.EC2.OfferingTypeValues : ConstantClass {
    public static OfferingTypeValues AllUpfront;
    public static OfferingTypeValues HeavyUtilization;
    public static OfferingTypeValues LightUtilization;
    public static OfferingTypeValues MediumUtilization;
    public static OfferingTypeValues NoUpfront;
    public static OfferingTypeValues PartialUpfront;
    public OfferingTypeValues(string value);
    private static OfferingTypeValues();
    public static OfferingTypeValues FindValue(string value);
    public static OfferingTypeValues op_Implicit(string value);
}
public class Amazon.EC2.OnDemandAllocationStrategy : ConstantClass {
    public static OnDemandAllocationStrategy LowestPrice;
    public static OnDemandAllocationStrategy Prioritized;
    public OnDemandAllocationStrategy(string value);
    private static OnDemandAllocationStrategy();
    public static OnDemandAllocationStrategy FindValue(string value);
    public static OnDemandAllocationStrategy op_Implicit(string value);
}
public class Amazon.EC2.OperationType : ConstantClass {
    public static OperationType Add;
    public static OperationType Remove;
    public OperationType(string value);
    private static OperationType();
    public static OperationType FindValue(string value);
    public static OperationType op_Implicit(string value);
}
public class Amazon.EC2.PartitionLoadFrequency : ConstantClass {
    public static PartitionLoadFrequency Daily;
    public static PartitionLoadFrequency Monthly;
    public static PartitionLoadFrequency None;
    public static PartitionLoadFrequency Weekly;
    public PartitionLoadFrequency(string value);
    private static PartitionLoadFrequency();
    public static PartitionLoadFrequency FindValue(string value);
    public static PartitionLoadFrequency op_Implicit(string value);
}
public class Amazon.EC2.PayerResponsibility : ConstantClass {
    public static PayerResponsibility ServiceOwner;
    public PayerResponsibility(string value);
    private static PayerResponsibility();
    public static PayerResponsibility FindValue(string value);
    public static PayerResponsibility op_Implicit(string value);
}
public class Amazon.EC2.PaymentOption : ConstantClass {
    public static PaymentOption AllUpfront;
    public static PaymentOption NoUpfront;
    public static PaymentOption PartialUpfront;
    public PaymentOption(string value);
    private static PaymentOption();
    public static PaymentOption FindValue(string value);
    public static PaymentOption op_Implicit(string value);
}
public class Amazon.EC2.PeriodType : ConstantClass {
    public static PeriodType FifteenMinutes;
    public static PeriodType FiveMinutes;
    public static PeriodType OneDay;
    public static PeriodType OneHour;
    public static PeriodType OneWeek;
    public static PeriodType ThreeHours;
    public PeriodType(string value);
    private static PeriodType();
    public static PeriodType FindValue(string value);
    public static PeriodType op_Implicit(string value);
}
public class Amazon.EC2.PermissionGroup : ConstantClass {
    public static PermissionGroup All;
    public PermissionGroup(string value);
    private static PermissionGroup();
    public static PermissionGroup FindValue(string value);
    public static PermissionGroup op_Implicit(string value);
}
public class Amazon.EC2.PhcSupport : ConstantClass {
    public static PhcSupport Supported;
    public static PhcSupport Unsupported;
    public PhcSupport(string value);
    private static PhcSupport();
    public static PhcSupport FindValue(string value);
    public static PhcSupport op_Implicit(string value);
}
public class Amazon.EC2.PlacementGroupState : ConstantClass {
    public static PlacementGroupState Available;
    public static PlacementGroupState Deleted;
    public static PlacementGroupState Deleting;
    public static PlacementGroupState Pending;
    public PlacementGroupState(string value);
    private static PlacementGroupState();
    public static PlacementGroupState FindValue(string value);
    public static PlacementGroupState op_Implicit(string value);
}
public class Amazon.EC2.PlacementGroupStrategy : ConstantClass {
    public static PlacementGroupStrategy Cluster;
    public static PlacementGroupStrategy Partition;
    public static PlacementGroupStrategy Spread;
    public PlacementGroupStrategy(string value);
    private static PlacementGroupStrategy();
    public static PlacementGroupStrategy FindValue(string value);
    public static PlacementGroupStrategy op_Implicit(string value);
}
public class Amazon.EC2.PlacementStrategy : ConstantClass {
    public static PlacementStrategy Cluster;
    public static PlacementStrategy Partition;
    public static PlacementStrategy Spread;
    public PlacementStrategy(string value);
    private static PlacementStrategy();
    public static PlacementStrategy FindValue(string value);
    public static PlacementStrategy op_Implicit(string value);
}
public class Amazon.EC2.PlatformValues : ConstantClass {
    public static PlatformValues Windows;
    public PlatformValues(string value);
    private static PlatformValues();
    public static PlatformValues FindValue(string value);
    public static PlatformValues op_Implicit(string value);
}
public class Amazon.EC2.PrefixListState : ConstantClass {
    public static PrefixListState CreateComplete;
    public static PrefixListState CreateFailed;
    public static PrefixListState CreateInProgress;
    public static PrefixListState DeleteComplete;
    public static PrefixListState DeleteFailed;
    public static PrefixListState DeleteInProgress;
    public static PrefixListState ModifyComplete;
    public static PrefixListState ModifyFailed;
    public static PrefixListState ModifyInProgress;
    public static PrefixListState RestoreComplete;
    public static PrefixListState RestoreFailed;
    public static PrefixListState RestoreInProgress;
    public PrefixListState(string value);
    private static PrefixListState();
    public static PrefixListState FindValue(string value);
    public static PrefixListState op_Implicit(string value);
}
public class Amazon.EC2.PrincipalType : ConstantClass {
    public static PrincipalType Account;
    public static PrincipalType All;
    public static PrincipalType OrganizationUnit;
    public static PrincipalType Role;
    public static PrincipalType Service;
    public static PrincipalType User;
    public PrincipalType(string value);
    private static PrincipalType();
    public static PrincipalType FindValue(string value);
    public static PrincipalType op_Implicit(string value);
}
public class Amazon.EC2.ProductCodeValues : ConstantClass {
    public static ProductCodeValues Devpay;
    public static ProductCodeValues Marketplace;
    public ProductCodeValues(string value);
    private static ProductCodeValues();
    public static ProductCodeValues FindValue(string value);
    public static ProductCodeValues op_Implicit(string value);
}
public class Amazon.EC2.Protocol : ConstantClass {
    public static Protocol Tcp;
    public static Protocol Udp;
    public Protocol(string value);
    private static Protocol();
    public static Protocol FindValue(string value);
    public static Protocol op_Implicit(string value);
}
public class Amazon.EC2.ProtocolValue : ConstantClass {
    public static ProtocolValue Gre;
    public ProtocolValue(string value);
    private static ProtocolValue();
    public static ProtocolValue FindValue(string value);
    public static ProtocolValue op_Implicit(string value);
}
public class Amazon.EC2.RecurringChargeFrequency : ConstantClass {
    public static RecurringChargeFrequency Hourly;
    public RecurringChargeFrequency(string value);
    private static RecurringChargeFrequency();
    public static RecurringChargeFrequency FindValue(string value);
    public static RecurringChargeFrequency op_Implicit(string value);
}
public class Amazon.EC2.ReplacementStrategy : ConstantClass {
    public static ReplacementStrategy Launch;
    public static ReplacementStrategy LaunchBeforeTerminate;
    public ReplacementStrategy(string value);
    private static ReplacementStrategy();
    public static ReplacementStrategy FindValue(string value);
    public static ReplacementStrategy op_Implicit(string value);
}
public class Amazon.EC2.ReplaceRootVolumeTaskState : ConstantClass {
    public static ReplaceRootVolumeTaskState Failed;
    public static ReplaceRootVolumeTaskState FailedDetached;
    public static ReplaceRootVolumeTaskState Failing;
    public static ReplaceRootVolumeTaskState InProgress;
    public static ReplaceRootVolumeTaskState Pending;
    public static ReplaceRootVolumeTaskState Succeeded;
    public ReplaceRootVolumeTaskState(string value);
    private static ReplaceRootVolumeTaskState();
    public static ReplaceRootVolumeTaskState FindValue(string value);
    public static ReplaceRootVolumeTaskState op_Implicit(string value);
}
public class Amazon.EC2.ReportInstanceReasonCodes : ConstantClass {
    public static ReportInstanceReasonCodes InstanceStuckInState;
    public static ReportInstanceReasonCodes NotAcceptingCredentials;
    public static ReportInstanceReasonCodes Other;
    public static ReportInstanceReasonCodes PasswordNotAvailable;
    public static ReportInstanceReasonCodes PerformanceEbsVolume;
    public static ReportInstanceReasonCodes PerformanceInstanceStore;
    public static ReportInstanceReasonCodes PerformanceNetwork;
    public static ReportInstanceReasonCodes PerformanceOther;
    public static ReportInstanceReasonCodes Unresponsive;
    public ReportInstanceReasonCodes(string value);
    private static ReportInstanceReasonCodes();
    public static ReportInstanceReasonCodes FindValue(string value);
    public static ReportInstanceReasonCodes op_Implicit(string value);
}
public class Amazon.EC2.ReportStatusType : ConstantClass {
    public static ReportStatusType Impaired;
    public static ReportStatusType Ok;
    public ReportStatusType(string value);
    private static ReportStatusType();
    public static ReportStatusType FindValue(string value);
    public static ReportStatusType op_Implicit(string value);
}
public class Amazon.EC2.ReservationState : ConstantClass {
    public static ReservationState Active;
    public static ReservationState PaymentFailed;
    public static ReservationState PaymentPending;
    public static ReservationState Retired;
    public ReservationState(string value);
    private static ReservationState();
    public static ReservationState FindValue(string value);
    public static ReservationState op_Implicit(string value);
}
public class Amazon.EC2.ReservedInstanceState : ConstantClass {
    public static ReservedInstanceState Active;
    public static ReservedInstanceState PaymentFailed;
    public static ReservedInstanceState PaymentPending;
    public static ReservedInstanceState Queued;
    public static ReservedInstanceState QueuedDeleted;
    public static ReservedInstanceState Retired;
    public ReservedInstanceState(string value);
    private static ReservedInstanceState();
    public static ReservedInstanceState FindValue(string value);
    public static ReservedInstanceState op_Implicit(string value);
}
public class Amazon.EC2.ResetFpgaImageAttributeName : ConstantClass {
    public static ResetFpgaImageAttributeName LoadPermission;
    public ResetFpgaImageAttributeName(string value);
    private static ResetFpgaImageAttributeName();
    public static ResetFpgaImageAttributeName FindValue(string value);
    public static ResetFpgaImageAttributeName op_Implicit(string value);
}
public class Amazon.EC2.ResetImageAttributeName : ConstantClass {
    public static ResetImageAttributeName LaunchPermission;
    public ResetImageAttributeName(string value);
    private static ResetImageAttributeName();
    public static ResetImageAttributeName FindValue(string value);
    public static ResetImageAttributeName op_Implicit(string value);
}
public class Amazon.EC2.ResourceType : ConstantClass {
    public static ResourceType CapacityReservation;
    public static ResourceType CapacityReservationFleet;
    public static ResourceType CarrierGateway;
    public static ResourceType ClientVpnEndpoint;
    public static ResourceType CoipPool;
    public static ResourceType CustomerGateway;
    public static ResourceType DedicatedHost;
    public static ResourceType DhcpOptions;
    public static ResourceType EgressOnlyInternetGateway;
    public static ResourceType ElasticGpu;
    public static ResourceType ElasticIp;
    public static ResourceType ExportImageTask;
    public static ResourceType ExportInstanceTask;
    public static ResourceType Fleet;
    public static ResourceType FpgaImage;
    public static ResourceType HostReservation;
    public static ResourceType Image;
    public static ResourceType ImportImageTask;
    public static ResourceType ImportSnapshotTask;
    public static ResourceType Instance;
    public static ResourceType InstanceConnectEndpoint;
    public static ResourceType InstanceEventWindow;
    public static ResourceType InternetGateway;
    public static ResourceType Ipam;
    public static ResourceType IpamExternalResourceVerificationToken;
    public static ResourceType IpamPool;
    public static ResourceType IpamResourceDiscovery;
    public static ResourceType IpamResourceDiscoveryAssociation;
    public static ResourceType IpamScope;
    public static ResourceType Ipv4poolEc2;
    public static ResourceType Ipv6poolEc2;
    public static ResourceType KeyPair;
    public static ResourceType LaunchTemplate;
    public static ResourceType LocalGateway;
    public static ResourceType LocalGatewayRouteTable;
    public static ResourceType LocalGatewayRouteTableVirtualInterfaceGroupAssociation;
    public static ResourceType LocalGatewayRouteTableVpcAssociation;
    public static ResourceType LocalGatewayVirtualInterface;
    public static ResourceType LocalGatewayVirtualInterfaceGroup;
    public static ResourceType Natgateway;
    public static ResourceType NetworkAcl;
    public static ResourceType NetworkInsightsAccessScope;
    public static ResourceType NetworkInsightsAccessScopeAnalysis;
    public static ResourceType NetworkInsightsAnalysis;
    public static ResourceType NetworkInsightsPath;
    public static ResourceType NetworkInterface;
    public static ResourceType PlacementGroup;
    public static ResourceType PrefixList;
    public static ResourceType ReplaceRootVolumeTask;
    public static ResourceType ReservedInstances;
    public static ResourceType RouteTable;
    public static ResourceType SecurityGroup;
    public static ResourceType SecurityGroupRule;
    public static ResourceType Snapshot;
    public static ResourceType SpotFleetRequest;
    public static ResourceType SpotInstancesRequest;
    public static ResourceType Subnet;
    public static ResourceType SubnetCidrReservation;
    public static ResourceType TrafficMirrorFilter;
    public static ResourceType TrafficMirrorFilterRule;
    public static ResourceType TrafficMirrorSession;
    public static ResourceType TrafficMirrorTarget;
    public static ResourceType TransitGateway;
    public static ResourceType TransitGatewayAttachment;
    public static ResourceType TransitGatewayConnectPeer;
    public static ResourceType TransitGatewayMulticastDomain;
    public static ResourceType TransitGatewayPolicyTable;
    public static ResourceType TransitGatewayRouteTable;
    public static ResourceType TransitGatewayRouteTableAnnouncement;
    public static ResourceType VerifiedAccessEndpoint;
    public static ResourceType VerifiedAccessGroup;
    public static ResourceType VerifiedAccessInstance;
    public static ResourceType VerifiedAccessPolicy;
    public static ResourceType VerifiedAccessTrustProvider;
    public static ResourceType Volume;
    public static ResourceType Vpc;
    public static ResourceType VpcBlockPublicAccessExclusion;
    public static ResourceType VpcEndpoint;
    public static ResourceType VpcEndpointConnection;
    public static ResourceType VpcEndpointConnectionDeviceType;
    public static ResourceType VpcEndpointService;
    public static ResourceType VpcEndpointServicePermission;
    public static ResourceType VpcFlowLog;
    public static ResourceType VpcPeeringConnection;
    public static ResourceType VpnConnection;
    public static ResourceType VpnConnectionDeviceType;
    public static ResourceType VpnGateway;
    public ResourceType(string value);
    private static ResourceType();
    public static ResourceType FindValue(string value);
    public static ResourceType op_Implicit(string value);
}
public class Amazon.EC2.RIProductDescription : ConstantClass {
    public static RIProductDescription LinuxUNIX;
    public static RIProductDescription LinuxUNIXAmazonVPC;
    public static RIProductDescription Windows;
    public static RIProductDescription WindowsAmazonVPC;
    public RIProductDescription(string value);
    private static RIProductDescription();
    public static RIProductDescription FindValue(string value);
    public static RIProductDescription op_Implicit(string value);
}
public class Amazon.EC2.RootDeviceType : ConstantClass {
    public static RootDeviceType Ebs;
    public static RootDeviceType InstanceStore;
    public RootDeviceType(string value);
    private static RootDeviceType();
    public static RootDeviceType FindValue(string value);
    public static RootDeviceType op_Implicit(string value);
}
public class Amazon.EC2.RouteOrigin : ConstantClass {
    public static RouteOrigin CreateRoute;
    public static RouteOrigin CreateRouteTable;
    public static RouteOrigin EnableVgwRoutePropagation;
    public RouteOrigin(string value);
    private static RouteOrigin();
    public static RouteOrigin FindValue(string value);
    public static RouteOrigin op_Implicit(string value);
}
public class Amazon.EC2.RouteState : ConstantClass {
    public static RouteState Active;
    public static RouteState Blackhole;
    public RouteState(string value);
    private static RouteState();
    public static RouteState FindValue(string value);
    public static RouteState op_Implicit(string value);
}
public class Amazon.EC2.RouteTableAssociationStateCode : ConstantClass {
    public static RouteTableAssociationStateCode Associated;
    public static RouteTableAssociationStateCode Associating;
    public static RouteTableAssociationStateCode Disassociated;
    public static RouteTableAssociationStateCode Disassociating;
    public static RouteTableAssociationStateCode Failed;
    public RouteTableAssociationStateCode(string value);
    private static RouteTableAssociationStateCode();
    public static RouteTableAssociationStateCode FindValue(string value);
    public static RouteTableAssociationStateCode op_Implicit(string value);
}
public class Amazon.EC2.RuleAction : ConstantClass {
    public static RuleAction Allow;
    public static RuleAction Deny;
    public RuleAction(string value);
    private static RuleAction();
    public static RuleAction FindValue(string value);
    public static RuleAction op_Implicit(string value);
}
public class Amazon.EC2.Scope : ConstantClass {
    public static Scope AvailabilityZone;
    public static Scope Region;
    public Scope(string value);
    private static Scope();
    public static Scope FindValue(string value);
    public static Scope op_Implicit(string value);
}
public class Amazon.EC2.SecurityGroupReferencingSupportValue : ConstantClass {
    public static SecurityGroupReferencingSupportValue Disable;
    public static SecurityGroupReferencingSupportValue Enable;
    public SecurityGroupReferencingSupportValue(string value);
    private static SecurityGroupReferencingSupportValue();
    public static SecurityGroupReferencingSupportValue FindValue(string value);
    public static SecurityGroupReferencingSupportValue op_Implicit(string value);
}
public class Amazon.EC2.SelfServicePortal : ConstantClass {
    public static SelfServicePortal Disabled;
    public static SelfServicePortal Enabled;
    public SelfServicePortal(string value);
    private static SelfServicePortal();
    public static SelfServicePortal FindValue(string value);
    public static SelfServicePortal op_Implicit(string value);
}
public class Amazon.EC2.ServiceConnectivityType : ConstantClass {
    public static ServiceConnectivityType Ipv4;
    public static ServiceConnectivityType Ipv6;
    public ServiceConnectivityType(string value);
    private static ServiceConnectivityType();
    public static ServiceConnectivityType FindValue(string value);
    public static ServiceConnectivityType op_Implicit(string value);
}
public class Amazon.EC2.ServiceState : ConstantClass {
    public static ServiceState Available;
    public static ServiceState Deleted;
    public static ServiceState Deleting;
    public static ServiceState Failed;
    public static ServiceState Pending;
    public ServiceState(string value);
    private static ServiceState();
    public static ServiceState FindValue(string value);
    public static ServiceState op_Implicit(string value);
}
public class Amazon.EC2.ServiceType : ConstantClass {
    public static ServiceType Gateway;
    public static ServiceType GatewayLoadBalancer;
    public static ServiceType Interface;
    public ServiceType(string value);
    private static ServiceType();
    public static ServiceType FindValue(string value);
    public static ServiceType op_Implicit(string value);
}
public class Amazon.EC2.ShutdownBehavior : ConstantClass {
    public static ShutdownBehavior Stop;
    public static ShutdownBehavior Terminate;
    public ShutdownBehavior(string value);
    private static ShutdownBehavior();
    public static ShutdownBehavior FindValue(string value);
    public static ShutdownBehavior op_Implicit(string value);
}
public class Amazon.EC2.SnapshotAttributeName : ConstantClass {
    public static SnapshotAttributeName CreateVolumePermission;
    public static SnapshotAttributeName ProductCodes;
    public SnapshotAttributeName(string value);
    private static SnapshotAttributeName();
    public static SnapshotAttributeName FindValue(string value);
    public static SnapshotAttributeName op_Implicit(string value);
}
public class Amazon.EC2.SnapshotBlockPublicAccessState : ConstantClass {
    public static SnapshotBlockPublicAccessState BlockAllSharing;
    public static SnapshotBlockPublicAccessState BlockNewSharing;
    public static SnapshotBlockPublicAccessState Unblocked;
    public SnapshotBlockPublicAccessState(string value);
    private static SnapshotBlockPublicAccessState();
    public static SnapshotBlockPublicAccessState FindValue(string value);
    public static SnapshotBlockPublicAccessState op_Implicit(string value);
}
public class Amazon.EC2.SnapshotState : ConstantClass {
    public static SnapshotState Completed;
    public static SnapshotState Error;
    public static SnapshotState Pending;
    public static SnapshotState Recoverable;
    public static SnapshotState Recovering;
    public SnapshotState(string value);
    private static SnapshotState();
    public static SnapshotState FindValue(string value);
    public static SnapshotState op_Implicit(string value);
}
public class Amazon.EC2.SpotAllocationStrategy : ConstantClass {
    public static SpotAllocationStrategy CapacityOptimized;
    public static SpotAllocationStrategy CapacityOptimizedPrioritized;
    public static SpotAllocationStrategy Diversified;
    public static SpotAllocationStrategy LowestPrice;
    public static SpotAllocationStrategy PriceCapacityOptimized;
    public SpotAllocationStrategy(string value);
    private static SpotAllocationStrategy();
    public static SpotAllocationStrategy FindValue(string value);
    public static SpotAllocationStrategy op_Implicit(string value);
}
public class Amazon.EC2.SpotInstanceInterruptionBehavior : ConstantClass {
    public static SpotInstanceInterruptionBehavior Hibernate;
    public static SpotInstanceInterruptionBehavior Stop;
    public static SpotInstanceInterruptionBehavior Terminate;
    public SpotInstanceInterruptionBehavior(string value);
    private static SpotInstanceInterruptionBehavior();
    public static SpotInstanceInterruptionBehavior FindValue(string value);
    public static SpotInstanceInterruptionBehavior op_Implicit(string value);
}
public class Amazon.EC2.SpotInstanceState : ConstantClass {
    public static SpotInstanceState Active;
    public static SpotInstanceState Cancelled;
    public static SpotInstanceState Closed;
    public static SpotInstanceState Disabled;
    public static SpotInstanceState Failed;
    public static SpotInstanceState Open;
    public SpotInstanceState(string value);
    private static SpotInstanceState();
    public static SpotInstanceState FindValue(string value);
    public static SpotInstanceState op_Implicit(string value);
}
public class Amazon.EC2.SpotInstanceType : ConstantClass {
    public static SpotInstanceType OneTime;
    public static SpotInstanceType Persistent;
    public SpotInstanceType(string value);
    private static SpotInstanceType();
    public static SpotInstanceType FindValue(string value);
    public static SpotInstanceType op_Implicit(string value);
}
public class Amazon.EC2.SpreadLevel : ConstantClass {
    public static SpreadLevel Host;
    public static SpreadLevel Rack;
    public SpreadLevel(string value);
    private static SpreadLevel();
    public static SpreadLevel FindValue(string value);
    public static SpreadLevel op_Implicit(string value);
}
public class Amazon.EC2.SSEType : ConstantClass {
    public static SSEType None;
    public static SSEType SseEbs;
    public static SSEType SseKms;
    public SSEType(string value);
    private static SSEType();
    public static SSEType FindValue(string value);
    public static SSEType op_Implicit(string value);
}
public class Amazon.EC2.State : ConstantClass {
    public static State Available;
    public static State Deleted;
    public static State Deleting;
    public static State Expired;
    public static State Failed;
    public static State Pending;
    public static State PendingAcceptance;
    public static State Rejected;
    public State(string value);
    private static State();
    public static State FindValue(string value);
    public static State op_Implicit(string value);
}
public class Amazon.EC2.StaticSourcesSupportValue : ConstantClass {
    public static StaticSourcesSupportValue Disable;
    public static StaticSourcesSupportValue Enable;
    public StaticSourcesSupportValue(string value);
    private static StaticSourcesSupportValue();
    public static StaticSourcesSupportValue FindValue(string value);
    public static StaticSourcesSupportValue op_Implicit(string value);
}
public class Amazon.EC2.StatisticType : ConstantClass {
    public static StatisticType P50;
    public StatisticType(string value);
    private static StatisticType();
    public static StatisticType FindValue(string value);
    public static StatisticType op_Implicit(string value);
}
public class Amazon.EC2.Status : ConstantClass {
    public static Status InClassic;
    public static Status InVpc;
    public static Status MoveInProgress;
    public Status(string value);
    private static Status();
    public static Status FindValue(string value);
    public static Status op_Implicit(string value);
}
public class Amazon.EC2.StatusName : ConstantClass {
    public static StatusName Reachability;
    public StatusName(string value);
    private static StatusName();
    public static StatusName FindValue(string value);
    public static StatusName op_Implicit(string value);
}
public class Amazon.EC2.StatusType : ConstantClass {
    public static StatusType Failed;
    public static StatusType Initializing;
    public static StatusType InsufficientData;
    public static StatusType Passed;
    public StatusType(string value);
    private static StatusType();
    public static StatusType FindValue(string value);
    public static StatusType op_Implicit(string value);
}
public class Amazon.EC2.StorageTier : ConstantClass {
    public static StorageTier Archive;
    public static StorageTier Standard;
    public StorageTier(string value);
    private static StorageTier();
    public static StorageTier FindValue(string value);
    public static StorageTier op_Implicit(string value);
}
public class Amazon.EC2.SubnetCidrBlockStateCode : ConstantClass {
    public static SubnetCidrBlockStateCode Associated;
    public static SubnetCidrBlockStateCode Associating;
    public static SubnetCidrBlockStateCode Disassociated;
    public static SubnetCidrBlockStateCode Disassociating;
    public static SubnetCidrBlockStateCode Failed;
    public static SubnetCidrBlockStateCode Failing;
    public SubnetCidrBlockStateCode(string value);
    private static SubnetCidrBlockStateCode();
    public static SubnetCidrBlockStateCode FindValue(string value);
    public static SubnetCidrBlockStateCode op_Implicit(string value);
}
public class Amazon.EC2.SubnetCidrReservationType : ConstantClass {
    public static SubnetCidrReservationType Explicit;
    public static SubnetCidrReservationType Prefix;
    public SubnetCidrReservationType(string value);
    private static SubnetCidrReservationType();
    public static SubnetCidrReservationType FindValue(string value);
    public static SubnetCidrReservationType op_Implicit(string value);
}
public class Amazon.EC2.SubnetState : ConstantClass {
    public static SubnetState Available;
    public static SubnetState Pending;
    public static SubnetState Unavailable;
    public SubnetState(string value);
    private static SubnetState();
    public static SubnetState FindValue(string value);
    public static SubnetState op_Implicit(string value);
}
public class Amazon.EC2.SummaryStatus : ConstantClass {
    public static SummaryStatus Impaired;
    public static SummaryStatus Initializing;
    public static SummaryStatus InsufficientData;
    public static SummaryStatus NotApplicable;
    public static SummaryStatus Ok;
    public SummaryStatus(string value);
    private static SummaryStatus();
    public static SummaryStatus FindValue(string value);
    public static SummaryStatus op_Implicit(string value);
}
public class Amazon.EC2.SupportedAdditionalProcessorFeature : ConstantClass {
    public static SupportedAdditionalProcessorFeature AmdSevSnp;
    public SupportedAdditionalProcessorFeature(string value);
    private static SupportedAdditionalProcessorFeature();
    public static SupportedAdditionalProcessorFeature FindValue(string value);
    public static SupportedAdditionalProcessorFeature op_Implicit(string value);
}
public class Amazon.EC2.TargetCapacityUnitType : ConstantClass {
    public static TargetCapacityUnitType MemoryMib;
    public static TargetCapacityUnitType Units;
    public static TargetCapacityUnitType Vcpu;
    public TargetCapacityUnitType(string value);
    private static TargetCapacityUnitType();
    public static TargetCapacityUnitType FindValue(string value);
    public static TargetCapacityUnitType op_Implicit(string value);
}
public class Amazon.EC2.TargetStorageTier : ConstantClass {
    public static TargetStorageTier Archive;
    public TargetStorageTier(string value);
    private static TargetStorageTier();
    public static TargetStorageTier FindValue(string value);
    public static TargetStorageTier op_Implicit(string value);
}
public class Amazon.EC2.TelemetryStatus : ConstantClass {
    public static TelemetryStatus DOWN;
    public static TelemetryStatus UP;
    public TelemetryStatus(string value);
    private static TelemetryStatus();
    public static TelemetryStatus FindValue(string value);
    public static TelemetryStatus op_Implicit(string value);
}
public class Amazon.EC2.Tenancy : ConstantClass {
    public static Tenancy Dedicated;
    public static Tenancy Default;
    public static Tenancy Host;
    public Tenancy(string value);
    private static Tenancy();
    public static Tenancy FindValue(string value);
    public static Tenancy op_Implicit(string value);
}
public class Amazon.EC2.TieringOperationStatus : ConstantClass {
    public static TieringOperationStatus ArchivalCompleted;
    public static TieringOperationStatus ArchivalFailed;
    public static TieringOperationStatus ArchivalInProgress;
    public static TieringOperationStatus PermanentRestoreCompleted;
    public static TieringOperationStatus PermanentRestoreFailed;
    public static TieringOperationStatus PermanentRestoreInProgress;
    public static TieringOperationStatus TemporaryRestoreCompleted;
    public static TieringOperationStatus TemporaryRestoreFailed;
    public static TieringOperationStatus TemporaryRestoreInProgress;
    public TieringOperationStatus(string value);
    private static TieringOperationStatus();
    public static TieringOperationStatus FindValue(string value);
    public static TieringOperationStatus op_Implicit(string value);
}
public class Amazon.EC2.TokenState : ConstantClass {
    public static TokenState Expired;
    public static TokenState Valid;
    public TokenState(string value);
    private static TokenState();
    public static TokenState FindValue(string value);
    public static TokenState op_Implicit(string value);
}
public class Amazon.EC2.TpmSupportValues : ConstantClass {
    public static TpmSupportValues V20;
    public TpmSupportValues(string value);
    private static TpmSupportValues();
    public static TpmSupportValues FindValue(string value);
    public static TpmSupportValues op_Implicit(string value);
}
public class Amazon.EC2.TrafficDirection : ConstantClass {
    public static TrafficDirection Egress;
    public static TrafficDirection Ingress;
    public TrafficDirection(string value);
    private static TrafficDirection();
    public static TrafficDirection FindValue(string value);
    public static TrafficDirection op_Implicit(string value);
}
public class Amazon.EC2.TrafficMirrorFilterRuleField : ConstantClass {
    public static TrafficMirrorFilterRuleField Description;
    public static TrafficMirrorFilterRuleField DestinationPortRange;
    public static TrafficMirrorFilterRuleField Protocol;
    public static TrafficMirrorFilterRuleField SourcePortRange;
    public TrafficMirrorFilterRuleField(string value);
    private static TrafficMirrorFilterRuleField();
    public static TrafficMirrorFilterRuleField FindValue(string value);
    public static TrafficMirrorFilterRuleField op_Implicit(string value);
}
public class Amazon.EC2.TrafficMirrorNetworkService : ConstantClass {
    public static TrafficMirrorNetworkService AmazonDns;
    public TrafficMirrorNetworkService(string value);
    private static TrafficMirrorNetworkService();
    public static TrafficMirrorNetworkService FindValue(string value);
    public static TrafficMirrorNetworkService op_Implicit(string value);
}
public class Amazon.EC2.TrafficMirrorRuleAction : ConstantClass {
    public static TrafficMirrorRuleAction Accept;
    public static TrafficMirrorRuleAction Reject;
    public TrafficMirrorRuleAction(string value);
    private static TrafficMirrorRuleAction();
    public static TrafficMirrorRuleAction FindValue(string value);
    public static TrafficMirrorRuleAction op_Implicit(string value);
}
public class Amazon.EC2.TrafficMirrorSessionField : ConstantClass {
    public static TrafficMirrorSessionField Description;
    public static TrafficMirrorSessionField PacketLength;
    public static TrafficMirrorSessionField VirtualNetworkId;
    public TrafficMirrorSessionField(string value);
    private static TrafficMirrorSessionField();
    public static TrafficMirrorSessionField FindValue(string value);
    public static TrafficMirrorSessionField op_Implicit(string value);
}
public class Amazon.EC2.TrafficMirrorTargetType : ConstantClass {
    public static TrafficMirrorTargetType GatewayLoadBalancerEndpoint;
    public static TrafficMirrorTargetType NetworkInterface;
    public static TrafficMirrorTargetType NetworkLoadBalancer;
    public TrafficMirrorTargetType(string value);
    private static TrafficMirrorTargetType();
    public static TrafficMirrorTargetType FindValue(string value);
    public static TrafficMirrorTargetType op_Implicit(string value);
}
public class Amazon.EC2.TrafficType : ConstantClass {
    public static TrafficType ACCEPT;
    public static TrafficType ALL;
    public static TrafficType REJECT;
    public TrafficType(string value);
    private static TrafficType();
    public static TrafficType FindValue(string value);
    public static TrafficType op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayAssociationState : ConstantClass {
    public static TransitGatewayAssociationState Associated;
    public static TransitGatewayAssociationState Associating;
    public static TransitGatewayAssociationState Disassociated;
    public static TransitGatewayAssociationState Disassociating;
    public TransitGatewayAssociationState(string value);
    private static TransitGatewayAssociationState();
    public static TransitGatewayAssociationState FindValue(string value);
    public static TransitGatewayAssociationState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayAttachmentResourceType : ConstantClass {
    public static TransitGatewayAttachmentResourceType Connect;
    public static TransitGatewayAttachmentResourceType DirectConnectGateway;
    public static TransitGatewayAttachmentResourceType Peering;
    public static TransitGatewayAttachmentResourceType TgwPeering;
    public static TransitGatewayAttachmentResourceType Vpc;
    public static TransitGatewayAttachmentResourceType Vpn;
    public TransitGatewayAttachmentResourceType(string value);
    private static TransitGatewayAttachmentResourceType();
    public static TransitGatewayAttachmentResourceType FindValue(string value);
    public static TransitGatewayAttachmentResourceType op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayAttachmentState : ConstantClass {
    public static TransitGatewayAttachmentState Available;
    public static TransitGatewayAttachmentState Deleted;
    public static TransitGatewayAttachmentState Deleting;
    public static TransitGatewayAttachmentState Failed;
    public static TransitGatewayAttachmentState Failing;
    public static TransitGatewayAttachmentState Initiating;
    public static TransitGatewayAttachmentState InitiatingRequest;
    public static TransitGatewayAttachmentState Modifying;
    public static TransitGatewayAttachmentState Pending;
    public static TransitGatewayAttachmentState PendingAcceptance;
    public static TransitGatewayAttachmentState Rejected;
    public static TransitGatewayAttachmentState Rejecting;
    public static TransitGatewayAttachmentState RollingBack;
    public TransitGatewayAttachmentState(string value);
    private static TransitGatewayAttachmentState();
    public static TransitGatewayAttachmentState FindValue(string value);
    public static TransitGatewayAttachmentState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayConnectPeerState : ConstantClass {
    public static TransitGatewayConnectPeerState Available;
    public static TransitGatewayConnectPeerState Deleted;
    public static TransitGatewayConnectPeerState Deleting;
    public static TransitGatewayConnectPeerState Pending;
    public TransitGatewayConnectPeerState(string value);
    private static TransitGatewayConnectPeerState();
    public static TransitGatewayConnectPeerState FindValue(string value);
    public static TransitGatewayConnectPeerState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayMulitcastDomainAssociationState : ConstantClass {
    public static TransitGatewayMulitcastDomainAssociationState Associated;
    public static TransitGatewayMulitcastDomainAssociationState Associating;
    public static TransitGatewayMulitcastDomainAssociationState Disassociated;
    public static TransitGatewayMulitcastDomainAssociationState Disassociating;
    public static TransitGatewayMulitcastDomainAssociationState Failed;
    public static TransitGatewayMulitcastDomainAssociationState PendingAcceptance;
    public static TransitGatewayMulitcastDomainAssociationState Rejected;
    public TransitGatewayMulitcastDomainAssociationState(string value);
    private static TransitGatewayMulitcastDomainAssociationState();
    public static TransitGatewayMulitcastDomainAssociationState FindValue(string value);
    public static TransitGatewayMulitcastDomainAssociationState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayMulticastDomainState : ConstantClass {
    public static TransitGatewayMulticastDomainState Available;
    public static TransitGatewayMulticastDomainState Deleted;
    public static TransitGatewayMulticastDomainState Deleting;
    public static TransitGatewayMulticastDomainState Pending;
    public TransitGatewayMulticastDomainState(string value);
    private static TransitGatewayMulticastDomainState();
    public static TransitGatewayMulticastDomainState FindValue(string value);
    public static TransitGatewayMulticastDomainState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayPolicyTableState : ConstantClass {
    public static TransitGatewayPolicyTableState Available;
    public static TransitGatewayPolicyTableState Deleted;
    public static TransitGatewayPolicyTableState Deleting;
    public static TransitGatewayPolicyTableState Pending;
    public TransitGatewayPolicyTableState(string value);
    private static TransitGatewayPolicyTableState();
    public static TransitGatewayPolicyTableState FindValue(string value);
    public static TransitGatewayPolicyTableState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayPrefixListReferenceState : ConstantClass {
    public static TransitGatewayPrefixListReferenceState Available;
    public static TransitGatewayPrefixListReferenceState Deleting;
    public static TransitGatewayPrefixListReferenceState Modifying;
    public static TransitGatewayPrefixListReferenceState Pending;
    public TransitGatewayPrefixListReferenceState(string value);
    private static TransitGatewayPrefixListReferenceState();
    public static TransitGatewayPrefixListReferenceState FindValue(string value);
    public static TransitGatewayPrefixListReferenceState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayPropagationState : ConstantClass {
    public static TransitGatewayPropagationState Disabled;
    public static TransitGatewayPropagationState Disabling;
    public static TransitGatewayPropagationState Enabled;
    public static TransitGatewayPropagationState Enabling;
    public TransitGatewayPropagationState(string value);
    private static TransitGatewayPropagationState();
    public static TransitGatewayPropagationState FindValue(string value);
    public static TransitGatewayPropagationState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayRouteState : ConstantClass {
    public static TransitGatewayRouteState Active;
    public static TransitGatewayRouteState Blackhole;
    public static TransitGatewayRouteState Deleted;
    public static TransitGatewayRouteState Deleting;
    public static TransitGatewayRouteState Pending;
    public TransitGatewayRouteState(string value);
    private static TransitGatewayRouteState();
    public static TransitGatewayRouteState FindValue(string value);
    public static TransitGatewayRouteState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayRouteTableAnnouncementDirection : ConstantClass {
    public static TransitGatewayRouteTableAnnouncementDirection Incoming;
    public static TransitGatewayRouteTableAnnouncementDirection Outgoing;
    public TransitGatewayRouteTableAnnouncementDirection(string value);
    private static TransitGatewayRouteTableAnnouncementDirection();
    public static TransitGatewayRouteTableAnnouncementDirection FindValue(string value);
    public static TransitGatewayRouteTableAnnouncementDirection op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayRouteTableAnnouncementState : ConstantClass {
    public static TransitGatewayRouteTableAnnouncementState Available;
    public static TransitGatewayRouteTableAnnouncementState Deleted;
    public static TransitGatewayRouteTableAnnouncementState Deleting;
    public static TransitGatewayRouteTableAnnouncementState Failed;
    public static TransitGatewayRouteTableAnnouncementState Failing;
    public static TransitGatewayRouteTableAnnouncementState Pending;
    public TransitGatewayRouteTableAnnouncementState(string value);
    private static TransitGatewayRouteTableAnnouncementState();
    public static TransitGatewayRouteTableAnnouncementState FindValue(string value);
    public static TransitGatewayRouteTableAnnouncementState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayRouteTableState : ConstantClass {
    public static TransitGatewayRouteTableState Available;
    public static TransitGatewayRouteTableState Deleted;
    public static TransitGatewayRouteTableState Deleting;
    public static TransitGatewayRouteTableState Pending;
    public TransitGatewayRouteTableState(string value);
    private static TransitGatewayRouteTableState();
    public static TransitGatewayRouteTableState FindValue(string value);
    public static TransitGatewayRouteTableState op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayRouteType : ConstantClass {
    public static TransitGatewayRouteType Propagated;
    public static TransitGatewayRouteType Static;
    public TransitGatewayRouteType(string value);
    private static TransitGatewayRouteType();
    public static TransitGatewayRouteType FindValue(string value);
    public static TransitGatewayRouteType op_Implicit(string value);
}
public class Amazon.EC2.TransitGatewayState : ConstantClass {
    public static TransitGatewayState Available;
    public static TransitGatewayState Deleted;
    public static TransitGatewayState Deleting;
    public static TransitGatewayState Modifying;
    public static TransitGatewayState Pending;
    public TransitGatewayState(string value);
    private static TransitGatewayState();
    public static TransitGatewayState FindValue(string value);
    public static TransitGatewayState op_Implicit(string value);
}
public class Amazon.EC2.TransportProtocol : ConstantClass {
    public static TransportProtocol Tcp;
    public static TransportProtocol Udp;
    public TransportProtocol(string value);
    private static TransportProtocol();
    public static TransportProtocol FindValue(string value);
    public static TransportProtocol op_Implicit(string value);
}
public class Amazon.EC2.TrustProviderType : ConstantClass {
    public static TrustProviderType Device;
    public static TrustProviderType User;
    public TrustProviderType(string value);
    private static TrustProviderType();
    public static TrustProviderType FindValue(string value);
    public static TrustProviderType op_Implicit(string value);
}
public class Amazon.EC2.TunnelInsideIpVersion : ConstantClass {
    public static TunnelInsideIpVersion Ipv4;
    public static TunnelInsideIpVersion Ipv6;
    public TunnelInsideIpVersion(string value);
    private static TunnelInsideIpVersion();
    public static TunnelInsideIpVersion FindValue(string value);
    public static TunnelInsideIpVersion op_Implicit(string value);
}
public class Amazon.EC2.UnlimitedSupportedInstanceFamily : ConstantClass {
    public static UnlimitedSupportedInstanceFamily T2;
    public static UnlimitedSupportedInstanceFamily T3;
    public static UnlimitedSupportedInstanceFamily T3a;
    public static UnlimitedSupportedInstanceFamily T4g;
    public UnlimitedSupportedInstanceFamily(string value);
    private static UnlimitedSupportedInstanceFamily();
    public static UnlimitedSupportedInstanceFamily FindValue(string value);
    public static UnlimitedSupportedInstanceFamily op_Implicit(string value);
}
public class Amazon.EC2.UnsuccessfulInstanceCreditSpecificationErrorCode : ConstantClass {
    public static UnsuccessfulInstanceCreditSpecificationErrorCode IncorrectInstanceState;
    public static UnsuccessfulInstanceCreditSpecificationErrorCode InstanceCreditSpecificationNotSupported;
    public static UnsuccessfulInstanceCreditSpecificationErrorCode InvalidInstanceIDMalformed;
    public static UnsuccessfulInstanceCreditSpecificationErrorCode InvalidInstanceIDNotFound;
    public UnsuccessfulInstanceCreditSpecificationErrorCode(string value);
    private static UnsuccessfulInstanceCreditSpecificationErrorCode();
    public static UnsuccessfulInstanceCreditSpecificationErrorCode FindValue(string value);
    public static UnsuccessfulInstanceCreditSpecificationErrorCode op_Implicit(string value);
}
public class Amazon.EC2.UsageClassType : ConstantClass {
    public static UsageClassType CapacityBlock;
    public static UsageClassType OnDemand;
    public static UsageClassType Spot;
    public UsageClassType(string value);
    private static UsageClassType();
    public static UsageClassType FindValue(string value);
    public static UsageClassType op_Implicit(string value);
}
public class Amazon.EC2.UserTrustProviderType : ConstantClass {
    public static UserTrustProviderType IamIdentityCenter;
    public static UserTrustProviderType Oidc;
    public UserTrustProviderType(string value);
    private static UserTrustProviderType();
    public static UserTrustProviderType FindValue(string value);
    public static UserTrustProviderType op_Implicit(string value);
}
public static class Amazon.EC2.Util.ImageUtilities : object {
    public static string WINDOWS_2016_BASE_KEY;
    public static string WINDOWS_2016_NANO_KEY;
    public static string WINDOWS_2016_CORE_KEY;
    public static string WINDOWS_2016_CONTAINER_KEY;
    public static string WINDOWS_2016_SQL_SERVER_ENTERPRISE_2016_KEY;
    public static string WINDOWS_2016_SQL_SERVER_STANDARD_2016_KEY;
    public static string WINDOWS_2016_SQL_SERVER_WEB_2016_KEY;
    public static string WINDOWS_2016_SQL_SERVER_EXPRESS_2016_KEY;
    public static string WINDOWS_2012R2_BASE_KEY;
    public static string WINDOWS_2012R2_CORE_KEY;
    public static string WINDOWS_2012R2_SQL_SERVER_EXPRESS_2016_KEY;
    public static string WINDOWS_2012R2_SQL_SERVER_STANDARD_2016_KEY;
    public static string WINDOWS_2012R2_SQL_SERVER_WEB_2016_KEY;
    public static string WINDOWS_2012R2_SQL_SERVER_EXPRESS_2014_KEY;
    public static string WINDOWS_2012R2_SQL_SERVER_STANDARD_2014_KEY;
    public static string WINDOWS_2012R2_SQL_SERVER_WEB_2014_KEY;
    public static string WINDOWS_2012_BASE_KEY;
    public static string WINDOWS_2012_SQL_SERVER_EXPRESS_2014_KEY;
    public static string WINDOWS_2012_SQL_SERVER_STANDARD_2014_KEY;
    public static string WINDOWS_2012_SQL_SERVER_WEB_2014_KEY;
    public static string WINDOWS_2012_SQL_SERVER_EXPRESS_2012_KEY;
    public static string WINDOWS_2012_SQL_SERVER_STANDARD_2012_KEY;
    public static string WINDOWS_2012_SQL_SERVER_WEB_2012_KEY;
    public static string WINDOWS_2012_SQL_SERVER_EXPRESS_2008_KEY;
    public static string WINDOWS_2012_SQL_SERVER_STANDARD_2008_KEY;
    public static string WINDOWS_2012_SQL_SERVER_WEB_2008_KEY;
    public static string WINDOWS_2008R2_BASE_KEY;
    public static string WINDOWS_2008R2_SQL_SERVER_EXPRESS_2012_KEY;
    public static string WINDOWS_2008R2_SQL_SERVER_STANDARD_2012_KEY;
    public static string WINDOWS_2008R2_SQL_SERVER_WEB_2012_KEY;
    public static string WINDOWS_2008R2_SQL_SERVER_EXPRESS_2008_KEY;
    public static string WINDOWS_2008R2_SQL_SERVER_STANDARD_2008_KEY;
    public static string WINDOWS_2008R2_SQL_SERVER_WEB_2008_KEY;
    public static string WINDOWS_2008RTM_BASE_KEY;
    public static string WINDOWS_2008RTM_SQL_SERVER_EXPRESS_2008_KEY;
    public static string WINDOWS_2008RTM_SQL_SERVER_STANDARD_2008_KEY;
    public static string WINDOWS_2008_BEANSTALK_IIS75_KEY;
    public static string WINDOWS_2012_BEANSTALK_IIS8_KEY;
    public static string VPC_NAT_KEY;
    public static IEnumerable`1<string> ImageKeys;
    public static ImageDescriptor WINDOWS_2016_BASE;
    public static ImageDescriptor WINDOWS_2016_NANO;
    public static ImageDescriptor WINDOWS_2016_CORE;
    public static ImageDescriptor WINDOWS_2016_CONTAINER;
    public static ImageDescriptor WINDOWS_2016_SQL_SERVER_ENTERPRISE_2016;
    public static ImageDescriptor WINDOWS_2016_SQL_SERVER_STANDARD_2016;
    public static ImageDescriptor WINDOWS_2016_SQL_SERVER_WEB_2016;
    public static ImageDescriptor WINDOWS_2016_SQL_SERVER_EXPRESS_2016;
    public static ImageDescriptor WINDOWS_2012R2_BASE;
    public static ImageDescriptor WINDOWS_2012R2_CORE;
    public static ImageDescriptor WINDOWS_2012R2_SQL_SERVER_EXPRESS_2016;
    public static ImageDescriptor WINDOWS_2012R2_SQL_SERVER_STANDARD_2016;
    public static ImageDescriptor WINDOWS_2012R2_SQL_SERVER_WEB_2016;
    public static ImageDescriptor WINDOWS_2012R2_SQL_SERVER_EXPRESS_2014;
    public static ImageDescriptor WINDOWS_2012R2_SQL_SERVER_STANDARD_2014;
    public static ImageDescriptor WINDOWS_2012R2_SQL_SERVER_WEB_2014;
    public static ImageDescriptor WINDOWS_2012_BASE;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_EXPRESS_2014;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_STANDARD_2014;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_WEB_2014;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_EXPRESS_2012;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_STANDARD_2012;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_WEB_2012;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_EXPRESS_2008;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_STANDARD_2008;
    public static ImageDescriptor WINDOWS_2012_SQL_SERVER_WEB_2008;
    public static ImageDescriptor WINDOWS_2008R2_BASE;
    public static ImageDescriptor WINDOWS_2008R2_SQL_SERVER_EXPRESS_2012;
    public static ImageDescriptor WINDOWS_2008R2_SQL_SERVER_STANDARD_2012;
    public static ImageDescriptor WINDOWS_2008R2_SQL_SERVER_WEB_2012;
    public static ImageDescriptor WINDOWS_2008R2_SQL_SERVER_EXPRESS_2008;
    public static ImageDescriptor WINDOWS_2008R2_SQL_SERVER_STANDARD_2008;
    public static ImageDescriptor WINDOWS_2008R2_SQL_SERVER_WEB_2008;
    public static ImageDescriptor WINDOWS_2008RTM_BASE;
    public static ImageDescriptor WINDOWS_2008RTM_SQL_SERVER_EXPRESS_2008;
    public static ImageDescriptor WINDOWS_2008RTM_SQL_SERVER_STANDARD_2008;
    public static ImageDescriptor WINDOWS_2008_BEANSTALK_IIS75;
    public static ImageDescriptor WINDOWS_2012_BEANSTALK_IIS8;
    public static ImageDescriptor VPC_NAT;
    [ObsoleteAttribute("Please use the WINDOWS_2012_SQL_SERVER_EXPRESS_2008 member.")]
public static ImageDescriptor WINDOWS_2012_SQL_SERVER_EXPRESS_2008_R2;
    [ObsoleteAttribute("Please use the WINDOWS_2012_SQL_SERVER_STANDARD_2008 member.")]
public static ImageDescriptor WINDOWS_2012_SQL_SERVER_STANDARD_2008_R2;
    [ObsoleteAttribute("Please use the WINDOWS_2012_SQL_SERVER_WEB_2008 member.")]
public static ImageDescriptor WINDOWS_2012_SQL_SERVER_WEB_2008_R2;
    [ObsoleteAttribute("Please use the WINDOWS_2012_SQL_SERVER_EXPRESS_2008 member.")]
public static ImageDescriptor WINDOWS_2012_SQL_SERVER_EXPRESS_2008_R2_SP2;
    [ObsoleteAttribute("Please use the WINDOWS_2012_SQL_SERVER_STANDARD_2008 member.")]
public static ImageDescriptor WINDOWS_2012_SQL_SERVER_STANDARD_2008_R2_SP2;
    [ObsoleteAttribute("Please use the WINDOWS_2012_SQL_SERVER_WEB_2008 member.")]
public static ImageDescriptor WINDOWS_2012_SQL_SERVER_WEB_2008_R2_SP2;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_BASE member.")]
public static ImageDescriptor WINDOWS_2008_R2_SP1_BASE;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_EXPRESS_2012 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SP1_SQL_SERVER_EXPRESS_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_STANDARD_2012 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SP1_SQL_SERVER_STANDARD_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_WEB_2012 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SP1_SQL_SERVER_WEB_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_EXPRESS_2008 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SP1_SQL_SERVER_EXPRESS_2008_R2_SP2;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_STANDARD_2008 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SP1_SQL_SERVER_STANDARD_2008_R2_SP2;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_WEB_2008 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SP1_SQL_SERVER_WEB_2008_R2_SP2;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_BASE member.")]
public static ImageDescriptor WINDOWS_2008_R2_BASE;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_EXPRESS_2012 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SQL_SERVER_EXPRESS_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_STANDARD_2012 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SQL_SERVER_STANDARD_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_WEB_2012 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SQL_SERVER_WEB_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_EXPRESS_2008 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SQL_SERVER_EXPRESS_2008_R2;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_STANDARD_2008 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SQL_SERVER_STANDARD_2008_R2;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_WEB_2008 member.")]
public static ImageDescriptor WINDOWS_2008_R2_SQL_SERVER_WEB_2008_R2;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_BASE member.")]
public static ImageDescriptor WINDOWS_2008_BASE;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_EXPRESS_2012 member.")]
public static ImageDescriptor WINDOWS_2008_SQL_SERVER_EXPRESS_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_STANDARD_2012 member.")]
public static ImageDescriptor WINDOWS_2008_SQL_SERVER_STANDARD_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_WEB_2012 member.")]
public static ImageDescriptor WINDOWS_2008_SQL_SERVER_WEB_2012;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_EXPRESS_2008 member.")]
public static ImageDescriptor WINDOWS_2008_SQL_SERVER_EXPRESS_2008;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_STANDARD_2008 member.")]
public static ImageDescriptor WINDOWS_2008_SQL_SERVER_STANDARD_2008;
    [ObsoleteAttribute("Please use the WINDOWS_2008R2_SQL_SERVER_WEB_2008 member.")]
public static ImageDescriptor WINDOWS_2008_SQL_SERVER_WEB_2008;
    private static ImageDescriptor[] WindowsDescriptors;
    private static ImageDescriptor[] LinuxDescriptors;
    private static string CLOUDFRONT_LOCATION_OF_AMI_FILE;
    private static string S3_LOCATION_OF_AMI_FILE;
    private static String[] DownloadLocations;
    private static string WindowsImagesTag;
    private static string LinuxImagesTag;
    private static string DefinitionKeyTag;
    private static string DefinitionPrefixTag;
    private static int MAX_DOWNLOAD_RETRIES;
    private static object LOCK_OBJECT;
    [CompilerGeneratedAttribute]
private static bool <ImageDefinitionsLoaded>k__BackingField;
    private static Logger Logger { get; }
    private static bool ImageDefinitionsLoaded { get; private set; }
    private static ImageUtilities();
    private static Logger get_Logger();
    [CompilerGeneratedAttribute]
private static bool get_ImageDefinitionsLoaded();
    [CompilerGeneratedAttribute]
private static void set_ImageDefinitionsLoaded(bool value);
    private static ImageDescriptor FindDescriptorWithKey(string key);
    private static DescribeImagesRequest CreateDescribeImagesRequest(ImageDescriptor descriptor);
    private static void ParseAMIDefinitions(StreamReader reader);
    private static AmazonEC2Config ConfigFromClient(IAmazonEC2 ec2Client);
    private static AmazonEC2Config CreateConfigFromClient(IAmazonEC2 ec2Client, ImageDescriptor descriptor);
    public static Task`1<ImageDescriptor> DescriptorFromKeyAsync(string key);
    [AsyncStateMachineAttribute("Amazon.EC2.Util.ImageUtilities/<DescriptorFromKeyAsync>d__130")]
public static Task`1<ImageDescriptor> DescriptorFromKeyAsync(string key, IAmazonEC2 ec2Client);
    [AsyncStateMachineAttribute("Amazon.EC2.Util.ImageUtilities/<LoadDefinitionsFromWebAsync>d__131")]
private static Task LoadDefinitionsFromWebAsync(AmazonEC2Config ec2Config);
    [AsyncStateMachineAttribute("Amazon.EC2.Util.ImageUtilities/<DownloadControlFileAsync>d__132")]
private static Task`1<HttpWebResponse> DownloadControlFileAsync(string location, IWebProxy proxy);
    [AsyncStateMachineAttribute("Amazon.EC2.Util.ImageUtilities/<FindImageAsync>d__133")]
public static Task`1<Image> FindImageAsync(IAmazonEC2 ec2Client, string imageKey);
    [AsyncStateMachineAttribute("Amazon.EC2.Util.ImageUtilities/<FindImageAsync>d__134")]
public static Task`1<Image> FindImageAsync(IAmazonEC2 ec2Client, ImageDescriptor descriptor);
}
public class Amazon.EC2.Util.LaunchNATInstanceRequest : object {
    private string subnetId;
    private string instanceType;
    private string keyName;
    public string SubnetId { get; public set; }
    public string InstanceType { get; public set; }
    public string KeyName { get; public set; }
    public string get_SubnetId();
    public void set_SubnetId(string value);
    public string get_InstanceType();
    public void set_InstanceType(string value);
    public string get_KeyName();
    public void set_KeyName(string value);
}
public class Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest : LaunchVPCWithPublicSubnetRequest {
    private string privateSubnetCiderBlock;
    private string privateSubnetAvailabilityZone;
    private string instanceType;
    private string keyName;
    [CompilerGeneratedAttribute]
private bool <ConfigureDefaultVPCGroupForNAT>k__BackingField;
    public string PrivateSubnetCiderBlock { get; public set; }
    public string PrivateSubnetAvailabilityZone { get; public set; }
    public string InstanceType { get; public set; }
    public string KeyName { get; public set; }
    public bool ConfigureDefaultVPCGroupForNAT { get; public set; }
    public string get_PrivateSubnetCiderBlock();
    public void set_PrivateSubnetCiderBlock(string value);
    public string get_PrivateSubnetAvailabilityZone();
    public void set_PrivateSubnetAvailabilityZone(string value);
    public string get_InstanceType();
    public void set_InstanceType(string value);
    public string get_KeyName();
    public void set_KeyName(string value);
    [CompilerGeneratedAttribute]
public bool get_ConfigureDefaultVPCGroupForNAT();
    [CompilerGeneratedAttribute]
public void set_ConfigureDefaultVPCGroupForNAT(bool value);
}
public class Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsResponse : LaunchVPCWithPublicSubnetResponse {
    [CompilerGeneratedAttribute]
private Subnet <PrivateSubnet>k__BackingField;
    [CompilerGeneratedAttribute]
private Instance <NATInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private SecurityGroup <NATSecurityGroup>k__BackingField;
    public Subnet PrivateSubnet { get; public set; }
    public Instance NATInstance { get; public set; }
    public SecurityGroup NATSecurityGroup { get; public set; }
    [CompilerGeneratedAttribute]
public Subnet get_PrivateSubnet();
    [CompilerGeneratedAttribute]
public void set_PrivateSubnet(Subnet value);
    [CompilerGeneratedAttribute]
public Instance get_NATInstance();
    [CompilerGeneratedAttribute]
public void set_NATInstance(Instance value);
    [CompilerGeneratedAttribute]
public SecurityGroup get_NATSecurityGroup();
    [CompilerGeneratedAttribute]
public void set_NATSecurityGroup(SecurityGroup value);
}
public class Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest : object {
    private string vpcName;
    private string vpcCidrBlock;
    private string instanceTenancy;
    private string publicSubnetCiderBlock;
    private string publicSubnetAvailabilityZone;
    private Nullable`1<bool> enableDnsHostnames;
    private Nullable`1<bool> enableDnsSupport;
    [CompilerGeneratedAttribute]
private Progress <ProgressCallback>k__BackingField;
    public string VPCName { get; public set; }
    public string VPCCidrBlock { get; public set; }
    public string InstanceTenancy { get; public set; }
    public string PublicSubnetCiderBlock { get; public set; }
    public string PublicSubnetAvailabilityZone { get; public set; }
    public Progress ProgressCallback { get; public set; }
    public bool EnableDnsHostnames { get; public set; }
    public bool EnableDnsSupport { get; public set; }
    public string get_VPCName();
    public void set_VPCName(string value);
    public string get_VPCCidrBlock();
    public void set_VPCCidrBlock(string value);
    public string get_InstanceTenancy();
    public void set_InstanceTenancy(string value);
    public string get_PublicSubnetCiderBlock();
    public void set_PublicSubnetCiderBlock(string value);
    public string get_PublicSubnetAvailabilityZone();
    public void set_PublicSubnetAvailabilityZone(string value);
    [CompilerGeneratedAttribute]
public Progress get_ProgressCallback();
    [CompilerGeneratedAttribute]
public void set_ProgressCallback(Progress value);
    public bool get_EnableDnsHostnames();
    public void set_EnableDnsHostnames(bool value);
    internal bool IsSetEnableDnsHostnames();
    public bool get_EnableDnsSupport();
    public void set_EnableDnsSupport(bool value);
    internal bool IsSetEnableDnsSupport();
}
public class Amazon.EC2.Util.LaunchVPCWithPublicSubnetResponse : object {
    [CompilerGeneratedAttribute]
private Vpc <VPC>k__BackingField;
    [CompilerGeneratedAttribute]
private Subnet <PublicSubnet>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteTable <PublicSubnetRouteTable>k__BackingField;
    [CompilerGeneratedAttribute]
private InternetGateway <InternetGateway>k__BackingField;
    public Vpc VPC { get; internal set; }
    public Subnet PublicSubnet { get; internal set; }
    public RouteTable PublicSubnetRouteTable { get; internal set; }
    public InternetGateway InternetGateway { get; internal set; }
    [CompilerGeneratedAttribute]
public Vpc get_VPC();
    [CompilerGeneratedAttribute]
internal void set_VPC(Vpc value);
    [CompilerGeneratedAttribute]
public Subnet get_PublicSubnet();
    [CompilerGeneratedAttribute]
internal void set_PublicSubnet(Subnet value);
    [CompilerGeneratedAttribute]
public RouteTable get_PublicSubnetRouteTable();
    [CompilerGeneratedAttribute]
internal void set_PublicSubnetRouteTable(RouteTable value);
    [CompilerGeneratedAttribute]
public InternetGateway get_InternetGateway();
    [CompilerGeneratedAttribute]
internal void set_InternetGateway(InternetGateway value);
}
public static class Amazon.EC2.Util.VPCUtilities : object {
    private static void WaitTillTrue(Func`1<bool> func);
    private static void WriteProgress(Progress callback, string message, String[] args);
}
public class Amazon.EC2.VerificationMethod : ConstantClass {
    public static VerificationMethod DnsToken;
    public static VerificationMethod RemarksX509;
    public VerificationMethod(string value);
    private static VerificationMethod();
    public static VerificationMethod FindValue(string value);
    public static VerificationMethod op_Implicit(string value);
}
public class Amazon.EC2.VerifiedAccessEndpointAttachmentType : ConstantClass {
    public static VerifiedAccessEndpointAttachmentType Vpc;
    public VerifiedAccessEndpointAttachmentType(string value);
    private static VerifiedAccessEndpointAttachmentType();
    public static VerifiedAccessEndpointAttachmentType FindValue(string value);
    public static VerifiedAccessEndpointAttachmentType op_Implicit(string value);
}
public class Amazon.EC2.VerifiedAccessEndpointProtocol : ConstantClass {
    public static VerifiedAccessEndpointProtocol Http;
    public static VerifiedAccessEndpointProtocol Https;
    public VerifiedAccessEndpointProtocol(string value);
    private static VerifiedAccessEndpointProtocol();
    public static VerifiedAccessEndpointProtocol FindValue(string value);
    public static VerifiedAccessEndpointProtocol op_Implicit(string value);
}
public class Amazon.EC2.VerifiedAccessEndpointStatusCode : ConstantClass {
    public static VerifiedAccessEndpointStatusCode Active;
    public static VerifiedAccessEndpointStatusCode Deleted;
    public static VerifiedAccessEndpointStatusCode Deleting;
    public static VerifiedAccessEndpointStatusCode Pending;
    public static VerifiedAccessEndpointStatusCode Updating;
    public VerifiedAccessEndpointStatusCode(string value);
    private static VerifiedAccessEndpointStatusCode();
    public static VerifiedAccessEndpointStatusCode FindValue(string value);
    public static VerifiedAccessEndpointStatusCode op_Implicit(string value);
}
public class Amazon.EC2.VerifiedAccessEndpointType : ConstantClass {
    public static VerifiedAccessEndpointType LoadBalancer;
    public static VerifiedAccessEndpointType NetworkInterface;
    public VerifiedAccessEndpointType(string value);
    private static VerifiedAccessEndpointType();
    public static VerifiedAccessEndpointType FindValue(string value);
    public static VerifiedAccessEndpointType op_Implicit(string value);
}
public class Amazon.EC2.VerifiedAccessLogDeliveryStatusCode : ConstantClass {
    public static VerifiedAccessLogDeliveryStatusCode Failed;
    public static VerifiedAccessLogDeliveryStatusCode Success;
    public VerifiedAccessLogDeliveryStatusCode(string value);
    private static VerifiedAccessLogDeliveryStatusCode();
    public static VerifiedAccessLogDeliveryStatusCode FindValue(string value);
    public static VerifiedAccessLogDeliveryStatusCode op_Implicit(string value);
}
public class Amazon.EC2.VirtualizationType : ConstantClass {
    public static VirtualizationType Hvm;
    public static VirtualizationType Paravirtual;
    public VirtualizationType(string value);
    private static VirtualizationType();
    public static VirtualizationType FindValue(string value);
    public static VirtualizationType op_Implicit(string value);
}
public class Amazon.EC2.VolumeAttachmentState : ConstantClass {
    public static VolumeAttachmentState Attached;
    public static VolumeAttachmentState Attaching;
    public static VolumeAttachmentState Busy;
    public static VolumeAttachmentState Detached;
    public static VolumeAttachmentState Detaching;
    public VolumeAttachmentState(string value);
    private static VolumeAttachmentState();
    public static VolumeAttachmentState FindValue(string value);
    public static VolumeAttachmentState op_Implicit(string value);
}
public class Amazon.EC2.VolumeAttributeName : ConstantClass {
    public static VolumeAttributeName AutoEnableIO;
    public static VolumeAttributeName ProductCodes;
    public VolumeAttributeName(string value);
    private static VolumeAttributeName();
    public static VolumeAttributeName FindValue(string value);
    public static VolumeAttributeName op_Implicit(string value);
}
public class Amazon.EC2.VolumeModificationState : ConstantClass {
    public static VolumeModificationState Completed;
    public static VolumeModificationState Failed;
    public static VolumeModificationState Modifying;
    public static VolumeModificationState Optimizing;
    public VolumeModificationState(string value);
    private static VolumeModificationState();
    public static VolumeModificationState FindValue(string value);
    public static VolumeModificationState op_Implicit(string value);
}
public class Amazon.EC2.VolumeState : ConstantClass {
    public static VolumeState Available;
    public static VolumeState Creating;
    public static VolumeState Deleted;
    public static VolumeState Deleting;
    public static VolumeState Error;
    public static VolumeState InUse;
    public VolumeState(string value);
    private static VolumeState();
    public static VolumeState FindValue(string value);
    public static VolumeState op_Implicit(string value);
}
public class Amazon.EC2.VolumeStatusInfoStatus : ConstantClass {
    public static VolumeStatusInfoStatus Impaired;
    public static VolumeStatusInfoStatus InsufficientData;
    public static VolumeStatusInfoStatus Ok;
    public VolumeStatusInfoStatus(string value);
    private static VolumeStatusInfoStatus();
    public static VolumeStatusInfoStatus FindValue(string value);
    public static VolumeStatusInfoStatus op_Implicit(string value);
}
public class Amazon.EC2.VolumeStatusName : ConstantClass {
    public static VolumeStatusName IoEnabled;
    public static VolumeStatusName IoPerformance;
    public VolumeStatusName(string value);
    private static VolumeStatusName();
    public static VolumeStatusName FindValue(string value);
    public static VolumeStatusName op_Implicit(string value);
}
public class Amazon.EC2.VolumeType : ConstantClass {
    public static VolumeType Gp2;
    public static VolumeType Gp3;
    public static VolumeType Io1;
    public static VolumeType Io2;
    public static VolumeType Sc1;
    public static VolumeType St1;
    public static VolumeType Standard;
    public VolumeType(string value);
    private static VolumeType();
    public static VolumeType FindValue(string value);
    public static VolumeType op_Implicit(string value);
}
public class Amazon.EC2.VpcAttributeName : ConstantClass {
    public static VpcAttributeName EnableDnsHostnames;
    public static VpcAttributeName EnableDnsSupport;
    public static VpcAttributeName EnableNetworkAddressUsageMetrics;
    public VpcAttributeName(string value);
    private static VpcAttributeName();
    public static VpcAttributeName FindValue(string value);
    public static VpcAttributeName op_Implicit(string value);
}
public class Amazon.EC2.VpcCidrBlockStateCode : ConstantClass {
    public static VpcCidrBlockStateCode Associated;
    public static VpcCidrBlockStateCode Associating;
    public static VpcCidrBlockStateCode Disassociated;
    public static VpcCidrBlockStateCode Disassociating;
    public static VpcCidrBlockStateCode Failed;
    public static VpcCidrBlockStateCode Failing;
    public VpcCidrBlockStateCode(string value);
    private static VpcCidrBlockStateCode();
    public static VpcCidrBlockStateCode FindValue(string value);
    public static VpcCidrBlockStateCode op_Implicit(string value);
}
public class Amazon.EC2.VpcEndpointType : ConstantClass {
    public static VpcEndpointType Gateway;
    public static VpcEndpointType GatewayLoadBalancer;
    public static VpcEndpointType Interface;
    public VpcEndpointType(string value);
    private static VpcEndpointType();
    public static VpcEndpointType FindValue(string value);
    public static VpcEndpointType op_Implicit(string value);
}
public class Amazon.EC2.VpcPeeringConnectionStateReasonCode : ConstantClass {
    public static VpcPeeringConnectionStateReasonCode Active;
    public static VpcPeeringConnectionStateReasonCode Deleted;
    public static VpcPeeringConnectionStateReasonCode Deleting;
    public static VpcPeeringConnectionStateReasonCode Expired;
    public static VpcPeeringConnectionStateReasonCode Failed;
    public static VpcPeeringConnectionStateReasonCode InitiatingRequest;
    public static VpcPeeringConnectionStateReasonCode PendingAcceptance;
    public static VpcPeeringConnectionStateReasonCode Provisioning;
    public static VpcPeeringConnectionStateReasonCode Rejected;
    public VpcPeeringConnectionStateReasonCode(string value);
    private static VpcPeeringConnectionStateReasonCode();
    public static VpcPeeringConnectionStateReasonCode FindValue(string value);
    public static VpcPeeringConnectionStateReasonCode op_Implicit(string value);
}
public class Amazon.EC2.VpcState : ConstantClass {
    public static VpcState Available;
    public static VpcState Pending;
    public VpcState(string value);
    private static VpcState();
    public static VpcState FindValue(string value);
    public static VpcState op_Implicit(string value);
}
public class Amazon.EC2.VpcTenancy : ConstantClass {
    public static VpcTenancy Default;
    public VpcTenancy(string value);
    private static VpcTenancy();
    public static VpcTenancy FindValue(string value);
    public static VpcTenancy op_Implicit(string value);
}
public class Amazon.EC2.VpnEcmpSupportValue : ConstantClass {
    public static VpnEcmpSupportValue Disable;
    public static VpnEcmpSupportValue Enable;
    public VpnEcmpSupportValue(string value);
    private static VpnEcmpSupportValue();
    public static VpnEcmpSupportValue FindValue(string value);
    public static VpnEcmpSupportValue op_Implicit(string value);
}
public class Amazon.EC2.VpnProtocol : ConstantClass {
    public static VpnProtocol Openvpn;
    public VpnProtocol(string value);
    private static VpnProtocol();
    public static VpnProtocol FindValue(string value);
    public static VpnProtocol op_Implicit(string value);
}
public class Amazon.EC2.VpnState : ConstantClass {
    public static VpnState Available;
    public static VpnState Deleted;
    public static VpnState Deleting;
    public static VpnState Pending;
    public VpnState(string value);
    private static VpnState();
    public static VpnState FindValue(string value);
    public static VpnState op_Implicit(string value);
}
public class Amazon.EC2.VpnStaticRouteSource : ConstantClass {
    public static VpnStaticRouteSource Static;
    public VpnStaticRouteSource(string value);
    private static VpnStaticRouteSource();
    public static VpnStaticRouteSource FindValue(string value);
    public static VpnStaticRouteSource op_Implicit(string value);
}
public class Amazon.EC2.WeekDay : ConstantClass {
    public static WeekDay Friday;
    public static WeekDay Monday;
    public static WeekDay Saturday;
    public static WeekDay Sunday;
    public static WeekDay Thursday;
    public static WeekDay Tuesday;
    public static WeekDay Wednesday;
    public WeekDay(string value);
    private static WeekDay();
    public static WeekDay FindValue(string value);
    public static WeekDay op_Implicit(string value);
}
