public class Amazon.ElasticFileSystem.AmazonElasticFileSystemClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IElasticFileSystemPaginatorFactory _paginators;
    public IElasticFileSystemPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonElasticFileSystemClient(RegionEndpoint region);
    public AmazonElasticFileSystemClient(AmazonElasticFileSystemConfig config);
    public AmazonElasticFileSystemClient(AWSCredentials credentials);
    public AmazonElasticFileSystemClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonElasticFileSystemClient(AWSCredentials credentials, AmazonElasticFileSystemConfig clientConfig);
    public AmazonElasticFileSystemClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonElasticFileSystemClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonElasticFileSystemClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonElasticFileSystemConfig clientConfig);
    public AmazonElasticFileSystemClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonElasticFileSystemClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonElasticFileSystemClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonElasticFileSystemConfig clientConfig);
    private static AmazonElasticFileSystemClient();
    public sealed virtual IElasticFileSystemPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual CreateAccessPointResponse CreateAccessPoint(CreateAccessPointRequest request);
    public virtual Task`1<CreateAccessPointResponse> CreateAccessPointAsync(CreateAccessPointRequest request, CancellationToken cancellationToken);
    public virtual CreateFileSystemResponse CreateFileSystem(string creationToken);
    public virtual CreateFileSystemResponse CreateFileSystem(CreateFileSystemRequest request);
    public virtual Task`1<CreateFileSystemResponse> CreateFileSystemAsync(string creationToken, CancellationToken cancellationToken);
    public virtual Task`1<CreateFileSystemResponse> CreateFileSystemAsync(CreateFileSystemRequest request, CancellationToken cancellationToken);
    public virtual CreateMountTargetResponse CreateMountTarget(CreateMountTargetRequest request);
    public virtual Task`1<CreateMountTargetResponse> CreateMountTargetAsync(CreateMountTargetRequest request, CancellationToken cancellationToken);
    public virtual CreateReplicationConfigurationResponse CreateReplicationConfiguration(CreateReplicationConfigurationRequest request);
    public virtual Task`1<CreateReplicationConfigurationResponse> CreateReplicationConfigurationAsync(CreateReplicationConfigurationRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use TagResource.")]
public virtual CreateTagsResponse CreateTags(CreateTagsRequest request);
    [ObsoleteAttribute("Use TagResource.")]
public virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    public virtual DeleteAccessPointResponse DeleteAccessPoint(DeleteAccessPointRequest request);
    public virtual Task`1<DeleteAccessPointResponse> DeleteAccessPointAsync(DeleteAccessPointRequest request, CancellationToken cancellationToken);
    public virtual DeleteFileSystemResponse DeleteFileSystem(string fileSystemId);
    public virtual DeleteFileSystemResponse DeleteFileSystem(DeleteFileSystemRequest request);
    public virtual Task`1<DeleteFileSystemResponse> DeleteFileSystemAsync(string fileSystemId, CancellationToken cancellationToken);
    public virtual Task`1<DeleteFileSystemResponse> DeleteFileSystemAsync(DeleteFileSystemRequest request, CancellationToken cancellationToken);
    public virtual DeleteFileSystemPolicyResponse DeleteFileSystemPolicy(DeleteFileSystemPolicyRequest request);
    public virtual Task`1<DeleteFileSystemPolicyResponse> DeleteFileSystemPolicyAsync(DeleteFileSystemPolicyRequest request, CancellationToken cancellationToken);
    public virtual DeleteMountTargetResponse DeleteMountTarget(string mountTargetId);
    public virtual DeleteMountTargetResponse DeleteMountTarget(DeleteMountTargetRequest request);
    public virtual Task`1<DeleteMountTargetResponse> DeleteMountTargetAsync(string mountTargetId, CancellationToken cancellationToken);
    public virtual Task`1<DeleteMountTargetResponse> DeleteMountTargetAsync(DeleteMountTargetRequest request, CancellationToken cancellationToken);
    public virtual DeleteReplicationConfigurationResponse DeleteReplicationConfiguration(DeleteReplicationConfigurationRequest request);
    public virtual Task`1<DeleteReplicationConfigurationResponse> DeleteReplicationConfigurationAsync(DeleteReplicationConfigurationRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use UntagResource.")]
public virtual DeleteTagsResponse DeleteTags(DeleteTagsRequest request);
    [ObsoleteAttribute("Use UntagResource.")]
public virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    public virtual DescribeAccessPointsResponse DescribeAccessPoints(DescribeAccessPointsRequest request);
    public virtual Task`1<DescribeAccessPointsResponse> DescribeAccessPointsAsync(DescribeAccessPointsRequest request, CancellationToken cancellationToken);
    public virtual DescribeAccountPreferencesResponse DescribeAccountPreferences(DescribeAccountPreferencesRequest request);
    public virtual Task`1<DescribeAccountPreferencesResponse> DescribeAccountPreferencesAsync(DescribeAccountPreferencesRequest request, CancellationToken cancellationToken);
    public virtual DescribeBackupPolicyResponse DescribeBackupPolicy(DescribeBackupPolicyRequest request);
    public virtual Task`1<DescribeBackupPolicyResponse> DescribeBackupPolicyAsync(DescribeBackupPolicyRequest request, CancellationToken cancellationToken);
    public virtual DescribeFileSystemPolicyResponse DescribeFileSystemPolicy(DescribeFileSystemPolicyRequest request);
    public virtual Task`1<DescribeFileSystemPolicyResponse> DescribeFileSystemPolicyAsync(DescribeFileSystemPolicyRequest request, CancellationToken cancellationToken);
    public virtual DescribeFileSystemsResponse DescribeFileSystems(DescribeFileSystemsRequest request);
    public virtual Task`1<DescribeFileSystemsResponse> DescribeFileSystemsAsync(DescribeFileSystemsRequest request, CancellationToken cancellationToken);
    public virtual DescribeLifecycleConfigurationResponse DescribeLifecycleConfiguration(DescribeLifecycleConfigurationRequest request);
    public virtual Task`1<DescribeLifecycleConfigurationResponse> DescribeLifecycleConfigurationAsync(DescribeLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public virtual DescribeMountTargetsResponse DescribeMountTargets(string fileSystemId);
    public virtual DescribeMountTargetsResponse DescribeMountTargets(DescribeMountTargetsRequest request);
    public virtual Task`1<DescribeMountTargetsResponse> DescribeMountTargetsAsync(string fileSystemId, CancellationToken cancellationToken);
    public virtual Task`1<DescribeMountTargetsResponse> DescribeMountTargetsAsync(DescribeMountTargetsRequest request, CancellationToken cancellationToken);
    public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(string mountTargetId);
    public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request);
    public virtual Task`1<DescribeMountTargetSecurityGroupsResponse> DescribeMountTargetSecurityGroupsAsync(string mountTargetId, CancellationToken cancellationToken);
    public virtual Task`1<DescribeMountTargetSecurityGroupsResponse> DescribeMountTargetSecurityGroupsAsync(DescribeMountTargetSecurityGroupsRequest request, CancellationToken cancellationToken);
    public virtual DescribeReplicationConfigurationsResponse DescribeReplicationConfigurations(DescribeReplicationConfigurationsRequest request);
    public virtual Task`1<DescribeReplicationConfigurationsResponse> DescribeReplicationConfigurationsAsync(DescribeReplicationConfigurationsRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public virtual DescribeTagsResponse DescribeTags(string fileSystemId);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public virtual DescribeTagsResponse DescribeTags(DescribeTagsRequest request);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(string fileSystemId, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    public virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public virtual ModifyMountTargetSecurityGroupsResponse ModifyMountTargetSecurityGroups(ModifyMountTargetSecurityGroupsRequest request);
    public virtual Task`1<ModifyMountTargetSecurityGroupsResponse> ModifyMountTargetSecurityGroupsAsync(ModifyMountTargetSecurityGroupsRequest request, CancellationToken cancellationToken);
    public virtual PutAccountPreferencesResponse PutAccountPreferences(PutAccountPreferencesRequest request);
    public virtual Task`1<PutAccountPreferencesResponse> PutAccountPreferencesAsync(PutAccountPreferencesRequest request, CancellationToken cancellationToken);
    public virtual PutBackupPolicyResponse PutBackupPolicy(PutBackupPolicyRequest request);
    public virtual Task`1<PutBackupPolicyResponse> PutBackupPolicyAsync(PutBackupPolicyRequest request, CancellationToken cancellationToken);
    public virtual PutFileSystemPolicyResponse PutFileSystemPolicy(PutFileSystemPolicyRequest request);
    public virtual Task`1<PutFileSystemPolicyResponse> PutFileSystemPolicyAsync(PutFileSystemPolicyRequest request, CancellationToken cancellationToken);
    public virtual PutLifecycleConfigurationResponse PutLifecycleConfiguration(PutLifecycleConfigurationRequest request);
    public virtual Task`1<PutLifecycleConfigurationResponse> PutLifecycleConfigurationAsync(PutLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public virtual UpdateFileSystemResponse UpdateFileSystem(UpdateFileSystemRequest request);
    public virtual Task`1<UpdateFileSystemResponse> UpdateFileSystemAsync(UpdateFileSystemRequest request, CancellationToken cancellationToken);
    public virtual UpdateFileSystemProtectionResponse UpdateFileSystemProtection(UpdateFileSystemProtectionRequest request);
    public virtual Task`1<UpdateFileSystemProtectionResponse> UpdateFileSystemProtectionAsync(UpdateFileSystemProtectionRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonElasticFileSystemEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonElasticFileSystemConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.ElasticFileSystem.AmazonElasticFileSystemDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonElasticFileSystemDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.ElasticFileSystem.AmazonElasticFileSystemException : AmazonServiceException {
    public AmazonElasticFileSystemException(string message);
    public AmazonElasticFileSystemException(string message, Exception innerException);
    public AmazonElasticFileSystemException(Exception innerException);
    public AmazonElasticFileSystemException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonElasticFileSystemException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonElasticFileSystemException(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.AmazonElasticFileSystemRequest : AmazonWebServiceRequest {
}
public class Amazon.ElasticFileSystem.Endpoints.ElasticFileSystemEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public interface Amazon.ElasticFileSystem.IAmazonElasticFileSystem {
    public IElasticFileSystemPaginatorFactory Paginators { get; }
    public abstract virtual IElasticFileSystemPaginatorFactory get_Paginators();
    public abstract virtual CreateAccessPointResponse CreateAccessPoint(CreateAccessPointRequest request);
    public abstract virtual Task`1<CreateAccessPointResponse> CreateAccessPointAsync(CreateAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateFileSystemResponse CreateFileSystem(string creationToken);
    public abstract virtual CreateFileSystemResponse CreateFileSystem(CreateFileSystemRequest request);
    public abstract virtual Task`1<CreateFileSystemResponse> CreateFileSystemAsync(string creationToken, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFileSystemResponse> CreateFileSystemAsync(CreateFileSystemRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateMountTargetResponse CreateMountTarget(CreateMountTargetRequest request);
    public abstract virtual Task`1<CreateMountTargetResponse> CreateMountTargetAsync(CreateMountTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateReplicationConfigurationResponse CreateReplicationConfiguration(CreateReplicationConfigurationRequest request);
    public abstract virtual Task`1<CreateReplicationConfigurationResponse> CreateReplicationConfigurationAsync(CreateReplicationConfigurationRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use TagResource.")]
public abstract virtual CreateTagsResponse CreateTags(CreateTagsRequest request);
    [ObsoleteAttribute("Use TagResource.")]
public abstract virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteAccessPointResponse DeleteAccessPoint(DeleteAccessPointRequest request);
    public abstract virtual Task`1<DeleteAccessPointResponse> DeleteAccessPointAsync(DeleteAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteFileSystemResponse DeleteFileSystem(string fileSystemId);
    public abstract virtual DeleteFileSystemResponse DeleteFileSystem(DeleteFileSystemRequest request);
    public abstract virtual Task`1<DeleteFileSystemResponse> DeleteFileSystemAsync(string fileSystemId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFileSystemResponse> DeleteFileSystemAsync(DeleteFileSystemRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteFileSystemPolicyResponse DeleteFileSystemPolicy(DeleteFileSystemPolicyRequest request);
    public abstract virtual Task`1<DeleteFileSystemPolicyResponse> DeleteFileSystemPolicyAsync(DeleteFileSystemPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteMountTargetResponse DeleteMountTarget(string mountTargetId);
    public abstract virtual DeleteMountTargetResponse DeleteMountTarget(DeleteMountTargetRequest request);
    public abstract virtual Task`1<DeleteMountTargetResponse> DeleteMountTargetAsync(string mountTargetId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMountTargetResponse> DeleteMountTargetAsync(DeleteMountTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteReplicationConfigurationResponse DeleteReplicationConfiguration(DeleteReplicationConfigurationRequest request);
    public abstract virtual Task`1<DeleteReplicationConfigurationResponse> DeleteReplicationConfigurationAsync(DeleteReplicationConfigurationRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use UntagResource.")]
public abstract virtual DeleteTagsResponse DeleteTags(DeleteTagsRequest request);
    [ObsoleteAttribute("Use UntagResource.")]
public abstract virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeAccessPointsResponse DescribeAccessPoints(DescribeAccessPointsRequest request);
    public abstract virtual Task`1<DescribeAccessPointsResponse> DescribeAccessPointsAsync(DescribeAccessPointsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeAccountPreferencesResponse DescribeAccountPreferences(DescribeAccountPreferencesRequest request);
    public abstract virtual Task`1<DescribeAccountPreferencesResponse> DescribeAccountPreferencesAsync(DescribeAccountPreferencesRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeBackupPolicyResponse DescribeBackupPolicy(DescribeBackupPolicyRequest request);
    public abstract virtual Task`1<DescribeBackupPolicyResponse> DescribeBackupPolicyAsync(DescribeBackupPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeFileSystemPolicyResponse DescribeFileSystemPolicy(DescribeFileSystemPolicyRequest request);
    public abstract virtual Task`1<DescribeFileSystemPolicyResponse> DescribeFileSystemPolicyAsync(DescribeFileSystemPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeFileSystemsResponse DescribeFileSystems(DescribeFileSystemsRequest request);
    public abstract virtual Task`1<DescribeFileSystemsResponse> DescribeFileSystemsAsync(DescribeFileSystemsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeLifecycleConfigurationResponse DescribeLifecycleConfiguration(DescribeLifecycleConfigurationRequest request);
    public abstract virtual Task`1<DescribeLifecycleConfigurationResponse> DescribeLifecycleConfigurationAsync(DescribeLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeMountTargetsResponse DescribeMountTargets(string fileSystemId);
    public abstract virtual DescribeMountTargetsResponse DescribeMountTargets(DescribeMountTargetsRequest request);
    public abstract virtual Task`1<DescribeMountTargetsResponse> DescribeMountTargetsAsync(string fileSystemId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMountTargetsResponse> DescribeMountTargetsAsync(DescribeMountTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(string mountTargetId);
    public abstract virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request);
    public abstract virtual Task`1<DescribeMountTargetSecurityGroupsResponse> DescribeMountTargetSecurityGroupsAsync(string mountTargetId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMountTargetSecurityGroupsResponse> DescribeMountTargetSecurityGroupsAsync(DescribeMountTargetSecurityGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeReplicationConfigurationsResponse DescribeReplicationConfigurations(DescribeReplicationConfigurationsRequest request);
    public abstract virtual Task`1<DescribeReplicationConfigurationsResponse> DescribeReplicationConfigurationsAsync(DescribeReplicationConfigurationsRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public abstract virtual DescribeTagsResponse DescribeTags(string fileSystemId);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public abstract virtual DescribeTagsResponse DescribeTags(DescribeTagsRequest request);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(string fileSystemId, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use ListTagsForResource.")]
public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual ModifyMountTargetSecurityGroupsResponse ModifyMountTargetSecurityGroups(ModifyMountTargetSecurityGroupsRequest request);
    public abstract virtual Task`1<ModifyMountTargetSecurityGroupsResponse> ModifyMountTargetSecurityGroupsAsync(ModifyMountTargetSecurityGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual PutAccountPreferencesResponse PutAccountPreferences(PutAccountPreferencesRequest request);
    public abstract virtual Task`1<PutAccountPreferencesResponse> PutAccountPreferencesAsync(PutAccountPreferencesRequest request, CancellationToken cancellationToken);
    public abstract virtual PutBackupPolicyResponse PutBackupPolicy(PutBackupPolicyRequest request);
    public abstract virtual Task`1<PutBackupPolicyResponse> PutBackupPolicyAsync(PutBackupPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutFileSystemPolicyResponse PutFileSystemPolicy(PutFileSystemPolicyRequest request);
    public abstract virtual Task`1<PutFileSystemPolicyResponse> PutFileSystemPolicyAsync(PutFileSystemPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutLifecycleConfigurationResponse PutLifecycleConfiguration(PutLifecycleConfigurationRequest request);
    public abstract virtual Task`1<PutLifecycleConfigurationResponse> PutLifecycleConfigurationAsync(PutLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual TagResourceResponse TagResource(TagResourceRequest request);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateFileSystemResponse UpdateFileSystem(UpdateFileSystemRequest request);
    public abstract virtual Task`1<UpdateFileSystemResponse> UpdateFileSystemAsync(UpdateFileSystemRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateFileSystemProtectionResponse UpdateFileSystemProtection(UpdateFileSystemProtectionRequest request);
    public abstract virtual Task`1<UpdateFileSystemProtectionResponse> UpdateFileSystemProtectionAsync(UpdateFileSystemProtectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.ElasticFileSystem.Internal.AmazonElasticFileSystemEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.ElasticFileSystem.Internal.AmazonElasticFileSystemEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.ElasticFileSystem.Internal.AmazonElasticFileSystemMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.ElasticFileSystem.Internal.IdempotencyHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.ElasticFileSystem.LifeCycleState : ConstantClass {
    public static LifeCycleState Available;
    public static LifeCycleState Creating;
    public static LifeCycleState Deleted;
    public static LifeCycleState Deleting;
    public static LifeCycleState Error;
    public static LifeCycleState Updating;
    public LifeCycleState(string value);
    private static LifeCycleState();
    public static LifeCycleState FindValue(string value);
    public static LifeCycleState op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.Model.AccessPointAlreadyExistsException : AmazonElasticFileSystemException {
    private string _accessPointId;
    [AWSPropertyAttribute]
public string AccessPointId { get; public set; }
    public AccessPointAlreadyExistsException(string message);
    public AccessPointAlreadyExistsException(string message, Exception innerException);
    public AccessPointAlreadyExistsException(Exception innerException);
    public AccessPointAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessPointAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AccessPointAlreadyExistsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_AccessPointId();
    public void set_AccessPointId(string value);
    internal bool IsSetAccessPointId();
}
public class Amazon.ElasticFileSystem.Model.AccessPointDescription : object {
    private string _accessPointArn;
    private string _accessPointId;
    private string _clientToken;
    private string _fileSystemId;
    private LifeCycleState _lifeCycleState;
    private string _name;
    private string _ownerId;
    private PosixUser _posixUser;
    private RootDirectory _rootDirectory;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccessPointArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessPointId { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public LifeCycleState LifeCycleState { get; public set; }
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public string OwnerId { get; public set; }
    public PosixUser PosixUser { get; public set; }
    public RootDirectory RootDirectory { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_AccessPointArn();
    public void set_AccessPointArn(string value);
    internal bool IsSetAccessPointArn();
    public string get_AccessPointId();
    public void set_AccessPointId(string value);
    internal bool IsSetAccessPointId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public LifeCycleState get_LifeCycleState();
    public void set_LifeCycleState(LifeCycleState value);
    internal bool IsSetLifeCycleState();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PosixUser get_PosixUser();
    public void set_PosixUser(PosixUser value);
    internal bool IsSetPosixUser();
    public RootDirectory get_RootDirectory();
    public void set_RootDirectory(RootDirectory value);
    internal bool IsSetRootDirectory();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticFileSystem.Model.AccessPointLimitExceededException : AmazonElasticFileSystemException {
    public AccessPointLimitExceededException(string message);
    public AccessPointLimitExceededException(string message, Exception innerException);
    public AccessPointLimitExceededException(Exception innerException);
    public AccessPointLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessPointLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AccessPointLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.AccessPointNotFoundException : AmazonElasticFileSystemException {
    public AccessPointNotFoundException(string message);
    public AccessPointNotFoundException(string message, Exception innerException);
    public AccessPointNotFoundException(Exception innerException);
    public AccessPointNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessPointNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AccessPointNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.AvailabilityZonesMismatchException : AmazonElasticFileSystemException {
    public AvailabilityZonesMismatchException(string message);
    public AvailabilityZonesMismatchException(string message, Exception innerException);
    public AvailabilityZonesMismatchException(Exception innerException);
    public AvailabilityZonesMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AvailabilityZonesMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AvailabilityZonesMismatchException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.BackupPolicy : object {
    private Status _status;
    [AWSPropertyAttribute]
public Status Status { get; public set; }
    public Status get_Status();
    public void set_Status(Status value);
    internal bool IsSetStatus();
}
public class Amazon.ElasticFileSystem.Model.BadRequestException : AmazonElasticFileSystemException {
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
    public BadRequestException(Exception innerException);
    public BadRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BadRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected BadRequestException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.ConflictException : AmazonElasticFileSystemException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ConflictException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.CreateAccessPointRequest : AmazonElasticFileSystemRequest {
    private string _clientToken;
    private string _fileSystemId;
    private PosixUser _posixUser;
    private RootDirectory _rootDirectory;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public PosixUser PosixUser { get; public set; }
    public RootDirectory RootDirectory { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public PosixUser get_PosixUser();
    public void set_PosixUser(PosixUser value);
    internal bool IsSetPosixUser();
    public RootDirectory get_RootDirectory();
    public void set_RootDirectory(RootDirectory value);
    internal bool IsSetRootDirectory();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticFileSystem.Model.CreateAccessPointResponse : AmazonWebServiceResponse {
    private string _accessPointArn;
    private string _accessPointId;
    private string _clientToken;
    private string _fileSystemId;
    private LifeCycleState _lifeCycleState;
    private string _name;
    private string _ownerId;
    private PosixUser _posixUser;
    private RootDirectory _rootDirectory;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccessPointArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessPointId { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public LifeCycleState LifeCycleState { get; public set; }
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public string OwnerId { get; public set; }
    public PosixUser PosixUser { get; public set; }
    public RootDirectory RootDirectory { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_AccessPointArn();
    public void set_AccessPointArn(string value);
    internal bool IsSetAccessPointArn();
    public string get_AccessPointId();
    public void set_AccessPointId(string value);
    internal bool IsSetAccessPointId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public LifeCycleState get_LifeCycleState();
    public void set_LifeCycleState(LifeCycleState value);
    internal bool IsSetLifeCycleState();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PosixUser get_PosixUser();
    public void set_PosixUser(PosixUser value);
    internal bool IsSetPosixUser();
    public RootDirectory get_RootDirectory();
    public void set_RootDirectory(RootDirectory value);
    internal bool IsSetRootDirectory();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticFileSystem.Model.CreateFileSystemRequest : AmazonElasticFileSystemRequest {
    private string _availabilityZoneName;
    private Nullable`1<bool> _backup;
    private string _creationToken;
    private Nullable`1<bool> _encrypted;
    private string _kmsKeyId;
    private PerformanceMode _performanceMode;
    private Nullable`1<double> _provisionedThroughputInMibps;
    private List`1<Tag> _tags;
    private ThroughputMode _throughputMode;
    [AWSPropertyAttribute]
public string AvailabilityZoneName { get; public set; }
    public Nullable`1<bool> Backup { get; public set; }
    [AWSPropertyAttribute]
public string CreationToken { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public PerformanceMode PerformanceMode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> ProvisionedThroughputInMibps { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public ThroughputMode ThroughputMode { get; public set; }
    public CreateFileSystemRequest(string creationToken);
    public string get_AvailabilityZoneName();
    public void set_AvailabilityZoneName(string value);
    internal bool IsSetAvailabilityZoneName();
    public Nullable`1<bool> get_Backup();
    public void set_Backup(Nullable`1<bool> value);
    internal bool IsSetBackup();
    public string get_CreationToken();
    public void set_CreationToken(string value);
    internal bool IsSetCreationToken();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public PerformanceMode get_PerformanceMode();
    public void set_PerformanceMode(PerformanceMode value);
    internal bool IsSetPerformanceMode();
    public Nullable`1<double> get_ProvisionedThroughputInMibps();
    public void set_ProvisionedThroughputInMibps(Nullable`1<double> value);
    internal bool IsSetProvisionedThroughputInMibps();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public ThroughputMode get_ThroughputMode();
    public void set_ThroughputMode(ThroughputMode value);
    internal bool IsSetThroughputMode();
}
public class Amazon.ElasticFileSystem.Model.CreateFileSystemResponse : AmazonWebServiceResponse {
    private string _availabilityZoneId;
    private string _availabilityZoneName;
    private Nullable`1<DateTime> _creationTime;
    private string _creationToken;
    private Nullable`1<bool> _encrypted;
    private string _fileSystemArn;
    private string _fileSystemId;
    private FileSystemProtectionDescription _fileSystemProtection;
    private string _kmsKeyId;
    private LifeCycleState _lifeCycleState;
    private string _name;
    private Nullable`1<int> _numberOfMountTargets;
    private string _ownerId;
    private PerformanceMode _performanceMode;
    private Nullable`1<double> _provisionedThroughputInMibps;
    private FileSystemSize _sizeInBytes;
    private List`1<Tag> _tags;
    private ThroughputMode _throughputMode;
    public string AvailabilityZoneId { get; public set; }
    [AWSPropertyAttribute]
public string AvailabilityZoneName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string CreationToken { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string FileSystemArn { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public FileSystemProtectionDescription FileSystemProtection { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public LifeCycleState LifeCycleState { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumberOfMountTargets { get; public set; }
    [AWSPropertyAttribute]
public string OwnerId { get; public set; }
    [AWSPropertyAttribute]
public PerformanceMode PerformanceMode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> ProvisionedThroughputInMibps { get; public set; }
    [AWSPropertyAttribute]
public FileSystemSize SizeInBytes { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public ThroughputMode ThroughputMode { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_AvailabilityZoneName();
    public void set_AvailabilityZoneName(string value);
    internal bool IsSetAvailabilityZoneName();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CreationToken();
    public void set_CreationToken(string value);
    internal bool IsSetCreationToken();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_FileSystemArn();
    public void set_FileSystemArn(string value);
    internal bool IsSetFileSystemArn();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public FileSystemProtectionDescription get_FileSystemProtection();
    public void set_FileSystemProtection(FileSystemProtectionDescription value);
    internal bool IsSetFileSystemProtection();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public LifeCycleState get_LifeCycleState();
    public void set_LifeCycleState(LifeCycleState value);
    internal bool IsSetLifeCycleState();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfMountTargets();
    public void set_NumberOfMountTargets(Nullable`1<int> value);
    internal bool IsSetNumberOfMountTargets();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PerformanceMode get_PerformanceMode();
    public void set_PerformanceMode(PerformanceMode value);
    internal bool IsSetPerformanceMode();
    public Nullable`1<double> get_ProvisionedThroughputInMibps();
    public void set_ProvisionedThroughputInMibps(Nullable`1<double> value);
    internal bool IsSetProvisionedThroughputInMibps();
    public FileSystemSize get_SizeInBytes();
    public void set_SizeInBytes(FileSystemSize value);
    internal bool IsSetSizeInBytes();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public ThroughputMode get_ThroughputMode();
    public void set_ThroughputMode(ThroughputMode value);
    internal bool IsSetThroughputMode();
}
public class Amazon.ElasticFileSystem.Model.CreateMountTargetRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private string _ipAddress;
    private List`1<string> _securityGroups;
    private string _subnetId;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string IpAddress { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroups { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.ElasticFileSystem.Model.CreateMountTargetResponse : AmazonWebServiceResponse {
    private string _availabilityZoneId;
    private string _availabilityZoneName;
    private string _fileSystemId;
    private string _ipAddress;
    private LifeCycleState _lifeCycleState;
    private string _mountTargetId;
    private string _networkInterfaceId;
    private string _ownerId;
    private string _subnetId;
    private string _vpcId;
    public string AvailabilityZoneId { get; public set; }
    [AWSPropertyAttribute]
public string AvailabilityZoneName { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string IpAddress { get; public set; }
    [AWSPropertyAttribute]
public LifeCycleState LifeCycleState { get; public set; }
    [AWSPropertyAttribute]
public string MountTargetId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public string OwnerId { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public string VpcId { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_AvailabilityZoneName();
    public void set_AvailabilityZoneName(string value);
    internal bool IsSetAvailabilityZoneName();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public LifeCycleState get_LifeCycleState();
    public void set_LifeCycleState(LifeCycleState value);
    internal bool IsSetLifeCycleState();
    public string get_MountTargetId();
    public void set_MountTargetId(string value);
    internal bool IsSetMountTargetId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.ElasticFileSystem.Model.CreateReplicationConfigurationRequest : AmazonElasticFileSystemRequest {
    private List`1<DestinationToCreate> _destinations;
    private string _sourceFileSystemId;
    [AWSPropertyAttribute]
public List`1<DestinationToCreate> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string SourceFileSystemId { get; public set; }
    public List`1<DestinationToCreate> get_Destinations();
    public void set_Destinations(List`1<DestinationToCreate> value);
    internal bool IsSetDestinations();
    public string get_SourceFileSystemId();
    public void set_SourceFileSystemId(string value);
    internal bool IsSetSourceFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.CreateReplicationConfigurationResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _creationTime;
    private List`1<Destination> _destinations;
    private string _originalSourceFileSystemArn;
    private string _sourceFileSystemArn;
    private string _sourceFileSystemId;
    private string _sourceFileSystemRegion;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Destination> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string OriginalSourceFileSystemArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceFileSystemArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceFileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string SourceFileSystemRegion { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public string get_OriginalSourceFileSystemArn();
    public void set_OriginalSourceFileSystemArn(string value);
    internal bool IsSetOriginalSourceFileSystemArn();
    public string get_SourceFileSystemArn();
    public void set_SourceFileSystemArn(string value);
    internal bool IsSetSourceFileSystemArn();
    public string get_SourceFileSystemId();
    public void set_SourceFileSystemId(string value);
    internal bool IsSetSourceFileSystemId();
    public string get_SourceFileSystemRegion();
    public void set_SourceFileSystemRegion(string value);
    internal bool IsSetSourceFileSystemRegion();
}
public class Amazon.ElasticFileSystem.Model.CreateTagsRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticFileSystem.Model.CreateTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.CreationInfo : object {
    private Nullable`1<long> _ownerGid;
    private Nullable`1<long> _ownerUid;
    private string _permissions;
    [AWSPropertyAttribute]
public Nullable`1<long> OwnerGid { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> OwnerUid { get; public set; }
    [AWSPropertyAttribute]
public string Permissions { get; public set; }
    public Nullable`1<long> get_OwnerGid();
    public void set_OwnerGid(Nullable`1<long> value);
    internal bool IsSetOwnerGid();
    public Nullable`1<long> get_OwnerUid();
    public void set_OwnerUid(Nullable`1<long> value);
    internal bool IsSetOwnerUid();
    public string get_Permissions();
    public void set_Permissions(string value);
    internal bool IsSetPermissions();
}
public class Amazon.ElasticFileSystem.Model.DeleteAccessPointRequest : AmazonElasticFileSystemRequest {
    private string _accessPointId;
    [AWSPropertyAttribute]
public string AccessPointId { get; public set; }
    public string get_AccessPointId();
    public void set_AccessPointId(string value);
    internal bool IsSetAccessPointId();
}
public class Amazon.ElasticFileSystem.Model.DeleteAccessPointResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.DeleteFileSystemPolicyRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.DeleteFileSystemPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public DeleteFileSystemRequest(string fileSystemId);
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.DeleteFileSystemResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest : AmazonElasticFileSystemRequest {
    private string _mountTargetId;
    [AWSPropertyAttribute]
public string MountTargetId { get; public set; }
    public DeleteMountTargetRequest(string mountTargetId);
    public string get_MountTargetId();
    public void set_MountTargetId(string value);
    internal bool IsSetMountTargetId();
}
public class Amazon.ElasticFileSystem.Model.DeleteMountTargetResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.DeleteReplicationConfigurationRequest : AmazonElasticFileSystemRequest {
    private string _sourceFileSystemId;
    [AWSPropertyAttribute]
public string SourceFileSystemId { get; public set; }
    public string get_SourceFileSystemId();
    public void set_SourceFileSystemId(string value);
    internal bool IsSetSourceFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.DeleteReplicationConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.DeleteTagsRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.ElasticFileSystem.Model.DeleteTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.DependencyTimeoutException : AmazonElasticFileSystemException {
    public DependencyTimeoutException(string message);
    public DependencyTimeoutException(string message, Exception innerException);
    public DependencyTimeoutException(Exception innerException);
    public DependencyTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DependencyTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected DependencyTimeoutException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
internal class Amazon.ElasticFileSystem.Model.DescribeAccessPointsPaginator : object {
    private IAmazonElasticFileSystem _client;
    private DescribeAccessPointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAccessPointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessPointDescription> AccessPoints { get; }
    internal DescribeAccessPointsPaginator(IAmazonElasticFileSystem client, DescribeAccessPointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAccessPointsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AccessPointDescription> get_AccessPoints();
    [IteratorStateMachineAttribute("Amazon.ElasticFileSystem.Model.DescribeAccessPointsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticFileSystem-Model-DescribeAccessPointsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeAccessPointsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticFileSystem.Model.DescribeAccessPointsResponse>.Paginate();
}
public class Amazon.ElasticFileSystem.Model.DescribeAccessPointsRequest : AmazonElasticFileSystemRequest {
    private string _accessPointId;
    private string _fileSystemId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccessPointId { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_AccessPointId();
    public void set_AccessPointId(string value);
    internal bool IsSetAccessPointId();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ElasticFileSystem.Model.DescribeAccessPointsResponse : AmazonWebServiceResponse {
    private List`1<AccessPointDescription> _accessPoints;
    private string _nextToken;
    public List`1<AccessPointDescription> AccessPoints { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<AccessPointDescription> get_AccessPoints();
    public void set_AccessPoints(List`1<AccessPointDescription> value);
    internal bool IsSetAccessPoints();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ElasticFileSystem.Model.DescribeAccountPreferencesRequest : AmazonElasticFileSystemRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ElasticFileSystem.Model.DescribeAccountPreferencesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private ResourceIdPreference _resourceIdPreference;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public ResourceIdPreference ResourceIdPreference { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ResourceIdPreference get_ResourceIdPreference();
    public void set_ResourceIdPreference(ResourceIdPreference value);
    internal bool IsSetResourceIdPreference();
}
public class Amazon.ElasticFileSystem.Model.DescribeBackupPolicyRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.DescribeBackupPolicyResponse : AmazonWebServiceResponse {
    private BackupPolicy _backupPolicy;
    public BackupPolicy BackupPolicy { get; public set; }
    public BackupPolicy get_BackupPolicy();
    public void set_BackupPolicy(BackupPolicy value);
    internal bool IsSetBackupPolicy();
}
public class Amazon.ElasticFileSystem.Model.DescribeFileSystemPolicyRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.DescribeFileSystemPolicyResponse : AmazonWebServiceResponse {
    private string _fileSystemId;
    private string _policy;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
internal class Amazon.ElasticFileSystem.Model.DescribeFileSystemsPaginator : object {
    private IAmazonElasticFileSystem _client;
    private DescribeFileSystemsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFileSystemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FileSystemDescription> FileSystems { get; }
    internal DescribeFileSystemsPaginator(IAmazonElasticFileSystem client, DescribeFileSystemsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFileSystemsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FileSystemDescription> get_FileSystems();
    [IteratorStateMachineAttribute("Amazon.ElasticFileSystem.Model.DescribeFileSystemsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticFileSystem-Model-DescribeFileSystemsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeFileSystemsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse>.Paginate();
}
public class Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest : AmazonElasticFileSystemRequest {
    private string _creationToken;
    private string _fileSystemId;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string CreationToken { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_CreationToken();
    public void set_CreationToken(string value);
    internal bool IsSetCreationToken();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse : AmazonWebServiceResponse {
    private List`1<FileSystemDescription> _fileSystems;
    private string _marker;
    private string _nextMarker;
    public List`1<FileSystemDescription> FileSystems { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public string NextMarker { get; public set; }
    public List`1<FileSystemDescription> get_FileSystems();
    public void set_FileSystems(List`1<FileSystemDescription> value);
    internal bool IsSetFileSystems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationResponse : AmazonWebServiceResponse {
    private List`1<LifecyclePolicy> _lifecyclePolicies;
    [AWSPropertyAttribute]
public List`1<LifecyclePolicy> LifecyclePolicies { get; public set; }
    public List`1<LifecyclePolicy> get_LifecyclePolicies();
    public void set_LifecyclePolicies(List`1<LifecyclePolicy> value);
    internal bool IsSetLifecyclePolicies();
}
public class Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest : AmazonElasticFileSystemRequest {
    private string _mountTargetId;
    [AWSPropertyAttribute]
public string MountTargetId { get; public set; }
    public string get_MountTargetId();
    public void set_MountTargetId(string value);
    internal bool IsSetMountTargetId();
}
public class Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse : AmazonWebServiceResponse {
    private List`1<string> _securityGroups;
    [AWSPropertyAttribute]
public List`1<string> SecurityGroups { get; public set; }
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
internal class Amazon.ElasticFileSystem.Model.DescribeMountTargetsPaginator : object {
    private IAmazonElasticFileSystem _client;
    private DescribeMountTargetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMountTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MountTargetDescription> MountTargets { get; }
    internal DescribeMountTargetsPaginator(IAmazonElasticFileSystem client, DescribeMountTargetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMountTargetsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MountTargetDescription> get_MountTargets();
    [IteratorStateMachineAttribute("Amazon.ElasticFileSystem.Model.DescribeMountTargetsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticFileSystem-Model-DescribeMountTargetsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeMountTargetsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse>.Paginate();
}
public class Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest : AmazonElasticFileSystemRequest {
    private string _accessPointId;
    private string _fileSystemId;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _mountTargetId;
    [AWSPropertyAttribute]
public string AccessPointId { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    [AWSPropertyAttribute]
public string MountTargetId { get; public set; }
    public DescribeMountTargetsRequest(string fileSystemId);
    public string get_AccessPointId();
    public void set_AccessPointId(string value);
    internal bool IsSetAccessPointId();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_MountTargetId();
    public void set_MountTargetId(string value);
    internal bool IsSetMountTargetId();
}
public class Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<MountTargetDescription> _mountTargets;
    private string _nextMarker;
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<MountTargetDescription> MountTargets { get; public set; }
    [AWSPropertyAttribute]
public string NextMarker { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<MountTargetDescription> get_MountTargets();
    public void set_MountTargets(List`1<MountTargetDescription> value);
    internal bool IsSetMountTargets();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.ElasticFileSystem.Model.DescribeReplicationConfigurationsPaginator : object {
    private IAmazonElasticFileSystem _client;
    private DescribeReplicationConfigurationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReplicationConfigurationDescription> Replications { get; }
    internal DescribeReplicationConfigurationsPaginator(IAmazonElasticFileSystem client, DescribeReplicationConfigurationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationConfigurationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ReplicationConfigurationDescription> get_Replications();
    [IteratorStateMachineAttribute("Amazon.ElasticFileSystem.Model.DescribeReplicationConfigurationsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticFileSystem-Model-DescribeReplicationConfigurationsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeReplicationConfigurationsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticFileSystem.Model.DescribeReplicationConfigurationsResponse>.Paginate();
}
public class Amazon.ElasticFileSystem.Model.DescribeReplicationConfigurationsRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ElasticFileSystem.Model.DescribeReplicationConfigurationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReplicationConfigurationDescription> _replications;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ReplicationConfigurationDescription> Replications { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReplicationConfigurationDescription> get_Replications();
    public void set_Replications(List`1<ReplicationConfigurationDescription> value);
    internal bool IsSetReplications();
}
internal class Amazon.ElasticFileSystem.Model.DescribeTagsPaginator : object {
    private IAmazonElasticFileSystem _client;
    private DescribeTagsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTagsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    internal DescribeTagsPaginator(IAmazonElasticFileSystem client, DescribeTagsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTagsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Tag> get_Tags();
    [IteratorStateMachineAttribute("Amazon.ElasticFileSystem.Model.DescribeTagsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticFileSystem-Model-DescribeTagsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeTagsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticFileSystem.Model.DescribeTagsResponse>.Paginate();
}
public class Amazon.ElasticFileSystem.Model.DescribeTagsRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public DescribeTagsRequest(string fileSystemId);
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.ElasticFileSystem.Model.DescribeTagsResponse : AmazonWebServiceResponse {
    private string _marker;
    private string _nextMarker;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticFileSystem.Model.Destination : object {
    private string _fileSystemId;
    private Nullable`1<DateTime> _lastReplicatedTimestamp;
    private string _region;
    private ReplicationStatus _status;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public Nullable`1<DateTime> LastReplicatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    [AWSPropertyAttribute]
public ReplicationStatus Status { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public Nullable`1<DateTime> get_LastReplicatedTimestamp();
    public void set_LastReplicatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetLastReplicatedTimestamp();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public ReplicationStatus get_Status();
    public void set_Status(ReplicationStatus value);
    internal bool IsSetStatus();
}
public class Amazon.ElasticFileSystem.Model.DestinationToCreate : object {
    private string _availabilityZoneName;
    private string _fileSystemId;
    private string _kmsKeyId;
    private string _region;
    [AWSPropertyAttribute]
public string AvailabilityZoneName { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public string get_AvailabilityZoneName();
    public void set_AvailabilityZoneName(string value);
    internal bool IsSetAvailabilityZoneName();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
}
public class Amazon.ElasticFileSystem.Model.ElasticFileSystemPaginatorFactory : object {
    private IAmazonElasticFileSystem client;
    internal ElasticFileSystemPaginatorFactory(IAmazonElasticFileSystem client);
    public sealed virtual IDescribeAccessPointsPaginator DescribeAccessPoints(DescribeAccessPointsRequest request);
    public sealed virtual IDescribeFileSystemsPaginator DescribeFileSystems(DescribeFileSystemsRequest request);
    public sealed virtual IDescribeMountTargetsPaginator DescribeMountTargets(DescribeMountTargetsRequest request);
    public sealed virtual IDescribeReplicationConfigurationsPaginator DescribeReplicationConfigurations(DescribeReplicationConfigurationsRequest request);
    public sealed virtual IDescribeTagsPaginator DescribeTags(DescribeTagsRequest request);
    public sealed virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
}
public class Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException : AmazonElasticFileSystemException {
    private string _fileSystemId;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public FileSystemAlreadyExistsException(string message);
    public FileSystemAlreadyExistsException(string message, Exception innerException);
    public FileSystemAlreadyExistsException(Exception innerException);
    public FileSystemAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FileSystemAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected FileSystemAlreadyExistsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.FileSystemDescription : object {
    private string _availabilityZoneId;
    private string _availabilityZoneName;
    private Nullable`1<DateTime> _creationTime;
    private string _creationToken;
    private Nullable`1<bool> _encrypted;
    private string _fileSystemArn;
    private string _fileSystemId;
    private FileSystemProtectionDescription _fileSystemProtection;
    private string _kmsKeyId;
    private LifeCycleState _lifeCycleState;
    private string _name;
    private Nullable`1<int> _numberOfMountTargets;
    private string _ownerId;
    private PerformanceMode _performanceMode;
    private Nullable`1<double> _provisionedThroughputInMibps;
    private FileSystemSize _sizeInBytes;
    private List`1<Tag> _tags;
    private ThroughputMode _throughputMode;
    public string AvailabilityZoneId { get; public set; }
    [AWSPropertyAttribute]
public string AvailabilityZoneName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string CreationToken { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string FileSystemArn { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public FileSystemProtectionDescription FileSystemProtection { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public LifeCycleState LifeCycleState { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumberOfMountTargets { get; public set; }
    [AWSPropertyAttribute]
public string OwnerId { get; public set; }
    [AWSPropertyAttribute]
public PerformanceMode PerformanceMode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> ProvisionedThroughputInMibps { get; public set; }
    [AWSPropertyAttribute]
public FileSystemSize SizeInBytes { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public ThroughputMode ThroughputMode { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_AvailabilityZoneName();
    public void set_AvailabilityZoneName(string value);
    internal bool IsSetAvailabilityZoneName();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CreationToken();
    public void set_CreationToken(string value);
    internal bool IsSetCreationToken();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_FileSystemArn();
    public void set_FileSystemArn(string value);
    internal bool IsSetFileSystemArn();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public FileSystemProtectionDescription get_FileSystemProtection();
    public void set_FileSystemProtection(FileSystemProtectionDescription value);
    internal bool IsSetFileSystemProtection();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public LifeCycleState get_LifeCycleState();
    public void set_LifeCycleState(LifeCycleState value);
    internal bool IsSetLifeCycleState();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfMountTargets();
    public void set_NumberOfMountTargets(Nullable`1<int> value);
    internal bool IsSetNumberOfMountTargets();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PerformanceMode get_PerformanceMode();
    public void set_PerformanceMode(PerformanceMode value);
    internal bool IsSetPerformanceMode();
    public Nullable`1<double> get_ProvisionedThroughputInMibps();
    public void set_ProvisionedThroughputInMibps(Nullable`1<double> value);
    internal bool IsSetProvisionedThroughputInMibps();
    public FileSystemSize get_SizeInBytes();
    public void set_SizeInBytes(FileSystemSize value);
    internal bool IsSetSizeInBytes();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public ThroughputMode get_ThroughputMode();
    public void set_ThroughputMode(ThroughputMode value);
    internal bool IsSetThroughputMode();
}
public class Amazon.ElasticFileSystem.Model.FileSystemInUseException : AmazonElasticFileSystemException {
    public FileSystemInUseException(string message);
    public FileSystemInUseException(string message, Exception innerException);
    public FileSystemInUseException(Exception innerException);
    public FileSystemInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FileSystemInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected FileSystemInUseException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException : AmazonElasticFileSystemException {
    public FileSystemLimitExceededException(string message);
    public FileSystemLimitExceededException(string message, Exception innerException);
    public FileSystemLimitExceededException(Exception innerException);
    public FileSystemLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FileSystemLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected FileSystemLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.FileSystemNotFoundException : AmazonElasticFileSystemException {
    public FileSystemNotFoundException(string message);
    public FileSystemNotFoundException(string message, Exception innerException);
    public FileSystemNotFoundException(Exception innerException);
    public FileSystemNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FileSystemNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected FileSystemNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.FileSystemProtectionDescription : object {
    private ReplicationOverwriteProtection _replicationOverwriteProtection;
    public ReplicationOverwriteProtection ReplicationOverwriteProtection { get; public set; }
    public ReplicationOverwriteProtection get_ReplicationOverwriteProtection();
    public void set_ReplicationOverwriteProtection(ReplicationOverwriteProtection value);
    internal bool IsSetReplicationOverwriteProtection();
}
public class Amazon.ElasticFileSystem.Model.FileSystemSize : object {
    private Nullable`1<DateTime> _timestamp;
    private Nullable`1<long> _value;
    private Nullable`1<long> _valueInArchive;
    private Nullable`1<long> _valueInIA;
    private Nullable`1<long> _valueInStandard;
    public Nullable`1<DateTime> Timestamp { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Value { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ValueInArchive { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ValueInIA { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ValueInStandard { get; public set; }
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
    public Nullable`1<long> get_Value();
    public void set_Value(Nullable`1<long> value);
    internal bool IsSetValue();
    public Nullable`1<long> get_ValueInArchive();
    public void set_ValueInArchive(Nullable`1<long> value);
    internal bool IsSetValueInArchive();
    public Nullable`1<long> get_ValueInIA();
    public void set_ValueInIA(Nullable`1<long> value);
    internal bool IsSetValueInIA();
    public Nullable`1<long> get_ValueInStandard();
    public void set_ValueInStandard(Nullable`1<long> value);
    internal bool IsSetValueInStandard();
}
public interface Amazon.ElasticFileSystem.Model.IDescribeAccessPointsPaginator {
    public IPaginatedEnumerable`1<DescribeAccessPointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessPointDescription> AccessPoints { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAccessPointsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AccessPointDescription> get_AccessPoints();
}
public interface Amazon.ElasticFileSystem.Model.IDescribeFileSystemsPaginator {
    public IPaginatedEnumerable`1<DescribeFileSystemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FileSystemDescription> FileSystems { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFileSystemsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FileSystemDescription> get_FileSystems();
}
public interface Amazon.ElasticFileSystem.Model.IDescribeMountTargetsPaginator {
    public IPaginatedEnumerable`1<DescribeMountTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MountTargetDescription> MountTargets { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMountTargetsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MountTargetDescription> get_MountTargets();
}
public interface Amazon.ElasticFileSystem.Model.IDescribeReplicationConfigurationsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReplicationConfigurationDescription> Replications { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationConfigurationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ReplicationConfigurationDescription> get_Replications();
}
public interface Amazon.ElasticFileSystem.Model.IDescribeTagsPaginator {
    public IPaginatedEnumerable`1<DescribeTagsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTagsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Tag> get_Tags();
}
public interface Amazon.ElasticFileSystem.Model.IElasticFileSystemPaginatorFactory {
    public abstract virtual IDescribeAccessPointsPaginator DescribeAccessPoints(DescribeAccessPointsRequest request);
    public abstract virtual IDescribeFileSystemsPaginator DescribeFileSystems(DescribeFileSystemsRequest request);
    public abstract virtual IDescribeMountTargetsPaginator DescribeMountTargets(DescribeMountTargetsRequest request);
    public abstract virtual IDescribeReplicationConfigurationsPaginator DescribeReplicationConfigurations(DescribeReplicationConfigurationsRequest request);
    public abstract virtual IDescribeTagsPaginator DescribeTags(DescribeTagsRequest request);
    public abstract virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
}
public interface Amazon.ElasticFileSystem.Model.IListTagsForResourcePaginator {
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
}
public class Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException : AmazonElasticFileSystemException {
    public IncorrectFileSystemLifeCycleStateException(string message);
    public IncorrectFileSystemLifeCycleStateException(string message, Exception innerException);
    public IncorrectFileSystemLifeCycleStateException(Exception innerException);
    public IncorrectFileSystemLifeCycleStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IncorrectFileSystemLifeCycleStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected IncorrectFileSystemLifeCycleStateException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException : AmazonElasticFileSystemException {
    public IncorrectMountTargetStateException(string message);
    public IncorrectMountTargetStateException(string message, Exception innerException);
    public IncorrectMountTargetStateException(Exception innerException);
    public IncorrectMountTargetStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IncorrectMountTargetStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected IncorrectMountTargetStateException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException : AmazonElasticFileSystemException {
    public InsufficientThroughputCapacityException(string message);
    public InsufficientThroughputCapacityException(string message, Exception innerException);
    public InsufficientThroughputCapacityException(Exception innerException);
    public InsufficientThroughputCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientThroughputCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InsufficientThroughputCapacityException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.AccessPointAlreadyExistsExceptionUnmarshaller : object {
    private static AccessPointAlreadyExistsExceptionUnmarshaller _instance;
    public static AccessPointAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static AccessPointAlreadyExistsExceptionUnmarshaller();
    public sealed virtual AccessPointAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessPointAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessPointAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.AccessPointDescriptionUnmarshaller : object {
    private static AccessPointDescriptionUnmarshaller _instance;
    public static AccessPointDescriptionUnmarshaller Instance { get; }
    private static AccessPointDescriptionUnmarshaller();
    private sealed virtual override AccessPointDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.AccessPointDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessPointDescription Unmarshall(JsonUnmarshallerContext context);
    public static AccessPointDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.AccessPointLimitExceededExceptionUnmarshaller : object {
    private static AccessPointLimitExceededExceptionUnmarshaller _instance;
    public static AccessPointLimitExceededExceptionUnmarshaller Instance { get; }
    private static AccessPointLimitExceededExceptionUnmarshaller();
    public sealed virtual AccessPointLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessPointLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessPointLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.AccessPointNotFoundExceptionUnmarshaller : object {
    private static AccessPointNotFoundExceptionUnmarshaller _instance;
    public static AccessPointNotFoundExceptionUnmarshaller Instance { get; }
    private static AccessPointNotFoundExceptionUnmarshaller();
    public sealed virtual AccessPointNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessPointNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessPointNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.AvailabilityZonesMismatchExceptionUnmarshaller : object {
    private static AvailabilityZonesMismatchExceptionUnmarshaller _instance;
    public static AvailabilityZonesMismatchExceptionUnmarshaller Instance { get; }
    private static AvailabilityZonesMismatchExceptionUnmarshaller();
    public sealed virtual AvailabilityZonesMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AvailabilityZonesMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AvailabilityZonesMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.BackupPolicyMarshaller : object {
    public static BackupPolicyMarshaller Instance;
    private static BackupPolicyMarshaller();
    public sealed virtual void Marshall(BackupPolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.BackupPolicyUnmarshaller : object {
    private static BackupPolicyUnmarshaller _instance;
    public static BackupPolicyUnmarshaller Instance { get; }
    private static BackupPolicyUnmarshaller();
    private sealed virtual override BackupPolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.BackupPolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BackupPolicy Unmarshall(JsonUnmarshallerContext context);
    public static BackupPolicyUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller : object {
    private static BadRequestExceptionUnmarshaller _instance;
    public static BadRequestExceptionUnmarshaller Instance { get; }
    private static BadRequestExceptionUnmarshaller();
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BadRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateAccessPointRequestMarshaller : object {
    private static CreateAccessPointRequestMarshaller _instance;
    public static CreateAccessPointRequestMarshaller Instance { get; }
    private static CreateAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccessPointRequest publicRequest);
    internal static CreateAccessPointRequestMarshaller GetInstance();
    public static CreateAccessPointRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateAccessPointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAccessPointResponseUnmarshaller _instance;
    public static CreateAccessPointResponseUnmarshaller Instance { get; }
    private static CreateAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccessPointResponseUnmarshaller GetInstance();
    public static CreateAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller : object {
    private static CreateFileSystemRequestMarshaller _instance;
    public static CreateFileSystemRequestMarshaller Instance { get; }
    private static CreateFileSystemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFileSystemRequest publicRequest);
    internal static CreateFileSystemRequestMarshaller GetInstance();
    public static CreateFileSystemRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateFileSystemResponseUnmarshaller _instance;
    public static CreateFileSystemResponseUnmarshaller Instance { get; }
    private static CreateFileSystemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFileSystemResponseUnmarshaller GetInstance();
    public static CreateFileSystemResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller : object {
    private static CreateMountTargetRequestMarshaller _instance;
    public static CreateMountTargetRequestMarshaller Instance { get; }
    private static CreateMountTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateMountTargetRequest publicRequest);
    internal static CreateMountTargetRequestMarshaller GetInstance();
    public static CreateMountTargetRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateMountTargetResponseUnmarshaller _instance;
    public static CreateMountTargetResponseUnmarshaller Instance { get; }
    private static CreateMountTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateMountTargetResponseUnmarshaller GetInstance();
    public static CreateMountTargetResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateReplicationConfigurationRequestMarshaller : object {
    private static CreateReplicationConfigurationRequestMarshaller _instance;
    public static CreateReplicationConfigurationRequestMarshaller Instance { get; }
    private static CreateReplicationConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReplicationConfigurationRequest publicRequest);
    internal static CreateReplicationConfigurationRequestMarshaller GetInstance();
    public static CreateReplicationConfigurationRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateReplicationConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateReplicationConfigurationResponseUnmarshaller _instance;
    public static CreateReplicationConfigurationResponseUnmarshaller Instance { get; }
    private static CreateReplicationConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReplicationConfigurationResponseUnmarshaller GetInstance();
    public static CreateReplicationConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller : object {
    private static CreateTagsRequestMarshaller _instance;
    public static CreateTagsRequestMarshaller Instance { get; }
    private static CreateTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTagsRequest publicRequest);
    internal static CreateTagsRequestMarshaller GetInstance();
    public static CreateTagsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTagsResponseUnmarshaller _instance;
    public static CreateTagsResponseUnmarshaller Instance { get; }
    private static CreateTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTagsResponseUnmarshaller GetInstance();
    public static CreateTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreationInfoMarshaller : object {
    public static CreationInfoMarshaller Instance;
    private static CreationInfoMarshaller();
    public sealed virtual void Marshall(CreationInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreationInfoUnmarshaller : object {
    private static CreationInfoUnmarshaller _instance;
    public static CreationInfoUnmarshaller Instance { get; }
    private static CreationInfoUnmarshaller();
    private sealed virtual override CreationInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.CreationInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreationInfo Unmarshall(JsonUnmarshallerContext context);
    public static CreationInfoUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteAccessPointRequestMarshaller : object {
    private static DeleteAccessPointRequestMarshaller _instance;
    public static DeleteAccessPointRequestMarshaller Instance { get; }
    private static DeleteAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessPointRequest publicRequest);
    internal static DeleteAccessPointRequestMarshaller GetInstance();
    public static DeleteAccessPointRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteAccessPointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAccessPointResponseUnmarshaller _instance;
    public static DeleteAccessPointResponseUnmarshaller Instance { get; }
    private static DeleteAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessPointResponseUnmarshaller GetInstance();
    public static DeleteAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemPolicyRequestMarshaller : object {
    private static DeleteFileSystemPolicyRequestMarshaller _instance;
    public static DeleteFileSystemPolicyRequestMarshaller Instance { get; }
    private static DeleteFileSystemPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFileSystemPolicyRequest publicRequest);
    internal static DeleteFileSystemPolicyRequestMarshaller GetInstance();
    public static DeleteFileSystemPolicyRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFileSystemPolicyResponseUnmarshaller _instance;
    public static DeleteFileSystemPolicyResponseUnmarshaller Instance { get; }
    private static DeleteFileSystemPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFileSystemPolicyResponseUnmarshaller GetInstance();
    public static DeleteFileSystemPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller : object {
    private static DeleteFileSystemRequestMarshaller _instance;
    public static DeleteFileSystemRequestMarshaller Instance { get; }
    private static DeleteFileSystemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFileSystemRequest publicRequest);
    internal static DeleteFileSystemRequestMarshaller GetInstance();
    public static DeleteFileSystemRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFileSystemResponseUnmarshaller _instance;
    public static DeleteFileSystemResponseUnmarshaller Instance { get; }
    private static DeleteFileSystemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFileSystemResponseUnmarshaller GetInstance();
    public static DeleteFileSystemResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller : object {
    private static DeleteMountTargetRequestMarshaller _instance;
    public static DeleteMountTargetRequestMarshaller Instance { get; }
    private static DeleteMountTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMountTargetRequest publicRequest);
    internal static DeleteMountTargetRequestMarshaller GetInstance();
    public static DeleteMountTargetRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMountTargetResponseUnmarshaller _instance;
    public static DeleteMountTargetResponseUnmarshaller Instance { get; }
    private static DeleteMountTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMountTargetResponseUnmarshaller GetInstance();
    public static DeleteMountTargetResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteReplicationConfigurationRequestMarshaller : object {
    private static DeleteReplicationConfigurationRequestMarshaller _instance;
    public static DeleteReplicationConfigurationRequestMarshaller Instance { get; }
    private static DeleteReplicationConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReplicationConfigurationRequest publicRequest);
    internal static DeleteReplicationConfigurationRequestMarshaller GetInstance();
    public static DeleteReplicationConfigurationRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteReplicationConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteReplicationConfigurationResponseUnmarshaller _instance;
    public static DeleteReplicationConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteReplicationConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReplicationConfigurationResponseUnmarshaller GetInstance();
    public static DeleteReplicationConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller : object {
    private static DeleteTagsRequestMarshaller _instance;
    public static DeleteTagsRequestMarshaller Instance { get; }
    private static DeleteTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTagsRequest publicRequest);
    internal static DeleteTagsRequestMarshaller GetInstance();
    public static DeleteTagsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTagsResponseUnmarshaller _instance;
    public static DeleteTagsResponseUnmarshaller Instance { get; }
    private static DeleteTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTagsResponseUnmarshaller GetInstance();
    public static DeleteTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DependencyTimeoutExceptionUnmarshaller : object {
    private static DependencyTimeoutExceptionUnmarshaller _instance;
    public static DependencyTimeoutExceptionUnmarshaller Instance { get; }
    private static DependencyTimeoutExceptionUnmarshaller();
    public sealed virtual DependencyTimeoutException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DependencyTimeoutException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DependencyTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeAccessPointsRequestMarshaller : object {
    private static DescribeAccessPointsRequestMarshaller _instance;
    public static DescribeAccessPointsRequestMarshaller Instance { get; }
    private static DescribeAccessPointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccessPointsRequest publicRequest);
    internal static DescribeAccessPointsRequestMarshaller GetInstance();
    public static DescribeAccessPointsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeAccessPointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAccessPointsResponseUnmarshaller _instance;
    public static DescribeAccessPointsResponseUnmarshaller Instance { get; }
    private static DescribeAccessPointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccessPointsResponseUnmarshaller GetInstance();
    public static DescribeAccessPointsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeAccountPreferencesRequestMarshaller : object {
    private static DescribeAccountPreferencesRequestMarshaller _instance;
    public static DescribeAccountPreferencesRequestMarshaller Instance { get; }
    private static DescribeAccountPreferencesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountPreferencesRequest publicRequest);
    internal static DescribeAccountPreferencesRequestMarshaller GetInstance();
    public static DescribeAccountPreferencesRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeAccountPreferencesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAccountPreferencesResponseUnmarshaller _instance;
    public static DescribeAccountPreferencesResponseUnmarshaller Instance { get; }
    private static DescribeAccountPreferencesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountPreferencesResponseUnmarshaller GetInstance();
    public static DescribeAccountPreferencesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeBackupPolicyRequestMarshaller : object {
    private static DescribeBackupPolicyRequestMarshaller _instance;
    public static DescribeBackupPolicyRequestMarshaller Instance { get; }
    private static DescribeBackupPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBackupPolicyRequest publicRequest);
    internal static DescribeBackupPolicyRequestMarshaller GetInstance();
    public static DescribeBackupPolicyRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeBackupPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeBackupPolicyResponseUnmarshaller _instance;
    public static DescribeBackupPolicyResponseUnmarshaller Instance { get; }
    private static DescribeBackupPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBackupPolicyResponseUnmarshaller GetInstance();
    public static DescribeBackupPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemPolicyRequestMarshaller : object {
    private static DescribeFileSystemPolicyRequestMarshaller _instance;
    public static DescribeFileSystemPolicyRequestMarshaller Instance { get; }
    private static DescribeFileSystemPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFileSystemPolicyRequest publicRequest);
    internal static DescribeFileSystemPolicyRequestMarshaller GetInstance();
    public static DescribeFileSystemPolicyRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFileSystemPolicyResponseUnmarshaller _instance;
    public static DescribeFileSystemPolicyResponseUnmarshaller Instance { get; }
    private static DescribeFileSystemPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFileSystemPolicyResponseUnmarshaller GetInstance();
    public static DescribeFileSystemPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller : object {
    private static DescribeFileSystemsRequestMarshaller _instance;
    public static DescribeFileSystemsRequestMarshaller Instance { get; }
    private static DescribeFileSystemsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFileSystemsRequest publicRequest);
    internal static DescribeFileSystemsRequestMarshaller GetInstance();
    public static DescribeFileSystemsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFileSystemsResponseUnmarshaller _instance;
    public static DescribeFileSystemsResponseUnmarshaller Instance { get; }
    private static DescribeFileSystemsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFileSystemsResponseUnmarshaller GetInstance();
    public static DescribeFileSystemsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationRequestMarshaller : object {
    private static DescribeLifecycleConfigurationRequestMarshaller _instance;
    public static DescribeLifecycleConfigurationRequestMarshaller Instance { get; }
    private static DescribeLifecycleConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLifecycleConfigurationRequest publicRequest);
    internal static DescribeLifecycleConfigurationRequestMarshaller GetInstance();
    public static DescribeLifecycleConfigurationRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLifecycleConfigurationResponseUnmarshaller _instance;
    public static DescribeLifecycleConfigurationResponseUnmarshaller Instance { get; }
    private static DescribeLifecycleConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLifecycleConfigurationResponseUnmarshaller GetInstance();
    public static DescribeLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller : object {
    private static DescribeMountTargetSecurityGroupsRequestMarshaller _instance;
    public static DescribeMountTargetSecurityGroupsRequestMarshaller Instance { get; }
    private static DescribeMountTargetSecurityGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMountTargetSecurityGroupsRequest publicRequest);
    internal static DescribeMountTargetSecurityGroupsRequestMarshaller GetInstance();
    public static DescribeMountTargetSecurityGroupsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMountTargetSecurityGroupsResponseUnmarshaller _instance;
    public static DescribeMountTargetSecurityGroupsResponseUnmarshaller Instance { get; }
    private static DescribeMountTargetSecurityGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMountTargetSecurityGroupsResponseUnmarshaller GetInstance();
    public static DescribeMountTargetSecurityGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller : object {
    private static DescribeMountTargetsRequestMarshaller _instance;
    public static DescribeMountTargetsRequestMarshaller Instance { get; }
    private static DescribeMountTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMountTargetsRequest publicRequest);
    internal static DescribeMountTargetsRequestMarshaller GetInstance();
    public static DescribeMountTargetsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMountTargetsResponseUnmarshaller _instance;
    public static DescribeMountTargetsResponseUnmarshaller Instance { get; }
    private static DescribeMountTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMountTargetsResponseUnmarshaller GetInstance();
    public static DescribeMountTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeReplicationConfigurationsRequestMarshaller : object {
    private static DescribeReplicationConfigurationsRequestMarshaller _instance;
    public static DescribeReplicationConfigurationsRequestMarshaller Instance { get; }
    private static DescribeReplicationConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationConfigurationsRequest publicRequest);
    internal static DescribeReplicationConfigurationsRequestMarshaller GetInstance();
    public static DescribeReplicationConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeReplicationConfigurationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationConfigurationsResponseUnmarshaller _instance;
    public static DescribeReplicationConfigurationsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationConfigurationsResponseUnmarshaller GetInstance();
    public static DescribeReplicationConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller : object {
    private static DescribeTagsRequestMarshaller _instance;
    public static DescribeTagsRequestMarshaller Instance { get; }
    private static DescribeTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTagsRequest publicRequest);
    internal static DescribeTagsRequestMarshaller GetInstance();
    public static DescribeTagsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTagsResponseUnmarshaller _instance;
    public static DescribeTagsResponseUnmarshaller Instance { get; }
    private static DescribeTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTagsResponseUnmarshaller GetInstance();
    public static DescribeTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DestinationToCreateMarshaller : object {
    public static DestinationToCreateMarshaller Instance;
    private static DestinationToCreateMarshaller();
    public sealed virtual void Marshall(DestinationToCreate requestObject, JsonMarshallerContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DestinationUnmarshaller : object {
    private static DestinationUnmarshaller _instance;
    public static DestinationUnmarshaller Instance { get; }
    private static DestinationUnmarshaller();
    private sealed virtual override Destination Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.Destination,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Destination Unmarshall(JsonUnmarshallerContext context);
    public static DestinationUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemAlreadyExistsExceptionUnmarshaller : object {
    private static FileSystemAlreadyExistsExceptionUnmarshaller _instance;
    public static FileSystemAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static FileSystemAlreadyExistsExceptionUnmarshaller();
    public sealed virtual FileSystemAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FileSystemAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FileSystemAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller : object {
    private static FileSystemDescriptionUnmarshaller _instance;
    public static FileSystemDescriptionUnmarshaller Instance { get; }
    private static FileSystemDescriptionUnmarshaller();
    private sealed virtual override FileSystemDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.FileSystemDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileSystemDescription Unmarshall(JsonUnmarshallerContext context);
    public static FileSystemDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemInUseExceptionUnmarshaller : object {
    private static FileSystemInUseExceptionUnmarshaller _instance;
    public static FileSystemInUseExceptionUnmarshaller Instance { get; }
    private static FileSystemInUseExceptionUnmarshaller();
    public sealed virtual FileSystemInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FileSystemInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FileSystemInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemLimitExceededExceptionUnmarshaller : object {
    private static FileSystemLimitExceededExceptionUnmarshaller _instance;
    public static FileSystemLimitExceededExceptionUnmarshaller Instance { get; }
    private static FileSystemLimitExceededExceptionUnmarshaller();
    public sealed virtual FileSystemLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FileSystemLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FileSystemLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemNotFoundExceptionUnmarshaller : object {
    private static FileSystemNotFoundExceptionUnmarshaller _instance;
    public static FileSystemNotFoundExceptionUnmarshaller Instance { get; }
    private static FileSystemNotFoundExceptionUnmarshaller();
    public sealed virtual FileSystemNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FileSystemNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FileSystemNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemProtectionDescriptionUnmarshaller : object {
    private static FileSystemProtectionDescriptionUnmarshaller _instance;
    public static FileSystemProtectionDescriptionUnmarshaller Instance { get; }
    private static FileSystemProtectionDescriptionUnmarshaller();
    private sealed virtual override FileSystemProtectionDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.FileSystemProtectionDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileSystemProtectionDescription Unmarshall(JsonUnmarshallerContext context);
    public static FileSystemProtectionDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller : object {
    private static FileSystemSizeUnmarshaller _instance;
    public static FileSystemSizeUnmarshaller Instance { get; }
    private static FileSystemSizeUnmarshaller();
    private sealed virtual override FileSystemSize Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.FileSystemSize,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileSystemSize Unmarshall(JsonUnmarshallerContext context);
    public static FileSystemSizeUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.IncorrectFileSystemLifeCycleStateExceptionUnmarshaller : object {
    private static IncorrectFileSystemLifeCycleStateExceptionUnmarshaller _instance;
    public static IncorrectFileSystemLifeCycleStateExceptionUnmarshaller Instance { get; }
    private static IncorrectFileSystemLifeCycleStateExceptionUnmarshaller();
    public sealed virtual IncorrectFileSystemLifeCycleStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IncorrectFileSystemLifeCycleStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IncorrectFileSystemLifeCycleStateExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.IncorrectMountTargetStateExceptionUnmarshaller : object {
    private static IncorrectMountTargetStateExceptionUnmarshaller _instance;
    public static IncorrectMountTargetStateExceptionUnmarshaller Instance { get; }
    private static IncorrectMountTargetStateExceptionUnmarshaller();
    public sealed virtual IncorrectMountTargetStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IncorrectMountTargetStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IncorrectMountTargetStateExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.InsufficientThroughputCapacityExceptionUnmarshaller : object {
    private static InsufficientThroughputCapacityExceptionUnmarshaller _instance;
    public static InsufficientThroughputCapacityExceptionUnmarshaller Instance { get; }
    private static InsufficientThroughputCapacityExceptionUnmarshaller();
    public sealed virtual InsufficientThroughputCapacityException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientThroughputCapacityException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientThroughputCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller : object {
    private static InternalServerErrorExceptionUnmarshaller _instance;
    public static InternalServerErrorExceptionUnmarshaller Instance { get; }
    private static InternalServerErrorExceptionUnmarshaller();
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.InvalidPolicyExceptionUnmarshaller : object {
    private static InvalidPolicyExceptionUnmarshaller _instance;
    public static InvalidPolicyExceptionUnmarshaller Instance { get; }
    private static InvalidPolicyExceptionUnmarshaller();
    public sealed virtual InvalidPolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidPolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.IpAddressInUseExceptionUnmarshaller : object {
    private static IpAddressInUseExceptionUnmarshaller _instance;
    public static IpAddressInUseExceptionUnmarshaller Instance { get; }
    private static IpAddressInUseExceptionUnmarshaller();
    public sealed virtual IpAddressInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IpAddressInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IpAddressInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyMarshaller : object {
    public static LifecyclePolicyMarshaller Instance;
    private static LifecyclePolicyMarshaller();
    public sealed virtual void Marshall(LifecyclePolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyUnmarshaller : object {
    private static LifecyclePolicyUnmarshaller _instance;
    public static LifecyclePolicyUnmarshaller Instance { get; }
    private static LifecyclePolicyUnmarshaller();
    private sealed virtual override LifecyclePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.LifecyclePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecyclePolicy Unmarshall(JsonUnmarshallerContext context);
    public static LifecyclePolicyUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller : object {
    private static ModifyMountTargetSecurityGroupsRequestMarshaller _instance;
    public static ModifyMountTargetSecurityGroupsRequestMarshaller Instance { get; }
    private static ModifyMountTargetSecurityGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyMountTargetSecurityGroupsRequest publicRequest);
    internal static ModifyMountTargetSecurityGroupsRequestMarshaller GetInstance();
    public static ModifyMountTargetSecurityGroupsRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyMountTargetSecurityGroupsResponseUnmarshaller _instance;
    public static ModifyMountTargetSecurityGroupsResponseUnmarshaller Instance { get; }
    private static ModifyMountTargetSecurityGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyMountTargetSecurityGroupsResponseUnmarshaller GetInstance();
    public static ModifyMountTargetSecurityGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetConflictExceptionUnmarshaller : object {
    private static MountTargetConflictExceptionUnmarshaller _instance;
    public static MountTargetConflictExceptionUnmarshaller Instance { get; }
    private static MountTargetConflictExceptionUnmarshaller();
    public sealed virtual MountTargetConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MountTargetConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MountTargetConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller : object {
    private static MountTargetDescriptionUnmarshaller _instance;
    public static MountTargetDescriptionUnmarshaller Instance { get; }
    private static MountTargetDescriptionUnmarshaller();
    private sealed virtual override MountTargetDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.MountTargetDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MountTargetDescription Unmarshall(JsonUnmarshallerContext context);
    public static MountTargetDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetNotFoundExceptionUnmarshaller : object {
    private static MountTargetNotFoundExceptionUnmarshaller _instance;
    public static MountTargetNotFoundExceptionUnmarshaller Instance { get; }
    private static MountTargetNotFoundExceptionUnmarshaller();
    public sealed virtual MountTargetNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MountTargetNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MountTargetNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.NetworkInterfaceLimitExceededExceptionUnmarshaller : object {
    private static NetworkInterfaceLimitExceededExceptionUnmarshaller _instance;
    public static NetworkInterfaceLimitExceededExceptionUnmarshaller Instance { get; }
    private static NetworkInterfaceLimitExceededExceptionUnmarshaller();
    public sealed virtual NetworkInterfaceLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NetworkInterfaceLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NetworkInterfaceLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.NoFreeAddressesInSubnetExceptionUnmarshaller : object {
    private static NoFreeAddressesInSubnetExceptionUnmarshaller _instance;
    public static NoFreeAddressesInSubnetExceptionUnmarshaller Instance { get; }
    private static NoFreeAddressesInSubnetExceptionUnmarshaller();
    public sealed virtual NoFreeAddressesInSubnetException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NoFreeAddressesInSubnetException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoFreeAddressesInSubnetExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PolicyNotFoundExceptionUnmarshaller : object {
    private static PolicyNotFoundExceptionUnmarshaller _instance;
    public static PolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static PolicyNotFoundExceptionUnmarshaller();
    public sealed virtual PolicyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PosixUserMarshaller : object {
    public static PosixUserMarshaller Instance;
    private static PosixUserMarshaller();
    public sealed virtual void Marshall(PosixUser requestObject, JsonMarshallerContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PosixUserUnmarshaller : object {
    private static PosixUserUnmarshaller _instance;
    public static PosixUserUnmarshaller Instance { get; }
    private static PosixUserUnmarshaller();
    private sealed virtual override PosixUser Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.PosixUser,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PosixUser Unmarshall(JsonUnmarshallerContext context);
    public static PosixUserUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutAccountPreferencesRequestMarshaller : object {
    private static PutAccountPreferencesRequestMarshaller _instance;
    public static PutAccountPreferencesRequestMarshaller Instance { get; }
    private static PutAccountPreferencesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAccountPreferencesRequest publicRequest);
    internal static PutAccountPreferencesRequestMarshaller GetInstance();
    public static PutAccountPreferencesRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutAccountPreferencesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutAccountPreferencesResponseUnmarshaller _instance;
    public static PutAccountPreferencesResponseUnmarshaller Instance { get; }
    private static PutAccountPreferencesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAccountPreferencesResponseUnmarshaller GetInstance();
    public static PutAccountPreferencesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutBackupPolicyRequestMarshaller : object {
    private static PutBackupPolicyRequestMarshaller _instance;
    public static PutBackupPolicyRequestMarshaller Instance { get; }
    private static PutBackupPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBackupPolicyRequest publicRequest);
    internal static PutBackupPolicyRequestMarshaller GetInstance();
    public static PutBackupPolicyRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutBackupPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutBackupPolicyResponseUnmarshaller _instance;
    public static PutBackupPolicyResponseUnmarshaller Instance { get; }
    private static PutBackupPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutBackupPolicyResponseUnmarshaller GetInstance();
    public static PutBackupPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutFileSystemPolicyRequestMarshaller : object {
    private static PutFileSystemPolicyRequestMarshaller _instance;
    public static PutFileSystemPolicyRequestMarshaller Instance { get; }
    private static PutFileSystemPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutFileSystemPolicyRequest publicRequest);
    internal static PutFileSystemPolicyRequestMarshaller GetInstance();
    public static PutFileSystemPolicyRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutFileSystemPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutFileSystemPolicyResponseUnmarshaller _instance;
    public static PutFileSystemPolicyResponseUnmarshaller Instance { get; }
    private static PutFileSystemPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutFileSystemPolicyResponseUnmarshaller GetInstance();
    public static PutFileSystemPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller : object {
    private static PutLifecycleConfigurationRequestMarshaller _instance;
    public static PutLifecycleConfigurationRequestMarshaller Instance { get; }
    private static PutLifecycleConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutLifecycleConfigurationRequest publicRequest);
    internal static PutLifecycleConfigurationRequestMarshaller GetInstance();
    public static PutLifecycleConfigurationRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutLifecycleConfigurationResponseUnmarshaller _instance;
    public static PutLifecycleConfigurationResponseUnmarshaller Instance { get; }
    private static PutLifecycleConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutLifecycleConfigurationResponseUnmarshaller GetInstance();
    public static PutLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ReplicationAlreadyExistsExceptionUnmarshaller : object {
    private static ReplicationAlreadyExistsExceptionUnmarshaller _instance;
    public static ReplicationAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ReplicationAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ReplicationAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ReplicationAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReplicationAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ReplicationConfigurationDescriptionUnmarshaller : object {
    private static ReplicationConfigurationDescriptionUnmarshaller _instance;
    public static ReplicationConfigurationDescriptionUnmarshaller Instance { get; }
    private static ReplicationConfigurationDescriptionUnmarshaller();
    private sealed virtual override ReplicationConfigurationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.ReplicationConfigurationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationConfigurationDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationConfigurationDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ReplicationNotFoundExceptionUnmarshaller : object {
    private static ReplicationNotFoundExceptionUnmarshaller _instance;
    public static ReplicationNotFoundExceptionUnmarshaller Instance { get; }
    private static ReplicationNotFoundExceptionUnmarshaller();
    public sealed virtual ReplicationNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ReplicationNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReplicationNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ResourceIdPreferenceUnmarshaller : object {
    private static ResourceIdPreferenceUnmarshaller _instance;
    public static ResourceIdPreferenceUnmarshaller Instance { get; }
    private static ResourceIdPreferenceUnmarshaller();
    private sealed virtual override ResourceIdPreference Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.ResourceIdPreference,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceIdPreference Unmarshall(JsonUnmarshallerContext context);
    public static ResourceIdPreferenceUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.RootDirectoryMarshaller : object {
    public static RootDirectoryMarshaller Instance;
    private static RootDirectoryMarshaller();
    public sealed virtual void Marshall(RootDirectory requestObject, JsonMarshallerContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.RootDirectoryUnmarshaller : object {
    private static RootDirectoryUnmarshaller _instance;
    public static RootDirectoryUnmarshaller Instance { get; }
    private static RootDirectoryUnmarshaller();
    private sealed virtual override RootDirectory Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.RootDirectory,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RootDirectory Unmarshall(JsonUnmarshallerContext context);
    public static RootDirectoryUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.SecurityGroupLimitExceededExceptionUnmarshaller : object {
    private static SecurityGroupLimitExceededExceptionUnmarshaller _instance;
    public static SecurityGroupLimitExceededExceptionUnmarshaller Instance { get; }
    private static SecurityGroupLimitExceededExceptionUnmarshaller();
    public sealed virtual SecurityGroupLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SecurityGroupLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SecurityGroupLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.SecurityGroupNotFoundExceptionUnmarshaller : object {
    private static SecurityGroupNotFoundExceptionUnmarshaller _instance;
    public static SecurityGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static SecurityGroupNotFoundExceptionUnmarshaller();
    public sealed virtual SecurityGroupNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SecurityGroupNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SecurityGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.SubnetNotFoundExceptionUnmarshaller : object {
    private static SubnetNotFoundExceptionUnmarshaller _instance;
    public static SubnetNotFoundExceptionUnmarshaller Instance { get; }
    private static SubnetNotFoundExceptionUnmarshaller();
    public sealed virtual SubnetNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SubnetNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubnetNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ElasticFileSystem.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller : object {
    private static ThrottlingExceptionUnmarshaller _instance;
    public static ThrottlingExceptionUnmarshaller Instance { get; }
    private static ThrottlingExceptionUnmarshaller();
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ThroughputLimitExceededExceptionUnmarshaller : object {
    private static ThroughputLimitExceededExceptionUnmarshaller _instance;
    public static ThroughputLimitExceededExceptionUnmarshaller Instance { get; }
    private static ThroughputLimitExceededExceptionUnmarshaller();
    public sealed virtual ThroughputLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThroughputLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThroughputLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UnsupportedAvailabilityZoneExceptionUnmarshaller : object {
    private static UnsupportedAvailabilityZoneExceptionUnmarshaller _instance;
    public static UnsupportedAvailabilityZoneExceptionUnmarshaller Instance { get; }
    private static UnsupportedAvailabilityZoneExceptionUnmarshaller();
    public sealed virtual UnsupportedAvailabilityZoneException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedAvailabilityZoneException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedAvailabilityZoneExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemProtectionRequestMarshaller : object {
    private static UpdateFileSystemProtectionRequestMarshaller _instance;
    public static UpdateFileSystemProtectionRequestMarshaller Instance { get; }
    private static UpdateFileSystemProtectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFileSystemProtectionRequest publicRequest);
    internal static UpdateFileSystemProtectionRequestMarshaller GetInstance();
    public static UpdateFileSystemProtectionRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemProtectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFileSystemProtectionResponseUnmarshaller _instance;
    public static UpdateFileSystemProtectionResponseUnmarshaller Instance { get; }
    private static UpdateFileSystemProtectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFileSystemProtectionResponseUnmarshaller GetInstance();
    public static UpdateFileSystemProtectionResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemRequestMarshaller : object {
    private static UpdateFileSystemRequestMarshaller _instance;
    public static UpdateFileSystemRequestMarshaller Instance { get; }
    private static UpdateFileSystemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFileSystemRequest publicRequest);
    internal static UpdateFileSystemRequestMarshaller GetInstance();
    public static UpdateFileSystemRequestMarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFileSystemResponseUnmarshaller _instance;
    public static UpdateFileSystemResponseUnmarshaller Instance { get; }
    private static UpdateFileSystemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFileSystemResponseUnmarshaller GetInstance();
    public static UpdateFileSystemResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller : object {
    private static ValidationExceptionUnmarshaller _instance;
    public static ValidationExceptionUnmarshaller Instance { get; }
    private static ValidationExceptionUnmarshaller();
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ValidationExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticFileSystem.Model.InternalServerErrorException : AmazonElasticFileSystemException {
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InternalServerErrorException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.InvalidPolicyException : AmazonElasticFileSystemException {
    public InvalidPolicyException(string message);
    public InvalidPolicyException(string message, Exception innerException);
    public InvalidPolicyException(Exception innerException);
    public InvalidPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidPolicyException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.IpAddressInUseException : AmazonElasticFileSystemException {
    public IpAddressInUseException(string message);
    public IpAddressInUseException(string message, Exception innerException);
    public IpAddressInUseException(Exception innerException);
    public IpAddressInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IpAddressInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected IpAddressInUseException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.LifecyclePolicy : object {
    private TransitionToArchiveRules _transitionToArchive;
    private TransitionToIARules _transitionToIA;
    private TransitionToPrimaryStorageClassRules _transitionToPrimaryStorageClass;
    public TransitionToArchiveRules TransitionToArchive { get; public set; }
    public TransitionToIARules TransitionToIA { get; public set; }
    public TransitionToPrimaryStorageClassRules TransitionToPrimaryStorageClass { get; public set; }
    public TransitionToArchiveRules get_TransitionToArchive();
    public void set_TransitionToArchive(TransitionToArchiveRules value);
    internal bool IsSetTransitionToArchive();
    public TransitionToIARules get_TransitionToIA();
    public void set_TransitionToIA(TransitionToIARules value);
    internal bool IsSetTransitionToIA();
    public TransitionToPrimaryStorageClassRules get_TransitionToPrimaryStorageClass();
    public void set_TransitionToPrimaryStorageClass(TransitionToPrimaryStorageClassRules value);
    internal bool IsSetTransitionToPrimaryStorageClass();
}
internal class Amazon.ElasticFileSystem.Model.ListTagsForResourcePaginator : object {
    private IAmazonElasticFileSystem _client;
    private ListTagsForResourceRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    internal ListTagsForResourcePaginator(IAmazonElasticFileSystem client, ListTagsForResourceRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.ElasticFileSystem.Model.ListTagsForResourcePaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticFileSystem-Model-ListTagsForResourceResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListTagsForResourceResponse> Amazon.Runtime.IPaginator<Amazon.ElasticFileSystem.Model.ListTagsForResourceResponse>.Paginate();
}
public class Amazon.ElasticFileSystem.Model.ListTagsForResourceRequest : AmazonElasticFileSystemRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _resourceId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
}
public class Amazon.ElasticFileSystem.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest : AmazonElasticFileSystemRequest {
    private string _mountTargetId;
    private List`1<string> _securityGroups;
    [AWSPropertyAttribute]
public string MountTargetId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroups { get; public set; }
    public string get_MountTargetId();
    public void set_MountTargetId(string value);
    internal bool IsSetMountTargetId();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.MountTargetConflictException : AmazonElasticFileSystemException {
    public MountTargetConflictException(string message);
    public MountTargetConflictException(string message, Exception innerException);
    public MountTargetConflictException(Exception innerException);
    public MountTargetConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MountTargetConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected MountTargetConflictException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.MountTargetDescription : object {
    private string _availabilityZoneId;
    private string _availabilityZoneName;
    private string _fileSystemId;
    private string _ipAddress;
    private LifeCycleState _lifeCycleState;
    private string _mountTargetId;
    private string _networkInterfaceId;
    private string _ownerId;
    private string _subnetId;
    private string _vpcId;
    public string AvailabilityZoneId { get; public set; }
    [AWSPropertyAttribute]
public string AvailabilityZoneName { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string IpAddress { get; public set; }
    [AWSPropertyAttribute]
public LifeCycleState LifeCycleState { get; public set; }
    [AWSPropertyAttribute]
public string MountTargetId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public string OwnerId { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public string VpcId { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_AvailabilityZoneName();
    public void set_AvailabilityZoneName(string value);
    internal bool IsSetAvailabilityZoneName();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public LifeCycleState get_LifeCycleState();
    public void set_LifeCycleState(LifeCycleState value);
    internal bool IsSetLifeCycleState();
    public string get_MountTargetId();
    public void set_MountTargetId(string value);
    internal bool IsSetMountTargetId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.ElasticFileSystem.Model.MountTargetNotFoundException : AmazonElasticFileSystemException {
    public MountTargetNotFoundException(string message);
    public MountTargetNotFoundException(string message, Exception innerException);
    public MountTargetNotFoundException(Exception innerException);
    public MountTargetNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MountTargetNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected MountTargetNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException : AmazonElasticFileSystemException {
    public NetworkInterfaceLimitExceededException(string message);
    public NetworkInterfaceLimitExceededException(string message, Exception innerException);
    public NetworkInterfaceLimitExceededException(Exception innerException);
    public NetworkInterfaceLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NetworkInterfaceLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected NetworkInterfaceLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException : AmazonElasticFileSystemException {
    public NoFreeAddressesInSubnetException(string message);
    public NoFreeAddressesInSubnetException(string message, Exception innerException);
    public NoFreeAddressesInSubnetException(Exception innerException);
    public NoFreeAddressesInSubnetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoFreeAddressesInSubnetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected NoFreeAddressesInSubnetException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.PolicyNotFoundException : AmazonElasticFileSystemException {
    public PolicyNotFoundException(string message);
    public PolicyNotFoundException(string message, Exception innerException);
    public PolicyNotFoundException(Exception innerException);
    public PolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected PolicyNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.PosixUser : object {
    private Nullable`1<long> _gid;
    private List`1<long> _secondaryGids;
    private Nullable`1<long> _uid;
    [AWSPropertyAttribute]
public Nullable`1<long> Gid { get; public set; }
    [AWSPropertyAttribute]
public List`1<long> SecondaryGids { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Uid { get; public set; }
    public Nullable`1<long> get_Gid();
    public void set_Gid(Nullable`1<long> value);
    internal bool IsSetGid();
    public List`1<long> get_SecondaryGids();
    public void set_SecondaryGids(List`1<long> value);
    internal bool IsSetSecondaryGids();
    public Nullable`1<long> get_Uid();
    public void set_Uid(Nullable`1<long> value);
    internal bool IsSetUid();
}
public class Amazon.ElasticFileSystem.Model.PutAccountPreferencesRequest : AmazonElasticFileSystemRequest {
    private ResourceIdType _resourceIdType;
    [AWSPropertyAttribute]
public ResourceIdType ResourceIdType { get; public set; }
    public ResourceIdType get_ResourceIdType();
    public void set_ResourceIdType(ResourceIdType value);
    internal bool IsSetResourceIdType();
}
public class Amazon.ElasticFileSystem.Model.PutAccountPreferencesResponse : AmazonWebServiceResponse {
    private ResourceIdPreference _resourceIdPreference;
    public ResourceIdPreference ResourceIdPreference { get; public set; }
    public ResourceIdPreference get_ResourceIdPreference();
    public void set_ResourceIdPreference(ResourceIdPreference value);
    internal bool IsSetResourceIdPreference();
}
public class Amazon.ElasticFileSystem.Model.PutBackupPolicyRequest : AmazonElasticFileSystemRequest {
    private BackupPolicy _backupPolicy;
    private string _fileSystemId;
    [AWSPropertyAttribute]
public BackupPolicy BackupPolicy { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public BackupPolicy get_BackupPolicy();
    public void set_BackupPolicy(BackupPolicy value);
    internal bool IsSetBackupPolicy();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
}
public class Amazon.ElasticFileSystem.Model.PutBackupPolicyResponse : AmazonWebServiceResponse {
    private BackupPolicy _backupPolicy;
    public BackupPolicy BackupPolicy { get; public set; }
    public BackupPolicy get_BackupPolicy();
    public void set_BackupPolicy(BackupPolicy value);
    internal bool IsSetBackupPolicy();
}
public class Amazon.ElasticFileSystem.Model.PutFileSystemPolicyRequest : AmazonElasticFileSystemRequest {
    private Nullable`1<bool> _bypassPolicyLockoutSafetyCheck;
    private string _fileSystemId;
    private string _policy;
    public Nullable`1<bool> BypassPolicyLockoutSafetyCheck { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public Nullable`1<bool> get_BypassPolicyLockoutSafetyCheck();
    public void set_BypassPolicyLockoutSafetyCheck(Nullable`1<bool> value);
    internal bool IsSetBypassPolicyLockoutSafetyCheck();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.ElasticFileSystem.Model.PutFileSystemPolicyResponse : AmazonWebServiceResponse {
    private string _fileSystemId;
    private string _policy;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private List`1<LifecyclePolicy> _lifecyclePolicies;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public List`1<LifecyclePolicy> LifecyclePolicies { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public List`1<LifecyclePolicy> get_LifecyclePolicies();
    public void set_LifecyclePolicies(List`1<LifecyclePolicy> value);
    internal bool IsSetLifecyclePolicies();
}
public class Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationResponse : AmazonWebServiceResponse {
    private List`1<LifecyclePolicy> _lifecyclePolicies;
    [AWSPropertyAttribute]
public List`1<LifecyclePolicy> LifecyclePolicies { get; public set; }
    public List`1<LifecyclePolicy> get_LifecyclePolicies();
    public void set_LifecyclePolicies(List`1<LifecyclePolicy> value);
    internal bool IsSetLifecyclePolicies();
}
public class Amazon.ElasticFileSystem.Model.ReplicationAlreadyExistsException : AmazonElasticFileSystemException {
    public ReplicationAlreadyExistsException(string message);
    public ReplicationAlreadyExistsException(string message, Exception innerException);
    public ReplicationAlreadyExistsException(Exception innerException);
    public ReplicationAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReplicationAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ReplicationAlreadyExistsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.ReplicationConfigurationDescription : object {
    private Nullable`1<DateTime> _creationTime;
    private List`1<Destination> _destinations;
    private string _originalSourceFileSystemArn;
    private string _sourceFileSystemArn;
    private string _sourceFileSystemId;
    private string _sourceFileSystemRegion;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Destination> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string OriginalSourceFileSystemArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceFileSystemArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceFileSystemId { get; public set; }
    [AWSPropertyAttribute]
public string SourceFileSystemRegion { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public string get_OriginalSourceFileSystemArn();
    public void set_OriginalSourceFileSystemArn(string value);
    internal bool IsSetOriginalSourceFileSystemArn();
    public string get_SourceFileSystemArn();
    public void set_SourceFileSystemArn(string value);
    internal bool IsSetSourceFileSystemArn();
    public string get_SourceFileSystemId();
    public void set_SourceFileSystemId(string value);
    internal bool IsSetSourceFileSystemId();
    public string get_SourceFileSystemRegion();
    public void set_SourceFileSystemRegion(string value);
    internal bool IsSetSourceFileSystemRegion();
}
public class Amazon.ElasticFileSystem.Model.ReplicationNotFoundException : AmazonElasticFileSystemException {
    public ReplicationNotFoundException(string message);
    public ReplicationNotFoundException(string message, Exception innerException);
    public ReplicationNotFoundException(Exception innerException);
    public ReplicationNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReplicationNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ReplicationNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.ResourceIdPreference : object {
    private ResourceIdType _resourceIdType;
    private List`1<string> _resources;
    public ResourceIdType ResourceIdType { get; public set; }
    public List`1<string> Resources { get; public set; }
    public ResourceIdType get_ResourceIdType();
    public void set_ResourceIdType(ResourceIdType value);
    internal bool IsSetResourceIdType();
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
}
public class Amazon.ElasticFileSystem.Model.RootDirectory : object {
    private CreationInfo _creationInfo;
    private string _path;
    public CreationInfo CreationInfo { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    public CreationInfo get_CreationInfo();
    public void set_CreationInfo(CreationInfo value);
    internal bool IsSetCreationInfo();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
}
public class Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException : AmazonElasticFileSystemException {
    public SecurityGroupLimitExceededException(string message);
    public SecurityGroupLimitExceededException(string message, Exception innerException);
    public SecurityGroupLimitExceededException(Exception innerException);
    public SecurityGroupLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SecurityGroupLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected SecurityGroupLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException : AmazonElasticFileSystemException {
    public SecurityGroupNotFoundException(string message);
    public SecurityGroupNotFoundException(string message, Exception innerException);
    public SecurityGroupNotFoundException(Exception innerException);
    public SecurityGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SecurityGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected SecurityGroupNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.SubnetNotFoundException : AmazonElasticFileSystemException {
    public SubnetNotFoundException(string message);
    public SubnetNotFoundException(string message, Exception innerException);
    public SubnetNotFoundException(Exception innerException);
    public SubnetNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubnetNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected SubnetNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ElasticFileSystem.Model.TagResourceRequest : AmazonElasticFileSystemRequest {
    private string _resourceId;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticFileSystem.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.ThrottlingException : AmazonElasticFileSystemException {
    public ThrottlingException(string message);
    public ThrottlingException(string message, Exception innerException);
    public ThrottlingException(Exception innerException);
    public ThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ThrottlingException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException : AmazonElasticFileSystemException {
    public ThroughputLimitExceededException(string message);
    public ThroughputLimitExceededException(string message, Exception innerException);
    public ThroughputLimitExceededException(Exception innerException);
    public ThroughputLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThroughputLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ThroughputLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.TooManyRequestsException : AmazonElasticFileSystemException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TooManyRequestsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException : AmazonElasticFileSystemException {
    public UnsupportedAvailabilityZoneException(string message);
    public UnsupportedAvailabilityZoneException(string message, Exception innerException);
    public UnsupportedAvailabilityZoneException(Exception innerException);
    public UnsupportedAvailabilityZoneException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedAvailabilityZoneException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected UnsupportedAvailabilityZoneException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.Model.UntagResourceRequest : AmazonElasticFileSystemRequest {
    private string _resourceId;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.ElasticFileSystem.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticFileSystem.Model.UpdateFileSystemProtectionRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private ReplicationOverwriteProtection _replicationOverwriteProtection;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public ReplicationOverwriteProtection ReplicationOverwriteProtection { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public ReplicationOverwriteProtection get_ReplicationOverwriteProtection();
    public void set_ReplicationOverwriteProtection(ReplicationOverwriteProtection value);
    internal bool IsSetReplicationOverwriteProtection();
}
public class Amazon.ElasticFileSystem.Model.UpdateFileSystemProtectionResponse : AmazonWebServiceResponse {
    private ReplicationOverwriteProtection _replicationOverwriteProtection;
    public ReplicationOverwriteProtection ReplicationOverwriteProtection { get; public set; }
    public ReplicationOverwriteProtection get_ReplicationOverwriteProtection();
    public void set_ReplicationOverwriteProtection(ReplicationOverwriteProtection value);
    internal bool IsSetReplicationOverwriteProtection();
}
public class Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest : AmazonElasticFileSystemRequest {
    private string _fileSystemId;
    private Nullable`1<double> _provisionedThroughputInMibps;
    private ThroughputMode _throughputMode;
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> ProvisionedThroughputInMibps { get; public set; }
    public ThroughputMode ThroughputMode { get; public set; }
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public Nullable`1<double> get_ProvisionedThroughputInMibps();
    public void set_ProvisionedThroughputInMibps(Nullable`1<double> value);
    internal bool IsSetProvisionedThroughputInMibps();
    public ThroughputMode get_ThroughputMode();
    public void set_ThroughputMode(ThroughputMode value);
    internal bool IsSetThroughputMode();
}
public class Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse : AmazonWebServiceResponse {
    private string _availabilityZoneId;
    private string _availabilityZoneName;
    private Nullable`1<DateTime> _creationTime;
    private string _creationToken;
    private Nullable`1<bool> _encrypted;
    private string _fileSystemArn;
    private string _fileSystemId;
    private FileSystemProtectionDescription _fileSystemProtection;
    private string _kmsKeyId;
    private LifeCycleState _lifeCycleState;
    private string _name;
    private Nullable`1<int> _numberOfMountTargets;
    private string _ownerId;
    private PerformanceMode _performanceMode;
    private Nullable`1<double> _provisionedThroughputInMibps;
    private FileSystemSize _sizeInBytes;
    private List`1<Tag> _tags;
    private ThroughputMode _throughputMode;
    public string AvailabilityZoneId { get; public set; }
    [AWSPropertyAttribute]
public string AvailabilityZoneName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string CreationToken { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string FileSystemArn { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemId { get; public set; }
    public FileSystemProtectionDescription FileSystemProtection { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public LifeCycleState LifeCycleState { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumberOfMountTargets { get; public set; }
    [AWSPropertyAttribute]
public string OwnerId { get; public set; }
    [AWSPropertyAttribute]
public PerformanceMode PerformanceMode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> ProvisionedThroughputInMibps { get; public set; }
    [AWSPropertyAttribute]
public FileSystemSize SizeInBytes { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public ThroughputMode ThroughputMode { get; public set; }
    public string get_AvailabilityZoneId();
    public void set_AvailabilityZoneId(string value);
    internal bool IsSetAvailabilityZoneId();
    public string get_AvailabilityZoneName();
    public void set_AvailabilityZoneName(string value);
    internal bool IsSetAvailabilityZoneName();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CreationToken();
    public void set_CreationToken(string value);
    internal bool IsSetCreationToken();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_FileSystemArn();
    public void set_FileSystemArn(string value);
    internal bool IsSetFileSystemArn();
    public string get_FileSystemId();
    public void set_FileSystemId(string value);
    internal bool IsSetFileSystemId();
    public FileSystemProtectionDescription get_FileSystemProtection();
    public void set_FileSystemProtection(FileSystemProtectionDescription value);
    internal bool IsSetFileSystemProtection();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public LifeCycleState get_LifeCycleState();
    public void set_LifeCycleState(LifeCycleState value);
    internal bool IsSetLifeCycleState();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfMountTargets();
    public void set_NumberOfMountTargets(Nullable`1<int> value);
    internal bool IsSetNumberOfMountTargets();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PerformanceMode get_PerformanceMode();
    public void set_PerformanceMode(PerformanceMode value);
    internal bool IsSetPerformanceMode();
    public Nullable`1<double> get_ProvisionedThroughputInMibps();
    public void set_ProvisionedThroughputInMibps(Nullable`1<double> value);
    internal bool IsSetProvisionedThroughputInMibps();
    public FileSystemSize get_SizeInBytes();
    public void set_SizeInBytes(FileSystemSize value);
    internal bool IsSetSizeInBytes();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public ThroughputMode get_ThroughputMode();
    public void set_ThroughputMode(ThroughputMode value);
    internal bool IsSetThroughputMode();
}
public class Amazon.ElasticFileSystem.Model.ValidationException : AmazonElasticFileSystemException {
    public ValidationException(string message);
    public ValidationException(string message, Exception innerException);
    public ValidationException(Exception innerException);
    public ValidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ValidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ValidationException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ElasticFileSystem.PerformanceMode : ConstantClass {
    public static PerformanceMode GeneralPurpose;
    public static PerformanceMode MaxIO;
    public PerformanceMode(string value);
    private static PerformanceMode();
    public static PerformanceMode FindValue(string value);
    public static PerformanceMode op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.ReplicationOverwriteProtection : ConstantClass {
    public static ReplicationOverwriteProtection DISABLED;
    public static ReplicationOverwriteProtection ENABLED;
    public static ReplicationOverwriteProtection REPLICATING;
    public ReplicationOverwriteProtection(string value);
    private static ReplicationOverwriteProtection();
    public static ReplicationOverwriteProtection FindValue(string value);
    public static ReplicationOverwriteProtection op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.ReplicationStatus : ConstantClass {
    public static ReplicationStatus DELETING;
    public static ReplicationStatus ENABLED;
    public static ReplicationStatus ENABLING;
    public static ReplicationStatus ERROR;
    public static ReplicationStatus PAUSED;
    public static ReplicationStatus PAUSING;
    public ReplicationStatus(string value);
    private static ReplicationStatus();
    public static ReplicationStatus FindValue(string value);
    public static ReplicationStatus op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.Resource : ConstantClass {
    public static Resource FILE_SYSTEM;
    public static Resource MOUNT_TARGET;
    public Resource(string value);
    private static Resource();
    public static Resource FindValue(string value);
    public static Resource op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.ResourceIdType : ConstantClass {
    public static ResourceIdType LONG_ID;
    public static ResourceIdType SHORT_ID;
    public ResourceIdType(string value);
    private static ResourceIdType();
    public static ResourceIdType FindValue(string value);
    public static ResourceIdType op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.Status : ConstantClass {
    public static Status DISABLED;
    public static Status DISABLING;
    public static Status ENABLED;
    public static Status ENABLING;
    public Status(string value);
    private static Status();
    public static Status FindValue(string value);
    public static Status op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.ThroughputMode : ConstantClass {
    public static ThroughputMode Bursting;
    public static ThroughputMode Elastic;
    public static ThroughputMode Provisioned;
    public ThroughputMode(string value);
    private static ThroughputMode();
    public static ThroughputMode FindValue(string value);
    public static ThroughputMode op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.TransitionToArchiveRules : ConstantClass {
    public static TransitionToArchiveRules AFTER_1_DAY;
    public static TransitionToArchiveRules AFTER_14_DAYS;
    public static TransitionToArchiveRules AFTER_180_DAYS;
    public static TransitionToArchiveRules AFTER_270_DAYS;
    public static TransitionToArchiveRules AFTER_30_DAYS;
    public static TransitionToArchiveRules AFTER_365_DAYS;
    public static TransitionToArchiveRules AFTER_60_DAYS;
    public static TransitionToArchiveRules AFTER_7_DAYS;
    public static TransitionToArchiveRules AFTER_90_DAYS;
    public TransitionToArchiveRules(string value);
    private static TransitionToArchiveRules();
    public static TransitionToArchiveRules FindValue(string value);
    public static TransitionToArchiveRules op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.TransitionToIARules : ConstantClass {
    public static TransitionToIARules AFTER_1_DAY;
    public static TransitionToIARules AFTER_14_DAYS;
    public static TransitionToIARules AFTER_180_DAYS;
    public static TransitionToIARules AFTER_270_DAYS;
    public static TransitionToIARules AFTER_30_DAYS;
    public static TransitionToIARules AFTER_365_DAYS;
    public static TransitionToIARules AFTER_60_DAYS;
    public static TransitionToIARules AFTER_7_DAYS;
    public static TransitionToIARules AFTER_90_DAYS;
    public TransitionToIARules(string value);
    private static TransitionToIARules();
    public static TransitionToIARules FindValue(string value);
    public static TransitionToIARules op_Implicit(string value);
}
public class Amazon.ElasticFileSystem.TransitionToPrimaryStorageClassRules : ConstantClass {
    public static TransitionToPrimaryStorageClassRules AFTER_1_ACCESS;
    public TransitionToPrimaryStorageClassRules(string value);
    private static TransitionToPrimaryStorageClassRules();
    public static TransitionToPrimaryStorageClassRules FindValue(string value);
    public static TransitionToPrimaryStorageClassRules op_Implicit(string value);
}
