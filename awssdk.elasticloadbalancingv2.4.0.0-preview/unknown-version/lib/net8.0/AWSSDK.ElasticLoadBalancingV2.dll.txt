public class Amazon.ElasticLoadBalancingV2.ActionTypeEnum : ConstantClass {
    public static ActionTypeEnum AuthenticateCognito;
    public static ActionTypeEnum AuthenticateOidc;
    public static ActionTypeEnum FixedResponse;
    public static ActionTypeEnum Forward;
    public static ActionTypeEnum Redirect;
    public ActionTypeEnum(string value);
    private static ActionTypeEnum();
    public static ActionTypeEnum FindValue(string value);
    public static ActionTypeEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.AmazonElasticLoadBalancingV2Client : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IElasticLoadBalancingV2PaginatorFactory _paginators;
    public IElasticLoadBalancingV2PaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonElasticLoadBalancingV2Client(RegionEndpoint region);
    public AmazonElasticLoadBalancingV2Client(AmazonElasticLoadBalancingV2Config config);
    public AmazonElasticLoadBalancingV2Client(AWSCredentials credentials);
    public AmazonElasticLoadBalancingV2Client(AWSCredentials credentials, RegionEndpoint region);
    public AmazonElasticLoadBalancingV2Client(AWSCredentials credentials, AmazonElasticLoadBalancingV2Config clientConfig);
    public AmazonElasticLoadBalancingV2Client(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonElasticLoadBalancingV2Client(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonElasticLoadBalancingV2Client(string awsAccessKeyId, string awsSecretAccessKey, AmazonElasticLoadBalancingV2Config clientConfig);
    public AmazonElasticLoadBalancingV2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonElasticLoadBalancingV2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonElasticLoadBalancingV2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonElasticLoadBalancingV2Config clientConfig);
    private static AmazonElasticLoadBalancingV2Client();
    public sealed virtual IElasticLoadBalancingV2PaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddListenerCertificatesResponse AddListenerCertificates(AddListenerCertificatesRequest request);
    public virtual Task`1<AddListenerCertificatesResponse> AddListenerCertificatesAsync(AddListenerCertificatesRequest request, CancellationToken cancellationToken);
    internal virtual AddTagsResponse AddTags(AddTagsRequest request);
    public virtual Task`1<AddTagsResponse> AddTagsAsync(AddTagsRequest request, CancellationToken cancellationToken);
    internal virtual AddTrustStoreRevocationsResponse AddTrustStoreRevocations(AddTrustStoreRevocationsRequest request);
    public virtual Task`1<AddTrustStoreRevocationsResponse> AddTrustStoreRevocationsAsync(AddTrustStoreRevocationsRequest request, CancellationToken cancellationToken);
    internal virtual CreateListenerResponse CreateListener(CreateListenerRequest request);
    public virtual Task`1<CreateListenerResponse> CreateListenerAsync(CreateListenerRequest request, CancellationToken cancellationToken);
    internal virtual CreateLoadBalancerResponse CreateLoadBalancer(CreateLoadBalancerRequest request);
    public virtual Task`1<CreateLoadBalancerResponse> CreateLoadBalancerAsync(CreateLoadBalancerRequest request, CancellationToken cancellationToken);
    internal virtual CreateRuleResponse CreateRule(CreateRuleRequest request);
    public virtual Task`1<CreateRuleResponse> CreateRuleAsync(CreateRuleRequest request, CancellationToken cancellationToken);
    internal virtual CreateTargetGroupResponse CreateTargetGroup(CreateTargetGroupRequest request);
    public virtual Task`1<CreateTargetGroupResponse> CreateTargetGroupAsync(CreateTargetGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateTrustStoreResponse CreateTrustStore(CreateTrustStoreRequest request);
    public virtual Task`1<CreateTrustStoreResponse> CreateTrustStoreAsync(CreateTrustStoreRequest request, CancellationToken cancellationToken);
    internal virtual DeleteListenerResponse DeleteListener(DeleteListenerRequest request);
    public virtual Task`1<DeleteListenerResponse> DeleteListenerAsync(DeleteListenerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLoadBalancerResponse DeleteLoadBalancer(DeleteLoadBalancerRequest request);
    public virtual Task`1<DeleteLoadBalancerResponse> DeleteLoadBalancerAsync(DeleteLoadBalancerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteRuleResponse DeleteRule(DeleteRuleRequest request);
    public virtual Task`1<DeleteRuleResponse> DeleteRuleAsync(DeleteRuleRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSharedTrustStoreAssociationResponse DeleteSharedTrustStoreAssociation(DeleteSharedTrustStoreAssociationRequest request);
    public virtual Task`1<DeleteSharedTrustStoreAssociationResponse> DeleteSharedTrustStoreAssociationAsync(DeleteSharedTrustStoreAssociationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTargetGroupResponse DeleteTargetGroup(DeleteTargetGroupRequest request);
    public virtual Task`1<DeleteTargetGroupResponse> DeleteTargetGroupAsync(DeleteTargetGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTrustStoreResponse DeleteTrustStore(DeleteTrustStoreRequest request);
    public virtual Task`1<DeleteTrustStoreResponse> DeleteTrustStoreAsync(DeleteTrustStoreRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterTargetsResponse DeregisterTargets(DeregisterTargetsRequest request);
    public virtual Task`1<DeregisterTargetsResponse> DeregisterTargetsAsync(DeregisterTargetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAccountLimitsResponse DescribeAccountLimits(DescribeAccountLimitsRequest request);
    public virtual Task`1<DescribeAccountLimitsResponse> DescribeAccountLimitsAsync(DescribeAccountLimitsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeListenerCertificatesResponse DescribeListenerCertificates(DescribeListenerCertificatesRequest request);
    public virtual Task`1<DescribeListenerCertificatesResponse> DescribeListenerCertificatesAsync(DescribeListenerCertificatesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeListenersResponse DescribeListeners(DescribeListenersRequest request);
    public virtual Task`1<DescribeListenersResponse> DescribeListenersAsync(DescribeListenersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLoadBalancerAttributesResponse DescribeLoadBalancerAttributes(DescribeLoadBalancerAttributesRequest request);
    public virtual Task`1<DescribeLoadBalancerAttributesResponse> DescribeLoadBalancerAttributesAsync(DescribeLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLoadBalancersResponse DescribeLoadBalancers(DescribeLoadBalancersRequest request);
    public virtual Task`1<DescribeLoadBalancersResponse> DescribeLoadBalancersAsync(DescribeLoadBalancersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRulesResponse DescribeRules(DescribeRulesRequest request);
    public virtual Task`1<DescribeRulesResponse> DescribeRulesAsync(DescribeRulesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSSLPoliciesResponse DescribeSSLPolicies(DescribeSSLPoliciesRequest request);
    public virtual Task`1<DescribeSSLPoliciesResponse> DescribeSSLPoliciesAsync(DescribeSSLPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTagsResponse DescribeTags(DescribeTagsRequest request);
    public virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTargetGroupAttributesResponse DescribeTargetGroupAttributes(DescribeTargetGroupAttributesRequest request);
    public virtual Task`1<DescribeTargetGroupAttributesResponse> DescribeTargetGroupAttributesAsync(DescribeTargetGroupAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTargetGroupsResponse DescribeTargetGroups(DescribeTargetGroupsRequest request);
    public virtual Task`1<DescribeTargetGroupsResponse> DescribeTargetGroupsAsync(DescribeTargetGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTargetHealthResponse DescribeTargetHealth(DescribeTargetHealthRequest request);
    public virtual Task`1<DescribeTargetHealthResponse> DescribeTargetHealthAsync(DescribeTargetHealthRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrustStoreAssociationsResponse DescribeTrustStoreAssociations(DescribeTrustStoreAssociationsRequest request);
    public virtual Task`1<DescribeTrustStoreAssociationsResponse> DescribeTrustStoreAssociationsAsync(DescribeTrustStoreAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrustStoreRevocationsResponse DescribeTrustStoreRevocations(DescribeTrustStoreRevocationsRequest request);
    public virtual Task`1<DescribeTrustStoreRevocationsResponse> DescribeTrustStoreRevocationsAsync(DescribeTrustStoreRevocationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrustStoresResponse DescribeTrustStores(DescribeTrustStoresRequest request);
    public virtual Task`1<DescribeTrustStoresResponse> DescribeTrustStoresAsync(DescribeTrustStoresRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePolicyResponse GetResourcePolicy(GetResourcePolicyRequest request);
    public virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetTrustStoreCaCertificatesBundleResponse GetTrustStoreCaCertificatesBundle(GetTrustStoreCaCertificatesBundleRequest request);
    public virtual Task`1<GetTrustStoreCaCertificatesBundleResponse> GetTrustStoreCaCertificatesBundleAsync(GetTrustStoreCaCertificatesBundleRequest request, CancellationToken cancellationToken);
    internal virtual GetTrustStoreRevocationContentResponse GetTrustStoreRevocationContent(GetTrustStoreRevocationContentRequest request);
    public virtual Task`1<GetTrustStoreRevocationContentResponse> GetTrustStoreRevocationContentAsync(GetTrustStoreRevocationContentRequest request, CancellationToken cancellationToken);
    internal virtual ModifyListenerResponse ModifyListener(ModifyListenerRequest request);
    public virtual Task`1<ModifyListenerResponse> ModifyListenerAsync(ModifyListenerRequest request, CancellationToken cancellationToken);
    internal virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request);
    public virtual Task`1<ModifyLoadBalancerAttributesResponse> ModifyLoadBalancerAttributesAsync(ModifyLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    internal virtual ModifyRuleResponse ModifyRule(ModifyRuleRequest request);
    public virtual Task`1<ModifyRuleResponse> ModifyRuleAsync(ModifyRuleRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTargetGroupResponse ModifyTargetGroup(ModifyTargetGroupRequest request);
    public virtual Task`1<ModifyTargetGroupResponse> ModifyTargetGroupAsync(ModifyTargetGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTargetGroupAttributesResponse ModifyTargetGroupAttributes(ModifyTargetGroupAttributesRequest request);
    public virtual Task`1<ModifyTargetGroupAttributesResponse> ModifyTargetGroupAttributesAsync(ModifyTargetGroupAttributesRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTrustStoreResponse ModifyTrustStore(ModifyTrustStoreRequest request);
    public virtual Task`1<ModifyTrustStoreResponse> ModifyTrustStoreAsync(ModifyTrustStoreRequest request, CancellationToken cancellationToken);
    internal virtual RegisterTargetsResponse RegisterTargets(RegisterTargetsRequest request);
    public virtual Task`1<RegisterTargetsResponse> RegisterTargetsAsync(RegisterTargetsRequest request, CancellationToken cancellationToken);
    internal virtual RemoveListenerCertificatesResponse RemoveListenerCertificates(RemoveListenerCertificatesRequest request);
    public virtual Task`1<RemoveListenerCertificatesResponse> RemoveListenerCertificatesAsync(RemoveListenerCertificatesRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsResponse RemoveTags(RemoveTagsRequest request);
    public virtual Task`1<RemoveTagsResponse> RemoveTagsAsync(RemoveTagsRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTrustStoreRevocationsResponse RemoveTrustStoreRevocations(RemoveTrustStoreRevocationsRequest request);
    public virtual Task`1<RemoveTrustStoreRevocationsResponse> RemoveTrustStoreRevocationsAsync(RemoveTrustStoreRevocationsRequest request, CancellationToken cancellationToken);
    internal virtual SetIpAddressTypeResponse SetIpAddressType(SetIpAddressTypeRequest request);
    public virtual Task`1<SetIpAddressTypeResponse> SetIpAddressTypeAsync(SetIpAddressTypeRequest request, CancellationToken cancellationToken);
    internal virtual SetRulePrioritiesResponse SetRulePriorities(SetRulePrioritiesRequest request);
    public virtual Task`1<SetRulePrioritiesResponse> SetRulePrioritiesAsync(SetRulePrioritiesRequest request, CancellationToken cancellationToken);
    internal virtual SetSecurityGroupsResponse SetSecurityGroups(SetSecurityGroupsRequest request);
    public virtual Task`1<SetSecurityGroupsResponse> SetSecurityGroupsAsync(SetSecurityGroupsRequest request, CancellationToken cancellationToken);
    internal virtual SetSubnetsResponse SetSubnets(SetSubnetsRequest request);
    public virtual Task`1<SetSubnetsResponse> SetSubnetsAsync(SetSubnetsRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.ElasticLoadBalancingV2.AmazonElasticLoadBalancingV2Config : ClientConfig {
    private static string UserAgentString;
    private static AmazonElasticLoadBalancingV2EndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonElasticLoadBalancingV2Config();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.ElasticLoadBalancingV2.AmazonElasticLoadBalancingV2DefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonElasticLoadBalancingV2DefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.ElasticLoadBalancingV2.AmazonElasticLoadBalancingV2Exception : AmazonServiceException {
    public AmazonElasticLoadBalancingV2Exception(string message);
    public AmazonElasticLoadBalancingV2Exception(string message, Exception innerException);
    public AmazonElasticLoadBalancingV2Exception(Exception innerException);
    public AmazonElasticLoadBalancingV2Exception(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonElasticLoadBalancingV2Exception(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.AmazonElasticLoadBalancingV2Request : AmazonWebServiceRequest {
}
public class Amazon.ElasticLoadBalancingV2.AnomalyResultEnum : ConstantClass {
    public static AnomalyResultEnum Anomalous;
    public static AnomalyResultEnum Normal;
    public AnomalyResultEnum(string value);
    private static AnomalyResultEnum();
    public static AnomalyResultEnum FindValue(string value);
    public static AnomalyResultEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.AuthenticateCognitoActionConditionalBehaviorEnum : ConstantClass {
    public static AuthenticateCognitoActionConditionalBehaviorEnum Allow;
    public static AuthenticateCognitoActionConditionalBehaviorEnum Authenticate;
    public static AuthenticateCognitoActionConditionalBehaviorEnum Deny;
    public AuthenticateCognitoActionConditionalBehaviorEnum(string value);
    private static AuthenticateCognitoActionConditionalBehaviorEnum();
    public static AuthenticateCognitoActionConditionalBehaviorEnum FindValue(string value);
    public static AuthenticateCognitoActionConditionalBehaviorEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.AuthenticateOidcActionConditionalBehaviorEnum : ConstantClass {
    public static AuthenticateOidcActionConditionalBehaviorEnum Allow;
    public static AuthenticateOidcActionConditionalBehaviorEnum Authenticate;
    public static AuthenticateOidcActionConditionalBehaviorEnum Deny;
    public AuthenticateOidcActionConditionalBehaviorEnum(string value);
    private static AuthenticateOidcActionConditionalBehaviorEnum();
    public static AuthenticateOidcActionConditionalBehaviorEnum FindValue(string value);
    public static AuthenticateOidcActionConditionalBehaviorEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.DescribeTargetHealthInputIncludeEnum : ConstantClass {
    public static DescribeTargetHealthInputIncludeEnum All;
    public static DescribeTargetHealthInputIncludeEnum AnomalyDetection;
    public DescribeTargetHealthInputIncludeEnum(string value);
    private static DescribeTargetHealthInputIncludeEnum();
    public static DescribeTargetHealthInputIncludeEnum FindValue(string value);
    public static DescribeTargetHealthInputIncludeEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.Endpoints.ElasticLoadBalancingV2EndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.ElasticLoadBalancingV2.EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum : ConstantClass {
    public static EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum Off;
    public static EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum On;
    public EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum(string value);
    private static EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum();
    public static EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum FindValue(string value);
    public static EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum op_Implicit(string value);
}
public interface Amazon.ElasticLoadBalancingV2.IAmazonElasticLoadBalancingV2 {
    public IElasticLoadBalancingV2PaginatorFactory Paginators { get; }
    public abstract virtual IElasticLoadBalancingV2PaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddListenerCertificatesResponse> AddListenerCertificatesAsync(AddListenerCertificatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddTagsResponse> AddTagsAsync(AddTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddTrustStoreRevocationsResponse> AddTrustStoreRevocationsAsync(AddTrustStoreRevocationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateListenerResponse> CreateListenerAsync(CreateListenerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLoadBalancerResponse> CreateLoadBalancerAsync(CreateLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRuleResponse> CreateRuleAsync(CreateRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTargetGroupResponse> CreateTargetGroupAsync(CreateTargetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTrustStoreResponse> CreateTrustStoreAsync(CreateTrustStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteListenerResponse> DeleteListenerAsync(DeleteListenerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLoadBalancerResponse> DeleteLoadBalancerAsync(DeleteLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRuleResponse> DeleteRuleAsync(DeleteRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSharedTrustStoreAssociationResponse> DeleteSharedTrustStoreAssociationAsync(DeleteSharedTrustStoreAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTargetGroupResponse> DeleteTargetGroupAsync(DeleteTargetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTrustStoreResponse> DeleteTrustStoreAsync(DeleteTrustStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterTargetsResponse> DeregisterTargetsAsync(DeregisterTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountLimitsResponse> DescribeAccountLimitsAsync(DescribeAccountLimitsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeListenerCertificatesResponse> DescribeListenerCertificatesAsync(DescribeListenerCertificatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeListenersResponse> DescribeListenersAsync(DescribeListenersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoadBalancerAttributesResponse> DescribeLoadBalancerAttributesAsync(DescribeLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoadBalancersResponse> DescribeLoadBalancersAsync(DescribeLoadBalancersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRulesResponse> DescribeRulesAsync(DescribeRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSSLPoliciesResponse> DescribeSSLPoliciesAsync(DescribeSSLPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTargetGroupAttributesResponse> DescribeTargetGroupAttributesAsync(DescribeTargetGroupAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTargetGroupsResponse> DescribeTargetGroupsAsync(DescribeTargetGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTargetHealthResponse> DescribeTargetHealthAsync(DescribeTargetHealthRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrustStoreAssociationsResponse> DescribeTrustStoreAssociationsAsync(DescribeTrustStoreAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrustStoreRevocationsResponse> DescribeTrustStoreRevocationsAsync(DescribeTrustStoreRevocationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrustStoresResponse> DescribeTrustStoresAsync(DescribeTrustStoresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTrustStoreCaCertificatesBundleResponse> GetTrustStoreCaCertificatesBundleAsync(GetTrustStoreCaCertificatesBundleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTrustStoreRevocationContentResponse> GetTrustStoreRevocationContentAsync(GetTrustStoreRevocationContentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyListenerResponse> ModifyListenerAsync(ModifyListenerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyLoadBalancerAttributesResponse> ModifyLoadBalancerAttributesAsync(ModifyLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyRuleResponse> ModifyRuleAsync(ModifyRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTargetGroupResponse> ModifyTargetGroupAsync(ModifyTargetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTargetGroupAttributesResponse> ModifyTargetGroupAttributesAsync(ModifyTargetGroupAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTrustStoreResponse> ModifyTrustStoreAsync(ModifyTrustStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterTargetsResponse> RegisterTargetsAsync(RegisterTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveListenerCertificatesResponse> RemoveListenerCertificatesAsync(RemoveListenerCertificatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsResponse> RemoveTagsAsync(RemoveTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTrustStoreRevocationsResponse> RemoveTrustStoreRevocationsAsync(RemoveTrustStoreRevocationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIpAddressTypeResponse> SetIpAddressTypeAsync(SetIpAddressTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetRulePrioritiesResponse> SetRulePrioritiesAsync(SetRulePrioritiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetSecurityGroupsResponse> SetSecurityGroupsAsync(SetSecurityGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetSubnetsResponse> SetSubnetsAsync(SetSubnetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.ElasticLoadBalancingV2.AmazonElasticLoadBalancingV2Config")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.ElasticLoadBalancingV2.Internal.AmazonElasticLoadBalancingV2EndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.ElasticLoadBalancingV2.Internal.AmazonElasticLoadBalancingV2EndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.ElasticLoadBalancingV2.Internal.AmazonElasticLoadBalancingV2Metadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.ElasticLoadBalancingV2.IpAddressType : ConstantClass {
    public static IpAddressType Dualstack;
    public static IpAddressType DualstackWithoutPublicIpv4;
    public static IpAddressType Ipv4;
    public IpAddressType(string value);
    private static IpAddressType();
    public static IpAddressType FindValue(string value);
    public static IpAddressType op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.LoadBalancerSchemeEnum : ConstantClass {
    public static LoadBalancerSchemeEnum Internal;
    public static LoadBalancerSchemeEnum InternetFacing;
    public LoadBalancerSchemeEnum(string value);
    private static LoadBalancerSchemeEnum();
    public static LoadBalancerSchemeEnum FindValue(string value);
    public static LoadBalancerSchemeEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.LoadBalancerStateEnum : ConstantClass {
    public static LoadBalancerStateEnum Active;
    public static LoadBalancerStateEnum Active_impaired;
    public static LoadBalancerStateEnum Failed;
    public static LoadBalancerStateEnum Provisioning;
    public LoadBalancerStateEnum(string value);
    private static LoadBalancerStateEnum();
    public static LoadBalancerStateEnum FindValue(string value);
    public static LoadBalancerStateEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.LoadBalancerTypeEnum : ConstantClass {
    public static LoadBalancerTypeEnum Application;
    public static LoadBalancerTypeEnum Gateway;
    public static LoadBalancerTypeEnum Network;
    public LoadBalancerTypeEnum(string value);
    private static LoadBalancerTypeEnum();
    public static LoadBalancerTypeEnum FindValue(string value);
    public static LoadBalancerTypeEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.MitigationInEffectEnum : ConstantClass {
    public static MitigationInEffectEnum No;
    public static MitigationInEffectEnum Yes;
    public MitigationInEffectEnum(string value);
    private static MitigationInEffectEnum();
    public static MitigationInEffectEnum FindValue(string value);
    public static MitigationInEffectEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.Model.Action : object {
    private AuthenticateCognitoActionConfig _authenticateCognitoConfig;
    private AuthenticateOidcActionConfig _authenticateOidcConfig;
    private FixedResponseActionConfig _fixedResponseConfig;
    private ForwardActionConfig _forwardConfig;
    private Nullable`1<int> _order;
    private RedirectActionConfig _redirectConfig;
    private string _targetGroupArn;
    private ActionTypeEnum _type;
    public AuthenticateCognitoActionConfig AuthenticateCognitoConfig { get; public set; }
    public AuthenticateOidcActionConfig AuthenticateOidcConfig { get; public set; }
    public FixedResponseActionConfig FixedResponseConfig { get; public set; }
    public ForwardActionConfig ForwardConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Order { get; public set; }
    public RedirectActionConfig RedirectConfig { get; public set; }
    public string TargetGroupArn { get; public set; }
    [AWSPropertyAttribute]
public ActionTypeEnum Type { get; public set; }
    public AuthenticateCognitoActionConfig get_AuthenticateCognitoConfig();
    public void set_AuthenticateCognitoConfig(AuthenticateCognitoActionConfig value);
    internal bool IsSetAuthenticateCognitoConfig();
    public AuthenticateOidcActionConfig get_AuthenticateOidcConfig();
    public void set_AuthenticateOidcConfig(AuthenticateOidcActionConfig value);
    internal bool IsSetAuthenticateOidcConfig();
    public FixedResponseActionConfig get_FixedResponseConfig();
    public void set_FixedResponseConfig(FixedResponseActionConfig value);
    internal bool IsSetFixedResponseConfig();
    public ForwardActionConfig get_ForwardConfig();
    public void set_ForwardConfig(ForwardActionConfig value);
    internal bool IsSetForwardConfig();
    public Nullable`1<int> get_Order();
    public void set_Order(Nullable`1<int> value);
    internal bool IsSetOrder();
    public RedirectActionConfig get_RedirectConfig();
    public void set_RedirectConfig(RedirectActionConfig value);
    internal bool IsSetRedirectConfig();
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public ActionTypeEnum get_Type();
    public void set_Type(ActionTypeEnum value);
    internal bool IsSetType();
}
public class Amazon.ElasticLoadBalancingV2.Model.AddListenerCertificatesRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<Certificate> _certificates;
    private string _listenerArn;
    [AWSPropertyAttribute]
public List`1<Certificate> Certificates { get; public set; }
    [AWSPropertyAttribute]
public string ListenerArn { get; public set; }
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.AddListenerCertificatesResponse : AmazonWebServiceResponse {
    private List`1<Certificate> _certificates;
    public List`1<Certificate> Certificates { get; public set; }
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
}
public class Amazon.ElasticLoadBalancingV2.Model.AddTagsRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _resourceArns;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<string> ResourceArns { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<string> get_ResourceArns();
    public void set_ResourceArns(List`1<string> value);
    internal bool IsSetResourceArns();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancingV2.Model.AddTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.AddTrustStoreRevocationsRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<RevocationContent> _revocationContents;
    private string _trustStoreArn;
    public List`1<RevocationContent> RevocationContents { get; public set; }
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public List`1<RevocationContent> get_RevocationContents();
    public void set_RevocationContents(List`1<RevocationContent> value);
    internal bool IsSetRevocationContents();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.AddTrustStoreRevocationsResponse : AmazonWebServiceResponse {
    private List`1<TrustStoreRevocation> _trustStoreRevocations;
    public List`1<TrustStoreRevocation> TrustStoreRevocations { get; public set; }
    public List`1<TrustStoreRevocation> get_TrustStoreRevocations();
    public void set_TrustStoreRevocations(List`1<TrustStoreRevocation> value);
    internal bool IsSetTrustStoreRevocations();
}
public class Amazon.ElasticLoadBalancingV2.Model.AllocationIdNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public AllocationIdNotFoundException(string message);
    public AllocationIdNotFoundException(string message, Exception innerException);
    public AllocationIdNotFoundException(Exception innerException);
    public AllocationIdNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AllocationIdNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.ALPNPolicyNotSupportedException : AmazonElasticLoadBalancingV2Exception {
    public ALPNPolicyNotSupportedException(string message);
    public ALPNPolicyNotSupportedException(string message, Exception innerException);
    public ALPNPolicyNotSupportedException(Exception innerException);
    public ALPNPolicyNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ALPNPolicyNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.AnomalyDetection : object {
    private MitigationInEffectEnum _mitigationInEffect;
    private AnomalyResultEnum _result;
    public MitigationInEffectEnum MitigationInEffect { get; public set; }
    public AnomalyResultEnum Result { get; public set; }
    public MitigationInEffectEnum get_MitigationInEffect();
    public void set_MitigationInEffect(MitigationInEffectEnum value);
    internal bool IsSetMitigationInEffect();
    public AnomalyResultEnum get_Result();
    public void set_Result(AnomalyResultEnum value);
    internal bool IsSetResult();
}
public class Amazon.ElasticLoadBalancingV2.Model.AuthenticateCognitoActionConfig : object {
    private Dictionary`2<string, string> _authenticationRequestExtraParams;
    private AuthenticateCognitoActionConditionalBehaviorEnum _onUnauthenticatedRequest;
    private string _scope;
    private string _sessionCookieName;
    private Nullable`1<long> _sessionTimeout;
    private string _userPoolArn;
    private string _userPoolClientId;
    private string _userPoolDomain;
    public Dictionary`2<string, string> AuthenticationRequestExtraParams { get; public set; }
    public AuthenticateCognitoActionConditionalBehaviorEnum OnUnauthenticatedRequest { get; public set; }
    public string Scope { get; public set; }
    public string SessionCookieName { get; public set; }
    public Nullable`1<long> SessionTimeout { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolArn { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolClientId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolDomain { get; public set; }
    public Dictionary`2<string, string> get_AuthenticationRequestExtraParams();
    public void set_AuthenticationRequestExtraParams(Dictionary`2<string, string> value);
    internal bool IsSetAuthenticationRequestExtraParams();
    public AuthenticateCognitoActionConditionalBehaviorEnum get_OnUnauthenticatedRequest();
    public void set_OnUnauthenticatedRequest(AuthenticateCognitoActionConditionalBehaviorEnum value);
    internal bool IsSetOnUnauthenticatedRequest();
    public string get_Scope();
    public void set_Scope(string value);
    internal bool IsSetScope();
    public string get_SessionCookieName();
    public void set_SessionCookieName(string value);
    internal bool IsSetSessionCookieName();
    public Nullable`1<long> get_SessionTimeout();
    public void set_SessionTimeout(Nullable`1<long> value);
    internal bool IsSetSessionTimeout();
    public string get_UserPoolArn();
    public void set_UserPoolArn(string value);
    internal bool IsSetUserPoolArn();
    public string get_UserPoolClientId();
    public void set_UserPoolClientId(string value);
    internal bool IsSetUserPoolClientId();
    public string get_UserPoolDomain();
    public void set_UserPoolDomain(string value);
    internal bool IsSetUserPoolDomain();
}
public class Amazon.ElasticLoadBalancingV2.Model.AuthenticateOidcActionConfig : object {
    private Dictionary`2<string, string> _authenticationRequestExtraParams;
    private string _authorizationEndpoint;
    private string _clientId;
    private string _clientSecret;
    private string _issuer;
    private AuthenticateOidcActionConditionalBehaviorEnum _onUnauthenticatedRequest;
    private string _scope;
    private string _sessionCookieName;
    private Nullable`1<long> _sessionTimeout;
    private string _tokenEndpoint;
    private Nullable`1<bool> _useExistingClientSecret;
    private string _userInfoEndpoint;
    public Dictionary`2<string, string> AuthenticationRequestExtraParams { get; public set; }
    [AWSPropertyAttribute]
public string AuthorizationEndpoint { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public string ClientSecret { get; public set; }
    [AWSPropertyAttribute]
public string Issuer { get; public set; }
    public AuthenticateOidcActionConditionalBehaviorEnum OnUnauthenticatedRequest { get; public set; }
    public string Scope { get; public set; }
    public string SessionCookieName { get; public set; }
    public Nullable`1<long> SessionTimeout { get; public set; }
    [AWSPropertyAttribute]
public string TokenEndpoint { get; public set; }
    public Nullable`1<bool> UseExistingClientSecret { get; public set; }
    [AWSPropertyAttribute]
public string UserInfoEndpoint { get; public set; }
    public Dictionary`2<string, string> get_AuthenticationRequestExtraParams();
    public void set_AuthenticationRequestExtraParams(Dictionary`2<string, string> value);
    internal bool IsSetAuthenticationRequestExtraParams();
    public string get_AuthorizationEndpoint();
    public void set_AuthorizationEndpoint(string value);
    internal bool IsSetAuthorizationEndpoint();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientSecret();
    public void set_ClientSecret(string value);
    internal bool IsSetClientSecret();
    public string get_Issuer();
    public void set_Issuer(string value);
    internal bool IsSetIssuer();
    public AuthenticateOidcActionConditionalBehaviorEnum get_OnUnauthenticatedRequest();
    public void set_OnUnauthenticatedRequest(AuthenticateOidcActionConditionalBehaviorEnum value);
    internal bool IsSetOnUnauthenticatedRequest();
    public string get_Scope();
    public void set_Scope(string value);
    internal bool IsSetScope();
    public string get_SessionCookieName();
    public void set_SessionCookieName(string value);
    internal bool IsSetSessionCookieName();
    public Nullable`1<long> get_SessionTimeout();
    public void set_SessionTimeout(Nullable`1<long> value);
    internal bool IsSetSessionTimeout();
    public string get_TokenEndpoint();
    public void set_TokenEndpoint(string value);
    internal bool IsSetTokenEndpoint();
    public Nullable`1<bool> get_UseExistingClientSecret();
    public void set_UseExistingClientSecret(Nullable`1<bool> value);
    internal bool IsSetUseExistingClientSecret();
    public string get_UserInfoEndpoint();
    public void set_UserInfoEndpoint(string value);
    internal bool IsSetUserInfoEndpoint();
}
public class Amazon.ElasticLoadBalancingV2.Model.AvailabilityZone : object {
    private List`1<LoadBalancerAddress> _loadBalancerAddresses;
    private string _outpostId;
    private string _subnetId;
    private string _zoneName;
    public List`1<LoadBalancerAddress> LoadBalancerAddresses { get; public set; }
    public string OutpostId { get; public set; }
    public string SubnetId { get; public set; }
    public string ZoneName { get; public set; }
    public List`1<LoadBalancerAddress> get_LoadBalancerAddresses();
    public void set_LoadBalancerAddresses(List`1<LoadBalancerAddress> value);
    internal bool IsSetLoadBalancerAddresses();
    public string get_OutpostId();
    public void set_OutpostId(string value);
    internal bool IsSetOutpostId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_ZoneName();
    public void set_ZoneName(string value);
    internal bool IsSetZoneName();
}
public class Amazon.ElasticLoadBalancingV2.Model.AvailabilityZoneNotSupportedException : AmazonElasticLoadBalancingV2Exception {
    public AvailabilityZoneNotSupportedException(string message);
    public AvailabilityZoneNotSupportedException(string message, Exception innerException);
    public AvailabilityZoneNotSupportedException(Exception innerException);
    public AvailabilityZoneNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AvailabilityZoneNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.CaCertificatesBundleNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public CaCertificatesBundleNotFoundException(string message);
    public CaCertificatesBundleNotFoundException(string message, Exception innerException);
    public CaCertificatesBundleNotFoundException(Exception innerException);
    public CaCertificatesBundleNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CaCertificatesBundleNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.Certificate : object {
    private string _certificateArn;
    private Nullable`1<bool> _isDefault;
    public string CertificateArn { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
}
public class Amazon.ElasticLoadBalancingV2.Model.CertificateNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public CertificateNotFoundException(string message);
    public CertificateNotFoundException(string message, Exception innerException);
    public CertificateNotFoundException(Exception innerException);
    public CertificateNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CertificateNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.Cipher : object {
    private string _name;
    private Nullable`1<int> _priority;
    public string Name { get; public set; }
    public Nullable`1<int> Priority { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateListenerRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _alpnPolicy;
    private List`1<Certificate> _certificates;
    private List`1<Action> _defaultActions;
    private string _loadBalancerArn;
    private MutualAuthenticationAttributes _mutualAuthentication;
    private Nullable`1<int> _port;
    private ProtocolEnum _protocol;
    private string _sslPolicy;
    private List`1<Tag> _tags;
    public List`1<string> AlpnPolicy { get; public set; }
    public List`1<Certificate> Certificates { get; public set; }
    [AWSPropertyAttribute]
public List`1<Action> DefaultActions { get; public set; }
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    public MutualAuthenticationAttributes MutualAuthentication { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public ProtocolEnum Protocol { get; public set; }
    public string SslPolicy { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<string> get_AlpnPolicy();
    public void set_AlpnPolicy(List`1<string> value);
    internal bool IsSetAlpnPolicy();
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public List`1<Action> get_DefaultActions();
    public void set_DefaultActions(List`1<Action> value);
    internal bool IsSetDefaultActions();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public MutualAuthenticationAttributes get_MutualAuthentication();
    public void set_MutualAuthentication(MutualAuthenticationAttributes value);
    internal bool IsSetMutualAuthentication();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public ProtocolEnum get_Protocol();
    public void set_Protocol(ProtocolEnum value);
    internal bool IsSetProtocol();
    public string get_SslPolicy();
    public void set_SslPolicy(string value);
    internal bool IsSetSslPolicy();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateListenerResponse : AmazonWebServiceResponse {
    private List`1<Listener> _listeners;
    public List`1<Listener> Listeners { get; public set; }
    public List`1<Listener> get_Listeners();
    public void set_Listeners(List`1<Listener> value);
    internal bool IsSetListeners();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateLoadBalancerRequest : AmazonElasticLoadBalancingV2Request {
    private string _customerOwnedIpv4Pool;
    private IpAddressType _ipAddressType;
    private string _name;
    private LoadBalancerSchemeEnum _scheme;
    private List`1<string> _securityGroups;
    private List`1<SubnetMapping> _subnetMappings;
    private List`1<string> _subnets;
    private List`1<Tag> _tags;
    private LoadBalancerTypeEnum _type;
    [AWSPropertyAttribute]
public string CustomerOwnedIpv4Pool { get; public set; }
    public IpAddressType IpAddressType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public LoadBalancerSchemeEnum Scheme { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public List`1<SubnetMapping> SubnetMappings { get; public set; }
    public List`1<string> Subnets { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public LoadBalancerTypeEnum Type { get; public set; }
    public string get_CustomerOwnedIpv4Pool();
    public void set_CustomerOwnedIpv4Pool(string value);
    internal bool IsSetCustomerOwnedIpv4Pool();
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public LoadBalancerSchemeEnum get_Scheme();
    public void set_Scheme(LoadBalancerSchemeEnum value);
    internal bool IsSetScheme();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public List`1<SubnetMapping> get_SubnetMappings();
    public void set_SubnetMappings(List`1<SubnetMapping> value);
    internal bool IsSetSubnetMappings();
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public LoadBalancerTypeEnum get_Type();
    public void set_Type(LoadBalancerTypeEnum value);
    internal bool IsSetType();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateLoadBalancerResponse : AmazonWebServiceResponse {
    private List`1<LoadBalancer> _loadBalancers;
    public List`1<LoadBalancer> LoadBalancers { get; public set; }
    public List`1<LoadBalancer> get_LoadBalancers();
    public void set_LoadBalancers(List`1<LoadBalancer> value);
    internal bool IsSetLoadBalancers();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateRuleRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<Action> _actions;
    private List`1<RuleCondition> _conditions;
    private string _listenerArn;
    private Nullable`1<int> _priority;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<Action> Actions { get; public set; }
    [AWSPropertyAttribute]
public List`1<RuleCondition> Conditions { get; public set; }
    [AWSPropertyAttribute]
public string ListenerArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<Action> get_Actions();
    public void set_Actions(List`1<Action> value);
    internal bool IsSetActions();
    public List`1<RuleCondition> get_Conditions();
    public void set_Conditions(List`1<RuleCondition> value);
    internal bool IsSetConditions();
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateRuleResponse : AmazonWebServiceResponse {
    private List`1<Rule> _rules;
    public List`1<Rule> Rules { get; public set; }
    public List`1<Rule> get_Rules();
    public void set_Rules(List`1<Rule> value);
    internal bool IsSetRules();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateTargetGroupRequest : AmazonElasticLoadBalancingV2Request {
    private Nullable`1<bool> _healthCheckEnabled;
    private Nullable`1<int> _healthCheckIntervalSeconds;
    private string _healthCheckPath;
    private string _healthCheckPort;
    private ProtocolEnum _healthCheckProtocol;
    private Nullable`1<int> _healthCheckTimeoutSeconds;
    private Nullable`1<int> _healthyThresholdCount;
    private TargetGroupIpAddressTypeEnum _ipAddressType;
    private Matcher _matcher;
    private string _name;
    private Nullable`1<int> _port;
    private ProtocolEnum _protocol;
    private string _protocolVersion;
    private List`1<Tag> _tags;
    private TargetTypeEnum _targetType;
    private Nullable`1<int> _unhealthyThresholdCount;
    private string _vpcId;
    public Nullable`1<bool> HealthCheckEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthCheckIntervalSeconds { get; public set; }
    [AWSPropertyAttribute]
public string HealthCheckPath { get; public set; }
    public string HealthCheckPort { get; public set; }
    public ProtocolEnum HealthCheckProtocol { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthCheckTimeoutSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthyThresholdCount { get; public set; }
    public TargetGroupIpAddressTypeEnum IpAddressType { get; public set; }
    public Matcher Matcher { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public ProtocolEnum Protocol { get; public set; }
    public string ProtocolVersion { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public TargetTypeEnum TargetType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> UnhealthyThresholdCount { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_HealthCheckEnabled();
    public void set_HealthCheckEnabled(Nullable`1<bool> value);
    internal bool IsSetHealthCheckEnabled();
    public Nullable`1<int> get_HealthCheckIntervalSeconds();
    public void set_HealthCheckIntervalSeconds(Nullable`1<int> value);
    internal bool IsSetHealthCheckIntervalSeconds();
    public string get_HealthCheckPath();
    public void set_HealthCheckPath(string value);
    internal bool IsSetHealthCheckPath();
    public string get_HealthCheckPort();
    public void set_HealthCheckPort(string value);
    internal bool IsSetHealthCheckPort();
    public ProtocolEnum get_HealthCheckProtocol();
    public void set_HealthCheckProtocol(ProtocolEnum value);
    internal bool IsSetHealthCheckProtocol();
    public Nullable`1<int> get_HealthCheckTimeoutSeconds();
    public void set_HealthCheckTimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetHealthCheckTimeoutSeconds();
    public Nullable`1<int> get_HealthyThresholdCount();
    public void set_HealthyThresholdCount(Nullable`1<int> value);
    internal bool IsSetHealthyThresholdCount();
    public TargetGroupIpAddressTypeEnum get_IpAddressType();
    public void set_IpAddressType(TargetGroupIpAddressTypeEnum value);
    internal bool IsSetIpAddressType();
    public Matcher get_Matcher();
    public void set_Matcher(Matcher value);
    internal bool IsSetMatcher();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public ProtocolEnum get_Protocol();
    public void set_Protocol(ProtocolEnum value);
    internal bool IsSetProtocol();
    public string get_ProtocolVersion();
    public void set_ProtocolVersion(string value);
    internal bool IsSetProtocolVersion();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TargetTypeEnum get_TargetType();
    public void set_TargetType(TargetTypeEnum value);
    internal bool IsSetTargetType();
    public Nullable`1<int> get_UnhealthyThresholdCount();
    public void set_UnhealthyThresholdCount(Nullable`1<int> value);
    internal bool IsSetUnhealthyThresholdCount();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateTargetGroupResponse : AmazonWebServiceResponse {
    private List`1<TargetGroup> _targetGroups;
    public List`1<TargetGroup> TargetGroups { get; public set; }
    public List`1<TargetGroup> get_TargetGroups();
    public void set_TargetGroups(List`1<TargetGroup> value);
    internal bool IsSetTargetGroups();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateTrustStoreRequest : AmazonElasticLoadBalancingV2Request {
    private string _caCertificatesBundleS3Bucket;
    private string _caCertificatesBundleS3Key;
    private string _caCertificatesBundleS3ObjectVersion;
    private string _name;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string CaCertificatesBundleS3Bucket { get; public set; }
    [AWSPropertyAttribute]
public string CaCertificatesBundleS3Key { get; public set; }
    public string CaCertificatesBundleS3ObjectVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_CaCertificatesBundleS3Bucket();
    public void set_CaCertificatesBundleS3Bucket(string value);
    internal bool IsSetCaCertificatesBundleS3Bucket();
    public string get_CaCertificatesBundleS3Key();
    public void set_CaCertificatesBundleS3Key(string value);
    internal bool IsSetCaCertificatesBundleS3Key();
    public string get_CaCertificatesBundleS3ObjectVersion();
    public void set_CaCertificatesBundleS3ObjectVersion(string value);
    internal bool IsSetCaCertificatesBundleS3ObjectVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancingV2.Model.CreateTrustStoreResponse : AmazonWebServiceResponse {
    private List`1<TrustStore> _trustStores;
    public List`1<TrustStore> TrustStores { get; public set; }
    public List`1<TrustStore> get_TrustStores();
    public void set_TrustStores(List`1<TrustStore> value);
    internal bool IsSetTrustStores();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteAssociationSameAccountException : AmazonElasticLoadBalancingV2Exception {
    public DeleteAssociationSameAccountException(string message);
    public DeleteAssociationSameAccountException(string message, Exception innerException);
    public DeleteAssociationSameAccountException(Exception innerException);
    public DeleteAssociationSameAccountException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DeleteAssociationSameAccountException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteListenerRequest : AmazonElasticLoadBalancingV2Request {
    private string _listenerArn;
    [AWSPropertyAttribute]
public string ListenerArn { get; public set; }
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteListenerResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteLoadBalancerRequest : AmazonElasticLoadBalancingV2Request {
    private string _loadBalancerArn;
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteLoadBalancerResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteRuleRequest : AmazonElasticLoadBalancingV2Request {
    private string _ruleArn;
    [AWSPropertyAttribute]
public string RuleArn { get; public set; }
    public string get_RuleArn();
    public void set_RuleArn(string value);
    internal bool IsSetRuleArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteSharedTrustStoreAssociationRequest : AmazonElasticLoadBalancingV2Request {
    private string _resourceArn;
    private string _trustStoreArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteSharedTrustStoreAssociationResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteTargetGroupRequest : AmazonElasticLoadBalancingV2Request {
    private string _targetGroupArn;
    [AWSPropertyAttribute]
public string TargetGroupArn { get; public set; }
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteTargetGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteTrustStoreRequest : AmazonElasticLoadBalancingV2Request {
    private string _trustStoreArn;
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeleteTrustStoreResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.DeregisterTargetsRequest : AmazonElasticLoadBalancingV2Request {
    private string _targetGroupArn;
    private List`1<TargetDescription> _targets;
    [AWSPropertyAttribute]
public string TargetGroupArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetDescription> Targets { get; public set; }
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public List`1<TargetDescription> get_Targets();
    public void set_Targets(List`1<TargetDescription> value);
    internal bool IsSetTargets();
}
public class Amazon.ElasticLoadBalancingV2.Model.DeregisterTargetsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeAccountLimitsRequest : AmazonElasticLoadBalancingV2Request {
    private string _marker;
    private Nullable`1<int> _pageSize;
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeAccountLimitsResponse : AmazonWebServiceResponse {
    private List`1<Limit> _limits;
    private string _nextMarker;
    public List`1<Limit> Limits { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<Limit> get_Limits();
    public void set_Limits(List`1<Limit> value);
    internal bool IsSetLimits();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeListenerCertificatesRequest : AmazonElasticLoadBalancingV2Request {
    private string _listenerArn;
    private string _marker;
    private Nullable`1<int> _pageSize;
    [AWSPropertyAttribute]
public string ListenerArn { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeListenerCertificatesResponse : AmazonWebServiceResponse {
    private List`1<Certificate> _certificates;
    private string _nextMarker;
    public List`1<Certificate> Certificates { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.ElasticLoadBalancingV2.Model.DescribeListenersPaginator : object {
    private IAmazonElasticLoadBalancingV2 _client;
    private DescribeListenersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeListenersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Listener> Listeners { get; }
    internal DescribeListenersPaginator(IAmazonElasticLoadBalancingV2 client, DescribeListenersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeListenersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Listener> get_Listeners();
    [AsyncIteratorStateMachineAttribute("Amazon.ElasticLoadBalancingV2.Model.DescribeListenersPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticLoadBalancingV2-Model-DescribeListenersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeListenersResponse> Amazon.Runtime.IPaginator<Amazon.ElasticLoadBalancingV2.Model.DescribeListenersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeListenersRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _listenerArns;
    private string _loadBalancerArn;
    private string _marker;
    private Nullable`1<int> _pageSize;
    public List`1<string> ListenerArns { get; public set; }
    public string LoadBalancerArn { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public List`1<string> get_ListenerArns();
    public void set_ListenerArns(List`1<string> value);
    internal bool IsSetListenerArns();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeListenersResponse : AmazonWebServiceResponse {
    private List`1<Listener> _listeners;
    private string _nextMarker;
    public List`1<Listener> Listeners { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<Listener> get_Listeners();
    public void set_Listeners(List`1<Listener> value);
    internal bool IsSetListeners();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeLoadBalancerAttributesRequest : AmazonElasticLoadBalancingV2Request {
    private string _loadBalancerArn;
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeLoadBalancerAttributesResponse : AmazonWebServiceResponse {
    private List`1<LoadBalancerAttribute> _attributes;
    [AWSPropertyAttribute]
public List`1<LoadBalancerAttribute> Attributes { get; public set; }
    public List`1<LoadBalancerAttribute> get_Attributes();
    public void set_Attributes(List`1<LoadBalancerAttribute> value);
    internal bool IsSetAttributes();
}
internal class Amazon.ElasticLoadBalancingV2.Model.DescribeLoadBalancersPaginator : object {
    private IAmazonElasticLoadBalancingV2 _client;
    private DescribeLoadBalancersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLoadBalancersResponse> Responses { get; }
    public IPaginatedEnumerable`1<LoadBalancer> LoadBalancers { get; }
    internal DescribeLoadBalancersPaginator(IAmazonElasticLoadBalancingV2 client, DescribeLoadBalancersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLoadBalancersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LoadBalancer> get_LoadBalancers();
    [AsyncIteratorStateMachineAttribute("Amazon.ElasticLoadBalancingV2.Model.DescribeLoadBalancersPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticLoadBalancingV2-Model-DescribeLoadBalancersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeLoadBalancersResponse> Amazon.Runtime.IPaginator<Amazon.ElasticLoadBalancingV2.Model.DescribeLoadBalancersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeLoadBalancersRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _loadBalancerArns;
    private string _marker;
    private List`1<string> _names;
    private Nullable`1<int> _pageSize;
    public List`1<string> LoadBalancerArns { get; public set; }
    public string Marker { get; public set; }
    public List`1<string> Names { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public List`1<string> get_LoadBalancerArns();
    public void set_LoadBalancerArns(List`1<string> value);
    internal bool IsSetLoadBalancerArns();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeLoadBalancersResponse : AmazonWebServiceResponse {
    private List`1<LoadBalancer> _loadBalancers;
    private string _nextMarker;
    public List`1<LoadBalancer> LoadBalancers { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<LoadBalancer> get_LoadBalancers();
    public void set_LoadBalancers(List`1<LoadBalancer> value);
    internal bool IsSetLoadBalancers();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeRulesRequest : AmazonElasticLoadBalancingV2Request {
    private string _listenerArn;
    private string _marker;
    private Nullable`1<int> _pageSize;
    private List`1<string> _ruleArns;
    public string ListenerArn { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public List`1<string> RuleArns { get; public set; }
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
    public List`1<string> get_RuleArns();
    public void set_RuleArns(List`1<string> value);
    internal bool IsSetRuleArns();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeRulesResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<Rule> _rules;
    public string NextMarker { get; public set; }
    public List`1<Rule> Rules { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<Rule> get_Rules();
    public void set_Rules(List`1<Rule> value);
    internal bool IsSetRules();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeSSLPoliciesRequest : AmazonElasticLoadBalancingV2Request {
    private LoadBalancerTypeEnum _loadBalancerType;
    private string _marker;
    private List`1<string> _names;
    private Nullable`1<int> _pageSize;
    public LoadBalancerTypeEnum LoadBalancerType { get; public set; }
    public string Marker { get; public set; }
    public List`1<string> Names { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public LoadBalancerTypeEnum get_LoadBalancerType();
    public void set_LoadBalancerType(LoadBalancerTypeEnum value);
    internal bool IsSetLoadBalancerType();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeSSLPoliciesResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<SslPolicy> _sslPolicies;
    public string NextMarker { get; public set; }
    public List`1<SslPolicy> SslPolicies { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<SslPolicy> get_SslPolicies();
    public void set_SslPolicies(List`1<SslPolicy> value);
    internal bool IsSetSslPolicies();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTagsRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _resourceArns;
    [AWSPropertyAttribute]
public List`1<string> ResourceArns { get; public set; }
    public List`1<string> get_ResourceArns();
    public void set_ResourceArns(List`1<string> value);
    internal bool IsSetResourceArns();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTagsResponse : AmazonWebServiceResponse {
    private List`1<TagDescription> _tagDescriptions;
    public List`1<TagDescription> TagDescriptions { get; public set; }
    public List`1<TagDescription> get_TagDescriptions();
    public void set_TagDescriptions(List`1<TagDescription> value);
    internal bool IsSetTagDescriptions();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTargetGroupAttributesRequest : AmazonElasticLoadBalancingV2Request {
    private string _targetGroupArn;
    [AWSPropertyAttribute]
public string TargetGroupArn { get; public set; }
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTargetGroupAttributesResponse : AmazonWebServiceResponse {
    private List`1<TargetGroupAttribute> _attributes;
    public List`1<TargetGroupAttribute> Attributes { get; public set; }
    public List`1<TargetGroupAttribute> get_Attributes();
    public void set_Attributes(List`1<TargetGroupAttribute> value);
    internal bool IsSetAttributes();
}
internal class Amazon.ElasticLoadBalancingV2.Model.DescribeTargetGroupsPaginator : object {
    private IAmazonElasticLoadBalancingV2 _client;
    private DescribeTargetGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTargetGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TargetGroup> TargetGroups { get; }
    internal DescribeTargetGroupsPaginator(IAmazonElasticLoadBalancingV2 client, DescribeTargetGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTargetGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TargetGroup> get_TargetGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.ElasticLoadBalancingV2.Model.DescribeTargetGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticLoadBalancingV2-Model-DescribeTargetGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTargetGroupsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticLoadBalancingV2.Model.DescribeTargetGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTargetGroupsRequest : AmazonElasticLoadBalancingV2Request {
    private string _loadBalancerArn;
    private string _marker;
    private List`1<string> _names;
    private Nullable`1<int> _pageSize;
    private List`1<string> _targetGroupArns;
    public string LoadBalancerArn { get; public set; }
    public string Marker { get; public set; }
    public List`1<string> Names { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public List`1<string> TargetGroupArns { get; public set; }
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
    public List`1<string> get_TargetGroupArns();
    public void set_TargetGroupArns(List`1<string> value);
    internal bool IsSetTargetGroupArns();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTargetGroupsResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<TargetGroup> _targetGroups;
    public string NextMarker { get; public set; }
    public List`1<TargetGroup> TargetGroups { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<TargetGroup> get_TargetGroups();
    public void set_TargetGroups(List`1<TargetGroup> value);
    internal bool IsSetTargetGroups();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTargetHealthRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _include;
    private string _targetGroupArn;
    private List`1<TargetDescription> _targets;
    public List`1<string> Include { get; public set; }
    [AWSPropertyAttribute]
public string TargetGroupArn { get; public set; }
    public List`1<TargetDescription> Targets { get; public set; }
    public List`1<string> get_Include();
    public void set_Include(List`1<string> value);
    internal bool IsSetInclude();
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public List`1<TargetDescription> get_Targets();
    public void set_Targets(List`1<TargetDescription> value);
    internal bool IsSetTargets();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTargetHealthResponse : AmazonWebServiceResponse {
    private List`1<TargetHealthDescription> _targetHealthDescriptions;
    public List`1<TargetHealthDescription> TargetHealthDescriptions { get; public set; }
    public List`1<TargetHealthDescription> get_TargetHealthDescriptions();
    public void set_TargetHealthDescriptions(List`1<TargetHealthDescription> value);
    internal bool IsSetTargetHealthDescriptions();
}
internal class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreAssociationsPaginator : object {
    private IAmazonElasticLoadBalancingV2 _client;
    private DescribeTrustStoreAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTrustStoreAssociationsResponse> Responses { get; }
    internal DescribeTrustStoreAssociationsPaginator(IAmazonElasticLoadBalancingV2 client, DescribeTrustStoreAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTrustStoreAssociationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticLoadBalancingV2-Model-DescribeTrustStoreAssociationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeTrustStoreAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreAssociationsRequest : AmazonElasticLoadBalancingV2Request {
    private string _marker;
    private Nullable`1<int> _pageSize;
    private string _trustStoreArn;
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreAssociationsResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<TrustStoreAssociation> _trustStoreAssociations;
    public string NextMarker { get; public set; }
    public List`1<TrustStoreAssociation> TrustStoreAssociations { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<TrustStoreAssociation> get_TrustStoreAssociations();
    public void set_TrustStoreAssociations(List`1<TrustStoreAssociation> value);
    internal bool IsSetTrustStoreAssociations();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreRevocation : object {
    private Nullable`1<long> _numberOfRevokedEntries;
    private Nullable`1<long> _revocationId;
    private RevocationType _revocationType;
    private string _trustStoreArn;
    public Nullable`1<long> NumberOfRevokedEntries { get; public set; }
    public Nullable`1<long> RevocationId { get; public set; }
    public RevocationType RevocationType { get; public set; }
    public string TrustStoreArn { get; public set; }
    public Nullable`1<long> get_NumberOfRevokedEntries();
    public void set_NumberOfRevokedEntries(Nullable`1<long> value);
    internal bool IsSetNumberOfRevokedEntries();
    public Nullable`1<long> get_RevocationId();
    public void set_RevocationId(Nullable`1<long> value);
    internal bool IsSetRevocationId();
    public RevocationType get_RevocationType();
    public void set_RevocationType(RevocationType value);
    internal bool IsSetRevocationType();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
internal class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreRevocationsPaginator : object {
    private IAmazonElasticLoadBalancingV2 _client;
    private DescribeTrustStoreRevocationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTrustStoreRevocationsResponse> Responses { get; }
    internal DescribeTrustStoreRevocationsPaginator(IAmazonElasticLoadBalancingV2 client, DescribeTrustStoreRevocationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTrustStoreRevocationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreRevocationsPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticLoadBalancingV2-Model-DescribeTrustStoreRevocationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeTrustStoreRevocationsResponse> Amazon.Runtime.IPaginator<Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreRevocationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreRevocationsRequest : AmazonElasticLoadBalancingV2Request {
    private string _marker;
    private Nullable`1<int> _pageSize;
    private List`1<long> _revocationIds;
    private string _trustStoreArn;
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public List`1<long> RevocationIds { get; public set; }
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
    public List`1<long> get_RevocationIds();
    public void set_RevocationIds(List`1<long> value);
    internal bool IsSetRevocationIds();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoreRevocationsResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<DescribeTrustStoreRevocation> _trustStoreRevocations;
    public string NextMarker { get; public set; }
    public List`1<DescribeTrustStoreRevocation> TrustStoreRevocations { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<DescribeTrustStoreRevocation> get_TrustStoreRevocations();
    public void set_TrustStoreRevocations(List`1<DescribeTrustStoreRevocation> value);
    internal bool IsSetTrustStoreRevocations();
}
internal class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoresPaginator : object {
    private IAmazonElasticLoadBalancingV2 _client;
    private DescribeTrustStoresRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTrustStoresResponse> Responses { get; }
    internal DescribeTrustStoresPaginator(IAmazonElasticLoadBalancingV2 client, DescribeTrustStoresRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTrustStoresResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoresPaginator/<Amazon-Runtime-IPaginator<Amazon-ElasticLoadBalancingV2-Model-DescribeTrustStoresResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeTrustStoresResponse> Amazon.Runtime.IPaginator<Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoresResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoresRequest : AmazonElasticLoadBalancingV2Request {
    private string _marker;
    private List`1<string> _names;
    private Nullable`1<int> _pageSize;
    private List`1<string> _trustStoreArns;
    public string Marker { get; public set; }
    public List`1<string> Names { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    public List`1<string> TrustStoreArns { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
    public List`1<string> get_TrustStoreArns();
    public void set_TrustStoreArns(List`1<string> value);
    internal bool IsSetTrustStoreArns();
}
public class Amazon.ElasticLoadBalancingV2.Model.DescribeTrustStoresResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<TrustStore> _trustStores;
    public string NextMarker { get; public set; }
    public List`1<TrustStore> TrustStores { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<TrustStore> get_TrustStores();
    public void set_TrustStores(List`1<TrustStore> value);
    internal bool IsSetTrustStores();
}
public class Amazon.ElasticLoadBalancingV2.Model.DuplicateListenerException : AmazonElasticLoadBalancingV2Exception {
    public DuplicateListenerException(string message);
    public DuplicateListenerException(string message, Exception innerException);
    public DuplicateListenerException(Exception innerException);
    public DuplicateListenerException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateListenerException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.DuplicateLoadBalancerNameException : AmazonElasticLoadBalancingV2Exception {
    public DuplicateLoadBalancerNameException(string message);
    public DuplicateLoadBalancerNameException(string message, Exception innerException);
    public DuplicateLoadBalancerNameException(Exception innerException);
    public DuplicateLoadBalancerNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateLoadBalancerNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.DuplicateTagKeysException : AmazonElasticLoadBalancingV2Exception {
    public DuplicateTagKeysException(string message);
    public DuplicateTagKeysException(string message, Exception innerException);
    public DuplicateTagKeysException(Exception innerException);
    public DuplicateTagKeysException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateTagKeysException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.DuplicateTargetGroupNameException : AmazonElasticLoadBalancingV2Exception {
    public DuplicateTargetGroupNameException(string message);
    public DuplicateTargetGroupNameException(string message, Exception innerException);
    public DuplicateTargetGroupNameException(Exception innerException);
    public DuplicateTargetGroupNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateTargetGroupNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.DuplicateTrustStoreNameException : AmazonElasticLoadBalancingV2Exception {
    public DuplicateTrustStoreNameException(string message);
    public DuplicateTrustStoreNameException(string message, Exception innerException);
    public DuplicateTrustStoreNameException(Exception innerException);
    public DuplicateTrustStoreNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateTrustStoreNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.ElasticLoadBalancingV2PaginatorFactory : object {
    private IAmazonElasticLoadBalancingV2 client;
    internal ElasticLoadBalancingV2PaginatorFactory(IAmazonElasticLoadBalancingV2 client);
    public sealed virtual IDescribeListenersPaginator DescribeListeners(DescribeListenersRequest request);
    public sealed virtual IDescribeLoadBalancersPaginator DescribeLoadBalancers(DescribeLoadBalancersRequest request);
    public sealed virtual IDescribeTargetGroupsPaginator DescribeTargetGroups(DescribeTargetGroupsRequest request);
    public sealed virtual IDescribeTrustStoreAssociationsPaginator DescribeTrustStoreAssociations(DescribeTrustStoreAssociationsRequest request);
    public sealed virtual IDescribeTrustStoreRevocationsPaginator DescribeTrustStoreRevocations(DescribeTrustStoreRevocationsRequest request);
    public sealed virtual IDescribeTrustStoresPaginator DescribeTrustStores(DescribeTrustStoresRequest request);
}
public class Amazon.ElasticLoadBalancingV2.Model.FixedResponseActionConfig : object {
    private string _contentType;
    private string _messageBody;
    private string _statusCode;
    [AWSPropertyAttribute]
public string ContentType { get; public set; }
    [AWSPropertyAttribute]
public string MessageBody { get; public set; }
    [AWSPropertyAttribute]
public string StatusCode { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_MessageBody();
    public void set_MessageBody(string value);
    internal bool IsSetMessageBody();
    public string get_StatusCode();
    public void set_StatusCode(string value);
    internal bool IsSetStatusCode();
}
public class Amazon.ElasticLoadBalancingV2.Model.ForwardActionConfig : object {
    private List`1<TargetGroupTuple> _targetGroups;
    private TargetGroupStickinessConfig _targetGroupStickinessConfig;
    public List`1<TargetGroupTuple> TargetGroups { get; public set; }
    public TargetGroupStickinessConfig TargetGroupStickinessConfig { get; public set; }
    public List`1<TargetGroupTuple> get_TargetGroups();
    public void set_TargetGroups(List`1<TargetGroupTuple> value);
    internal bool IsSetTargetGroups();
    public TargetGroupStickinessConfig get_TargetGroupStickinessConfig();
    public void set_TargetGroupStickinessConfig(TargetGroupStickinessConfig value);
    internal bool IsSetTargetGroupStickinessConfig();
}
public class Amazon.ElasticLoadBalancingV2.Model.GetResourcePolicyRequest : AmazonElasticLoadBalancingV2Request {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.GetResourcePolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.ElasticLoadBalancingV2.Model.GetTrustStoreCaCertificatesBundleRequest : AmazonElasticLoadBalancingV2Request {
    private string _trustStoreArn;
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.GetTrustStoreCaCertificatesBundleResponse : AmazonWebServiceResponse {
    private string _location;
    public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.ElasticLoadBalancingV2.Model.GetTrustStoreRevocationContentRequest : AmazonElasticLoadBalancingV2Request {
    private Nullable`1<long> _revocationId;
    private string _trustStoreArn;
    [AWSPropertyAttribute]
public Nullable`1<long> RevocationId { get; public set; }
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public Nullable`1<long> get_RevocationId();
    public void set_RevocationId(Nullable`1<long> value);
    internal bool IsSetRevocationId();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.GetTrustStoreRevocationContentResponse : AmazonWebServiceResponse {
    private string _location;
    public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.ElasticLoadBalancingV2.Model.HealthUnavailableException : AmazonElasticLoadBalancingV2Exception {
    public HealthUnavailableException(string message);
    public HealthUnavailableException(string message, Exception innerException);
    public HealthUnavailableException(Exception innerException);
    public HealthUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public HealthUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.HostHeaderConditionConfig : object {
    private List`1<string> _values;
    public List`1<string> Values { get; public set; }
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.ElasticLoadBalancingV2.Model.HttpHeaderConditionConfig : object {
    private string _httpHeaderName;
    private List`1<string> _values;
    public string HttpHeaderName { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_HttpHeaderName();
    public void set_HttpHeaderName(string value);
    internal bool IsSetHttpHeaderName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.ElasticLoadBalancingV2.Model.HttpRequestMethodConditionConfig : object {
    private List`1<string> _values;
    public List`1<string> Values { get; public set; }
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public interface Amazon.ElasticLoadBalancingV2.Model.IDescribeListenersPaginator {
    public IPaginatedEnumerable`1<DescribeListenersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Listener> Listeners { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeListenersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Listener> get_Listeners();
}
public interface Amazon.ElasticLoadBalancingV2.Model.IDescribeLoadBalancersPaginator {
    public IPaginatedEnumerable`1<DescribeLoadBalancersResponse> Responses { get; }
    public IPaginatedEnumerable`1<LoadBalancer> LoadBalancers { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLoadBalancersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LoadBalancer> get_LoadBalancers();
}
public interface Amazon.ElasticLoadBalancingV2.Model.IDescribeTargetGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeTargetGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TargetGroup> TargetGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTargetGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TargetGroup> get_TargetGroups();
}
public interface Amazon.ElasticLoadBalancingV2.Model.IDescribeTrustStoreAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeTrustStoreAssociationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTrustStoreAssociationsResponse> get_Responses();
}
public interface Amazon.ElasticLoadBalancingV2.Model.IDescribeTrustStoreRevocationsPaginator {
    public IPaginatedEnumerable`1<DescribeTrustStoreRevocationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTrustStoreRevocationsResponse> get_Responses();
}
public interface Amazon.ElasticLoadBalancingV2.Model.IDescribeTrustStoresPaginator {
    public IPaginatedEnumerable`1<DescribeTrustStoresResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTrustStoresResponse> get_Responses();
}
public interface Amazon.ElasticLoadBalancingV2.Model.IElasticLoadBalancingV2PaginatorFactory {
    public abstract virtual IDescribeListenersPaginator DescribeListeners(DescribeListenersRequest request);
    public abstract virtual IDescribeLoadBalancersPaginator DescribeLoadBalancers(DescribeLoadBalancersRequest request);
    public abstract virtual IDescribeTargetGroupsPaginator DescribeTargetGroups(DescribeTargetGroupsRequest request);
    public abstract virtual IDescribeTrustStoreAssociationsPaginator DescribeTrustStoreAssociations(DescribeTrustStoreAssociationsRequest request);
    public abstract virtual IDescribeTrustStoreRevocationsPaginator DescribeTrustStoreRevocations(DescribeTrustStoreRevocationsRequest request);
    public abstract virtual IDescribeTrustStoresPaginator DescribeTrustStores(DescribeTrustStoresRequest request);
}
public class Amazon.ElasticLoadBalancingV2.Model.IncompatibleProtocolsException : AmazonElasticLoadBalancingV2Exception {
    public IncompatibleProtocolsException(string message);
    public IncompatibleProtocolsException(string message, Exception innerException);
    public IncompatibleProtocolsException(Exception innerException);
    public IncompatibleProtocolsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IncompatibleProtocolsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ActionUnmarshaller : object {
    private static ActionUnmarshaller _instance;
    public static ActionUnmarshaller Instance { get; }
    private static ActionUnmarshaller();
    public sealed virtual Action Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Action Unmarshall(JsonUnmarshallerContext context);
    public static ActionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AddListenerCertificatesRequestMarshaller : object {
    private static AddListenerCertificatesRequestMarshaller _instance;
    public static AddListenerCertificatesRequestMarshaller Instance { get; }
    private static AddListenerCertificatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddListenerCertificatesRequest publicRequest);
    internal static AddListenerCertificatesRequestMarshaller GetInstance();
    public static AddListenerCertificatesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AddListenerCertificatesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddListenerCertificatesResponseUnmarshaller _instance;
    public static AddListenerCertificatesResponseUnmarshaller Instance { get; }
    private static AddListenerCertificatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddListenerCertificatesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddListenerCertificatesResponseUnmarshaller GetInstance();
    public static AddListenerCertificatesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AddTagsRequestMarshaller : object {
    private static AddTagsRequestMarshaller _instance;
    public static AddTagsRequestMarshaller Instance { get; }
    private static AddTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsRequest publicRequest);
    internal static AddTagsRequestMarshaller GetInstance();
    public static AddTagsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AddTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddTagsResponseUnmarshaller _instance;
    public static AddTagsResponseUnmarshaller Instance { get; }
    private static AddTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsResponseUnmarshaller GetInstance();
    public static AddTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AddTrustStoreRevocationsRequestMarshaller : object {
    private static AddTrustStoreRevocationsRequestMarshaller _instance;
    public static AddTrustStoreRevocationsRequestMarshaller Instance { get; }
    private static AddTrustStoreRevocationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTrustStoreRevocationsRequest publicRequest);
    internal static AddTrustStoreRevocationsRequestMarshaller GetInstance();
    public static AddTrustStoreRevocationsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AddTrustStoreRevocationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddTrustStoreRevocationsResponseUnmarshaller _instance;
    public static AddTrustStoreRevocationsResponseUnmarshaller Instance { get; }
    private static AddTrustStoreRevocationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddTrustStoreRevocationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTrustStoreRevocationsResponseUnmarshaller GetInstance();
    public static AddTrustStoreRevocationsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AllocationIdNotFoundExceptionUnmarshaller : object {
    private static AllocationIdNotFoundExceptionUnmarshaller _instance;
    public static AllocationIdNotFoundExceptionUnmarshaller Instance { get; }
    private static AllocationIdNotFoundExceptionUnmarshaller();
    public sealed virtual AllocationIdNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AllocationIdNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AllocationIdNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ALPNPolicyNotSupportedExceptionUnmarshaller : object {
    private static ALPNPolicyNotSupportedExceptionUnmarshaller _instance;
    public static ALPNPolicyNotSupportedExceptionUnmarshaller Instance { get; }
    private static ALPNPolicyNotSupportedExceptionUnmarshaller();
    public sealed virtual ALPNPolicyNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ALPNPolicyNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ALPNPolicyNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AnomalyDetectionUnmarshaller : object {
    private static AnomalyDetectionUnmarshaller _instance;
    public static AnomalyDetectionUnmarshaller Instance { get; }
    private static AnomalyDetectionUnmarshaller();
    public sealed virtual AnomalyDetection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnomalyDetection Unmarshall(JsonUnmarshallerContext context);
    public static AnomalyDetectionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AuthenticateCognitoActionConfigUnmarshaller : object {
    private static AuthenticateCognitoActionConfigUnmarshaller _instance;
    public static AuthenticateCognitoActionConfigUnmarshaller Instance { get; }
    private static AuthenticateCognitoActionConfigUnmarshaller();
    public sealed virtual AuthenticateCognitoActionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthenticateCognitoActionConfig Unmarshall(JsonUnmarshallerContext context);
    public static AuthenticateCognitoActionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AuthenticateOidcActionConfigUnmarshaller : object {
    private static AuthenticateOidcActionConfigUnmarshaller _instance;
    public static AuthenticateOidcActionConfigUnmarshaller Instance { get; }
    private static AuthenticateOidcActionConfigUnmarshaller();
    public sealed virtual AuthenticateOidcActionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthenticateOidcActionConfig Unmarshall(JsonUnmarshallerContext context);
    public static AuthenticateOidcActionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AvailabilityZoneNotSupportedExceptionUnmarshaller : object {
    private static AvailabilityZoneNotSupportedExceptionUnmarshaller _instance;
    public static AvailabilityZoneNotSupportedExceptionUnmarshaller Instance { get; }
    private static AvailabilityZoneNotSupportedExceptionUnmarshaller();
    public sealed virtual AvailabilityZoneNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZoneNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AvailabilityZoneNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller : object {
    private static AvailabilityZoneUnmarshaller _instance;
    public static AvailabilityZoneUnmarshaller Instance { get; }
    private static AvailabilityZoneUnmarshaller();
    public sealed virtual AvailabilityZone Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZone Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CaCertificatesBundleNotFoundExceptionUnmarshaller : object {
    private static CaCertificatesBundleNotFoundExceptionUnmarshaller _instance;
    public static CaCertificatesBundleNotFoundExceptionUnmarshaller Instance { get; }
    private static CaCertificatesBundleNotFoundExceptionUnmarshaller();
    public sealed virtual CaCertificatesBundleNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CaCertificatesBundleNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CaCertificatesBundleNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller : object {
    private static CertificateNotFoundExceptionUnmarshaller _instance;
    public static CertificateNotFoundExceptionUnmarshaller Instance { get; }
    private static CertificateNotFoundExceptionUnmarshaller();
    public sealed virtual CertificateNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CertificateNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CertificateNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CertificateUnmarshaller : object {
    private static CertificateUnmarshaller _instance;
    public static CertificateUnmarshaller Instance { get; }
    private static CertificateUnmarshaller();
    public sealed virtual Certificate Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Certificate Unmarshall(JsonUnmarshallerContext context);
    public static CertificateUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CipherUnmarshaller : object {
    private static CipherUnmarshaller _instance;
    public static CipherUnmarshaller Instance { get; }
    private static CipherUnmarshaller();
    public sealed virtual Cipher Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Cipher Unmarshall(JsonUnmarshallerContext context);
    public static CipherUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateListenerRequestMarshaller : object {
    private static CreateListenerRequestMarshaller _instance;
    public static CreateListenerRequestMarshaller Instance { get; }
    private static CreateListenerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateListenerRequest publicRequest);
    internal static CreateListenerRequestMarshaller GetInstance();
    public static CreateListenerRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateListenerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateListenerResponseUnmarshaller _instance;
    public static CreateListenerResponseUnmarshaller Instance { get; }
    private static CreateListenerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateListenerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateListenerResponseUnmarshaller GetInstance();
    public static CreateListenerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateLoadBalancerRequestMarshaller : object {
    private static CreateLoadBalancerRequestMarshaller _instance;
    public static CreateLoadBalancerRequestMarshaller Instance { get; }
    private static CreateLoadBalancerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLoadBalancerRequest publicRequest);
    internal static CreateLoadBalancerRequestMarshaller GetInstance();
    public static CreateLoadBalancerRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateLoadBalancerResponseUnmarshaller _instance;
    public static CreateLoadBalancerResponseUnmarshaller Instance { get; }
    private static CreateLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLoadBalancerResponseUnmarshaller GetInstance();
    public static CreateLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateRuleRequestMarshaller : object {
    private static CreateRuleRequestMarshaller _instance;
    public static CreateRuleRequestMarshaller Instance { get; }
    private static CreateRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRuleRequest publicRequest);
    internal static CreateRuleRequestMarshaller GetInstance();
    public static CreateRuleRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateRuleResponseUnmarshaller _instance;
    public static CreateRuleResponseUnmarshaller Instance { get; }
    private static CreateRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRuleResponseUnmarshaller GetInstance();
    public static CreateRuleResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateTargetGroupRequestMarshaller : object {
    private static CreateTargetGroupRequestMarshaller _instance;
    public static CreateTargetGroupRequestMarshaller Instance { get; }
    private static CreateTargetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTargetGroupRequest publicRequest);
    internal static CreateTargetGroupRequestMarshaller GetInstance();
    public static CreateTargetGroupRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateTargetGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateTargetGroupResponseUnmarshaller _instance;
    public static CreateTargetGroupResponseUnmarshaller Instance { get; }
    private static CreateTargetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateTargetGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTargetGroupResponseUnmarshaller GetInstance();
    public static CreateTargetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateTrustStoreRequestMarshaller : object {
    private static CreateTrustStoreRequestMarshaller _instance;
    public static CreateTrustStoreRequestMarshaller Instance { get; }
    private static CreateTrustStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTrustStoreRequest publicRequest);
    internal static CreateTrustStoreRequestMarshaller GetInstance();
    public static CreateTrustStoreRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.CreateTrustStoreResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateTrustStoreResponseUnmarshaller _instance;
    public static CreateTrustStoreResponseUnmarshaller Instance { get; }
    private static CreateTrustStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateTrustStoreResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTrustStoreResponseUnmarshaller GetInstance();
    public static CreateTrustStoreResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteAssociationSameAccountExceptionUnmarshaller : object {
    private static DeleteAssociationSameAccountExceptionUnmarshaller _instance;
    public static DeleteAssociationSameAccountExceptionUnmarshaller Instance { get; }
    private static DeleteAssociationSameAccountExceptionUnmarshaller();
    public sealed virtual DeleteAssociationSameAccountException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteAssociationSameAccountException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DeleteAssociationSameAccountExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteListenerRequestMarshaller : object {
    private static DeleteListenerRequestMarshaller _instance;
    public static DeleteListenerRequestMarshaller Instance { get; }
    private static DeleteListenerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteListenerRequest publicRequest);
    internal static DeleteListenerRequestMarshaller GetInstance();
    public static DeleteListenerRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteListenerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteListenerResponseUnmarshaller _instance;
    public static DeleteListenerResponseUnmarshaller Instance { get; }
    private static DeleteListenerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteListenerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteListenerResponseUnmarshaller GetInstance();
    public static DeleteListenerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteLoadBalancerRequestMarshaller : object {
    private static DeleteLoadBalancerRequestMarshaller _instance;
    public static DeleteLoadBalancerRequestMarshaller Instance { get; }
    private static DeleteLoadBalancerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLoadBalancerRequest publicRequest);
    internal static DeleteLoadBalancerRequestMarshaller GetInstance();
    public static DeleteLoadBalancerRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteLoadBalancerResponseUnmarshaller _instance;
    public static DeleteLoadBalancerResponseUnmarshaller Instance { get; }
    private static DeleteLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLoadBalancerResponseUnmarshaller GetInstance();
    public static DeleteLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller : object {
    private static DeleteRuleRequestMarshaller _instance;
    public static DeleteRuleRequestMarshaller Instance { get; }
    private static DeleteRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRuleRequest publicRequest);
    internal static DeleteRuleRequestMarshaller GetInstance();
    public static DeleteRuleRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteRuleResponseUnmarshaller _instance;
    public static DeleteRuleResponseUnmarshaller Instance { get; }
    private static DeleteRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRuleResponseUnmarshaller GetInstance();
    public static DeleteRuleResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteSharedTrustStoreAssociationRequestMarshaller : object {
    private static DeleteSharedTrustStoreAssociationRequestMarshaller _instance;
    public static DeleteSharedTrustStoreAssociationRequestMarshaller Instance { get; }
    private static DeleteSharedTrustStoreAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSharedTrustStoreAssociationRequest publicRequest);
    internal static DeleteSharedTrustStoreAssociationRequestMarshaller GetInstance();
    public static DeleteSharedTrustStoreAssociationRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteSharedTrustStoreAssociationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteSharedTrustStoreAssociationResponseUnmarshaller _instance;
    public static DeleteSharedTrustStoreAssociationResponseUnmarshaller Instance { get; }
    private static DeleteSharedTrustStoreAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteSharedTrustStoreAssociationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSharedTrustStoreAssociationResponseUnmarshaller GetInstance();
    public static DeleteSharedTrustStoreAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteTargetGroupRequestMarshaller : object {
    private static DeleteTargetGroupRequestMarshaller _instance;
    public static DeleteTargetGroupRequestMarshaller Instance { get; }
    private static DeleteTargetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTargetGroupRequest publicRequest);
    internal static DeleteTargetGroupRequestMarshaller GetInstance();
    public static DeleteTargetGroupRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteTargetGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteTargetGroupResponseUnmarshaller _instance;
    public static DeleteTargetGroupResponseUnmarshaller Instance { get; }
    private static DeleteTargetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteTargetGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTargetGroupResponseUnmarshaller GetInstance();
    public static DeleteTargetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteTrustStoreRequestMarshaller : object {
    private static DeleteTrustStoreRequestMarshaller _instance;
    public static DeleteTrustStoreRequestMarshaller Instance { get; }
    private static DeleteTrustStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTrustStoreRequest publicRequest);
    internal static DeleteTrustStoreRequestMarshaller GetInstance();
    public static DeleteTrustStoreRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeleteTrustStoreResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteTrustStoreResponseUnmarshaller _instance;
    public static DeleteTrustStoreResponseUnmarshaller Instance { get; }
    private static DeleteTrustStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteTrustStoreResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTrustStoreResponseUnmarshaller GetInstance();
    public static DeleteTrustStoreResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeregisterTargetsRequestMarshaller : object {
    private static DeregisterTargetsRequestMarshaller _instance;
    public static DeregisterTargetsRequestMarshaller Instance { get; }
    private static DeregisterTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterTargetsRequest publicRequest);
    internal static DeregisterTargetsRequestMarshaller GetInstance();
    public static DeregisterTargetsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DeregisterTargetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeregisterTargetsResponseUnmarshaller _instance;
    public static DeregisterTargetsResponseUnmarshaller Instance { get; }
    private static DeregisterTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeregisterTargetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterTargetsResponseUnmarshaller GetInstance();
    public static DeregisterTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeAccountLimitsRequestMarshaller : object {
    private static DescribeAccountLimitsRequestMarshaller _instance;
    public static DescribeAccountLimitsRequestMarshaller Instance { get; }
    private static DescribeAccountLimitsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountLimitsRequest publicRequest);
    internal static DescribeAccountLimitsRequestMarshaller GetInstance();
    public static DescribeAccountLimitsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeAccountLimitsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAccountLimitsResponseUnmarshaller _instance;
    public static DescribeAccountLimitsResponseUnmarshaller Instance { get; }
    private static DescribeAccountLimitsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAccountLimitsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountLimitsResponseUnmarshaller GetInstance();
    public static DescribeAccountLimitsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeListenerCertificatesRequestMarshaller : object {
    private static DescribeListenerCertificatesRequestMarshaller _instance;
    public static DescribeListenerCertificatesRequestMarshaller Instance { get; }
    private static DescribeListenerCertificatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeListenerCertificatesRequest publicRequest);
    internal static DescribeListenerCertificatesRequestMarshaller GetInstance();
    public static DescribeListenerCertificatesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeListenerCertificatesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeListenerCertificatesResponseUnmarshaller _instance;
    public static DescribeListenerCertificatesResponseUnmarshaller Instance { get; }
    private static DescribeListenerCertificatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeListenerCertificatesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeListenerCertificatesResponseUnmarshaller GetInstance();
    public static DescribeListenerCertificatesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeListenersRequestMarshaller : object {
    private static DescribeListenersRequestMarshaller _instance;
    public static DescribeListenersRequestMarshaller Instance { get; }
    private static DescribeListenersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeListenersRequest publicRequest);
    internal static DescribeListenersRequestMarshaller GetInstance();
    public static DescribeListenersRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeListenersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeListenersResponseUnmarshaller _instance;
    public static DescribeListenersResponseUnmarshaller Instance { get; }
    private static DescribeListenersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeListenersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeListenersResponseUnmarshaller GetInstance();
    public static DescribeListenersResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeLoadBalancerAttributesRequestMarshaller : object {
    private static DescribeLoadBalancerAttributesRequestMarshaller _instance;
    public static DescribeLoadBalancerAttributesRequestMarshaller Instance { get; }
    private static DescribeLoadBalancerAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoadBalancerAttributesRequest publicRequest);
    internal static DescribeLoadBalancerAttributesRequestMarshaller GetInstance();
    public static DescribeLoadBalancerAttributesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeLoadBalancerAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLoadBalancerAttributesResponseUnmarshaller _instance;
    public static DescribeLoadBalancerAttributesResponseUnmarshaller Instance { get; }
    private static DescribeLoadBalancerAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLoadBalancerAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoadBalancerAttributesResponseUnmarshaller GetInstance();
    public static DescribeLoadBalancerAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeLoadBalancersRequestMarshaller : object {
    private static DescribeLoadBalancersRequestMarshaller _instance;
    public static DescribeLoadBalancersRequestMarshaller Instance { get; }
    private static DescribeLoadBalancersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoadBalancersRequest publicRequest);
    internal static DescribeLoadBalancersRequestMarshaller GetInstance();
    public static DescribeLoadBalancersRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeLoadBalancersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLoadBalancersResponseUnmarshaller _instance;
    public static DescribeLoadBalancersResponseUnmarshaller Instance { get; }
    private static DescribeLoadBalancersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLoadBalancersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoadBalancersResponseUnmarshaller GetInstance();
    public static DescribeLoadBalancersResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeRulesRequestMarshaller : object {
    private static DescribeRulesRequestMarshaller _instance;
    public static DescribeRulesRequestMarshaller Instance { get; }
    private static DescribeRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRulesRequest publicRequest);
    internal static DescribeRulesRequestMarshaller GetInstance();
    public static DescribeRulesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeRulesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeRulesResponseUnmarshaller _instance;
    public static DescribeRulesResponseUnmarshaller Instance { get; }
    private static DescribeRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeRulesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRulesResponseUnmarshaller GetInstance();
    public static DescribeRulesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeSSLPoliciesRequestMarshaller : object {
    private static DescribeSSLPoliciesRequestMarshaller _instance;
    public static DescribeSSLPoliciesRequestMarshaller Instance { get; }
    private static DescribeSSLPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSSLPoliciesRequest publicRequest);
    internal static DescribeSSLPoliciesRequestMarshaller GetInstance();
    public static DescribeSSLPoliciesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeSSLPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeSSLPoliciesResponseUnmarshaller _instance;
    public static DescribeSSLPoliciesResponseUnmarshaller Instance { get; }
    private static DescribeSSLPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeSSLPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSSLPoliciesResponseUnmarshaller GetInstance();
    public static DescribeSSLPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller : object {
    private static DescribeTagsRequestMarshaller _instance;
    public static DescribeTagsRequestMarshaller Instance { get; }
    private static DescribeTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTagsRequest publicRequest);
    internal static DescribeTagsRequestMarshaller GetInstance();
    public static DescribeTagsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTagsResponseUnmarshaller _instance;
    public static DescribeTagsResponseUnmarshaller Instance { get; }
    private static DescribeTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTagsResponseUnmarshaller GetInstance();
    public static DescribeTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTargetGroupAttributesRequestMarshaller : object {
    private static DescribeTargetGroupAttributesRequestMarshaller _instance;
    public static DescribeTargetGroupAttributesRequestMarshaller Instance { get; }
    private static DescribeTargetGroupAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTargetGroupAttributesRequest publicRequest);
    internal static DescribeTargetGroupAttributesRequestMarshaller GetInstance();
    public static DescribeTargetGroupAttributesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTargetGroupAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTargetGroupAttributesResponseUnmarshaller _instance;
    public static DescribeTargetGroupAttributesResponseUnmarshaller Instance { get; }
    private static DescribeTargetGroupAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTargetGroupAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTargetGroupAttributesResponseUnmarshaller GetInstance();
    public static DescribeTargetGroupAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTargetGroupsRequestMarshaller : object {
    private static DescribeTargetGroupsRequestMarshaller _instance;
    public static DescribeTargetGroupsRequestMarshaller Instance { get; }
    private static DescribeTargetGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTargetGroupsRequest publicRequest);
    internal static DescribeTargetGroupsRequestMarshaller GetInstance();
    public static DescribeTargetGroupsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTargetGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTargetGroupsResponseUnmarshaller _instance;
    public static DescribeTargetGroupsResponseUnmarshaller Instance { get; }
    private static DescribeTargetGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTargetGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTargetGroupsResponseUnmarshaller GetInstance();
    public static DescribeTargetGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTargetHealthRequestMarshaller : object {
    private static DescribeTargetHealthRequestMarshaller _instance;
    public static DescribeTargetHealthRequestMarshaller Instance { get; }
    private static DescribeTargetHealthRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTargetHealthRequest publicRequest);
    internal static DescribeTargetHealthRequestMarshaller GetInstance();
    public static DescribeTargetHealthRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTargetHealthResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTargetHealthResponseUnmarshaller _instance;
    public static DescribeTargetHealthResponseUnmarshaller Instance { get; }
    private static DescribeTargetHealthResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTargetHealthResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTargetHealthResponseUnmarshaller GetInstance();
    public static DescribeTargetHealthResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTrustStoreAssociationsRequestMarshaller : object {
    private static DescribeTrustStoreAssociationsRequestMarshaller _instance;
    public static DescribeTrustStoreAssociationsRequestMarshaller Instance { get; }
    private static DescribeTrustStoreAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrustStoreAssociationsRequest publicRequest);
    internal static DescribeTrustStoreAssociationsRequestMarshaller GetInstance();
    public static DescribeTrustStoreAssociationsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTrustStoreAssociationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTrustStoreAssociationsResponseUnmarshaller _instance;
    public static DescribeTrustStoreAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeTrustStoreAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTrustStoreAssociationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrustStoreAssociationsResponseUnmarshaller GetInstance();
    public static DescribeTrustStoreAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTrustStoreRevocationsRequestMarshaller : object {
    private static DescribeTrustStoreRevocationsRequestMarshaller _instance;
    public static DescribeTrustStoreRevocationsRequestMarshaller Instance { get; }
    private static DescribeTrustStoreRevocationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrustStoreRevocationsRequest publicRequest);
    internal static DescribeTrustStoreRevocationsRequestMarshaller GetInstance();
    public static DescribeTrustStoreRevocationsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTrustStoreRevocationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTrustStoreRevocationsResponseUnmarshaller _instance;
    public static DescribeTrustStoreRevocationsResponseUnmarshaller Instance { get; }
    private static DescribeTrustStoreRevocationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTrustStoreRevocationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrustStoreRevocationsResponseUnmarshaller GetInstance();
    public static DescribeTrustStoreRevocationsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTrustStoreRevocationUnmarshaller : object {
    private static DescribeTrustStoreRevocationUnmarshaller _instance;
    public static DescribeTrustStoreRevocationUnmarshaller Instance { get; }
    private static DescribeTrustStoreRevocationUnmarshaller();
    public sealed virtual DescribeTrustStoreRevocation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DescribeTrustStoreRevocation Unmarshall(JsonUnmarshallerContext context);
    public static DescribeTrustStoreRevocationUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTrustStoresRequestMarshaller : object {
    private static DescribeTrustStoresRequestMarshaller _instance;
    public static DescribeTrustStoresRequestMarshaller Instance { get; }
    private static DescribeTrustStoresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrustStoresRequest publicRequest);
    internal static DescribeTrustStoresRequestMarshaller GetInstance();
    public static DescribeTrustStoresRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DescribeTrustStoresResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTrustStoresResponseUnmarshaller _instance;
    public static DescribeTrustStoresResponseUnmarshaller Instance { get; }
    private static DescribeTrustStoresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTrustStoresResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrustStoresResponseUnmarshaller GetInstance();
    public static DescribeTrustStoresResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DuplicateListenerExceptionUnmarshaller : object {
    private static DuplicateListenerExceptionUnmarshaller _instance;
    public static DuplicateListenerExceptionUnmarshaller Instance { get; }
    private static DuplicateListenerExceptionUnmarshaller();
    public sealed virtual DuplicateListenerException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DuplicateListenerException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateListenerExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DuplicateLoadBalancerNameExceptionUnmarshaller : object {
    private static DuplicateLoadBalancerNameExceptionUnmarshaller _instance;
    public static DuplicateLoadBalancerNameExceptionUnmarshaller Instance { get; }
    private static DuplicateLoadBalancerNameExceptionUnmarshaller();
    public sealed virtual DuplicateLoadBalancerNameException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DuplicateLoadBalancerNameException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateLoadBalancerNameExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DuplicateTagKeysExceptionUnmarshaller : object {
    private static DuplicateTagKeysExceptionUnmarshaller _instance;
    public static DuplicateTagKeysExceptionUnmarshaller Instance { get; }
    private static DuplicateTagKeysExceptionUnmarshaller();
    public sealed virtual DuplicateTagKeysException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DuplicateTagKeysException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateTagKeysExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DuplicateTargetGroupNameExceptionUnmarshaller : object {
    private static DuplicateTargetGroupNameExceptionUnmarshaller _instance;
    public static DuplicateTargetGroupNameExceptionUnmarshaller Instance { get; }
    private static DuplicateTargetGroupNameExceptionUnmarshaller();
    public sealed virtual DuplicateTargetGroupNameException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DuplicateTargetGroupNameException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateTargetGroupNameExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.DuplicateTrustStoreNameExceptionUnmarshaller : object {
    private static DuplicateTrustStoreNameExceptionUnmarshaller _instance;
    public static DuplicateTrustStoreNameExceptionUnmarshaller Instance { get; }
    private static DuplicateTrustStoreNameExceptionUnmarshaller();
    public sealed virtual DuplicateTrustStoreNameException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DuplicateTrustStoreNameException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateTrustStoreNameExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.FixedResponseActionConfigUnmarshaller : object {
    private static FixedResponseActionConfigUnmarshaller _instance;
    public static FixedResponseActionConfigUnmarshaller Instance { get; }
    private static FixedResponseActionConfigUnmarshaller();
    public sealed virtual FixedResponseActionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FixedResponseActionConfig Unmarshall(JsonUnmarshallerContext context);
    public static FixedResponseActionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ForwardActionConfigUnmarshaller : object {
    private static ForwardActionConfigUnmarshaller _instance;
    public static ForwardActionConfigUnmarshaller Instance { get; }
    private static ForwardActionConfigUnmarshaller();
    public sealed virtual ForwardActionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ForwardActionConfig Unmarshall(JsonUnmarshallerContext context);
    public static ForwardActionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller : object {
    private static GetResourcePolicyRequestMarshaller _instance;
    public static GetResourcePolicyRequestMarshaller Instance { get; }
    private static GetResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePolicyRequest publicRequest);
    internal static GetResourcePolicyRequestMarshaller GetInstance();
    public static GetResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetResourcePolicyResponseUnmarshaller _instance;
    public static GetResourcePolicyResponseUnmarshaller Instance { get; }
    private static GetResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetResourcePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePolicyResponseUnmarshaller GetInstance();
    public static GetResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.GetTrustStoreCaCertificatesBundleRequestMarshaller : object {
    private static GetTrustStoreCaCertificatesBundleRequestMarshaller _instance;
    public static GetTrustStoreCaCertificatesBundleRequestMarshaller Instance { get; }
    private static GetTrustStoreCaCertificatesBundleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTrustStoreCaCertificatesBundleRequest publicRequest);
    internal static GetTrustStoreCaCertificatesBundleRequestMarshaller GetInstance();
    public static GetTrustStoreCaCertificatesBundleRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.GetTrustStoreCaCertificatesBundleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetTrustStoreCaCertificatesBundleResponseUnmarshaller _instance;
    public static GetTrustStoreCaCertificatesBundleResponseUnmarshaller Instance { get; }
    private static GetTrustStoreCaCertificatesBundleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetTrustStoreCaCertificatesBundleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTrustStoreCaCertificatesBundleResponseUnmarshaller GetInstance();
    public static GetTrustStoreCaCertificatesBundleResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.GetTrustStoreRevocationContentRequestMarshaller : object {
    private static GetTrustStoreRevocationContentRequestMarshaller _instance;
    public static GetTrustStoreRevocationContentRequestMarshaller Instance { get; }
    private static GetTrustStoreRevocationContentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTrustStoreRevocationContentRequest publicRequest);
    internal static GetTrustStoreRevocationContentRequestMarshaller GetInstance();
    public static GetTrustStoreRevocationContentRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.GetTrustStoreRevocationContentResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetTrustStoreRevocationContentResponseUnmarshaller _instance;
    public static GetTrustStoreRevocationContentResponseUnmarshaller Instance { get; }
    private static GetTrustStoreRevocationContentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetTrustStoreRevocationContentResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTrustStoreRevocationContentResponseUnmarshaller GetInstance();
    public static GetTrustStoreRevocationContentResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.HealthUnavailableExceptionUnmarshaller : object {
    private static HealthUnavailableExceptionUnmarshaller _instance;
    public static HealthUnavailableExceptionUnmarshaller Instance { get; }
    private static HealthUnavailableExceptionUnmarshaller();
    public sealed virtual HealthUnavailableException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HealthUnavailableException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static HealthUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.HostHeaderConditionConfigUnmarshaller : object {
    private static HostHeaderConditionConfigUnmarshaller _instance;
    public static HostHeaderConditionConfigUnmarshaller Instance { get; }
    private static HostHeaderConditionConfigUnmarshaller();
    public sealed virtual HostHeaderConditionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HostHeaderConditionConfig Unmarshall(JsonUnmarshallerContext context);
    public static HostHeaderConditionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.HttpHeaderConditionConfigUnmarshaller : object {
    private static HttpHeaderConditionConfigUnmarshaller _instance;
    public static HttpHeaderConditionConfigUnmarshaller Instance { get; }
    private static HttpHeaderConditionConfigUnmarshaller();
    public sealed virtual HttpHeaderConditionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpHeaderConditionConfig Unmarshall(JsonUnmarshallerContext context);
    public static HttpHeaderConditionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.HttpRequestMethodConditionConfigUnmarshaller : object {
    private static HttpRequestMethodConditionConfigUnmarshaller _instance;
    public static HttpRequestMethodConditionConfigUnmarshaller Instance { get; }
    private static HttpRequestMethodConditionConfigUnmarshaller();
    public sealed virtual HttpRequestMethodConditionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpRequestMethodConditionConfig Unmarshall(JsonUnmarshallerContext context);
    public static HttpRequestMethodConditionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.IncompatibleProtocolsExceptionUnmarshaller : object {
    private static IncompatibleProtocolsExceptionUnmarshaller _instance;
    public static IncompatibleProtocolsExceptionUnmarshaller Instance { get; }
    private static IncompatibleProtocolsExceptionUnmarshaller();
    public sealed virtual IncompatibleProtocolsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IncompatibleProtocolsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IncompatibleProtocolsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidCaCertificatesBundleExceptionUnmarshaller : object {
    private static InvalidCaCertificatesBundleExceptionUnmarshaller _instance;
    public static InvalidCaCertificatesBundleExceptionUnmarshaller Instance { get; }
    private static InvalidCaCertificatesBundleExceptionUnmarshaller();
    public sealed virtual InvalidCaCertificatesBundleException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidCaCertificatesBundleException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCaCertificatesBundleExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidConfigurationRequestExceptionUnmarshaller : object {
    private static InvalidConfigurationRequestExceptionUnmarshaller _instance;
    public static InvalidConfigurationRequestExceptionUnmarshaller Instance { get; }
    private static InvalidConfigurationRequestExceptionUnmarshaller();
    public sealed virtual InvalidConfigurationRequestException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidConfigurationRequestException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidConfigurationRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidLoadBalancerActionExceptionUnmarshaller : object {
    private static InvalidLoadBalancerActionExceptionUnmarshaller _instance;
    public static InvalidLoadBalancerActionExceptionUnmarshaller Instance { get; }
    private static InvalidLoadBalancerActionExceptionUnmarshaller();
    public sealed virtual InvalidLoadBalancerActionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidLoadBalancerActionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidLoadBalancerActionExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidRevocationContentExceptionUnmarshaller : object {
    private static InvalidRevocationContentExceptionUnmarshaller _instance;
    public static InvalidRevocationContentExceptionUnmarshaller Instance { get; }
    private static InvalidRevocationContentExceptionUnmarshaller();
    public sealed virtual InvalidRevocationContentException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidRevocationContentException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRevocationContentExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidSchemeExceptionUnmarshaller : object {
    private static InvalidSchemeExceptionUnmarshaller _instance;
    public static InvalidSchemeExceptionUnmarshaller Instance { get; }
    private static InvalidSchemeExceptionUnmarshaller();
    public sealed virtual InvalidSchemeException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidSchemeException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSchemeExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidSecurityGroupExceptionUnmarshaller : object {
    private static InvalidSecurityGroupExceptionUnmarshaller _instance;
    public static InvalidSecurityGroupExceptionUnmarshaller Instance { get; }
    private static InvalidSecurityGroupExceptionUnmarshaller();
    public sealed virtual InvalidSecurityGroupException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidSecurityGroupException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSecurityGroupExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller : object {
    private static InvalidSubnetExceptionUnmarshaller _instance;
    public static InvalidSubnetExceptionUnmarshaller Instance { get; }
    private static InvalidSubnetExceptionUnmarshaller();
    public sealed virtual InvalidSubnetException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidSubnetException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSubnetExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.InvalidTargetExceptionUnmarshaller : object {
    private static InvalidTargetExceptionUnmarshaller _instance;
    public static InvalidTargetExceptionUnmarshaller Instance { get; }
    private static InvalidTargetExceptionUnmarshaller();
    public sealed virtual InvalidTargetException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidTargetException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTargetExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.LimitUnmarshaller : object {
    private static LimitUnmarshaller _instance;
    public static LimitUnmarshaller Instance { get; }
    private static LimitUnmarshaller();
    public sealed virtual Limit Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Limit Unmarshall(JsonUnmarshallerContext context);
    public static LimitUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ListenerNotFoundExceptionUnmarshaller : object {
    private static ListenerNotFoundExceptionUnmarshaller _instance;
    public static ListenerNotFoundExceptionUnmarshaller Instance { get; }
    private static ListenerNotFoundExceptionUnmarshaller();
    public sealed virtual ListenerNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListenerNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ListenerNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ListenerUnmarshaller : object {
    private static ListenerUnmarshaller _instance;
    public static ListenerUnmarshaller Instance { get; }
    private static ListenerUnmarshaller();
    public sealed virtual Listener Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Listener Unmarshall(JsonUnmarshallerContext context);
    public static ListenerUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.LoadBalancerAddressUnmarshaller : object {
    private static LoadBalancerAddressUnmarshaller _instance;
    public static LoadBalancerAddressUnmarshaller Instance { get; }
    private static LoadBalancerAddressUnmarshaller();
    public sealed virtual LoadBalancerAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancerAddress Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancerAddressUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.LoadBalancerAttributeUnmarshaller : object {
    private static LoadBalancerAttributeUnmarshaller _instance;
    public static LoadBalancerAttributeUnmarshaller Instance { get; }
    private static LoadBalancerAttributeUnmarshaller();
    public sealed virtual LoadBalancerAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancerAttribute Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancerAttributeUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.LoadBalancerNotFoundExceptionUnmarshaller : object {
    private static LoadBalancerNotFoundExceptionUnmarshaller _instance;
    public static LoadBalancerNotFoundExceptionUnmarshaller Instance { get; }
    private static LoadBalancerNotFoundExceptionUnmarshaller();
    public sealed virtual LoadBalancerNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancerNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static LoadBalancerNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.LoadBalancerStateUnmarshaller : object {
    private static LoadBalancerStateUnmarshaller _instance;
    public static LoadBalancerStateUnmarshaller Instance { get; }
    private static LoadBalancerStateUnmarshaller();
    public sealed virtual LoadBalancerState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancerState Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancerStateUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller : object {
    private static LoadBalancerUnmarshaller _instance;
    public static LoadBalancerUnmarshaller Instance { get; }
    private static LoadBalancerUnmarshaller();
    public sealed virtual LoadBalancer Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancer Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancerUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.MatcherUnmarshaller : object {
    private static MatcherUnmarshaller _instance;
    public static MatcherUnmarshaller Instance { get; }
    private static MatcherUnmarshaller();
    public sealed virtual Matcher Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Matcher Unmarshall(JsonUnmarshallerContext context);
    public static MatcherUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyListenerRequestMarshaller : object {
    private static ModifyListenerRequestMarshaller _instance;
    public static ModifyListenerRequestMarshaller Instance { get; }
    private static ModifyListenerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyListenerRequest publicRequest);
    internal static ModifyListenerRequestMarshaller GetInstance();
    public static ModifyListenerRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyListenerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyListenerResponseUnmarshaller _instance;
    public static ModifyListenerResponseUnmarshaller Instance { get; }
    private static ModifyListenerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyListenerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyListenerResponseUnmarshaller GetInstance();
    public static ModifyListenerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyLoadBalancerAttributesRequestMarshaller : object {
    private static ModifyLoadBalancerAttributesRequestMarshaller _instance;
    public static ModifyLoadBalancerAttributesRequestMarshaller Instance { get; }
    private static ModifyLoadBalancerAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyLoadBalancerAttributesRequest publicRequest);
    internal static ModifyLoadBalancerAttributesRequestMarshaller GetInstance();
    public static ModifyLoadBalancerAttributesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyLoadBalancerAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyLoadBalancerAttributesResponseUnmarshaller _instance;
    public static ModifyLoadBalancerAttributesResponseUnmarshaller Instance { get; }
    private static ModifyLoadBalancerAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyLoadBalancerAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyLoadBalancerAttributesResponseUnmarshaller GetInstance();
    public static ModifyLoadBalancerAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyRuleRequestMarshaller : object {
    private static ModifyRuleRequestMarshaller _instance;
    public static ModifyRuleRequestMarshaller Instance { get; }
    private static ModifyRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyRuleRequest publicRequest);
    internal static ModifyRuleRequestMarshaller GetInstance();
    public static ModifyRuleRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyRuleResponseUnmarshaller _instance;
    public static ModifyRuleResponseUnmarshaller Instance { get; }
    private static ModifyRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyRuleResponseUnmarshaller GetInstance();
    public static ModifyRuleResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyTargetGroupAttributesRequestMarshaller : object {
    private static ModifyTargetGroupAttributesRequestMarshaller _instance;
    public static ModifyTargetGroupAttributesRequestMarshaller Instance { get; }
    private static ModifyTargetGroupAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTargetGroupAttributesRequest publicRequest);
    internal static ModifyTargetGroupAttributesRequestMarshaller GetInstance();
    public static ModifyTargetGroupAttributesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyTargetGroupAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyTargetGroupAttributesResponseUnmarshaller _instance;
    public static ModifyTargetGroupAttributesResponseUnmarshaller Instance { get; }
    private static ModifyTargetGroupAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyTargetGroupAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTargetGroupAttributesResponseUnmarshaller GetInstance();
    public static ModifyTargetGroupAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyTargetGroupRequestMarshaller : object {
    private static ModifyTargetGroupRequestMarshaller _instance;
    public static ModifyTargetGroupRequestMarshaller Instance { get; }
    private static ModifyTargetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTargetGroupRequest publicRequest);
    internal static ModifyTargetGroupRequestMarshaller GetInstance();
    public static ModifyTargetGroupRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyTargetGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyTargetGroupResponseUnmarshaller _instance;
    public static ModifyTargetGroupResponseUnmarshaller Instance { get; }
    private static ModifyTargetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyTargetGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTargetGroupResponseUnmarshaller GetInstance();
    public static ModifyTargetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyTrustStoreRequestMarshaller : object {
    private static ModifyTrustStoreRequestMarshaller _instance;
    public static ModifyTrustStoreRequestMarshaller Instance { get; }
    private static ModifyTrustStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTrustStoreRequest publicRequest);
    internal static ModifyTrustStoreRequestMarshaller GetInstance();
    public static ModifyTrustStoreRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ModifyTrustStoreResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyTrustStoreResponseUnmarshaller _instance;
    public static ModifyTrustStoreResponseUnmarshaller Instance { get; }
    private static ModifyTrustStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyTrustStoreResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTrustStoreResponseUnmarshaller GetInstance();
    public static ModifyTrustStoreResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.MutualAuthenticationAttributesUnmarshaller : object {
    private static MutualAuthenticationAttributesUnmarshaller _instance;
    public static MutualAuthenticationAttributesUnmarshaller Instance { get; }
    private static MutualAuthenticationAttributesUnmarshaller();
    public sealed virtual MutualAuthenticationAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MutualAuthenticationAttributes Unmarshall(JsonUnmarshallerContext context);
    public static MutualAuthenticationAttributesUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.OperationNotPermittedExceptionUnmarshaller : object {
    private static OperationNotPermittedExceptionUnmarshaller _instance;
    public static OperationNotPermittedExceptionUnmarshaller Instance { get; }
    private static OperationNotPermittedExceptionUnmarshaller();
    public sealed virtual OperationNotPermittedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OperationNotPermittedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OperationNotPermittedExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.PathPatternConditionConfigUnmarshaller : object {
    private static PathPatternConditionConfigUnmarshaller _instance;
    public static PathPatternConditionConfigUnmarshaller Instance { get; }
    private static PathPatternConditionConfigUnmarshaller();
    public sealed virtual PathPatternConditionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PathPatternConditionConfig Unmarshall(JsonUnmarshallerContext context);
    public static PathPatternConditionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.PriorityInUseExceptionUnmarshaller : object {
    private static PriorityInUseExceptionUnmarshaller _instance;
    public static PriorityInUseExceptionUnmarshaller Instance { get; }
    private static PriorityInUseExceptionUnmarshaller();
    public sealed virtual PriorityInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PriorityInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static PriorityInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.QueryStringConditionConfigUnmarshaller : object {
    private static QueryStringConditionConfigUnmarshaller _instance;
    public static QueryStringConditionConfigUnmarshaller Instance { get; }
    private static QueryStringConditionConfigUnmarshaller();
    public sealed virtual QueryStringConditionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryStringConditionConfig Unmarshall(JsonUnmarshallerContext context);
    public static QueryStringConditionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.QueryStringKeyValuePairUnmarshaller : object {
    private static QueryStringKeyValuePairUnmarshaller _instance;
    public static QueryStringKeyValuePairUnmarshaller Instance { get; }
    private static QueryStringKeyValuePairUnmarshaller();
    public sealed virtual QueryStringKeyValuePair Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryStringKeyValuePair Unmarshall(JsonUnmarshallerContext context);
    public static QueryStringKeyValuePairUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RedirectActionConfigUnmarshaller : object {
    private static RedirectActionConfigUnmarshaller _instance;
    public static RedirectActionConfigUnmarshaller Instance { get; }
    private static RedirectActionConfigUnmarshaller();
    public sealed virtual RedirectActionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedirectActionConfig Unmarshall(JsonUnmarshallerContext context);
    public static RedirectActionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RegisterTargetsRequestMarshaller : object {
    private static RegisterTargetsRequestMarshaller _instance;
    public static RegisterTargetsRequestMarshaller Instance { get; }
    private static RegisterTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterTargetsRequest publicRequest);
    internal static RegisterTargetsRequestMarshaller GetInstance();
    public static RegisterTargetsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RegisterTargetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RegisterTargetsResponseUnmarshaller _instance;
    public static RegisterTargetsResponseUnmarshaller Instance { get; }
    private static RegisterTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RegisterTargetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterTargetsResponseUnmarshaller GetInstance();
    public static RegisterTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RemoveListenerCertificatesRequestMarshaller : object {
    private static RemoveListenerCertificatesRequestMarshaller _instance;
    public static RemoveListenerCertificatesRequestMarshaller Instance { get; }
    private static RemoveListenerCertificatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveListenerCertificatesRequest publicRequest);
    internal static RemoveListenerCertificatesRequestMarshaller GetInstance();
    public static RemoveListenerCertificatesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RemoveListenerCertificatesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveListenerCertificatesResponseUnmarshaller _instance;
    public static RemoveListenerCertificatesResponseUnmarshaller Instance { get; }
    private static RemoveListenerCertificatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveListenerCertificatesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveListenerCertificatesResponseUnmarshaller GetInstance();
    public static RemoveListenerCertificatesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RemoveTagsRequestMarshaller : object {
    private static RemoveTagsRequestMarshaller _instance;
    public static RemoveTagsRequestMarshaller Instance { get; }
    private static RemoveTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsRequest publicRequest);
    internal static RemoveTagsRequestMarshaller GetInstance();
    public static RemoveTagsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RemoveTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveTagsResponseUnmarshaller _instance;
    public static RemoveTagsResponseUnmarshaller Instance { get; }
    private static RemoveTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsResponseUnmarshaller GetInstance();
    public static RemoveTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RemoveTrustStoreRevocationsRequestMarshaller : object {
    private static RemoveTrustStoreRevocationsRequestMarshaller _instance;
    public static RemoveTrustStoreRevocationsRequestMarshaller Instance { get; }
    private static RemoveTrustStoreRevocationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTrustStoreRevocationsRequest publicRequest);
    internal static RemoveTrustStoreRevocationsRequestMarshaller GetInstance();
    public static RemoveTrustStoreRevocationsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RemoveTrustStoreRevocationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveTrustStoreRevocationsResponseUnmarshaller _instance;
    public static RemoveTrustStoreRevocationsResponseUnmarshaller Instance { get; }
    private static RemoveTrustStoreRevocationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveTrustStoreRevocationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTrustStoreRevocationsResponseUnmarshaller GetInstance();
    public static RemoveTrustStoreRevocationsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller : object {
    private static ResourceInUseExceptionUnmarshaller _instance;
    public static ResourceInUseExceptionUnmarshaller Instance { get; }
    private static ResourceInUseExceptionUnmarshaller();
    public sealed virtual ResourceInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RevocationContentNotFoundExceptionUnmarshaller : object {
    private static RevocationContentNotFoundExceptionUnmarshaller _instance;
    public static RevocationContentNotFoundExceptionUnmarshaller Instance { get; }
    private static RevocationContentNotFoundExceptionUnmarshaller();
    public sealed virtual RevocationContentNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RevocationContentNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RevocationContentNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RevocationIdNotFoundExceptionUnmarshaller : object {
    private static RevocationIdNotFoundExceptionUnmarshaller _instance;
    public static RevocationIdNotFoundExceptionUnmarshaller Instance { get; }
    private static RevocationIdNotFoundExceptionUnmarshaller();
    public sealed virtual RevocationIdNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RevocationIdNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RevocationIdNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RuleConditionUnmarshaller : object {
    private static RuleConditionUnmarshaller _instance;
    public static RuleConditionUnmarshaller Instance { get; }
    private static RuleConditionUnmarshaller();
    public sealed virtual RuleCondition Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleCondition Unmarshall(JsonUnmarshallerContext context);
    public static RuleConditionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RuleNotFoundExceptionUnmarshaller : object {
    private static RuleNotFoundExceptionUnmarshaller _instance;
    public static RuleNotFoundExceptionUnmarshaller Instance { get; }
    private static RuleNotFoundExceptionUnmarshaller();
    public sealed virtual RuleNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RuleNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.RuleUnmarshaller : object {
    private static RuleUnmarshaller _instance;
    public static RuleUnmarshaller Instance { get; }
    private static RuleUnmarshaller();
    public sealed virtual Rule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Rule Unmarshall(JsonUnmarshallerContext context);
    public static RuleUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetIpAddressTypeRequestMarshaller : object {
    private static SetIpAddressTypeRequestMarshaller _instance;
    public static SetIpAddressTypeRequestMarshaller Instance { get; }
    private static SetIpAddressTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIpAddressTypeRequest publicRequest);
    internal static SetIpAddressTypeRequestMarshaller GetInstance();
    public static SetIpAddressTypeRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetIpAddressTypeResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIpAddressTypeResponseUnmarshaller _instance;
    public static SetIpAddressTypeResponseUnmarshaller Instance { get; }
    private static SetIpAddressTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIpAddressTypeResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIpAddressTypeResponseUnmarshaller GetInstance();
    public static SetIpAddressTypeResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetRulePrioritiesRequestMarshaller : object {
    private static SetRulePrioritiesRequestMarshaller _instance;
    public static SetRulePrioritiesRequestMarshaller Instance { get; }
    private static SetRulePrioritiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetRulePrioritiesRequest publicRequest);
    internal static SetRulePrioritiesRequestMarshaller GetInstance();
    public static SetRulePrioritiesRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetRulePrioritiesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetRulePrioritiesResponseUnmarshaller _instance;
    public static SetRulePrioritiesResponseUnmarshaller Instance { get; }
    private static SetRulePrioritiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetRulePrioritiesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetRulePrioritiesResponseUnmarshaller GetInstance();
    public static SetRulePrioritiesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetSecurityGroupsRequestMarshaller : object {
    private static SetSecurityGroupsRequestMarshaller _instance;
    public static SetSecurityGroupsRequestMarshaller Instance { get; }
    private static SetSecurityGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetSecurityGroupsRequest publicRequest);
    internal static SetSecurityGroupsRequestMarshaller GetInstance();
    public static SetSecurityGroupsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetSecurityGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetSecurityGroupsResponseUnmarshaller _instance;
    public static SetSecurityGroupsResponseUnmarshaller Instance { get; }
    private static SetSecurityGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetSecurityGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetSecurityGroupsResponseUnmarshaller GetInstance();
    public static SetSecurityGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetSubnetsRequestMarshaller : object {
    private static SetSubnetsRequestMarshaller _instance;
    public static SetSubnetsRequestMarshaller Instance { get; }
    private static SetSubnetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetSubnetsRequest publicRequest);
    internal static SetSubnetsRequestMarshaller GetInstance();
    public static SetSubnetsRequestMarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SetSubnetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetSubnetsResponseUnmarshaller _instance;
    public static SetSubnetsResponseUnmarshaller Instance { get; }
    private static SetSubnetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetSubnetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetSubnetsResponseUnmarshaller GetInstance();
    public static SetSubnetsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SourceIpConditionConfigUnmarshaller : object {
    private static SourceIpConditionConfigUnmarshaller _instance;
    public static SourceIpConditionConfigUnmarshaller Instance { get; }
    private static SourceIpConditionConfigUnmarshaller();
    public sealed virtual SourceIpConditionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceIpConditionConfig Unmarshall(JsonUnmarshallerContext context);
    public static SourceIpConditionConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SSLPolicyNotFoundExceptionUnmarshaller : object {
    private static SSLPolicyNotFoundExceptionUnmarshaller _instance;
    public static SSLPolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static SSLPolicyNotFoundExceptionUnmarshaller();
    public sealed virtual SSLPolicyNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SSLPolicyNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SSLPolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SslPolicyUnmarshaller : object {
    private static SslPolicyUnmarshaller _instance;
    public static SslPolicyUnmarshaller Instance { get; }
    private static SslPolicyUnmarshaller();
    public sealed virtual SslPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SslPolicy Unmarshall(JsonUnmarshallerContext context);
    public static SslPolicyUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.SubnetNotFoundExceptionUnmarshaller : object {
    private static SubnetNotFoundExceptionUnmarshaller _instance;
    public static SubnetNotFoundExceptionUnmarshaller Instance { get; }
    private static SubnetNotFoundExceptionUnmarshaller();
    public sealed virtual SubnetNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubnetNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubnetNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller : object {
    private static TagDescriptionUnmarshaller _instance;
    public static TagDescriptionUnmarshaller Instance { get; }
    private static TagDescriptionUnmarshaller();
    public sealed virtual TagDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TagDescription Unmarshall(JsonUnmarshallerContext context);
    public static TagDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetDescriptionUnmarshaller : object {
    private static TargetDescriptionUnmarshaller _instance;
    public static TargetDescriptionUnmarshaller Instance { get; }
    private static TargetDescriptionUnmarshaller();
    public sealed virtual TargetDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetDescription Unmarshall(JsonUnmarshallerContext context);
    public static TargetDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetGroupAssociationLimitExceptionUnmarshaller : object {
    private static TargetGroupAssociationLimitExceptionUnmarshaller _instance;
    public static TargetGroupAssociationLimitExceptionUnmarshaller Instance { get; }
    private static TargetGroupAssociationLimitExceptionUnmarshaller();
    public sealed virtual TargetGroupAssociationLimitException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroupAssociationLimitException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TargetGroupAssociationLimitExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetGroupAttributeUnmarshaller : object {
    private static TargetGroupAttributeUnmarshaller _instance;
    public static TargetGroupAttributeUnmarshaller Instance { get; }
    private static TargetGroupAttributeUnmarshaller();
    public sealed virtual TargetGroupAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroupAttribute Unmarshall(JsonUnmarshallerContext context);
    public static TargetGroupAttributeUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetGroupNotFoundExceptionUnmarshaller : object {
    private static TargetGroupNotFoundExceptionUnmarshaller _instance;
    public static TargetGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static TargetGroupNotFoundExceptionUnmarshaller();
    public sealed virtual TargetGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TargetGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetGroupStickinessConfigUnmarshaller : object {
    private static TargetGroupStickinessConfigUnmarshaller _instance;
    public static TargetGroupStickinessConfigUnmarshaller Instance { get; }
    private static TargetGroupStickinessConfigUnmarshaller();
    public sealed virtual TargetGroupStickinessConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroupStickinessConfig Unmarshall(JsonUnmarshallerContext context);
    public static TargetGroupStickinessConfigUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetGroupTupleUnmarshaller : object {
    private static TargetGroupTupleUnmarshaller _instance;
    public static TargetGroupTupleUnmarshaller Instance { get; }
    private static TargetGroupTupleUnmarshaller();
    public sealed virtual TargetGroupTuple Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroupTuple Unmarshall(JsonUnmarshallerContext context);
    public static TargetGroupTupleUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetGroupUnmarshaller : object {
    private static TargetGroupUnmarshaller _instance;
    public static TargetGroupUnmarshaller Instance { get; }
    private static TargetGroupUnmarshaller();
    public sealed virtual TargetGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetGroup Unmarshall(JsonUnmarshallerContext context);
    public static TargetGroupUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetHealthDescriptionUnmarshaller : object {
    private static TargetHealthDescriptionUnmarshaller _instance;
    public static TargetHealthDescriptionUnmarshaller Instance { get; }
    private static TargetHealthDescriptionUnmarshaller();
    public sealed virtual TargetHealthDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetHealthDescription Unmarshall(JsonUnmarshallerContext context);
    public static TargetHealthDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TargetHealthUnmarshaller : object {
    private static TargetHealthUnmarshaller _instance;
    public static TargetHealthUnmarshaller Instance { get; }
    private static TargetHealthUnmarshaller();
    public sealed virtual TargetHealth Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetHealth Unmarshall(JsonUnmarshallerContext context);
    public static TargetHealthUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyActionsExceptionUnmarshaller : object {
    private static TooManyActionsExceptionUnmarshaller _instance;
    public static TooManyActionsExceptionUnmarshaller Instance { get; }
    private static TooManyActionsExceptionUnmarshaller();
    public sealed virtual TooManyActionsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyActionsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyActionsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyCertificatesExceptionUnmarshaller : object {
    private static TooManyCertificatesExceptionUnmarshaller _instance;
    public static TooManyCertificatesExceptionUnmarshaller Instance { get; }
    private static TooManyCertificatesExceptionUnmarshaller();
    public sealed virtual TooManyCertificatesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCertificatesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCertificatesExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyListenersExceptionUnmarshaller : object {
    private static TooManyListenersExceptionUnmarshaller _instance;
    public static TooManyListenersExceptionUnmarshaller Instance { get; }
    private static TooManyListenersExceptionUnmarshaller();
    public sealed virtual TooManyListenersException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyListenersException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyListenersExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyLoadBalancersExceptionUnmarshaller : object {
    private static TooManyLoadBalancersExceptionUnmarshaller _instance;
    public static TooManyLoadBalancersExceptionUnmarshaller Instance { get; }
    private static TooManyLoadBalancersExceptionUnmarshaller();
    public sealed virtual TooManyLoadBalancersException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyLoadBalancersException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyLoadBalancersExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyRegistrationsForTargetIdExceptionUnmarshaller : object {
    private static TooManyRegistrationsForTargetIdExceptionUnmarshaller _instance;
    public static TooManyRegistrationsForTargetIdExceptionUnmarshaller Instance { get; }
    private static TooManyRegistrationsForTargetIdExceptionUnmarshaller();
    public sealed virtual TooManyRegistrationsForTargetIdException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyRegistrationsForTargetIdException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRegistrationsForTargetIdExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyRulesExceptionUnmarshaller : object {
    private static TooManyRulesExceptionUnmarshaller _instance;
    public static TooManyRulesExceptionUnmarshaller Instance { get; }
    private static TooManyRulesExceptionUnmarshaller();
    public sealed virtual TooManyRulesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyRulesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRulesExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller : object {
    private static TooManyTagsExceptionUnmarshaller _instance;
    public static TooManyTagsExceptionUnmarshaller Instance { get; }
    private static TooManyTagsExceptionUnmarshaller();
    public sealed virtual TooManyTagsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyTagsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTagsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyTargetGroupsExceptionUnmarshaller : object {
    private static TooManyTargetGroupsExceptionUnmarshaller _instance;
    public static TooManyTargetGroupsExceptionUnmarshaller Instance { get; }
    private static TooManyTargetGroupsExceptionUnmarshaller();
    public sealed virtual TooManyTargetGroupsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyTargetGroupsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTargetGroupsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyTargetsExceptionUnmarshaller : object {
    private static TooManyTargetsExceptionUnmarshaller _instance;
    public static TooManyTargetsExceptionUnmarshaller Instance { get; }
    private static TooManyTargetsExceptionUnmarshaller();
    public sealed virtual TooManyTargetsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyTargetsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTargetsExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyTrustStoreRevocationEntriesExceptionUnmarshaller : object {
    private static TooManyTrustStoreRevocationEntriesExceptionUnmarshaller _instance;
    public static TooManyTrustStoreRevocationEntriesExceptionUnmarshaller Instance { get; }
    private static TooManyTrustStoreRevocationEntriesExceptionUnmarshaller();
    public sealed virtual TooManyTrustStoreRevocationEntriesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyTrustStoreRevocationEntriesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTrustStoreRevocationEntriesExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyTrustStoresExceptionUnmarshaller : object {
    private static TooManyTrustStoresExceptionUnmarshaller _instance;
    public static TooManyTrustStoresExceptionUnmarshaller Instance { get; }
    private static TooManyTrustStoresExceptionUnmarshaller();
    public sealed virtual TooManyTrustStoresException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyTrustStoresException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTrustStoresExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TooManyUniqueTargetGroupsPerLoadBalancerExceptionUnmarshaller : object {
    private static TooManyUniqueTargetGroupsPerLoadBalancerExceptionUnmarshaller _instance;
    public static TooManyUniqueTargetGroupsPerLoadBalancerExceptionUnmarshaller Instance { get; }
    private static TooManyUniqueTargetGroupsPerLoadBalancerExceptionUnmarshaller();
    public sealed virtual TooManyUniqueTargetGroupsPerLoadBalancerException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyUniqueTargetGroupsPerLoadBalancerException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyUniqueTargetGroupsPerLoadBalancerExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TrustStoreAssociationNotFoundExceptionUnmarshaller : object {
    private static TrustStoreAssociationNotFoundExceptionUnmarshaller _instance;
    public static TrustStoreAssociationNotFoundExceptionUnmarshaller Instance { get; }
    private static TrustStoreAssociationNotFoundExceptionUnmarshaller();
    public sealed virtual TrustStoreAssociationNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustStoreAssociationNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrustStoreAssociationNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TrustStoreAssociationUnmarshaller : object {
    private static TrustStoreAssociationUnmarshaller _instance;
    public static TrustStoreAssociationUnmarshaller Instance { get; }
    private static TrustStoreAssociationUnmarshaller();
    public sealed virtual TrustStoreAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustStoreAssociation Unmarshall(JsonUnmarshallerContext context);
    public static TrustStoreAssociationUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TrustStoreInUseExceptionUnmarshaller : object {
    private static TrustStoreInUseExceptionUnmarshaller _instance;
    public static TrustStoreInUseExceptionUnmarshaller Instance { get; }
    private static TrustStoreInUseExceptionUnmarshaller();
    public sealed virtual TrustStoreInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustStoreInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrustStoreInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TrustStoreNotFoundExceptionUnmarshaller : object {
    private static TrustStoreNotFoundExceptionUnmarshaller _instance;
    public static TrustStoreNotFoundExceptionUnmarshaller Instance { get; }
    private static TrustStoreNotFoundExceptionUnmarshaller();
    public sealed virtual TrustStoreNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustStoreNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrustStoreNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TrustStoreNotReadyExceptionUnmarshaller : object {
    private static TrustStoreNotReadyExceptionUnmarshaller _instance;
    public static TrustStoreNotReadyExceptionUnmarshaller Instance { get; }
    private static TrustStoreNotReadyExceptionUnmarshaller();
    public sealed virtual TrustStoreNotReadyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustStoreNotReadyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrustStoreNotReadyExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TrustStoreRevocationUnmarshaller : object {
    private static TrustStoreRevocationUnmarshaller _instance;
    public static TrustStoreRevocationUnmarshaller Instance { get; }
    private static TrustStoreRevocationUnmarshaller();
    public sealed virtual TrustStoreRevocation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustStoreRevocation Unmarshall(JsonUnmarshallerContext context);
    public static TrustStoreRevocationUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.TrustStoreUnmarshaller : object {
    private static TrustStoreUnmarshaller _instance;
    public static TrustStoreUnmarshaller Instance { get; }
    private static TrustStoreUnmarshaller();
    public sealed virtual TrustStore Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustStore Unmarshall(JsonUnmarshallerContext context);
    public static TrustStoreUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.Internal.MarshallTransformations.UnsupportedProtocolExceptionUnmarshaller : object {
    private static UnsupportedProtocolExceptionUnmarshaller _instance;
    public static UnsupportedProtocolExceptionUnmarshaller Instance { get; }
    private static UnsupportedProtocolExceptionUnmarshaller();
    public sealed virtual UnsupportedProtocolException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsupportedProtocolException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedProtocolExceptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidCaCertificatesBundleException : AmazonElasticLoadBalancingV2Exception {
    public InvalidCaCertificatesBundleException(string message);
    public InvalidCaCertificatesBundleException(string message, Exception innerException);
    public InvalidCaCertificatesBundleException(Exception innerException);
    public InvalidCaCertificatesBundleException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCaCertificatesBundleException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidConfigurationRequestException : AmazonElasticLoadBalancingV2Exception {
    public InvalidConfigurationRequestException(string message);
    public InvalidConfigurationRequestException(string message, Exception innerException);
    public InvalidConfigurationRequestException(Exception innerException);
    public InvalidConfigurationRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidConfigurationRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidLoadBalancerActionException : AmazonElasticLoadBalancingV2Exception {
    public InvalidLoadBalancerActionException(string message);
    public InvalidLoadBalancerActionException(string message, Exception innerException);
    public InvalidLoadBalancerActionException(Exception innerException);
    public InvalidLoadBalancerActionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidLoadBalancerActionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidRevocationContentException : AmazonElasticLoadBalancingV2Exception {
    public InvalidRevocationContentException(string message);
    public InvalidRevocationContentException(string message, Exception innerException);
    public InvalidRevocationContentException(Exception innerException);
    public InvalidRevocationContentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRevocationContentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidSchemeException : AmazonElasticLoadBalancingV2Exception {
    public InvalidSchemeException(string message);
    public InvalidSchemeException(string message, Exception innerException);
    public InvalidSchemeException(Exception innerException);
    public InvalidSchemeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSchemeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidSecurityGroupException : AmazonElasticLoadBalancingV2Exception {
    public InvalidSecurityGroupException(string message);
    public InvalidSecurityGroupException(string message, Exception innerException);
    public InvalidSecurityGroupException(Exception innerException);
    public InvalidSecurityGroupException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSecurityGroupException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidSubnetException : AmazonElasticLoadBalancingV2Exception {
    public InvalidSubnetException(string message);
    public InvalidSubnetException(string message, Exception innerException);
    public InvalidSubnetException(Exception innerException);
    public InvalidSubnetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSubnetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.InvalidTargetException : AmazonElasticLoadBalancingV2Exception {
    public InvalidTargetException(string message);
    public InvalidTargetException(string message, Exception innerException);
    public InvalidTargetException(Exception innerException);
    public InvalidTargetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTargetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.Limit : object {
    private string _max;
    private string _name;
    public string Max { get; public set; }
    public string Name { get; public set; }
    public string get_Max();
    public void set_Max(string value);
    internal bool IsSetMax();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.ElasticLoadBalancingV2.Model.Listener : object {
    private List`1<string> _alpnPolicy;
    private List`1<Certificate> _certificates;
    private List`1<Action> _defaultActions;
    private string _listenerArn;
    private string _loadBalancerArn;
    private MutualAuthenticationAttributes _mutualAuthentication;
    private Nullable`1<int> _port;
    private ProtocolEnum _protocol;
    private string _sslPolicy;
    public List`1<string> AlpnPolicy { get; public set; }
    public List`1<Certificate> Certificates { get; public set; }
    public List`1<Action> DefaultActions { get; public set; }
    public string ListenerArn { get; public set; }
    public string LoadBalancerArn { get; public set; }
    public MutualAuthenticationAttributes MutualAuthentication { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public ProtocolEnum Protocol { get; public set; }
    public string SslPolicy { get; public set; }
    public List`1<string> get_AlpnPolicy();
    public void set_AlpnPolicy(List`1<string> value);
    internal bool IsSetAlpnPolicy();
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public List`1<Action> get_DefaultActions();
    public void set_DefaultActions(List`1<Action> value);
    internal bool IsSetDefaultActions();
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public MutualAuthenticationAttributes get_MutualAuthentication();
    public void set_MutualAuthentication(MutualAuthenticationAttributes value);
    internal bool IsSetMutualAuthentication();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public ProtocolEnum get_Protocol();
    public void set_Protocol(ProtocolEnum value);
    internal bool IsSetProtocol();
    public string get_SslPolicy();
    public void set_SslPolicy(string value);
    internal bool IsSetSslPolicy();
}
public class Amazon.ElasticLoadBalancingV2.Model.ListenerNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public ListenerNotFoundException(string message);
    public ListenerNotFoundException(string message, Exception innerException);
    public ListenerNotFoundException(Exception innerException);
    public ListenerNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ListenerNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.LoadBalancer : object {
    private List`1<AvailabilityZone> _availabilityZones;
    private string _canonicalHostedZoneId;
    private Nullable`1<DateTime> _createdTime;
    private string _customerOwnedIpv4Pool;
    private string _dnsName;
    private string _enforceSecurityGroupInboundRulesOnPrivateLinkTraffic;
    private IpAddressType _ipAddressType;
    private string _loadBalancerArn;
    private string _loadBalancerName;
    private LoadBalancerSchemeEnum _scheme;
    private List`1<string> _securityGroups;
    private LoadBalancerState _state;
    private LoadBalancerTypeEnum _type;
    private string _vpcId;
    public List`1<AvailabilityZone> AvailabilityZones { get; public set; }
    public string CanonicalHostedZoneId { get; public set; }
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string CustomerOwnedIpv4Pool { get; public set; }
    public string DNSName { get; public set; }
    public string EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic { get; public set; }
    public IpAddressType IpAddressType { get; public set; }
    public string LoadBalancerArn { get; public set; }
    public string LoadBalancerName { get; public set; }
    public LoadBalancerSchemeEnum Scheme { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public LoadBalancerState State { get; public set; }
    public LoadBalancerTypeEnum Type { get; public set; }
    public string VpcId { get; public set; }
    public List`1<AvailabilityZone> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<AvailabilityZone> value);
    internal bool IsSetAvailabilityZones();
    public string get_CanonicalHostedZoneId();
    public void set_CanonicalHostedZoneId(string value);
    internal bool IsSetCanonicalHostedZoneId();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_CustomerOwnedIpv4Pool();
    public void set_CustomerOwnedIpv4Pool(string value);
    internal bool IsSetCustomerOwnedIpv4Pool();
    public string get_DNSName();
    public void set_DNSName(string value);
    internal bool IsSetDNSName();
    public string get_EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic();
    public void set_EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic(string value);
    internal bool IsSetEnforceSecurityGroupInboundRulesOnPrivateLinkTraffic();
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public LoadBalancerSchemeEnum get_Scheme();
    public void set_Scheme(LoadBalancerSchemeEnum value);
    internal bool IsSetScheme();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public LoadBalancerState get_State();
    public void set_State(LoadBalancerState value);
    internal bool IsSetState();
    public LoadBalancerTypeEnum get_Type();
    public void set_Type(LoadBalancerTypeEnum value);
    internal bool IsSetType();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.ElasticLoadBalancingV2.Model.LoadBalancerAddress : object {
    private string _allocationId;
    private string _ipAddress;
    private string _iPv6Address;
    private string _privateIPv4Address;
    public string AllocationId { get; public set; }
    public string IpAddress { get; public set; }
    public string IPv6Address { get; public set; }
    public string PrivateIPv4Address { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public string get_IPv6Address();
    public void set_IPv6Address(string value);
    internal bool IsSetIPv6Address();
    public string get_PrivateIPv4Address();
    public void set_PrivateIPv4Address(string value);
    internal bool IsSetPrivateIPv4Address();
}
public class Amazon.ElasticLoadBalancingV2.Model.LoadBalancerAttribute : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ElasticLoadBalancingV2.Model.LoadBalancerNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public LoadBalancerNotFoundException(string message);
    public LoadBalancerNotFoundException(string message, Exception innerException);
    public LoadBalancerNotFoundException(Exception innerException);
    public LoadBalancerNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LoadBalancerNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.LoadBalancerState : object {
    private LoadBalancerStateEnum _code;
    private string _reason;
    public LoadBalancerStateEnum Code { get; public set; }
    public string Reason { get; public set; }
    public LoadBalancerStateEnum get_Code();
    public void set_Code(LoadBalancerStateEnum value);
    internal bool IsSetCode();
    public string get_Reason();
    public void set_Reason(string value);
    internal bool IsSetReason();
}
public class Amazon.ElasticLoadBalancingV2.Model.Matcher : object {
    private string _grpcCode;
    private string _httpCode;
    public string GrpcCode { get; public set; }
    public string HttpCode { get; public set; }
    public string get_GrpcCode();
    public void set_GrpcCode(string value);
    internal bool IsSetGrpcCode();
    public string get_HttpCode();
    public void set_HttpCode(string value);
    internal bool IsSetHttpCode();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyListenerRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _alpnPolicy;
    private List`1<Certificate> _certificates;
    private List`1<Action> _defaultActions;
    private string _listenerArn;
    private MutualAuthenticationAttributes _mutualAuthentication;
    private Nullable`1<int> _port;
    private ProtocolEnum _protocol;
    private string _sslPolicy;
    public List`1<string> AlpnPolicy { get; public set; }
    public List`1<Certificate> Certificates { get; public set; }
    public List`1<Action> DefaultActions { get; public set; }
    [AWSPropertyAttribute]
public string ListenerArn { get; public set; }
    public MutualAuthenticationAttributes MutualAuthentication { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public ProtocolEnum Protocol { get; public set; }
    public string SslPolicy { get; public set; }
    public List`1<string> get_AlpnPolicy();
    public void set_AlpnPolicy(List`1<string> value);
    internal bool IsSetAlpnPolicy();
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public List`1<Action> get_DefaultActions();
    public void set_DefaultActions(List`1<Action> value);
    internal bool IsSetDefaultActions();
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
    public MutualAuthenticationAttributes get_MutualAuthentication();
    public void set_MutualAuthentication(MutualAuthenticationAttributes value);
    internal bool IsSetMutualAuthentication();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public ProtocolEnum get_Protocol();
    public void set_Protocol(ProtocolEnum value);
    internal bool IsSetProtocol();
    public string get_SslPolicy();
    public void set_SslPolicy(string value);
    internal bool IsSetSslPolicy();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyListenerResponse : AmazonWebServiceResponse {
    private List`1<Listener> _listeners;
    public List`1<Listener> Listeners { get; public set; }
    public List`1<Listener> get_Listeners();
    public void set_Listeners(List`1<Listener> value);
    internal bool IsSetListeners();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyLoadBalancerAttributesRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<LoadBalancerAttribute> _attributes;
    private string _loadBalancerArn;
    [AWSPropertyAttribute]
public List`1<LoadBalancerAttribute> Attributes { get; public set; }
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    public List`1<LoadBalancerAttribute> get_Attributes();
    public void set_Attributes(List`1<LoadBalancerAttribute> value);
    internal bool IsSetAttributes();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyLoadBalancerAttributesResponse : AmazonWebServiceResponse {
    private List`1<LoadBalancerAttribute> _attributes;
    [AWSPropertyAttribute]
public List`1<LoadBalancerAttribute> Attributes { get; public set; }
    public List`1<LoadBalancerAttribute> get_Attributes();
    public void set_Attributes(List`1<LoadBalancerAttribute> value);
    internal bool IsSetAttributes();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyRuleRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<Action> _actions;
    private List`1<RuleCondition> _conditions;
    private string _ruleArn;
    public List`1<Action> Actions { get; public set; }
    public List`1<RuleCondition> Conditions { get; public set; }
    [AWSPropertyAttribute]
public string RuleArn { get; public set; }
    public List`1<Action> get_Actions();
    public void set_Actions(List`1<Action> value);
    internal bool IsSetActions();
    public List`1<RuleCondition> get_Conditions();
    public void set_Conditions(List`1<RuleCondition> value);
    internal bool IsSetConditions();
    public string get_RuleArn();
    public void set_RuleArn(string value);
    internal bool IsSetRuleArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyRuleResponse : AmazonWebServiceResponse {
    private List`1<Rule> _rules;
    public List`1<Rule> Rules { get; public set; }
    public List`1<Rule> get_Rules();
    public void set_Rules(List`1<Rule> value);
    internal bool IsSetRules();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyTargetGroupAttributesRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<TargetGroupAttribute> _attributes;
    private string _targetGroupArn;
    [AWSPropertyAttribute]
public List`1<TargetGroupAttribute> Attributes { get; public set; }
    [AWSPropertyAttribute]
public string TargetGroupArn { get; public set; }
    public List`1<TargetGroupAttribute> get_Attributes();
    public void set_Attributes(List`1<TargetGroupAttribute> value);
    internal bool IsSetAttributes();
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyTargetGroupAttributesResponse : AmazonWebServiceResponse {
    private List`1<TargetGroupAttribute> _attributes;
    public List`1<TargetGroupAttribute> Attributes { get; public set; }
    public List`1<TargetGroupAttribute> get_Attributes();
    public void set_Attributes(List`1<TargetGroupAttribute> value);
    internal bool IsSetAttributes();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyTargetGroupRequest : AmazonElasticLoadBalancingV2Request {
    private Nullable`1<bool> _healthCheckEnabled;
    private Nullable`1<int> _healthCheckIntervalSeconds;
    private string _healthCheckPath;
    private string _healthCheckPort;
    private ProtocolEnum _healthCheckProtocol;
    private Nullable`1<int> _healthCheckTimeoutSeconds;
    private Nullable`1<int> _healthyThresholdCount;
    private Matcher _matcher;
    private string _targetGroupArn;
    private Nullable`1<int> _unhealthyThresholdCount;
    public Nullable`1<bool> HealthCheckEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthCheckIntervalSeconds { get; public set; }
    [AWSPropertyAttribute]
public string HealthCheckPath { get; public set; }
    public string HealthCheckPort { get; public set; }
    public ProtocolEnum HealthCheckProtocol { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthCheckTimeoutSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthyThresholdCount { get; public set; }
    public Matcher Matcher { get; public set; }
    [AWSPropertyAttribute]
public string TargetGroupArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> UnhealthyThresholdCount { get; public set; }
    public Nullable`1<bool> get_HealthCheckEnabled();
    public void set_HealthCheckEnabled(Nullable`1<bool> value);
    internal bool IsSetHealthCheckEnabled();
    public Nullable`1<int> get_HealthCheckIntervalSeconds();
    public void set_HealthCheckIntervalSeconds(Nullable`1<int> value);
    internal bool IsSetHealthCheckIntervalSeconds();
    public string get_HealthCheckPath();
    public void set_HealthCheckPath(string value);
    internal bool IsSetHealthCheckPath();
    public string get_HealthCheckPort();
    public void set_HealthCheckPort(string value);
    internal bool IsSetHealthCheckPort();
    public ProtocolEnum get_HealthCheckProtocol();
    public void set_HealthCheckProtocol(ProtocolEnum value);
    internal bool IsSetHealthCheckProtocol();
    public Nullable`1<int> get_HealthCheckTimeoutSeconds();
    public void set_HealthCheckTimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetHealthCheckTimeoutSeconds();
    public Nullable`1<int> get_HealthyThresholdCount();
    public void set_HealthyThresholdCount(Nullable`1<int> value);
    internal bool IsSetHealthyThresholdCount();
    public Matcher get_Matcher();
    public void set_Matcher(Matcher value);
    internal bool IsSetMatcher();
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public Nullable`1<int> get_UnhealthyThresholdCount();
    public void set_UnhealthyThresholdCount(Nullable`1<int> value);
    internal bool IsSetUnhealthyThresholdCount();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyTargetGroupResponse : AmazonWebServiceResponse {
    private List`1<TargetGroup> _targetGroups;
    public List`1<TargetGroup> TargetGroups { get; public set; }
    public List`1<TargetGroup> get_TargetGroups();
    public void set_TargetGroups(List`1<TargetGroup> value);
    internal bool IsSetTargetGroups();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyTrustStoreRequest : AmazonElasticLoadBalancingV2Request {
    private string _caCertificatesBundleS3Bucket;
    private string _caCertificatesBundleS3Key;
    private string _caCertificatesBundleS3ObjectVersion;
    private string _trustStoreArn;
    [AWSPropertyAttribute]
public string CaCertificatesBundleS3Bucket { get; public set; }
    [AWSPropertyAttribute]
public string CaCertificatesBundleS3Key { get; public set; }
    public string CaCertificatesBundleS3ObjectVersion { get; public set; }
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public string get_CaCertificatesBundleS3Bucket();
    public void set_CaCertificatesBundleS3Bucket(string value);
    internal bool IsSetCaCertificatesBundleS3Bucket();
    public string get_CaCertificatesBundleS3Key();
    public void set_CaCertificatesBundleS3Key(string value);
    internal bool IsSetCaCertificatesBundleS3Key();
    public string get_CaCertificatesBundleS3ObjectVersion();
    public void set_CaCertificatesBundleS3ObjectVersion(string value);
    internal bool IsSetCaCertificatesBundleS3ObjectVersion();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.ModifyTrustStoreResponse : AmazonWebServiceResponse {
    private List`1<TrustStore> _trustStores;
    public List`1<TrustStore> TrustStores { get; public set; }
    public List`1<TrustStore> get_TrustStores();
    public void set_TrustStores(List`1<TrustStore> value);
    internal bool IsSetTrustStores();
}
public class Amazon.ElasticLoadBalancingV2.Model.MutualAuthenticationAttributes : object {
    private Nullable`1<bool> _ignoreClientCertificateExpiry;
    private string _mode;
    private string _trustStoreArn;
    private TrustStoreAssociationStatusEnum _trustStoreAssociationStatus;
    public Nullable`1<bool> IgnoreClientCertificateExpiry { get; public set; }
    public string Mode { get; public set; }
    public string TrustStoreArn { get; public set; }
    public TrustStoreAssociationStatusEnum TrustStoreAssociationStatus { get; public set; }
    public Nullable`1<bool> get_IgnoreClientCertificateExpiry();
    public void set_IgnoreClientCertificateExpiry(Nullable`1<bool> value);
    internal bool IsSetIgnoreClientCertificateExpiry();
    public string get_Mode();
    public void set_Mode(string value);
    internal bool IsSetMode();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
    public TrustStoreAssociationStatusEnum get_TrustStoreAssociationStatus();
    public void set_TrustStoreAssociationStatus(TrustStoreAssociationStatusEnum value);
    internal bool IsSetTrustStoreAssociationStatus();
}
public class Amazon.ElasticLoadBalancingV2.Model.OperationNotPermittedException : AmazonElasticLoadBalancingV2Exception {
    public OperationNotPermittedException(string message);
    public OperationNotPermittedException(string message, Exception innerException);
    public OperationNotPermittedException(Exception innerException);
    public OperationNotPermittedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OperationNotPermittedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.PathPatternConditionConfig : object {
    private List`1<string> _values;
    public List`1<string> Values { get; public set; }
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.ElasticLoadBalancingV2.Model.PriorityInUseException : AmazonElasticLoadBalancingV2Exception {
    public PriorityInUseException(string message);
    public PriorityInUseException(string message, Exception innerException);
    public PriorityInUseException(Exception innerException);
    public PriorityInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PriorityInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.QueryStringConditionConfig : object {
    private List`1<QueryStringKeyValuePair> _values;
    public List`1<QueryStringKeyValuePair> Values { get; public set; }
    public List`1<QueryStringKeyValuePair> get_Values();
    public void set_Values(List`1<QueryStringKeyValuePair> value);
    internal bool IsSetValues();
}
public class Amazon.ElasticLoadBalancingV2.Model.QueryStringKeyValuePair : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ElasticLoadBalancingV2.Model.RedirectActionConfig : object {
    private string _host;
    private string _path;
    private string _port;
    private string _protocol;
    private string _query;
    private RedirectActionStatusCodeEnum _statusCode;
    [AWSPropertyAttribute]
public string Host { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    public string Port { get; public set; }
    public string Protocol { get; public set; }
    [AWSPropertyAttribute]
public string Query { get; public set; }
    [AWSPropertyAttribute]
public RedirectActionStatusCodeEnum StatusCode { get; public set; }
    public string get_Host();
    public void set_Host(string value);
    internal bool IsSetHost();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public string get_Port();
    public void set_Port(string value);
    internal bool IsSetPort();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_Query();
    public void set_Query(string value);
    internal bool IsSetQuery();
    public RedirectActionStatusCodeEnum get_StatusCode();
    public void set_StatusCode(RedirectActionStatusCodeEnum value);
    internal bool IsSetStatusCode();
}
public class Amazon.ElasticLoadBalancingV2.Model.RegisterTargetsRequest : AmazonElasticLoadBalancingV2Request {
    private string _targetGroupArn;
    private List`1<TargetDescription> _targets;
    [AWSPropertyAttribute]
public string TargetGroupArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetDescription> Targets { get; public set; }
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public List`1<TargetDescription> get_Targets();
    public void set_Targets(List`1<TargetDescription> value);
    internal bool IsSetTargets();
}
public class Amazon.ElasticLoadBalancingV2.Model.RegisterTargetsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.RemoveListenerCertificatesRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<Certificate> _certificates;
    private string _listenerArn;
    [AWSPropertyAttribute]
public List`1<Certificate> Certificates { get; public set; }
    [AWSPropertyAttribute]
public string ListenerArn { get; public set; }
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public string get_ListenerArn();
    public void set_ListenerArn(string value);
    internal bool IsSetListenerArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.RemoveListenerCertificatesResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.RemoveTagsRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<string> _resourceArns;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public List`1<string> ResourceArns { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public List`1<string> get_ResourceArns();
    public void set_ResourceArns(List`1<string> value);
    internal bool IsSetResourceArns();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.ElasticLoadBalancingV2.Model.RemoveTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.RemoveTrustStoreRevocationsRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<long> _revocationIds;
    private string _trustStoreArn;
    [AWSPropertyAttribute]
public List`1<long> RevocationIds { get; public set; }
    [AWSPropertyAttribute]
public string TrustStoreArn { get; public set; }
    public List`1<long> get_RevocationIds();
    public void set_RevocationIds(List`1<long> value);
    internal bool IsSetRevocationIds();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.RemoveTrustStoreRevocationsResponse : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancingV2.Model.ResourceInUseException : AmazonElasticLoadBalancingV2Exception {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.ResourceNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.RevocationContent : object {
    private RevocationType _revocationType;
    private string _s3Bucket;
    private string _s3Key;
    private string _s3ObjectVersion;
    public RevocationType RevocationType { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public string S3ObjectVersion { get; public set; }
    public RevocationType get_RevocationType();
    public void set_RevocationType(RevocationType value);
    internal bool IsSetRevocationType();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
    public string get_S3ObjectVersion();
    public void set_S3ObjectVersion(string value);
    internal bool IsSetS3ObjectVersion();
}
public class Amazon.ElasticLoadBalancingV2.Model.RevocationContentNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public RevocationContentNotFoundException(string message);
    public RevocationContentNotFoundException(string message, Exception innerException);
    public RevocationContentNotFoundException(Exception innerException);
    public RevocationContentNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RevocationContentNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.RevocationIdNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public RevocationIdNotFoundException(string message);
    public RevocationIdNotFoundException(string message, Exception innerException);
    public RevocationIdNotFoundException(Exception innerException);
    public RevocationIdNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RevocationIdNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.Rule : object {
    private List`1<Action> _actions;
    private List`1<RuleCondition> _conditions;
    private Nullable`1<bool> _isDefault;
    private string _priority;
    private string _ruleArn;
    public List`1<Action> Actions { get; public set; }
    public List`1<RuleCondition> Conditions { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public string Priority { get; public set; }
    public string RuleArn { get; public set; }
    public List`1<Action> get_Actions();
    public void set_Actions(List`1<Action> value);
    internal bool IsSetActions();
    public List`1<RuleCondition> get_Conditions();
    public void set_Conditions(List`1<RuleCondition> value);
    internal bool IsSetConditions();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public string get_Priority();
    public void set_Priority(string value);
    internal bool IsSetPriority();
    public string get_RuleArn();
    public void set_RuleArn(string value);
    internal bool IsSetRuleArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.RuleCondition : object {
    private string _field;
    private HostHeaderConditionConfig _hostHeaderConfig;
    private HttpHeaderConditionConfig _httpHeaderConfig;
    private HttpRequestMethodConditionConfig _httpRequestMethodConfig;
    private PathPatternConditionConfig _pathPatternConfig;
    private QueryStringConditionConfig _queryStringConfig;
    private SourceIpConditionConfig _sourceIpConfig;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Field { get; public set; }
    public HostHeaderConditionConfig HostHeaderConfig { get; public set; }
    public HttpHeaderConditionConfig HttpHeaderConfig { get; public set; }
    public HttpRequestMethodConditionConfig HttpRequestMethodConfig { get; public set; }
    public PathPatternConditionConfig PathPatternConfig { get; public set; }
    public QueryStringConditionConfig QueryStringConfig { get; public set; }
    public SourceIpConditionConfig SourceIpConfig { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Field();
    public void set_Field(string value);
    internal bool IsSetField();
    public HostHeaderConditionConfig get_HostHeaderConfig();
    public void set_HostHeaderConfig(HostHeaderConditionConfig value);
    internal bool IsSetHostHeaderConfig();
    public HttpHeaderConditionConfig get_HttpHeaderConfig();
    public void set_HttpHeaderConfig(HttpHeaderConditionConfig value);
    internal bool IsSetHttpHeaderConfig();
    public HttpRequestMethodConditionConfig get_HttpRequestMethodConfig();
    public void set_HttpRequestMethodConfig(HttpRequestMethodConditionConfig value);
    internal bool IsSetHttpRequestMethodConfig();
    public PathPatternConditionConfig get_PathPatternConfig();
    public void set_PathPatternConfig(PathPatternConditionConfig value);
    internal bool IsSetPathPatternConfig();
    public QueryStringConditionConfig get_QueryStringConfig();
    public void set_QueryStringConfig(QueryStringConditionConfig value);
    internal bool IsSetQueryStringConfig();
    public SourceIpConditionConfig get_SourceIpConfig();
    public void set_SourceIpConfig(SourceIpConditionConfig value);
    internal bool IsSetSourceIpConfig();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.ElasticLoadBalancingV2.Model.RuleNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public RuleNotFoundException(string message);
    public RuleNotFoundException(string message, Exception innerException);
    public RuleNotFoundException(Exception innerException);
    public RuleNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RuleNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.RulePriorityPair : object {
    private Nullable`1<int> _priority;
    private string _ruleArn;
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string RuleArn { get; public set; }
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_RuleArn();
    public void set_RuleArn(string value);
    internal bool IsSetRuleArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetIpAddressTypeRequest : AmazonElasticLoadBalancingV2Request {
    private IpAddressType _ipAddressType;
    private string _loadBalancerArn;
    [AWSPropertyAttribute]
public IpAddressType IpAddressType { get; public set; }
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetIpAddressTypeResponse : AmazonWebServiceResponse {
    private IpAddressType _ipAddressType;
    public IpAddressType IpAddressType { get; public set; }
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetRulePrioritiesRequest : AmazonElasticLoadBalancingV2Request {
    private List`1<RulePriorityPair> _rulePriorities;
    [AWSPropertyAttribute]
public List`1<RulePriorityPair> RulePriorities { get; public set; }
    public List`1<RulePriorityPair> get_RulePriorities();
    public void set_RulePriorities(List`1<RulePriorityPair> value);
    internal bool IsSetRulePriorities();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetRulePrioritiesResponse : AmazonWebServiceResponse {
    private List`1<Rule> _rules;
    public List`1<Rule> Rules { get; public set; }
    public List`1<Rule> get_Rules();
    public void set_Rules(List`1<Rule> value);
    internal bool IsSetRules();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetSecurityGroupsRequest : AmazonElasticLoadBalancingV2Request {
    private EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum _enforceSecurityGroupInboundRulesOnPrivateLinkTraffic;
    private string _loadBalancerArn;
    private List`1<string> _securityGroups;
    public EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic { get; public set; }
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroups { get; public set; }
    public EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum get_EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic();
    public void set_EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic(EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum value);
    internal bool IsSetEnforceSecurityGroupInboundRulesOnPrivateLinkTraffic();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetSecurityGroupsResponse : AmazonWebServiceResponse {
    private EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum _enforceSecurityGroupInboundRulesOnPrivateLinkTraffic;
    private List`1<string> _securityGroupIds;
    public EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum get_EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic();
    public void set_EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic(EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum value);
    internal bool IsSetEnforceSecurityGroupInboundRulesOnPrivateLinkTraffic();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetSubnetsRequest : AmazonElasticLoadBalancingV2Request {
    private IpAddressType _ipAddressType;
    private string _loadBalancerArn;
    private List`1<SubnetMapping> _subnetMappings;
    private List`1<string> _subnets;
    public IpAddressType IpAddressType { get; public set; }
    [AWSPropertyAttribute]
public string LoadBalancerArn { get; public set; }
    public List`1<SubnetMapping> SubnetMappings { get; public set; }
    public List`1<string> Subnets { get; public set; }
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
    public string get_LoadBalancerArn();
    public void set_LoadBalancerArn(string value);
    internal bool IsSetLoadBalancerArn();
    public List`1<SubnetMapping> get_SubnetMappings();
    public void set_SubnetMappings(List`1<SubnetMapping> value);
    internal bool IsSetSubnetMappings();
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
}
public class Amazon.ElasticLoadBalancingV2.Model.SetSubnetsResponse : AmazonWebServiceResponse {
    private List`1<AvailabilityZone> _availabilityZones;
    private IpAddressType _ipAddressType;
    public List`1<AvailabilityZone> AvailabilityZones { get; public set; }
    public IpAddressType IpAddressType { get; public set; }
    public List`1<AvailabilityZone> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<AvailabilityZone> value);
    internal bool IsSetAvailabilityZones();
    public IpAddressType get_IpAddressType();
    public void set_IpAddressType(IpAddressType value);
    internal bool IsSetIpAddressType();
}
public class Amazon.ElasticLoadBalancingV2.Model.SourceIpConditionConfig : object {
    private List`1<string> _values;
    public List`1<string> Values { get; public set; }
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.ElasticLoadBalancingV2.Model.SslPolicy : object {
    private List`1<Cipher> _ciphers;
    private string _name;
    private List`1<string> _sslProtocols;
    private List`1<string> _supportedLoadBalancerTypes;
    public List`1<Cipher> Ciphers { get; public set; }
    public string Name { get; public set; }
    public List`1<string> SslProtocols { get; public set; }
    public List`1<string> SupportedLoadBalancerTypes { get; public set; }
    public List`1<Cipher> get_Ciphers();
    public void set_Ciphers(List`1<Cipher> value);
    internal bool IsSetCiphers();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_SslProtocols();
    public void set_SslProtocols(List`1<string> value);
    internal bool IsSetSslProtocols();
    public List`1<string> get_SupportedLoadBalancerTypes();
    public void set_SupportedLoadBalancerTypes(List`1<string> value);
    internal bool IsSetSupportedLoadBalancerTypes();
}
public class Amazon.ElasticLoadBalancingV2.Model.SSLPolicyNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public SSLPolicyNotFoundException(string message);
    public SSLPolicyNotFoundException(string message, Exception innerException);
    public SSLPolicyNotFoundException(Exception innerException);
    public SSLPolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SSLPolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.SubnetMapping : object {
    private string _allocationId;
    private string _iPv6Address;
    private string _privateIPv4Address;
    private string _subnetId;
    public string AllocationId { get; public set; }
    public string IPv6Address { get; public set; }
    public string PrivateIPv4Address { get; public set; }
    public string SubnetId { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_IPv6Address();
    public void set_IPv6Address(string value);
    internal bool IsSetIPv6Address();
    public string get_PrivateIPv4Address();
    public void set_PrivateIPv4Address(string value);
    internal bool IsSetPrivateIPv4Address();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.ElasticLoadBalancingV2.Model.SubnetNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public SubnetNotFoundException(string message);
    public SubnetNotFoundException(string message, Exception innerException);
    public SubnetNotFoundException(Exception innerException);
    public SubnetNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubnetNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ElasticLoadBalancingV2.Model.TagDescription : object {
    private string _resourceArn;
    private List`1<Tag> _tags;
    public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetDescription : object {
    private string _availabilityZone;
    private string _id;
    private Nullable`1<int> _port;
    public string AvailabilityZone { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetGroup : object {
    private Nullable`1<bool> _healthCheckEnabled;
    private Nullable`1<int> _healthCheckIntervalSeconds;
    private string _healthCheckPath;
    private string _healthCheckPort;
    private ProtocolEnum _healthCheckProtocol;
    private Nullable`1<int> _healthCheckTimeoutSeconds;
    private Nullable`1<int> _healthyThresholdCount;
    private TargetGroupIpAddressTypeEnum _ipAddressType;
    private List`1<string> _loadBalancerArns;
    private Matcher _matcher;
    private Nullable`1<int> _port;
    private ProtocolEnum _protocol;
    private string _protocolVersion;
    private string _targetGroupArn;
    private string _targetGroupName;
    private TargetTypeEnum _targetType;
    private Nullable`1<int> _unhealthyThresholdCount;
    private string _vpcId;
    public Nullable`1<bool> HealthCheckEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthCheckIntervalSeconds { get; public set; }
    [AWSPropertyAttribute]
public string HealthCheckPath { get; public set; }
    public string HealthCheckPort { get; public set; }
    public ProtocolEnum HealthCheckProtocol { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthCheckTimeoutSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HealthyThresholdCount { get; public set; }
    public TargetGroupIpAddressTypeEnum IpAddressType { get; public set; }
    public List`1<string> LoadBalancerArns { get; public set; }
    public Matcher Matcher { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    public ProtocolEnum Protocol { get; public set; }
    public string ProtocolVersion { get; public set; }
    public string TargetGroupArn { get; public set; }
    public string TargetGroupName { get; public set; }
    public TargetTypeEnum TargetType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> UnhealthyThresholdCount { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_HealthCheckEnabled();
    public void set_HealthCheckEnabled(Nullable`1<bool> value);
    internal bool IsSetHealthCheckEnabled();
    public Nullable`1<int> get_HealthCheckIntervalSeconds();
    public void set_HealthCheckIntervalSeconds(Nullable`1<int> value);
    internal bool IsSetHealthCheckIntervalSeconds();
    public string get_HealthCheckPath();
    public void set_HealthCheckPath(string value);
    internal bool IsSetHealthCheckPath();
    public string get_HealthCheckPort();
    public void set_HealthCheckPort(string value);
    internal bool IsSetHealthCheckPort();
    public ProtocolEnum get_HealthCheckProtocol();
    public void set_HealthCheckProtocol(ProtocolEnum value);
    internal bool IsSetHealthCheckProtocol();
    public Nullable`1<int> get_HealthCheckTimeoutSeconds();
    public void set_HealthCheckTimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetHealthCheckTimeoutSeconds();
    public Nullable`1<int> get_HealthyThresholdCount();
    public void set_HealthyThresholdCount(Nullable`1<int> value);
    internal bool IsSetHealthyThresholdCount();
    public TargetGroupIpAddressTypeEnum get_IpAddressType();
    public void set_IpAddressType(TargetGroupIpAddressTypeEnum value);
    internal bool IsSetIpAddressType();
    public List`1<string> get_LoadBalancerArns();
    public void set_LoadBalancerArns(List`1<string> value);
    internal bool IsSetLoadBalancerArns();
    public Matcher get_Matcher();
    public void set_Matcher(Matcher value);
    internal bool IsSetMatcher();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public ProtocolEnum get_Protocol();
    public void set_Protocol(ProtocolEnum value);
    internal bool IsSetProtocol();
    public string get_ProtocolVersion();
    public void set_ProtocolVersion(string value);
    internal bool IsSetProtocolVersion();
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public string get_TargetGroupName();
    public void set_TargetGroupName(string value);
    internal bool IsSetTargetGroupName();
    public TargetTypeEnum get_TargetType();
    public void set_TargetType(TargetTypeEnum value);
    internal bool IsSetTargetType();
    public Nullable`1<int> get_UnhealthyThresholdCount();
    public void set_UnhealthyThresholdCount(Nullable`1<int> value);
    internal bool IsSetUnhealthyThresholdCount();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetGroupAssociationLimitException : AmazonElasticLoadBalancingV2Exception {
    public TargetGroupAssociationLimitException(string message);
    public TargetGroupAssociationLimitException(string message, Exception innerException);
    public TargetGroupAssociationLimitException(Exception innerException);
    public TargetGroupAssociationLimitException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TargetGroupAssociationLimitException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetGroupAttribute : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetGroupNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public TargetGroupNotFoundException(string message);
    public TargetGroupNotFoundException(string message, Exception innerException);
    public TargetGroupNotFoundException(Exception innerException);
    public TargetGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TargetGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetGroupStickinessConfig : object {
    private Nullable`1<int> _durationSeconds;
    private Nullable`1<bool> _enabled;
    public Nullable`1<int> DurationSeconds { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<int> get_DurationSeconds();
    public void set_DurationSeconds(Nullable`1<int> value);
    internal bool IsSetDurationSeconds();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetGroupTuple : object {
    private string _targetGroupArn;
    private Nullable`1<int> _weight;
    public string TargetGroupArn { get; public set; }
    public Nullable`1<int> Weight { get; public set; }
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public Nullable`1<int> get_Weight();
    public void set_Weight(Nullable`1<int> value);
    internal bool IsSetWeight();
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetHealth : object {
    private string _description;
    private TargetHealthReasonEnum _reason;
    private TargetHealthStateEnum _state;
    public string Description { get; public set; }
    public TargetHealthReasonEnum Reason { get; public set; }
    public TargetHealthStateEnum State { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public TargetHealthReasonEnum get_Reason();
    public void set_Reason(TargetHealthReasonEnum value);
    internal bool IsSetReason();
    public TargetHealthStateEnum get_State();
    public void set_State(TargetHealthStateEnum value);
    internal bool IsSetState();
}
public class Amazon.ElasticLoadBalancingV2.Model.TargetHealthDescription : object {
    private AnomalyDetection _anomalyDetection;
    private string _healthCheckPort;
    private TargetDescription _target;
    private TargetHealth _targetHealth;
    public AnomalyDetection AnomalyDetection { get; public set; }
    public string HealthCheckPort { get; public set; }
    public TargetDescription Target { get; public set; }
    public TargetHealth TargetHealth { get; public set; }
    public AnomalyDetection get_AnomalyDetection();
    public void set_AnomalyDetection(AnomalyDetection value);
    internal bool IsSetAnomalyDetection();
    public string get_HealthCheckPort();
    public void set_HealthCheckPort(string value);
    internal bool IsSetHealthCheckPort();
    public TargetDescription get_Target();
    public void set_Target(TargetDescription value);
    internal bool IsSetTarget();
    public TargetHealth get_TargetHealth();
    public void set_TargetHealth(TargetHealth value);
    internal bool IsSetTargetHealth();
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyActionsException : AmazonElasticLoadBalancingV2Exception {
    public TooManyActionsException(string message);
    public TooManyActionsException(string message, Exception innerException);
    public TooManyActionsException(Exception innerException);
    public TooManyActionsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyActionsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyCertificatesException : AmazonElasticLoadBalancingV2Exception {
    public TooManyCertificatesException(string message);
    public TooManyCertificatesException(string message, Exception innerException);
    public TooManyCertificatesException(Exception innerException);
    public TooManyCertificatesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCertificatesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyListenersException : AmazonElasticLoadBalancingV2Exception {
    public TooManyListenersException(string message);
    public TooManyListenersException(string message, Exception innerException);
    public TooManyListenersException(Exception innerException);
    public TooManyListenersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyListenersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyLoadBalancersException : AmazonElasticLoadBalancingV2Exception {
    public TooManyLoadBalancersException(string message);
    public TooManyLoadBalancersException(string message, Exception innerException);
    public TooManyLoadBalancersException(Exception innerException);
    public TooManyLoadBalancersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyLoadBalancersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyRegistrationsForTargetIdException : AmazonElasticLoadBalancingV2Exception {
    public TooManyRegistrationsForTargetIdException(string message);
    public TooManyRegistrationsForTargetIdException(string message, Exception innerException);
    public TooManyRegistrationsForTargetIdException(Exception innerException);
    public TooManyRegistrationsForTargetIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRegistrationsForTargetIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyRulesException : AmazonElasticLoadBalancingV2Exception {
    public TooManyRulesException(string message);
    public TooManyRulesException(string message, Exception innerException);
    public TooManyRulesException(Exception innerException);
    public TooManyRulesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRulesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyTagsException : AmazonElasticLoadBalancingV2Exception {
    public TooManyTagsException(string message);
    public TooManyTagsException(string message, Exception innerException);
    public TooManyTagsException(Exception innerException);
    public TooManyTagsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTagsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyTargetGroupsException : AmazonElasticLoadBalancingV2Exception {
    public TooManyTargetGroupsException(string message);
    public TooManyTargetGroupsException(string message, Exception innerException);
    public TooManyTargetGroupsException(Exception innerException);
    public TooManyTargetGroupsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTargetGroupsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyTargetsException : AmazonElasticLoadBalancingV2Exception {
    public TooManyTargetsException(string message);
    public TooManyTargetsException(string message, Exception innerException);
    public TooManyTargetsException(Exception innerException);
    public TooManyTargetsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTargetsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyTrustStoreRevocationEntriesException : AmazonElasticLoadBalancingV2Exception {
    public TooManyTrustStoreRevocationEntriesException(string message);
    public TooManyTrustStoreRevocationEntriesException(string message, Exception innerException);
    public TooManyTrustStoreRevocationEntriesException(Exception innerException);
    public TooManyTrustStoreRevocationEntriesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTrustStoreRevocationEntriesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyTrustStoresException : AmazonElasticLoadBalancingV2Exception {
    public TooManyTrustStoresException(string message);
    public TooManyTrustStoresException(string message, Exception innerException);
    public TooManyTrustStoresException(Exception innerException);
    public TooManyTrustStoresException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTrustStoresException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TooManyUniqueTargetGroupsPerLoadBalancerException : AmazonElasticLoadBalancingV2Exception {
    public TooManyUniqueTargetGroupsPerLoadBalancerException(string message);
    public TooManyUniqueTargetGroupsPerLoadBalancerException(string message, Exception innerException);
    public TooManyUniqueTargetGroupsPerLoadBalancerException(Exception innerException);
    public TooManyUniqueTargetGroupsPerLoadBalancerException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyUniqueTargetGroupsPerLoadBalancerException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TrustStore : object {
    private string _name;
    private Nullable`1<int> _numberOfCaCertificates;
    private TrustStoreStatus _status;
    private Nullable`1<long> _totalRevokedEntries;
    private string _trustStoreArn;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<int> NumberOfCaCertificates { get; public set; }
    public TrustStoreStatus Status { get; public set; }
    public Nullable`1<long> TotalRevokedEntries { get; public set; }
    public string TrustStoreArn { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfCaCertificates();
    public void set_NumberOfCaCertificates(Nullable`1<int> value);
    internal bool IsSetNumberOfCaCertificates();
    public TrustStoreStatus get_Status();
    public void set_Status(TrustStoreStatus value);
    internal bool IsSetStatus();
    public Nullable`1<long> get_TotalRevokedEntries();
    public void set_TotalRevokedEntries(Nullable`1<long> value);
    internal bool IsSetTotalRevokedEntries();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.TrustStoreAssociation : object {
    private string _resourceArn;
    public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.TrustStoreAssociationNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public TrustStoreAssociationNotFoundException(string message);
    public TrustStoreAssociationNotFoundException(string message, Exception innerException);
    public TrustStoreAssociationNotFoundException(Exception innerException);
    public TrustStoreAssociationNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrustStoreAssociationNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TrustStoreInUseException : AmazonElasticLoadBalancingV2Exception {
    public TrustStoreInUseException(string message);
    public TrustStoreInUseException(string message, Exception innerException);
    public TrustStoreInUseException(Exception innerException);
    public TrustStoreInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrustStoreInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TrustStoreNotFoundException : AmazonElasticLoadBalancingV2Exception {
    public TrustStoreNotFoundException(string message);
    public TrustStoreNotFoundException(string message, Exception innerException);
    public TrustStoreNotFoundException(Exception innerException);
    public TrustStoreNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrustStoreNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TrustStoreNotReadyException : AmazonElasticLoadBalancingV2Exception {
    public TrustStoreNotReadyException(string message);
    public TrustStoreNotReadyException(string message, Exception innerException);
    public TrustStoreNotReadyException(Exception innerException);
    public TrustStoreNotReadyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrustStoreNotReadyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.Model.TrustStoreRevocation : object {
    private Nullable`1<long> _numberOfRevokedEntries;
    private Nullable`1<long> _revocationId;
    private RevocationType _revocationType;
    private string _trustStoreArn;
    public Nullable`1<long> NumberOfRevokedEntries { get; public set; }
    public Nullable`1<long> RevocationId { get; public set; }
    public RevocationType RevocationType { get; public set; }
    public string TrustStoreArn { get; public set; }
    public Nullable`1<long> get_NumberOfRevokedEntries();
    public void set_NumberOfRevokedEntries(Nullable`1<long> value);
    internal bool IsSetNumberOfRevokedEntries();
    public Nullable`1<long> get_RevocationId();
    public void set_RevocationId(Nullable`1<long> value);
    internal bool IsSetRevocationId();
    public RevocationType get_RevocationType();
    public void set_RevocationType(RevocationType value);
    internal bool IsSetRevocationType();
    public string get_TrustStoreArn();
    public void set_TrustStoreArn(string value);
    internal bool IsSetTrustStoreArn();
}
public class Amazon.ElasticLoadBalancingV2.Model.UnsupportedProtocolException : AmazonElasticLoadBalancingV2Exception {
    public UnsupportedProtocolException(string message);
    public UnsupportedProtocolException(string message, Exception innerException);
    public UnsupportedProtocolException(Exception innerException);
    public UnsupportedProtocolException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedProtocolException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancingV2.ProtocolEnum : ConstantClass {
    public static ProtocolEnum GENEVE;
    public static ProtocolEnum HTTP;
    public static ProtocolEnum HTTPS;
    public static ProtocolEnum TCP;
    public static ProtocolEnum TCP_UDP;
    public static ProtocolEnum TLS;
    public static ProtocolEnum UDP;
    public ProtocolEnum(string value);
    private static ProtocolEnum();
    public static ProtocolEnum FindValue(string value);
    public static ProtocolEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.RedirectActionStatusCodeEnum : ConstantClass {
    public static RedirectActionStatusCodeEnum HTTP_301;
    public static RedirectActionStatusCodeEnum HTTP_302;
    public RedirectActionStatusCodeEnum(string value);
    private static RedirectActionStatusCodeEnum();
    public static RedirectActionStatusCodeEnum FindValue(string value);
    public static RedirectActionStatusCodeEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.RevocationType : ConstantClass {
    public static RevocationType CRL;
    public RevocationType(string value);
    private static RevocationType();
    public static RevocationType FindValue(string value);
    public static RevocationType op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.TargetGroupIpAddressTypeEnum : ConstantClass {
    public static TargetGroupIpAddressTypeEnum Ipv4;
    public static TargetGroupIpAddressTypeEnum Ipv6;
    public TargetGroupIpAddressTypeEnum(string value);
    private static TargetGroupIpAddressTypeEnum();
    public static TargetGroupIpAddressTypeEnum FindValue(string value);
    public static TargetGroupIpAddressTypeEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.TargetHealthReasonEnum : ConstantClass {
    public static TargetHealthReasonEnum ElbInitialHealthChecking;
    public static TargetHealthReasonEnum ElbInternalError;
    public static TargetHealthReasonEnum ElbRegistrationInProgress;
    public static TargetHealthReasonEnum TargetDeregistrationInProgress;
    public static TargetHealthReasonEnum TargetFailedHealthChecks;
    public static TargetHealthReasonEnum TargetHealthCheckDisabled;
    public static TargetHealthReasonEnum TargetInvalidState;
    public static TargetHealthReasonEnum TargetIpUnusable;
    public static TargetHealthReasonEnum TargetNotInUse;
    public static TargetHealthReasonEnum TargetNotRegistered;
    public static TargetHealthReasonEnum TargetResponseCodeMismatch;
    public static TargetHealthReasonEnum TargetTimeout;
    public TargetHealthReasonEnum(string value);
    private static TargetHealthReasonEnum();
    public static TargetHealthReasonEnum FindValue(string value);
    public static TargetHealthReasonEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.TargetHealthStateEnum : ConstantClass {
    public static TargetHealthStateEnum Draining;
    public static TargetHealthStateEnum Healthy;
    public static TargetHealthStateEnum Initial;
    public static TargetHealthStateEnum Unavailable;
    public static TargetHealthStateEnum Unhealthy;
    public static TargetHealthStateEnum UnhealthyDraining;
    public static TargetHealthStateEnum Unused;
    public TargetHealthStateEnum(string value);
    private static TargetHealthStateEnum();
    public static TargetHealthStateEnum FindValue(string value);
    public static TargetHealthStateEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.TargetTypeEnum : ConstantClass {
    public static TargetTypeEnum Alb;
    public static TargetTypeEnum Instance;
    public static TargetTypeEnum Ip;
    public static TargetTypeEnum Lambda;
    public TargetTypeEnum(string value);
    private static TargetTypeEnum();
    public static TargetTypeEnum FindValue(string value);
    public static TargetTypeEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.TrustStoreAssociationStatusEnum : ConstantClass {
    public static TrustStoreAssociationStatusEnum Active;
    public static TrustStoreAssociationStatusEnum Removed;
    public TrustStoreAssociationStatusEnum(string value);
    private static TrustStoreAssociationStatusEnum();
    public static TrustStoreAssociationStatusEnum FindValue(string value);
    public static TrustStoreAssociationStatusEnum op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancingV2.TrustStoreStatus : ConstantClass {
    public static TrustStoreStatus ACTIVE;
    public static TrustStoreStatus CREATING;
    public TrustStoreStatus(string value);
    private static TrustStoreStatus();
    public static TrustStoreStatus FindValue(string value);
    public static TrustStoreStatus op_Implicit(string value);
}
