public class Amazon.Extensions.NETCore.Setup.AWSOptions : object {
    [CompilerGeneratedAttribute]
private string <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfilesLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private RegionEndpoint <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionRoleArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalId>k__BackingField;
    [CompilerGeneratedAttribute]
private AWSCredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DefaultConfigurationMode> <DefaultConfigurationMode>k__BackingField;
    private DefaultClientConfig _defaultClientConfig;
    [CompilerGeneratedAttribute]
private LoggingSetting <Logging>k__BackingField;
    public string Profile { get; public set; }
    public string ProfilesLocation { get; public set; }
    public RegionEndpoint Region { get; public set; }
    public string SessionRoleArn { get; public set; }
    public string SessionName { get; public set; }
    public string ExternalId { get; public set; }
    public AWSCredentials Credentials { get; public set; }
    public Nullable`1<DefaultConfigurationMode> DefaultConfigurationMode { get; public set; }
    public DefaultClientConfig DefaultClientConfig { get; internal set; }
    public LoggingSetting Logging { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Profile();
    [CompilerGeneratedAttribute]
public void set_Profile(string value);
    [CompilerGeneratedAttribute]
public string get_ProfilesLocation();
    [CompilerGeneratedAttribute]
public void set_ProfilesLocation(string value);
    [CompilerGeneratedAttribute]
public RegionEndpoint get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(RegionEndpoint value);
    [CompilerGeneratedAttribute]
public string get_SessionRoleArn();
    [CompilerGeneratedAttribute]
public void set_SessionRoleArn(string value);
    [CompilerGeneratedAttribute]
public string get_SessionName();
    [CompilerGeneratedAttribute]
public void set_SessionName(string value);
    [CompilerGeneratedAttribute]
public string get_ExternalId();
    [CompilerGeneratedAttribute]
public void set_ExternalId(string value);
    [CompilerGeneratedAttribute]
public AWSCredentials get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(AWSCredentials value);
    [CompilerGeneratedAttribute]
public Nullable`1<DefaultConfigurationMode> get_DefaultConfigurationMode();
    [CompilerGeneratedAttribute]
public void set_DefaultConfigurationMode(Nullable`1<DefaultConfigurationMode> value);
    public DefaultClientConfig get_DefaultClientConfig();
    internal void set_DefaultClientConfig(DefaultClientConfig value);
    [CompilerGeneratedAttribute]
public LoggingSetting get_Logging();
    [CompilerGeneratedAttribute]
public void set_Logging(LoggingSetting value);
    public T CreateServiceClient();
}
internal class Amazon.Extensions.NETCore.Setup.ClientFactory`1 : object {
    private static Type[] EMPTY_TYPES;
    private static Object[] EMPTY_PARAMETERS;
    private AWSOptions _awsOptions;
    internal ClientFactory`1(AWSOptions awsOptions);
    private static ClientFactory`1();
    internal object CreateServiceClient(IServiceProvider provider);
    internal IAmazonService CreateServiceClient(ILogger logger, AWSOptions options);
    private static void PerformGlobalConfig(ILogger logger, AWSOptions options);
    private static AmazonServiceClient CreateClient(AWSCredentials credentials, ClientConfig config);
    private static AWSCredentials CreateCredentials(ILogger logger, AWSOptions options);
    private ClientConfig CreateConfig(AWSOptions options);
    private void ProcessServiceSpecificSettings(ClientConfig clientConfig, IDictionary`2<string, string> serviceSettings);
}
public class Amazon.Extensions.NETCore.Setup.ConfigurationException : Exception {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyValue>k__BackingField;
    public string PropertyName { get; public set; }
    public string PropertyValue { get; public set; }
    public ConfigurationException(string message);
    public ConfigurationException(string message, Exception exception);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_PropertyValue();
    [CompilerGeneratedAttribute]
public void set_PropertyValue(string value);
}
public class Amazon.Extensions.NETCore.Setup.DefaultClientConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowAutoRedirect>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientAppId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableHostPrefixInjection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableLogging>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableRequestCompression>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EndpointDiscoveryCacheLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EndpointDiscoveryEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FastFailRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <HttpClientCacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreConfiguredEndpointUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <LogMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <LogResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxErrorRetry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ProgressUpdateInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RequestMinCompressionSizeBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ResignRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RequestRetryMode> <RetryMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceURL>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ThrottleRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseAlternateUserAgentHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseDualstackEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseFIPSEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseHttp>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ServiceSpecificSettings>k__BackingField;
    public Nullable`1<bool> AllowAutoRedirect { get; public set; }
    public string AuthenticationRegion { get; public set; }
    public Nullable`1<int> BufferSize { get; public set; }
    public string ClientAppId { get; public set; }
    public Nullable`1<bool> DisableHostPrefixInjection { get; public set; }
    public Nullable`1<bool> DisableLogging { get; public set; }
    public Nullable`1<bool> DisableRequestCompression { get; public set; }
    public Nullable`1<int> EndpointDiscoveryCacheLimit { get; public set; }
    public Nullable`1<bool> EndpointDiscoveryEnabled { get; public set; }
    public Nullable`1<bool> FastFailRequests { get; public set; }
    public Nullable`1<int> HttpClientCacheSize { get; public set; }
    public Nullable`1<bool> IgnoreConfiguredEndpointUrls { get; public set; }
    public Nullable`1<bool> LogMetrics { get; public set; }
    public Nullable`1<bool> LogResponse { get; public set; }
    public Nullable`1<int> MaxErrorRetry { get; public set; }
    public Nullable`1<long> ProgressUpdateInterval { get; public set; }
    public Nullable`1<long> RequestMinCompressionSizeBytes { get; public set; }
    public Nullable`1<bool> ResignRetries { get; public set; }
    public Nullable`1<RequestRetryMode> RetryMode { get; public set; }
    public string ServiceURL { get; public set; }
    public Nullable`1<bool> ThrottleRetries { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public Nullable`1<bool> UseAlternateUserAgentHeader { get; public set; }
    public Nullable`1<bool> UseDualstackEndpoint { get; public set; }
    public Nullable`1<bool> UseFIPSEndpoint { get; public set; }
    public Nullable`1<bool> UseHttp { get; public set; }
    public IDictionary`2<string, string> ServiceSpecificSettings { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowAutoRedirect();
    [CompilerGeneratedAttribute]
public void set_AllowAutoRedirect(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationRegion();
    [CompilerGeneratedAttribute]
public void set_AuthenticationRegion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BufferSize();
    [CompilerGeneratedAttribute]
public void set_BufferSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ClientAppId();
    [CompilerGeneratedAttribute]
public void set_ClientAppId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableHostPrefixInjection();
    [CompilerGeneratedAttribute]
public void set_DisableHostPrefixInjection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableLogging();
    [CompilerGeneratedAttribute]
public void set_DisableLogging(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableRequestCompression();
    [CompilerGeneratedAttribute]
public void set_DisableRequestCompression(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_EndpointDiscoveryCacheLimit();
    [CompilerGeneratedAttribute]
public void set_EndpointDiscoveryCacheLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EndpointDiscoveryEnabled();
    [CompilerGeneratedAttribute]
public void set_EndpointDiscoveryEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_FastFailRequests();
    [CompilerGeneratedAttribute]
public void set_FastFailRequests(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_HttpClientCacheSize();
    [CompilerGeneratedAttribute]
public void set_HttpClientCacheSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreConfiguredEndpointUrls();
    [CompilerGeneratedAttribute]
public void set_IgnoreConfiguredEndpointUrls(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_LogMetrics();
    [CompilerGeneratedAttribute]
public void set_LogMetrics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_LogResponse();
    [CompilerGeneratedAttribute]
public void set_LogResponse(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxErrorRetry();
    [CompilerGeneratedAttribute]
public void set_MaxErrorRetry(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ProgressUpdateInterval();
    [CompilerGeneratedAttribute]
public void set_ProgressUpdateInterval(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RequestMinCompressionSizeBytes();
    [CompilerGeneratedAttribute]
public void set_RequestMinCompressionSizeBytes(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ResignRetries();
    [CompilerGeneratedAttribute]
public void set_ResignRetries(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<RequestRetryMode> get_RetryMode();
    [CompilerGeneratedAttribute]
public void set_RetryMode(Nullable`1<RequestRetryMode> value);
    [CompilerGeneratedAttribute]
public string get_ServiceURL();
    [CompilerGeneratedAttribute]
public void set_ServiceURL(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ThrottleRetries();
    [CompilerGeneratedAttribute]
public void set_ThrottleRetries(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseAlternateUserAgentHeader();
    [CompilerGeneratedAttribute]
public void set_UseAlternateUserAgentHeader(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseDualstackEndpoint();
    [CompilerGeneratedAttribute]
public void set_UseDualstackEndpoint(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseFIPSEndpoint();
    [CompilerGeneratedAttribute]
public void set_UseFIPSEndpoint(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseHttp();
    [CompilerGeneratedAttribute]
public void set_UseHttp(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ServiceSpecificSettings();
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ConfigurationExtensions : object {
    public static string DEFAULT_CONFIG_SECTION;
    private static string ProfileKey;
    private static string AWSProfileNameKey;
    private static string ProfilesLocationKey;
    private static string AWSProfilesLocationKey;
    private static string RegionKey;
    private static string AWSRegionKey;
    private static string DefaultsModeKey;
    private static string SessionRoleArnKey;
    private static string SessionNameKey;
    private static string LoggingKey;
    [ExtensionAttribute]
public static AWSOptions GetAWSOptions(IConfiguration config);
    [ExtensionAttribute]
public static AWSOptions GetAWSOptions(IConfiguration config, string configSection);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddDefaultAWSOptions(IServiceCollection collection, AWSOptions options);
    [ExtensionAttribute]
public static IServiceCollection AddDefaultAWSOptions(IServiceCollection collection, Func`2<IServiceProvider, AWSOptions> implementationFactory, ServiceLifetime lifetime);
    [ExtensionAttribute]
public static IServiceCollection AddAWSService(IServiceCollection collection, ServiceLifetime lifetime);
    [ExtensionAttribute]
public static IServiceCollection AddAWSService(IServiceCollection collection, AWSOptions options, ServiceLifetime lifetime);
    [ExtensionAttribute]
public static IServiceCollection TryAddAWSService(IServiceCollection collection, ServiceLifetime lifetime);
    [ExtensionAttribute]
public static IServiceCollection TryAddAWSService(IServiceCollection collection, AWSOptions options, ServiceLifetime lifetime);
}
