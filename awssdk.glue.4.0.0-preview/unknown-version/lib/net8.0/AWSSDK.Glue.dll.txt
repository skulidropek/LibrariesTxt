public class Amazon.Glue.AdditionalOptionKeys : ConstantClass {
    public static AdditionalOptionKeys ObservationsScope;
    public static AdditionalOptionKeys PerformanceTuningCaching;
    public AdditionalOptionKeys(string value);
    private static AdditionalOptionKeys();
    public static AdditionalOptionKeys FindValue(string value);
    public static AdditionalOptionKeys op_Implicit(string value);
}
public class Amazon.Glue.AggFunction : ConstantClass {
    public static AggFunction Avg;
    public static AggFunction Count;
    public static AggFunction CountDistinct;
    public static AggFunction First;
    public static AggFunction Kurtosis;
    public static AggFunction Last;
    public static AggFunction Max;
    public static AggFunction Min;
    public static AggFunction Skewness;
    public static AggFunction Stddev_pop;
    public static AggFunction Stddev_samp;
    public static AggFunction Sum;
    public static AggFunction SumDistinct;
    public static AggFunction Var_pop;
    public static AggFunction Var_samp;
    public AggFunction(string value);
    private static AggFunction();
    public static AggFunction FindValue(string value);
    public static AggFunction op_Implicit(string value);
}
public class Amazon.Glue.AmazonGlueClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IGluePaginatorFactory _paginators;
    public IGluePaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonGlueClient(RegionEndpoint region);
    public AmazonGlueClient(AmazonGlueConfig config);
    public AmazonGlueClient(AWSCredentials credentials);
    public AmazonGlueClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonGlueClient(AWSCredentials credentials, AmazonGlueConfig clientConfig);
    public AmazonGlueClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonGlueClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonGlueClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonGlueConfig clientConfig);
    public AmazonGlueClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonGlueClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonGlueClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonGlueConfig clientConfig);
    private static AmazonGlueClient();
    public sealed virtual IGluePaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual BatchCreatePartitionResponse BatchCreatePartition(BatchCreatePartitionRequest request);
    public virtual Task`1<BatchCreatePartitionResponse> BatchCreatePartitionAsync(BatchCreatePartitionRequest request, CancellationToken cancellationToken);
    internal virtual BatchDeleteConnectionResponse BatchDeleteConnection(BatchDeleteConnectionRequest request);
    public virtual Task`1<BatchDeleteConnectionResponse> BatchDeleteConnectionAsync(BatchDeleteConnectionRequest request, CancellationToken cancellationToken);
    internal virtual BatchDeletePartitionResponse BatchDeletePartition(BatchDeletePartitionRequest request);
    public virtual Task`1<BatchDeletePartitionResponse> BatchDeletePartitionAsync(BatchDeletePartitionRequest request, CancellationToken cancellationToken);
    internal virtual BatchDeleteTableResponse BatchDeleteTable(BatchDeleteTableRequest request);
    public virtual Task`1<BatchDeleteTableResponse> BatchDeleteTableAsync(BatchDeleteTableRequest request, CancellationToken cancellationToken);
    internal virtual BatchDeleteTableVersionResponse BatchDeleteTableVersion(BatchDeleteTableVersionRequest request);
    public virtual Task`1<BatchDeleteTableVersionResponse> BatchDeleteTableVersionAsync(BatchDeleteTableVersionRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetBlueprintsResponse BatchGetBlueprints(BatchGetBlueprintsRequest request);
    public virtual Task`1<BatchGetBlueprintsResponse> BatchGetBlueprintsAsync(BatchGetBlueprintsRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetCrawlersResponse BatchGetCrawlers(BatchGetCrawlersRequest request);
    public virtual Task`1<BatchGetCrawlersResponse> BatchGetCrawlersAsync(BatchGetCrawlersRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetCustomEntityTypesResponse BatchGetCustomEntityTypes(BatchGetCustomEntityTypesRequest request);
    public virtual Task`1<BatchGetCustomEntityTypesResponse> BatchGetCustomEntityTypesAsync(BatchGetCustomEntityTypesRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetDataQualityResultResponse BatchGetDataQualityResult(BatchGetDataQualityResultRequest request);
    public virtual Task`1<BatchGetDataQualityResultResponse> BatchGetDataQualityResultAsync(BatchGetDataQualityResultRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetDevEndpointsResponse BatchGetDevEndpoints(BatchGetDevEndpointsRequest request);
    public virtual Task`1<BatchGetDevEndpointsResponse> BatchGetDevEndpointsAsync(BatchGetDevEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetJobsResponse BatchGetJobs(BatchGetJobsRequest request);
    public virtual Task`1<BatchGetJobsResponse> BatchGetJobsAsync(BatchGetJobsRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetPartitionResponse BatchGetPartition(BatchGetPartitionRequest request);
    public virtual Task`1<BatchGetPartitionResponse> BatchGetPartitionAsync(BatchGetPartitionRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetTableOptimizerResponse BatchGetTableOptimizer(BatchGetTableOptimizerRequest request);
    public virtual Task`1<BatchGetTableOptimizerResponse> BatchGetTableOptimizerAsync(BatchGetTableOptimizerRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetTriggersResponse BatchGetTriggers(BatchGetTriggersRequest request);
    public virtual Task`1<BatchGetTriggersResponse> BatchGetTriggersAsync(BatchGetTriggersRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetWorkflowsResponse BatchGetWorkflows(BatchGetWorkflowsRequest request);
    public virtual Task`1<BatchGetWorkflowsResponse> BatchGetWorkflowsAsync(BatchGetWorkflowsRequest request, CancellationToken cancellationToken);
    internal virtual BatchStopJobRunResponse BatchStopJobRun(BatchStopJobRunRequest request);
    public virtual Task`1<BatchStopJobRunResponse> BatchStopJobRunAsync(BatchStopJobRunRequest request, CancellationToken cancellationToken);
    internal virtual BatchUpdatePartitionResponse BatchUpdatePartition(BatchUpdatePartitionRequest request);
    public virtual Task`1<BatchUpdatePartitionResponse> BatchUpdatePartitionAsync(BatchUpdatePartitionRequest request, CancellationToken cancellationToken);
    internal virtual CancelDataQualityRuleRecommendationRunResponse CancelDataQualityRuleRecommendationRun(CancelDataQualityRuleRecommendationRunRequest request);
    public virtual Task`1<CancelDataQualityRuleRecommendationRunResponse> CancelDataQualityRuleRecommendationRunAsync(CancelDataQualityRuleRecommendationRunRequest request, CancellationToken cancellationToken);
    internal virtual CancelDataQualityRulesetEvaluationRunResponse CancelDataQualityRulesetEvaluationRun(CancelDataQualityRulesetEvaluationRunRequest request);
    public virtual Task`1<CancelDataQualityRulesetEvaluationRunResponse> CancelDataQualityRulesetEvaluationRunAsync(CancelDataQualityRulesetEvaluationRunRequest request, CancellationToken cancellationToken);
    internal virtual CancelMLTaskRunResponse CancelMLTaskRun(CancelMLTaskRunRequest request);
    public virtual Task`1<CancelMLTaskRunResponse> CancelMLTaskRunAsync(CancelMLTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual CancelStatementResponse CancelStatement(CancelStatementRequest request);
    public virtual Task`1<CancelStatementResponse> CancelStatementAsync(CancelStatementRequest request, CancellationToken cancellationToken);
    internal virtual CheckSchemaVersionValidityResponse CheckSchemaVersionValidity(CheckSchemaVersionValidityRequest request);
    public virtual Task`1<CheckSchemaVersionValidityResponse> CheckSchemaVersionValidityAsync(CheckSchemaVersionValidityRequest request, CancellationToken cancellationToken);
    internal virtual CreateBlueprintResponse CreateBlueprint(CreateBlueprintRequest request);
    public virtual Task`1<CreateBlueprintResponse> CreateBlueprintAsync(CreateBlueprintRequest request, CancellationToken cancellationToken);
    internal virtual CreateClassifierResponse CreateClassifier(CreateClassifierRequest request);
    public virtual Task`1<CreateClassifierResponse> CreateClassifierAsync(CreateClassifierRequest request, CancellationToken cancellationToken);
    internal virtual CreateConnectionResponse CreateConnection(CreateConnectionRequest request);
    public virtual Task`1<CreateConnectionResponse> CreateConnectionAsync(CreateConnectionRequest request, CancellationToken cancellationToken);
    internal virtual CreateCrawlerResponse CreateCrawler(CreateCrawlerRequest request);
    public virtual Task`1<CreateCrawlerResponse> CreateCrawlerAsync(CreateCrawlerRequest request, CancellationToken cancellationToken);
    internal virtual CreateCustomEntityTypeResponse CreateCustomEntityType(CreateCustomEntityTypeRequest request);
    public virtual Task`1<CreateCustomEntityTypeResponse> CreateCustomEntityTypeAsync(CreateCustomEntityTypeRequest request, CancellationToken cancellationToken);
    internal virtual CreateDatabaseResponse CreateDatabase(CreateDatabaseRequest request);
    public virtual Task`1<CreateDatabaseResponse> CreateDatabaseAsync(CreateDatabaseRequest request, CancellationToken cancellationToken);
    internal virtual CreateDataQualityRulesetResponse CreateDataQualityRuleset(CreateDataQualityRulesetRequest request);
    public virtual Task`1<CreateDataQualityRulesetResponse> CreateDataQualityRulesetAsync(CreateDataQualityRulesetRequest request, CancellationToken cancellationToken);
    internal virtual CreateDevEndpointResponse CreateDevEndpoint(CreateDevEndpointRequest request);
    public virtual Task`1<CreateDevEndpointResponse> CreateDevEndpointAsync(CreateDevEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateJobResponse CreateJob(CreateJobRequest request);
    public virtual Task`1<CreateJobResponse> CreateJobAsync(CreateJobRequest request, CancellationToken cancellationToken);
    internal virtual CreateMLTransformResponse CreateMLTransform(CreateMLTransformRequest request);
    public virtual Task`1<CreateMLTransformResponse> CreateMLTransformAsync(CreateMLTransformRequest request, CancellationToken cancellationToken);
    internal virtual CreatePartitionResponse CreatePartition(CreatePartitionRequest request);
    public virtual Task`1<CreatePartitionResponse> CreatePartitionAsync(CreatePartitionRequest request, CancellationToken cancellationToken);
    internal virtual CreatePartitionIndexResponse CreatePartitionIndex(CreatePartitionIndexRequest request);
    public virtual Task`1<CreatePartitionIndexResponse> CreatePartitionIndexAsync(CreatePartitionIndexRequest request, CancellationToken cancellationToken);
    internal virtual CreateRegistryResponse CreateRegistry(CreateRegistryRequest request);
    public virtual Task`1<CreateRegistryResponse> CreateRegistryAsync(CreateRegistryRequest request, CancellationToken cancellationToken);
    internal virtual CreateSchemaResponse CreateSchema(CreateSchemaRequest request);
    public virtual Task`1<CreateSchemaResponse> CreateSchemaAsync(CreateSchemaRequest request, CancellationToken cancellationToken);
    internal virtual CreateScriptResponse CreateScript(CreateScriptRequest request);
    public virtual Task`1<CreateScriptResponse> CreateScriptAsync(CreateScriptRequest request, CancellationToken cancellationToken);
    internal virtual CreateSecurityConfigurationResponse CreateSecurityConfiguration(CreateSecurityConfigurationRequest request);
    public virtual Task`1<CreateSecurityConfigurationResponse> CreateSecurityConfigurationAsync(CreateSecurityConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual CreateSessionResponse CreateSession(CreateSessionRequest request);
    public virtual Task`1<CreateSessionResponse> CreateSessionAsync(CreateSessionRequest request, CancellationToken cancellationToken);
    internal virtual CreateTableResponse CreateTable(CreateTableRequest request);
    public virtual Task`1<CreateTableResponse> CreateTableAsync(CreateTableRequest request, CancellationToken cancellationToken);
    internal virtual CreateTableOptimizerResponse CreateTableOptimizer(CreateTableOptimizerRequest request);
    public virtual Task`1<CreateTableOptimizerResponse> CreateTableOptimizerAsync(CreateTableOptimizerRequest request, CancellationToken cancellationToken);
    internal virtual CreateTriggerResponse CreateTrigger(CreateTriggerRequest request);
    public virtual Task`1<CreateTriggerResponse> CreateTriggerAsync(CreateTriggerRequest request, CancellationToken cancellationToken);
    internal virtual CreateUsageProfileResponse CreateUsageProfile(CreateUsageProfileRequest request);
    public virtual Task`1<CreateUsageProfileResponse> CreateUsageProfileAsync(CreateUsageProfileRequest request, CancellationToken cancellationToken);
    internal virtual CreateUserDefinedFunctionResponse CreateUserDefinedFunction(CreateUserDefinedFunctionRequest request);
    public virtual Task`1<CreateUserDefinedFunctionResponse> CreateUserDefinedFunctionAsync(CreateUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    internal virtual CreateWorkflowResponse CreateWorkflow(CreateWorkflowRequest request);
    public virtual Task`1<CreateWorkflowResponse> CreateWorkflowAsync(CreateWorkflowRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBlueprintResponse DeleteBlueprint(DeleteBlueprintRequest request);
    public virtual Task`1<DeleteBlueprintResponse> DeleteBlueprintAsync(DeleteBlueprintRequest request, CancellationToken cancellationToken);
    internal virtual DeleteClassifierResponse DeleteClassifier(DeleteClassifierRequest request);
    public virtual Task`1<DeleteClassifierResponse> DeleteClassifierAsync(DeleteClassifierRequest request, CancellationToken cancellationToken);
    internal virtual DeleteColumnStatisticsForPartitionResponse DeleteColumnStatisticsForPartition(DeleteColumnStatisticsForPartitionRequest request);
    public virtual Task`1<DeleteColumnStatisticsForPartitionResponse> DeleteColumnStatisticsForPartitionAsync(DeleteColumnStatisticsForPartitionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteColumnStatisticsForTableResponse DeleteColumnStatisticsForTable(DeleteColumnStatisticsForTableRequest request);
    public virtual Task`1<DeleteColumnStatisticsForTableResponse> DeleteColumnStatisticsForTableAsync(DeleteColumnStatisticsForTableRequest request, CancellationToken cancellationToken);
    internal virtual DeleteConnectionResponse DeleteConnection(DeleteConnectionRequest request);
    public virtual Task`1<DeleteConnectionResponse> DeleteConnectionAsync(DeleteConnectionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCrawlerResponse DeleteCrawler(DeleteCrawlerRequest request);
    public virtual Task`1<DeleteCrawlerResponse> DeleteCrawlerAsync(DeleteCrawlerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCustomEntityTypeResponse DeleteCustomEntityType(DeleteCustomEntityTypeRequest request);
    public virtual Task`1<DeleteCustomEntityTypeResponse> DeleteCustomEntityTypeAsync(DeleteCustomEntityTypeRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDatabaseResponse DeleteDatabase(DeleteDatabaseRequest request);
    public virtual Task`1<DeleteDatabaseResponse> DeleteDatabaseAsync(DeleteDatabaseRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDataQualityRulesetResponse DeleteDataQualityRuleset(DeleteDataQualityRulesetRequest request);
    public virtual Task`1<DeleteDataQualityRulesetResponse> DeleteDataQualityRulesetAsync(DeleteDataQualityRulesetRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDevEndpointResponse DeleteDevEndpoint(DeleteDevEndpointRequest request);
    public virtual Task`1<DeleteDevEndpointResponse> DeleteDevEndpointAsync(DeleteDevEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteJobResponse DeleteJob(DeleteJobRequest request);
    public virtual Task`1<DeleteJobResponse> DeleteJobAsync(DeleteJobRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMLTransformResponse DeleteMLTransform(DeleteMLTransformRequest request);
    public virtual Task`1<DeleteMLTransformResponse> DeleteMLTransformAsync(DeleteMLTransformRequest request, CancellationToken cancellationToken);
    internal virtual DeletePartitionResponse DeletePartition(DeletePartitionRequest request);
    public virtual Task`1<DeletePartitionResponse> DeletePartitionAsync(DeletePartitionRequest request, CancellationToken cancellationToken);
    internal virtual DeletePartitionIndexResponse DeletePartitionIndex(DeletePartitionIndexRequest request);
    public virtual Task`1<DeletePartitionIndexResponse> DeletePartitionIndexAsync(DeletePartitionIndexRequest request, CancellationToken cancellationToken);
    internal virtual DeleteRegistryResponse DeleteRegistry(DeleteRegistryRequest request);
    public virtual Task`1<DeleteRegistryResponse> DeleteRegistryAsync(DeleteRegistryRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSchemaResponse DeleteSchema(DeleteSchemaRequest request);
    public virtual Task`1<DeleteSchemaResponse> DeleteSchemaAsync(DeleteSchemaRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSchemaVersionsResponse DeleteSchemaVersions(DeleteSchemaVersionsRequest request);
    public virtual Task`1<DeleteSchemaVersionsResponse> DeleteSchemaVersionsAsync(DeleteSchemaVersionsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSecurityConfigurationResponse DeleteSecurityConfiguration(DeleteSecurityConfigurationRequest request);
    public virtual Task`1<DeleteSecurityConfigurationResponse> DeleteSecurityConfigurationAsync(DeleteSecurityConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSessionResponse DeleteSession(DeleteSessionRequest request);
    public virtual Task`1<DeleteSessionResponse> DeleteSessionAsync(DeleteSessionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTableResponse DeleteTable(DeleteTableRequest request);
    public virtual Task`1<DeleteTableResponse> DeleteTableAsync(DeleteTableRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTableOptimizerResponse DeleteTableOptimizer(DeleteTableOptimizerRequest request);
    public virtual Task`1<DeleteTableOptimizerResponse> DeleteTableOptimizerAsync(DeleteTableOptimizerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTableVersionResponse DeleteTableVersion(DeleteTableVersionRequest request);
    public virtual Task`1<DeleteTableVersionResponse> DeleteTableVersionAsync(DeleteTableVersionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTriggerResponse DeleteTrigger(DeleteTriggerRequest request);
    public virtual Task`1<DeleteTriggerResponse> DeleteTriggerAsync(DeleteTriggerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUsageProfileResponse DeleteUsageProfile(DeleteUsageProfileRequest request);
    public virtual Task`1<DeleteUsageProfileResponse> DeleteUsageProfileAsync(DeleteUsageProfileRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUserDefinedFunctionResponse DeleteUserDefinedFunction(DeleteUserDefinedFunctionRequest request);
    public virtual Task`1<DeleteUserDefinedFunctionResponse> DeleteUserDefinedFunctionAsync(DeleteUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteWorkflowResponse DeleteWorkflow(DeleteWorkflowRequest request);
    public virtual Task`1<DeleteWorkflowResponse> DeleteWorkflowAsync(DeleteWorkflowRequest request, CancellationToken cancellationToken);
    internal virtual GetBlueprintResponse GetBlueprint(GetBlueprintRequest request);
    public virtual Task`1<GetBlueprintResponse> GetBlueprintAsync(GetBlueprintRequest request, CancellationToken cancellationToken);
    internal virtual GetBlueprintRunResponse GetBlueprintRun(GetBlueprintRunRequest request);
    public virtual Task`1<GetBlueprintRunResponse> GetBlueprintRunAsync(GetBlueprintRunRequest request, CancellationToken cancellationToken);
    internal virtual GetBlueprintRunsResponse GetBlueprintRuns(GetBlueprintRunsRequest request);
    public virtual Task`1<GetBlueprintRunsResponse> GetBlueprintRunsAsync(GetBlueprintRunsRequest request, CancellationToken cancellationToken);
    internal virtual GetCatalogImportStatusResponse GetCatalogImportStatus(GetCatalogImportStatusRequest request);
    public virtual Task`1<GetCatalogImportStatusResponse> GetCatalogImportStatusAsync(GetCatalogImportStatusRequest request, CancellationToken cancellationToken);
    internal virtual GetClassifierResponse GetClassifier(GetClassifierRequest request);
    public virtual Task`1<GetClassifierResponse> GetClassifierAsync(GetClassifierRequest request, CancellationToken cancellationToken);
    internal virtual GetClassifiersResponse GetClassifiers(GetClassifiersRequest request);
    public virtual Task`1<GetClassifiersResponse> GetClassifiersAsync(GetClassifiersRequest request, CancellationToken cancellationToken);
    internal virtual GetColumnStatisticsForPartitionResponse GetColumnStatisticsForPartition(GetColumnStatisticsForPartitionRequest request);
    public virtual Task`1<GetColumnStatisticsForPartitionResponse> GetColumnStatisticsForPartitionAsync(GetColumnStatisticsForPartitionRequest request, CancellationToken cancellationToken);
    internal virtual GetColumnStatisticsForTableResponse GetColumnStatisticsForTable(GetColumnStatisticsForTableRequest request);
    public virtual Task`1<GetColumnStatisticsForTableResponse> GetColumnStatisticsForTableAsync(GetColumnStatisticsForTableRequest request, CancellationToken cancellationToken);
    internal virtual GetColumnStatisticsTaskRunResponse GetColumnStatisticsTaskRun(GetColumnStatisticsTaskRunRequest request);
    public virtual Task`1<GetColumnStatisticsTaskRunResponse> GetColumnStatisticsTaskRunAsync(GetColumnStatisticsTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual GetColumnStatisticsTaskRunsResponse GetColumnStatisticsTaskRuns(GetColumnStatisticsTaskRunsRequest request);
    public virtual Task`1<GetColumnStatisticsTaskRunsResponse> GetColumnStatisticsTaskRunsAsync(GetColumnStatisticsTaskRunsRequest request, CancellationToken cancellationToken);
    internal virtual GetConnectionResponse GetConnection(GetConnectionRequest request);
    public virtual Task`1<GetConnectionResponse> GetConnectionAsync(GetConnectionRequest request, CancellationToken cancellationToken);
    internal virtual GetConnectionsResponse GetConnections(GetConnectionsRequest request);
    public virtual Task`1<GetConnectionsResponse> GetConnectionsAsync(GetConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual GetCrawlerResponse GetCrawler(GetCrawlerRequest request);
    public virtual Task`1<GetCrawlerResponse> GetCrawlerAsync(GetCrawlerRequest request, CancellationToken cancellationToken);
    internal virtual GetCrawlerMetricsResponse GetCrawlerMetrics(GetCrawlerMetricsRequest request);
    public virtual Task`1<GetCrawlerMetricsResponse> GetCrawlerMetricsAsync(GetCrawlerMetricsRequest request, CancellationToken cancellationToken);
    internal virtual GetCrawlersResponse GetCrawlers(GetCrawlersRequest request);
    public virtual Task`1<GetCrawlersResponse> GetCrawlersAsync(GetCrawlersRequest request, CancellationToken cancellationToken);
    internal virtual GetCustomEntityTypeResponse GetCustomEntityType(GetCustomEntityTypeRequest request);
    public virtual Task`1<GetCustomEntityTypeResponse> GetCustomEntityTypeAsync(GetCustomEntityTypeRequest request, CancellationToken cancellationToken);
    internal virtual GetDatabaseResponse GetDatabase(GetDatabaseRequest request);
    public virtual Task`1<GetDatabaseResponse> GetDatabaseAsync(GetDatabaseRequest request, CancellationToken cancellationToken);
    internal virtual GetDatabasesResponse GetDatabases(GetDatabasesRequest request);
    public virtual Task`1<GetDatabasesResponse> GetDatabasesAsync(GetDatabasesRequest request, CancellationToken cancellationToken);
    internal virtual GetDataCatalogEncryptionSettingsResponse GetDataCatalogEncryptionSettings(GetDataCatalogEncryptionSettingsRequest request);
    public virtual Task`1<GetDataCatalogEncryptionSettingsResponse> GetDataCatalogEncryptionSettingsAsync(GetDataCatalogEncryptionSettingsRequest request, CancellationToken cancellationToken);
    internal virtual GetDataflowGraphResponse GetDataflowGraph(GetDataflowGraphRequest request);
    public virtual Task`1<GetDataflowGraphResponse> GetDataflowGraphAsync(GetDataflowGraphRequest request, CancellationToken cancellationToken);
    internal virtual GetDataQualityResultResponse GetDataQualityResult(GetDataQualityResultRequest request);
    public virtual Task`1<GetDataQualityResultResponse> GetDataQualityResultAsync(GetDataQualityResultRequest request, CancellationToken cancellationToken);
    internal virtual GetDataQualityRuleRecommendationRunResponse GetDataQualityRuleRecommendationRun(GetDataQualityRuleRecommendationRunRequest request);
    public virtual Task`1<GetDataQualityRuleRecommendationRunResponse> GetDataQualityRuleRecommendationRunAsync(GetDataQualityRuleRecommendationRunRequest request, CancellationToken cancellationToken);
    internal virtual GetDataQualityRulesetResponse GetDataQualityRuleset(GetDataQualityRulesetRequest request);
    public virtual Task`1<GetDataQualityRulesetResponse> GetDataQualityRulesetAsync(GetDataQualityRulesetRequest request, CancellationToken cancellationToken);
    internal virtual GetDataQualityRulesetEvaluationRunResponse GetDataQualityRulesetEvaluationRun(GetDataQualityRulesetEvaluationRunRequest request);
    public virtual Task`1<GetDataQualityRulesetEvaluationRunResponse> GetDataQualityRulesetEvaluationRunAsync(GetDataQualityRulesetEvaluationRunRequest request, CancellationToken cancellationToken);
    internal virtual GetDevEndpointResponse GetDevEndpoint(GetDevEndpointRequest request);
    public virtual Task`1<GetDevEndpointResponse> GetDevEndpointAsync(GetDevEndpointRequest request, CancellationToken cancellationToken);
    internal virtual GetDevEndpointsResponse GetDevEndpoints(GetDevEndpointsRequest request);
    public virtual Task`1<GetDevEndpointsResponse> GetDevEndpointsAsync(GetDevEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual GetJobResponse GetJob(GetJobRequest request);
    public virtual Task`1<GetJobResponse> GetJobAsync(GetJobRequest request, CancellationToken cancellationToken);
    internal virtual GetJobBookmarkResponse GetJobBookmark(GetJobBookmarkRequest request);
    public virtual Task`1<GetJobBookmarkResponse> GetJobBookmarkAsync(GetJobBookmarkRequest request, CancellationToken cancellationToken);
    internal virtual GetJobRunResponse GetJobRun(GetJobRunRequest request);
    public virtual Task`1<GetJobRunResponse> GetJobRunAsync(GetJobRunRequest request, CancellationToken cancellationToken);
    internal virtual GetJobRunsResponse GetJobRuns(GetJobRunsRequest request);
    public virtual Task`1<GetJobRunsResponse> GetJobRunsAsync(GetJobRunsRequest request, CancellationToken cancellationToken);
    internal virtual GetJobsResponse GetJobs(GetJobsRequest request);
    public virtual Task`1<GetJobsResponse> GetJobsAsync(GetJobsRequest request, CancellationToken cancellationToken);
    internal virtual GetMappingResponse GetMapping(GetMappingRequest request);
    public virtual Task`1<GetMappingResponse> GetMappingAsync(GetMappingRequest request, CancellationToken cancellationToken);
    internal virtual GetMLTaskRunResponse GetMLTaskRun(GetMLTaskRunRequest request);
    public virtual Task`1<GetMLTaskRunResponse> GetMLTaskRunAsync(GetMLTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual GetMLTaskRunsResponse GetMLTaskRuns(GetMLTaskRunsRequest request);
    public virtual Task`1<GetMLTaskRunsResponse> GetMLTaskRunsAsync(GetMLTaskRunsRequest request, CancellationToken cancellationToken);
    internal virtual GetMLTransformResponse GetMLTransform(GetMLTransformRequest request);
    public virtual Task`1<GetMLTransformResponse> GetMLTransformAsync(GetMLTransformRequest request, CancellationToken cancellationToken);
    internal virtual GetMLTransformsResponse GetMLTransforms(GetMLTransformsRequest request);
    public virtual Task`1<GetMLTransformsResponse> GetMLTransformsAsync(GetMLTransformsRequest request, CancellationToken cancellationToken);
    internal virtual GetPartitionResponse GetPartition(GetPartitionRequest request);
    public virtual Task`1<GetPartitionResponse> GetPartitionAsync(GetPartitionRequest request, CancellationToken cancellationToken);
    internal virtual GetPartitionIndexesResponse GetPartitionIndexes(GetPartitionIndexesRequest request);
    public virtual Task`1<GetPartitionIndexesResponse> GetPartitionIndexesAsync(GetPartitionIndexesRequest request, CancellationToken cancellationToken);
    internal virtual GetPartitionsResponse GetPartitions(GetPartitionsRequest request);
    public virtual Task`1<GetPartitionsResponse> GetPartitionsAsync(GetPartitionsRequest request, CancellationToken cancellationToken);
    internal virtual GetPlanResponse GetPlan(GetPlanRequest request);
    public virtual Task`1<GetPlanResponse> GetPlanAsync(GetPlanRequest request, CancellationToken cancellationToken);
    internal virtual GetRegistryResponse GetRegistry(GetRegistryRequest request);
    public virtual Task`1<GetRegistryResponse> GetRegistryAsync(GetRegistryRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePoliciesResponse GetResourcePolicies(GetResourcePoliciesRequest request);
    public virtual Task`1<GetResourcePoliciesResponse> GetResourcePoliciesAsync(GetResourcePoliciesRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePolicyResponse GetResourcePolicy(GetResourcePolicyRequest request);
    public virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetSchemaResponse GetSchema(GetSchemaRequest request);
    public virtual Task`1<GetSchemaResponse> GetSchemaAsync(GetSchemaRequest request, CancellationToken cancellationToken);
    internal virtual GetSchemaByDefinitionResponse GetSchemaByDefinition(GetSchemaByDefinitionRequest request);
    public virtual Task`1<GetSchemaByDefinitionResponse> GetSchemaByDefinitionAsync(GetSchemaByDefinitionRequest request, CancellationToken cancellationToken);
    internal virtual GetSchemaVersionResponse GetSchemaVersion(GetSchemaVersionRequest request);
    public virtual Task`1<GetSchemaVersionResponse> GetSchemaVersionAsync(GetSchemaVersionRequest request, CancellationToken cancellationToken);
    internal virtual GetSchemaVersionsDiffResponse GetSchemaVersionsDiff(GetSchemaVersionsDiffRequest request);
    public virtual Task`1<GetSchemaVersionsDiffResponse> GetSchemaVersionsDiffAsync(GetSchemaVersionsDiffRequest request, CancellationToken cancellationToken);
    internal virtual GetSecurityConfigurationResponse GetSecurityConfiguration(GetSecurityConfigurationRequest request);
    public virtual Task`1<GetSecurityConfigurationResponse> GetSecurityConfigurationAsync(GetSecurityConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual GetSecurityConfigurationsResponse GetSecurityConfigurations(GetSecurityConfigurationsRequest request);
    public virtual Task`1<GetSecurityConfigurationsResponse> GetSecurityConfigurationsAsync(GetSecurityConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual GetSessionResponse GetSession(GetSessionRequest request);
    public virtual Task`1<GetSessionResponse> GetSessionAsync(GetSessionRequest request, CancellationToken cancellationToken);
    internal virtual GetStatementResponse GetStatement(GetStatementRequest request);
    public virtual Task`1<GetStatementResponse> GetStatementAsync(GetStatementRequest request, CancellationToken cancellationToken);
    internal virtual GetTableResponse GetTable(GetTableRequest request);
    public virtual Task`1<GetTableResponse> GetTableAsync(GetTableRequest request, CancellationToken cancellationToken);
    internal virtual GetTableOptimizerResponse GetTableOptimizer(GetTableOptimizerRequest request);
    public virtual Task`1<GetTableOptimizerResponse> GetTableOptimizerAsync(GetTableOptimizerRequest request, CancellationToken cancellationToken);
    internal virtual GetTablesResponse GetTables(GetTablesRequest request);
    public virtual Task`1<GetTablesResponse> GetTablesAsync(GetTablesRequest request, CancellationToken cancellationToken);
    internal virtual GetTableVersionResponse GetTableVersion(GetTableVersionRequest request);
    public virtual Task`1<GetTableVersionResponse> GetTableVersionAsync(GetTableVersionRequest request, CancellationToken cancellationToken);
    internal virtual GetTableVersionsResponse GetTableVersions(GetTableVersionsRequest request);
    public virtual Task`1<GetTableVersionsResponse> GetTableVersionsAsync(GetTableVersionsRequest request, CancellationToken cancellationToken);
    internal virtual GetTagsResponse GetTags(GetTagsRequest request);
    public virtual Task`1<GetTagsResponse> GetTagsAsync(GetTagsRequest request, CancellationToken cancellationToken);
    internal virtual GetTriggerResponse GetTrigger(GetTriggerRequest request);
    public virtual Task`1<GetTriggerResponse> GetTriggerAsync(GetTriggerRequest request, CancellationToken cancellationToken);
    internal virtual GetTriggersResponse GetTriggers(GetTriggersRequest request);
    public virtual Task`1<GetTriggersResponse> GetTriggersAsync(GetTriggersRequest request, CancellationToken cancellationToken);
    internal virtual GetUnfilteredPartitionMetadataResponse GetUnfilteredPartitionMetadata(GetUnfilteredPartitionMetadataRequest request);
    public virtual Task`1<GetUnfilteredPartitionMetadataResponse> GetUnfilteredPartitionMetadataAsync(GetUnfilteredPartitionMetadataRequest request, CancellationToken cancellationToken);
    internal virtual GetUnfilteredPartitionsMetadataResponse GetUnfilteredPartitionsMetadata(GetUnfilteredPartitionsMetadataRequest request);
    public virtual Task`1<GetUnfilteredPartitionsMetadataResponse> GetUnfilteredPartitionsMetadataAsync(GetUnfilteredPartitionsMetadataRequest request, CancellationToken cancellationToken);
    internal virtual GetUnfilteredTableMetadataResponse GetUnfilteredTableMetadata(GetUnfilteredTableMetadataRequest request);
    public virtual Task`1<GetUnfilteredTableMetadataResponse> GetUnfilteredTableMetadataAsync(GetUnfilteredTableMetadataRequest request, CancellationToken cancellationToken);
    internal virtual GetUsageProfileResponse GetUsageProfile(GetUsageProfileRequest request);
    public virtual Task`1<GetUsageProfileResponse> GetUsageProfileAsync(GetUsageProfileRequest request, CancellationToken cancellationToken);
    internal virtual GetUserDefinedFunctionResponse GetUserDefinedFunction(GetUserDefinedFunctionRequest request);
    public virtual Task`1<GetUserDefinedFunctionResponse> GetUserDefinedFunctionAsync(GetUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    internal virtual GetUserDefinedFunctionsResponse GetUserDefinedFunctions(GetUserDefinedFunctionsRequest request);
    public virtual Task`1<GetUserDefinedFunctionsResponse> GetUserDefinedFunctionsAsync(GetUserDefinedFunctionsRequest request, CancellationToken cancellationToken);
    internal virtual GetWorkflowResponse GetWorkflow(GetWorkflowRequest request);
    public virtual Task`1<GetWorkflowResponse> GetWorkflowAsync(GetWorkflowRequest request, CancellationToken cancellationToken);
    internal virtual GetWorkflowRunResponse GetWorkflowRun(GetWorkflowRunRequest request);
    public virtual Task`1<GetWorkflowRunResponse> GetWorkflowRunAsync(GetWorkflowRunRequest request, CancellationToken cancellationToken);
    internal virtual GetWorkflowRunPropertiesResponse GetWorkflowRunProperties(GetWorkflowRunPropertiesRequest request);
    public virtual Task`1<GetWorkflowRunPropertiesResponse> GetWorkflowRunPropertiesAsync(GetWorkflowRunPropertiesRequest request, CancellationToken cancellationToken);
    internal virtual GetWorkflowRunsResponse GetWorkflowRuns(GetWorkflowRunsRequest request);
    public virtual Task`1<GetWorkflowRunsResponse> GetWorkflowRunsAsync(GetWorkflowRunsRequest request, CancellationToken cancellationToken);
    internal virtual ImportCatalogToGlueResponse ImportCatalogToGlue(ImportCatalogToGlueRequest request);
    public virtual Task`1<ImportCatalogToGlueResponse> ImportCatalogToGlueAsync(ImportCatalogToGlueRequest request, CancellationToken cancellationToken);
    internal virtual ListBlueprintsResponse ListBlueprints(ListBlueprintsRequest request);
    public virtual Task`1<ListBlueprintsResponse> ListBlueprintsAsync(ListBlueprintsRequest request, CancellationToken cancellationToken);
    internal virtual ListColumnStatisticsTaskRunsResponse ListColumnStatisticsTaskRuns(ListColumnStatisticsTaskRunsRequest request);
    public virtual Task`1<ListColumnStatisticsTaskRunsResponse> ListColumnStatisticsTaskRunsAsync(ListColumnStatisticsTaskRunsRequest request, CancellationToken cancellationToken);
    internal virtual ListCrawlersResponse ListCrawlers(ListCrawlersRequest request);
    public virtual Task`1<ListCrawlersResponse> ListCrawlersAsync(ListCrawlersRequest request, CancellationToken cancellationToken);
    internal virtual ListCrawlsResponse ListCrawls(ListCrawlsRequest request);
    public virtual Task`1<ListCrawlsResponse> ListCrawlsAsync(ListCrawlsRequest request, CancellationToken cancellationToken);
    internal virtual ListCustomEntityTypesResponse ListCustomEntityTypes(ListCustomEntityTypesRequest request);
    public virtual Task`1<ListCustomEntityTypesResponse> ListCustomEntityTypesAsync(ListCustomEntityTypesRequest request, CancellationToken cancellationToken);
    internal virtual ListDataQualityResultsResponse ListDataQualityResults(ListDataQualityResultsRequest request);
    public virtual Task`1<ListDataQualityResultsResponse> ListDataQualityResultsAsync(ListDataQualityResultsRequest request, CancellationToken cancellationToken);
    internal virtual ListDataQualityRuleRecommendationRunsResponse ListDataQualityRuleRecommendationRuns(ListDataQualityRuleRecommendationRunsRequest request);
    public virtual Task`1<ListDataQualityRuleRecommendationRunsResponse> ListDataQualityRuleRecommendationRunsAsync(ListDataQualityRuleRecommendationRunsRequest request, CancellationToken cancellationToken);
    internal virtual ListDataQualityRulesetEvaluationRunsResponse ListDataQualityRulesetEvaluationRuns(ListDataQualityRulesetEvaluationRunsRequest request);
    public virtual Task`1<ListDataQualityRulesetEvaluationRunsResponse> ListDataQualityRulesetEvaluationRunsAsync(ListDataQualityRulesetEvaluationRunsRequest request, CancellationToken cancellationToken);
    internal virtual ListDataQualityRulesetsResponse ListDataQualityRulesets(ListDataQualityRulesetsRequest request);
    public virtual Task`1<ListDataQualityRulesetsResponse> ListDataQualityRulesetsAsync(ListDataQualityRulesetsRequest request, CancellationToken cancellationToken);
    internal virtual ListDevEndpointsResponse ListDevEndpoints(ListDevEndpointsRequest request);
    public virtual Task`1<ListDevEndpointsResponse> ListDevEndpointsAsync(ListDevEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual ListJobsResponse ListJobs(ListJobsRequest request);
    public virtual Task`1<ListJobsResponse> ListJobsAsync(ListJobsRequest request, CancellationToken cancellationToken);
    internal virtual ListMLTransformsResponse ListMLTransforms(ListMLTransformsRequest request);
    public virtual Task`1<ListMLTransformsResponse> ListMLTransformsAsync(ListMLTransformsRequest request, CancellationToken cancellationToken);
    internal virtual ListRegistriesResponse ListRegistries(ListRegistriesRequest request);
    public virtual Task`1<ListRegistriesResponse> ListRegistriesAsync(ListRegistriesRequest request, CancellationToken cancellationToken);
    internal virtual ListSchemasResponse ListSchemas(ListSchemasRequest request);
    public virtual Task`1<ListSchemasResponse> ListSchemasAsync(ListSchemasRequest request, CancellationToken cancellationToken);
    internal virtual ListSchemaVersionsResponse ListSchemaVersions(ListSchemaVersionsRequest request);
    public virtual Task`1<ListSchemaVersionsResponse> ListSchemaVersionsAsync(ListSchemaVersionsRequest request, CancellationToken cancellationToken);
    internal virtual ListSessionsResponse ListSessions(ListSessionsRequest request);
    public virtual Task`1<ListSessionsResponse> ListSessionsAsync(ListSessionsRequest request, CancellationToken cancellationToken);
    internal virtual ListStatementsResponse ListStatements(ListStatementsRequest request);
    public virtual Task`1<ListStatementsResponse> ListStatementsAsync(ListStatementsRequest request, CancellationToken cancellationToken);
    internal virtual ListTableOptimizerRunsResponse ListTableOptimizerRuns(ListTableOptimizerRunsRequest request);
    public virtual Task`1<ListTableOptimizerRunsResponse> ListTableOptimizerRunsAsync(ListTableOptimizerRunsRequest request, CancellationToken cancellationToken);
    internal virtual ListTriggersResponse ListTriggers(ListTriggersRequest request);
    public virtual Task`1<ListTriggersResponse> ListTriggersAsync(ListTriggersRequest request, CancellationToken cancellationToken);
    internal virtual ListUsageProfilesResponse ListUsageProfiles(ListUsageProfilesRequest request);
    public virtual Task`1<ListUsageProfilesResponse> ListUsageProfilesAsync(ListUsageProfilesRequest request, CancellationToken cancellationToken);
    internal virtual ListWorkflowsResponse ListWorkflows(ListWorkflowsRequest request);
    public virtual Task`1<ListWorkflowsResponse> ListWorkflowsAsync(ListWorkflowsRequest request, CancellationToken cancellationToken);
    internal virtual PutDataCatalogEncryptionSettingsResponse PutDataCatalogEncryptionSettings(PutDataCatalogEncryptionSettingsRequest request);
    public virtual Task`1<PutDataCatalogEncryptionSettingsResponse> PutDataCatalogEncryptionSettingsAsync(PutDataCatalogEncryptionSettingsRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual PutSchemaVersionMetadataResponse PutSchemaVersionMetadata(PutSchemaVersionMetadataRequest request);
    public virtual Task`1<PutSchemaVersionMetadataResponse> PutSchemaVersionMetadataAsync(PutSchemaVersionMetadataRequest request, CancellationToken cancellationToken);
    internal virtual PutWorkflowRunPropertiesResponse PutWorkflowRunProperties(PutWorkflowRunPropertiesRequest request);
    public virtual Task`1<PutWorkflowRunPropertiesResponse> PutWorkflowRunPropertiesAsync(PutWorkflowRunPropertiesRequest request, CancellationToken cancellationToken);
    internal virtual QuerySchemaVersionMetadataResponse QuerySchemaVersionMetadata(QuerySchemaVersionMetadataRequest request);
    public virtual Task`1<QuerySchemaVersionMetadataResponse> QuerySchemaVersionMetadataAsync(QuerySchemaVersionMetadataRequest request, CancellationToken cancellationToken);
    internal virtual RegisterSchemaVersionResponse RegisterSchemaVersion(RegisterSchemaVersionRequest request);
    public virtual Task`1<RegisterSchemaVersionResponse> RegisterSchemaVersionAsync(RegisterSchemaVersionRequest request, CancellationToken cancellationToken);
    internal virtual RemoveSchemaVersionMetadataResponse RemoveSchemaVersionMetadata(RemoveSchemaVersionMetadataRequest request);
    public virtual Task`1<RemoveSchemaVersionMetadataResponse> RemoveSchemaVersionMetadataAsync(RemoveSchemaVersionMetadataRequest request, CancellationToken cancellationToken);
    internal virtual ResetJobBookmarkResponse ResetJobBookmark(ResetJobBookmarkRequest request);
    public virtual Task`1<ResetJobBookmarkResponse> ResetJobBookmarkAsync(ResetJobBookmarkRequest request, CancellationToken cancellationToken);
    internal virtual ResumeWorkflowRunResponse ResumeWorkflowRun(ResumeWorkflowRunRequest request);
    public virtual Task`1<ResumeWorkflowRunResponse> ResumeWorkflowRunAsync(ResumeWorkflowRunRequest request, CancellationToken cancellationToken);
    internal virtual RunStatementResponse RunStatement(RunStatementRequest request);
    public virtual Task`1<RunStatementResponse> RunStatementAsync(RunStatementRequest request, CancellationToken cancellationToken);
    internal virtual SearchTablesResponse SearchTables(SearchTablesRequest request);
    public virtual Task`1<SearchTablesResponse> SearchTablesAsync(SearchTablesRequest request, CancellationToken cancellationToken);
    internal virtual StartBlueprintRunResponse StartBlueprintRun(StartBlueprintRunRequest request);
    public virtual Task`1<StartBlueprintRunResponse> StartBlueprintRunAsync(StartBlueprintRunRequest request, CancellationToken cancellationToken);
    internal virtual StartColumnStatisticsTaskRunResponse StartColumnStatisticsTaskRun(StartColumnStatisticsTaskRunRequest request);
    public virtual Task`1<StartColumnStatisticsTaskRunResponse> StartColumnStatisticsTaskRunAsync(StartColumnStatisticsTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual StartCrawlerResponse StartCrawler(StartCrawlerRequest request);
    public virtual Task`1<StartCrawlerResponse> StartCrawlerAsync(StartCrawlerRequest request, CancellationToken cancellationToken);
    internal virtual StartCrawlerScheduleResponse StartCrawlerSchedule(StartCrawlerScheduleRequest request);
    public virtual Task`1<StartCrawlerScheduleResponse> StartCrawlerScheduleAsync(StartCrawlerScheduleRequest request, CancellationToken cancellationToken);
    internal virtual StartDataQualityRuleRecommendationRunResponse StartDataQualityRuleRecommendationRun(StartDataQualityRuleRecommendationRunRequest request);
    public virtual Task`1<StartDataQualityRuleRecommendationRunResponse> StartDataQualityRuleRecommendationRunAsync(StartDataQualityRuleRecommendationRunRequest request, CancellationToken cancellationToken);
    internal virtual StartDataQualityRulesetEvaluationRunResponse StartDataQualityRulesetEvaluationRun(StartDataQualityRulesetEvaluationRunRequest request);
    public virtual Task`1<StartDataQualityRulesetEvaluationRunResponse> StartDataQualityRulesetEvaluationRunAsync(StartDataQualityRulesetEvaluationRunRequest request, CancellationToken cancellationToken);
    internal virtual StartExportLabelsTaskRunResponse StartExportLabelsTaskRun(StartExportLabelsTaskRunRequest request);
    public virtual Task`1<StartExportLabelsTaskRunResponse> StartExportLabelsTaskRunAsync(StartExportLabelsTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual StartImportLabelsTaskRunResponse StartImportLabelsTaskRun(StartImportLabelsTaskRunRequest request);
    public virtual Task`1<StartImportLabelsTaskRunResponse> StartImportLabelsTaskRunAsync(StartImportLabelsTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual StartJobRunResponse StartJobRun(StartJobRunRequest request);
    public virtual Task`1<StartJobRunResponse> StartJobRunAsync(StartJobRunRequest request, CancellationToken cancellationToken);
    internal virtual StartMLEvaluationTaskRunResponse StartMLEvaluationTaskRun(StartMLEvaluationTaskRunRequest request);
    public virtual Task`1<StartMLEvaluationTaskRunResponse> StartMLEvaluationTaskRunAsync(StartMLEvaluationTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual StartMLLabelingSetGenerationTaskRunResponse StartMLLabelingSetGenerationTaskRun(StartMLLabelingSetGenerationTaskRunRequest request);
    public virtual Task`1<StartMLLabelingSetGenerationTaskRunResponse> StartMLLabelingSetGenerationTaskRunAsync(StartMLLabelingSetGenerationTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual StartTriggerResponse StartTrigger(StartTriggerRequest request);
    public virtual Task`1<StartTriggerResponse> StartTriggerAsync(StartTriggerRequest request, CancellationToken cancellationToken);
    internal virtual StartWorkflowRunResponse StartWorkflowRun(StartWorkflowRunRequest request);
    public virtual Task`1<StartWorkflowRunResponse> StartWorkflowRunAsync(StartWorkflowRunRequest request, CancellationToken cancellationToken);
    internal virtual StopColumnStatisticsTaskRunResponse StopColumnStatisticsTaskRun(StopColumnStatisticsTaskRunRequest request);
    public virtual Task`1<StopColumnStatisticsTaskRunResponse> StopColumnStatisticsTaskRunAsync(StopColumnStatisticsTaskRunRequest request, CancellationToken cancellationToken);
    internal virtual StopCrawlerResponse StopCrawler(StopCrawlerRequest request);
    public virtual Task`1<StopCrawlerResponse> StopCrawlerAsync(StopCrawlerRequest request, CancellationToken cancellationToken);
    internal virtual StopCrawlerScheduleResponse StopCrawlerSchedule(StopCrawlerScheduleRequest request);
    public virtual Task`1<StopCrawlerScheduleResponse> StopCrawlerScheduleAsync(StopCrawlerScheduleRequest request, CancellationToken cancellationToken);
    internal virtual StopSessionResponse StopSession(StopSessionRequest request);
    public virtual Task`1<StopSessionResponse> StopSessionAsync(StopSessionRequest request, CancellationToken cancellationToken);
    internal virtual StopTriggerResponse StopTrigger(StopTriggerRequest request);
    public virtual Task`1<StopTriggerResponse> StopTriggerAsync(StopTriggerRequest request, CancellationToken cancellationToken);
    internal virtual StopWorkflowRunResponse StopWorkflowRun(StopWorkflowRunRequest request);
    public virtual Task`1<StopWorkflowRunResponse> StopWorkflowRunAsync(StopWorkflowRunRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateBlueprintResponse UpdateBlueprint(UpdateBlueprintRequest request);
    public virtual Task`1<UpdateBlueprintResponse> UpdateBlueprintAsync(UpdateBlueprintRequest request, CancellationToken cancellationToken);
    internal virtual UpdateClassifierResponse UpdateClassifier(UpdateClassifierRequest request);
    public virtual Task`1<UpdateClassifierResponse> UpdateClassifierAsync(UpdateClassifierRequest request, CancellationToken cancellationToken);
    internal virtual UpdateColumnStatisticsForPartitionResponse UpdateColumnStatisticsForPartition(UpdateColumnStatisticsForPartitionRequest request);
    public virtual Task`1<UpdateColumnStatisticsForPartitionResponse> UpdateColumnStatisticsForPartitionAsync(UpdateColumnStatisticsForPartitionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateColumnStatisticsForTableResponse UpdateColumnStatisticsForTable(UpdateColumnStatisticsForTableRequest request);
    public virtual Task`1<UpdateColumnStatisticsForTableResponse> UpdateColumnStatisticsForTableAsync(UpdateColumnStatisticsForTableRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConnectionResponse UpdateConnection(UpdateConnectionRequest request);
    public virtual Task`1<UpdateConnectionResponse> UpdateConnectionAsync(UpdateConnectionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateCrawlerResponse UpdateCrawler(UpdateCrawlerRequest request);
    public virtual Task`1<UpdateCrawlerResponse> UpdateCrawlerAsync(UpdateCrawlerRequest request, CancellationToken cancellationToken);
    internal virtual UpdateCrawlerScheduleResponse UpdateCrawlerSchedule(UpdateCrawlerScheduleRequest request);
    public virtual Task`1<UpdateCrawlerScheduleResponse> UpdateCrawlerScheduleAsync(UpdateCrawlerScheduleRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDatabaseResponse UpdateDatabase(UpdateDatabaseRequest request);
    public virtual Task`1<UpdateDatabaseResponse> UpdateDatabaseAsync(UpdateDatabaseRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDataQualityRulesetResponse UpdateDataQualityRuleset(UpdateDataQualityRulesetRequest request);
    public virtual Task`1<UpdateDataQualityRulesetResponse> UpdateDataQualityRulesetAsync(UpdateDataQualityRulesetRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDevEndpointResponse UpdateDevEndpoint(UpdateDevEndpointRequest request);
    public virtual Task`1<UpdateDevEndpointResponse> UpdateDevEndpointAsync(UpdateDevEndpointRequest request, CancellationToken cancellationToken);
    internal virtual UpdateJobResponse UpdateJob(UpdateJobRequest request);
    public virtual Task`1<UpdateJobResponse> UpdateJobAsync(UpdateJobRequest request, CancellationToken cancellationToken);
    internal virtual UpdateJobFromSourceControlResponse UpdateJobFromSourceControl(UpdateJobFromSourceControlRequest request);
    public virtual Task`1<UpdateJobFromSourceControlResponse> UpdateJobFromSourceControlAsync(UpdateJobFromSourceControlRequest request, CancellationToken cancellationToken);
    internal virtual UpdateMLTransformResponse UpdateMLTransform(UpdateMLTransformRequest request);
    public virtual Task`1<UpdateMLTransformResponse> UpdateMLTransformAsync(UpdateMLTransformRequest request, CancellationToken cancellationToken);
    internal virtual UpdatePartitionResponse UpdatePartition(UpdatePartitionRequest request);
    public virtual Task`1<UpdatePartitionResponse> UpdatePartitionAsync(UpdatePartitionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateRegistryResponse UpdateRegistry(UpdateRegistryRequest request);
    public virtual Task`1<UpdateRegistryResponse> UpdateRegistryAsync(UpdateRegistryRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSchemaResponse UpdateSchema(UpdateSchemaRequest request);
    public virtual Task`1<UpdateSchemaResponse> UpdateSchemaAsync(UpdateSchemaRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSourceControlFromJobResponse UpdateSourceControlFromJob(UpdateSourceControlFromJobRequest request);
    public virtual Task`1<UpdateSourceControlFromJobResponse> UpdateSourceControlFromJobAsync(UpdateSourceControlFromJobRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTableResponse UpdateTable(UpdateTableRequest request);
    public virtual Task`1<UpdateTableResponse> UpdateTableAsync(UpdateTableRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTableOptimizerResponse UpdateTableOptimizer(UpdateTableOptimizerRequest request);
    public virtual Task`1<UpdateTableOptimizerResponse> UpdateTableOptimizerAsync(UpdateTableOptimizerRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTriggerResponse UpdateTrigger(UpdateTriggerRequest request);
    public virtual Task`1<UpdateTriggerResponse> UpdateTriggerAsync(UpdateTriggerRequest request, CancellationToken cancellationToken);
    internal virtual UpdateUsageProfileResponse UpdateUsageProfile(UpdateUsageProfileRequest request);
    public virtual Task`1<UpdateUsageProfileResponse> UpdateUsageProfileAsync(UpdateUsageProfileRequest request, CancellationToken cancellationToken);
    internal virtual UpdateUserDefinedFunctionResponse UpdateUserDefinedFunction(UpdateUserDefinedFunctionRequest request);
    public virtual Task`1<UpdateUserDefinedFunctionResponse> UpdateUserDefinedFunctionAsync(UpdateUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateWorkflowResponse UpdateWorkflow(UpdateWorkflowRequest request);
    public virtual Task`1<UpdateWorkflowResponse> UpdateWorkflowAsync(UpdateWorkflowRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Glue.AmazonGlueConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonGlueEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonGlueConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.Glue.AmazonGlueDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonGlueDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.Glue.AmazonGlueException : AmazonServiceException {
    public AmazonGlueException(string message);
    public AmazonGlueException(string message, Exception innerException);
    public AmazonGlueException(Exception innerException);
    public AmazonGlueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonGlueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.AmazonGlueRequest : AmazonWebServiceRequest {
}
public class Amazon.Glue.AuthenticationType : ConstantClass {
    public static AuthenticationType BASIC;
    public static AuthenticationType CUSTOM;
    public static AuthenticationType OAUTH2;
    public AuthenticationType(string value);
    private static AuthenticationType();
    public static AuthenticationType FindValue(string value);
    public static AuthenticationType op_Implicit(string value);
}
public class Amazon.Glue.BackfillErrorCode : ConstantClass {
    public static BackfillErrorCode ENCRYPTED_PARTITION_ERROR;
    public static BackfillErrorCode INTERNAL_ERROR;
    public static BackfillErrorCode INVALID_PARTITION_TYPE_DATA_ERROR;
    public static BackfillErrorCode MISSING_PARTITION_VALUE_ERROR;
    public static BackfillErrorCode UNSUPPORTED_PARTITION_CHARACTER_ERROR;
    public BackfillErrorCode(string value);
    private static BackfillErrorCode();
    public static BackfillErrorCode FindValue(string value);
    public static BackfillErrorCode op_Implicit(string value);
}
public class Amazon.Glue.BlueprintRunState : ConstantClass {
    public static BlueprintRunState FAILED;
    public static BlueprintRunState ROLLING_BACK;
    public static BlueprintRunState RUNNING;
    public static BlueprintRunState SUCCEEDED;
    public BlueprintRunState(string value);
    private static BlueprintRunState();
    public static BlueprintRunState FindValue(string value);
    public static BlueprintRunState op_Implicit(string value);
}
public class Amazon.Glue.BlueprintStatus : ConstantClass {
    public static BlueprintStatus ACTIVE;
    public static BlueprintStatus CREATING;
    public static BlueprintStatus FAILED;
    public static BlueprintStatus UPDATING;
    public BlueprintStatus(string value);
    private static BlueprintStatus();
    public static BlueprintStatus FindValue(string value);
    public static BlueprintStatus op_Implicit(string value);
}
public class Amazon.Glue.CatalogEncryptionMode : ConstantClass {
    public static CatalogEncryptionMode DISABLED;
    public static CatalogEncryptionMode SSEKMS;
    public static CatalogEncryptionMode SSEKMSWITHSERVICEROLE;
    public CatalogEncryptionMode(string value);
    private static CatalogEncryptionMode();
    public static CatalogEncryptionMode FindValue(string value);
    public static CatalogEncryptionMode op_Implicit(string value);
}
public class Amazon.Glue.CloudWatchEncryptionMode : ConstantClass {
    public static CloudWatchEncryptionMode DISABLED;
    public static CloudWatchEncryptionMode SSEKMS;
    public CloudWatchEncryptionMode(string value);
    private static CloudWatchEncryptionMode();
    public static CloudWatchEncryptionMode FindValue(string value);
    public static CloudWatchEncryptionMode op_Implicit(string value);
}
public class Amazon.Glue.ColumnStatisticsState : ConstantClass {
    public static ColumnStatisticsState FAILED;
    public static ColumnStatisticsState RUNNING;
    public static ColumnStatisticsState STARTING;
    public static ColumnStatisticsState STOPPED;
    public static ColumnStatisticsState SUCCEEDED;
    public ColumnStatisticsState(string value);
    private static ColumnStatisticsState();
    public static ColumnStatisticsState FindValue(string value);
    public static ColumnStatisticsState op_Implicit(string value);
}
public class Amazon.Glue.ColumnStatisticsType : ConstantClass {
    public static ColumnStatisticsType BINARY;
    public static ColumnStatisticsType BOOLEAN;
    public static ColumnStatisticsType DATE;
    public static ColumnStatisticsType DECIMAL;
    public static ColumnStatisticsType DOUBLE;
    public static ColumnStatisticsType LONG;
    public static ColumnStatisticsType STRING;
    public ColumnStatisticsType(string value);
    private static ColumnStatisticsType();
    public static ColumnStatisticsType FindValue(string value);
    public static ColumnStatisticsType op_Implicit(string value);
}
public class Amazon.Glue.Comparator : ConstantClass {
    public static Comparator EQUALS;
    public static Comparator GREATER_THAN;
    public static Comparator GREATER_THAN_EQUALS;
    public static Comparator LESS_THAN;
    public static Comparator LESS_THAN_EQUALS;
    public Comparator(string value);
    private static Comparator();
    public static Comparator FindValue(string value);
    public static Comparator op_Implicit(string value);
}
public class Amazon.Glue.Compatibility : ConstantClass {
    public static Compatibility BACKWARD;
    public static Compatibility BACKWARD_ALL;
    public static Compatibility DISABLED;
    public static Compatibility FORWARD;
    public static Compatibility FORWARD_ALL;
    public static Compatibility FULL;
    public static Compatibility FULL_ALL;
    public static Compatibility NONE;
    public Compatibility(string value);
    private static Compatibility();
    public static Compatibility FindValue(string value);
    public static Compatibility op_Implicit(string value);
}
public class Amazon.Glue.CompressionType : ConstantClass {
    public static CompressionType Bzip2;
    public static CompressionType Gzip;
    public CompressionType(string value);
    private static CompressionType();
    public static CompressionType FindValue(string value);
    public static CompressionType op_Implicit(string value);
}
public class Amazon.Glue.ConnectionPropertyKey : ConstantClass {
    public static ConnectionPropertyKey CONFIG_FILES;
    public static ConnectionPropertyKey CONNECTION_URL;
    public static ConnectionPropertyKey CONNECTOR_CLASS_NAME;
    public static ConnectionPropertyKey CONNECTOR_TYPE;
    public static ConnectionPropertyKey CONNECTOR_URL;
    public static ConnectionPropertyKey CUSTOM_JDBC_CERT;
    public static ConnectionPropertyKey CUSTOM_JDBC_CERT_STRING;
    public static ConnectionPropertyKey ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD;
    public static ConnectionPropertyKey ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD;
    public static ConnectionPropertyKey ENCRYPTED_KAFKA_SASL_PLAIN_PASSWORD;
    public static ConnectionPropertyKey ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD;
    public static ConnectionPropertyKey ENCRYPTED_PASSWORD;
    public static ConnectionPropertyKey HOST;
    public static ConnectionPropertyKey INSTANCE_ID;
    public static ConnectionPropertyKey JDBC_CONNECTION_URL;
    public static ConnectionPropertyKey JDBC_DRIVER_CLASS_NAME;
    public static ConnectionPropertyKey JDBC_DRIVER_JAR_URI;
    public static ConnectionPropertyKey JDBC_ENFORCE_SSL;
    public static ConnectionPropertyKey JDBC_ENGINE;
    public static ConnectionPropertyKey JDBC_ENGINE_VERSION;
    public static ConnectionPropertyKey KAFKA_BOOTSTRAP_SERVERS;
    public static ConnectionPropertyKey KAFKA_CLIENT_KEY_PASSWORD;
    public static ConnectionPropertyKey KAFKA_CLIENT_KEYSTORE;
    public static ConnectionPropertyKey KAFKA_CLIENT_KEYSTORE_PASSWORD;
    public static ConnectionPropertyKey KAFKA_CUSTOM_CERT;
    public static ConnectionPropertyKey KAFKA_SASL_GSSAPI_KEYTAB;
    public static ConnectionPropertyKey KAFKA_SASL_GSSAPI_KRB5_CONF;
    public static ConnectionPropertyKey KAFKA_SASL_GSSAPI_PRINCIPAL;
    public static ConnectionPropertyKey KAFKA_SASL_GSSAPI_SERVICE;
    public static ConnectionPropertyKey KAFKA_SASL_MECHANISM;
    public static ConnectionPropertyKey KAFKA_SASL_PLAIN_PASSWORD;
    public static ConnectionPropertyKey KAFKA_SASL_PLAIN_USERNAME;
    public static ConnectionPropertyKey KAFKA_SASL_SCRAM_PASSWORD;
    public static ConnectionPropertyKey KAFKA_SASL_SCRAM_SECRETS_ARN;
    public static ConnectionPropertyKey KAFKA_SASL_SCRAM_USERNAME;
    public static ConnectionPropertyKey KAFKA_SKIP_CUSTOM_CERT_VALIDATION;
    public static ConnectionPropertyKey KAFKA_SSL_ENABLED;
    public static ConnectionPropertyKey PASSWORD;
    public static ConnectionPropertyKey PORT;
    public static ConnectionPropertyKey ROLE_ARN;
    public static ConnectionPropertyKey SECRET_ID;
    public static ConnectionPropertyKey SKIP_CUSTOM_JDBC_CERT_VALIDATION;
    public static ConnectionPropertyKey USERNAME;
    public ConnectionPropertyKey(string value);
    private static ConnectionPropertyKey();
    public static ConnectionPropertyKey FindValue(string value);
    public static ConnectionPropertyKey op_Implicit(string value);
}
public class Amazon.Glue.ConnectionStatus : ConstantClass {
    public static ConnectionStatus FAILED;
    public static ConnectionStatus IN_PROGRESS;
    public static ConnectionStatus READY;
    public ConnectionStatus(string value);
    private static ConnectionStatus();
    public static ConnectionStatus FindValue(string value);
    public static ConnectionStatus op_Implicit(string value);
}
public class Amazon.Glue.ConnectionType : ConstantClass {
    public static ConnectionType CUSTOM;
    public static ConnectionType JDBC;
    public static ConnectionType KAFKA;
    public static ConnectionType MARKETPLACE;
    public static ConnectionType MONGODB;
    public static ConnectionType NETWORK;
    public static ConnectionType SALESFORCE;
    public static ConnectionType SFTP;
    public ConnectionType(string value);
    private static ConnectionType();
    public static ConnectionType FindValue(string value);
    public static ConnectionType op_Implicit(string value);
}
public class Amazon.Glue.CrawlerHistoryState : ConstantClass {
    public static CrawlerHistoryState COMPLETED;
    public static CrawlerHistoryState FAILED;
    public static CrawlerHistoryState RUNNING;
    public static CrawlerHistoryState STOPPED;
    public CrawlerHistoryState(string value);
    private static CrawlerHistoryState();
    public static CrawlerHistoryState FindValue(string value);
    public static CrawlerHistoryState op_Implicit(string value);
}
public class Amazon.Glue.CrawlerLineageSettings : ConstantClass {
    public static CrawlerLineageSettings DISABLE;
    public static CrawlerLineageSettings ENABLE;
    public CrawlerLineageSettings(string value);
    private static CrawlerLineageSettings();
    public static CrawlerLineageSettings FindValue(string value);
    public static CrawlerLineageSettings op_Implicit(string value);
}
public class Amazon.Glue.CrawlerState : ConstantClass {
    public static CrawlerState READY;
    public static CrawlerState RUNNING;
    public static CrawlerState STOPPING;
    public CrawlerState(string value);
    private static CrawlerState();
    public static CrawlerState FindValue(string value);
    public static CrawlerState op_Implicit(string value);
}
public class Amazon.Glue.CrawlState : ConstantClass {
    public static CrawlState CANCELLED;
    public static CrawlState CANCELLING;
    public static CrawlState ERROR;
    public static CrawlState FAILED;
    public static CrawlState RUNNING;
    public static CrawlState SUCCEEDED;
    public CrawlState(string value);
    private static CrawlState();
    public static CrawlState FindValue(string value);
    public static CrawlState op_Implicit(string value);
}
public class Amazon.Glue.CsvHeaderOption : ConstantClass {
    public static CsvHeaderOption ABSENT;
    public static CsvHeaderOption PRESENT;
    public static CsvHeaderOption UNKNOWN;
    public CsvHeaderOption(string value);
    private static CsvHeaderOption();
    public static CsvHeaderOption FindValue(string value);
    public static CsvHeaderOption op_Implicit(string value);
}
public class Amazon.Glue.CsvSerdeOption : ConstantClass {
    public static CsvSerdeOption LazySimpleSerDe;
    public static CsvSerdeOption None;
    public static CsvSerdeOption OpenCSVSerDe;
    public CsvSerdeOption(string value);
    private static CsvSerdeOption();
    public static CsvSerdeOption FindValue(string value);
    public static CsvSerdeOption op_Implicit(string value);
}
public class Amazon.Glue.DatabaseAttributes : ConstantClass {
    public static DatabaseAttributes NAME;
    public DatabaseAttributes(string value);
    private static DatabaseAttributes();
    public static DatabaseAttributes FindValue(string value);
    public static DatabaseAttributes op_Implicit(string value);
}
public class Amazon.Glue.DataFormat : ConstantClass {
    public static DataFormat AVRO;
    public static DataFormat JSON;
    public static DataFormat PROTOBUF;
    public DataFormat(string value);
    private static DataFormat();
    public static DataFormat FindValue(string value);
    public static DataFormat op_Implicit(string value);
}
public class Amazon.Glue.DataQualityRuleResultStatus : ConstantClass {
    public static DataQualityRuleResultStatus ERROR;
    public static DataQualityRuleResultStatus FAIL;
    public static DataQualityRuleResultStatus PASS;
    public DataQualityRuleResultStatus(string value);
    private static DataQualityRuleResultStatus();
    public static DataQualityRuleResultStatus FindValue(string value);
    public static DataQualityRuleResultStatus op_Implicit(string value);
}
public class Amazon.Glue.DeleteBehavior : ConstantClass {
    public static DeleteBehavior DELETE_FROM_DATABASE;
    public static DeleteBehavior DEPRECATE_IN_DATABASE;
    public static DeleteBehavior LOG;
    public DeleteBehavior(string value);
    private static DeleteBehavior();
    public static DeleteBehavior FindValue(string value);
    public static DeleteBehavior op_Implicit(string value);
}
public class Amazon.Glue.DeltaTargetCompressionType : ConstantClass {
    public static DeltaTargetCompressionType Snappy;
    public static DeltaTargetCompressionType Uncompressed;
    public DeltaTargetCompressionType(string value);
    private static DeltaTargetCompressionType();
    public static DeltaTargetCompressionType FindValue(string value);
    public static DeltaTargetCompressionType op_Implicit(string value);
}
public class Amazon.Glue.DQCompositeRuleEvaluationMethod : ConstantClass {
    public static DQCompositeRuleEvaluationMethod COLUMN;
    public static DQCompositeRuleEvaluationMethod ROW;
    public DQCompositeRuleEvaluationMethod(string value);
    private static DQCompositeRuleEvaluationMethod();
    public static DQCompositeRuleEvaluationMethod FindValue(string value);
    public static DQCompositeRuleEvaluationMethod op_Implicit(string value);
}
public class Amazon.Glue.DQStopJobOnFailureTiming : ConstantClass {
    public static DQStopJobOnFailureTiming AfterDataLoad;
    public static DQStopJobOnFailureTiming Immediate;
    public DQStopJobOnFailureTiming(string value);
    private static DQStopJobOnFailureTiming();
    public static DQStopJobOnFailureTiming FindValue(string value);
    public static DQStopJobOnFailureTiming op_Implicit(string value);
}
public class Amazon.Glue.DQTransformOutput : ConstantClass {
    public static DQTransformOutput EvaluationResults;
    public static DQTransformOutput PrimaryInput;
    public DQTransformOutput(string value);
    private static DQTransformOutput();
    public static DQTransformOutput FindValue(string value);
    public static DQTransformOutput op_Implicit(string value);
}
public class Amazon.Glue.EnableHybridValues : ConstantClass {
    public static EnableHybridValues FALSE;
    public static EnableHybridValues TRUE;
    public EnableHybridValues(string value);
    private static EnableHybridValues();
    public static EnableHybridValues FindValue(string value);
    public static EnableHybridValues op_Implicit(string value);
}
public class Amazon.Glue.Endpoints.GlueEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.Glue.ExecutionClass : ConstantClass {
    public static ExecutionClass FLEX;
    public static ExecutionClass STANDARD;
    public ExecutionClass(string value);
    private static ExecutionClass();
    public static ExecutionClass FindValue(string value);
    public static ExecutionClass op_Implicit(string value);
}
public class Amazon.Glue.ExistCondition : ConstantClass {
    public static ExistCondition MUST_EXIST;
    public static ExistCondition NONE;
    public static ExistCondition NOT_EXIST;
    public ExistCondition(string value);
    private static ExistCondition();
    public static ExistCondition FindValue(string value);
    public static ExistCondition op_Implicit(string value);
}
public class Amazon.Glue.FederationSourceErrorCode : ConstantClass {
    public static FederationSourceErrorCode AccessDeniedException;
    public static FederationSourceErrorCode EntityNotFoundException;
    public static FederationSourceErrorCode InternalServiceException;
    public static FederationSourceErrorCode InvalidCredentialsException;
    public static FederationSourceErrorCode InvalidInputException;
    public static FederationSourceErrorCode InvalidResponseException;
    public static FederationSourceErrorCode OperationNotSupportedException;
    public static FederationSourceErrorCode OperationTimeoutException;
    public static FederationSourceErrorCode PartialFailureException;
    public static FederationSourceErrorCode ThrottlingException;
    public FederationSourceErrorCode(string value);
    private static FederationSourceErrorCode();
    public static FederationSourceErrorCode FindValue(string value);
    public static FederationSourceErrorCode op_Implicit(string value);
}
public class Amazon.Glue.FieldName : ConstantClass {
    public static FieldName CRAWL_ID;
    public static FieldName DPU_HOUR;
    public static FieldName END_TIME;
    public static FieldName START_TIME;
    public static FieldName STATE;
    public FieldName(string value);
    private static FieldName();
    public static FieldName FindValue(string value);
    public static FieldName op_Implicit(string value);
}
public class Amazon.Glue.FilterLogicalOperator : ConstantClass {
    public static FilterLogicalOperator AND;
    public static FilterLogicalOperator OR;
    public FilterLogicalOperator(string value);
    private static FilterLogicalOperator();
    public static FilterLogicalOperator FindValue(string value);
    public static FilterLogicalOperator op_Implicit(string value);
}
public class Amazon.Glue.FilterOperation : ConstantClass {
    public static FilterOperation EQ;
    public static FilterOperation GT;
    public static FilterOperation GTE;
    public static FilterOperation ISNULL;
    public static FilterOperation LT;
    public static FilterOperation LTE;
    public static FilterOperation REGEX;
    public FilterOperation(string value);
    private static FilterOperation();
    public static FilterOperation FindValue(string value);
    public static FilterOperation op_Implicit(string value);
}
public class Amazon.Glue.FilterOperator : ConstantClass {
    public static FilterOperator EQ;
    public static FilterOperator GE;
    public static FilterOperator GT;
    public static FilterOperator LE;
    public static FilterOperator LT;
    public static FilterOperator NE;
    public FilterOperator(string value);
    private static FilterOperator();
    public static FilterOperator FindValue(string value);
    public static FilterOperator op_Implicit(string value);
}
public class Amazon.Glue.FilterValueType : ConstantClass {
    public static FilterValueType COLUMNEXTRACTED;
    public static FilterValueType CONSTANT;
    public FilterValueType(string value);
    private static FilterValueType();
    public static FilterValueType FindValue(string value);
    public static FilterValueType op_Implicit(string value);
}
public class Amazon.Glue.GlueRecordType : ConstantClass {
    public static GlueRecordType BIGDECIMAL;
    public static GlueRecordType BYTE;
    public static GlueRecordType DATE;
    public static GlueRecordType DOUBLE;
    public static GlueRecordType FLOAT;
    public static GlueRecordType INT;
    public static GlueRecordType LONG;
    public static GlueRecordType SHORT;
    public static GlueRecordType STRING;
    public static GlueRecordType TIMESTAMP;
    public GlueRecordType(string value);
    private static GlueRecordType();
    public static GlueRecordType FindValue(string value);
    public static GlueRecordType op_Implicit(string value);
}
public class Amazon.Glue.HudiTargetCompressionType : ConstantClass {
    public static HudiTargetCompressionType Gzip;
    public static HudiTargetCompressionType Lzo;
    public static HudiTargetCompressionType Snappy;
    public static HudiTargetCompressionType Uncompressed;
    public HudiTargetCompressionType(string value);
    private static HudiTargetCompressionType();
    public static HudiTargetCompressionType FindValue(string value);
    public static HudiTargetCompressionType op_Implicit(string value);
}
public interface Amazon.Glue.IAmazonGlue {
    public IGluePaginatorFactory Paginators { get; }
    public abstract virtual IGluePaginatorFactory get_Paginators();
    public abstract virtual Task`1<BatchCreatePartitionResponse> BatchCreatePartitionAsync(BatchCreatePartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchDeleteConnectionResponse> BatchDeleteConnectionAsync(BatchDeleteConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchDeletePartitionResponse> BatchDeletePartitionAsync(BatchDeletePartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchDeleteTableResponse> BatchDeleteTableAsync(BatchDeleteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchDeleteTableVersionResponse> BatchDeleteTableVersionAsync(BatchDeleteTableVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetBlueprintsResponse> BatchGetBlueprintsAsync(BatchGetBlueprintsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetCrawlersResponse> BatchGetCrawlersAsync(BatchGetCrawlersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetCustomEntityTypesResponse> BatchGetCustomEntityTypesAsync(BatchGetCustomEntityTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetDataQualityResultResponse> BatchGetDataQualityResultAsync(BatchGetDataQualityResultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetDevEndpointsResponse> BatchGetDevEndpointsAsync(BatchGetDevEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetJobsResponse> BatchGetJobsAsync(BatchGetJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetPartitionResponse> BatchGetPartitionAsync(BatchGetPartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetTableOptimizerResponse> BatchGetTableOptimizerAsync(BatchGetTableOptimizerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetTriggersResponse> BatchGetTriggersAsync(BatchGetTriggersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetWorkflowsResponse> BatchGetWorkflowsAsync(BatchGetWorkflowsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchStopJobRunResponse> BatchStopJobRunAsync(BatchStopJobRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchUpdatePartitionResponse> BatchUpdatePartitionAsync(BatchUpdatePartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelDataQualityRuleRecommendationRunResponse> CancelDataQualityRuleRecommendationRunAsync(CancelDataQualityRuleRecommendationRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelDataQualityRulesetEvaluationRunResponse> CancelDataQualityRulesetEvaluationRunAsync(CancelDataQualityRulesetEvaluationRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelMLTaskRunResponse> CancelMLTaskRunAsync(CancelMLTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelStatementResponse> CancelStatementAsync(CancelStatementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CheckSchemaVersionValidityResponse> CheckSchemaVersionValidityAsync(CheckSchemaVersionValidityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateBlueprintResponse> CreateBlueprintAsync(CreateBlueprintRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateClassifierResponse> CreateClassifierAsync(CreateClassifierRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateConnectionResponse> CreateConnectionAsync(CreateConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCrawlerResponse> CreateCrawlerAsync(CreateCrawlerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCustomEntityTypeResponse> CreateCustomEntityTypeAsync(CreateCustomEntityTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDatabaseResponse> CreateDatabaseAsync(CreateDatabaseRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDataQualityRulesetResponse> CreateDataQualityRulesetAsync(CreateDataQualityRulesetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDevEndpointResponse> CreateDevEndpointAsync(CreateDevEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateJobResponse> CreateJobAsync(CreateJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateMLTransformResponse> CreateMLTransformAsync(CreateMLTransformRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePartitionResponse> CreatePartitionAsync(CreatePartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePartitionIndexResponse> CreatePartitionIndexAsync(CreatePartitionIndexRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRegistryResponse> CreateRegistryAsync(CreateRegistryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSchemaResponse> CreateSchemaAsync(CreateSchemaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateScriptResponse> CreateScriptAsync(CreateScriptRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSecurityConfigurationResponse> CreateSecurityConfigurationAsync(CreateSecurityConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSessionResponse> CreateSessionAsync(CreateSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTableResponse> CreateTableAsync(CreateTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTableOptimizerResponse> CreateTableOptimizerAsync(CreateTableOptimizerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTriggerResponse> CreateTriggerAsync(CreateTriggerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateUsageProfileResponse> CreateUsageProfileAsync(CreateUsageProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateUserDefinedFunctionResponse> CreateUserDefinedFunctionAsync(CreateUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateWorkflowResponse> CreateWorkflowAsync(CreateWorkflowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBlueprintResponse> DeleteBlueprintAsync(DeleteBlueprintRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteClassifierResponse> DeleteClassifierAsync(DeleteClassifierRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteColumnStatisticsForPartitionResponse> DeleteColumnStatisticsForPartitionAsync(DeleteColumnStatisticsForPartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteColumnStatisticsForTableResponse> DeleteColumnStatisticsForTableAsync(DeleteColumnStatisticsForTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteConnectionResponse> DeleteConnectionAsync(DeleteConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCrawlerResponse> DeleteCrawlerAsync(DeleteCrawlerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCustomEntityTypeResponse> DeleteCustomEntityTypeAsync(DeleteCustomEntityTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDatabaseResponse> DeleteDatabaseAsync(DeleteDatabaseRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDataQualityRulesetResponse> DeleteDataQualityRulesetAsync(DeleteDataQualityRulesetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDevEndpointResponse> DeleteDevEndpointAsync(DeleteDevEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteJobResponse> DeleteJobAsync(DeleteJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMLTransformResponse> DeleteMLTransformAsync(DeleteMLTransformRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePartitionResponse> DeletePartitionAsync(DeletePartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePartitionIndexResponse> DeletePartitionIndexAsync(DeletePartitionIndexRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRegistryResponse> DeleteRegistryAsync(DeleteRegistryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSchemaResponse> DeleteSchemaAsync(DeleteSchemaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSchemaVersionsResponse> DeleteSchemaVersionsAsync(DeleteSchemaVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSecurityConfigurationResponse> DeleteSecurityConfigurationAsync(DeleteSecurityConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSessionResponse> DeleteSessionAsync(DeleteSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTableResponse> DeleteTableAsync(DeleteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTableOptimizerResponse> DeleteTableOptimizerAsync(DeleteTableOptimizerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTableVersionResponse> DeleteTableVersionAsync(DeleteTableVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTriggerResponse> DeleteTriggerAsync(DeleteTriggerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUsageProfileResponse> DeleteUsageProfileAsync(DeleteUsageProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUserDefinedFunctionResponse> DeleteUserDefinedFunctionAsync(DeleteUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteWorkflowResponse> DeleteWorkflowAsync(DeleteWorkflowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBlueprintResponse> GetBlueprintAsync(GetBlueprintRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBlueprintRunResponse> GetBlueprintRunAsync(GetBlueprintRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBlueprintRunsResponse> GetBlueprintRunsAsync(GetBlueprintRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCatalogImportStatusResponse> GetCatalogImportStatusAsync(GetCatalogImportStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetClassifierResponse> GetClassifierAsync(GetClassifierRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetClassifiersResponse> GetClassifiersAsync(GetClassifiersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetColumnStatisticsForPartitionResponse> GetColumnStatisticsForPartitionAsync(GetColumnStatisticsForPartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetColumnStatisticsForTableResponse> GetColumnStatisticsForTableAsync(GetColumnStatisticsForTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetColumnStatisticsTaskRunResponse> GetColumnStatisticsTaskRunAsync(GetColumnStatisticsTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetColumnStatisticsTaskRunsResponse> GetColumnStatisticsTaskRunsAsync(GetColumnStatisticsTaskRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetConnectionResponse> GetConnectionAsync(GetConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetConnectionsResponse> GetConnectionsAsync(GetConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCrawlerResponse> GetCrawlerAsync(GetCrawlerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCrawlerMetricsResponse> GetCrawlerMetricsAsync(GetCrawlerMetricsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCrawlersResponse> GetCrawlersAsync(GetCrawlersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCustomEntityTypeResponse> GetCustomEntityTypeAsync(GetCustomEntityTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDatabaseResponse> GetDatabaseAsync(GetDatabaseRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDatabasesResponse> GetDatabasesAsync(GetDatabasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataCatalogEncryptionSettingsResponse> GetDataCatalogEncryptionSettingsAsync(GetDataCatalogEncryptionSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataflowGraphResponse> GetDataflowGraphAsync(GetDataflowGraphRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataQualityResultResponse> GetDataQualityResultAsync(GetDataQualityResultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataQualityRuleRecommendationRunResponse> GetDataQualityRuleRecommendationRunAsync(GetDataQualityRuleRecommendationRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataQualityRulesetResponse> GetDataQualityRulesetAsync(GetDataQualityRulesetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataQualityRulesetEvaluationRunResponse> GetDataQualityRulesetEvaluationRunAsync(GetDataQualityRulesetEvaluationRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDevEndpointResponse> GetDevEndpointAsync(GetDevEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDevEndpointsResponse> GetDevEndpointsAsync(GetDevEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetJobResponse> GetJobAsync(GetJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetJobBookmarkResponse> GetJobBookmarkAsync(GetJobBookmarkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetJobRunResponse> GetJobRunAsync(GetJobRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetJobRunsResponse> GetJobRunsAsync(GetJobRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetJobsResponse> GetJobsAsync(GetJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMappingResponse> GetMappingAsync(GetMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMLTaskRunResponse> GetMLTaskRunAsync(GetMLTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMLTaskRunsResponse> GetMLTaskRunsAsync(GetMLTaskRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMLTransformResponse> GetMLTransformAsync(GetMLTransformRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMLTransformsResponse> GetMLTransformsAsync(GetMLTransformsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPartitionResponse> GetPartitionAsync(GetPartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPartitionIndexesResponse> GetPartitionIndexesAsync(GetPartitionIndexesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPartitionsResponse> GetPartitionsAsync(GetPartitionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPlanResponse> GetPlanAsync(GetPlanRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRegistryResponse> GetRegistryAsync(GetRegistryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePoliciesResponse> GetResourcePoliciesAsync(GetResourcePoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSchemaResponse> GetSchemaAsync(GetSchemaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSchemaByDefinitionResponse> GetSchemaByDefinitionAsync(GetSchemaByDefinitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSchemaVersionResponse> GetSchemaVersionAsync(GetSchemaVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSchemaVersionsDiffResponse> GetSchemaVersionsDiffAsync(GetSchemaVersionsDiffRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSecurityConfigurationResponse> GetSecurityConfigurationAsync(GetSecurityConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSecurityConfigurationsResponse> GetSecurityConfigurationsAsync(GetSecurityConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSessionResponse> GetSessionAsync(GetSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStatementResponse> GetStatementAsync(GetStatementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTableResponse> GetTableAsync(GetTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTableOptimizerResponse> GetTableOptimizerAsync(GetTableOptimizerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTablesResponse> GetTablesAsync(GetTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTableVersionResponse> GetTableVersionAsync(GetTableVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTableVersionsResponse> GetTableVersionsAsync(GetTableVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTagsResponse> GetTagsAsync(GetTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTriggerResponse> GetTriggerAsync(GetTriggerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTriggersResponse> GetTriggersAsync(GetTriggersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUnfilteredPartitionMetadataResponse> GetUnfilteredPartitionMetadataAsync(GetUnfilteredPartitionMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUnfilteredPartitionsMetadataResponse> GetUnfilteredPartitionsMetadataAsync(GetUnfilteredPartitionsMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUnfilteredTableMetadataResponse> GetUnfilteredTableMetadataAsync(GetUnfilteredTableMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUsageProfileResponse> GetUsageProfileAsync(GetUsageProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUserDefinedFunctionResponse> GetUserDefinedFunctionAsync(GetUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUserDefinedFunctionsResponse> GetUserDefinedFunctionsAsync(GetUserDefinedFunctionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetWorkflowResponse> GetWorkflowAsync(GetWorkflowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetWorkflowRunResponse> GetWorkflowRunAsync(GetWorkflowRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetWorkflowRunPropertiesResponse> GetWorkflowRunPropertiesAsync(GetWorkflowRunPropertiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetWorkflowRunsResponse> GetWorkflowRunsAsync(GetWorkflowRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportCatalogToGlueResponse> ImportCatalogToGlueAsync(ImportCatalogToGlueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListBlueprintsResponse> ListBlueprintsAsync(ListBlueprintsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListColumnStatisticsTaskRunsResponse> ListColumnStatisticsTaskRunsAsync(ListColumnStatisticsTaskRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCrawlersResponse> ListCrawlersAsync(ListCrawlersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCrawlsResponse> ListCrawlsAsync(ListCrawlsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCustomEntityTypesResponse> ListCustomEntityTypesAsync(ListCustomEntityTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDataQualityResultsResponse> ListDataQualityResultsAsync(ListDataQualityResultsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDataQualityRuleRecommendationRunsResponse> ListDataQualityRuleRecommendationRunsAsync(ListDataQualityRuleRecommendationRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDataQualityRulesetEvaluationRunsResponse> ListDataQualityRulesetEvaluationRunsAsync(ListDataQualityRulesetEvaluationRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDataQualityRulesetsResponse> ListDataQualityRulesetsAsync(ListDataQualityRulesetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDevEndpointsResponse> ListDevEndpointsAsync(ListDevEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListJobsResponse> ListJobsAsync(ListJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMLTransformsResponse> ListMLTransformsAsync(ListMLTransformsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRegistriesResponse> ListRegistriesAsync(ListRegistriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSchemasResponse> ListSchemasAsync(ListSchemasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSchemaVersionsResponse> ListSchemaVersionsAsync(ListSchemaVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSessionsResponse> ListSessionsAsync(ListSessionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStatementsResponse> ListStatementsAsync(ListStatementsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTableOptimizerRunsResponse> ListTableOptimizerRunsAsync(ListTableOptimizerRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTriggersResponse> ListTriggersAsync(ListTriggersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListUsageProfilesResponse> ListUsageProfilesAsync(ListUsageProfilesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListWorkflowsResponse> ListWorkflowsAsync(ListWorkflowsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutDataCatalogEncryptionSettingsResponse> PutDataCatalogEncryptionSettingsAsync(PutDataCatalogEncryptionSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutSchemaVersionMetadataResponse> PutSchemaVersionMetadataAsync(PutSchemaVersionMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutWorkflowRunPropertiesResponse> PutWorkflowRunPropertiesAsync(PutWorkflowRunPropertiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<QuerySchemaVersionMetadataResponse> QuerySchemaVersionMetadataAsync(QuerySchemaVersionMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterSchemaVersionResponse> RegisterSchemaVersionAsync(RegisterSchemaVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveSchemaVersionMetadataResponse> RemoveSchemaVersionMetadataAsync(RemoveSchemaVersionMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetJobBookmarkResponse> ResetJobBookmarkAsync(ResetJobBookmarkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResumeWorkflowRunResponse> ResumeWorkflowRunAsync(ResumeWorkflowRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RunStatementResponse> RunStatementAsync(RunStatementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SearchTablesResponse> SearchTablesAsync(SearchTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartBlueprintRunResponse> StartBlueprintRunAsync(StartBlueprintRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartColumnStatisticsTaskRunResponse> StartColumnStatisticsTaskRunAsync(StartColumnStatisticsTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartCrawlerResponse> StartCrawlerAsync(StartCrawlerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartCrawlerScheduleResponse> StartCrawlerScheduleAsync(StartCrawlerScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartDataQualityRuleRecommendationRunResponse> StartDataQualityRuleRecommendationRunAsync(StartDataQualityRuleRecommendationRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartDataQualityRulesetEvaluationRunResponse> StartDataQualityRulesetEvaluationRunAsync(StartDataQualityRulesetEvaluationRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartExportLabelsTaskRunResponse> StartExportLabelsTaskRunAsync(StartExportLabelsTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartImportLabelsTaskRunResponse> StartImportLabelsTaskRunAsync(StartImportLabelsTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartJobRunResponse> StartJobRunAsync(StartJobRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMLEvaluationTaskRunResponse> StartMLEvaluationTaskRunAsync(StartMLEvaluationTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMLLabelingSetGenerationTaskRunResponse> StartMLLabelingSetGenerationTaskRunAsync(StartMLLabelingSetGenerationTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartTriggerResponse> StartTriggerAsync(StartTriggerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartWorkflowRunResponse> StartWorkflowRunAsync(StartWorkflowRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopColumnStatisticsTaskRunResponse> StopColumnStatisticsTaskRunAsync(StopColumnStatisticsTaskRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopCrawlerResponse> StopCrawlerAsync(StopCrawlerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopCrawlerScheduleResponse> StopCrawlerScheduleAsync(StopCrawlerScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopSessionResponse> StopSessionAsync(StopSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopTriggerResponse> StopTriggerAsync(StopTriggerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopWorkflowRunResponse> StopWorkflowRunAsync(StopWorkflowRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateBlueprintResponse> UpdateBlueprintAsync(UpdateBlueprintRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateClassifierResponse> UpdateClassifierAsync(UpdateClassifierRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateColumnStatisticsForPartitionResponse> UpdateColumnStatisticsForPartitionAsync(UpdateColumnStatisticsForPartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateColumnStatisticsForTableResponse> UpdateColumnStatisticsForTableAsync(UpdateColumnStatisticsForTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConnectionResponse> UpdateConnectionAsync(UpdateConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateCrawlerResponse> UpdateCrawlerAsync(UpdateCrawlerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateCrawlerScheduleResponse> UpdateCrawlerScheduleAsync(UpdateCrawlerScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDatabaseResponse> UpdateDatabaseAsync(UpdateDatabaseRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDataQualityRulesetResponse> UpdateDataQualityRulesetAsync(UpdateDataQualityRulesetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDevEndpointResponse> UpdateDevEndpointAsync(UpdateDevEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateJobResponse> UpdateJobAsync(UpdateJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateJobFromSourceControlResponse> UpdateJobFromSourceControlAsync(UpdateJobFromSourceControlRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateMLTransformResponse> UpdateMLTransformAsync(UpdateMLTransformRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdatePartitionResponse> UpdatePartitionAsync(UpdatePartitionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateRegistryResponse> UpdateRegistryAsync(UpdateRegistryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSchemaResponse> UpdateSchemaAsync(UpdateSchemaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSourceControlFromJobResponse> UpdateSourceControlFromJobAsync(UpdateSourceControlFromJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTableResponse> UpdateTableAsync(UpdateTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTableOptimizerResponse> UpdateTableOptimizerAsync(UpdateTableOptimizerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTriggerResponse> UpdateTriggerAsync(UpdateTriggerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateUsageProfileResponse> UpdateUsageProfileAsync(UpdateUsageProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateUserDefinedFunctionResponse> UpdateUserDefinedFunctionAsync(UpdateUserDefinedFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateWorkflowResponse> UpdateWorkflowAsync(UpdateWorkflowRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.Glue.AmazonGlueConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.Glue.Internal.AmazonGlueEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Glue.Internal.AmazonGlueEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Glue.Internal.AmazonGlueMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Glue.JDBCConnectionType : ConstantClass {
    public static JDBCConnectionType Mysql;
    public static JDBCConnectionType Oracle;
    public static JDBCConnectionType Postgresql;
    public static JDBCConnectionType Redshift;
    public static JDBCConnectionType Sqlserver;
    public JDBCConnectionType(string value);
    private static JDBCConnectionType();
    public static JDBCConnectionType FindValue(string value);
    public static JDBCConnectionType op_Implicit(string value);
}
public class Amazon.Glue.JDBCDataType : ConstantClass {
    public static JDBCDataType ARRAY;
    public static JDBCDataType BIGINT;
    public static JDBCDataType BINARY;
    public static JDBCDataType BIT;
    public static JDBCDataType BLOB;
    public static JDBCDataType BOOLEAN;
    public static JDBCDataType CHAR;
    public static JDBCDataType CLOB;
    public static JDBCDataType DATALINK;
    public static JDBCDataType DATE;
    public static JDBCDataType DECIMAL;
    public static JDBCDataType DISTINCT;
    public static JDBCDataType DOUBLE;
    public static JDBCDataType FLOAT;
    public static JDBCDataType INTEGER;
    public static JDBCDataType JAVA_OBJECT;
    public static JDBCDataType LONGNVARCHAR;
    public static JDBCDataType LONGVARBINARY;
    public static JDBCDataType LONGVARCHAR;
    public static JDBCDataType NCHAR;
    public static JDBCDataType NCLOB;
    public static JDBCDataType NULL;
    public static JDBCDataType NUMERIC;
    public static JDBCDataType NVARCHAR;
    public static JDBCDataType OTHER;
    public static JDBCDataType REAL;
    public static JDBCDataType REF;
    public static JDBCDataType REF_CURSOR;
    public static JDBCDataType ROWID;
    public static JDBCDataType SMALLINT;
    public static JDBCDataType SQLXML;
    public static JDBCDataType STRUCT;
    public static JDBCDataType TIME;
    public static JDBCDataType TIME_WITH_TIMEZONE;
    public static JDBCDataType TIMESTAMP;
    public static JDBCDataType TIMESTAMP_WITH_TIMEZONE;
    public static JDBCDataType TINYINT;
    public static JDBCDataType VARBINARY;
    public static JDBCDataType VARCHAR;
    public JDBCDataType(string value);
    private static JDBCDataType();
    public static JDBCDataType FindValue(string value);
    public static JDBCDataType op_Implicit(string value);
}
public class Amazon.Glue.JdbcMetadataEntry : ConstantClass {
    public static JdbcMetadataEntry COMMENTS;
    public static JdbcMetadataEntry RAWTYPES;
    public JdbcMetadataEntry(string value);
    private static JdbcMetadataEntry();
    public static JdbcMetadataEntry FindValue(string value);
    public static JdbcMetadataEntry op_Implicit(string value);
}
public class Amazon.Glue.JobBookmarksEncryptionMode : ConstantClass {
    public static JobBookmarksEncryptionMode CSEKMS;
    public static JobBookmarksEncryptionMode DISABLED;
    public JobBookmarksEncryptionMode(string value);
    private static JobBookmarksEncryptionMode();
    public static JobBookmarksEncryptionMode FindValue(string value);
    public static JobBookmarksEncryptionMode op_Implicit(string value);
}
public class Amazon.Glue.JobMode : ConstantClass {
    public static JobMode NOTEBOOK;
    public static JobMode SCRIPT;
    public static JobMode VISUAL;
    public JobMode(string value);
    private static JobMode();
    public static JobMode FindValue(string value);
    public static JobMode op_Implicit(string value);
}
public class Amazon.Glue.JobRunState : ConstantClass {
    public static JobRunState ERROR;
    public static JobRunState EXPIRED;
    public static JobRunState FAILED;
    public static JobRunState RUNNING;
    public static JobRunState STARTING;
    public static JobRunState STOPPED;
    public static JobRunState STOPPING;
    public static JobRunState SUCCEEDED;
    public static JobRunState TIMEOUT;
    public static JobRunState WAITING;
    public JobRunState(string value);
    private static JobRunState();
    public static JobRunState FindValue(string value);
    public static JobRunState op_Implicit(string value);
}
public class Amazon.Glue.JoinType : ConstantClass {
    public static JoinType Equijoin;
    public static JoinType Left;
    public static JoinType Leftanti;
    public static JoinType Leftsemi;
    public static JoinType Outer;
    public static JoinType Right;
    public JoinType(string value);
    private static JoinType();
    public static JoinType FindValue(string value);
    public static JoinType op_Implicit(string value);
}
public class Amazon.Glue.Language : ConstantClass {
    public static Language PYTHON;
    public static Language SCALA;
    public Language(string value);
    private static Language();
    public static Language FindValue(string value);
    public static Language op_Implicit(string value);
}
public class Amazon.Glue.LastCrawlStatus : ConstantClass {
    public static LastCrawlStatus CANCELLED;
    public static LastCrawlStatus FAILED;
    public static LastCrawlStatus SUCCEEDED;
    public LastCrawlStatus(string value);
    private static LastCrawlStatus();
    public static LastCrawlStatus FindValue(string value);
    public static LastCrawlStatus op_Implicit(string value);
}
public class Amazon.Glue.Logical : ConstantClass {
    public static Logical AND;
    public static Logical ANY;
    public Logical(string value);
    private static Logical();
    public static Logical FindValue(string value);
    public static Logical op_Implicit(string value);
}
public class Amazon.Glue.LogicalOperator : ConstantClass {
    public static LogicalOperator EQUALS;
    public LogicalOperator(string value);
    private static LogicalOperator();
    public static LogicalOperator FindValue(string value);
    public static LogicalOperator op_Implicit(string value);
}
public class Amazon.Glue.MetadataOperation : ConstantClass {
    public static MetadataOperation CREATE;
    public MetadataOperation(string value);
    private static MetadataOperation();
    public static MetadataOperation FindValue(string value);
    public static MetadataOperation op_Implicit(string value);
}
public class Amazon.Glue.MLUserDataEncryptionModeString : ConstantClass {
    public static MLUserDataEncryptionModeString DISABLED;
    public static MLUserDataEncryptionModeString SSEKMS;
    public MLUserDataEncryptionModeString(string value);
    private static MLUserDataEncryptionModeString();
    public static MLUserDataEncryptionModeString FindValue(string value);
    public static MLUserDataEncryptionModeString op_Implicit(string value);
}
public class Amazon.Glue.Model.AccessDeniedException : AmazonGlueException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.Action : object {
    private Dictionary`2<string, string> _arguments;
    private string _crawlerName;
    private string _jobName;
    private NotificationProperty _notificationProperty;
    private string _securityConfiguration;
    private Nullable`1<int> _timeout;
    public Dictionary`2<string, string> Arguments { get; public set; }
    [AWSPropertyAttribute]
public string CrawlerName { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public NotificationProperty NotificationProperty { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public Dictionary`2<string, string> get_Arguments();
    public void set_Arguments(Dictionary`2<string, string> value);
    internal bool IsSetArguments();
    public string get_CrawlerName();
    public void set_CrawlerName(string value);
    internal bool IsSetCrawlerName();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public NotificationProperty get_NotificationProperty();
    public void set_NotificationProperty(NotificationProperty value);
    internal bool IsSetNotificationProperty();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
}
public class Amazon.Glue.Model.Aggregate : object {
    private List`1<AggregateOperation> _aggs;
    private List`1<List`1<string>> _groups;
    private List`1<string> _inputs;
    private string _name;
    [AWSPropertyAttribute]
public List`1<AggregateOperation> Aggs { get; public set; }
    [AWSPropertyAttribute]
public List`1<List`1<string>> Groups { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<AggregateOperation> get_Aggs();
    public void set_Aggs(List`1<AggregateOperation> value);
    internal bool IsSetAggs();
    public List`1<List`1<string>> get_Groups();
    public void set_Groups(List`1<List`1<string>> value);
    internal bool IsSetGroups();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.AggregateOperation : object {
    private AggFunction _aggFunc;
    private List`1<string> _column;
    [AWSPropertyAttribute]
public AggFunction AggFunc { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Column { get; public set; }
    public AggFunction get_AggFunc();
    public void set_AggFunc(AggFunction value);
    internal bool IsSetAggFunc();
    public List`1<string> get_Column();
    public void set_Column(List`1<string> value);
    internal bool IsSetColumn();
}
public class Amazon.Glue.Model.AlreadyExistsException : AmazonGlueException {
    public AlreadyExistsException(string message);
    public AlreadyExistsException(string message, Exception innerException);
    public AlreadyExistsException(Exception innerException);
    public AlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.AmazonRedshiftAdvancedOption : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.AmazonRedshiftNodeData : object {
    private string _accessType;
    private string _action;
    private List`1<AmazonRedshiftAdvancedOption> _advancedOptions;
    private Option _catalogDatabase;
    private string _catalogRedshiftSchema;
    private string _catalogRedshiftTable;
    private Option _catalogTable;
    private Option _connection;
    private string _crawlerConnection;
    private Option _iamRole;
    private string _mergeAction;
    private string _mergeClause;
    private string _mergeWhenMatched;
    private string _mergeWhenNotMatched;
    private string _postAction;
    private string _preAction;
    private string _sampleQuery;
    private Option _schema;
    private List`1<Option> _selectedColumns;
    private string _sourceType;
    private string _stagingTable;
    private Option _table;
    private string _tablePrefix;
    private List`1<Option> _tableSchema;
    private string _tempDir;
    private Nullable`1<bool> _upsert;
    public string AccessType { get; public set; }
    public string Action { get; public set; }
    public List`1<AmazonRedshiftAdvancedOption> AdvancedOptions { get; public set; }
    public Option CatalogDatabase { get; public set; }
    public string CatalogRedshiftSchema { get; public set; }
    public string CatalogRedshiftTable { get; public set; }
    public Option CatalogTable { get; public set; }
    public Option Connection { get; public set; }
    public string CrawlerConnection { get; public set; }
    public Option IamRole { get; public set; }
    public string MergeAction { get; public set; }
    public string MergeClause { get; public set; }
    public string MergeWhenMatched { get; public set; }
    public string MergeWhenNotMatched { get; public set; }
    public string PostAction { get; public set; }
    public string PreAction { get; public set; }
    public string SampleQuery { get; public set; }
    public Option Schema { get; public set; }
    public List`1<Option> SelectedColumns { get; public set; }
    public string SourceType { get; public set; }
    public string StagingTable { get; public set; }
    public Option Table { get; public set; }
    public string TablePrefix { get; public set; }
    public List`1<Option> TableSchema { get; public set; }
    public string TempDir { get; public set; }
    public Nullable`1<bool> Upsert { get; public set; }
    public string get_AccessType();
    public void set_AccessType(string value);
    internal bool IsSetAccessType();
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public List`1<AmazonRedshiftAdvancedOption> get_AdvancedOptions();
    public void set_AdvancedOptions(List`1<AmazonRedshiftAdvancedOption> value);
    internal bool IsSetAdvancedOptions();
    public Option get_CatalogDatabase();
    public void set_CatalogDatabase(Option value);
    internal bool IsSetCatalogDatabase();
    public string get_CatalogRedshiftSchema();
    public void set_CatalogRedshiftSchema(string value);
    internal bool IsSetCatalogRedshiftSchema();
    public string get_CatalogRedshiftTable();
    public void set_CatalogRedshiftTable(string value);
    internal bool IsSetCatalogRedshiftTable();
    public Option get_CatalogTable();
    public void set_CatalogTable(Option value);
    internal bool IsSetCatalogTable();
    public Option get_Connection();
    public void set_Connection(Option value);
    internal bool IsSetConnection();
    public string get_CrawlerConnection();
    public void set_CrawlerConnection(string value);
    internal bool IsSetCrawlerConnection();
    public Option get_IamRole();
    public void set_IamRole(Option value);
    internal bool IsSetIamRole();
    public string get_MergeAction();
    public void set_MergeAction(string value);
    internal bool IsSetMergeAction();
    public string get_MergeClause();
    public void set_MergeClause(string value);
    internal bool IsSetMergeClause();
    public string get_MergeWhenMatched();
    public void set_MergeWhenMatched(string value);
    internal bool IsSetMergeWhenMatched();
    public string get_MergeWhenNotMatched();
    public void set_MergeWhenNotMatched(string value);
    internal bool IsSetMergeWhenNotMatched();
    public string get_PostAction();
    public void set_PostAction(string value);
    internal bool IsSetPostAction();
    public string get_PreAction();
    public void set_PreAction(string value);
    internal bool IsSetPreAction();
    public string get_SampleQuery();
    public void set_SampleQuery(string value);
    internal bool IsSetSampleQuery();
    public Option get_Schema();
    public void set_Schema(Option value);
    internal bool IsSetSchema();
    public List`1<Option> get_SelectedColumns();
    public void set_SelectedColumns(List`1<Option> value);
    internal bool IsSetSelectedColumns();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_StagingTable();
    public void set_StagingTable(string value);
    internal bool IsSetStagingTable();
    public Option get_Table();
    public void set_Table(Option value);
    internal bool IsSetTable();
    public string get_TablePrefix();
    public void set_TablePrefix(string value);
    internal bool IsSetTablePrefix();
    public List`1<Option> get_TableSchema();
    public void set_TableSchema(List`1<Option> value);
    internal bool IsSetTableSchema();
    public string get_TempDir();
    public void set_TempDir(string value);
    internal bool IsSetTempDir();
    public Nullable`1<bool> get_Upsert();
    public void set_Upsert(Nullable`1<bool> value);
    internal bool IsSetUpsert();
}
public class Amazon.Glue.Model.AmazonRedshiftSource : object {
    private AmazonRedshiftNodeData _data;
    private string _name;
    public AmazonRedshiftNodeData Data { get; public set; }
    public string Name { get; public set; }
    public AmazonRedshiftNodeData get_Data();
    public void set_Data(AmazonRedshiftNodeData value);
    internal bool IsSetData();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.AmazonRedshiftTarget : object {
    private AmazonRedshiftNodeData _data;
    private List`1<string> _inputs;
    private string _name;
    public AmazonRedshiftNodeData Data { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    public string Name { get; public set; }
    public AmazonRedshiftNodeData get_Data();
    public void set_Data(AmazonRedshiftNodeData value);
    internal bool IsSetData();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.ApplyMapping : object {
    private List`1<string> _inputs;
    private List`1<Mapping> _mapping;
    private string _name;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public List`1<Mapping> Mapping { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public List`1<Mapping> get_Mapping();
    public void set_Mapping(List`1<Mapping> value);
    internal bool IsSetMapping();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.AthenaConnectorSource : object {
    private string _connectionName;
    private string _connectionTable;
    private string _connectionType;
    private string _connectorName;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private string _schemaName;
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    public string ConnectionTable { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public string ConnectorName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_ConnectionTable();
    public void set_ConnectionTable(string value);
    internal bool IsSetConnectionTable();
    public string get_ConnectionType();
    public void set_ConnectionType(string value);
    internal bool IsSetConnectionType();
    public string get_ConnectorName();
    public void set_ConnectorName(string value);
    internal bool IsSetConnectorName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
}
public class Amazon.Glue.Model.AuditContext : object {
    private string _additionalAuditContext;
    private Nullable`1<bool> _allColumnsRequested;
    private List`1<string> _requestedColumns;
    [AWSPropertyAttribute]
public string AdditionalAuditContext { get; public set; }
    public Nullable`1<bool> AllColumnsRequested { get; public set; }
    public List`1<string> RequestedColumns { get; public set; }
    public string get_AdditionalAuditContext();
    public void set_AdditionalAuditContext(string value);
    internal bool IsSetAdditionalAuditContext();
    public Nullable`1<bool> get_AllColumnsRequested();
    public void set_AllColumnsRequested(Nullable`1<bool> value);
    internal bool IsSetAllColumnsRequested();
    public List`1<string> get_RequestedColumns();
    public void set_RequestedColumns(List`1<string> value);
    internal bool IsSetRequestedColumns();
}
public class Amazon.Glue.Model.AuthenticationConfiguration : object {
    private AuthenticationType _authenticationType;
    private OAuth2Properties _oAuth2Properties;
    private string _secretArn;
    public AuthenticationType AuthenticationType { get; public set; }
    public OAuth2Properties OAuth2Properties { get; public set; }
    public string SecretArn { get; public set; }
    public AuthenticationType get_AuthenticationType();
    public void set_AuthenticationType(AuthenticationType value);
    internal bool IsSetAuthenticationType();
    public OAuth2Properties get_OAuth2Properties();
    public void set_OAuth2Properties(OAuth2Properties value);
    internal bool IsSetOAuth2Properties();
    public string get_SecretArn();
    public void set_SecretArn(string value);
    internal bool IsSetSecretArn();
}
public class Amazon.Glue.Model.AuthenticationConfigurationInput : object {
    private AuthenticationType _authenticationType;
    private OAuth2PropertiesInput _oAuth2Properties;
    private string _secretArn;
    public AuthenticationType AuthenticationType { get; public set; }
    public OAuth2PropertiesInput OAuth2Properties { get; public set; }
    public string SecretArn { get; public set; }
    public AuthenticationType get_AuthenticationType();
    public void set_AuthenticationType(AuthenticationType value);
    internal bool IsSetAuthenticationType();
    public OAuth2PropertiesInput get_OAuth2Properties();
    public void set_OAuth2Properties(OAuth2PropertiesInput value);
    internal bool IsSetOAuth2Properties();
    public string get_SecretArn();
    public void set_SecretArn(string value);
    internal bool IsSetSecretArn();
}
public class Amazon.Glue.Model.AuthorizationCodeProperties : object {
    private string _authorizationCode;
    private string _redirectUri;
    [AWSPropertyAttribute]
public string AuthorizationCode { get; public set; }
    [AWSPropertyAttribute]
public string RedirectUri { get; public set; }
    public string get_AuthorizationCode();
    public void set_AuthorizationCode(string value);
    internal bool IsSetAuthorizationCode();
    public string get_RedirectUri();
    public void set_RedirectUri(string value);
    internal bool IsSetRedirectUri();
}
public class Amazon.Glue.Model.BackfillError : object {
    private BackfillErrorCode _code;
    private List`1<PartitionValueList> _partitions;
    public BackfillErrorCode Code { get; public set; }
    public List`1<PartitionValueList> Partitions { get; public set; }
    public BackfillErrorCode get_Code();
    public void set_Code(BackfillErrorCode value);
    internal bool IsSetCode();
    public List`1<PartitionValueList> get_Partitions();
    public void set_Partitions(List`1<PartitionValueList> value);
    internal bool IsSetPartitions();
}
public class Amazon.Glue.Model.BasicCatalogTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.BatchCreatePartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private List`1<PartitionInput> _partitionInputList;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<PartitionInput> PartitionInputList { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<PartitionInput> get_PartitionInputList();
    public void set_PartitionInputList(List`1<PartitionInput> value);
    internal bool IsSetPartitionInputList();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.BatchCreatePartitionResponse : AmazonWebServiceResponse {
    private List`1<PartitionError> _errors;
    public List`1<PartitionError> Errors { get; public set; }
    public List`1<PartitionError> get_Errors();
    public void set_Errors(List`1<PartitionError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.BatchDeleteConnectionRequest : AmazonGlueRequest {
    private string _catalogId;
    private List`1<string> _connectionNameList;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ConnectionNameList { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public List`1<string> get_ConnectionNameList();
    public void set_ConnectionNameList(List`1<string> value);
    internal bool IsSetConnectionNameList();
}
public class Amazon.Glue.Model.BatchDeleteConnectionResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, ErrorDetail> _errors;
    private List`1<string> _succeeded;
    public Dictionary`2<string, ErrorDetail> Errors { get; public set; }
    public List`1<string> Succeeded { get; public set; }
    public Dictionary`2<string, ErrorDetail> get_Errors();
    public void set_Errors(Dictionary`2<string, ErrorDetail> value);
    internal bool IsSetErrors();
    public List`1<string> get_Succeeded();
    public void set_Succeeded(List`1<string> value);
    internal bool IsSetSucceeded();
}
public class Amazon.Glue.Model.BatchDeletePartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private List`1<PartitionValueList> _partitionsToDelete;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<PartitionValueList> PartitionsToDelete { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<PartitionValueList> get_PartitionsToDelete();
    public void set_PartitionsToDelete(List`1<PartitionValueList> value);
    internal bool IsSetPartitionsToDelete();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.BatchDeletePartitionResponse : AmazonWebServiceResponse {
    private List`1<PartitionError> _errors;
    public List`1<PartitionError> Errors { get; public set; }
    public List`1<PartitionError> get_Errors();
    public void set_Errors(List`1<PartitionError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.BatchDeleteTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private List`1<string> _tablesToDelete;
    private string _transactionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TablesToDelete { get; public set; }
    [AWSPropertyAttribute]
public string TransactionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<string> get_TablesToDelete();
    public void set_TablesToDelete(List`1<string> value);
    internal bool IsSetTablesToDelete();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    internal bool IsSetTransactionId();
}
public class Amazon.Glue.Model.BatchDeleteTableResponse : AmazonWebServiceResponse {
    private List`1<TableError> _errors;
    public List`1<TableError> Errors { get; public set; }
    public List`1<TableError> get_Errors();
    public void set_Errors(List`1<TableError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.BatchDeleteTableVersionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private List`1<string> _versionIds;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VersionIds { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public List`1<string> get_VersionIds();
    public void set_VersionIds(List`1<string> value);
    internal bool IsSetVersionIds();
}
public class Amazon.Glue.Model.BatchDeleteTableVersionResponse : AmazonWebServiceResponse {
    private List`1<TableVersionError> _errors;
    public List`1<TableVersionError> Errors { get; public set; }
    public List`1<TableVersionError> get_Errors();
    public void set_Errors(List`1<TableVersionError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.BatchGetBlueprintsRequest : AmazonGlueRequest {
    private Nullable`1<bool> _includeBlueprint;
    private Nullable`1<bool> _includeParameterSpec;
    private List`1<string> _names;
    public Nullable`1<bool> IncludeBlueprint { get; public set; }
    public Nullable`1<bool> IncludeParameterSpec { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Names { get; public set; }
    public Nullable`1<bool> get_IncludeBlueprint();
    public void set_IncludeBlueprint(Nullable`1<bool> value);
    internal bool IsSetIncludeBlueprint();
    public Nullable`1<bool> get_IncludeParameterSpec();
    public void set_IncludeParameterSpec(Nullable`1<bool> value);
    internal bool IsSetIncludeParameterSpec();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
}
public class Amazon.Glue.Model.BatchGetBlueprintsResponse : AmazonWebServiceResponse {
    private List`1<Blueprint> _blueprints;
    private List`1<string> _missingBlueprints;
    public List`1<Blueprint> Blueprints { get; public set; }
    public List`1<string> MissingBlueprints { get; public set; }
    public List`1<Blueprint> get_Blueprints();
    public void set_Blueprints(List`1<Blueprint> value);
    internal bool IsSetBlueprints();
    public List`1<string> get_MissingBlueprints();
    public void set_MissingBlueprints(List`1<string> value);
    internal bool IsSetMissingBlueprints();
}
public class Amazon.Glue.Model.BatchGetCrawlersRequest : AmazonGlueRequest {
    private List`1<string> _crawlerNames;
    [AWSPropertyAttribute]
public List`1<string> CrawlerNames { get; public set; }
    public List`1<string> get_CrawlerNames();
    public void set_CrawlerNames(List`1<string> value);
    internal bool IsSetCrawlerNames();
}
public class Amazon.Glue.Model.BatchGetCrawlersResponse : AmazonWebServiceResponse {
    private List`1<Crawler> _crawlers;
    private List`1<string> _crawlersNotFound;
    public List`1<Crawler> Crawlers { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CrawlersNotFound { get; public set; }
    public List`1<Crawler> get_Crawlers();
    public void set_Crawlers(List`1<Crawler> value);
    internal bool IsSetCrawlers();
    public List`1<string> get_CrawlersNotFound();
    public void set_CrawlersNotFound(List`1<string> value);
    internal bool IsSetCrawlersNotFound();
}
public class Amazon.Glue.Model.BatchGetCustomEntityTypesRequest : AmazonGlueRequest {
    private List`1<string> _names;
    [AWSPropertyAttribute]
public List`1<string> Names { get; public set; }
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
}
public class Amazon.Glue.Model.BatchGetCustomEntityTypesResponse : AmazonWebServiceResponse {
    private List`1<CustomEntityType> _customEntityTypes;
    private List`1<string> _customEntityTypesNotFound;
    public List`1<CustomEntityType> CustomEntityTypes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CustomEntityTypesNotFound { get; public set; }
    public List`1<CustomEntityType> get_CustomEntityTypes();
    public void set_CustomEntityTypes(List`1<CustomEntityType> value);
    internal bool IsSetCustomEntityTypes();
    public List`1<string> get_CustomEntityTypesNotFound();
    public void set_CustomEntityTypesNotFound(List`1<string> value);
    internal bool IsSetCustomEntityTypesNotFound();
}
public class Amazon.Glue.Model.BatchGetDataQualityResultRequest : AmazonGlueRequest {
    private List`1<string> _resultIds;
    [AWSPropertyAttribute]
public List`1<string> ResultIds { get; public set; }
    public List`1<string> get_ResultIds();
    public void set_ResultIds(List`1<string> value);
    internal bool IsSetResultIds();
}
public class Amazon.Glue.Model.BatchGetDataQualityResultResponse : AmazonWebServiceResponse {
    private List`1<DataQualityResult> _results;
    private List`1<string> _resultsNotFound;
    [AWSPropertyAttribute]
public List`1<DataQualityResult> Results { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ResultsNotFound { get; public set; }
    public List`1<DataQualityResult> get_Results();
    public void set_Results(List`1<DataQualityResult> value);
    internal bool IsSetResults();
    public List`1<string> get_ResultsNotFound();
    public void set_ResultsNotFound(List`1<string> value);
    internal bool IsSetResultsNotFound();
}
public class Amazon.Glue.Model.BatchGetDevEndpointsRequest : AmazonGlueRequest {
    private List`1<string> _devEndpointNames;
    [AWSPropertyAttribute]
public List`1<string> DevEndpointNames { get; public set; }
    public List`1<string> get_DevEndpointNames();
    public void set_DevEndpointNames(List`1<string> value);
    internal bool IsSetDevEndpointNames();
}
public class Amazon.Glue.Model.BatchGetDevEndpointsResponse : AmazonWebServiceResponse {
    private List`1<DevEndpoint> _devEndpoints;
    private List`1<string> _devEndpointsNotFound;
    public List`1<DevEndpoint> DevEndpoints { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> DevEndpointsNotFound { get; public set; }
    public List`1<DevEndpoint> get_DevEndpoints();
    public void set_DevEndpoints(List`1<DevEndpoint> value);
    internal bool IsSetDevEndpoints();
    public List`1<string> get_DevEndpointsNotFound();
    public void set_DevEndpointsNotFound(List`1<string> value);
    internal bool IsSetDevEndpointsNotFound();
}
public class Amazon.Glue.Model.BatchGetJobsRequest : AmazonGlueRequest {
    private List`1<string> _jobNames;
    [AWSPropertyAttribute]
public List`1<string> JobNames { get; public set; }
    public List`1<string> get_JobNames();
    public void set_JobNames(List`1<string> value);
    internal bool IsSetJobNames();
}
public class Amazon.Glue.Model.BatchGetJobsResponse : AmazonWebServiceResponse {
    private List`1<Job> _jobs;
    private List`1<string> _jobsNotFound;
    public List`1<Job> Jobs { get; public set; }
    public List`1<string> JobsNotFound { get; public set; }
    public List`1<Job> get_Jobs();
    public void set_Jobs(List`1<Job> value);
    internal bool IsSetJobs();
    public List`1<string> get_JobsNotFound();
    public void set_JobsNotFound(List`1<string> value);
    internal bool IsSetJobsNotFound();
}
public class Amazon.Glue.Model.BatchGetPartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private List`1<PartitionValueList> _partitionsToGet;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<PartitionValueList> PartitionsToGet { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<PartitionValueList> get_PartitionsToGet();
    public void set_PartitionsToGet(List`1<PartitionValueList> value);
    internal bool IsSetPartitionsToGet();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.BatchGetPartitionResponse : AmazonWebServiceResponse {
    private List`1<Partition> _partitions;
    private List`1<PartitionValueList> _unprocessedKeys;
    public List`1<Partition> Partitions { get; public set; }
    [AWSPropertyAttribute]
public List`1<PartitionValueList> UnprocessedKeys { get; public set; }
    public List`1<Partition> get_Partitions();
    public void set_Partitions(List`1<Partition> value);
    internal bool IsSetPartitions();
    public List`1<PartitionValueList> get_UnprocessedKeys();
    public void set_UnprocessedKeys(List`1<PartitionValueList> value);
    internal bool IsSetUnprocessedKeys();
}
public class Amazon.Glue.Model.BatchGetTableOptimizerEntry : object {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private TableOptimizerType _type;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public TableOptimizerType Type { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.BatchGetTableOptimizerError : object {
    private string _catalogId;
    private string _databaseName;
    private ErrorDetail _error;
    private string _tableName;
    private TableOptimizerType _type;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public ErrorDetail Error { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public TableOptimizerType Type { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public ErrorDetail get_Error();
    public void set_Error(ErrorDetail value);
    internal bool IsSetError();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.BatchGetTableOptimizerRequest : AmazonGlueRequest {
    private List`1<BatchGetTableOptimizerEntry> _entries;
    [AWSPropertyAttribute]
public List`1<BatchGetTableOptimizerEntry> Entries { get; public set; }
    public List`1<BatchGetTableOptimizerEntry> get_Entries();
    public void set_Entries(List`1<BatchGetTableOptimizerEntry> value);
    internal bool IsSetEntries();
}
public class Amazon.Glue.Model.BatchGetTableOptimizerResponse : AmazonWebServiceResponse {
    private List`1<BatchGetTableOptimizerError> _failures;
    private List`1<BatchTableOptimizer> _tableOptimizers;
    public List`1<BatchGetTableOptimizerError> Failures { get; public set; }
    public List`1<BatchTableOptimizer> TableOptimizers { get; public set; }
    public List`1<BatchGetTableOptimizerError> get_Failures();
    public void set_Failures(List`1<BatchGetTableOptimizerError> value);
    internal bool IsSetFailures();
    public List`1<BatchTableOptimizer> get_TableOptimizers();
    public void set_TableOptimizers(List`1<BatchTableOptimizer> value);
    internal bool IsSetTableOptimizers();
}
public class Amazon.Glue.Model.BatchGetTriggersRequest : AmazonGlueRequest {
    private List`1<string> _triggerNames;
    [AWSPropertyAttribute]
public List`1<string> TriggerNames { get; public set; }
    public List`1<string> get_TriggerNames();
    public void set_TriggerNames(List`1<string> value);
    internal bool IsSetTriggerNames();
}
public class Amazon.Glue.Model.BatchGetTriggersResponse : AmazonWebServiceResponse {
    private List`1<Trigger> _triggers;
    private List`1<string> _triggersNotFound;
    public List`1<Trigger> Triggers { get; public set; }
    public List`1<string> TriggersNotFound { get; public set; }
    public List`1<Trigger> get_Triggers();
    public void set_Triggers(List`1<Trigger> value);
    internal bool IsSetTriggers();
    public List`1<string> get_TriggersNotFound();
    public void set_TriggersNotFound(List`1<string> value);
    internal bool IsSetTriggersNotFound();
}
public class Amazon.Glue.Model.BatchGetWorkflowsRequest : AmazonGlueRequest {
    private Nullable`1<bool> _includeGraph;
    private List`1<string> _names;
    public Nullable`1<bool> IncludeGraph { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Names { get; public set; }
    public Nullable`1<bool> get_IncludeGraph();
    public void set_IncludeGraph(Nullable`1<bool> value);
    internal bool IsSetIncludeGraph();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
}
public class Amazon.Glue.Model.BatchGetWorkflowsResponse : AmazonWebServiceResponse {
    private List`1<string> _missingWorkflows;
    private List`1<Workflow> _workflows;
    [AWSPropertyAttribute]
public List`1<string> MissingWorkflows { get; public set; }
    [AWSPropertyAttribute]
public List`1<Workflow> Workflows { get; public set; }
    public List`1<string> get_MissingWorkflows();
    public void set_MissingWorkflows(List`1<string> value);
    internal bool IsSetMissingWorkflows();
    public List`1<Workflow> get_Workflows();
    public void set_Workflows(List`1<Workflow> value);
    internal bool IsSetWorkflows();
}
public class Amazon.Glue.Model.BatchStopJobRunError : object {
    private ErrorDetail _errorDetail;
    private string _jobName;
    private string _jobRunId;
    public ErrorDetail ErrorDetail { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    public ErrorDetail get_ErrorDetail();
    public void set_ErrorDetail(ErrorDetail value);
    internal bool IsSetErrorDetail();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
}
public class Amazon.Glue.Model.BatchStopJobRunRequest : AmazonGlueRequest {
    private string _jobName;
    private List`1<string> _jobRunIds;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> JobRunIds { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public List`1<string> get_JobRunIds();
    public void set_JobRunIds(List`1<string> value);
    internal bool IsSetJobRunIds();
}
public class Amazon.Glue.Model.BatchStopJobRunResponse : AmazonWebServiceResponse {
    private List`1<BatchStopJobRunError> _errors;
    private List`1<BatchStopJobRunSuccessfulSubmission> _successfulSubmissions;
    public List`1<BatchStopJobRunError> Errors { get; public set; }
    public List`1<BatchStopJobRunSuccessfulSubmission> SuccessfulSubmissions { get; public set; }
    public List`1<BatchStopJobRunError> get_Errors();
    public void set_Errors(List`1<BatchStopJobRunError> value);
    internal bool IsSetErrors();
    public List`1<BatchStopJobRunSuccessfulSubmission> get_SuccessfulSubmissions();
    public void set_SuccessfulSubmissions(List`1<BatchStopJobRunSuccessfulSubmission> value);
    internal bool IsSetSuccessfulSubmissions();
}
public class Amazon.Glue.Model.BatchStopJobRunSuccessfulSubmission : object {
    private string _jobName;
    private string _jobRunId;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
}
public class Amazon.Glue.Model.BatchTableOptimizer : object {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private TableOptimizer _tableOptimizer;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public TableOptimizer TableOptimizer { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizer get_TableOptimizer();
    public void set_TableOptimizer(TableOptimizer value);
    internal bool IsSetTableOptimizer();
}
public class Amazon.Glue.Model.BatchUpdatePartitionFailureEntry : object {
    private ErrorDetail _errorDetail;
    private List`1<string> _partitionValueList;
    public ErrorDetail ErrorDetail { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValueList { get; public set; }
    public ErrorDetail get_ErrorDetail();
    public void set_ErrorDetail(ErrorDetail value);
    internal bool IsSetErrorDetail();
    public List`1<string> get_PartitionValueList();
    public void set_PartitionValueList(List`1<string> value);
    internal bool IsSetPartitionValueList();
}
public class Amazon.Glue.Model.BatchUpdatePartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private List`1<BatchUpdatePartitionRequestEntry> _entries;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<BatchUpdatePartitionRequestEntry> Entries { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<BatchUpdatePartitionRequestEntry> get_Entries();
    public void set_Entries(List`1<BatchUpdatePartitionRequestEntry> value);
    internal bool IsSetEntries();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.BatchUpdatePartitionRequestEntry : object {
    private PartitionInput _partitionInput;
    private List`1<string> _partitionValueList;
    [AWSPropertyAttribute]
public PartitionInput PartitionInput { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValueList { get; public set; }
    public PartitionInput get_PartitionInput();
    public void set_PartitionInput(PartitionInput value);
    internal bool IsSetPartitionInput();
    public List`1<string> get_PartitionValueList();
    public void set_PartitionValueList(List`1<string> value);
    internal bool IsSetPartitionValueList();
}
public class Amazon.Glue.Model.BatchUpdatePartitionResponse : AmazonWebServiceResponse {
    private List`1<BatchUpdatePartitionFailureEntry> _errors;
    public List`1<BatchUpdatePartitionFailureEntry> Errors { get; public set; }
    public List`1<BatchUpdatePartitionFailureEntry> get_Errors();
    public void set_Errors(List`1<BatchUpdatePartitionFailureEntry> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.BinaryColumnStatisticsData : object {
    private Nullable`1<double> _averageLength;
    private Nullable`1<long> _maximumLength;
    private Nullable`1<long> _numberOfNulls;
    [AWSPropertyAttribute]
public Nullable`1<double> AverageLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaximumLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfNulls { get; public set; }
    public Nullable`1<double> get_AverageLength();
    public void set_AverageLength(Nullable`1<double> value);
    internal bool IsSetAverageLength();
    public Nullable`1<long> get_MaximumLength();
    public void set_MaximumLength(Nullable`1<long> value);
    internal bool IsSetMaximumLength();
    public Nullable`1<long> get_NumberOfNulls();
    public void set_NumberOfNulls(Nullable`1<long> value);
    internal bool IsSetNumberOfNulls();
}
public class Amazon.Glue.Model.Blueprint : object {
    private string _blueprintLocation;
    private string _blueprintServiceLocation;
    private Nullable`1<DateTime> _createdOn;
    private string _description;
    private string _errorMessage;
    private LastActiveDefinition _lastActiveDefinition;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _name;
    private string _parameterSpec;
    private BlueprintStatus _status;
    public string BlueprintLocation { get; public set; }
    public string BlueprintServiceLocation { get; public set; }
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public string ErrorMessage { get; public set; }
    public LastActiveDefinition LastActiveDefinition { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string ParameterSpec { get; public set; }
    public BlueprintStatus Status { get; public set; }
    public string get_BlueprintLocation();
    public void set_BlueprintLocation(string value);
    internal bool IsSetBlueprintLocation();
    public string get_BlueprintServiceLocation();
    public void set_BlueprintServiceLocation(string value);
    internal bool IsSetBlueprintServiceLocation();
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public LastActiveDefinition get_LastActiveDefinition();
    public void set_LastActiveDefinition(LastActiveDefinition value);
    internal bool IsSetLastActiveDefinition();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_ParameterSpec();
    public void set_ParameterSpec(string value);
    internal bool IsSetParameterSpec();
    public BlueprintStatus get_Status();
    public void set_Status(BlueprintStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Glue.Model.BlueprintDetails : object {
    private string _blueprintName;
    private string _runId;
    [AWSPropertyAttribute]
public string BlueprintName { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_BlueprintName();
    public void set_BlueprintName(string value);
    internal bool IsSetBlueprintName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.BlueprintRun : object {
    private string _blueprintName;
    private Nullable`1<DateTime> _completedOn;
    private string _errorMessage;
    private string _parameters;
    private string _roleArn;
    private string _rollbackErrorMessage;
    private string _runId;
    private Nullable`1<DateTime> _startedOn;
    private BlueprintRunState _state;
    private string _workflowName;
    [AWSPropertyAttribute]
public string BlueprintName { get; public set; }
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string Parameters { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string RollbackErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public BlueprintRunState State { get; public set; }
    [AWSPropertyAttribute]
public string WorkflowName { get; public set; }
    public string get_BlueprintName();
    public void set_BlueprintName(string value);
    internal bool IsSetBlueprintName();
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_Parameters();
    public void set_Parameters(string value);
    internal bool IsSetParameters();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_RollbackErrorMessage();
    public void set_RollbackErrorMessage(string value);
    internal bool IsSetRollbackErrorMessage();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public BlueprintRunState get_State();
    public void set_State(BlueprintRunState value);
    internal bool IsSetState();
    public string get_WorkflowName();
    public void set_WorkflowName(string value);
    internal bool IsSetWorkflowName();
}
public class Amazon.Glue.Model.BooleanColumnStatisticsData : object {
    private Nullable`1<long> _numberOfFalses;
    private Nullable`1<long> _numberOfNulls;
    private Nullable`1<long> _numberOfTrues;
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfFalses { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfNulls { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfTrues { get; public set; }
    public Nullable`1<long> get_NumberOfFalses();
    public void set_NumberOfFalses(Nullable`1<long> value);
    internal bool IsSetNumberOfFalses();
    public Nullable`1<long> get_NumberOfNulls();
    public void set_NumberOfNulls(Nullable`1<long> value);
    internal bool IsSetNumberOfNulls();
    public Nullable`1<long> get_NumberOfTrues();
    public void set_NumberOfTrues(Nullable`1<long> value);
    internal bool IsSetNumberOfTrues();
}
public class Amazon.Glue.Model.CancelDataQualityRuleRecommendationRunRequest : AmazonGlueRequest {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.CancelDataQualityRuleRecommendationRunResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CancelDataQualityRulesetEvaluationRunRequest : AmazonGlueRequest {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.CancelDataQualityRulesetEvaluationRunResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CancelMLTaskRunRequest : AmazonGlueRequest {
    private string _taskRunId;
    private string _transformId;
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.CancelMLTaskRunResponse : AmazonWebServiceResponse {
    private TaskStatusType _status;
    private string _taskRunId;
    private string _transformId;
    public TaskStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.CancelStatementRequest : AmazonGlueRequest {
    private Nullable`1<int> _id;
    private string _requestOrigin;
    private string _sessionId;
    [AWSPropertyAttribute]
public Nullable`1<int> Id { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public Nullable`1<int> get_Id();
    public void set_Id(Nullable`1<int> value);
    internal bool IsSetId();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.Glue.Model.CancelStatementResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CatalogDeltaSource : object {
    private Dictionary`2<string, string> _additionalDeltaOptions;
    private string _database;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private string _table;
    public Dictionary`2<string, string> AdditionalDeltaOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public Dictionary`2<string, string> get_AdditionalDeltaOptions();
    public void set_AdditionalDeltaOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalDeltaOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.CatalogEntry : object {
    private string _databaseName;
    private string _tableName;
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.CatalogHudiSource : object {
    private Dictionary`2<string, string> _additionalHudiOptions;
    private string _database;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private string _table;
    public Dictionary`2<string, string> AdditionalHudiOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public Dictionary`2<string, string> get_AdditionalHudiOptions();
    public void set_AdditionalHudiOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalHudiOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.CatalogImportStatus : object {
    private Nullable`1<bool> _importCompleted;
    private string _importedBy;
    private Nullable`1<DateTime> _importTime;
    public Nullable`1<bool> ImportCompleted { get; public set; }
    [AWSPropertyAttribute]
public string ImportedBy { get; public set; }
    public Nullable`1<DateTime> ImportTime { get; public set; }
    public Nullable`1<bool> get_ImportCompleted();
    public void set_ImportCompleted(Nullable`1<bool> value);
    internal bool IsSetImportCompleted();
    public string get_ImportedBy();
    public void set_ImportedBy(string value);
    internal bool IsSetImportedBy();
    public Nullable`1<DateTime> get_ImportTime();
    public void set_ImportTime(Nullable`1<DateTime> value);
    internal bool IsSetImportTime();
}
public class Amazon.Glue.Model.CatalogKafkaSource : object {
    private string _database;
    private StreamingDataPreviewOptions _dataPreviewOptions;
    private Nullable`1<bool> _detectSchema;
    private string _name;
    private KafkaStreamingSourceOptions _streamingOptions;
    private string _table;
    private Nullable`1<int> _windowSize;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    public StreamingDataPreviewOptions DataPreviewOptions { get; public set; }
    public Nullable`1<bool> DetectSchema { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public KafkaStreamingSourceOptions StreamingOptions { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> WindowSize { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public StreamingDataPreviewOptions get_DataPreviewOptions();
    public void set_DataPreviewOptions(StreamingDataPreviewOptions value);
    internal bool IsSetDataPreviewOptions();
    public Nullable`1<bool> get_DetectSchema();
    public void set_DetectSchema(Nullable`1<bool> value);
    internal bool IsSetDetectSchema();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public KafkaStreamingSourceOptions get_StreamingOptions();
    public void set_StreamingOptions(KafkaStreamingSourceOptions value);
    internal bool IsSetStreamingOptions();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public Nullable`1<int> get_WindowSize();
    public void set_WindowSize(Nullable`1<int> value);
    internal bool IsSetWindowSize();
}
public class Amazon.Glue.Model.CatalogKinesisSource : object {
    private string _database;
    private StreamingDataPreviewOptions _dataPreviewOptions;
    private Nullable`1<bool> _detectSchema;
    private string _name;
    private KinesisStreamingSourceOptions _streamingOptions;
    private string _table;
    private Nullable`1<int> _windowSize;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    public StreamingDataPreviewOptions DataPreviewOptions { get; public set; }
    public Nullable`1<bool> DetectSchema { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public KinesisStreamingSourceOptions StreamingOptions { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> WindowSize { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public StreamingDataPreviewOptions get_DataPreviewOptions();
    public void set_DataPreviewOptions(StreamingDataPreviewOptions value);
    internal bool IsSetDataPreviewOptions();
    public Nullable`1<bool> get_DetectSchema();
    public void set_DetectSchema(Nullable`1<bool> value);
    internal bool IsSetDetectSchema();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public KinesisStreamingSourceOptions get_StreamingOptions();
    public void set_StreamingOptions(KinesisStreamingSourceOptions value);
    internal bool IsSetStreamingOptions();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public Nullable`1<int> get_WindowSize();
    public void set_WindowSize(Nullable`1<int> value);
    internal bool IsSetWindowSize();
}
public class Amazon.Glue.Model.CatalogSchemaChangePolicy : object {
    private Nullable`1<bool> _enableUpdateCatalog;
    private UpdateCatalogBehavior _updateBehavior;
    public Nullable`1<bool> EnableUpdateCatalog { get; public set; }
    public UpdateCatalogBehavior UpdateBehavior { get; public set; }
    public Nullable`1<bool> get_EnableUpdateCatalog();
    public void set_EnableUpdateCatalog(Nullable`1<bool> value);
    internal bool IsSetEnableUpdateCatalog();
    public UpdateCatalogBehavior get_UpdateBehavior();
    public void set_UpdateBehavior(UpdateCatalogBehavior value);
    internal bool IsSetUpdateBehavior();
}
public class Amazon.Glue.Model.CatalogSource : object {
    private string _database;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.CatalogTarget : object {
    private string _connectionName;
    private string _databaseName;
    private string _dlqEventQueueArn;
    private string _eventQueueArn;
    private List`1<string> _tables;
    public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public string DlqEventQueueArn { get; public set; }
    public string EventQueueArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Tables { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DlqEventQueueArn();
    public void set_DlqEventQueueArn(string value);
    internal bool IsSetDlqEventQueueArn();
    public string get_EventQueueArn();
    public void set_EventQueueArn(string value);
    internal bool IsSetEventQueueArn();
    public List`1<string> get_Tables();
    public void set_Tables(List`1<string> value);
    internal bool IsSetTables();
}
public class Amazon.Glue.Model.CheckSchemaVersionValidityRequest : AmazonGlueRequest {
    private DataFormat _dataFormat;
    private string _schemaDefinition;
    [AWSPropertyAttribute]
public DataFormat DataFormat { get; public set; }
    [AWSPropertyAttribute]
public string SchemaDefinition { get; public set; }
    public DataFormat get_DataFormat();
    public void set_DataFormat(DataFormat value);
    internal bool IsSetDataFormat();
    public string get_SchemaDefinition();
    public void set_SchemaDefinition(string value);
    internal bool IsSetSchemaDefinition();
}
public class Amazon.Glue.Model.CheckSchemaVersionValidityResponse : AmazonWebServiceResponse {
    private string _error;
    private Nullable`1<bool> _valid;
    [AWSPropertyAttribute]
public string Error { get; public set; }
    public Nullable`1<bool> Valid { get; public set; }
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public Nullable`1<bool> get_Valid();
    public void set_Valid(Nullable`1<bool> value);
    internal bool IsSetValid();
}
public class Amazon.Glue.Model.Classifier : object {
    private CsvClassifier _csvClassifier;
    private GrokClassifier _grokClassifier;
    private JsonClassifier _jsonClassifier;
    private XMLClassifier _xmlClassifier;
    public CsvClassifier CsvClassifier { get; public set; }
    public GrokClassifier GrokClassifier { get; public set; }
    public JsonClassifier JsonClassifier { get; public set; }
    public XMLClassifier XMLClassifier { get; public set; }
    public CsvClassifier get_CsvClassifier();
    public void set_CsvClassifier(CsvClassifier value);
    internal bool IsSetCsvClassifier();
    public GrokClassifier get_GrokClassifier();
    public void set_GrokClassifier(GrokClassifier value);
    internal bool IsSetGrokClassifier();
    public JsonClassifier get_JsonClassifier();
    public void set_JsonClassifier(JsonClassifier value);
    internal bool IsSetJsonClassifier();
    public XMLClassifier get_XMLClassifier();
    public void set_XMLClassifier(XMLClassifier value);
    internal bool IsSetXMLClassifier();
}
public class Amazon.Glue.Model.CloudWatchEncryption : object {
    private CloudWatchEncryptionMode _cloudWatchEncryptionMode;
    private string _kmsKeyArn;
    public CloudWatchEncryptionMode CloudWatchEncryptionMode { get; public set; }
    public string KmsKeyArn { get; public set; }
    public CloudWatchEncryptionMode get_CloudWatchEncryptionMode();
    public void set_CloudWatchEncryptionMode(CloudWatchEncryptionMode value);
    internal bool IsSetCloudWatchEncryptionMode();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
}
public class Amazon.Glue.Model.CodeGenConfigurationNode : object {
    private Aggregate _aggregate;
    private AmazonRedshiftSource _amazonRedshiftSource;
    private AmazonRedshiftTarget _amazonRedshiftTarget;
    private ApplyMapping _applyMapping;
    private AthenaConnectorSource _athenaConnectorSource;
    private CatalogDeltaSource _catalogDeltaSource;
    private CatalogHudiSource _catalogHudiSource;
    private CatalogKafkaSource _catalogKafkaSource;
    private CatalogKinesisSource _catalogKinesisSource;
    private CatalogSource _catalogSource;
    private BasicCatalogTarget _catalogTarget;
    private ConnectorDataSource _connectorDataSource;
    private ConnectorDataTarget _connectorDataTarget;
    private CustomCode _customCode;
    private DirectJDBCSource _directJDBCSource;
    private DirectKafkaSource _directKafkaSource;
    private DirectKinesisSource _directKinesisSource;
    private DropDuplicates _dropDuplicates;
    private DropFields _dropFields;
    private DropNullFields _dropNullFields;
    private DynamicTransform _dynamicTransform;
    private DynamoDBCatalogSource _dynamoDBCatalogSource;
    private EvaluateDataQuality _evaluateDataQuality;
    private EvaluateDataQualityMultiFrame _evaluateDataQualityMultiFrame;
    private FillMissingValues _fillMissingValues;
    private Filter _filter;
    private GovernedCatalogSource _governedCatalogSource;
    private GovernedCatalogTarget _governedCatalogTarget;
    private JDBCConnectorSource _jdbcConnectorSource;
    private JDBCConnectorTarget _jdbcConnectorTarget;
    private Join _join;
    private Merge _merge;
    private MicrosoftSQLServerCatalogSource _microsoftSQLServerCatalogSource;
    private MicrosoftSQLServerCatalogTarget _microsoftSQLServerCatalogTarget;
    private MySQLCatalogSource _mySQLCatalogSource;
    private MySQLCatalogTarget _mySQLCatalogTarget;
    private OracleSQLCatalogSource _oracleSQLCatalogSource;
    private OracleSQLCatalogTarget _oracleSQLCatalogTarget;
    private PIIDetection _piiDetection;
    private PostgreSQLCatalogSource _postgreSQLCatalogSource;
    private PostgreSQLCatalogTarget _postgreSQLCatalogTarget;
    private Recipe _recipe;
    private RedshiftSource _redshiftSource;
    private RedshiftTarget _redshiftTarget;
    private RelationalCatalogSource _relationalCatalogSource;
    private RenameField _renameField;
    private S3CatalogDeltaSource _s3CatalogDeltaSource;
    private S3CatalogHudiSource _s3CatalogHudiSource;
    private S3CatalogSource _s3CatalogSource;
    private S3CatalogTarget _s3CatalogTarget;
    private S3CsvSource _s3CsvSource;
    private S3DeltaCatalogTarget _s3DeltaCatalogTarget;
    private S3DeltaDirectTarget _s3DeltaDirectTarget;
    private S3DeltaSource _s3DeltaSource;
    private S3DirectTarget _s3DirectTarget;
    private S3GlueParquetTarget _s3GlueParquetTarget;
    private S3HudiCatalogTarget _s3HudiCatalogTarget;
    private S3HudiDirectTarget _s3HudiDirectTarget;
    private S3HudiSource _s3HudiSource;
    private S3JsonSource _s3JsonSource;
    private S3ParquetSource _s3ParquetSource;
    private SelectFields _selectFields;
    private SelectFromCollection _selectFromCollection;
    private SnowflakeSource _snowflakeSource;
    private SnowflakeTarget _snowflakeTarget;
    private SparkConnectorSource _sparkConnectorSource;
    private SparkConnectorTarget _sparkConnectorTarget;
    private SparkSQL _sparkSQL;
    private Spigot _spigot;
    private SplitFields _splitFields;
    private Union _union;
    public Aggregate Aggregate { get; public set; }
    public AmazonRedshiftSource AmazonRedshiftSource { get; public set; }
    public AmazonRedshiftTarget AmazonRedshiftTarget { get; public set; }
    public ApplyMapping ApplyMapping { get; public set; }
    public AthenaConnectorSource AthenaConnectorSource { get; public set; }
    public CatalogDeltaSource CatalogDeltaSource { get; public set; }
    public CatalogHudiSource CatalogHudiSource { get; public set; }
    public CatalogKafkaSource CatalogKafkaSource { get; public set; }
    public CatalogKinesisSource CatalogKinesisSource { get; public set; }
    public CatalogSource CatalogSource { get; public set; }
    public BasicCatalogTarget CatalogTarget { get; public set; }
    public ConnectorDataSource ConnectorDataSource { get; public set; }
    public ConnectorDataTarget ConnectorDataTarget { get; public set; }
    public CustomCode CustomCode { get; public set; }
    public DirectJDBCSource DirectJDBCSource { get; public set; }
    public DirectKafkaSource DirectKafkaSource { get; public set; }
    public DirectKinesisSource DirectKinesisSource { get; public set; }
    public DropDuplicates DropDuplicates { get; public set; }
    public DropFields DropFields { get; public set; }
    public DropNullFields DropNullFields { get; public set; }
    public DynamicTransform DynamicTransform { get; public set; }
    public DynamoDBCatalogSource DynamoDBCatalogSource { get; public set; }
    public EvaluateDataQuality EvaluateDataQuality { get; public set; }
    public EvaluateDataQualityMultiFrame EvaluateDataQualityMultiFrame { get; public set; }
    public FillMissingValues FillMissingValues { get; public set; }
    public Filter Filter { get; public set; }
    public GovernedCatalogSource GovernedCatalogSource { get; public set; }
    public GovernedCatalogTarget GovernedCatalogTarget { get; public set; }
    public JDBCConnectorSource JDBCConnectorSource { get; public set; }
    public JDBCConnectorTarget JDBCConnectorTarget { get; public set; }
    public Join Join { get; public set; }
    public Merge Merge { get; public set; }
    public MicrosoftSQLServerCatalogSource MicrosoftSQLServerCatalogSource { get; public set; }
    public MicrosoftSQLServerCatalogTarget MicrosoftSQLServerCatalogTarget { get; public set; }
    public MySQLCatalogSource MySQLCatalogSource { get; public set; }
    public MySQLCatalogTarget MySQLCatalogTarget { get; public set; }
    public OracleSQLCatalogSource OracleSQLCatalogSource { get; public set; }
    public OracleSQLCatalogTarget OracleSQLCatalogTarget { get; public set; }
    public PIIDetection PIIDetection { get; public set; }
    public PostgreSQLCatalogSource PostgreSQLCatalogSource { get; public set; }
    public PostgreSQLCatalogTarget PostgreSQLCatalogTarget { get; public set; }
    public Recipe Recipe { get; public set; }
    public RedshiftSource RedshiftSource { get; public set; }
    public RedshiftTarget RedshiftTarget { get; public set; }
    public RelationalCatalogSource RelationalCatalogSource { get; public set; }
    public RenameField RenameField { get; public set; }
    public S3CatalogDeltaSource S3CatalogDeltaSource { get; public set; }
    public S3CatalogHudiSource S3CatalogHudiSource { get; public set; }
    public S3CatalogSource S3CatalogSource { get; public set; }
    public S3CatalogTarget S3CatalogTarget { get; public set; }
    public S3CsvSource S3CsvSource { get; public set; }
    public S3DeltaCatalogTarget S3DeltaCatalogTarget { get; public set; }
    public S3DeltaDirectTarget S3DeltaDirectTarget { get; public set; }
    public S3DeltaSource S3DeltaSource { get; public set; }
    public S3DirectTarget S3DirectTarget { get; public set; }
    public S3GlueParquetTarget S3GlueParquetTarget { get; public set; }
    public S3HudiCatalogTarget S3HudiCatalogTarget { get; public set; }
    public S3HudiDirectTarget S3HudiDirectTarget { get; public set; }
    public S3HudiSource S3HudiSource { get; public set; }
    public S3JsonSource S3JsonSource { get; public set; }
    public S3ParquetSource S3ParquetSource { get; public set; }
    public SelectFields SelectFields { get; public set; }
    public SelectFromCollection SelectFromCollection { get; public set; }
    public SnowflakeSource SnowflakeSource { get; public set; }
    public SnowflakeTarget SnowflakeTarget { get; public set; }
    public SparkConnectorSource SparkConnectorSource { get; public set; }
    public SparkConnectorTarget SparkConnectorTarget { get; public set; }
    public SparkSQL SparkSQL { get; public set; }
    public Spigot Spigot { get; public set; }
    public SplitFields SplitFields { get; public set; }
    public Union Union { get; public set; }
    public Aggregate get_Aggregate();
    public void set_Aggregate(Aggregate value);
    internal bool IsSetAggregate();
    public AmazonRedshiftSource get_AmazonRedshiftSource();
    public void set_AmazonRedshiftSource(AmazonRedshiftSource value);
    internal bool IsSetAmazonRedshiftSource();
    public AmazonRedshiftTarget get_AmazonRedshiftTarget();
    public void set_AmazonRedshiftTarget(AmazonRedshiftTarget value);
    internal bool IsSetAmazonRedshiftTarget();
    public ApplyMapping get_ApplyMapping();
    public void set_ApplyMapping(ApplyMapping value);
    internal bool IsSetApplyMapping();
    public AthenaConnectorSource get_AthenaConnectorSource();
    public void set_AthenaConnectorSource(AthenaConnectorSource value);
    internal bool IsSetAthenaConnectorSource();
    public CatalogDeltaSource get_CatalogDeltaSource();
    public void set_CatalogDeltaSource(CatalogDeltaSource value);
    internal bool IsSetCatalogDeltaSource();
    public CatalogHudiSource get_CatalogHudiSource();
    public void set_CatalogHudiSource(CatalogHudiSource value);
    internal bool IsSetCatalogHudiSource();
    public CatalogKafkaSource get_CatalogKafkaSource();
    public void set_CatalogKafkaSource(CatalogKafkaSource value);
    internal bool IsSetCatalogKafkaSource();
    public CatalogKinesisSource get_CatalogKinesisSource();
    public void set_CatalogKinesisSource(CatalogKinesisSource value);
    internal bool IsSetCatalogKinesisSource();
    public CatalogSource get_CatalogSource();
    public void set_CatalogSource(CatalogSource value);
    internal bool IsSetCatalogSource();
    public BasicCatalogTarget get_CatalogTarget();
    public void set_CatalogTarget(BasicCatalogTarget value);
    internal bool IsSetCatalogTarget();
    public ConnectorDataSource get_ConnectorDataSource();
    public void set_ConnectorDataSource(ConnectorDataSource value);
    internal bool IsSetConnectorDataSource();
    public ConnectorDataTarget get_ConnectorDataTarget();
    public void set_ConnectorDataTarget(ConnectorDataTarget value);
    internal bool IsSetConnectorDataTarget();
    public CustomCode get_CustomCode();
    public void set_CustomCode(CustomCode value);
    internal bool IsSetCustomCode();
    public DirectJDBCSource get_DirectJDBCSource();
    public void set_DirectJDBCSource(DirectJDBCSource value);
    internal bool IsSetDirectJDBCSource();
    public DirectKafkaSource get_DirectKafkaSource();
    public void set_DirectKafkaSource(DirectKafkaSource value);
    internal bool IsSetDirectKafkaSource();
    public DirectKinesisSource get_DirectKinesisSource();
    public void set_DirectKinesisSource(DirectKinesisSource value);
    internal bool IsSetDirectKinesisSource();
    public DropDuplicates get_DropDuplicates();
    public void set_DropDuplicates(DropDuplicates value);
    internal bool IsSetDropDuplicates();
    public DropFields get_DropFields();
    public void set_DropFields(DropFields value);
    internal bool IsSetDropFields();
    public DropNullFields get_DropNullFields();
    public void set_DropNullFields(DropNullFields value);
    internal bool IsSetDropNullFields();
    public DynamicTransform get_DynamicTransform();
    public void set_DynamicTransform(DynamicTransform value);
    internal bool IsSetDynamicTransform();
    public DynamoDBCatalogSource get_DynamoDBCatalogSource();
    public void set_DynamoDBCatalogSource(DynamoDBCatalogSource value);
    internal bool IsSetDynamoDBCatalogSource();
    public EvaluateDataQuality get_EvaluateDataQuality();
    public void set_EvaluateDataQuality(EvaluateDataQuality value);
    internal bool IsSetEvaluateDataQuality();
    public EvaluateDataQualityMultiFrame get_EvaluateDataQualityMultiFrame();
    public void set_EvaluateDataQualityMultiFrame(EvaluateDataQualityMultiFrame value);
    internal bool IsSetEvaluateDataQualityMultiFrame();
    public FillMissingValues get_FillMissingValues();
    public void set_FillMissingValues(FillMissingValues value);
    internal bool IsSetFillMissingValues();
    public Filter get_Filter();
    public void set_Filter(Filter value);
    internal bool IsSetFilter();
    public GovernedCatalogSource get_GovernedCatalogSource();
    public void set_GovernedCatalogSource(GovernedCatalogSource value);
    internal bool IsSetGovernedCatalogSource();
    public GovernedCatalogTarget get_GovernedCatalogTarget();
    public void set_GovernedCatalogTarget(GovernedCatalogTarget value);
    internal bool IsSetGovernedCatalogTarget();
    public JDBCConnectorSource get_JDBCConnectorSource();
    public void set_JDBCConnectorSource(JDBCConnectorSource value);
    internal bool IsSetJDBCConnectorSource();
    public JDBCConnectorTarget get_JDBCConnectorTarget();
    public void set_JDBCConnectorTarget(JDBCConnectorTarget value);
    internal bool IsSetJDBCConnectorTarget();
    public Join get_Join();
    public void set_Join(Join value);
    internal bool IsSetJoin();
    public Merge get_Merge();
    public void set_Merge(Merge value);
    internal bool IsSetMerge();
    public MicrosoftSQLServerCatalogSource get_MicrosoftSQLServerCatalogSource();
    public void set_MicrosoftSQLServerCatalogSource(MicrosoftSQLServerCatalogSource value);
    internal bool IsSetMicrosoftSQLServerCatalogSource();
    public MicrosoftSQLServerCatalogTarget get_MicrosoftSQLServerCatalogTarget();
    public void set_MicrosoftSQLServerCatalogTarget(MicrosoftSQLServerCatalogTarget value);
    internal bool IsSetMicrosoftSQLServerCatalogTarget();
    public MySQLCatalogSource get_MySQLCatalogSource();
    public void set_MySQLCatalogSource(MySQLCatalogSource value);
    internal bool IsSetMySQLCatalogSource();
    public MySQLCatalogTarget get_MySQLCatalogTarget();
    public void set_MySQLCatalogTarget(MySQLCatalogTarget value);
    internal bool IsSetMySQLCatalogTarget();
    public OracleSQLCatalogSource get_OracleSQLCatalogSource();
    public void set_OracleSQLCatalogSource(OracleSQLCatalogSource value);
    internal bool IsSetOracleSQLCatalogSource();
    public OracleSQLCatalogTarget get_OracleSQLCatalogTarget();
    public void set_OracleSQLCatalogTarget(OracleSQLCatalogTarget value);
    internal bool IsSetOracleSQLCatalogTarget();
    public PIIDetection get_PIIDetection();
    public void set_PIIDetection(PIIDetection value);
    internal bool IsSetPIIDetection();
    public PostgreSQLCatalogSource get_PostgreSQLCatalogSource();
    public void set_PostgreSQLCatalogSource(PostgreSQLCatalogSource value);
    internal bool IsSetPostgreSQLCatalogSource();
    public PostgreSQLCatalogTarget get_PostgreSQLCatalogTarget();
    public void set_PostgreSQLCatalogTarget(PostgreSQLCatalogTarget value);
    internal bool IsSetPostgreSQLCatalogTarget();
    public Recipe get_Recipe();
    public void set_Recipe(Recipe value);
    internal bool IsSetRecipe();
    public RedshiftSource get_RedshiftSource();
    public void set_RedshiftSource(RedshiftSource value);
    internal bool IsSetRedshiftSource();
    public RedshiftTarget get_RedshiftTarget();
    public void set_RedshiftTarget(RedshiftTarget value);
    internal bool IsSetRedshiftTarget();
    public RelationalCatalogSource get_RelationalCatalogSource();
    public void set_RelationalCatalogSource(RelationalCatalogSource value);
    internal bool IsSetRelationalCatalogSource();
    public RenameField get_RenameField();
    public void set_RenameField(RenameField value);
    internal bool IsSetRenameField();
    public S3CatalogDeltaSource get_S3CatalogDeltaSource();
    public void set_S3CatalogDeltaSource(S3CatalogDeltaSource value);
    internal bool IsSetS3CatalogDeltaSource();
    public S3CatalogHudiSource get_S3CatalogHudiSource();
    public void set_S3CatalogHudiSource(S3CatalogHudiSource value);
    internal bool IsSetS3CatalogHudiSource();
    public S3CatalogSource get_S3CatalogSource();
    public void set_S3CatalogSource(S3CatalogSource value);
    internal bool IsSetS3CatalogSource();
    public S3CatalogTarget get_S3CatalogTarget();
    public void set_S3CatalogTarget(S3CatalogTarget value);
    internal bool IsSetS3CatalogTarget();
    public S3CsvSource get_S3CsvSource();
    public void set_S3CsvSource(S3CsvSource value);
    internal bool IsSetS3CsvSource();
    public S3DeltaCatalogTarget get_S3DeltaCatalogTarget();
    public void set_S3DeltaCatalogTarget(S3DeltaCatalogTarget value);
    internal bool IsSetS3DeltaCatalogTarget();
    public S3DeltaDirectTarget get_S3DeltaDirectTarget();
    public void set_S3DeltaDirectTarget(S3DeltaDirectTarget value);
    internal bool IsSetS3DeltaDirectTarget();
    public S3DeltaSource get_S3DeltaSource();
    public void set_S3DeltaSource(S3DeltaSource value);
    internal bool IsSetS3DeltaSource();
    public S3DirectTarget get_S3DirectTarget();
    public void set_S3DirectTarget(S3DirectTarget value);
    internal bool IsSetS3DirectTarget();
    public S3GlueParquetTarget get_S3GlueParquetTarget();
    public void set_S3GlueParquetTarget(S3GlueParquetTarget value);
    internal bool IsSetS3GlueParquetTarget();
    public S3HudiCatalogTarget get_S3HudiCatalogTarget();
    public void set_S3HudiCatalogTarget(S3HudiCatalogTarget value);
    internal bool IsSetS3HudiCatalogTarget();
    public S3HudiDirectTarget get_S3HudiDirectTarget();
    public void set_S3HudiDirectTarget(S3HudiDirectTarget value);
    internal bool IsSetS3HudiDirectTarget();
    public S3HudiSource get_S3HudiSource();
    public void set_S3HudiSource(S3HudiSource value);
    internal bool IsSetS3HudiSource();
    public S3JsonSource get_S3JsonSource();
    public void set_S3JsonSource(S3JsonSource value);
    internal bool IsSetS3JsonSource();
    public S3ParquetSource get_S3ParquetSource();
    public void set_S3ParquetSource(S3ParquetSource value);
    internal bool IsSetS3ParquetSource();
    public SelectFields get_SelectFields();
    public void set_SelectFields(SelectFields value);
    internal bool IsSetSelectFields();
    public SelectFromCollection get_SelectFromCollection();
    public void set_SelectFromCollection(SelectFromCollection value);
    internal bool IsSetSelectFromCollection();
    public SnowflakeSource get_SnowflakeSource();
    public void set_SnowflakeSource(SnowflakeSource value);
    internal bool IsSetSnowflakeSource();
    public SnowflakeTarget get_SnowflakeTarget();
    public void set_SnowflakeTarget(SnowflakeTarget value);
    internal bool IsSetSnowflakeTarget();
    public SparkConnectorSource get_SparkConnectorSource();
    public void set_SparkConnectorSource(SparkConnectorSource value);
    internal bool IsSetSparkConnectorSource();
    public SparkConnectorTarget get_SparkConnectorTarget();
    public void set_SparkConnectorTarget(SparkConnectorTarget value);
    internal bool IsSetSparkConnectorTarget();
    public SparkSQL get_SparkSQL();
    public void set_SparkSQL(SparkSQL value);
    internal bool IsSetSparkSQL();
    public Spigot get_Spigot();
    public void set_Spigot(Spigot value);
    internal bool IsSetSpigot();
    public SplitFields get_SplitFields();
    public void set_SplitFields(SplitFields value);
    internal bool IsSetSplitFields();
    public Union get_Union();
    public void set_Union(Union value);
    internal bool IsSetUnion();
}
public class Amazon.Glue.Model.CodeGenEdge : object {
    private string _source;
    private string _target;
    private string _targetParameter;
    [AWSPropertyAttribute]
public string Source { get; public set; }
    [AWSPropertyAttribute]
public string Target { get; public set; }
    public string TargetParameter { get; public set; }
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public string get_TargetParameter();
    public void set_TargetParameter(string value);
    internal bool IsSetTargetParameter();
}
public class Amazon.Glue.Model.CodeGenNode : object {
    private List`1<CodeGenNodeArg> _args;
    private string _id;
    private Nullable`1<int> _lineNumber;
    private string _nodeType;
    [AWSPropertyAttribute]
public List`1<CodeGenNodeArg> Args { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<int> LineNumber { get; public set; }
    [AWSPropertyAttribute]
public string NodeType { get; public set; }
    public List`1<CodeGenNodeArg> get_Args();
    public void set_Args(List`1<CodeGenNodeArg> value);
    internal bool IsSetArgs();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_LineNumber();
    public void set_LineNumber(Nullable`1<int> value);
    internal bool IsSetLineNumber();
    public string get_NodeType();
    public void set_NodeType(string value);
    internal bool IsSetNodeType();
}
public class Amazon.Glue.Model.CodeGenNodeArg : object {
    private string _name;
    private Nullable`1<bool> _param;
    private string _value;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> Param { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_Param();
    public void set_Param(Nullable`1<bool> value);
    internal bool IsSetParam();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.Column : object {
    private string _comment;
    private string _name;
    private Dictionary`2<string, string> _parameters;
    private string _type;
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.ColumnError : object {
    private string _columnName;
    private ErrorDetail _error;
    [AWSPropertyAttribute]
public string ColumnName { get; public set; }
    public ErrorDetail Error { get; public set; }
    public string get_ColumnName();
    public void set_ColumnName(string value);
    internal bool IsSetColumnName();
    public ErrorDetail get_Error();
    public void set_Error(ErrorDetail value);
    internal bool IsSetError();
}
public class Amazon.Glue.Model.ColumnImportance : object {
    private string _columnName;
    private Nullable`1<double> _importance;
    [AWSPropertyAttribute]
public string ColumnName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Importance { get; public set; }
    public string get_ColumnName();
    public void set_ColumnName(string value);
    internal bool IsSetColumnName();
    public Nullable`1<double> get_Importance();
    public void set_Importance(Nullable`1<double> value);
    internal bool IsSetImportance();
}
public class Amazon.Glue.Model.ColumnRowFilter : object {
    private string _columnName;
    private string _rowFilterExpression;
    [AWSPropertyAttribute]
public string ColumnName { get; public set; }
    [AWSPropertyAttribute]
public string RowFilterExpression { get; public set; }
    public string get_ColumnName();
    public void set_ColumnName(string value);
    internal bool IsSetColumnName();
    public string get_RowFilterExpression();
    public void set_RowFilterExpression(string value);
    internal bool IsSetRowFilterExpression();
}
public class Amazon.Glue.Model.ColumnStatistics : object {
    private Nullable`1<DateTime> _analyzedTime;
    private string _columnName;
    private string _columnType;
    private ColumnStatisticsData _statisticsData;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> AnalyzedTime { get; public set; }
    [AWSPropertyAttribute]
public string ColumnName { get; public set; }
    [AWSPropertyAttribute]
public string ColumnType { get; public set; }
    [AWSPropertyAttribute]
public ColumnStatisticsData StatisticsData { get; public set; }
    public Nullable`1<DateTime> get_AnalyzedTime();
    public void set_AnalyzedTime(Nullable`1<DateTime> value);
    internal bool IsSetAnalyzedTime();
    public string get_ColumnName();
    public void set_ColumnName(string value);
    internal bool IsSetColumnName();
    public string get_ColumnType();
    public void set_ColumnType(string value);
    internal bool IsSetColumnType();
    public ColumnStatisticsData get_StatisticsData();
    public void set_StatisticsData(ColumnStatisticsData value);
    internal bool IsSetStatisticsData();
}
public class Amazon.Glue.Model.ColumnStatisticsData : object {
    private BinaryColumnStatisticsData _binaryColumnStatisticsData;
    private BooleanColumnStatisticsData _booleanColumnStatisticsData;
    private DateColumnStatisticsData _dateColumnStatisticsData;
    private DecimalColumnStatisticsData _decimalColumnStatisticsData;
    private DoubleColumnStatisticsData _doubleColumnStatisticsData;
    private LongColumnStatisticsData _longColumnStatisticsData;
    private StringColumnStatisticsData _stringColumnStatisticsData;
    private ColumnStatisticsType _type;
    public BinaryColumnStatisticsData BinaryColumnStatisticsData { get; public set; }
    public BooleanColumnStatisticsData BooleanColumnStatisticsData { get; public set; }
    public DateColumnStatisticsData DateColumnStatisticsData { get; public set; }
    public DecimalColumnStatisticsData DecimalColumnStatisticsData { get; public set; }
    public DoubleColumnStatisticsData DoubleColumnStatisticsData { get; public set; }
    public LongColumnStatisticsData LongColumnStatisticsData { get; public set; }
    public StringColumnStatisticsData StringColumnStatisticsData { get; public set; }
    [AWSPropertyAttribute]
public ColumnStatisticsType Type { get; public set; }
    public BinaryColumnStatisticsData get_BinaryColumnStatisticsData();
    public void set_BinaryColumnStatisticsData(BinaryColumnStatisticsData value);
    internal bool IsSetBinaryColumnStatisticsData();
    public BooleanColumnStatisticsData get_BooleanColumnStatisticsData();
    public void set_BooleanColumnStatisticsData(BooleanColumnStatisticsData value);
    internal bool IsSetBooleanColumnStatisticsData();
    public DateColumnStatisticsData get_DateColumnStatisticsData();
    public void set_DateColumnStatisticsData(DateColumnStatisticsData value);
    internal bool IsSetDateColumnStatisticsData();
    public DecimalColumnStatisticsData get_DecimalColumnStatisticsData();
    public void set_DecimalColumnStatisticsData(DecimalColumnStatisticsData value);
    internal bool IsSetDecimalColumnStatisticsData();
    public DoubleColumnStatisticsData get_DoubleColumnStatisticsData();
    public void set_DoubleColumnStatisticsData(DoubleColumnStatisticsData value);
    internal bool IsSetDoubleColumnStatisticsData();
    public LongColumnStatisticsData get_LongColumnStatisticsData();
    public void set_LongColumnStatisticsData(LongColumnStatisticsData value);
    internal bool IsSetLongColumnStatisticsData();
    public StringColumnStatisticsData get_StringColumnStatisticsData();
    public void set_StringColumnStatisticsData(StringColumnStatisticsData value);
    internal bool IsSetStringColumnStatisticsData();
    public ColumnStatisticsType get_Type();
    public void set_Type(ColumnStatisticsType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.ColumnStatisticsError : object {
    private ColumnStatistics _columnStatistics;
    private ErrorDetail _error;
    public ColumnStatistics ColumnStatistics { get; public set; }
    public ErrorDetail Error { get; public set; }
    public ColumnStatistics get_ColumnStatistics();
    public void set_ColumnStatistics(ColumnStatistics value);
    internal bool IsSetColumnStatistics();
    public ErrorDetail get_Error();
    public void set_Error(ErrorDetail value);
    internal bool IsSetError();
}
public class Amazon.Glue.Model.ColumnStatisticsTaskNotRunningException : AmazonGlueException {
    public ColumnStatisticsTaskNotRunningException(string message);
    public ColumnStatisticsTaskNotRunningException(string message, Exception innerException);
    public ColumnStatisticsTaskNotRunningException(Exception innerException);
    public ColumnStatisticsTaskNotRunningException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ColumnStatisticsTaskNotRunningException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ColumnStatisticsTaskRun : object {
    private string _catalogID;
    private List`1<string> _columnNameList;
    private string _columnStatisticsTaskRunId;
    private Nullable`1<DateTime> _creationTime;
    private string _customerId;
    private string _databaseName;
    private Nullable`1<double> _dpuSeconds;
    private Nullable`1<DateTime> _endTime;
    private string _errorMessage;
    private Nullable`1<DateTime> _lastUpdated;
    private Nullable`1<int> _numberOfWorkers;
    private string _role;
    private Nullable`1<double> _sampleSize;
    private string _securityConfiguration;
    private Nullable`1<DateTime> _startTime;
    private ColumnStatisticsState _status;
    private string _tableName;
    private string _workerType;
    [AWSPropertyAttribute]
public string CatalogID { get; public set; }
    public List`1<string> ColumnNameList { get; public set; }
    [AWSPropertyAttribute]
public string ColumnStatisticsTaskRunId { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string CustomerId { get; public set; }
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> DPUSeconds { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    public Nullable`1<DateTime> LastUpdated { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumberOfWorkers { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> SampleSize { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public ColumnStatisticsState Status { get; public set; }
    public string TableName { get; public set; }
    [AWSPropertyAttribute]
public string WorkerType { get; public set; }
    public string get_CatalogID();
    public void set_CatalogID(string value);
    internal bool IsSetCatalogID();
    public List`1<string> get_ColumnNameList();
    public void set_ColumnNameList(List`1<string> value);
    internal bool IsSetColumnNameList();
    public string get_ColumnStatisticsTaskRunId();
    public void set_ColumnStatisticsTaskRunId(string value);
    internal bool IsSetColumnStatisticsTaskRunId();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CustomerId();
    public void set_CustomerId(string value);
    internal bool IsSetCustomerId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<double> get_DPUSeconds();
    public void set_DPUSeconds(Nullable`1<double> value);
    internal bool IsSetDPUSeconds();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public Nullable`1<DateTime> get_LastUpdated();
    public void set_LastUpdated(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdated();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Nullable`1<double> get_SampleSize();
    public void set_SampleSize(Nullable`1<double> value);
    internal bool IsSetSampleSize();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public ColumnStatisticsState get_Status();
    public void set_Status(ColumnStatisticsState value);
    internal bool IsSetStatus();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_WorkerType();
    public void set_WorkerType(string value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.ColumnStatisticsTaskRunningException : AmazonGlueException {
    public ColumnStatisticsTaskRunningException(string message);
    public ColumnStatisticsTaskRunningException(string message, Exception innerException);
    public ColumnStatisticsTaskRunningException(Exception innerException);
    public ColumnStatisticsTaskRunningException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ColumnStatisticsTaskRunningException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ColumnStatisticsTaskStoppingException : AmazonGlueException {
    public ColumnStatisticsTaskStoppingException(string message);
    public ColumnStatisticsTaskStoppingException(string message, Exception innerException);
    public ColumnStatisticsTaskStoppingException(Exception innerException);
    public ColumnStatisticsTaskStoppingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ColumnStatisticsTaskStoppingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ConcurrentModificationException : AmazonGlueException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ConcurrentRunsExceededException : AmazonGlueException {
    public ConcurrentRunsExceededException(string message);
    public ConcurrentRunsExceededException(string message, Exception innerException);
    public ConcurrentRunsExceededException(Exception innerException);
    public ConcurrentRunsExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentRunsExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.Condition : object {
    private string _crawlerName;
    private CrawlState _crawlState;
    private string _jobName;
    private LogicalOperator _logicalOperator;
    private JobRunState _state;
    [AWSPropertyAttribute]
public string CrawlerName { get; public set; }
    public CrawlState CrawlState { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public LogicalOperator LogicalOperator { get; public set; }
    public JobRunState State { get; public set; }
    public string get_CrawlerName();
    public void set_CrawlerName(string value);
    internal bool IsSetCrawlerName();
    public CrawlState get_CrawlState();
    public void set_CrawlState(CrawlState value);
    internal bool IsSetCrawlState();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public LogicalOperator get_LogicalOperator();
    public void set_LogicalOperator(LogicalOperator value);
    internal bool IsSetLogicalOperator();
    public JobRunState get_State();
    public void set_State(JobRunState value);
    internal bool IsSetState();
}
public class Amazon.Glue.Model.ConditionCheckFailureException : AmazonGlueException {
    public ConditionCheckFailureException(string message);
    public ConditionCheckFailureException(string message, Exception innerException);
    public ConditionCheckFailureException(Exception innerException);
    public ConditionCheckFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConditionCheckFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ConditionExpression : object {
    private string _condition;
    private string _targetColumn;
    private string _value;
    [AWSPropertyAttribute]
public string Condition { get; public set; }
    [AWSPropertyAttribute]
public string TargetColumn { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Condition();
    public void set_Condition(string value);
    internal bool IsSetCondition();
    public string get_TargetColumn();
    public void set_TargetColumn(string value);
    internal bool IsSetTargetColumn();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.ConfigurationObject : object {
    private List`1<string> _allowedValues;
    private string _defaultValue;
    private string _maxValue;
    private string _minValue;
    public List`1<string> AllowedValues { get; public set; }
    [AWSPropertyAttribute]
public string DefaultValue { get; public set; }
    [AWSPropertyAttribute]
public string MaxValue { get; public set; }
    [AWSPropertyAttribute]
public string MinValue { get; public set; }
    public List`1<string> get_AllowedValues();
    public void set_AllowedValues(List`1<string> value);
    internal bool IsSetAllowedValues();
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    internal bool IsSetDefaultValue();
    public string get_MaxValue();
    public void set_MaxValue(string value);
    internal bool IsSetMaxValue();
    public string get_MinValue();
    public void set_MinValue(string value);
    internal bool IsSetMinValue();
}
public class Amazon.Glue.Model.ConflictException : AmazonGlueException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ConfusionMatrix : object {
    private Nullable`1<long> _numFalseNegatives;
    private Nullable`1<long> _numFalsePositives;
    private Nullable`1<long> _numTrueNegatives;
    private Nullable`1<long> _numTruePositives;
    public Nullable`1<long> NumFalseNegatives { get; public set; }
    public Nullable`1<long> NumFalsePositives { get; public set; }
    public Nullable`1<long> NumTrueNegatives { get; public set; }
    public Nullable`1<long> NumTruePositives { get; public set; }
    public Nullable`1<long> get_NumFalseNegatives();
    public void set_NumFalseNegatives(Nullable`1<long> value);
    internal bool IsSetNumFalseNegatives();
    public Nullable`1<long> get_NumFalsePositives();
    public void set_NumFalsePositives(Nullable`1<long> value);
    internal bool IsSetNumFalsePositives();
    public Nullable`1<long> get_NumTrueNegatives();
    public void set_NumTrueNegatives(Nullable`1<long> value);
    internal bool IsSetNumTrueNegatives();
    public Nullable`1<long> get_NumTruePositives();
    public void set_NumTruePositives(Nullable`1<long> value);
    internal bool IsSetNumTruePositives();
}
public class Amazon.Glue.Model.Connection : object {
    private AuthenticationConfiguration _authenticationConfiguration;
    private Dictionary`2<string, string> _connectionProperties;
    private ConnectionType _connectionType;
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private Nullable`1<DateTime> _lastConnectionValidationTime;
    private string _lastUpdatedBy;
    private Nullable`1<DateTime> _lastUpdatedTime;
    private List`1<string> _matchCriteria;
    private string _name;
    private PhysicalConnectionRequirements _physicalConnectionRequirements;
    private ConnectionStatus _status;
    private string _statusReason;
    public AuthenticationConfiguration AuthenticationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> ConnectionProperties { get; public set; }
    public ConnectionType ConnectionType { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastConnectionValidationTime { get; public set; }
    [AWSPropertyAttribute]
public string LastUpdatedBy { get; public set; }
    public Nullable`1<DateTime> LastUpdatedTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> MatchCriteria { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PhysicalConnectionRequirements PhysicalConnectionRequirements { get; public set; }
    public ConnectionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusReason { get; public set; }
    public AuthenticationConfiguration get_AuthenticationConfiguration();
    public void set_AuthenticationConfiguration(AuthenticationConfiguration value);
    internal bool IsSetAuthenticationConfiguration();
    public Dictionary`2<string, string> get_ConnectionProperties();
    public void set_ConnectionProperties(Dictionary`2<string, string> value);
    internal bool IsSetConnectionProperties();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastConnectionValidationTime();
    public void set_LastConnectionValidationTime(Nullable`1<DateTime> value);
    internal bool IsSetLastConnectionValidationTime();
    public string get_LastUpdatedBy();
    public void set_LastUpdatedBy(string value);
    internal bool IsSetLastUpdatedBy();
    public Nullable`1<DateTime> get_LastUpdatedTime();
    public void set_LastUpdatedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedTime();
    public List`1<string> get_MatchCriteria();
    public void set_MatchCriteria(List`1<string> value);
    internal bool IsSetMatchCriteria();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PhysicalConnectionRequirements get_PhysicalConnectionRequirements();
    public void set_PhysicalConnectionRequirements(PhysicalConnectionRequirements value);
    internal bool IsSetPhysicalConnectionRequirements();
    public ConnectionStatus get_Status();
    public void set_Status(ConnectionStatus value);
    internal bool IsSetStatus();
    public string get_StatusReason();
    public void set_StatusReason(string value);
    internal bool IsSetStatusReason();
}
public class Amazon.Glue.Model.ConnectionInput : object {
    private AuthenticationConfigurationInput _authenticationConfiguration;
    private Dictionary`2<string, string> _connectionProperties;
    private ConnectionType _connectionType;
    private string _description;
    private List`1<string> _matchCriteria;
    private string _name;
    private PhysicalConnectionRequirements _physicalConnectionRequirements;
    private Nullable`1<bool> _validateCredentials;
    public AuthenticationConfigurationInput AuthenticationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> ConnectionProperties { get; public set; }
    [AWSPropertyAttribute]
public ConnectionType ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> MatchCriteria { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PhysicalConnectionRequirements PhysicalConnectionRequirements { get; public set; }
    public Nullable`1<bool> ValidateCredentials { get; public set; }
    public AuthenticationConfigurationInput get_AuthenticationConfiguration();
    public void set_AuthenticationConfiguration(AuthenticationConfigurationInput value);
    internal bool IsSetAuthenticationConfiguration();
    public Dictionary`2<string, string> get_ConnectionProperties();
    public void set_ConnectionProperties(Dictionary`2<string, string> value);
    internal bool IsSetConnectionProperties();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_MatchCriteria();
    public void set_MatchCriteria(List`1<string> value);
    internal bool IsSetMatchCriteria();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PhysicalConnectionRequirements get_PhysicalConnectionRequirements();
    public void set_PhysicalConnectionRequirements(PhysicalConnectionRequirements value);
    internal bool IsSetPhysicalConnectionRequirements();
    public Nullable`1<bool> get_ValidateCredentials();
    public void set_ValidateCredentials(Nullable`1<bool> value);
    internal bool IsSetValidateCredentials();
}
public class Amazon.Glue.Model.ConnectionPasswordEncryption : object {
    private string _awsKmsKeyId;
    private Nullable`1<bool> _returnConnectionPasswordEncrypted;
    [AWSPropertyAttribute]
public string AwsKmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> ReturnConnectionPasswordEncrypted { get; public set; }
    public string get_AwsKmsKeyId();
    public void set_AwsKmsKeyId(string value);
    internal bool IsSetAwsKmsKeyId();
    public Nullable`1<bool> get_ReturnConnectionPasswordEncrypted();
    public void set_ReturnConnectionPasswordEncrypted(Nullable`1<bool> value);
    internal bool IsSetReturnConnectionPasswordEncrypted();
}
public class Amazon.Glue.Model.ConnectionsList : object {
    private List`1<string> _connections;
    public List`1<string> Connections { get; public set; }
    public List`1<string> get_Connections();
    public void set_Connections(List`1<string> value);
    internal bool IsSetConnections();
}
public class Amazon.Glue.Model.ConnectorDataSource : object {
    private string _connectionType;
    private Dictionary`2<string, string> _data;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    [AWSPropertyAttribute]
public string ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Data { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public string get_ConnectionType();
    public void set_ConnectionType(string value);
    internal bool IsSetConnectionType();
    public Dictionary`2<string, string> get_Data();
    public void set_Data(Dictionary`2<string, string> value);
    internal bool IsSetData();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
}
public class Amazon.Glue.Model.ConnectorDataTarget : object {
    private string _connectionType;
    private Dictionary`2<string, string> _data;
    private List`1<string> _inputs;
    private string _name;
    [AWSPropertyAttribute]
public string ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Data { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ConnectionType();
    public void set_ConnectionType(string value);
    internal bool IsSetConnectionType();
    public Dictionary`2<string, string> get_Data();
    public void set_Data(Dictionary`2<string, string> value);
    internal bool IsSetData();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.Crawl : object {
    private Nullable`1<DateTime> _completedOn;
    private string _errorMessage;
    private string _logGroup;
    private string _logStream;
    private Nullable`1<DateTime> _startedOn;
    private CrawlState _state;
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string LogGroup { get; public set; }
    [AWSPropertyAttribute]
public string LogStream { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public CrawlState State { get; public set; }
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_LogGroup();
    public void set_LogGroup(string value);
    internal bool IsSetLogGroup();
    public string get_LogStream();
    public void set_LogStream(string value);
    internal bool IsSetLogStream();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public CrawlState get_State();
    public void set_State(CrawlState value);
    internal bool IsSetState();
}
public class Amazon.Glue.Model.Crawler : object {
    private List`1<string> _classifiers;
    private string _configuration;
    private Nullable`1<long> _crawlElapsedTime;
    private string _crawlerSecurityConfiguration;
    private Nullable`1<DateTime> _creationTime;
    private string _databaseName;
    private string _description;
    private LakeFormationConfiguration _lakeFormationConfiguration;
    private LastCrawlInfo _lastCrawl;
    private Nullable`1<DateTime> _lastUpdated;
    private LineageConfiguration _lineageConfiguration;
    private string _name;
    private RecrawlPolicy _recrawlPolicy;
    private string _role;
    private Schedule _schedule;
    private SchemaChangePolicy _schemaChangePolicy;
    private CrawlerState _state;
    private string _tablePrefix;
    private CrawlerTargets _targets;
    private Nullable`1<long> _version;
    public List`1<string> Classifiers { get; public set; }
    public string Configuration { get; public set; }
    public Nullable`1<long> CrawlElapsedTime { get; public set; }
    [AWSPropertyAttribute]
public string CrawlerSecurityConfiguration { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LakeFormationConfiguration LakeFormationConfiguration { get; public set; }
    public LastCrawlInfo LastCrawl { get; public set; }
    public Nullable`1<DateTime> LastUpdated { get; public set; }
    public LineageConfiguration LineageConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public RecrawlPolicy RecrawlPolicy { get; public set; }
    public string Role { get; public set; }
    public Schedule Schedule { get; public set; }
    public SchemaChangePolicy SchemaChangePolicy { get; public set; }
    public CrawlerState State { get; public set; }
    [AWSPropertyAttribute]
public string TablePrefix { get; public set; }
    public CrawlerTargets Targets { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public List`1<string> get_Classifiers();
    public void set_Classifiers(List`1<string> value);
    internal bool IsSetClassifiers();
    public string get_Configuration();
    public void set_Configuration(string value);
    internal bool IsSetConfiguration();
    public Nullable`1<long> get_CrawlElapsedTime();
    public void set_CrawlElapsedTime(Nullable`1<long> value);
    internal bool IsSetCrawlElapsedTime();
    public string get_CrawlerSecurityConfiguration();
    public void set_CrawlerSecurityConfiguration(string value);
    internal bool IsSetCrawlerSecurityConfiguration();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LakeFormationConfiguration get_LakeFormationConfiguration();
    public void set_LakeFormationConfiguration(LakeFormationConfiguration value);
    internal bool IsSetLakeFormationConfiguration();
    public LastCrawlInfo get_LastCrawl();
    public void set_LastCrawl(LastCrawlInfo value);
    internal bool IsSetLastCrawl();
    public Nullable`1<DateTime> get_LastUpdated();
    public void set_LastUpdated(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdated();
    public LineageConfiguration get_LineageConfiguration();
    public void set_LineageConfiguration(LineageConfiguration value);
    internal bool IsSetLineageConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public RecrawlPolicy get_RecrawlPolicy();
    public void set_RecrawlPolicy(RecrawlPolicy value);
    internal bool IsSetRecrawlPolicy();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Schedule get_Schedule();
    public void set_Schedule(Schedule value);
    internal bool IsSetSchedule();
    public SchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(SchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
    public CrawlerState get_State();
    public void set_State(CrawlerState value);
    internal bool IsSetState();
    public string get_TablePrefix();
    public void set_TablePrefix(string value);
    internal bool IsSetTablePrefix();
    public CrawlerTargets get_Targets();
    public void set_Targets(CrawlerTargets value);
    internal bool IsSetTargets();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.Model.CrawlerHistory : object {
    private string _crawlId;
    private Nullable`1<double> _dpuHour;
    private Nullable`1<DateTime> _endTime;
    private string _errorMessage;
    private string _logGroup;
    private string _logStream;
    private string _messagePrefix;
    private Nullable`1<DateTime> _startTime;
    private CrawlerHistoryState _state;
    private string _summary;
    public string CrawlId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> DPUHour { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string LogGroup { get; public set; }
    [AWSPropertyAttribute]
public string LogStream { get; public set; }
    [AWSPropertyAttribute]
public string MessagePrefix { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public CrawlerHistoryState State { get; public set; }
    [AWSPropertyAttribute]
public string Summary { get; public set; }
    public string get_CrawlId();
    public void set_CrawlId(string value);
    internal bool IsSetCrawlId();
    public Nullable`1<double> get_DPUHour();
    public void set_DPUHour(Nullable`1<double> value);
    internal bool IsSetDPUHour();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_LogGroup();
    public void set_LogGroup(string value);
    internal bool IsSetLogGroup();
    public string get_LogStream();
    public void set_LogStream(string value);
    internal bool IsSetLogStream();
    public string get_MessagePrefix();
    public void set_MessagePrefix(string value);
    internal bool IsSetMessagePrefix();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public CrawlerHistoryState get_State();
    public void set_State(CrawlerHistoryState value);
    internal bool IsSetState();
    public string get_Summary();
    public void set_Summary(string value);
    internal bool IsSetSummary();
}
public class Amazon.Glue.Model.CrawlerMetrics : object {
    private string _crawlerName;
    private Nullable`1<double> _lastRuntimeSeconds;
    private Nullable`1<double> _medianRuntimeSeconds;
    private Nullable`1<bool> _stillEstimating;
    private Nullable`1<int> _tablesCreated;
    private Nullable`1<int> _tablesDeleted;
    private Nullable`1<int> _tablesUpdated;
    private Nullable`1<double> _timeLeftSeconds;
    [AWSPropertyAttribute]
public string CrawlerName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> LastRuntimeSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> MedianRuntimeSeconds { get; public set; }
    public Nullable`1<bool> StillEstimating { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TablesCreated { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TablesDeleted { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TablesUpdated { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> TimeLeftSeconds { get; public set; }
    public string get_CrawlerName();
    public void set_CrawlerName(string value);
    internal bool IsSetCrawlerName();
    public Nullable`1<double> get_LastRuntimeSeconds();
    public void set_LastRuntimeSeconds(Nullable`1<double> value);
    internal bool IsSetLastRuntimeSeconds();
    public Nullable`1<double> get_MedianRuntimeSeconds();
    public void set_MedianRuntimeSeconds(Nullable`1<double> value);
    internal bool IsSetMedianRuntimeSeconds();
    public Nullable`1<bool> get_StillEstimating();
    public void set_StillEstimating(Nullable`1<bool> value);
    internal bool IsSetStillEstimating();
    public Nullable`1<int> get_TablesCreated();
    public void set_TablesCreated(Nullable`1<int> value);
    internal bool IsSetTablesCreated();
    public Nullable`1<int> get_TablesDeleted();
    public void set_TablesDeleted(Nullable`1<int> value);
    internal bool IsSetTablesDeleted();
    public Nullable`1<int> get_TablesUpdated();
    public void set_TablesUpdated(Nullable`1<int> value);
    internal bool IsSetTablesUpdated();
    public Nullable`1<double> get_TimeLeftSeconds();
    public void set_TimeLeftSeconds(Nullable`1<double> value);
    internal bool IsSetTimeLeftSeconds();
}
public class Amazon.Glue.Model.CrawlerNodeDetails : object {
    private List`1<Crawl> _crawls;
    public List`1<Crawl> Crawls { get; public set; }
    public List`1<Crawl> get_Crawls();
    public void set_Crawls(List`1<Crawl> value);
    internal bool IsSetCrawls();
}
public class Amazon.Glue.Model.CrawlerNotRunningException : AmazonGlueException {
    public CrawlerNotRunningException(string message);
    public CrawlerNotRunningException(string message, Exception innerException);
    public CrawlerNotRunningException(Exception innerException);
    public CrawlerNotRunningException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CrawlerNotRunningException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.CrawlerRunningException : AmazonGlueException {
    public CrawlerRunningException(string message);
    public CrawlerRunningException(string message, Exception innerException);
    public CrawlerRunningException(Exception innerException);
    public CrawlerRunningException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CrawlerRunningException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.CrawlerStoppingException : AmazonGlueException {
    public CrawlerStoppingException(string message);
    public CrawlerStoppingException(string message, Exception innerException);
    public CrawlerStoppingException(Exception innerException);
    public CrawlerStoppingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CrawlerStoppingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.CrawlerTargets : object {
    private List`1<CatalogTarget> _catalogTargets;
    private List`1<DeltaTarget> _deltaTargets;
    private List`1<DynamoDBTarget> _dynamoDBTargets;
    private List`1<HudiTarget> _hudiTargets;
    private List`1<IcebergTarget> _icebergTargets;
    private List`1<JdbcTarget> _jdbcTargets;
    private List`1<MongoDBTarget> _mongoDBTargets;
    private List`1<S3Target> _s3Targets;
    public List`1<CatalogTarget> CatalogTargets { get; public set; }
    public List`1<DeltaTarget> DeltaTargets { get; public set; }
    public List`1<DynamoDBTarget> DynamoDBTargets { get; public set; }
    public List`1<HudiTarget> HudiTargets { get; public set; }
    public List`1<IcebergTarget> IcebergTargets { get; public set; }
    public List`1<JdbcTarget> JdbcTargets { get; public set; }
    public List`1<MongoDBTarget> MongoDBTargets { get; public set; }
    public List`1<S3Target> S3Targets { get; public set; }
    public List`1<CatalogTarget> get_CatalogTargets();
    public void set_CatalogTargets(List`1<CatalogTarget> value);
    internal bool IsSetCatalogTargets();
    public List`1<DeltaTarget> get_DeltaTargets();
    public void set_DeltaTargets(List`1<DeltaTarget> value);
    internal bool IsSetDeltaTargets();
    public List`1<DynamoDBTarget> get_DynamoDBTargets();
    public void set_DynamoDBTargets(List`1<DynamoDBTarget> value);
    internal bool IsSetDynamoDBTargets();
    public List`1<HudiTarget> get_HudiTargets();
    public void set_HudiTargets(List`1<HudiTarget> value);
    internal bool IsSetHudiTargets();
    public List`1<IcebergTarget> get_IcebergTargets();
    public void set_IcebergTargets(List`1<IcebergTarget> value);
    internal bool IsSetIcebergTargets();
    public List`1<JdbcTarget> get_JdbcTargets();
    public void set_JdbcTargets(List`1<JdbcTarget> value);
    internal bool IsSetJdbcTargets();
    public List`1<MongoDBTarget> get_MongoDBTargets();
    public void set_MongoDBTargets(List`1<MongoDBTarget> value);
    internal bool IsSetMongoDBTargets();
    public List`1<S3Target> get_S3Targets();
    public void set_S3Targets(List`1<S3Target> value);
    internal bool IsSetS3Targets();
}
public class Amazon.Glue.Model.CrawlsFilter : object {
    private FieldName _fieldName;
    private string _fieldValue;
    private FilterOperator _filterOperator;
    public FieldName FieldName { get; public set; }
    public string FieldValue { get; public set; }
    public FilterOperator FilterOperator { get; public set; }
    public FieldName get_FieldName();
    public void set_FieldName(FieldName value);
    internal bool IsSetFieldName();
    public string get_FieldValue();
    public void set_FieldValue(string value);
    internal bool IsSetFieldValue();
    public FilterOperator get_FilterOperator();
    public void set_FilterOperator(FilterOperator value);
    internal bool IsSetFilterOperator();
}
public class Amazon.Glue.Model.CreateBlueprintRequest : AmazonGlueRequest {
    private string _blueprintLocation;
    private string _description;
    private string _name;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string BlueprintLocation { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_BlueprintLocation();
    public void set_BlueprintLocation(string value);
    internal bool IsSetBlueprintLocation();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateBlueprintResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateClassifierRequest : AmazonGlueRequest {
    private CreateCsvClassifierRequest _csvClassifier;
    private CreateGrokClassifierRequest _grokClassifier;
    private CreateJsonClassifierRequest _jsonClassifier;
    private CreateXMLClassifierRequest _xmlClassifier;
    public CreateCsvClassifierRequest CsvClassifier { get; public set; }
    public CreateGrokClassifierRequest GrokClassifier { get; public set; }
    public CreateJsonClassifierRequest JsonClassifier { get; public set; }
    public CreateXMLClassifierRequest XMLClassifier { get; public set; }
    public CreateCsvClassifierRequest get_CsvClassifier();
    public void set_CsvClassifier(CreateCsvClassifierRequest value);
    internal bool IsSetCsvClassifier();
    public CreateGrokClassifierRequest get_GrokClassifier();
    public void set_GrokClassifier(CreateGrokClassifierRequest value);
    internal bool IsSetGrokClassifier();
    public CreateJsonClassifierRequest get_JsonClassifier();
    public void set_JsonClassifier(CreateJsonClassifierRequest value);
    internal bool IsSetJsonClassifier();
    public CreateXMLClassifierRequest get_XMLClassifier();
    public void set_XMLClassifier(CreateXMLClassifierRequest value);
    internal bool IsSetXMLClassifier();
}
public class Amazon.Glue.Model.CreateClassifierResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreateConnectionRequest : AmazonGlueRequest {
    private string _catalogId;
    private ConnectionInput _connectionInput;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public ConnectionInput ConnectionInput { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public ConnectionInput get_ConnectionInput();
    public void set_ConnectionInput(ConnectionInput value);
    internal bool IsSetConnectionInput();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateConnectionResponse : AmazonWebServiceResponse {
    private ConnectionStatus _createConnectionStatus;
    public ConnectionStatus CreateConnectionStatus { get; public set; }
    public ConnectionStatus get_CreateConnectionStatus();
    public void set_CreateConnectionStatus(ConnectionStatus value);
    internal bool IsSetCreateConnectionStatus();
}
public class Amazon.Glue.Model.CreateCrawlerRequest : AmazonGlueRequest {
    private List`1<string> _classifiers;
    private string _configuration;
    private string _crawlerSecurityConfiguration;
    private string _databaseName;
    private string _description;
    private LakeFormationConfiguration _lakeFormationConfiguration;
    private LineageConfiguration _lineageConfiguration;
    private string _name;
    private RecrawlPolicy _recrawlPolicy;
    private string _role;
    private string _schedule;
    private SchemaChangePolicy _schemaChangePolicy;
    private string _tablePrefix;
    private Dictionary`2<string, string> _tags;
    private CrawlerTargets _targets;
    public List`1<string> Classifiers { get; public set; }
    public string Configuration { get; public set; }
    [AWSPropertyAttribute]
public string CrawlerSecurityConfiguration { get; public set; }
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LakeFormationConfiguration LakeFormationConfiguration { get; public set; }
    public LineageConfiguration LineageConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public RecrawlPolicy RecrawlPolicy { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    public string Schedule { get; public set; }
    public SchemaChangePolicy SchemaChangePolicy { get; public set; }
    [AWSPropertyAttribute]
public string TablePrefix { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public CrawlerTargets Targets { get; public set; }
    public List`1<string> get_Classifiers();
    public void set_Classifiers(List`1<string> value);
    internal bool IsSetClassifiers();
    public string get_Configuration();
    public void set_Configuration(string value);
    internal bool IsSetConfiguration();
    public string get_CrawlerSecurityConfiguration();
    public void set_CrawlerSecurityConfiguration(string value);
    internal bool IsSetCrawlerSecurityConfiguration();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LakeFormationConfiguration get_LakeFormationConfiguration();
    public void set_LakeFormationConfiguration(LakeFormationConfiguration value);
    internal bool IsSetLakeFormationConfiguration();
    public LineageConfiguration get_LineageConfiguration();
    public void set_LineageConfiguration(LineageConfiguration value);
    internal bool IsSetLineageConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public RecrawlPolicy get_RecrawlPolicy();
    public void set_RecrawlPolicy(RecrawlPolicy value);
    internal bool IsSetRecrawlPolicy();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public SchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(SchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
    public string get_TablePrefix();
    public void set_TablePrefix(string value);
    internal bool IsSetTablePrefix();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public CrawlerTargets get_Targets();
    public void set_Targets(CrawlerTargets value);
    internal bool IsSetTargets();
}
public class Amazon.Glue.Model.CreateCrawlerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreateCsvClassifierRequest : object {
    private Nullable`1<bool> _allowSingleColumn;
    private CsvHeaderOption _containsHeader;
    private Nullable`1<bool> _customDatatypeConfigured;
    private List`1<string> _customDatatypes;
    private string _delimiter;
    private Nullable`1<bool> _disableValueTrimming;
    private List`1<string> _header;
    private string _name;
    private string _quoteSymbol;
    private CsvSerdeOption _serde;
    public Nullable`1<bool> AllowSingleColumn { get; public set; }
    public CsvHeaderOption ContainsHeader { get; public set; }
    public Nullable`1<bool> CustomDatatypeConfigured { get; public set; }
    public List`1<string> CustomDatatypes { get; public set; }
    [AWSPropertyAttribute]
public string Delimiter { get; public set; }
    public Nullable`1<bool> DisableValueTrimming { get; public set; }
    public List`1<string> Header { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string QuoteSymbol { get; public set; }
    public CsvSerdeOption Serde { get; public set; }
    public Nullable`1<bool> get_AllowSingleColumn();
    public void set_AllowSingleColumn(Nullable`1<bool> value);
    internal bool IsSetAllowSingleColumn();
    public CsvHeaderOption get_ContainsHeader();
    public void set_ContainsHeader(CsvHeaderOption value);
    internal bool IsSetContainsHeader();
    public Nullable`1<bool> get_CustomDatatypeConfigured();
    public void set_CustomDatatypeConfigured(Nullable`1<bool> value);
    internal bool IsSetCustomDatatypeConfigured();
    public List`1<string> get_CustomDatatypes();
    public void set_CustomDatatypes(List`1<string> value);
    internal bool IsSetCustomDatatypes();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public Nullable`1<bool> get_DisableValueTrimming();
    public void set_DisableValueTrimming(Nullable`1<bool> value);
    internal bool IsSetDisableValueTrimming();
    public List`1<string> get_Header();
    public void set_Header(List`1<string> value);
    internal bool IsSetHeader();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_QuoteSymbol();
    public void set_QuoteSymbol(string value);
    internal bool IsSetQuoteSymbol();
    public CsvSerdeOption get_Serde();
    public void set_Serde(CsvSerdeOption value);
    internal bool IsSetSerde();
}
public class Amazon.Glue.Model.CreateCustomEntityTypeRequest : AmazonGlueRequest {
    private List`1<string> _contextWords;
    private string _name;
    private string _regexString;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public List`1<string> ContextWords { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RegexString { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public List`1<string> get_ContextWords();
    public void set_ContextWords(List`1<string> value);
    internal bool IsSetContextWords();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RegexString();
    public void set_RegexString(string value);
    internal bool IsSetRegexString();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateCustomEntityTypeResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateDatabaseRequest : AmazonGlueRequest {
    private string _catalogId;
    private DatabaseInput _databaseInput;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public DatabaseInput DatabaseInput { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public DatabaseInput get_DatabaseInput();
    public void set_DatabaseInput(DatabaseInput value);
    internal bool IsSetDatabaseInput();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateDatabaseResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreateDataQualityRulesetRequest : AmazonGlueRequest {
    private string _clientToken;
    private string _description;
    private string _name;
    private string _ruleset;
    private Dictionary`2<string, string> _tags;
    private DataQualityTargetTable _targetTable;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Ruleset { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public DataQualityTargetTable TargetTable { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Ruleset();
    public void set_Ruleset(string value);
    internal bool IsSetRuleset();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public DataQualityTargetTable get_TargetTable();
    public void set_TargetTable(DataQualityTargetTable value);
    internal bool IsSetTargetTable();
}
public class Amazon.Glue.Model.CreateDataQualityRulesetResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateDevEndpointRequest : AmazonGlueRequest {
    private Dictionary`2<string, string> _arguments;
    private string _endpointName;
    private string _extraJarsS3Path;
    private string _extraPythonLibsS3Path;
    private string _glueVersion;
    private Nullable`1<int> _numberOfNodes;
    private Nullable`1<int> _numberOfWorkers;
    private string _publicKey;
    private List`1<string> _publicKeys;
    private string _roleArn;
    private string _securityConfiguration;
    private List`1<string> _securityGroupIds;
    private string _subnetId;
    private Dictionary`2<string, string> _tags;
    private WorkerType _workerType;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Arguments { get; public set; }
    [AWSPropertyAttribute]
public string EndpointName { get; public set; }
    public string ExtraJarsS3Path { get; public set; }
    public string ExtraPythonLibsS3Path { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public Nullable`1<int> NumberOfNodes { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public string PublicKey { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PublicKeys { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public string SubnetId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Dictionary`2<string, string> get_Arguments();
    public void set_Arguments(Dictionary`2<string, string> value);
    internal bool IsSetArguments();
    public string get_EndpointName();
    public void set_EndpointName(string value);
    internal bool IsSetEndpointName();
    public string get_ExtraJarsS3Path();
    public void set_ExtraJarsS3Path(string value);
    internal bool IsSetExtraJarsS3Path();
    public string get_ExtraPythonLibsS3Path();
    public void set_ExtraPythonLibsS3Path(string value);
    internal bool IsSetExtraPythonLibsS3Path();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public Nullable`1<int> get_NumberOfNodes();
    public void set_NumberOfNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfNodes();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_PublicKey();
    public void set_PublicKey(string value);
    internal bool IsSetPublicKey();
    public List`1<string> get_PublicKeys();
    public void set_PublicKeys(List`1<string> value);
    internal bool IsSetPublicKeys();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.CreateDevEndpointResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _arguments;
    private string _availabilityZone;
    private Nullable`1<DateTime> _createdTimestamp;
    private string _endpointName;
    private string _extraJarsS3Path;
    private string _extraPythonLibsS3Path;
    private string _failureReason;
    private string _glueVersion;
    private Nullable`1<int> _numberOfNodes;
    private Nullable`1<int> _numberOfWorkers;
    private string _roleArn;
    private string _securityConfiguration;
    private List`1<string> _securityGroupIds;
    private string _status;
    private string _subnetId;
    private string _vpcId;
    private WorkerType _workerType;
    private string _yarnEndpointAddress;
    private Nullable`1<int> _zeppelinRemoteSparkInterpreterPort;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Arguments { get; public set; }
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    public string EndpointName { get; public set; }
    public string ExtraJarsS3Path { get; public set; }
    public string ExtraPythonLibsS3Path { get; public set; }
    public string FailureReason { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public Nullable`1<int> NumberOfNodes { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public string Status { get; public set; }
    public string SubnetId { get; public set; }
    public string VpcId { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public string YarnEndpointAddress { get; public set; }
    public Nullable`1<int> ZeppelinRemoteSparkInterpreterPort { get; public set; }
    public Dictionary`2<string, string> get_Arguments();
    public void set_Arguments(Dictionary`2<string, string> value);
    internal bool IsSetArguments();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_EndpointName();
    public void set_EndpointName(string value);
    internal bool IsSetEndpointName();
    public string get_ExtraJarsS3Path();
    public void set_ExtraJarsS3Path(string value);
    internal bool IsSetExtraJarsS3Path();
    public string get_ExtraPythonLibsS3Path();
    public void set_ExtraPythonLibsS3Path(string value);
    internal bool IsSetExtraPythonLibsS3Path();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public Nullable`1<int> get_NumberOfNodes();
    public void set_NumberOfNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfNodes();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
    public string get_YarnEndpointAddress();
    public void set_YarnEndpointAddress(string value);
    internal bool IsSetYarnEndpointAddress();
    public Nullable`1<int> get_ZeppelinRemoteSparkInterpreterPort();
    public void set_ZeppelinRemoteSparkInterpreterPort(Nullable`1<int> value);
    internal bool IsSetZeppelinRemoteSparkInterpreterPort();
}
public class Amazon.Glue.Model.CreateGrokClassifierRequest : object {
    private string _classification;
    private string _customPatterns;
    private string _grokPattern;
    private string _name;
    [AWSPropertyAttribute]
public string Classification { get; public set; }
    [AWSPropertyAttribute]
public string CustomPatterns { get; public set; }
    [AWSPropertyAttribute]
public string GrokPattern { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_CustomPatterns();
    public void set_CustomPatterns(string value);
    internal bool IsSetCustomPatterns();
    public string get_GrokPattern();
    public void set_GrokPattern(string value);
    internal bool IsSetGrokPattern();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateJobRequest : AmazonGlueRequest {
    private Nullable`1<int> _allocatedCapacity;
    private Dictionary`2<string, CodeGenConfigurationNode> _codeGenConfigurationNodes;
    private JobCommand _command;
    private ConnectionsList _connections;
    private Dictionary`2<string, string> _defaultArguments;
    private string _description;
    private ExecutionClass _executionClass;
    private ExecutionProperty _executionProperty;
    private string _glueVersion;
    private JobMode _jobMode;
    private string _logUri;
    private string _maintenanceWindow;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _maxRetries;
    private string _name;
    private Dictionary`2<string, string> _nonOverridableArguments;
    private NotificationProperty _notificationProperty;
    private Nullable`1<int> _numberOfWorkers;
    private string _role;
    private string _securityConfiguration;
    private SourceControlDetails _sourceControlDetails;
    private Dictionary`2<string, string> _tags;
    private Nullable`1<int> _timeout;
    private WorkerType _workerType;
    [ObsoleteAttribute("This property is deprecated, use MaxCapacity instead.")]
public Nullable`1<int> AllocatedCapacity { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, CodeGenConfigurationNode> CodeGenConfigurationNodes { get; public set; }
    [AWSPropertyAttribute]
public JobCommand Command { get; public set; }
    public ConnectionsList Connections { get; public set; }
    public Dictionary`2<string, string> DefaultArguments { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public ExecutionClass ExecutionClass { get; public set; }
    public ExecutionProperty ExecutionProperty { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public JobMode JobMode { get; public set; }
    public string LogUri { get; public set; }
    public string MaintenanceWindow { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> NonOverridableArguments { get; public set; }
    public NotificationProperty NotificationProperty { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public SourceControlDetails SourceControlDetails { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Nullable`1<int> get_AllocatedCapacity();
    public void set_AllocatedCapacity(Nullable`1<int> value);
    internal bool IsSetAllocatedCapacity();
    public Dictionary`2<string, CodeGenConfigurationNode> get_CodeGenConfigurationNodes();
    public void set_CodeGenConfigurationNodes(Dictionary`2<string, CodeGenConfigurationNode> value);
    internal bool IsSetCodeGenConfigurationNodes();
    public JobCommand get_Command();
    public void set_Command(JobCommand value);
    internal bool IsSetCommand();
    public ConnectionsList get_Connections();
    public void set_Connections(ConnectionsList value);
    internal bool IsSetConnections();
    public Dictionary`2<string, string> get_DefaultArguments();
    public void set_DefaultArguments(Dictionary`2<string, string> value);
    internal bool IsSetDefaultArguments();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ExecutionClass get_ExecutionClass();
    public void set_ExecutionClass(ExecutionClass value);
    internal bool IsSetExecutionClass();
    public ExecutionProperty get_ExecutionProperty();
    public void set_ExecutionProperty(ExecutionProperty value);
    internal bool IsSetExecutionProperty();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public JobMode get_JobMode();
    public void set_JobMode(JobMode value);
    internal bool IsSetJobMode();
    public string get_LogUri();
    public void set_LogUri(string value);
    internal bool IsSetLogUri();
    public string get_MaintenanceWindow();
    public void set_MaintenanceWindow(string value);
    internal bool IsSetMaintenanceWindow();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MaxRetries();
    public void set_MaxRetries(Nullable`1<int> value);
    internal bool IsSetMaxRetries();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_NonOverridableArguments();
    public void set_NonOverridableArguments(Dictionary`2<string, string> value);
    internal bool IsSetNonOverridableArguments();
    public NotificationProperty get_NotificationProperty();
    public void set_NotificationProperty(NotificationProperty value);
    internal bool IsSetNotificationProperty();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public SourceControlDetails get_SourceControlDetails();
    public void set_SourceControlDetails(SourceControlDetails value);
    internal bool IsSetSourceControlDetails();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.CreateJobResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateJsonClassifierRequest : object {
    private string _jsonPath;
    private string _name;
    [AWSPropertyAttribute]
public string JsonPath { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_JsonPath();
    public void set_JsonPath(string value);
    internal bool IsSetJsonPath();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateMLTransformRequest : AmazonGlueRequest {
    private string _description;
    private string _glueVersion;
    private List`1<GlueTable> _inputRecordTables;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _maxRetries;
    private string _name;
    private Nullable`1<int> _numberOfWorkers;
    private TransformParameters _parameters;
    private string _role;
    private Dictionary`2<string, string> _tags;
    private Nullable`1<int> _timeout;
    private TransformEncryption _transformEncryption;
    private WorkerType _workerType;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    [AWSPropertyAttribute]
public List`1<GlueTable> InputRecordTables { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public TransformParameters Parameters { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TransformEncryption TransformEncryption { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public List`1<GlueTable> get_InputRecordTables();
    public void set_InputRecordTables(List`1<GlueTable> value);
    internal bool IsSetInputRecordTables();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MaxRetries();
    public void set_MaxRetries(Nullable`1<int> value);
    internal bool IsSetMaxRetries();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public TransformParameters get_Parameters();
    public void set_Parameters(TransformParameters value);
    internal bool IsSetParameters();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TransformEncryption get_TransformEncryption();
    public void set_TransformEncryption(TransformEncryption value);
    internal bool IsSetTransformEncryption();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.CreateMLTransformResponse : AmazonWebServiceResponse {
    private string _transformId;
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.CreatePartitionIndexRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private PartitionIndex _partitionIndex;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public PartitionIndex PartitionIndex { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public PartitionIndex get_PartitionIndex();
    public void set_PartitionIndex(PartitionIndex value);
    internal bool IsSetPartitionIndex();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.CreatePartitionIndexResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreatePartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private PartitionInput _partitionInput;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public PartitionInput PartitionInput { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public PartitionInput get_PartitionInput();
    public void set_PartitionInput(PartitionInput value);
    internal bool IsSetPartitionInput();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.CreatePartitionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreateRegistryRequest : AmazonGlueRequest {
    private string _description;
    private string _registryName;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateRegistryResponse : AmazonWebServiceResponse {
    private string _description;
    private string _registryArn;
    private string _registryName;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateSchemaRequest : AmazonGlueRequest {
    private Compatibility _compatibility;
    private DataFormat _dataFormat;
    private string _description;
    private RegistryId _registryId;
    private string _schemaDefinition;
    private string _schemaName;
    private Dictionary`2<string, string> _tags;
    public Compatibility Compatibility { get; public set; }
    [AWSPropertyAttribute]
public DataFormat DataFormat { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public RegistryId RegistryId { get; public set; }
    [AWSPropertyAttribute]
public string SchemaDefinition { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Compatibility get_Compatibility();
    public void set_Compatibility(Compatibility value);
    internal bool IsSetCompatibility();
    public DataFormat get_DataFormat();
    public void set_DataFormat(DataFormat value);
    internal bool IsSetDataFormat();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public RegistryId get_RegistryId();
    public void set_RegistryId(RegistryId value);
    internal bool IsSetRegistryId();
    public string get_SchemaDefinition();
    public void set_SchemaDefinition(string value);
    internal bool IsSetSchemaDefinition();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateSchemaResponse : AmazonWebServiceResponse {
    private Compatibility _compatibility;
    private DataFormat _dataFormat;
    private string _description;
    private Nullable`1<long> _latestSchemaVersion;
    private Nullable`1<long> _nextSchemaVersion;
    private string _registryArn;
    private string _registryName;
    private string _schemaArn;
    private Nullable`1<long> _schemaCheckpoint;
    private string _schemaName;
    private SchemaStatus _schemaStatus;
    private string _schemaVersionId;
    private SchemaVersionStatus _schemaVersionStatus;
    private Dictionary`2<string, string> _tags;
    public Compatibility Compatibility { get; public set; }
    public DataFormat DataFormat { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> LatestSchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NextSchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SchemaCheckpoint { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    public SchemaStatus SchemaStatus { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionStatus SchemaVersionStatus { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Compatibility get_Compatibility();
    public void set_Compatibility(Compatibility value);
    internal bool IsSetCompatibility();
    public DataFormat get_DataFormat();
    public void set_DataFormat(DataFormat value);
    internal bool IsSetDataFormat();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<long> get_LatestSchemaVersion();
    public void set_LatestSchemaVersion(Nullable`1<long> value);
    internal bool IsSetLatestSchemaVersion();
    public Nullable`1<long> get_NextSchemaVersion();
    public void set_NextSchemaVersion(Nullable`1<long> value);
    internal bool IsSetNextSchemaVersion();
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public Nullable`1<long> get_SchemaCheckpoint();
    public void set_SchemaCheckpoint(Nullable`1<long> value);
    internal bool IsSetSchemaCheckpoint();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public SchemaStatus get_SchemaStatus();
    public void set_SchemaStatus(SchemaStatus value);
    internal bool IsSetSchemaStatus();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionStatus get_SchemaVersionStatus();
    public void set_SchemaVersionStatus(SchemaVersionStatus value);
    internal bool IsSetSchemaVersionStatus();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateScriptRequest : AmazonGlueRequest {
    private List`1<CodeGenEdge> _dagEdges;
    private List`1<CodeGenNode> _dagNodes;
    private Language _language;
    public List`1<CodeGenEdge> DagEdges { get; public set; }
    public List`1<CodeGenNode> DagNodes { get; public set; }
    public Language Language { get; public set; }
    public List`1<CodeGenEdge> get_DagEdges();
    public void set_DagEdges(List`1<CodeGenEdge> value);
    internal bool IsSetDagEdges();
    public List`1<CodeGenNode> get_DagNodes();
    public void set_DagNodes(List`1<CodeGenNode> value);
    internal bool IsSetDagNodes();
    public Language get_Language();
    public void set_Language(Language value);
    internal bool IsSetLanguage();
}
public class Amazon.Glue.Model.CreateScriptResponse : AmazonWebServiceResponse {
    private string _pythonScript;
    private string _scalaCode;
    public string PythonScript { get; public set; }
    public string ScalaCode { get; public set; }
    public string get_PythonScript();
    public void set_PythonScript(string value);
    internal bool IsSetPythonScript();
    public string get_ScalaCode();
    public void set_ScalaCode(string value);
    internal bool IsSetScalaCode();
}
public class Amazon.Glue.Model.CreateSecurityConfigurationRequest : AmazonGlueRequest {
    private EncryptionConfiguration _encryptionConfiguration;
    private string _name;
    [AWSPropertyAttribute]
public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateSecurityConfigurationResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdTimestamp;
    private string _name;
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateSessionRequest : AmazonGlueRequest {
    private SessionCommand _command;
    private ConnectionsList _connections;
    private Dictionary`2<string, string> _defaultArguments;
    private string _description;
    private string _glueVersion;
    private string _id;
    private Nullable`1<int> _idleTimeout;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _numberOfWorkers;
    private string _requestOrigin;
    private string _role;
    private string _securityConfiguration;
    private Dictionary`2<string, string> _tags;
    private Nullable`1<int> _timeout;
    private WorkerType _workerType;
    [AWSPropertyAttribute]
public SessionCommand Command { get; public set; }
    public ConnectionsList Connections { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> DefaultArguments { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> IdleTimeout { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public SessionCommand get_Command();
    public void set_Command(SessionCommand value);
    internal bool IsSetCommand();
    public ConnectionsList get_Connections();
    public void set_Connections(ConnectionsList value);
    internal bool IsSetConnections();
    public Dictionary`2<string, string> get_DefaultArguments();
    public void set_DefaultArguments(Dictionary`2<string, string> value);
    internal bool IsSetDefaultArguments();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_IdleTimeout();
    public void set_IdleTimeout(Nullable`1<int> value);
    internal bool IsSetIdleTimeout();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.CreateSessionResponse : AmazonWebServiceResponse {
    private Session _session;
    public Session Session { get; public set; }
    public Session get_Session();
    public void set_Session(Session value);
    internal bool IsSetSession();
}
public class Amazon.Glue.Model.CreateTableOptimizerRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private TableOptimizerConfiguration _tableOptimizerConfiguration;
    private TableOptimizerType _type;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public TableOptimizerConfiguration TableOptimizerConfiguration { get; public set; }
    [AWSPropertyAttribute]
public TableOptimizerType Type { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizerConfiguration get_TableOptimizerConfiguration();
    public void set_TableOptimizerConfiguration(TableOptimizerConfiguration value);
    internal bool IsSetTableOptimizerConfiguration();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.CreateTableOptimizerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreateTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private OpenTableFormatInput _openTableFormatInput;
    private List`1<PartitionIndex> _partitionIndexes;
    private TableInput _tableInput;
    private string _transactionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public OpenTableFormatInput OpenTableFormatInput { get; public set; }
    [AWSPropertyAttribute]
public List`1<PartitionIndex> PartitionIndexes { get; public set; }
    [AWSPropertyAttribute]
public TableInput TableInput { get; public set; }
    [AWSPropertyAttribute]
public string TransactionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public OpenTableFormatInput get_OpenTableFormatInput();
    public void set_OpenTableFormatInput(OpenTableFormatInput value);
    internal bool IsSetOpenTableFormatInput();
    public List`1<PartitionIndex> get_PartitionIndexes();
    public void set_PartitionIndexes(List`1<PartitionIndex> value);
    internal bool IsSetPartitionIndexes();
    public TableInput get_TableInput();
    public void set_TableInput(TableInput value);
    internal bool IsSetTableInput();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    internal bool IsSetTransactionId();
}
public class Amazon.Glue.Model.CreateTableResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreateTriggerRequest : AmazonGlueRequest {
    private List`1<Action> _actions;
    private string _description;
    private EventBatchingCondition _eventBatchingCondition;
    private string _name;
    private Predicate _predicate;
    private string _schedule;
    private Nullable`1<bool> _startOnCreation;
    private Dictionary`2<string, string> _tags;
    private TriggerType _type;
    private string _workflowName;
    [AWSPropertyAttribute]
public List`1<Action> Actions { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EventBatchingCondition EventBatchingCondition { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Predicate Predicate { get; public set; }
    public string Schedule { get; public set; }
    public Nullable`1<bool> StartOnCreation { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public TriggerType Type { get; public set; }
    [AWSPropertyAttribute]
public string WorkflowName { get; public set; }
    public List`1<Action> get_Actions();
    public void set_Actions(List`1<Action> value);
    internal bool IsSetActions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EventBatchingCondition get_EventBatchingCondition();
    public void set_EventBatchingCondition(EventBatchingCondition value);
    internal bool IsSetEventBatchingCondition();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Predicate get_Predicate();
    public void set_Predicate(Predicate value);
    internal bool IsSetPredicate();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public Nullable`1<bool> get_StartOnCreation();
    public void set_StartOnCreation(Nullable`1<bool> value);
    internal bool IsSetStartOnCreation();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public TriggerType get_Type();
    public void set_Type(TriggerType value);
    internal bool IsSetType();
    public string get_WorkflowName();
    public void set_WorkflowName(string value);
    internal bool IsSetWorkflowName();
}
public class Amazon.Glue.Model.CreateTriggerResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateUsageProfileRequest : AmazonGlueRequest {
    private ProfileConfiguration _configuration;
    private string _description;
    private string _name;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public ProfileConfiguration Configuration { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public ProfileConfiguration get_Configuration();
    public void set_Configuration(ProfileConfiguration value);
    internal bool IsSetConfiguration();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateUsageProfileResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateUserDefinedFunctionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private UserDefinedFunctionInput _functionInput;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public UserDefinedFunctionInput FunctionInput { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public UserDefinedFunctionInput get_FunctionInput();
    public void set_FunctionInput(UserDefinedFunctionInput value);
    internal bool IsSetFunctionInput();
}
public class Amazon.Glue.Model.CreateUserDefinedFunctionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.CreateWorkflowRequest : AmazonGlueRequest {
    private Dictionary`2<string, string> _defaultRunProperties;
    private string _description;
    private Nullable`1<int> _maxConcurrentRuns;
    private string _name;
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> DefaultRunProperties { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> MaxConcurrentRuns { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_DefaultRunProperties();
    public void set_DefaultRunProperties(Dictionary`2<string, string> value);
    internal bool IsSetDefaultRunProperties();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_MaxConcurrentRuns();
    public void set_MaxConcurrentRuns(Nullable`1<int> value);
    internal bool IsSetMaxConcurrentRuns();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.CreateWorkflowResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.CreateXMLClassifierRequest : object {
    private string _classification;
    private string _name;
    private string _rowTag;
    [AWSPropertyAttribute]
public string Classification { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RowTag { get; public set; }
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RowTag();
    public void set_RowTag(string value);
    internal bool IsSetRowTag();
}
public class Amazon.Glue.Model.CsvClassifier : object {
    private Nullable`1<bool> _allowSingleColumn;
    private CsvHeaderOption _containsHeader;
    private Nullable`1<DateTime> _creationTime;
    private Nullable`1<bool> _customDatatypeConfigured;
    private List`1<string> _customDatatypes;
    private string _delimiter;
    private Nullable`1<bool> _disableValueTrimming;
    private List`1<string> _header;
    private Nullable`1<DateTime> _lastUpdated;
    private string _name;
    private string _quoteSymbol;
    private CsvSerdeOption _serde;
    private Nullable`1<long> _version;
    public Nullable`1<bool> AllowSingleColumn { get; public set; }
    public CsvHeaderOption ContainsHeader { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public Nullable`1<bool> CustomDatatypeConfigured { get; public set; }
    public List`1<string> CustomDatatypes { get; public set; }
    [AWSPropertyAttribute]
public string Delimiter { get; public set; }
    public Nullable`1<bool> DisableValueTrimming { get; public set; }
    public List`1<string> Header { get; public set; }
    public Nullable`1<DateTime> LastUpdated { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string QuoteSymbol { get; public set; }
    public CsvSerdeOption Serde { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<bool> get_AllowSingleColumn();
    public void set_AllowSingleColumn(Nullable`1<bool> value);
    internal bool IsSetAllowSingleColumn();
    public CsvHeaderOption get_ContainsHeader();
    public void set_ContainsHeader(CsvHeaderOption value);
    internal bool IsSetContainsHeader();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public Nullable`1<bool> get_CustomDatatypeConfigured();
    public void set_CustomDatatypeConfigured(Nullable`1<bool> value);
    internal bool IsSetCustomDatatypeConfigured();
    public List`1<string> get_CustomDatatypes();
    public void set_CustomDatatypes(List`1<string> value);
    internal bool IsSetCustomDatatypes();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public Nullable`1<bool> get_DisableValueTrimming();
    public void set_DisableValueTrimming(Nullable`1<bool> value);
    internal bool IsSetDisableValueTrimming();
    public List`1<string> get_Header();
    public void set_Header(List`1<string> value);
    internal bool IsSetHeader();
    public Nullable`1<DateTime> get_LastUpdated();
    public void set_LastUpdated(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdated();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_QuoteSymbol();
    public void set_QuoteSymbol(string value);
    internal bool IsSetQuoteSymbol();
    public CsvSerdeOption get_Serde();
    public void set_Serde(CsvSerdeOption value);
    internal bool IsSetSerde();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.Model.CustomCode : object {
    private string _className;
    private string _code;
    private List`1<string> _inputs;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    [AWSPropertyAttribute]
public string ClassName { get; public set; }
    [AWSPropertyAttribute]
public string Code { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public string get_ClassName();
    public void set_ClassName(string value);
    internal bool IsSetClassName();
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
}
public class Amazon.Glue.Model.CustomEntityType : object {
    private List`1<string> _contextWords;
    private string _name;
    private string _regexString;
    [AWSPropertyAttribute]
public List`1<string> ContextWords { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RegexString { get; public set; }
    public List`1<string> get_ContextWords();
    public void set_ContextWords(List`1<string> value);
    internal bool IsSetContextWords();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RegexString();
    public void set_RegexString(string value);
    internal bool IsSetRegexString();
}
public class Amazon.Glue.Model.Database : object {
    private string _catalogId;
    private List`1<PrincipalPermissions> _createTableDefaultPermissions;
    private Nullable`1<DateTime> _createTime;
    private string _description;
    private FederatedDatabase _federatedDatabase;
    private string _locationUri;
    private string _name;
    private Dictionary`2<string, string> _parameters;
    private DatabaseIdentifier _targetDatabase;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public List`1<PrincipalPermissions> CreateTableDefaultPermissions { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public FederatedDatabase FederatedDatabase { get; public set; }
    [AWSPropertyAttribute]
public string LocationUri { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public DatabaseIdentifier TargetDatabase { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public List`1<PrincipalPermissions> get_CreateTableDefaultPermissions();
    public void set_CreateTableDefaultPermissions(List`1<PrincipalPermissions> value);
    internal bool IsSetCreateTableDefaultPermissions();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public FederatedDatabase get_FederatedDatabase();
    public void set_FederatedDatabase(FederatedDatabase value);
    internal bool IsSetFederatedDatabase();
    public string get_LocationUri();
    public void set_LocationUri(string value);
    internal bool IsSetLocationUri();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public DatabaseIdentifier get_TargetDatabase();
    public void set_TargetDatabase(DatabaseIdentifier value);
    internal bool IsSetTargetDatabase();
}
public class Amazon.Glue.Model.DatabaseIdentifier : object {
    private string _catalogId;
    private string _databaseName;
    private string _region;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
}
public class Amazon.Glue.Model.DatabaseInput : object {
    private List`1<PrincipalPermissions> _createTableDefaultPermissions;
    private string _description;
    private FederatedDatabase _federatedDatabase;
    private string _locationUri;
    private string _name;
    private Dictionary`2<string, string> _parameters;
    private DatabaseIdentifier _targetDatabase;
    public List`1<PrincipalPermissions> CreateTableDefaultPermissions { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public FederatedDatabase FederatedDatabase { get; public set; }
    [AWSPropertyAttribute]
public string LocationUri { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public DatabaseIdentifier TargetDatabase { get; public set; }
    public List`1<PrincipalPermissions> get_CreateTableDefaultPermissions();
    public void set_CreateTableDefaultPermissions(List`1<PrincipalPermissions> value);
    internal bool IsSetCreateTableDefaultPermissions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public FederatedDatabase get_FederatedDatabase();
    public void set_FederatedDatabase(FederatedDatabase value);
    internal bool IsSetFederatedDatabase();
    public string get_LocationUri();
    public void set_LocationUri(string value);
    internal bool IsSetLocationUri();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public DatabaseIdentifier get_TargetDatabase();
    public void set_TargetDatabase(DatabaseIdentifier value);
    internal bool IsSetTargetDatabase();
}
public class Amazon.Glue.Model.DataCatalogEncryptionSettings : object {
    private ConnectionPasswordEncryption _connectionPasswordEncryption;
    private EncryptionAtRest _encryptionAtRest;
    public ConnectionPasswordEncryption ConnectionPasswordEncryption { get; public set; }
    public EncryptionAtRest EncryptionAtRest { get; public set; }
    public ConnectionPasswordEncryption get_ConnectionPasswordEncryption();
    public void set_ConnectionPasswordEncryption(ConnectionPasswordEncryption value);
    internal bool IsSetConnectionPasswordEncryption();
    public EncryptionAtRest get_EncryptionAtRest();
    public void set_EncryptionAtRest(EncryptionAtRest value);
    internal bool IsSetEncryptionAtRest();
}
public class Amazon.Glue.Model.DataLakePrincipal : object {
    private string _dataLakePrincipalIdentifier;
    [AWSPropertyAttribute]
public string DataLakePrincipalIdentifier { get; public set; }
    public string get_DataLakePrincipalIdentifier();
    public void set_DataLakePrincipalIdentifier(string value);
    internal bool IsSetDataLakePrincipalIdentifier();
}
public class Amazon.Glue.Model.DataQualityAnalyzerResult : object {
    private string _description;
    private Dictionary`2<string, double> _evaluatedMetrics;
    private string _evaluationMessage;
    private string _name;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Dictionary`2<string, double> EvaluatedMetrics { get; public set; }
    [AWSPropertyAttribute]
public string EvaluationMessage { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Dictionary`2<string, double> get_EvaluatedMetrics();
    public void set_EvaluatedMetrics(Dictionary`2<string, double> value);
    internal bool IsSetEvaluatedMetrics();
    public string get_EvaluationMessage();
    public void set_EvaluationMessage(string value);
    internal bool IsSetEvaluationMessage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DataQualityEvaluationRunAdditionalRunOptions : object {
    private Nullable`1<bool> _cloudWatchMetricsEnabled;
    private DQCompositeRuleEvaluationMethod _compositeRuleEvaluationMethod;
    private string _resultsS3Prefix;
    public Nullable`1<bool> CloudWatchMetricsEnabled { get; public set; }
    public DQCompositeRuleEvaluationMethod CompositeRuleEvaluationMethod { get; public set; }
    public string ResultsS3Prefix { get; public set; }
    public Nullable`1<bool> get_CloudWatchMetricsEnabled();
    public void set_CloudWatchMetricsEnabled(Nullable`1<bool> value);
    internal bool IsSetCloudWatchMetricsEnabled();
    public DQCompositeRuleEvaluationMethod get_CompositeRuleEvaluationMethod();
    public void set_CompositeRuleEvaluationMethod(DQCompositeRuleEvaluationMethod value);
    internal bool IsSetCompositeRuleEvaluationMethod();
    public string get_ResultsS3Prefix();
    public void set_ResultsS3Prefix(string value);
    internal bool IsSetResultsS3Prefix();
}
public class Amazon.Glue.Model.DataQualityMetricValues : object {
    private Nullable`1<double> _actualValue;
    private Nullable`1<double> _expectedValue;
    private Nullable`1<double> _lowerLimit;
    private Nullable`1<double> _upperLimit;
    public Nullable`1<double> ActualValue { get; public set; }
    public Nullable`1<double> ExpectedValue { get; public set; }
    public Nullable`1<double> LowerLimit { get; public set; }
    public Nullable`1<double> UpperLimit { get; public set; }
    public Nullable`1<double> get_ActualValue();
    public void set_ActualValue(Nullable`1<double> value);
    internal bool IsSetActualValue();
    public Nullable`1<double> get_ExpectedValue();
    public void set_ExpectedValue(Nullable`1<double> value);
    internal bool IsSetExpectedValue();
    public Nullable`1<double> get_LowerLimit();
    public void set_LowerLimit(Nullable`1<double> value);
    internal bool IsSetLowerLimit();
    public Nullable`1<double> get_UpperLimit();
    public void set_UpperLimit(Nullable`1<double> value);
    internal bool IsSetUpperLimit();
}
public class Amazon.Glue.Model.DataQualityObservation : object {
    private string _description;
    private MetricBasedObservation _metricBasedObservation;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public MetricBasedObservation MetricBasedObservation { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public MetricBasedObservation get_MetricBasedObservation();
    public void set_MetricBasedObservation(MetricBasedObservation value);
    internal bool IsSetMetricBasedObservation();
}
public class Amazon.Glue.Model.DataQualityResult : object {
    private List`1<DataQualityAnalyzerResult> _analyzerResults;
    private Nullable`1<DateTime> _completedOn;
    private DataSource _dataSource;
    private string _evaluationContext;
    private string _jobName;
    private string _jobRunId;
    private List`1<DataQualityObservation> _observations;
    private string _resultId;
    private List`1<DataQualityRuleResult> _ruleResults;
    private string _rulesetEvaluationRunId;
    private string _rulesetName;
    private Nullable`1<double> _score;
    private Nullable`1<DateTime> _startedOn;
    [AWSPropertyAttribute]
public List`1<DataQualityAnalyzerResult> AnalyzerResults { get; public set; }
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public DataSource DataSource { get; public set; }
    public string EvaluationContext { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    [AWSPropertyAttribute]
public List`1<DataQualityObservation> Observations { get; public set; }
    [AWSPropertyAttribute]
public string ResultId { get; public set; }
    [AWSPropertyAttribute]
public List`1<DataQualityRuleResult> RuleResults { get; public set; }
    [AWSPropertyAttribute]
public string RulesetEvaluationRunId { get; public set; }
    [AWSPropertyAttribute]
public string RulesetName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Score { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public List`1<DataQualityAnalyzerResult> get_AnalyzerResults();
    public void set_AnalyzerResults(List`1<DataQualityAnalyzerResult> value);
    internal bool IsSetAnalyzerResults();
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_EvaluationContext();
    public void set_EvaluationContext(string value);
    internal bool IsSetEvaluationContext();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
    public List`1<DataQualityObservation> get_Observations();
    public void set_Observations(List`1<DataQualityObservation> value);
    internal bool IsSetObservations();
    public string get_ResultId();
    public void set_ResultId(string value);
    internal bool IsSetResultId();
    public List`1<DataQualityRuleResult> get_RuleResults();
    public void set_RuleResults(List`1<DataQualityRuleResult> value);
    internal bool IsSetRuleResults();
    public string get_RulesetEvaluationRunId();
    public void set_RulesetEvaluationRunId(string value);
    internal bool IsSetRulesetEvaluationRunId();
    public string get_RulesetName();
    public void set_RulesetName(string value);
    internal bool IsSetRulesetName();
    public Nullable`1<double> get_Score();
    public void set_Score(Nullable`1<double> value);
    internal bool IsSetScore();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
}
public class Amazon.Glue.Model.DataQualityResultDescription : object {
    private DataSource _dataSource;
    private string _jobName;
    private string _jobRunId;
    private string _resultId;
    private Nullable`1<DateTime> _startedOn;
    public DataSource DataSource { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    [AWSPropertyAttribute]
public string ResultId { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
    public string get_ResultId();
    public void set_ResultId(string value);
    internal bool IsSetResultId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
}
public class Amazon.Glue.Model.DataQualityResultFilterCriteria : object {
    private DataSource _dataSource;
    private string _jobName;
    private string _jobRunId;
    private Nullable`1<DateTime> _startedAfter;
    private Nullable`1<DateTime> _startedBefore;
    public DataSource DataSource { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    public Nullable`1<DateTime> StartedAfter { get; public set; }
    public Nullable`1<DateTime> StartedBefore { get; public set; }
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
    public Nullable`1<DateTime> get_StartedAfter();
    public void set_StartedAfter(Nullable`1<DateTime> value);
    internal bool IsSetStartedAfter();
    public Nullable`1<DateTime> get_StartedBefore();
    public void set_StartedBefore(Nullable`1<DateTime> value);
    internal bool IsSetStartedBefore();
}
public class Amazon.Glue.Model.DataQualityRuleRecommendationRunDescription : object {
    private DataSource _dataSource;
    private string _runId;
    private Nullable`1<DateTime> _startedOn;
    private TaskStatusType _status;
    public DataSource DataSource { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public TaskStatusType Status { get; public set; }
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
}
public class Amazon.Glue.Model.DataQualityRuleRecommendationRunFilter : object {
    private DataSource _dataSource;
    private Nullable`1<DateTime> _startedAfter;
    private Nullable`1<DateTime> _startedBefore;
    [AWSPropertyAttribute]
public DataSource DataSource { get; public set; }
    public Nullable`1<DateTime> StartedAfter { get; public set; }
    public Nullable`1<DateTime> StartedBefore { get; public set; }
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public Nullable`1<DateTime> get_StartedAfter();
    public void set_StartedAfter(Nullable`1<DateTime> value);
    internal bool IsSetStartedAfter();
    public Nullable`1<DateTime> get_StartedBefore();
    public void set_StartedBefore(Nullable`1<DateTime> value);
    internal bool IsSetStartedBefore();
}
public class Amazon.Glue.Model.DataQualityRuleResult : object {
    private string _description;
    private Dictionary`2<string, double> _evaluatedMetrics;
    private string _evaluationMessage;
    private string _name;
    private DataQualityRuleResultStatus _result;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Dictionary`2<string, double> EvaluatedMetrics { get; public set; }
    [AWSPropertyAttribute]
public string EvaluationMessage { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public DataQualityRuleResultStatus Result { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Dictionary`2<string, double> get_EvaluatedMetrics();
    public void set_EvaluatedMetrics(Dictionary`2<string, double> value);
    internal bool IsSetEvaluatedMetrics();
    public string get_EvaluationMessage();
    public void set_EvaluationMessage(string value);
    internal bool IsSetEvaluationMessage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public DataQualityRuleResultStatus get_Result();
    public void set_Result(DataQualityRuleResultStatus value);
    internal bool IsSetResult();
}
public class Amazon.Glue.Model.DataQualityRulesetEvaluationRunDescription : object {
    private DataSource _dataSource;
    private string _runId;
    private Nullable`1<DateTime> _startedOn;
    private TaskStatusType _status;
    public DataSource DataSource { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public TaskStatusType Status { get; public set; }
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
}
public class Amazon.Glue.Model.DataQualityRulesetEvaluationRunFilter : object {
    private DataSource _dataSource;
    private Nullable`1<DateTime> _startedAfter;
    private Nullable`1<DateTime> _startedBefore;
    [AWSPropertyAttribute]
public DataSource DataSource { get; public set; }
    public Nullable`1<DateTime> StartedAfter { get; public set; }
    public Nullable`1<DateTime> StartedBefore { get; public set; }
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public Nullable`1<DateTime> get_StartedAfter();
    public void set_StartedAfter(Nullable`1<DateTime> value);
    internal bool IsSetStartedAfter();
    public Nullable`1<DateTime> get_StartedBefore();
    public void set_StartedBefore(Nullable`1<DateTime> value);
    internal bool IsSetStartedBefore();
}
public class Amazon.Glue.Model.DataQualityRulesetFilterCriteria : object {
    private Nullable`1<DateTime> _createdAfter;
    private Nullable`1<DateTime> _createdBefore;
    private string _description;
    private Nullable`1<DateTime> _lastModifiedAfter;
    private Nullable`1<DateTime> _lastModifiedBefore;
    private string _name;
    private DataQualityTargetTable _targetTable;
    public Nullable`1<DateTime> CreatedAfter { get; public set; }
    public Nullable`1<DateTime> CreatedBefore { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastModifiedAfter { get; public set; }
    public Nullable`1<DateTime> LastModifiedBefore { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public DataQualityTargetTable TargetTable { get; public set; }
    public Nullable`1<DateTime> get_CreatedAfter();
    public void set_CreatedAfter(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAfter();
    public Nullable`1<DateTime> get_CreatedBefore();
    public void set_CreatedBefore(Nullable`1<DateTime> value);
    internal bool IsSetCreatedBefore();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastModifiedAfter();
    public void set_LastModifiedAfter(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedAfter();
    public Nullable`1<DateTime> get_LastModifiedBefore();
    public void set_LastModifiedBefore(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedBefore();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public DataQualityTargetTable get_TargetTable();
    public void set_TargetTable(DataQualityTargetTable value);
    internal bool IsSetTargetTable();
}
public class Amazon.Glue.Model.DataQualityRulesetListDetails : object {
    private Nullable`1<DateTime> _createdOn;
    private string _description;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _name;
    private string _recommendationRunId;
    private Nullable`1<int> _ruleCount;
    private DataQualityTargetTable _targetTable;
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RecommendationRunId { get; public set; }
    public Nullable`1<int> RuleCount { get; public set; }
    public DataQualityTargetTable TargetTable { get; public set; }
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RecommendationRunId();
    public void set_RecommendationRunId(string value);
    internal bool IsSetRecommendationRunId();
    public Nullable`1<int> get_RuleCount();
    public void set_RuleCount(Nullable`1<int> value);
    internal bool IsSetRuleCount();
    public DataQualityTargetTable get_TargetTable();
    public void set_TargetTable(DataQualityTargetTable value);
    internal bool IsSetTargetTable();
}
public class Amazon.Glue.Model.DataQualityTargetTable : object {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.DataSource : object {
    private GlueTable _glueTable;
    [AWSPropertyAttribute]
public GlueTable GlueTable { get; public set; }
    public GlueTable get_GlueTable();
    public void set_GlueTable(GlueTable value);
    internal bool IsSetGlueTable();
}
public class Amazon.Glue.Model.Datatype : object {
    private string _id;
    private string _label;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Label { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
}
public class Amazon.Glue.Model.DateColumnStatisticsData : object {
    private Nullable`1<DateTime> _maximumValue;
    private Nullable`1<DateTime> _minimumValue;
    private Nullable`1<long> _numberOfDistinctValues;
    private Nullable`1<long> _numberOfNulls;
    public Nullable`1<DateTime> MaximumValue { get; public set; }
    public Nullable`1<DateTime> MinimumValue { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfDistinctValues { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfNulls { get; public set; }
    public Nullable`1<DateTime> get_MaximumValue();
    public void set_MaximumValue(Nullable`1<DateTime> value);
    internal bool IsSetMaximumValue();
    public Nullable`1<DateTime> get_MinimumValue();
    public void set_MinimumValue(Nullable`1<DateTime> value);
    internal bool IsSetMinimumValue();
    public Nullable`1<long> get_NumberOfDistinctValues();
    public void set_NumberOfDistinctValues(Nullable`1<long> value);
    internal bool IsSetNumberOfDistinctValues();
    public Nullable`1<long> get_NumberOfNulls();
    public void set_NumberOfNulls(Nullable`1<long> value);
    internal bool IsSetNumberOfNulls();
}
public class Amazon.Glue.Model.DecimalColumnStatisticsData : object {
    private DecimalNumber _maximumValue;
    private DecimalNumber _minimumValue;
    private Nullable`1<long> _numberOfDistinctValues;
    private Nullable`1<long> _numberOfNulls;
    public DecimalNumber MaximumValue { get; public set; }
    public DecimalNumber MinimumValue { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfDistinctValues { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfNulls { get; public set; }
    public DecimalNumber get_MaximumValue();
    public void set_MaximumValue(DecimalNumber value);
    internal bool IsSetMaximumValue();
    public DecimalNumber get_MinimumValue();
    public void set_MinimumValue(DecimalNumber value);
    internal bool IsSetMinimumValue();
    public Nullable`1<long> get_NumberOfDistinctValues();
    public void set_NumberOfDistinctValues(Nullable`1<long> value);
    internal bool IsSetNumberOfDistinctValues();
    public Nullable`1<long> get_NumberOfNulls();
    public void set_NumberOfNulls(Nullable`1<long> value);
    internal bool IsSetNumberOfNulls();
}
public class Amazon.Glue.Model.DecimalNumber : object {
    private Nullable`1<int> _scale;
    private MemoryStream _unscaledValue;
    [AWSPropertyAttribute]
public Nullable`1<int> Scale { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream UnscaledValue { get; public set; }
    public Nullable`1<int> get_Scale();
    public void set_Scale(Nullable`1<int> value);
    internal bool IsSetScale();
    public MemoryStream get_UnscaledValue();
    public void set_UnscaledValue(MemoryStream value);
    internal bool IsSetUnscaledValue();
}
public class Amazon.Glue.Model.DeleteBlueprintRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteBlueprintResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteClassifierRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteClassifierResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteColumnStatisticsForPartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _columnName;
    private string _databaseName;
    private List`1<string> _partitionValues;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string ColumnName { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValues { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_ColumnName();
    public void set_ColumnName(string value);
    internal bool IsSetColumnName();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<string> get_PartitionValues();
    public void set_PartitionValues(List`1<string> value);
    internal bool IsSetPartitionValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.DeleteColumnStatisticsForPartitionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteColumnStatisticsForTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _columnName;
    private string _databaseName;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string ColumnName { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_ColumnName();
    public void set_ColumnName(string value);
    internal bool IsSetColumnName();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.DeleteColumnStatisticsForTableResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteConnectionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _connectionName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
}
public class Amazon.Glue.Model.DeleteConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteCrawlerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteCrawlerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteCustomEntityTypeRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteCustomEntityTypeResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteDatabaseRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _name;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteDatabaseResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteDataQualityRulesetRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteDataQualityRulesetResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteDevEndpointRequest : AmazonGlueRequest {
    private string _endpointName;
    [AWSPropertyAttribute]
public string EndpointName { get; public set; }
    public string get_EndpointName();
    public void set_EndpointName(string value);
    internal bool IsSetEndpointName();
}
public class Amazon.Glue.Model.DeleteDevEndpointResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteJobRequest : AmazonGlueRequest {
    private string _jobName;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
}
public class Amazon.Glue.Model.DeleteJobResponse : AmazonWebServiceResponse {
    private string _jobName;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
}
public class Amazon.Glue.Model.DeleteMLTransformRequest : AmazonGlueRequest {
    private string _transformId;
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.DeleteMLTransformResponse : AmazonWebServiceResponse {
    private string _transformId;
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.DeletePartitionIndexRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _indexName;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.DeletePartitionIndexResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeletePartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private List`1<string> _partitionValues;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValues { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<string> get_PartitionValues();
    public void set_PartitionValues(List`1<string> value);
    internal bool IsSetPartitionValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.DeletePartitionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteRegistryRequest : AmazonGlueRequest {
    private RegistryId _registryId;
    [AWSPropertyAttribute]
public RegistryId RegistryId { get; public set; }
    public RegistryId get_RegistryId();
    public void set_RegistryId(RegistryId value);
    internal bool IsSetRegistryId();
}
public class Amazon.Glue.Model.DeleteRegistryResponse : AmazonWebServiceResponse {
    private string _registryArn;
    private string _registryName;
    private RegistryStatus _status;
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    public RegistryStatus Status { get; public set; }
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public RegistryStatus get_Status();
    public void set_Status(RegistryStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Glue.Model.DeleteResourcePolicyRequest : AmazonGlueRequest {
    private string _policyHashCondition;
    private string _resourceArn;
    [AWSPropertyAttribute]
public string PolicyHashCondition { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_PolicyHashCondition();
    public void set_PolicyHashCondition(string value);
    internal bool IsSetPolicyHashCondition();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.Glue.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteSchemaRequest : AmazonGlueRequest {
    private SchemaId _schemaId;
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
}
public class Amazon.Glue.Model.DeleteSchemaResponse : AmazonWebServiceResponse {
    private string _schemaArn;
    private string _schemaName;
    private SchemaStatus _status;
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    public SchemaStatus Status { get; public set; }
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public SchemaStatus get_Status();
    public void set_Status(SchemaStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Glue.Model.DeleteSchemaVersionsRequest : AmazonGlueRequest {
    private SchemaId _schemaId;
    private string _versions;
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    [AWSPropertyAttribute]
public string Versions { get; public set; }
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public string get_Versions();
    public void set_Versions(string value);
    internal bool IsSetVersions();
}
public class Amazon.Glue.Model.DeleteSchemaVersionsResponse : AmazonWebServiceResponse {
    private List`1<SchemaVersionErrorItem> _schemaVersionErrors;
    public List`1<SchemaVersionErrorItem> SchemaVersionErrors { get; public set; }
    public List`1<SchemaVersionErrorItem> get_SchemaVersionErrors();
    public void set_SchemaVersionErrors(List`1<SchemaVersionErrorItem> value);
    internal bool IsSetSchemaVersionErrors();
}
public class Amazon.Glue.Model.DeleteSecurityConfigurationRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteSecurityConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteSessionRequest : AmazonGlueRequest {
    private string _id;
    private string _requestOrigin;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
}
public class Amazon.Glue.Model.DeleteSessionResponse : AmazonWebServiceResponse {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.Glue.Model.DeleteTableOptimizerRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private TableOptimizerType _type;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public TableOptimizerType Type { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.DeleteTableOptimizerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _name;
    private string _transactionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string TransactionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    internal bool IsSetTransactionId();
}
public class Amazon.Glue.Model.DeleteTableResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteTableVersionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private string _versionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.Glue.Model.DeleteTableVersionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteTriggerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteTriggerResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteUsageProfileRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteUsageProfileResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteUserDefinedFunctionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _functionName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Glue.Model.DeleteUserDefinedFunctionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.DeleteWorkflowRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeleteWorkflowResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DeltaTarget : object {
    private string _connectionName;
    private Nullable`1<bool> _createNativeDeltaTable;
    private List`1<string> _deltaTables;
    private Nullable`1<bool> _writeManifest;
    public string ConnectionName { get; public set; }
    public Nullable`1<bool> CreateNativeDeltaTable { get; public set; }
    public List`1<string> DeltaTables { get; public set; }
    public Nullable`1<bool> WriteManifest { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public Nullable`1<bool> get_CreateNativeDeltaTable();
    public void set_CreateNativeDeltaTable(Nullable`1<bool> value);
    internal bool IsSetCreateNativeDeltaTable();
    public List`1<string> get_DeltaTables();
    public void set_DeltaTables(List`1<string> value);
    internal bool IsSetDeltaTables();
    public Nullable`1<bool> get_WriteManifest();
    public void set_WriteManifest(Nullable`1<bool> value);
    internal bool IsSetWriteManifest();
}
public class Amazon.Glue.Model.DevEndpoint : object {
    private Dictionary`2<string, string> _arguments;
    private string _availabilityZone;
    private Nullable`1<DateTime> _createdTimestamp;
    private string _endpointName;
    private string _extraJarsS3Path;
    private string _extraPythonLibsS3Path;
    private string _failureReason;
    private string _glueVersion;
    private Nullable`1<DateTime> _lastModifiedTimestamp;
    private string _lastUpdateStatus;
    private Nullable`1<int> _numberOfNodes;
    private Nullable`1<int> _numberOfWorkers;
    private string _privateAddress;
    private string _publicAddress;
    private string _publicKey;
    private List`1<string> _publicKeys;
    private string _roleArn;
    private string _securityConfiguration;
    private List`1<string> _securityGroupIds;
    private string _status;
    private string _subnetId;
    private string _vpcId;
    private WorkerType _workerType;
    private string _yarnEndpointAddress;
    private Nullable`1<int> _zeppelinRemoteSparkInterpreterPort;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Arguments { get; public set; }
    public string AvailabilityZone { get; public set; }
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    public string EndpointName { get; public set; }
    public string ExtraJarsS3Path { get; public set; }
    public string ExtraPythonLibsS3Path { get; public set; }
    public string FailureReason { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public Nullable`1<DateTime> LastModifiedTimestamp { get; public set; }
    public string LastUpdateStatus { get; public set; }
    public Nullable`1<int> NumberOfNodes { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public string PrivateAddress { get; public set; }
    public string PublicAddress { get; public set; }
    public string PublicKey { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PublicKeys { get; public set; }
    public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public string Status { get; public set; }
    public string SubnetId { get; public set; }
    public string VpcId { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public string YarnEndpointAddress { get; public set; }
    public Nullable`1<int> ZeppelinRemoteSparkInterpreterPort { get; public set; }
    public Dictionary`2<string, string> get_Arguments();
    public void set_Arguments(Dictionary`2<string, string> value);
    internal bool IsSetArguments();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_EndpointName();
    public void set_EndpointName(string value);
    internal bool IsSetEndpointName();
    public string get_ExtraJarsS3Path();
    public void set_ExtraJarsS3Path(string value);
    internal bool IsSetExtraJarsS3Path();
    public string get_ExtraPythonLibsS3Path();
    public void set_ExtraPythonLibsS3Path(string value);
    internal bool IsSetExtraPythonLibsS3Path();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public Nullable`1<DateTime> get_LastModifiedTimestamp();
    public void set_LastModifiedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTimestamp();
    public string get_LastUpdateStatus();
    public void set_LastUpdateStatus(string value);
    internal bool IsSetLastUpdateStatus();
    public Nullable`1<int> get_NumberOfNodes();
    public void set_NumberOfNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfNodes();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_PrivateAddress();
    public void set_PrivateAddress(string value);
    internal bool IsSetPrivateAddress();
    public string get_PublicAddress();
    public void set_PublicAddress(string value);
    internal bool IsSetPublicAddress();
    public string get_PublicKey();
    public void set_PublicKey(string value);
    internal bool IsSetPublicKey();
    public List`1<string> get_PublicKeys();
    public void set_PublicKeys(List`1<string> value);
    internal bool IsSetPublicKeys();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
    public string get_YarnEndpointAddress();
    public void set_YarnEndpointAddress(string value);
    internal bool IsSetYarnEndpointAddress();
    public Nullable`1<int> get_ZeppelinRemoteSparkInterpreterPort();
    public void set_ZeppelinRemoteSparkInterpreterPort(Nullable`1<int> value);
    internal bool IsSetZeppelinRemoteSparkInterpreterPort();
}
public class Amazon.Glue.Model.DevEndpointCustomLibraries : object {
    private string _extraJarsS3Path;
    private string _extraPythonLibsS3Path;
    public string ExtraJarsS3Path { get; public set; }
    public string ExtraPythonLibsS3Path { get; public set; }
    public string get_ExtraJarsS3Path();
    public void set_ExtraJarsS3Path(string value);
    internal bool IsSetExtraJarsS3Path();
    public string get_ExtraPythonLibsS3Path();
    public void set_ExtraPythonLibsS3Path(string value);
    internal bool IsSetExtraPythonLibsS3Path();
}
public class Amazon.Glue.Model.DirectJDBCSource : object {
    private string _connectionName;
    private JDBCConnectionType _connectionType;
    private string _database;
    private string _name;
    private string _redshiftTmpDir;
    private string _table;
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public JDBCConnectionType ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RedshiftTmpDir { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public JDBCConnectionType get_ConnectionType();
    public void set_ConnectionType(JDBCConnectionType value);
    internal bool IsSetConnectionType();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RedshiftTmpDir();
    public void set_RedshiftTmpDir(string value);
    internal bool IsSetRedshiftTmpDir();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.DirectKafkaSource : object {
    private StreamingDataPreviewOptions _dataPreviewOptions;
    private Nullable`1<bool> _detectSchema;
    private string _name;
    private KafkaStreamingSourceOptions _streamingOptions;
    private Nullable`1<int> _windowSize;
    public StreamingDataPreviewOptions DataPreviewOptions { get; public set; }
    public Nullable`1<bool> DetectSchema { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public KafkaStreamingSourceOptions StreamingOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> WindowSize { get; public set; }
    public StreamingDataPreviewOptions get_DataPreviewOptions();
    public void set_DataPreviewOptions(StreamingDataPreviewOptions value);
    internal bool IsSetDataPreviewOptions();
    public Nullable`1<bool> get_DetectSchema();
    public void set_DetectSchema(Nullable`1<bool> value);
    internal bool IsSetDetectSchema();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public KafkaStreamingSourceOptions get_StreamingOptions();
    public void set_StreamingOptions(KafkaStreamingSourceOptions value);
    internal bool IsSetStreamingOptions();
    public Nullable`1<int> get_WindowSize();
    public void set_WindowSize(Nullable`1<int> value);
    internal bool IsSetWindowSize();
}
public class Amazon.Glue.Model.DirectKinesisSource : object {
    private StreamingDataPreviewOptions _dataPreviewOptions;
    private Nullable`1<bool> _detectSchema;
    private string _name;
    private KinesisStreamingSourceOptions _streamingOptions;
    private Nullable`1<int> _windowSize;
    public StreamingDataPreviewOptions DataPreviewOptions { get; public set; }
    public Nullable`1<bool> DetectSchema { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public KinesisStreamingSourceOptions StreamingOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> WindowSize { get; public set; }
    public StreamingDataPreviewOptions get_DataPreviewOptions();
    public void set_DataPreviewOptions(StreamingDataPreviewOptions value);
    internal bool IsSetDataPreviewOptions();
    public Nullable`1<bool> get_DetectSchema();
    public void set_DetectSchema(Nullable`1<bool> value);
    internal bool IsSetDetectSchema();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public KinesisStreamingSourceOptions get_StreamingOptions();
    public void set_StreamingOptions(KinesisStreamingSourceOptions value);
    internal bool IsSetStreamingOptions();
    public Nullable`1<int> get_WindowSize();
    public void set_WindowSize(Nullable`1<int> value);
    internal bool IsSetWindowSize();
}
public class Amazon.Glue.Model.DirectSchemaChangePolicy : object {
    private string _database;
    private Nullable`1<bool> _enableUpdateCatalog;
    private string _table;
    private UpdateCatalogBehavior _updateBehavior;
    public string Database { get; public set; }
    public Nullable`1<bool> EnableUpdateCatalog { get; public set; }
    public string Table { get; public set; }
    public UpdateCatalogBehavior UpdateBehavior { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public Nullable`1<bool> get_EnableUpdateCatalog();
    public void set_EnableUpdateCatalog(Nullable`1<bool> value);
    internal bool IsSetEnableUpdateCatalog();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public UpdateCatalogBehavior get_UpdateBehavior();
    public void set_UpdateBehavior(UpdateCatalogBehavior value);
    internal bool IsSetUpdateBehavior();
}
public class Amazon.Glue.Model.DoubleColumnStatisticsData : object {
    private Nullable`1<double> _maximumValue;
    private Nullable`1<double> _minimumValue;
    private Nullable`1<long> _numberOfDistinctValues;
    private Nullable`1<long> _numberOfNulls;
    public Nullable`1<double> MaximumValue { get; public set; }
    public Nullable`1<double> MinimumValue { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfDistinctValues { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfNulls { get; public set; }
    public Nullable`1<double> get_MaximumValue();
    public void set_MaximumValue(Nullable`1<double> value);
    internal bool IsSetMaximumValue();
    public Nullable`1<double> get_MinimumValue();
    public void set_MinimumValue(Nullable`1<double> value);
    internal bool IsSetMinimumValue();
    public Nullable`1<long> get_NumberOfDistinctValues();
    public void set_NumberOfDistinctValues(Nullable`1<long> value);
    internal bool IsSetNumberOfDistinctValues();
    public Nullable`1<long> get_NumberOfNulls();
    public void set_NumberOfNulls(Nullable`1<long> value);
    internal bool IsSetNumberOfNulls();
}
public class Amazon.Glue.Model.DQResultsPublishingOptions : object {
    private Nullable`1<bool> _cloudWatchMetricsEnabled;
    private string _evaluationContext;
    private Nullable`1<bool> _resultsPublishingEnabled;
    private string _resultsS3Prefix;
    public Nullable`1<bool> CloudWatchMetricsEnabled { get; public set; }
    public string EvaluationContext { get; public set; }
    public Nullable`1<bool> ResultsPublishingEnabled { get; public set; }
    public string ResultsS3Prefix { get; public set; }
    public Nullable`1<bool> get_CloudWatchMetricsEnabled();
    public void set_CloudWatchMetricsEnabled(Nullable`1<bool> value);
    internal bool IsSetCloudWatchMetricsEnabled();
    public string get_EvaluationContext();
    public void set_EvaluationContext(string value);
    internal bool IsSetEvaluationContext();
    public Nullable`1<bool> get_ResultsPublishingEnabled();
    public void set_ResultsPublishingEnabled(Nullable`1<bool> value);
    internal bool IsSetResultsPublishingEnabled();
    public string get_ResultsS3Prefix();
    public void set_ResultsS3Prefix(string value);
    internal bool IsSetResultsS3Prefix();
}
public class Amazon.Glue.Model.DQStopJobOnFailureOptions : object {
    private DQStopJobOnFailureTiming _stopJobOnFailureTiming;
    public DQStopJobOnFailureTiming StopJobOnFailureTiming { get; public set; }
    public DQStopJobOnFailureTiming get_StopJobOnFailureTiming();
    public void set_StopJobOnFailureTiming(DQStopJobOnFailureTiming value);
    internal bool IsSetStopJobOnFailureTiming();
}
public class Amazon.Glue.Model.DropDuplicates : object {
    private List`1<List`1<string>> _columns;
    private List`1<string> _inputs;
    private string _name;
    public List`1<List`1<string>> Columns { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> get_Columns();
    public void set_Columns(List`1<List`1<string>> value);
    internal bool IsSetColumns();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.DropFields : object {
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _paths;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<List`1<string>> Paths { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_Paths();
    public void set_Paths(List`1<List`1<string>> value);
    internal bool IsSetPaths();
}
public class Amazon.Glue.Model.DropNullFields : object {
    private List`1<string> _inputs;
    private string _name;
    private NullCheckBoxList _nullCheckBoxList;
    private List`1<NullValueField> _nullTextList;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public NullCheckBoxList NullCheckBoxList { get; public set; }
    [AWSPropertyAttribute]
public List`1<NullValueField> NullTextList { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public NullCheckBoxList get_NullCheckBoxList();
    public void set_NullCheckBoxList(NullCheckBoxList value);
    internal bool IsSetNullCheckBoxList();
    public List`1<NullValueField> get_NullTextList();
    public void set_NullTextList(List`1<NullValueField> value);
    internal bool IsSetNullTextList();
}
public class Amazon.Glue.Model.DynamicTransform : object {
    private string _functionName;
    private List`1<string> _inputs;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private List`1<TransformConfigParameter> _parameters;
    private string _path;
    private string _transformName;
    private string _version;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public List`1<TransformConfigParameter> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    [AWSPropertyAttribute]
public string TransformName { get; public set; }
    public string Version { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public List`1<TransformConfigParameter> get_Parameters();
    public void set_Parameters(List`1<TransformConfigParameter> value);
    internal bool IsSetParameters();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public string get_TransformName();
    public void set_TransformName(string value);
    internal bool IsSetTransformName();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.Model.DynamoDBCatalogSource : object {
    private string _database;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.DynamoDBTarget : object {
    private string _path;
    private Nullable`1<bool> _scanAll;
    private Nullable`1<double> _scanRate;
    public string Path { get; public set; }
    public Nullable`1<bool> ScanAll { get; public set; }
    public Nullable`1<double> ScanRate { get; public set; }
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public Nullable`1<bool> get_ScanAll();
    public void set_ScanAll(Nullable`1<bool> value);
    internal bool IsSetScanAll();
    public Nullable`1<double> get_ScanRate();
    public void set_ScanRate(Nullable`1<double> value);
    internal bool IsSetScanRate();
}
public class Amazon.Glue.Model.Edge : object {
    private string _destinationId;
    private string _sourceId;
    [AWSPropertyAttribute]
public string DestinationId { get; public set; }
    [AWSPropertyAttribute]
public string SourceId { get; public set; }
    public string get_DestinationId();
    public void set_DestinationId(string value);
    internal bool IsSetDestinationId();
    public string get_SourceId();
    public void set_SourceId(string value);
    internal bool IsSetSourceId();
}
public class Amazon.Glue.Model.EncryptionAtRest : object {
    private CatalogEncryptionMode _catalogEncryptionMode;
    private string _catalogEncryptionServiceRole;
    private string _sseAwsKmsKeyId;
    [AWSPropertyAttribute]
public CatalogEncryptionMode CatalogEncryptionMode { get; public set; }
    public string CatalogEncryptionServiceRole { get; public set; }
    [AWSPropertyAttribute]
public string SseAwsKmsKeyId { get; public set; }
    public CatalogEncryptionMode get_CatalogEncryptionMode();
    public void set_CatalogEncryptionMode(CatalogEncryptionMode value);
    internal bool IsSetCatalogEncryptionMode();
    public string get_CatalogEncryptionServiceRole();
    public void set_CatalogEncryptionServiceRole(string value);
    internal bool IsSetCatalogEncryptionServiceRole();
    public string get_SseAwsKmsKeyId();
    public void set_SseAwsKmsKeyId(string value);
    internal bool IsSetSseAwsKmsKeyId();
}
public class Amazon.Glue.Model.EncryptionConfiguration : object {
    private CloudWatchEncryption _cloudWatchEncryption;
    private JobBookmarksEncryption _jobBookmarksEncryption;
    private List`1<S3Encryption> _s3Encryption;
    public CloudWatchEncryption CloudWatchEncryption { get; public set; }
    public JobBookmarksEncryption JobBookmarksEncryption { get; public set; }
    public List`1<S3Encryption> S3Encryption { get; public set; }
    public CloudWatchEncryption get_CloudWatchEncryption();
    public void set_CloudWatchEncryption(CloudWatchEncryption value);
    internal bool IsSetCloudWatchEncryption();
    public JobBookmarksEncryption get_JobBookmarksEncryption();
    public void set_JobBookmarksEncryption(JobBookmarksEncryption value);
    internal bool IsSetJobBookmarksEncryption();
    public List`1<S3Encryption> get_S3Encryption();
    public void set_S3Encryption(List`1<S3Encryption> value);
    internal bool IsSetS3Encryption();
}
public class Amazon.Glue.Model.EntityNotFoundException : AmazonGlueException {
    private Nullable`1<bool> _fromFederationSource;
    public Nullable`1<bool> FromFederationSource { get; public set; }
    public EntityNotFoundException(string message);
    public EntityNotFoundException(string message, Exception innerException);
    public EntityNotFoundException(Exception innerException);
    public EntityNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EntityNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Nullable`1<bool> get_FromFederationSource();
    public void set_FromFederationSource(Nullable`1<bool> value);
    internal bool IsSetFromFederationSource();
}
public class Amazon.Glue.Model.ErrorDetail : object {
    private string _errorCode;
    private string _errorMessage;
    [AWSPropertyAttribute]
public string ErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
}
public class Amazon.Glue.Model.ErrorDetails : object {
    private string _errorCode;
    private string _errorMessage;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
}
public class Amazon.Glue.Model.EvaluateDataQuality : object {
    private List`1<string> _inputs;
    private string _name;
    private DQTransformOutput _output;
    private DQResultsPublishingOptions _publishingOptions;
    private string _ruleset;
    private DQStopJobOnFailureOptions _stopJobOnFailureOptions;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public DQTransformOutput Output { get; public set; }
    public DQResultsPublishingOptions PublishingOptions { get; public set; }
    [AWSPropertyAttribute]
public string Ruleset { get; public set; }
    public DQStopJobOnFailureOptions StopJobOnFailureOptions { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public DQTransformOutput get_Output();
    public void set_Output(DQTransformOutput value);
    internal bool IsSetOutput();
    public DQResultsPublishingOptions get_PublishingOptions();
    public void set_PublishingOptions(DQResultsPublishingOptions value);
    internal bool IsSetPublishingOptions();
    public string get_Ruleset();
    public void set_Ruleset(string value);
    internal bool IsSetRuleset();
    public DQStopJobOnFailureOptions get_StopJobOnFailureOptions();
    public void set_StopJobOnFailureOptions(DQStopJobOnFailureOptions value);
    internal bool IsSetStopJobOnFailureOptions();
}
public class Amazon.Glue.Model.EvaluateDataQualityMultiFrame : object {
    private Dictionary`2<string, string> _additionalDataSources;
    private Dictionary`2<string, string> _additionalOptions;
    private List`1<string> _inputs;
    private string _name;
    private DQResultsPublishingOptions _publishingOptions;
    private string _ruleset;
    private DQStopJobOnFailureOptions _stopJobOnFailureOptions;
    public Dictionary`2<string, string> AdditionalDataSources { get; public set; }
    public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public DQResultsPublishingOptions PublishingOptions { get; public set; }
    [AWSPropertyAttribute]
public string Ruleset { get; public set; }
    public DQStopJobOnFailureOptions StopJobOnFailureOptions { get; public set; }
    public Dictionary`2<string, string> get_AdditionalDataSources();
    public void set_AdditionalDataSources(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalDataSources();
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public DQResultsPublishingOptions get_PublishingOptions();
    public void set_PublishingOptions(DQResultsPublishingOptions value);
    internal bool IsSetPublishingOptions();
    public string get_Ruleset();
    public void set_Ruleset(string value);
    internal bool IsSetRuleset();
    public DQStopJobOnFailureOptions get_StopJobOnFailureOptions();
    public void set_StopJobOnFailureOptions(DQStopJobOnFailureOptions value);
    internal bool IsSetStopJobOnFailureOptions();
}
public class Amazon.Glue.Model.EvaluationMetrics : object {
    private FindMatchesMetrics _findMatchesMetrics;
    private TransformType _transformType;
    public FindMatchesMetrics FindMatchesMetrics { get; public set; }
    [AWSPropertyAttribute]
public TransformType TransformType { get; public set; }
    public FindMatchesMetrics get_FindMatchesMetrics();
    public void set_FindMatchesMetrics(FindMatchesMetrics value);
    internal bool IsSetFindMatchesMetrics();
    public TransformType get_TransformType();
    public void set_TransformType(TransformType value);
    internal bool IsSetTransformType();
}
public class Amazon.Glue.Model.EventBatchingCondition : object {
    private Nullable`1<int> _batchSize;
    private Nullable`1<int> _batchWindow;
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> BatchWindow { get; public set; }
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<int> get_BatchWindow();
    public void set_BatchWindow(Nullable`1<int> value);
    internal bool IsSetBatchWindow();
}
public class Amazon.Glue.Model.ExecutionProperty : object {
    private Nullable`1<int> _maxConcurrentRuns;
    public Nullable`1<int> MaxConcurrentRuns { get; public set; }
    public Nullable`1<int> get_MaxConcurrentRuns();
    public void set_MaxConcurrentRuns(Nullable`1<int> value);
    internal bool IsSetMaxConcurrentRuns();
}
public class Amazon.Glue.Model.ExportLabelsTaskRunProperties : object {
    private string _outputS3Path;
    public string OutputS3Path { get; public set; }
    public string get_OutputS3Path();
    public void set_OutputS3Path(string value);
    internal bool IsSetOutputS3Path();
}
public class Amazon.Glue.Model.FederatedDatabase : object {
    private string _connectionName;
    private string _identifier;
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
}
public class Amazon.Glue.Model.FederatedResourceAlreadyExistsException : AmazonGlueException {
    private string _associatedGlueResource;
    [AWSPropertyAttribute]
public string AssociatedGlueResource { get; public set; }
    public FederatedResourceAlreadyExistsException(string message);
    public FederatedResourceAlreadyExistsException(string message, Exception innerException);
    public FederatedResourceAlreadyExistsException(Exception innerException);
    public FederatedResourceAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FederatedResourceAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_AssociatedGlueResource();
    public void set_AssociatedGlueResource(string value);
    internal bool IsSetAssociatedGlueResource();
}
public class Amazon.Glue.Model.FederatedTable : object {
    private string _connectionName;
    private string _databaseIdentifier;
    private string _identifier;
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_DatabaseIdentifier();
    public void set_DatabaseIdentifier(string value);
    internal bool IsSetDatabaseIdentifier();
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
}
public class Amazon.Glue.Model.FederationSourceException : AmazonGlueException {
    private FederationSourceErrorCode _federationSourceErrorCode;
    public FederationSourceErrorCode FederationSourceErrorCode { get; public set; }
    public FederationSourceException(string message);
    public FederationSourceException(string message, Exception innerException);
    public FederationSourceException(Exception innerException);
    public FederationSourceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FederationSourceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FederationSourceErrorCode get_FederationSourceErrorCode();
    public void set_FederationSourceErrorCode(FederationSourceErrorCode value);
    internal bool IsSetFederationSourceErrorCode();
}
public class Amazon.Glue.Model.FederationSourceRetryableException : AmazonGlueException {
    public FederationSourceRetryableException(string message);
    public FederationSourceRetryableException(string message, Exception innerException);
    public FederationSourceRetryableException(Exception innerException);
    public FederationSourceRetryableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FederationSourceRetryableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.FillMissingValues : object {
    private string _filledPath;
    private string _imputedPath;
    private List`1<string> _inputs;
    private string _name;
    public string FilledPath { get; public set; }
    [AWSPropertyAttribute]
public string ImputedPath { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_FilledPath();
    public void set_FilledPath(string value);
    internal bool IsSetFilledPath();
    public string get_ImputedPath();
    public void set_ImputedPath(string value);
    internal bool IsSetImputedPath();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.Filter : object {
    private List`1<FilterExpression> _filters;
    private List`1<string> _inputs;
    private FilterLogicalOperator _logicalOperator;
    private string _name;
    [AWSPropertyAttribute]
public List`1<FilterExpression> Filters { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public FilterLogicalOperator LogicalOperator { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<FilterExpression> get_Filters();
    public void set_Filters(List`1<FilterExpression> value);
    internal bool IsSetFilters();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public FilterLogicalOperator get_LogicalOperator();
    public void set_LogicalOperator(FilterLogicalOperator value);
    internal bool IsSetLogicalOperator();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.FilterExpression : object {
    private Nullable`1<bool> _negated;
    private FilterOperation _operation;
    private List`1<FilterValue> _values;
    public Nullable`1<bool> Negated { get; public set; }
    [AWSPropertyAttribute]
public FilterOperation Operation { get; public set; }
    [AWSPropertyAttribute]
public List`1<FilterValue> Values { get; public set; }
    public Nullable`1<bool> get_Negated();
    public void set_Negated(Nullable`1<bool> value);
    internal bool IsSetNegated();
    public FilterOperation get_Operation();
    public void set_Operation(FilterOperation value);
    internal bool IsSetOperation();
    public List`1<FilterValue> get_Values();
    public void set_Values(List`1<FilterValue> value);
    internal bool IsSetValues();
}
public class Amazon.Glue.Model.FilterValue : object {
    private FilterValueType _type;
    private List`1<string> _value;
    [AWSPropertyAttribute]
public FilterValueType Type { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Value { get; public set; }
    public FilterValueType get_Type();
    public void set_Type(FilterValueType value);
    internal bool IsSetType();
    public List`1<string> get_Value();
    public void set_Value(List`1<string> value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.FindMatchesMetrics : object {
    private Nullable`1<double> _areaUnderPRCurve;
    private List`1<ColumnImportance> _columnImportances;
    private ConfusionMatrix _confusionMatrix;
    private Nullable`1<double> _f1;
    private Nullable`1<double> _precision;
    private Nullable`1<double> _recall;
    [AWSPropertyAttribute]
public Nullable`1<double> AreaUnderPRCurve { get; public set; }
    [AWSPropertyAttribute]
public List`1<ColumnImportance> ColumnImportances { get; public set; }
    public ConfusionMatrix ConfusionMatrix { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> F1 { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Precision { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Recall { get; public set; }
    public Nullable`1<double> get_AreaUnderPRCurve();
    public void set_AreaUnderPRCurve(Nullable`1<double> value);
    internal bool IsSetAreaUnderPRCurve();
    public List`1<ColumnImportance> get_ColumnImportances();
    public void set_ColumnImportances(List`1<ColumnImportance> value);
    internal bool IsSetColumnImportances();
    public ConfusionMatrix get_ConfusionMatrix();
    public void set_ConfusionMatrix(ConfusionMatrix value);
    internal bool IsSetConfusionMatrix();
    public Nullable`1<double> get_F1();
    public void set_F1(Nullable`1<double> value);
    internal bool IsSetF1();
    public Nullable`1<double> get_Precision();
    public void set_Precision(Nullable`1<double> value);
    internal bool IsSetPrecision();
    public Nullable`1<double> get_Recall();
    public void set_Recall(Nullable`1<double> value);
    internal bool IsSetRecall();
}
public class Amazon.Glue.Model.FindMatchesParameters : object {
    private Nullable`1<double> _accuracyCostTradeoff;
    private Nullable`1<bool> _enforceProvidedLabels;
    private Nullable`1<double> _precisionRecallTradeoff;
    private string _primaryKeyColumnName;
    [AWSPropertyAttribute]
public Nullable`1<double> AccuracyCostTradeoff { get; public set; }
    public Nullable`1<bool> EnforceProvidedLabels { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> PrecisionRecallTradeoff { get; public set; }
    [AWSPropertyAttribute]
public string PrimaryKeyColumnName { get; public set; }
    public Nullable`1<double> get_AccuracyCostTradeoff();
    public void set_AccuracyCostTradeoff(Nullable`1<double> value);
    internal bool IsSetAccuracyCostTradeoff();
    public Nullable`1<bool> get_EnforceProvidedLabels();
    public void set_EnforceProvidedLabels(Nullable`1<bool> value);
    internal bool IsSetEnforceProvidedLabels();
    public Nullable`1<double> get_PrecisionRecallTradeoff();
    public void set_PrecisionRecallTradeoff(Nullable`1<double> value);
    internal bool IsSetPrecisionRecallTradeoff();
    public string get_PrimaryKeyColumnName();
    public void set_PrimaryKeyColumnName(string value);
    internal bool IsSetPrimaryKeyColumnName();
}
public class Amazon.Glue.Model.FindMatchesTaskRunProperties : object {
    private string _jobId;
    private string _jobName;
    private string _jobRunId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
}
public class Amazon.Glue.Model.GetBlueprintRequest : AmazonGlueRequest {
    private Nullable`1<bool> _includeBlueprint;
    private Nullable`1<bool> _includeParameterSpec;
    private string _name;
    public Nullable`1<bool> IncludeBlueprint { get; public set; }
    public Nullable`1<bool> IncludeParameterSpec { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> get_IncludeBlueprint();
    public void set_IncludeBlueprint(Nullable`1<bool> value);
    internal bool IsSetIncludeBlueprint();
    public Nullable`1<bool> get_IncludeParameterSpec();
    public void set_IncludeParameterSpec(Nullable`1<bool> value);
    internal bool IsSetIncludeParameterSpec();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetBlueprintResponse : AmazonWebServiceResponse {
    private Blueprint _blueprint;
    public Blueprint Blueprint { get; public set; }
    public Blueprint get_Blueprint();
    public void set_Blueprint(Blueprint value);
    internal bool IsSetBlueprint();
}
public class Amazon.Glue.Model.GetBlueprintRunRequest : AmazonGlueRequest {
    private string _blueprintName;
    private string _runId;
    [AWSPropertyAttribute]
public string BlueprintName { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_BlueprintName();
    public void set_BlueprintName(string value);
    internal bool IsSetBlueprintName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.GetBlueprintRunResponse : AmazonWebServiceResponse {
    private BlueprintRun _blueprintRun;
    public BlueprintRun BlueprintRun { get; public set; }
    public BlueprintRun get_BlueprintRun();
    public void set_BlueprintRun(BlueprintRun value);
    internal bool IsSetBlueprintRun();
}
internal class Amazon.Glue.Model.GetBlueprintRunsPaginator : object {
    private IAmazonGlue _client;
    private GetBlueprintRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetBlueprintRunsResponse> Responses { get; }
    internal GetBlueprintRunsPaginator(IAmazonGlue client, GetBlueprintRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetBlueprintRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetBlueprintRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetBlueprintRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetBlueprintRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetBlueprintRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetBlueprintRunsRequest : AmazonGlueRequest {
    private string _blueprintName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string BlueprintName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_BlueprintName();
    public void set_BlueprintName(string value);
    internal bool IsSetBlueprintName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetBlueprintRunsResponse : AmazonWebServiceResponse {
    private List`1<BlueprintRun> _blueprintRuns;
    private string _nextToken;
    public List`1<BlueprintRun> BlueprintRuns { get; public set; }
    public string NextToken { get; public set; }
    public List`1<BlueprintRun> get_BlueprintRuns();
    public void set_BlueprintRuns(List`1<BlueprintRun> value);
    internal bool IsSetBlueprintRuns();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetCatalogImportStatusRequest : AmazonGlueRequest {
    private string _catalogId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
}
public class Amazon.Glue.Model.GetCatalogImportStatusResponse : AmazonWebServiceResponse {
    private CatalogImportStatus _importStatus;
    public CatalogImportStatus ImportStatus { get; public set; }
    public CatalogImportStatus get_ImportStatus();
    public void set_ImportStatus(CatalogImportStatus value);
    internal bool IsSetImportStatus();
}
public class Amazon.Glue.Model.GetClassifierRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetClassifierResponse : AmazonWebServiceResponse {
    private Classifier _classifier;
    public Classifier Classifier { get; public set; }
    public Classifier get_Classifier();
    public void set_Classifier(Classifier value);
    internal bool IsSetClassifier();
}
internal class Amazon.Glue.Model.GetClassifiersPaginator : object {
    private IAmazonGlue _client;
    private GetClassifiersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetClassifiersResponse> Responses { get; }
    internal GetClassifiersPaginator(IAmazonGlue client, GetClassifiersRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetClassifiersResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetClassifiersPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetClassifiersResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetClassifiersResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetClassifiersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetClassifiersRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetClassifiersResponse : AmazonWebServiceResponse {
    private List`1<Classifier> _classifiers;
    private string _nextToken;
    public List`1<Classifier> Classifiers { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Classifier> get_Classifiers();
    public void set_Classifiers(List`1<Classifier> value);
    internal bool IsSetClassifiers();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetColumnStatisticsForPartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private List`1<string> _columnNames;
    private string _databaseName;
    private List`1<string> _partitionValues;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ColumnNames { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValues { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public List`1<string> get_ColumnNames();
    public void set_ColumnNames(List`1<string> value);
    internal bool IsSetColumnNames();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<string> get_PartitionValues();
    public void set_PartitionValues(List`1<string> value);
    internal bool IsSetPartitionValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetColumnStatisticsForPartitionResponse : AmazonWebServiceResponse {
    private List`1<ColumnStatistics> _columnStatisticsList;
    private List`1<ColumnError> _errors;
    public List`1<ColumnStatistics> ColumnStatisticsList { get; public set; }
    public List`1<ColumnError> Errors { get; public set; }
    public List`1<ColumnStatistics> get_ColumnStatisticsList();
    public void set_ColumnStatisticsList(List`1<ColumnStatistics> value);
    internal bool IsSetColumnStatisticsList();
    public List`1<ColumnError> get_Errors();
    public void set_Errors(List`1<ColumnError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.GetColumnStatisticsForTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private List`1<string> _columnNames;
    private string _databaseName;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ColumnNames { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public List`1<string> get_ColumnNames();
    public void set_ColumnNames(List`1<string> value);
    internal bool IsSetColumnNames();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetColumnStatisticsForTableResponse : AmazonWebServiceResponse {
    private List`1<ColumnStatistics> _columnStatisticsList;
    private List`1<ColumnError> _errors;
    public List`1<ColumnStatistics> ColumnStatisticsList { get; public set; }
    public List`1<ColumnError> Errors { get; public set; }
    public List`1<ColumnStatistics> get_ColumnStatisticsList();
    public void set_ColumnStatisticsList(List`1<ColumnStatistics> value);
    internal bool IsSetColumnStatisticsList();
    public List`1<ColumnError> get_Errors();
    public void set_Errors(List`1<ColumnError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.GetColumnStatisticsTaskRunRequest : AmazonGlueRequest {
    private string _columnStatisticsTaskRunId;
    [AWSPropertyAttribute]
public string ColumnStatisticsTaskRunId { get; public set; }
    public string get_ColumnStatisticsTaskRunId();
    public void set_ColumnStatisticsTaskRunId(string value);
    internal bool IsSetColumnStatisticsTaskRunId();
}
public class Amazon.Glue.Model.GetColumnStatisticsTaskRunResponse : AmazonWebServiceResponse {
    private ColumnStatisticsTaskRun _columnStatisticsTaskRun;
    public ColumnStatisticsTaskRun ColumnStatisticsTaskRun { get; public set; }
    public ColumnStatisticsTaskRun get_ColumnStatisticsTaskRun();
    public void set_ColumnStatisticsTaskRun(ColumnStatisticsTaskRun value);
    internal bool IsSetColumnStatisticsTaskRun();
}
internal class Amazon.Glue.Model.GetColumnStatisticsTaskRunsPaginator : object {
    private IAmazonGlue _client;
    private GetColumnStatisticsTaskRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetColumnStatisticsTaskRunsResponse> Responses { get; }
    internal GetColumnStatisticsTaskRunsPaginator(IAmazonGlue client, GetColumnStatisticsTaskRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetColumnStatisticsTaskRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetColumnStatisticsTaskRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetColumnStatisticsTaskRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetColumnStatisticsTaskRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetColumnStatisticsTaskRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetColumnStatisticsTaskRunsRequest : AmazonGlueRequest {
    private string _databaseName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _tableName;
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetColumnStatisticsTaskRunsResponse : AmazonWebServiceResponse {
    private List`1<ColumnStatisticsTaskRun> _columnStatisticsTaskRuns;
    private string _nextToken;
    public List`1<ColumnStatisticsTaskRun> ColumnStatisticsTaskRuns { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ColumnStatisticsTaskRun> get_ColumnStatisticsTaskRuns();
    public void set_ColumnStatisticsTaskRuns(List`1<ColumnStatisticsTaskRun> value);
    internal bool IsSetColumnStatisticsTaskRuns();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetConnectionRequest : AmazonGlueRequest {
    private string _catalogId;
    private Nullable`1<bool> _hidePassword;
    private string _name;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public Nullable`1<bool> HidePassword { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public Nullable`1<bool> get_HidePassword();
    public void set_HidePassword(Nullable`1<bool> value);
    internal bool IsSetHidePassword();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetConnectionResponse : AmazonWebServiceResponse {
    private Connection _connection;
    public Connection Connection { get; public set; }
    public Connection get_Connection();
    public void set_Connection(Connection value);
    internal bool IsSetConnection();
}
public class Amazon.Glue.Model.GetConnectionsFilter : object {
    private ConnectionType _connectionType;
    private List`1<string> _matchCriteria;
    public ConnectionType ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> MatchCriteria { get; public set; }
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public List`1<string> get_MatchCriteria();
    public void set_MatchCriteria(List`1<string> value);
    internal bool IsSetMatchCriteria();
}
internal class Amazon.Glue.Model.GetConnectionsPaginator : object {
    private IAmazonGlue _client;
    private GetConnectionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetConnectionsResponse> Responses { get; }
    internal GetConnectionsPaginator(IAmazonGlue client, GetConnectionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetConnectionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetConnectionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetConnectionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetConnectionsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetConnectionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetConnectionsRequest : AmazonGlueRequest {
    private string _catalogId;
    private GetConnectionsFilter _filter;
    private Nullable`1<bool> _hidePassword;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public GetConnectionsFilter Filter { get; public set; }
    public Nullable`1<bool> HidePassword { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public GetConnectionsFilter get_Filter();
    public void set_Filter(GetConnectionsFilter value);
    internal bool IsSetFilter();
    public Nullable`1<bool> get_HidePassword();
    public void set_HidePassword(Nullable`1<bool> value);
    internal bool IsSetHidePassword();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetConnectionsResponse : AmazonWebServiceResponse {
    private List`1<Connection> _connectionList;
    private string _nextToken;
    public List`1<Connection> ConnectionList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Connection> get_ConnectionList();
    public void set_ConnectionList(List`1<Connection> value);
    internal bool IsSetConnectionList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.GetCrawlerMetricsPaginator : object {
    private IAmazonGlue _client;
    private GetCrawlerMetricsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetCrawlerMetricsResponse> Responses { get; }
    internal GetCrawlerMetricsPaginator(IAmazonGlue client, GetCrawlerMetricsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetCrawlerMetricsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetCrawlerMetricsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetCrawlerMetricsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetCrawlerMetricsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetCrawlerMetricsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetCrawlerMetricsRequest : AmazonGlueRequest {
    private List`1<string> _crawlerNameList;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> CrawlerNameList { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_CrawlerNameList();
    public void set_CrawlerNameList(List`1<string> value);
    internal bool IsSetCrawlerNameList();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetCrawlerMetricsResponse : AmazonWebServiceResponse {
    private List`1<CrawlerMetrics> _crawlerMetricsList;
    private string _nextToken;
    public List`1<CrawlerMetrics> CrawlerMetricsList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CrawlerMetrics> get_CrawlerMetricsList();
    public void set_CrawlerMetricsList(List`1<CrawlerMetrics> value);
    internal bool IsSetCrawlerMetricsList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetCrawlerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetCrawlerResponse : AmazonWebServiceResponse {
    private Crawler _crawler;
    public Crawler Crawler { get; public set; }
    public Crawler get_Crawler();
    public void set_Crawler(Crawler value);
    internal bool IsSetCrawler();
}
internal class Amazon.Glue.Model.GetCrawlersPaginator : object {
    private IAmazonGlue _client;
    private GetCrawlersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetCrawlersResponse> Responses { get; }
    internal GetCrawlersPaginator(IAmazonGlue client, GetCrawlersRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetCrawlersResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetCrawlersPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetCrawlersResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetCrawlersResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetCrawlersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetCrawlersRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetCrawlersResponse : AmazonWebServiceResponse {
    private List`1<Crawler> _crawlers;
    private string _nextToken;
    public List`1<Crawler> Crawlers { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Crawler> get_Crawlers();
    public void set_Crawlers(List`1<Crawler> value);
    internal bool IsSetCrawlers();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetCustomEntityTypeRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetCustomEntityTypeResponse : AmazonWebServiceResponse {
    private List`1<string> _contextWords;
    private string _name;
    private string _regexString;
    [AWSPropertyAttribute]
public List`1<string> ContextWords { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RegexString { get; public set; }
    public List`1<string> get_ContextWords();
    public void set_ContextWords(List`1<string> value);
    internal bool IsSetContextWords();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RegexString();
    public void set_RegexString(string value);
    internal bool IsSetRegexString();
}
public class Amazon.Glue.Model.GetDatabaseRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _name;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetDatabaseResponse : AmazonWebServiceResponse {
    private Database _database;
    public Database Database { get; public set; }
    public Database get_Database();
    public void set_Database(Database value);
    internal bool IsSetDatabase();
}
internal class Amazon.Glue.Model.GetDatabasesPaginator : object {
    private IAmazonGlue _client;
    private GetDatabasesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetDatabasesResponse> Responses { get; }
    internal GetDatabasesPaginator(IAmazonGlue client, GetDatabasesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetDatabasesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetDatabasesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetDatabasesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetDatabasesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetDatabasesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetDatabasesRequest : AmazonGlueRequest {
    private List`1<string> _attributesToGet;
    private string _catalogId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private ResourceShareType _resourceShareType;
    public List`1<string> AttributesToGet { get; public set; }
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public ResourceShareType ResourceShareType { get; public set; }
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ResourceShareType get_ResourceShareType();
    public void set_ResourceShareType(ResourceShareType value);
    internal bool IsSetResourceShareType();
}
public class Amazon.Glue.Model.GetDatabasesResponse : AmazonWebServiceResponse {
    private List`1<Database> _databaseList;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<Database> DatabaseList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Database> get_DatabaseList();
    public void set_DatabaseList(List`1<Database> value);
    internal bool IsSetDatabaseList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetDataCatalogEncryptionSettingsRequest : AmazonGlueRequest {
    private string _catalogId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
}
public class Amazon.Glue.Model.GetDataCatalogEncryptionSettingsResponse : AmazonWebServiceResponse {
    private DataCatalogEncryptionSettings _dataCatalogEncryptionSettings;
    public DataCatalogEncryptionSettings DataCatalogEncryptionSettings { get; public set; }
    public DataCatalogEncryptionSettings get_DataCatalogEncryptionSettings();
    public void set_DataCatalogEncryptionSettings(DataCatalogEncryptionSettings value);
    internal bool IsSetDataCatalogEncryptionSettings();
}
public class Amazon.Glue.Model.GetDataflowGraphRequest : AmazonGlueRequest {
    private string _pythonScript;
    public string PythonScript { get; public set; }
    public string get_PythonScript();
    public void set_PythonScript(string value);
    internal bool IsSetPythonScript();
}
public class Amazon.Glue.Model.GetDataflowGraphResponse : AmazonWebServiceResponse {
    private List`1<CodeGenEdge> _dagEdges;
    private List`1<CodeGenNode> _dagNodes;
    public List`1<CodeGenEdge> DagEdges { get; public set; }
    public List`1<CodeGenNode> DagNodes { get; public set; }
    public List`1<CodeGenEdge> get_DagEdges();
    public void set_DagEdges(List`1<CodeGenEdge> value);
    internal bool IsSetDagEdges();
    public List`1<CodeGenNode> get_DagNodes();
    public void set_DagNodes(List`1<CodeGenNode> value);
    internal bool IsSetDagNodes();
}
public class Amazon.Glue.Model.GetDataQualityResultRequest : AmazonGlueRequest {
    private string _resultId;
    [AWSPropertyAttribute]
public string ResultId { get; public set; }
    public string get_ResultId();
    public void set_ResultId(string value);
    internal bool IsSetResultId();
}
public class Amazon.Glue.Model.GetDataQualityResultResponse : AmazonWebServiceResponse {
    private List`1<DataQualityAnalyzerResult> _analyzerResults;
    private Nullable`1<DateTime> _completedOn;
    private DataSource _dataSource;
    private string _evaluationContext;
    private string _jobName;
    private string _jobRunId;
    private List`1<DataQualityObservation> _observations;
    private string _resultId;
    private List`1<DataQualityRuleResult> _ruleResults;
    private string _rulesetEvaluationRunId;
    private string _rulesetName;
    private Nullable`1<double> _score;
    private Nullable`1<DateTime> _startedOn;
    [AWSPropertyAttribute]
public List`1<DataQualityAnalyzerResult> AnalyzerResults { get; public set; }
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public DataSource DataSource { get; public set; }
    public string EvaluationContext { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    [AWSPropertyAttribute]
public List`1<DataQualityObservation> Observations { get; public set; }
    [AWSPropertyAttribute]
public string ResultId { get; public set; }
    [AWSPropertyAttribute]
public List`1<DataQualityRuleResult> RuleResults { get; public set; }
    [AWSPropertyAttribute]
public string RulesetEvaluationRunId { get; public set; }
    [AWSPropertyAttribute]
public string RulesetName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Score { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public List`1<DataQualityAnalyzerResult> get_AnalyzerResults();
    public void set_AnalyzerResults(List`1<DataQualityAnalyzerResult> value);
    internal bool IsSetAnalyzerResults();
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_EvaluationContext();
    public void set_EvaluationContext(string value);
    internal bool IsSetEvaluationContext();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
    public List`1<DataQualityObservation> get_Observations();
    public void set_Observations(List`1<DataQualityObservation> value);
    internal bool IsSetObservations();
    public string get_ResultId();
    public void set_ResultId(string value);
    internal bool IsSetResultId();
    public List`1<DataQualityRuleResult> get_RuleResults();
    public void set_RuleResults(List`1<DataQualityRuleResult> value);
    internal bool IsSetRuleResults();
    public string get_RulesetEvaluationRunId();
    public void set_RulesetEvaluationRunId(string value);
    internal bool IsSetRulesetEvaluationRunId();
    public string get_RulesetName();
    public void set_RulesetName(string value);
    internal bool IsSetRulesetName();
    public Nullable`1<double> get_Score();
    public void set_Score(Nullable`1<double> value);
    internal bool IsSetScore();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
}
public class Amazon.Glue.Model.GetDataQualityRuleRecommendationRunRequest : AmazonGlueRequest {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.GetDataQualityRuleRecommendationRunResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _completedOn;
    private string _createdRulesetName;
    private DataSource _dataSource;
    private string _errorString;
    private Nullable`1<int> _executionTime;
    private Nullable`1<DateTime> _lastModifiedOn;
    private Nullable`1<int> _numberOfWorkers;
    private string _recommendedRuleset;
    private string _role;
    private string _runId;
    private Nullable`1<DateTime> _startedOn;
    private TaskStatusType _status;
    private Nullable`1<int> _timeout;
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    [AWSPropertyAttribute]
public string CreatedRulesetName { get; public set; }
    public DataSource DataSource { get; public set; }
    public string ErrorString { get; public set; }
    public Nullable`1<int> ExecutionTime { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string RecommendedRuleset { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public TaskStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public string get_CreatedRulesetName();
    public void set_CreatedRulesetName(string value);
    internal bool IsSetCreatedRulesetName();
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_ErrorString();
    public void set_ErrorString(string value);
    internal bool IsSetErrorString();
    public Nullable`1<int> get_ExecutionTime();
    public void set_ExecutionTime(Nullable`1<int> value);
    internal bool IsSetExecutionTime();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_RecommendedRuleset();
    public void set_RecommendedRuleset(string value);
    internal bool IsSetRecommendedRuleset();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
}
public class Amazon.Glue.Model.GetDataQualityRulesetEvaluationRunRequest : AmazonGlueRequest {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.GetDataQualityRulesetEvaluationRunResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, DataSource> _additionalDataSources;
    private DataQualityEvaluationRunAdditionalRunOptions _additionalRunOptions;
    private Nullable`1<DateTime> _completedOn;
    private DataSource _dataSource;
    private string _errorString;
    private Nullable`1<int> _executionTime;
    private Nullable`1<DateTime> _lastModifiedOn;
    private Nullable`1<int> _numberOfWorkers;
    private List`1<string> _resultIds;
    private string _role;
    private List`1<string> _rulesetNames;
    private string _runId;
    private Nullable`1<DateTime> _startedOn;
    private TaskStatusType _status;
    private Nullable`1<int> _timeout;
    public Dictionary`2<string, DataSource> AdditionalDataSources { get; public set; }
    public DataQualityEvaluationRunAdditionalRunOptions AdditionalRunOptions { get; public set; }
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public DataSource DataSource { get; public set; }
    public string ErrorString { get; public set; }
    public Nullable`1<int> ExecutionTime { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ResultIds { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RulesetNames { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public TaskStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public Dictionary`2<string, DataSource> get_AdditionalDataSources();
    public void set_AdditionalDataSources(Dictionary`2<string, DataSource> value);
    internal bool IsSetAdditionalDataSources();
    public DataQualityEvaluationRunAdditionalRunOptions get_AdditionalRunOptions();
    public void set_AdditionalRunOptions(DataQualityEvaluationRunAdditionalRunOptions value);
    internal bool IsSetAdditionalRunOptions();
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public string get_ErrorString();
    public void set_ErrorString(string value);
    internal bool IsSetErrorString();
    public Nullable`1<int> get_ExecutionTime();
    public void set_ExecutionTime(Nullable`1<int> value);
    internal bool IsSetExecutionTime();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public List`1<string> get_ResultIds();
    public void set_ResultIds(List`1<string> value);
    internal bool IsSetResultIds();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public List`1<string> get_RulesetNames();
    public void set_RulesetNames(List`1<string> value);
    internal bool IsSetRulesetNames();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
}
public class Amazon.Glue.Model.GetDataQualityRulesetRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetDataQualityRulesetResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdOn;
    private string _description;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _name;
    private string _recommendationRunId;
    private string _ruleset;
    private DataQualityTargetTable _targetTable;
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RecommendationRunId { get; public set; }
    [AWSPropertyAttribute]
public string Ruleset { get; public set; }
    public DataQualityTargetTable TargetTable { get; public set; }
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RecommendationRunId();
    public void set_RecommendationRunId(string value);
    internal bool IsSetRecommendationRunId();
    public string get_Ruleset();
    public void set_Ruleset(string value);
    internal bool IsSetRuleset();
    public DataQualityTargetTable get_TargetTable();
    public void set_TargetTable(DataQualityTargetTable value);
    internal bool IsSetTargetTable();
}
public class Amazon.Glue.Model.GetDevEndpointRequest : AmazonGlueRequest {
    private string _endpointName;
    [AWSPropertyAttribute]
public string EndpointName { get; public set; }
    public string get_EndpointName();
    public void set_EndpointName(string value);
    internal bool IsSetEndpointName();
}
public class Amazon.Glue.Model.GetDevEndpointResponse : AmazonWebServiceResponse {
    private DevEndpoint _devEndpoint;
    public DevEndpoint DevEndpoint { get; public set; }
    public DevEndpoint get_DevEndpoint();
    public void set_DevEndpoint(DevEndpoint value);
    internal bool IsSetDevEndpoint();
}
internal class Amazon.Glue.Model.GetDevEndpointsPaginator : object {
    private IAmazonGlue _client;
    private GetDevEndpointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetDevEndpointsResponse> Responses { get; }
    internal GetDevEndpointsPaginator(IAmazonGlue client, GetDevEndpointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetDevEndpointsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetDevEndpointsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetDevEndpointsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetDevEndpointsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetDevEndpointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetDevEndpointsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetDevEndpointsResponse : AmazonWebServiceResponse {
    private List`1<DevEndpoint> _devEndpoints;
    private string _nextToken;
    public List`1<DevEndpoint> DevEndpoints { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DevEndpoint> get_DevEndpoints();
    public void set_DevEndpoints(List`1<DevEndpoint> value);
    internal bool IsSetDevEndpoints();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetJobBookmarkRequest : AmazonGlueRequest {
    private string _jobName;
    private string _runId;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string RunId { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.GetJobBookmarkResponse : AmazonWebServiceResponse {
    private JobBookmarkEntry _jobBookmarkEntry;
    public JobBookmarkEntry JobBookmarkEntry { get; public set; }
    public JobBookmarkEntry get_JobBookmarkEntry();
    public void set_JobBookmarkEntry(JobBookmarkEntry value);
    internal bool IsSetJobBookmarkEntry();
}
public class Amazon.Glue.Model.GetJobRequest : AmazonGlueRequest {
    private string _jobName;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
}
public class Amazon.Glue.Model.GetJobResponse : AmazonWebServiceResponse {
    private Job _job;
    public Job Job { get; public set; }
    public Job get_Job();
    public void set_Job(Job value);
    internal bool IsSetJob();
}
public class Amazon.Glue.Model.GetJobRunRequest : AmazonGlueRequest {
    private string _jobName;
    private Nullable`1<bool> _predecessorsIncluded;
    private string _runId;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public Nullable`1<bool> PredecessorsIncluded { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public Nullable`1<bool> get_PredecessorsIncluded();
    public void set_PredecessorsIncluded(Nullable`1<bool> value);
    internal bool IsSetPredecessorsIncluded();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.GetJobRunResponse : AmazonWebServiceResponse {
    private JobRun _jobRun;
    public JobRun JobRun { get; public set; }
    public JobRun get_JobRun();
    public void set_JobRun(JobRun value);
    internal bool IsSetJobRun();
}
internal class Amazon.Glue.Model.GetJobRunsPaginator : object {
    private IAmazonGlue _client;
    private GetJobRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetJobRunsResponse> Responses { get; }
    public IPaginatedEnumerable`1<JobRun> JobRuns { get; }
    internal GetJobRunsPaginator(IAmazonGlue client, GetJobRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetJobRunsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<JobRun> get_JobRuns();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetJobRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetJobRunsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetJobRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetJobRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetJobRunsRequest : AmazonGlueRequest {
    private string _jobName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetJobRunsResponse : AmazonWebServiceResponse {
    private List`1<JobRun> _jobRuns;
    private string _nextToken;
    public List`1<JobRun> JobRuns { get; public set; }
    public string NextToken { get; public set; }
    public List`1<JobRun> get_JobRuns();
    public void set_JobRuns(List`1<JobRun> value);
    internal bool IsSetJobRuns();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.GetJobsPaginator : object {
    private IAmazonGlue _client;
    private GetJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetJobsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Job> Jobs { get; }
    internal GetJobsPaginator(IAmazonGlue client, GetJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetJobsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Job> get_Jobs();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetJobsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetJobsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetJobsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetJobsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetJobsResponse : AmazonWebServiceResponse {
    private List`1<Job> _jobs;
    private string _nextToken;
    public List`1<Job> Jobs { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Job> get_Jobs();
    public void set_Jobs(List`1<Job> value);
    internal bool IsSetJobs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetMappingRequest : AmazonGlueRequest {
    private Location _location;
    private List`1<CatalogEntry> _sinks;
    private CatalogEntry _source;
    public Location Location { get; public set; }
    public List`1<CatalogEntry> Sinks { get; public set; }
    [AWSPropertyAttribute]
public CatalogEntry Source { get; public set; }
    public Location get_Location();
    public void set_Location(Location value);
    internal bool IsSetLocation();
    public List`1<CatalogEntry> get_Sinks();
    public void set_Sinks(List`1<CatalogEntry> value);
    internal bool IsSetSinks();
    public CatalogEntry get_Source();
    public void set_Source(CatalogEntry value);
    internal bool IsSetSource();
}
public class Amazon.Glue.Model.GetMappingResponse : AmazonWebServiceResponse {
    private List`1<MappingEntry> _mapping;
    [AWSPropertyAttribute]
public List`1<MappingEntry> Mapping { get; public set; }
    public List`1<MappingEntry> get_Mapping();
    public void set_Mapping(List`1<MappingEntry> value);
    internal bool IsSetMapping();
}
public class Amazon.Glue.Model.GetMLTaskRunRequest : AmazonGlueRequest {
    private string _taskRunId;
    private string _transformId;
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.GetMLTaskRunResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _completedOn;
    private string _errorString;
    private Nullable`1<int> _executionTime;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _logGroupName;
    private TaskRunProperties _properties;
    private Nullable`1<DateTime> _startedOn;
    private TaskStatusType _status;
    private string _taskRunId;
    private string _transformId;
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public string ErrorString { get; public set; }
    public Nullable`1<int> ExecutionTime { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public string LogGroupName { get; public set; }
    public TaskRunProperties Properties { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public TaskStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public string get_ErrorString();
    public void set_ErrorString(string value);
    internal bool IsSetErrorString();
    public Nullable`1<int> get_ExecutionTime();
    public void set_ExecutionTime(Nullable`1<int> value);
    internal bool IsSetExecutionTime();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public TaskRunProperties get_Properties();
    public void set_Properties(TaskRunProperties value);
    internal bool IsSetProperties();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
internal class Amazon.Glue.Model.GetMLTaskRunsPaginator : object {
    private IAmazonGlue _client;
    private GetMLTaskRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetMLTaskRunsResponse> Responses { get; }
    internal GetMLTaskRunsPaginator(IAmazonGlue client, GetMLTaskRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetMLTaskRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetMLTaskRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetMLTaskRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetMLTaskRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetMLTaskRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetMLTaskRunsRequest : AmazonGlueRequest {
    private TaskRunFilterCriteria _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private TaskRunSortCriteria _sort;
    private string _transformId;
    public TaskRunFilterCriteria Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public TaskRunSortCriteria Sort { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public TaskRunFilterCriteria get_Filter();
    public void set_Filter(TaskRunFilterCriteria value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public TaskRunSortCriteria get_Sort();
    public void set_Sort(TaskRunSortCriteria value);
    internal bool IsSetSort();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.GetMLTaskRunsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TaskRun> _taskRuns;
    public string NextToken { get; public set; }
    public List`1<TaskRun> TaskRuns { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TaskRun> get_TaskRuns();
    public void set_TaskRuns(List`1<TaskRun> value);
    internal bool IsSetTaskRuns();
}
public class Amazon.Glue.Model.GetMLTransformRequest : AmazonGlueRequest {
    private string _transformId;
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.GetMLTransformResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdOn;
    private string _description;
    private EvaluationMetrics _evaluationMetrics;
    private string _glueVersion;
    private List`1<GlueTable> _inputRecordTables;
    private Nullable`1<int> _labelCount;
    private Nullable`1<DateTime> _lastModifiedOn;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _maxRetries;
    private string _name;
    private Nullable`1<int> _numberOfWorkers;
    private TransformParameters _parameters;
    private string _role;
    private List`1<SchemaColumn> _schema;
    private TransformStatusType _status;
    private Nullable`1<int> _timeout;
    private TransformEncryption _transformEncryption;
    private string _transformId;
    private WorkerType _workerType;
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EvaluationMetrics EvaluationMetrics { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    [AWSPropertyAttribute]
public List`1<GlueTable> InputRecordTables { get; public set; }
    public Nullable`1<int> LabelCount { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public TransformParameters Parameters { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public List`1<SchemaColumn> Schema { get; public set; }
    public TransformStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TransformEncryption TransformEncryption { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EvaluationMetrics get_EvaluationMetrics();
    public void set_EvaluationMetrics(EvaluationMetrics value);
    internal bool IsSetEvaluationMetrics();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public List`1<GlueTable> get_InputRecordTables();
    public void set_InputRecordTables(List`1<GlueTable> value);
    internal bool IsSetInputRecordTables();
    public Nullable`1<int> get_LabelCount();
    public void set_LabelCount(Nullable`1<int> value);
    internal bool IsSetLabelCount();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MaxRetries();
    public void set_MaxRetries(Nullable`1<int> value);
    internal bool IsSetMaxRetries();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public TransformParameters get_Parameters();
    public void set_Parameters(TransformParameters value);
    internal bool IsSetParameters();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public List`1<SchemaColumn> get_Schema();
    public void set_Schema(List`1<SchemaColumn> value);
    internal bool IsSetSchema();
    public TransformStatusType get_Status();
    public void set_Status(TransformStatusType value);
    internal bool IsSetStatus();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TransformEncryption get_TransformEncryption();
    public void set_TransformEncryption(TransformEncryption value);
    internal bool IsSetTransformEncryption();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
internal class Amazon.Glue.Model.GetMLTransformsPaginator : object {
    private IAmazonGlue _client;
    private GetMLTransformsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetMLTransformsResponse> Responses { get; }
    internal GetMLTransformsPaginator(IAmazonGlue client, GetMLTransformsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetMLTransformsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetMLTransformsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetMLTransformsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetMLTransformsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetMLTransformsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetMLTransformsRequest : AmazonGlueRequest {
    private TransformFilterCriteria _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private TransformSortCriteria _sort;
    public TransformFilterCriteria Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public TransformSortCriteria Sort { get; public set; }
    public TransformFilterCriteria get_Filter();
    public void set_Filter(TransformFilterCriteria value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public TransformSortCriteria get_Sort();
    public void set_Sort(TransformSortCriteria value);
    internal bool IsSetSort();
}
public class Amazon.Glue.Model.GetMLTransformsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MLTransform> _transforms;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<MLTransform> Transforms { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MLTransform> get_Transforms();
    public void set_Transforms(List`1<MLTransform> value);
    internal bool IsSetTransforms();
}
internal class Amazon.Glue.Model.GetPartitionIndexesPaginator : object {
    private IAmazonGlue _client;
    private GetPartitionIndexesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetPartitionIndexesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PartitionIndexDescriptor> PartitionIndexDescriptorList { get; }
    internal GetPartitionIndexesPaginator(IAmazonGlue client, GetPartitionIndexesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetPartitionIndexesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PartitionIndexDescriptor> get_PartitionIndexDescriptorList();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetPartitionIndexesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetPartitionIndexesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetPartitionIndexesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetPartitionIndexesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetPartitionIndexesRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _nextToken;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetPartitionIndexesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PartitionIndexDescriptor> _partitionIndexDescriptorList;
    public string NextToken { get; public set; }
    public List`1<PartitionIndexDescriptor> PartitionIndexDescriptorList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PartitionIndexDescriptor> get_PartitionIndexDescriptorList();
    public void set_PartitionIndexDescriptorList(List`1<PartitionIndexDescriptor> value);
    internal bool IsSetPartitionIndexDescriptorList();
}
public class Amazon.Glue.Model.GetPartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private List`1<string> _partitionValues;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValues { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<string> get_PartitionValues();
    public void set_PartitionValues(List`1<string> value);
    internal bool IsSetPartitionValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetPartitionResponse : AmazonWebServiceResponse {
    private Partition _partition;
    public Partition Partition { get; public set; }
    public Partition get_Partition();
    public void set_Partition(Partition value);
    internal bool IsSetPartition();
}
internal class Amazon.Glue.Model.GetPartitionsPaginator : object {
    private IAmazonGlue _client;
    private GetPartitionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetPartitionsResponse> Responses { get; }
    internal GetPartitionsPaginator(IAmazonGlue client, GetPartitionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetPartitionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetPartitionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetPartitionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetPartitionsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetPartitionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetPartitionsRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private Nullable`1<bool> _excludeColumnSchema;
    private string _expression;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _queryAsOfTime;
    private Segment _segment;
    private string _tableName;
    private string _transactionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public Nullable`1<bool> ExcludeColumnSchema { get; public set; }
    [AWSPropertyAttribute]
public string Expression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> QueryAsOfTime { get; public set; }
    public Segment Segment { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public string TransactionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_ExcludeColumnSchema();
    public void set_ExcludeColumnSchema(Nullable`1<bool> value);
    internal bool IsSetExcludeColumnSchema();
    public string get_Expression();
    public void set_Expression(string value);
    internal bool IsSetExpression();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_QueryAsOfTime();
    public void set_QueryAsOfTime(Nullable`1<DateTime> value);
    internal bool IsSetQueryAsOfTime();
    public Segment get_Segment();
    public void set_Segment(Segment value);
    internal bool IsSetSegment();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    internal bool IsSetTransactionId();
}
public class Amazon.Glue.Model.GetPartitionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Partition> _partitions;
    public string NextToken { get; public set; }
    public List`1<Partition> Partitions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Partition> get_Partitions();
    public void set_Partitions(List`1<Partition> value);
    internal bool IsSetPartitions();
}
public class Amazon.Glue.Model.GetPlanRequest : AmazonGlueRequest {
    private Dictionary`2<string, string> _additionalPlanOptionsMap;
    private Language _language;
    private Location _location;
    private List`1<MappingEntry> _mapping;
    private List`1<CatalogEntry> _sinks;
    private CatalogEntry _source;
    public Dictionary`2<string, string> AdditionalPlanOptionsMap { get; public set; }
    public Language Language { get; public set; }
    public Location Location { get; public set; }
    [AWSPropertyAttribute]
public List`1<MappingEntry> Mapping { get; public set; }
    public List`1<CatalogEntry> Sinks { get; public set; }
    [AWSPropertyAttribute]
public CatalogEntry Source { get; public set; }
    public Dictionary`2<string, string> get_AdditionalPlanOptionsMap();
    public void set_AdditionalPlanOptionsMap(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalPlanOptionsMap();
    public Language get_Language();
    public void set_Language(Language value);
    internal bool IsSetLanguage();
    public Location get_Location();
    public void set_Location(Location value);
    internal bool IsSetLocation();
    public List`1<MappingEntry> get_Mapping();
    public void set_Mapping(List`1<MappingEntry> value);
    internal bool IsSetMapping();
    public List`1<CatalogEntry> get_Sinks();
    public void set_Sinks(List`1<CatalogEntry> value);
    internal bool IsSetSinks();
    public CatalogEntry get_Source();
    public void set_Source(CatalogEntry value);
    internal bool IsSetSource();
}
public class Amazon.Glue.Model.GetPlanResponse : AmazonWebServiceResponse {
    private string _pythonScript;
    private string _scalaCode;
    public string PythonScript { get; public set; }
    public string ScalaCode { get; public set; }
    public string get_PythonScript();
    public void set_PythonScript(string value);
    internal bool IsSetPythonScript();
    public string get_ScalaCode();
    public void set_ScalaCode(string value);
    internal bool IsSetScalaCode();
}
public class Amazon.Glue.Model.GetRegistryRequest : AmazonGlueRequest {
    private RegistryId _registryId;
    [AWSPropertyAttribute]
public RegistryId RegistryId { get; public set; }
    public RegistryId get_RegistryId();
    public void set_RegistryId(RegistryId value);
    internal bool IsSetRegistryId();
}
public class Amazon.Glue.Model.GetRegistryResponse : AmazonWebServiceResponse {
    private string _createdTime;
    private string _description;
    private string _registryArn;
    private string _registryName;
    private RegistryStatus _status;
    private string _updatedTime;
    public string CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    public RegistryStatus Status { get; public set; }
    public string UpdatedTime { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public RegistryStatus get_Status();
    public void set_Status(RegistryStatus value);
    internal bool IsSetStatus();
    public string get_UpdatedTime();
    public void set_UpdatedTime(string value);
    internal bool IsSetUpdatedTime();
}
internal class Amazon.Glue.Model.GetResourcePoliciesPaginator : object {
    private IAmazonGlue _client;
    private GetResourcePoliciesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetResourcePoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<GluePolicy> GetResourcePoliciesResponseList { get; }
    internal GetResourcePoliciesPaginator(IAmazonGlue client, GetResourcePoliciesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetResourcePoliciesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<GluePolicy> get_GetResourcePoliciesResponseList();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetResourcePoliciesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetResourcePoliciesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetResourcePoliciesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetResourcePoliciesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetResourcePoliciesRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetResourcePoliciesResponse : AmazonWebServiceResponse {
    private List`1<GluePolicy> _getResourcePoliciesResponseList;
    private string _nextToken;
    public List`1<GluePolicy> GetResourcePoliciesResponseList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<GluePolicy> get_GetResourcePoliciesResponseList();
    public void set_GetResourcePoliciesResponseList(List`1<GluePolicy> value);
    internal bool IsSetGetResourcePoliciesResponseList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetResourcePolicyRequest : AmazonGlueRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.Glue.Model.GetResourcePolicyResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createTime;
    private string _policyHash;
    private string _policyInJson;
    private Nullable`1<DateTime> _updateTime;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string PolicyHash { get; public set; }
    [AWSPropertyAttribute]
public string PolicyInJson { get; public set; }
    public Nullable`1<DateTime> UpdateTime { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_PolicyHash();
    public void set_PolicyHash(string value);
    internal bool IsSetPolicyHash();
    public string get_PolicyInJson();
    public void set_PolicyInJson(string value);
    internal bool IsSetPolicyInJson();
    public Nullable`1<DateTime> get_UpdateTime();
    public void set_UpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdateTime();
}
public class Amazon.Glue.Model.GetSchemaByDefinitionRequest : AmazonGlueRequest {
    private string _schemaDefinition;
    private SchemaId _schemaId;
    [AWSPropertyAttribute]
public string SchemaDefinition { get; public set; }
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    public string get_SchemaDefinition();
    public void set_SchemaDefinition(string value);
    internal bool IsSetSchemaDefinition();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
}
public class Amazon.Glue.Model.GetSchemaByDefinitionResponse : AmazonWebServiceResponse {
    private string _createdTime;
    private DataFormat _dataFormat;
    private string _schemaArn;
    private string _schemaVersionId;
    private SchemaVersionStatus _status;
    public string CreatedTime { get; public set; }
    public DataFormat DataFormat { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionStatus Status { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public DataFormat get_DataFormat();
    public void set_DataFormat(DataFormat value);
    internal bool IsSetDataFormat();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionStatus get_Status();
    public void set_Status(SchemaVersionStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Glue.Model.GetSchemaRequest : AmazonGlueRequest {
    private SchemaId _schemaId;
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
}
public class Amazon.Glue.Model.GetSchemaResponse : AmazonWebServiceResponse {
    private Compatibility _compatibility;
    private string _createdTime;
    private DataFormat _dataFormat;
    private string _description;
    private Nullable`1<long> _latestSchemaVersion;
    private Nullable`1<long> _nextSchemaVersion;
    private string _registryArn;
    private string _registryName;
    private string _schemaArn;
    private Nullable`1<long> _schemaCheckpoint;
    private string _schemaName;
    private SchemaStatus _schemaStatus;
    private string _updatedTime;
    public Compatibility Compatibility { get; public set; }
    public string CreatedTime { get; public set; }
    public DataFormat DataFormat { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> LatestSchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NextSchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SchemaCheckpoint { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    public SchemaStatus SchemaStatus { get; public set; }
    public string UpdatedTime { get; public set; }
    public Compatibility get_Compatibility();
    public void set_Compatibility(Compatibility value);
    internal bool IsSetCompatibility();
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public DataFormat get_DataFormat();
    public void set_DataFormat(DataFormat value);
    internal bool IsSetDataFormat();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<long> get_LatestSchemaVersion();
    public void set_LatestSchemaVersion(Nullable`1<long> value);
    internal bool IsSetLatestSchemaVersion();
    public Nullable`1<long> get_NextSchemaVersion();
    public void set_NextSchemaVersion(Nullable`1<long> value);
    internal bool IsSetNextSchemaVersion();
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public Nullable`1<long> get_SchemaCheckpoint();
    public void set_SchemaCheckpoint(Nullable`1<long> value);
    internal bool IsSetSchemaCheckpoint();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public SchemaStatus get_SchemaStatus();
    public void set_SchemaStatus(SchemaStatus value);
    internal bool IsSetSchemaStatus();
    public string get_UpdatedTime();
    public void set_UpdatedTime(string value);
    internal bool IsSetUpdatedTime();
}
public class Amazon.Glue.Model.GetSchemaVersionRequest : AmazonGlueRequest {
    private SchemaId _schemaId;
    private string _schemaVersionId;
    private SchemaVersionNumber _schemaVersionNumber;
    public SchemaId SchemaId { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionNumber SchemaVersionNumber { get; public set; }
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionNumber get_SchemaVersionNumber();
    public void set_SchemaVersionNumber(SchemaVersionNumber value);
    internal bool IsSetSchemaVersionNumber();
}
public class Amazon.Glue.Model.GetSchemaVersionResponse : AmazonWebServiceResponse {
    private string _createdTime;
    private DataFormat _dataFormat;
    private string _schemaArn;
    private string _schemaDefinition;
    private string _schemaVersionId;
    private SchemaVersionStatus _status;
    private Nullable`1<long> _versionNumber;
    public string CreatedTime { get; public set; }
    public DataFormat DataFormat { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaDefinition { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public DataFormat get_DataFormat();
    public void set_DataFormat(DataFormat value);
    internal bool IsSetDataFormat();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaDefinition();
    public void set_SchemaDefinition(string value);
    internal bool IsSetSchemaDefinition();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionStatus get_Status();
    public void set_Status(SchemaVersionStatus value);
    internal bool IsSetStatus();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Glue.Model.GetSchemaVersionsDiffRequest : AmazonGlueRequest {
    private SchemaVersionNumber _firstSchemaVersionNumber;
    private SchemaDiffType _schemaDiffType;
    private SchemaId _schemaId;
    private SchemaVersionNumber _secondSchemaVersionNumber;
    [AWSPropertyAttribute]
public SchemaVersionNumber FirstSchemaVersionNumber { get; public set; }
    [AWSPropertyAttribute]
public SchemaDiffType SchemaDiffType { get; public set; }
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    [AWSPropertyAttribute]
public SchemaVersionNumber SecondSchemaVersionNumber { get; public set; }
    public SchemaVersionNumber get_FirstSchemaVersionNumber();
    public void set_FirstSchemaVersionNumber(SchemaVersionNumber value);
    internal bool IsSetFirstSchemaVersionNumber();
    public SchemaDiffType get_SchemaDiffType();
    public void set_SchemaDiffType(SchemaDiffType value);
    internal bool IsSetSchemaDiffType();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public SchemaVersionNumber get_SecondSchemaVersionNumber();
    public void set_SecondSchemaVersionNumber(SchemaVersionNumber value);
    internal bool IsSetSecondSchemaVersionNumber();
}
public class Amazon.Glue.Model.GetSchemaVersionsDiffResponse : AmazonWebServiceResponse {
    private string _diff;
    [AWSPropertyAttribute]
public string Diff { get; public set; }
    public string get_Diff();
    public void set_Diff(string value);
    internal bool IsSetDiff();
}
public class Amazon.Glue.Model.GetSecurityConfigurationRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetSecurityConfigurationResponse : AmazonWebServiceResponse {
    private SecurityConfiguration _securityConfiguration;
    public SecurityConfiguration SecurityConfiguration { get; public set; }
    public SecurityConfiguration get_SecurityConfiguration();
    public void set_SecurityConfiguration(SecurityConfiguration value);
    internal bool IsSetSecurityConfiguration();
}
internal class Amazon.Glue.Model.GetSecurityConfigurationsPaginator : object {
    private IAmazonGlue _client;
    private GetSecurityConfigurationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetSecurityConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityConfiguration> SecurityConfigurations { get; }
    internal GetSecurityConfigurationsPaginator(IAmazonGlue client, GetSecurityConfigurationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetSecurityConfigurationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SecurityConfiguration> get_SecurityConfigurations();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetSecurityConfigurationsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetSecurityConfigurationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetSecurityConfigurationsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetSecurityConfigurationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetSecurityConfigurationsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetSecurityConfigurationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SecurityConfiguration> _securityConfigurations;
    public string NextToken { get; public set; }
    public List`1<SecurityConfiguration> SecurityConfigurations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SecurityConfiguration> get_SecurityConfigurations();
    public void set_SecurityConfigurations(List`1<SecurityConfiguration> value);
    internal bool IsSetSecurityConfigurations();
}
public class Amazon.Glue.Model.GetSessionRequest : AmazonGlueRequest {
    private string _id;
    private string _requestOrigin;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
}
public class Amazon.Glue.Model.GetSessionResponse : AmazonWebServiceResponse {
    private Session _session;
    public Session Session { get; public set; }
    public Session get_Session();
    public void set_Session(Session value);
    internal bool IsSetSession();
}
public class Amazon.Glue.Model.GetStatementRequest : AmazonGlueRequest {
    private Nullable`1<int> _id;
    private string _requestOrigin;
    private string _sessionId;
    [AWSPropertyAttribute]
public Nullable`1<int> Id { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public Nullable`1<int> get_Id();
    public void set_Id(Nullable`1<int> value);
    internal bool IsSetId();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.Glue.Model.GetStatementResponse : AmazonWebServiceResponse {
    private Statement _statement;
    public Statement Statement { get; public set; }
    public Statement get_Statement();
    public void set_Statement(Statement value);
    internal bool IsSetStatement();
}
public class Amazon.Glue.Model.GetTableOptimizerRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private TableOptimizerType _type;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public TableOptimizerType Type { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.GetTableOptimizerResponse : AmazonWebServiceResponse {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private TableOptimizer _tableOptimizer;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public TableOptimizer TableOptimizer { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizer get_TableOptimizer();
    public void set_TableOptimizer(TableOptimizer value);
    internal bool IsSetTableOptimizer();
}
public class Amazon.Glue.Model.GetTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _name;
    private Nullable`1<DateTime> _queryAsOfTime;
    private string _transactionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<DateTime> QueryAsOfTime { get; public set; }
    [AWSPropertyAttribute]
public string TransactionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<DateTime> get_QueryAsOfTime();
    public void set_QueryAsOfTime(Nullable`1<DateTime> value);
    internal bool IsSetQueryAsOfTime();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    internal bool IsSetTransactionId();
}
public class Amazon.Glue.Model.GetTableResponse : AmazonWebServiceResponse {
    private Table _table;
    public Table Table { get; public set; }
    public Table get_Table();
    public void set_Table(Table value);
    internal bool IsSetTable();
}
internal class Amazon.Glue.Model.GetTablesPaginator : object {
    private IAmazonGlue _client;
    private GetTablesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTablesResponse> Responses { get; }
    internal GetTablesPaginator(IAmazonGlue client, GetTablesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTablesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetTablesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetTablesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetTablesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetTablesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetTablesRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _expression;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _queryAsOfTime;
    private string _transactionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Expression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> QueryAsOfTime { get; public set; }
    [AWSPropertyAttribute]
public string TransactionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Expression();
    public void set_Expression(string value);
    internal bool IsSetExpression();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_QueryAsOfTime();
    public void set_QueryAsOfTime(Nullable`1<DateTime> value);
    internal bool IsSetQueryAsOfTime();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    internal bool IsSetTransactionId();
}
public class Amazon.Glue.Model.GetTablesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Table> _tableList;
    public string NextToken { get; public set; }
    public List`1<Table> TableList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Table> get_TableList();
    public void set_TableList(List`1<Table> value);
    internal bool IsSetTableList();
}
public class Amazon.Glue.Model.GetTableVersionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private string _versionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.Glue.Model.GetTableVersionResponse : AmazonWebServiceResponse {
    private TableVersion _tableVersion;
    public TableVersion TableVersion { get; public set; }
    public TableVersion get_TableVersion();
    public void set_TableVersion(TableVersion value);
    internal bool IsSetTableVersion();
}
internal class Amazon.Glue.Model.GetTableVersionsPaginator : object {
    private IAmazonGlue _client;
    private GetTableVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTableVersionsResponse> Responses { get; }
    internal GetTableVersionsPaginator(IAmazonGlue client, GetTableVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTableVersionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetTableVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetTableVersionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetTableVersionsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetTableVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetTableVersionsRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetTableVersionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TableVersion> _tableVersions;
    public string NextToken { get; public set; }
    public List`1<TableVersion> TableVersions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TableVersion> get_TableVersions();
    public void set_TableVersions(List`1<TableVersion> value);
    internal bool IsSetTableVersions();
}
public class Amazon.Glue.Model.GetTagsRequest : AmazonGlueRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.Glue.Model.GetTagsResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.GetTriggerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetTriggerResponse : AmazonWebServiceResponse {
    private Trigger _trigger;
    public Trigger Trigger { get; public set; }
    public Trigger get_Trigger();
    public void set_Trigger(Trigger value);
    internal bool IsSetTrigger();
}
internal class Amazon.Glue.Model.GetTriggersPaginator : object {
    private IAmazonGlue _client;
    private GetTriggersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTriggersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Trigger> Triggers { get; }
    internal GetTriggersPaginator(IAmazonGlue client, GetTriggersRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTriggersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Trigger> get_Triggers();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetTriggersPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetTriggersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetTriggersResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetTriggersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetTriggersRequest : AmazonGlueRequest {
    private string _dependentJobName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string DependentJobName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_DependentJobName();
    public void set_DependentJobName(string value);
    internal bool IsSetDependentJobName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetTriggersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Trigger> _triggers;
    public string NextToken { get; public set; }
    public List`1<Trigger> Triggers { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Trigger> get_Triggers();
    public void set_Triggers(List`1<Trigger> value);
    internal bool IsSetTriggers();
}
public class Amazon.Glue.Model.GetUnfilteredPartitionMetadataRequest : AmazonGlueRequest {
    private AuditContext _auditContext;
    private string _catalogId;
    private string _databaseName;
    private List`1<string> _partitionValues;
    private QuerySessionContext _querySessionContext;
    private string _region;
    private List`1<string> _supportedPermissionTypes;
    private string _tableName;
    public AuditContext AuditContext { get; public set; }
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValues { get; public set; }
    public QuerySessionContext QuerySessionContext { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SupportedPermissionTypes { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public AuditContext get_AuditContext();
    public void set_AuditContext(AuditContext value);
    internal bool IsSetAuditContext();
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<string> get_PartitionValues();
    public void set_PartitionValues(List`1<string> value);
    internal bool IsSetPartitionValues();
    public QuerySessionContext get_QuerySessionContext();
    public void set_QuerySessionContext(QuerySessionContext value);
    internal bool IsSetQuerySessionContext();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public List`1<string> get_SupportedPermissionTypes();
    public void set_SupportedPermissionTypes(List`1<string> value);
    internal bool IsSetSupportedPermissionTypes();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetUnfilteredPartitionMetadataResponse : AmazonWebServiceResponse {
    private List`1<string> _authorizedColumns;
    private Nullable`1<bool> _isRegisteredWithLakeFormation;
    private Partition _partition;
    public List`1<string> AuthorizedColumns { get; public set; }
    public Nullable`1<bool> IsRegisteredWithLakeFormation { get; public set; }
    public Partition Partition { get; public set; }
    public List`1<string> get_AuthorizedColumns();
    public void set_AuthorizedColumns(List`1<string> value);
    internal bool IsSetAuthorizedColumns();
    public Nullable`1<bool> get_IsRegisteredWithLakeFormation();
    public void set_IsRegisteredWithLakeFormation(Nullable`1<bool> value);
    internal bool IsSetIsRegisteredWithLakeFormation();
    public Partition get_Partition();
    public void set_Partition(Partition value);
    internal bool IsSetPartition();
}
internal class Amazon.Glue.Model.GetUnfilteredPartitionsMetadataPaginator : object {
    private IAmazonGlue _client;
    private GetUnfilteredPartitionsMetadataRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetUnfilteredPartitionsMetadataResponse> Responses { get; }
    internal GetUnfilteredPartitionsMetadataPaginator(IAmazonGlue client, GetUnfilteredPartitionsMetadataRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetUnfilteredPartitionsMetadataResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetUnfilteredPartitionsMetadataPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetUnfilteredPartitionsMetadataResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetUnfilteredPartitionsMetadataResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetUnfilteredPartitionsMetadataResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetUnfilteredPartitionsMetadataRequest : AmazonGlueRequest {
    private AuditContext _auditContext;
    private string _catalogId;
    private string _databaseName;
    private string _expression;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private QuerySessionContext _querySessionContext;
    private string _region;
    private Segment _segment;
    private List`1<string> _supportedPermissionTypes;
    private string _tableName;
    public AuditContext AuditContext { get; public set; }
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Expression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public QuerySessionContext QuerySessionContext { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public Segment Segment { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SupportedPermissionTypes { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public AuditContext get_AuditContext();
    public void set_AuditContext(AuditContext value);
    internal bool IsSetAuditContext();
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Expression();
    public void set_Expression(string value);
    internal bool IsSetExpression();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public QuerySessionContext get_QuerySessionContext();
    public void set_QuerySessionContext(QuerySessionContext value);
    internal bool IsSetQuerySessionContext();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public Segment get_Segment();
    public void set_Segment(Segment value);
    internal bool IsSetSegment();
    public List`1<string> get_SupportedPermissionTypes();
    public void set_SupportedPermissionTypes(List`1<string> value);
    internal bool IsSetSupportedPermissionTypes();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GetUnfilteredPartitionsMetadataResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<UnfilteredPartition> _unfilteredPartitions;
    public string NextToken { get; public set; }
    public List`1<UnfilteredPartition> UnfilteredPartitions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<UnfilteredPartition> get_UnfilteredPartitions();
    public void set_UnfilteredPartitions(List`1<UnfilteredPartition> value);
    internal bool IsSetUnfilteredPartitions();
}
public class Amazon.Glue.Model.GetUnfilteredTableMetadataRequest : AmazonGlueRequest {
    private AuditContext _auditContext;
    private string _catalogId;
    private string _databaseName;
    private string _name;
    private string _parentResourceArn;
    private List`1<string> _permissions;
    private QuerySessionContext _querySessionContext;
    private string _region;
    private string _rootResourceArn;
    private SupportedDialect _supportedDialect;
    private List`1<string> _supportedPermissionTypes;
    public AuditContext AuditContext { get; public set; }
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string ParentResourceArn { get; public set; }
    public List`1<string> Permissions { get; public set; }
    public QuerySessionContext QuerySessionContext { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    [AWSPropertyAttribute]
public string RootResourceArn { get; public set; }
    public SupportedDialect SupportedDialect { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SupportedPermissionTypes { get; public set; }
    public AuditContext get_AuditContext();
    public void set_AuditContext(AuditContext value);
    internal bool IsSetAuditContext();
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_ParentResourceArn();
    public void set_ParentResourceArn(string value);
    internal bool IsSetParentResourceArn();
    public List`1<string> get_Permissions();
    public void set_Permissions(List`1<string> value);
    internal bool IsSetPermissions();
    public QuerySessionContext get_QuerySessionContext();
    public void set_QuerySessionContext(QuerySessionContext value);
    internal bool IsSetQuerySessionContext();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public string get_RootResourceArn();
    public void set_RootResourceArn(string value);
    internal bool IsSetRootResourceArn();
    public SupportedDialect get_SupportedDialect();
    public void set_SupportedDialect(SupportedDialect value);
    internal bool IsSetSupportedDialect();
    public List`1<string> get_SupportedPermissionTypes();
    public void set_SupportedPermissionTypes(List`1<string> value);
    internal bool IsSetSupportedPermissionTypes();
}
public class Amazon.Glue.Model.GetUnfilteredTableMetadataResponse : AmazonWebServiceResponse {
    private List`1<string> _authorizedColumns;
    private List`1<ColumnRowFilter> _cellFilters;
    private Nullable`1<bool> _isMultiDialectView;
    private Nullable`1<bool> _isProtected;
    private Nullable`1<bool> _isRegisteredWithLakeFormation;
    private List`1<string> _permissions;
    private string _queryAuthorizationId;
    private string _resourceArn;
    private string _rowFilter;
    private Table _table;
    public List`1<string> AuthorizedColumns { get; public set; }
    public List`1<ColumnRowFilter> CellFilters { get; public set; }
    public Nullable`1<bool> IsMultiDialectView { get; public set; }
    public Nullable`1<bool> IsProtected { get; public set; }
    public Nullable`1<bool> IsRegisteredWithLakeFormation { get; public set; }
    public List`1<string> Permissions { get; public set; }
    [AWSPropertyAttribute]
public string QueryAuthorizationId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public string RowFilter { get; public set; }
    public Table Table { get; public set; }
    public List`1<string> get_AuthorizedColumns();
    public void set_AuthorizedColumns(List`1<string> value);
    internal bool IsSetAuthorizedColumns();
    public List`1<ColumnRowFilter> get_CellFilters();
    public void set_CellFilters(List`1<ColumnRowFilter> value);
    internal bool IsSetCellFilters();
    public Nullable`1<bool> get_IsMultiDialectView();
    public void set_IsMultiDialectView(Nullable`1<bool> value);
    internal bool IsSetIsMultiDialectView();
    public Nullable`1<bool> get_IsProtected();
    public void set_IsProtected(Nullable`1<bool> value);
    internal bool IsSetIsProtected();
    public Nullable`1<bool> get_IsRegisteredWithLakeFormation();
    public void set_IsRegisteredWithLakeFormation(Nullable`1<bool> value);
    internal bool IsSetIsRegisteredWithLakeFormation();
    public List`1<string> get_Permissions();
    public void set_Permissions(List`1<string> value);
    internal bool IsSetPermissions();
    public string get_QueryAuthorizationId();
    public void set_QueryAuthorizationId(string value);
    internal bool IsSetQueryAuthorizationId();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_RowFilter();
    public void set_RowFilter(string value);
    internal bool IsSetRowFilter();
    public Table get_Table();
    public void set_Table(Table value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.GetUsageProfileRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetUsageProfileResponse : AmazonWebServiceResponse {
    private ProfileConfiguration _configuration;
    private Nullable`1<DateTime> _createdOn;
    private string _description;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _name;
    public ProfileConfiguration Configuration { get; public set; }
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ProfileConfiguration get_Configuration();
    public void set_Configuration(ProfileConfiguration value);
    internal bool IsSetConfiguration();
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetUserDefinedFunctionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _functionName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Glue.Model.GetUserDefinedFunctionResponse : AmazonWebServiceResponse {
    private UserDefinedFunction _userDefinedFunction;
    public UserDefinedFunction UserDefinedFunction { get; public set; }
    public UserDefinedFunction get_UserDefinedFunction();
    public void set_UserDefinedFunction(UserDefinedFunction value);
    internal bool IsSetUserDefinedFunction();
}
internal class Amazon.Glue.Model.GetUserDefinedFunctionsPaginator : object {
    private IAmazonGlue _client;
    private GetUserDefinedFunctionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetUserDefinedFunctionsResponse> Responses { get; }
    internal GetUserDefinedFunctionsPaginator(IAmazonGlue client, GetUserDefinedFunctionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetUserDefinedFunctionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetUserDefinedFunctionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetUserDefinedFunctionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetUserDefinedFunctionsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetUserDefinedFunctionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetUserDefinedFunctionsRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _pattern;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string Pattern { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_Pattern();
    public void set_Pattern(string value);
    internal bool IsSetPattern();
}
public class Amazon.Glue.Model.GetUserDefinedFunctionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<UserDefinedFunction> _userDefinedFunctions;
    public string NextToken { get; public set; }
    public List`1<UserDefinedFunction> UserDefinedFunctions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<UserDefinedFunction> get_UserDefinedFunctions();
    public void set_UserDefinedFunctions(List`1<UserDefinedFunction> value);
    internal bool IsSetUserDefinedFunctions();
}
public class Amazon.Glue.Model.GetWorkflowRequest : AmazonGlueRequest {
    private Nullable`1<bool> _includeGraph;
    private string _name;
    public Nullable`1<bool> IncludeGraph { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> get_IncludeGraph();
    public void set_IncludeGraph(Nullable`1<bool> value);
    internal bool IsSetIncludeGraph();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.GetWorkflowResponse : AmazonWebServiceResponse {
    private Workflow _workflow;
    public Workflow Workflow { get; public set; }
    public Workflow get_Workflow();
    public void set_Workflow(Workflow value);
    internal bool IsSetWorkflow();
}
public class Amazon.Glue.Model.GetWorkflowRunPropertiesRequest : AmazonGlueRequest {
    private string _name;
    private string _runId;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.GetWorkflowRunPropertiesResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _runProperties;
    public Dictionary`2<string, string> RunProperties { get; public set; }
    public Dictionary`2<string, string> get_RunProperties();
    public void set_RunProperties(Dictionary`2<string, string> value);
    internal bool IsSetRunProperties();
}
public class Amazon.Glue.Model.GetWorkflowRunRequest : AmazonGlueRequest {
    private Nullable`1<bool> _includeGraph;
    private string _name;
    private string _runId;
    public Nullable`1<bool> IncludeGraph { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public Nullable`1<bool> get_IncludeGraph();
    public void set_IncludeGraph(Nullable`1<bool> value);
    internal bool IsSetIncludeGraph();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.GetWorkflowRunResponse : AmazonWebServiceResponse {
    private WorkflowRun _run;
    public WorkflowRun Run { get; public set; }
    public WorkflowRun get_Run();
    public void set_Run(WorkflowRun value);
    internal bool IsSetRun();
}
internal class Amazon.Glue.Model.GetWorkflowRunsPaginator : object {
    private IAmazonGlue _client;
    private GetWorkflowRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetWorkflowRunsResponse> Responses { get; }
    public IPaginatedEnumerable`1<WorkflowRun> Runs { get; }
    internal GetWorkflowRunsPaginator(IAmazonGlue client, GetWorkflowRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetWorkflowRunsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<WorkflowRun> get_Runs();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.GetWorkflowRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-GetWorkflowRunsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetWorkflowRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.GetWorkflowRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.GetWorkflowRunsRequest : AmazonGlueRequest {
    private Nullable`1<bool> _includeGraph;
    private Nullable`1<int> _maxResults;
    private string _name;
    private string _nextToken;
    public Nullable`1<bool> IncludeGraph { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<bool> get_IncludeGraph();
    public void set_IncludeGraph(Nullable`1<bool> value);
    internal bool IsSetIncludeGraph();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.GetWorkflowRunsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<WorkflowRun> _runs;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<WorkflowRun> Runs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<WorkflowRun> get_Runs();
    public void set_Runs(List`1<WorkflowRun> value);
    internal bool IsSetRuns();
}
public class Amazon.Glue.Model.GlueEncryptionException : AmazonGlueException {
    public GlueEncryptionException(string message);
    public GlueEncryptionException(string message, Exception innerException);
    public GlueEncryptionException(Exception innerException);
    public GlueEncryptionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public GlueEncryptionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.GluePaginatorFactory : object {
    private IAmazonGlue client;
    internal GluePaginatorFactory(IAmazonGlue client);
    public sealed virtual IGetBlueprintRunsPaginator GetBlueprintRuns(GetBlueprintRunsRequest request);
    public sealed virtual IGetClassifiersPaginator GetClassifiers(GetClassifiersRequest request);
    public sealed virtual IGetColumnStatisticsTaskRunsPaginator GetColumnStatisticsTaskRuns(GetColumnStatisticsTaskRunsRequest request);
    public sealed virtual IGetConnectionsPaginator GetConnections(GetConnectionsRequest request);
    public sealed virtual IGetCrawlerMetricsPaginator GetCrawlerMetrics(GetCrawlerMetricsRequest request);
    public sealed virtual IGetCrawlersPaginator GetCrawlers(GetCrawlersRequest request);
    public sealed virtual IGetDatabasesPaginator GetDatabases(GetDatabasesRequest request);
    public sealed virtual IGetDevEndpointsPaginator GetDevEndpoints(GetDevEndpointsRequest request);
    public sealed virtual IGetJobRunsPaginator GetJobRuns(GetJobRunsRequest request);
    public sealed virtual IGetJobsPaginator GetJobs(GetJobsRequest request);
    public sealed virtual IGetMLTaskRunsPaginator GetMLTaskRuns(GetMLTaskRunsRequest request);
    public sealed virtual IGetMLTransformsPaginator GetMLTransforms(GetMLTransformsRequest request);
    public sealed virtual IGetPartitionIndexesPaginator GetPartitionIndexes(GetPartitionIndexesRequest request);
    public sealed virtual IGetPartitionsPaginator GetPartitions(GetPartitionsRequest request);
    public sealed virtual IGetResourcePoliciesPaginator GetResourcePolicies(GetResourcePoliciesRequest request);
    public sealed virtual IGetSecurityConfigurationsPaginator GetSecurityConfigurations(GetSecurityConfigurationsRequest request);
    public sealed virtual IGetTablesPaginator GetTables(GetTablesRequest request);
    public sealed virtual IGetTableVersionsPaginator GetTableVersions(GetTableVersionsRequest request);
    public sealed virtual IGetTriggersPaginator GetTriggers(GetTriggersRequest request);
    public sealed virtual IGetUnfilteredPartitionsMetadataPaginator GetUnfilteredPartitionsMetadata(GetUnfilteredPartitionsMetadataRequest request);
    public sealed virtual IGetUserDefinedFunctionsPaginator GetUserDefinedFunctions(GetUserDefinedFunctionsRequest request);
    public sealed virtual IGetWorkflowRunsPaginator GetWorkflowRuns(GetWorkflowRunsRequest request);
    public sealed virtual IListBlueprintsPaginator ListBlueprints(ListBlueprintsRequest request);
    public sealed virtual IListColumnStatisticsTaskRunsPaginator ListColumnStatisticsTaskRuns(ListColumnStatisticsTaskRunsRequest request);
    public sealed virtual IListCrawlersPaginator ListCrawlers(ListCrawlersRequest request);
    public sealed virtual IListCustomEntityTypesPaginator ListCustomEntityTypes(ListCustomEntityTypesRequest request);
    public sealed virtual IListDataQualityResultsPaginator ListDataQualityResults(ListDataQualityResultsRequest request);
    public sealed virtual IListDataQualityRuleRecommendationRunsPaginator ListDataQualityRuleRecommendationRuns(ListDataQualityRuleRecommendationRunsRequest request);
    public sealed virtual IListDataQualityRulesetEvaluationRunsPaginator ListDataQualityRulesetEvaluationRuns(ListDataQualityRulesetEvaluationRunsRequest request);
    public sealed virtual IListDataQualityRulesetsPaginator ListDataQualityRulesets(ListDataQualityRulesetsRequest request);
    public sealed virtual IListDevEndpointsPaginator ListDevEndpoints(ListDevEndpointsRequest request);
    public sealed virtual IListJobsPaginator ListJobs(ListJobsRequest request);
    public sealed virtual IListMLTransformsPaginator ListMLTransforms(ListMLTransformsRequest request);
    public sealed virtual IListRegistriesPaginator ListRegistries(ListRegistriesRequest request);
    public sealed virtual IListSchemasPaginator ListSchemas(ListSchemasRequest request);
    public sealed virtual IListSchemaVersionsPaginator ListSchemaVersions(ListSchemaVersionsRequest request);
    public sealed virtual IListSessionsPaginator ListSessions(ListSessionsRequest request);
    public sealed virtual IListTableOptimizerRunsPaginator ListTableOptimizerRuns(ListTableOptimizerRunsRequest request);
    public sealed virtual IListTriggersPaginator ListTriggers(ListTriggersRequest request);
    public sealed virtual IListUsageProfilesPaginator ListUsageProfiles(ListUsageProfilesRequest request);
    public sealed virtual IListWorkflowsPaginator ListWorkflows(ListWorkflowsRequest request);
    public sealed virtual ISearchTablesPaginator SearchTables(SearchTablesRequest request);
}
public class Amazon.Glue.Model.GluePolicy : object {
    private Nullable`1<DateTime> _createTime;
    private string _policyHash;
    private string _policyInJson;
    private Nullable`1<DateTime> _updateTime;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string PolicyHash { get; public set; }
    [AWSPropertyAttribute]
public string PolicyInJson { get; public set; }
    public Nullable`1<DateTime> UpdateTime { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_PolicyHash();
    public void set_PolicyHash(string value);
    internal bool IsSetPolicyHash();
    public string get_PolicyInJson();
    public void set_PolicyInJson(string value);
    internal bool IsSetPolicyInJson();
    public Nullable`1<DateTime> get_UpdateTime();
    public void set_UpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdateTime();
}
public class Amazon.Glue.Model.GlueSchema : object {
    private List`1<GlueStudioSchemaColumn> _columns;
    public List`1<GlueStudioSchemaColumn> Columns { get; public set; }
    public List`1<GlueStudioSchemaColumn> get_Columns();
    public void set_Columns(List`1<GlueStudioSchemaColumn> value);
    internal bool IsSetColumns();
}
public class Amazon.Glue.Model.GlueStudioSchemaColumn : object {
    private string _name;
    private string _type;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.GlueTable : object {
    private Dictionary`2<string, string> _additionalOptions;
    private string _catalogId;
    private string _connectionName;
    private string _databaseName;
    private string _tableName;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.GovernedCatalogSource : object {
    private S3SourceAdditionalOptions _additionalOptions;
    private string _database;
    private string _name;
    private string _partitionPredicate;
    private string _table;
    public S3SourceAdditionalOptions AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string PartitionPredicate { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public S3SourceAdditionalOptions get_AdditionalOptions();
    public void set_AdditionalOptions(S3SourceAdditionalOptions value);
    internal bool IsSetAdditionalOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PartitionPredicate();
    public void set_PartitionPredicate(string value);
    internal bool IsSetPartitionPredicate();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.GovernedCatalogTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private CatalogSchemaChangePolicy _schemaChangePolicy;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    public CatalogSchemaChangePolicy SchemaChangePolicy { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public CatalogSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(CatalogSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.GrokClassifier : object {
    private string _classification;
    private Nullable`1<DateTime> _creationTime;
    private string _customPatterns;
    private string _grokPattern;
    private Nullable`1<DateTime> _lastUpdated;
    private string _name;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public string Classification { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string CustomPatterns { get; public set; }
    [AWSPropertyAttribute]
public string GrokPattern { get; public set; }
    public Nullable`1<DateTime> LastUpdated { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CustomPatterns();
    public void set_CustomPatterns(string value);
    internal bool IsSetCustomPatterns();
    public string get_GrokPattern();
    public void set_GrokPattern(string value);
    internal bool IsSetGrokPattern();
    public Nullable`1<DateTime> get_LastUpdated();
    public void set_LastUpdated(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdated();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.Model.HudiTarget : object {
    private string _connectionName;
    private List`1<string> _exclusions;
    private Nullable`1<int> _maximumTraversalDepth;
    private List`1<string> _paths;
    public string ConnectionName { get; public set; }
    public List`1<string> Exclusions { get; public set; }
    public Nullable`1<int> MaximumTraversalDepth { get; public set; }
    public List`1<string> Paths { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public List`1<string> get_Exclusions();
    public void set_Exclusions(List`1<string> value);
    internal bool IsSetExclusions();
    public Nullable`1<int> get_MaximumTraversalDepth();
    public void set_MaximumTraversalDepth(Nullable`1<int> value);
    internal bool IsSetMaximumTraversalDepth();
    public List`1<string> get_Paths();
    public void set_Paths(List`1<string> value);
    internal bool IsSetPaths();
}
public class Amazon.Glue.Model.IcebergInput : object {
    private MetadataOperation _metadataOperation;
    private string _version;
    [AWSPropertyAttribute]
public MetadataOperation MetadataOperation { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public MetadataOperation get_MetadataOperation();
    public void set_MetadataOperation(MetadataOperation value);
    internal bool IsSetMetadataOperation();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.Model.IcebergTarget : object {
    private string _connectionName;
    private List`1<string> _exclusions;
    private Nullable`1<int> _maximumTraversalDepth;
    private List`1<string> _paths;
    public string ConnectionName { get; public set; }
    public List`1<string> Exclusions { get; public set; }
    public Nullable`1<int> MaximumTraversalDepth { get; public set; }
    public List`1<string> Paths { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public List`1<string> get_Exclusions();
    public void set_Exclusions(List`1<string> value);
    internal bool IsSetExclusions();
    public Nullable`1<int> get_MaximumTraversalDepth();
    public void set_MaximumTraversalDepth(Nullable`1<int> value);
    internal bool IsSetMaximumTraversalDepth();
    public List`1<string> get_Paths();
    public void set_Paths(List`1<string> value);
    internal bool IsSetPaths();
}
public class Amazon.Glue.Model.IdempotentParameterMismatchException : AmazonGlueException {
    public IdempotentParameterMismatchException(string message);
    public IdempotentParameterMismatchException(string message, Exception innerException);
    public IdempotentParameterMismatchException(Exception innerException);
    public IdempotentParameterMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IdempotentParameterMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.Glue.Model.IGetBlueprintRunsPaginator {
    public IPaginatedEnumerable`1<GetBlueprintRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetBlueprintRunsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetClassifiersPaginator {
    public IPaginatedEnumerable`1<GetClassifiersResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetClassifiersResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetColumnStatisticsTaskRunsPaginator {
    public IPaginatedEnumerable`1<GetColumnStatisticsTaskRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetColumnStatisticsTaskRunsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetConnectionsPaginator {
    public IPaginatedEnumerable`1<GetConnectionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetConnectionsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetCrawlerMetricsPaginator {
    public IPaginatedEnumerable`1<GetCrawlerMetricsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetCrawlerMetricsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetCrawlersPaginator {
    public IPaginatedEnumerable`1<GetCrawlersResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetCrawlersResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetDatabasesPaginator {
    public IPaginatedEnumerable`1<GetDatabasesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetDatabasesResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetDevEndpointsPaginator {
    public IPaginatedEnumerable`1<GetDevEndpointsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetDevEndpointsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetJobRunsPaginator {
    public IPaginatedEnumerable`1<GetJobRunsResponse> Responses { get; }
    public IPaginatedEnumerable`1<JobRun> JobRuns { get; }
    public abstract virtual IPaginatedEnumerable`1<GetJobRunsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<JobRun> get_JobRuns();
}
public interface Amazon.Glue.Model.IGetJobsPaginator {
    public IPaginatedEnumerable`1<GetJobsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Job> Jobs { get; }
    public abstract virtual IPaginatedEnumerable`1<GetJobsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Job> get_Jobs();
}
public interface Amazon.Glue.Model.IGetMLTaskRunsPaginator {
    public IPaginatedEnumerable`1<GetMLTaskRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetMLTaskRunsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetMLTransformsPaginator {
    public IPaginatedEnumerable`1<GetMLTransformsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetMLTransformsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetPartitionIndexesPaginator {
    public IPaginatedEnumerable`1<GetPartitionIndexesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PartitionIndexDescriptor> PartitionIndexDescriptorList { get; }
    public abstract virtual IPaginatedEnumerable`1<GetPartitionIndexesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PartitionIndexDescriptor> get_PartitionIndexDescriptorList();
}
public interface Amazon.Glue.Model.IGetPartitionsPaginator {
    public IPaginatedEnumerable`1<GetPartitionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetPartitionsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetResourcePoliciesPaginator {
    public IPaginatedEnumerable`1<GetResourcePoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<GluePolicy> GetResourcePoliciesResponseList { get; }
    public abstract virtual IPaginatedEnumerable`1<GetResourcePoliciesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<GluePolicy> get_GetResourcePoliciesResponseList();
}
public interface Amazon.Glue.Model.IGetSecurityConfigurationsPaginator {
    public IPaginatedEnumerable`1<GetSecurityConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SecurityConfiguration> SecurityConfigurations { get; }
    public abstract virtual IPaginatedEnumerable`1<GetSecurityConfigurationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SecurityConfiguration> get_SecurityConfigurations();
}
public interface Amazon.Glue.Model.IGetTablesPaginator {
    public IPaginatedEnumerable`1<GetTablesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTablesResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetTableVersionsPaginator {
    public IPaginatedEnumerable`1<GetTableVersionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTableVersionsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetTriggersPaginator {
    public IPaginatedEnumerable`1<GetTriggersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Trigger> Triggers { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTriggersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Trigger> get_Triggers();
}
public interface Amazon.Glue.Model.IGetUnfilteredPartitionsMetadataPaginator {
    public IPaginatedEnumerable`1<GetUnfilteredPartitionsMetadataResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetUnfilteredPartitionsMetadataResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetUserDefinedFunctionsPaginator {
    public IPaginatedEnumerable`1<GetUserDefinedFunctionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetUserDefinedFunctionsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IGetWorkflowRunsPaginator {
    public IPaginatedEnumerable`1<GetWorkflowRunsResponse> Responses { get; }
    public IPaginatedEnumerable`1<WorkflowRun> Runs { get; }
    public abstract virtual IPaginatedEnumerable`1<GetWorkflowRunsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<WorkflowRun> get_Runs();
}
public interface Amazon.Glue.Model.IGluePaginatorFactory {
    public abstract virtual IGetBlueprintRunsPaginator GetBlueprintRuns(GetBlueprintRunsRequest request);
    public abstract virtual IGetClassifiersPaginator GetClassifiers(GetClassifiersRequest request);
    public abstract virtual IGetColumnStatisticsTaskRunsPaginator GetColumnStatisticsTaskRuns(GetColumnStatisticsTaskRunsRequest request);
    public abstract virtual IGetConnectionsPaginator GetConnections(GetConnectionsRequest request);
    public abstract virtual IGetCrawlerMetricsPaginator GetCrawlerMetrics(GetCrawlerMetricsRequest request);
    public abstract virtual IGetCrawlersPaginator GetCrawlers(GetCrawlersRequest request);
    public abstract virtual IGetDatabasesPaginator GetDatabases(GetDatabasesRequest request);
    public abstract virtual IGetDevEndpointsPaginator GetDevEndpoints(GetDevEndpointsRequest request);
    public abstract virtual IGetJobRunsPaginator GetJobRuns(GetJobRunsRequest request);
    public abstract virtual IGetJobsPaginator GetJobs(GetJobsRequest request);
    public abstract virtual IGetMLTaskRunsPaginator GetMLTaskRuns(GetMLTaskRunsRequest request);
    public abstract virtual IGetMLTransformsPaginator GetMLTransforms(GetMLTransformsRequest request);
    public abstract virtual IGetPartitionIndexesPaginator GetPartitionIndexes(GetPartitionIndexesRequest request);
    public abstract virtual IGetPartitionsPaginator GetPartitions(GetPartitionsRequest request);
    public abstract virtual IGetResourcePoliciesPaginator GetResourcePolicies(GetResourcePoliciesRequest request);
    public abstract virtual IGetSecurityConfigurationsPaginator GetSecurityConfigurations(GetSecurityConfigurationsRequest request);
    public abstract virtual IGetTablesPaginator GetTables(GetTablesRequest request);
    public abstract virtual IGetTableVersionsPaginator GetTableVersions(GetTableVersionsRequest request);
    public abstract virtual IGetTriggersPaginator GetTriggers(GetTriggersRequest request);
    public abstract virtual IGetUnfilteredPartitionsMetadataPaginator GetUnfilteredPartitionsMetadata(GetUnfilteredPartitionsMetadataRequest request);
    public abstract virtual IGetUserDefinedFunctionsPaginator GetUserDefinedFunctions(GetUserDefinedFunctionsRequest request);
    public abstract virtual IGetWorkflowRunsPaginator GetWorkflowRuns(GetWorkflowRunsRequest request);
    public abstract virtual IListBlueprintsPaginator ListBlueprints(ListBlueprintsRequest request);
    public abstract virtual IListColumnStatisticsTaskRunsPaginator ListColumnStatisticsTaskRuns(ListColumnStatisticsTaskRunsRequest request);
    public abstract virtual IListCrawlersPaginator ListCrawlers(ListCrawlersRequest request);
    public abstract virtual IListCustomEntityTypesPaginator ListCustomEntityTypes(ListCustomEntityTypesRequest request);
    public abstract virtual IListDataQualityResultsPaginator ListDataQualityResults(ListDataQualityResultsRequest request);
    public abstract virtual IListDataQualityRuleRecommendationRunsPaginator ListDataQualityRuleRecommendationRuns(ListDataQualityRuleRecommendationRunsRequest request);
    public abstract virtual IListDataQualityRulesetEvaluationRunsPaginator ListDataQualityRulesetEvaluationRuns(ListDataQualityRulesetEvaluationRunsRequest request);
    public abstract virtual IListDataQualityRulesetsPaginator ListDataQualityRulesets(ListDataQualityRulesetsRequest request);
    public abstract virtual IListDevEndpointsPaginator ListDevEndpoints(ListDevEndpointsRequest request);
    public abstract virtual IListJobsPaginator ListJobs(ListJobsRequest request);
    public abstract virtual IListMLTransformsPaginator ListMLTransforms(ListMLTransformsRequest request);
    public abstract virtual IListRegistriesPaginator ListRegistries(ListRegistriesRequest request);
    public abstract virtual IListSchemasPaginator ListSchemas(ListSchemasRequest request);
    public abstract virtual IListSchemaVersionsPaginator ListSchemaVersions(ListSchemaVersionsRequest request);
    public abstract virtual IListSessionsPaginator ListSessions(ListSessionsRequest request);
    public abstract virtual IListTableOptimizerRunsPaginator ListTableOptimizerRuns(ListTableOptimizerRunsRequest request);
    public abstract virtual IListTriggersPaginator ListTriggers(ListTriggersRequest request);
    public abstract virtual IListUsageProfilesPaginator ListUsageProfiles(ListUsageProfilesRequest request);
    public abstract virtual IListWorkflowsPaginator ListWorkflows(ListWorkflowsRequest request);
    public abstract virtual ISearchTablesPaginator SearchTables(SearchTablesRequest request);
}
public interface Amazon.Glue.Model.IListBlueprintsPaginator {
    public IPaginatedEnumerable`1<ListBlueprintsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> Blueprints { get; }
    public abstract virtual IPaginatedEnumerable`1<ListBlueprintsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_Blueprints();
}
public interface Amazon.Glue.Model.IListColumnStatisticsTaskRunsPaginator {
    public IPaginatedEnumerable`1<ListColumnStatisticsTaskRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListColumnStatisticsTaskRunsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListCrawlersPaginator {
    public IPaginatedEnumerable`1<ListCrawlersResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCrawlersResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListCustomEntityTypesPaginator {
    public IPaginatedEnumerable`1<ListCustomEntityTypesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCustomEntityTypesResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListDataQualityResultsPaginator {
    public IPaginatedEnumerable`1<ListDataQualityResultsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDataQualityResultsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListDataQualityRuleRecommendationRunsPaginator {
    public IPaginatedEnumerable`1<ListDataQualityRuleRecommendationRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDataQualityRuleRecommendationRunsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListDataQualityRulesetEvaluationRunsPaginator {
    public IPaginatedEnumerable`1<ListDataQualityRulesetEvaluationRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDataQualityRulesetEvaluationRunsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListDataQualityRulesetsPaginator {
    public IPaginatedEnumerable`1<ListDataQualityRulesetsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDataQualityRulesetsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListDevEndpointsPaginator {
    public IPaginatedEnumerable`1<ListDevEndpointsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDevEndpointsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListJobsPaginator {
    public IPaginatedEnumerable`1<ListJobsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> JobNames { get; }
    public abstract virtual IPaginatedEnumerable`1<ListJobsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_JobNames();
}
public interface Amazon.Glue.Model.IListMLTransformsPaginator {
    public IPaginatedEnumerable`1<ListMLTransformsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListMLTransformsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListRegistriesPaginator {
    public IPaginatedEnumerable`1<ListRegistriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<RegistryListItem> Registries { get; }
    public abstract virtual IPaginatedEnumerable`1<ListRegistriesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<RegistryListItem> get_Registries();
}
public interface Amazon.Glue.Model.IListSchemasPaginator {
    public IPaginatedEnumerable`1<ListSchemasResponse> Responses { get; }
    public IPaginatedEnumerable`1<SchemaListItem> Schemas { get; }
    public abstract virtual IPaginatedEnumerable`1<ListSchemasResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SchemaListItem> get_Schemas();
}
public interface Amazon.Glue.Model.IListSchemaVersionsPaginator {
    public IPaginatedEnumerable`1<ListSchemaVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SchemaVersionListItem> Schemas { get; }
    public abstract virtual IPaginatedEnumerable`1<ListSchemaVersionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SchemaVersionListItem> get_Schemas();
}
public interface Amazon.Glue.Model.IListSessionsPaginator {
    public IPaginatedEnumerable`1<ListSessionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListSessionsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListTableOptimizerRunsPaginator {
    public IPaginatedEnumerable`1<ListTableOptimizerRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTableOptimizerRunsResponse> get_Responses();
}
public interface Amazon.Glue.Model.IListTriggersPaginator {
    public IPaginatedEnumerable`1<ListTriggersResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> TriggerNames { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTriggersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_TriggerNames();
}
public interface Amazon.Glue.Model.IListUsageProfilesPaginator {
    public IPaginatedEnumerable`1<ListUsageProfilesResponse> Responses { get; }
    public IPaginatedEnumerable`1<UsageProfileDefinition> Profiles { get; }
    public abstract virtual IPaginatedEnumerable`1<ListUsageProfilesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<UsageProfileDefinition> get_Profiles();
}
public interface Amazon.Glue.Model.IListWorkflowsPaginator {
    public IPaginatedEnumerable`1<ListWorkflowsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> Workflows { get; }
    public abstract virtual IPaginatedEnumerable`1<ListWorkflowsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_Workflows();
}
public class Amazon.Glue.Model.IllegalBlueprintStateException : AmazonGlueException {
    public IllegalBlueprintStateException(string message);
    public IllegalBlueprintStateException(string message, Exception innerException);
    public IllegalBlueprintStateException(Exception innerException);
    public IllegalBlueprintStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IllegalBlueprintStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.IllegalSessionStateException : AmazonGlueException {
    public IllegalSessionStateException(string message);
    public IllegalSessionStateException(string message, Exception innerException);
    public IllegalSessionStateException(Exception innerException);
    public IllegalSessionStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IllegalSessionStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.IllegalWorkflowStateException : AmazonGlueException {
    public IllegalWorkflowStateException(string message);
    public IllegalWorkflowStateException(string message, Exception innerException);
    public IllegalWorkflowStateException(Exception innerException);
    public IllegalWorkflowStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IllegalWorkflowStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ImportCatalogToGlueRequest : AmazonGlueRequest {
    private string _catalogId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
}
public class Amazon.Glue.Model.ImportCatalogToGlueResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.ImportLabelsTaskRunProperties : object {
    private string _inputS3Path;
    private Nullable`1<bool> _replace;
    public string InputS3Path { get; public set; }
    public Nullable`1<bool> Replace { get; public set; }
    public string get_InputS3Path();
    public void set_InputS3Path(string value);
    internal bool IsSetInputS3Path();
    public Nullable`1<bool> get_Replace();
    public void set_Replace(Nullable`1<bool> value);
    internal bool IsSetReplace();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ActionMarshaller : object {
    public static ActionMarshaller Instance;
    private static ActionMarshaller();
    public sealed virtual void Marshall(Action requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ActionUnmarshaller : object {
    private static ActionUnmarshaller _instance;
    public static ActionUnmarshaller Instance { get; }
    private static ActionUnmarshaller();
    private sealed virtual override Action Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Action,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Action Unmarshall(JsonUnmarshallerContext context);
    public static ActionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AggregateMarshaller : object {
    public static AggregateMarshaller Instance;
    private static AggregateMarshaller();
    public sealed virtual void Marshall(Aggregate requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AggregateOperationMarshaller : object {
    public static AggregateOperationMarshaller Instance;
    private static AggregateOperationMarshaller();
    public sealed virtual void Marshall(AggregateOperation requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AggregateOperationUnmarshaller : object {
    private static AggregateOperationUnmarshaller _instance;
    public static AggregateOperationUnmarshaller Instance { get; }
    private static AggregateOperationUnmarshaller();
    private sealed virtual override AggregateOperation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.AggregateOperation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AggregateOperation Unmarshall(JsonUnmarshallerContext context);
    public static AggregateOperationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AggregateUnmarshaller : object {
    private static AggregateUnmarshaller _instance;
    public static AggregateUnmarshaller Instance { get; }
    private static AggregateUnmarshaller();
    private sealed virtual override Aggregate Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Aggregate,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Aggregate Unmarshall(JsonUnmarshallerContext context);
    public static AggregateUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller : object {
    private static AlreadyExistsExceptionUnmarshaller _instance;
    public static AlreadyExistsExceptionUnmarshaller Instance { get; }
    private static AlreadyExistsExceptionUnmarshaller();
    public sealed virtual AlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftAdvancedOptionMarshaller : object {
    public static AmazonRedshiftAdvancedOptionMarshaller Instance;
    private static AmazonRedshiftAdvancedOptionMarshaller();
    public sealed virtual void Marshall(AmazonRedshiftAdvancedOption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftAdvancedOptionUnmarshaller : object {
    private static AmazonRedshiftAdvancedOptionUnmarshaller _instance;
    public static AmazonRedshiftAdvancedOptionUnmarshaller Instance { get; }
    private static AmazonRedshiftAdvancedOptionUnmarshaller();
    private sealed virtual override AmazonRedshiftAdvancedOption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.AmazonRedshiftAdvancedOption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonRedshiftAdvancedOption Unmarshall(JsonUnmarshallerContext context);
    public static AmazonRedshiftAdvancedOptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftNodeDataMarshaller : object {
    public static AmazonRedshiftNodeDataMarshaller Instance;
    private static AmazonRedshiftNodeDataMarshaller();
    public sealed virtual void Marshall(AmazonRedshiftNodeData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftNodeDataUnmarshaller : object {
    private static AmazonRedshiftNodeDataUnmarshaller _instance;
    public static AmazonRedshiftNodeDataUnmarshaller Instance { get; }
    private static AmazonRedshiftNodeDataUnmarshaller();
    private sealed virtual override AmazonRedshiftNodeData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.AmazonRedshiftNodeData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonRedshiftNodeData Unmarshall(JsonUnmarshallerContext context);
    public static AmazonRedshiftNodeDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftSourceMarshaller : object {
    public static AmazonRedshiftSourceMarshaller Instance;
    private static AmazonRedshiftSourceMarshaller();
    public sealed virtual void Marshall(AmazonRedshiftSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftSourceUnmarshaller : object {
    private static AmazonRedshiftSourceUnmarshaller _instance;
    public static AmazonRedshiftSourceUnmarshaller Instance { get; }
    private static AmazonRedshiftSourceUnmarshaller();
    private sealed virtual override AmazonRedshiftSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.AmazonRedshiftSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonRedshiftSource Unmarshall(JsonUnmarshallerContext context);
    public static AmazonRedshiftSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftTargetMarshaller : object {
    public static AmazonRedshiftTargetMarshaller Instance;
    private static AmazonRedshiftTargetMarshaller();
    public sealed virtual void Marshall(AmazonRedshiftTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AmazonRedshiftTargetUnmarshaller : object {
    private static AmazonRedshiftTargetUnmarshaller _instance;
    public static AmazonRedshiftTargetUnmarshaller Instance { get; }
    private static AmazonRedshiftTargetUnmarshaller();
    private sealed virtual override AmazonRedshiftTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.AmazonRedshiftTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonRedshiftTarget Unmarshall(JsonUnmarshallerContext context);
    public static AmazonRedshiftTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ApplyMappingMarshaller : object {
    public static ApplyMappingMarshaller Instance;
    private static ApplyMappingMarshaller();
    public sealed virtual void Marshall(ApplyMapping requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ApplyMappingUnmarshaller : object {
    private static ApplyMappingUnmarshaller _instance;
    public static ApplyMappingUnmarshaller Instance { get; }
    private static ApplyMappingUnmarshaller();
    private sealed virtual override ApplyMapping Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ApplyMapping,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ApplyMapping Unmarshall(JsonUnmarshallerContext context);
    public static ApplyMappingUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AthenaConnectorSourceMarshaller : object {
    public static AthenaConnectorSourceMarshaller Instance;
    private static AthenaConnectorSourceMarshaller();
    public sealed virtual void Marshall(AthenaConnectorSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AthenaConnectorSourceUnmarshaller : object {
    private static AthenaConnectorSourceUnmarshaller _instance;
    public static AthenaConnectorSourceUnmarshaller Instance { get; }
    private static AthenaConnectorSourceUnmarshaller();
    private sealed virtual override AthenaConnectorSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.AthenaConnectorSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AthenaConnectorSource Unmarshall(JsonUnmarshallerContext context);
    public static AthenaConnectorSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AuditContextMarshaller : object {
    public static AuditContextMarshaller Instance;
    private static AuditContextMarshaller();
    public sealed virtual void Marshall(AuditContext requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AuthenticationConfigurationInputMarshaller : object {
    public static AuthenticationConfigurationInputMarshaller Instance;
    private static AuthenticationConfigurationInputMarshaller();
    public sealed virtual void Marshall(AuthenticationConfigurationInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AuthenticationConfigurationUnmarshaller : object {
    private static AuthenticationConfigurationUnmarshaller _instance;
    public static AuthenticationConfigurationUnmarshaller Instance { get; }
    private static AuthenticationConfigurationUnmarshaller();
    private sealed virtual override AuthenticationConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.AuthenticationConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthenticationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AuthenticationConfigurationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.AuthorizationCodePropertiesMarshaller : object {
    public static AuthorizationCodePropertiesMarshaller Instance;
    private static AuthorizationCodePropertiesMarshaller();
    public sealed virtual void Marshall(AuthorizationCodeProperties requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BackfillErrorUnmarshaller : object {
    private static BackfillErrorUnmarshaller _instance;
    public static BackfillErrorUnmarshaller Instance { get; }
    private static BackfillErrorUnmarshaller();
    private sealed virtual override BackfillError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BackfillError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BackfillError Unmarshall(JsonUnmarshallerContext context);
    public static BackfillErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BasicCatalogTargetMarshaller : object {
    public static BasicCatalogTargetMarshaller Instance;
    private static BasicCatalogTargetMarshaller();
    public sealed virtual void Marshall(BasicCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BasicCatalogTargetUnmarshaller : object {
    private static BasicCatalogTargetUnmarshaller _instance;
    public static BasicCatalogTargetUnmarshaller Instance { get; }
    private static BasicCatalogTargetUnmarshaller();
    private sealed virtual override BasicCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BasicCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BasicCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static BasicCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchCreatePartitionRequestMarshaller : object {
    private static BatchCreatePartitionRequestMarshaller _instance;
    public static BatchCreatePartitionRequestMarshaller Instance { get; }
    private static BatchCreatePartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchCreatePartitionRequest publicRequest);
    internal static BatchCreatePartitionRequestMarshaller GetInstance();
    public static BatchCreatePartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchCreatePartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchCreatePartitionResponseUnmarshaller _instance;
    public static BatchCreatePartitionResponseUnmarshaller Instance { get; }
    private static BatchCreatePartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchCreatePartitionResponseUnmarshaller GetInstance();
    public static BatchCreatePartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeleteConnectionRequestMarshaller : object {
    private static BatchDeleteConnectionRequestMarshaller _instance;
    public static BatchDeleteConnectionRequestMarshaller Instance { get; }
    private static BatchDeleteConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchDeleteConnectionRequest publicRequest);
    internal static BatchDeleteConnectionRequestMarshaller GetInstance();
    public static BatchDeleteConnectionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeleteConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchDeleteConnectionResponseUnmarshaller _instance;
    public static BatchDeleteConnectionResponseUnmarshaller Instance { get; }
    private static BatchDeleteConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchDeleteConnectionResponseUnmarshaller GetInstance();
    public static BatchDeleteConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeletePartitionRequestMarshaller : object {
    private static BatchDeletePartitionRequestMarshaller _instance;
    public static BatchDeletePartitionRequestMarshaller Instance { get; }
    private static BatchDeletePartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchDeletePartitionRequest publicRequest);
    internal static BatchDeletePartitionRequestMarshaller GetInstance();
    public static BatchDeletePartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeletePartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchDeletePartitionResponseUnmarshaller _instance;
    public static BatchDeletePartitionResponseUnmarshaller Instance { get; }
    private static BatchDeletePartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchDeletePartitionResponseUnmarshaller GetInstance();
    public static BatchDeletePartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeleteTableRequestMarshaller : object {
    private static BatchDeleteTableRequestMarshaller _instance;
    public static BatchDeleteTableRequestMarshaller Instance { get; }
    private static BatchDeleteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchDeleteTableRequest publicRequest);
    internal static BatchDeleteTableRequestMarshaller GetInstance();
    public static BatchDeleteTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeleteTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchDeleteTableResponseUnmarshaller _instance;
    public static BatchDeleteTableResponseUnmarshaller Instance { get; }
    private static BatchDeleteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchDeleteTableResponseUnmarshaller GetInstance();
    public static BatchDeleteTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeleteTableVersionRequestMarshaller : object {
    private static BatchDeleteTableVersionRequestMarshaller _instance;
    public static BatchDeleteTableVersionRequestMarshaller Instance { get; }
    private static BatchDeleteTableVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchDeleteTableVersionRequest publicRequest);
    internal static BatchDeleteTableVersionRequestMarshaller GetInstance();
    public static BatchDeleteTableVersionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchDeleteTableVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchDeleteTableVersionResponseUnmarshaller _instance;
    public static BatchDeleteTableVersionResponseUnmarshaller Instance { get; }
    private static BatchDeleteTableVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchDeleteTableVersionResponseUnmarshaller GetInstance();
    public static BatchDeleteTableVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetBlueprintsRequestMarshaller : object {
    private static BatchGetBlueprintsRequestMarshaller _instance;
    public static BatchGetBlueprintsRequestMarshaller Instance { get; }
    private static BatchGetBlueprintsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetBlueprintsRequest publicRequest);
    internal static BatchGetBlueprintsRequestMarshaller GetInstance();
    public static BatchGetBlueprintsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetBlueprintsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetBlueprintsResponseUnmarshaller _instance;
    public static BatchGetBlueprintsResponseUnmarshaller Instance { get; }
    private static BatchGetBlueprintsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetBlueprintsResponseUnmarshaller GetInstance();
    public static BatchGetBlueprintsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetCrawlersRequestMarshaller : object {
    private static BatchGetCrawlersRequestMarshaller _instance;
    public static BatchGetCrawlersRequestMarshaller Instance { get; }
    private static BatchGetCrawlersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetCrawlersRequest publicRequest);
    internal static BatchGetCrawlersRequestMarshaller GetInstance();
    public static BatchGetCrawlersRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetCrawlersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetCrawlersResponseUnmarshaller _instance;
    public static BatchGetCrawlersResponseUnmarshaller Instance { get; }
    private static BatchGetCrawlersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetCrawlersResponseUnmarshaller GetInstance();
    public static BatchGetCrawlersResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetCustomEntityTypesRequestMarshaller : object {
    private static BatchGetCustomEntityTypesRequestMarshaller _instance;
    public static BatchGetCustomEntityTypesRequestMarshaller Instance { get; }
    private static BatchGetCustomEntityTypesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetCustomEntityTypesRequest publicRequest);
    internal static BatchGetCustomEntityTypesRequestMarshaller GetInstance();
    public static BatchGetCustomEntityTypesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetCustomEntityTypesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetCustomEntityTypesResponseUnmarshaller _instance;
    public static BatchGetCustomEntityTypesResponseUnmarshaller Instance { get; }
    private static BatchGetCustomEntityTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetCustomEntityTypesResponseUnmarshaller GetInstance();
    public static BatchGetCustomEntityTypesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetDataQualityResultRequestMarshaller : object {
    private static BatchGetDataQualityResultRequestMarshaller _instance;
    public static BatchGetDataQualityResultRequestMarshaller Instance { get; }
    private static BatchGetDataQualityResultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetDataQualityResultRequest publicRequest);
    internal static BatchGetDataQualityResultRequestMarshaller GetInstance();
    public static BatchGetDataQualityResultRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetDataQualityResultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetDataQualityResultResponseUnmarshaller _instance;
    public static BatchGetDataQualityResultResponseUnmarshaller Instance { get; }
    private static BatchGetDataQualityResultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetDataQualityResultResponseUnmarshaller GetInstance();
    public static BatchGetDataQualityResultResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetDevEndpointsRequestMarshaller : object {
    private static BatchGetDevEndpointsRequestMarshaller _instance;
    public static BatchGetDevEndpointsRequestMarshaller Instance { get; }
    private static BatchGetDevEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetDevEndpointsRequest publicRequest);
    internal static BatchGetDevEndpointsRequestMarshaller GetInstance();
    public static BatchGetDevEndpointsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetDevEndpointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetDevEndpointsResponseUnmarshaller _instance;
    public static BatchGetDevEndpointsResponseUnmarshaller Instance { get; }
    private static BatchGetDevEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetDevEndpointsResponseUnmarshaller GetInstance();
    public static BatchGetDevEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetJobsRequestMarshaller : object {
    private static BatchGetJobsRequestMarshaller _instance;
    public static BatchGetJobsRequestMarshaller Instance { get; }
    private static BatchGetJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetJobsRequest publicRequest);
    internal static BatchGetJobsRequestMarshaller GetInstance();
    public static BatchGetJobsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetJobsResponseUnmarshaller _instance;
    public static BatchGetJobsResponseUnmarshaller Instance { get; }
    private static BatchGetJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetJobsResponseUnmarshaller GetInstance();
    public static BatchGetJobsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetPartitionRequestMarshaller : object {
    private static BatchGetPartitionRequestMarshaller _instance;
    public static BatchGetPartitionRequestMarshaller Instance { get; }
    private static BatchGetPartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetPartitionRequest publicRequest);
    internal static BatchGetPartitionRequestMarshaller GetInstance();
    public static BatchGetPartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetPartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetPartitionResponseUnmarshaller _instance;
    public static BatchGetPartitionResponseUnmarshaller Instance { get; }
    private static BatchGetPartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetPartitionResponseUnmarshaller GetInstance();
    public static BatchGetPartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetTableOptimizerEntryMarshaller : object {
    public static BatchGetTableOptimizerEntryMarshaller Instance;
    private static BatchGetTableOptimizerEntryMarshaller();
    public sealed virtual void Marshall(BatchGetTableOptimizerEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetTableOptimizerErrorUnmarshaller : object {
    private static BatchGetTableOptimizerErrorUnmarshaller _instance;
    public static BatchGetTableOptimizerErrorUnmarshaller Instance { get; }
    private static BatchGetTableOptimizerErrorUnmarshaller();
    private sealed virtual override BatchGetTableOptimizerError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BatchGetTableOptimizerError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchGetTableOptimizerError Unmarshall(JsonUnmarshallerContext context);
    public static BatchGetTableOptimizerErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetTableOptimizerRequestMarshaller : object {
    private static BatchGetTableOptimizerRequestMarshaller _instance;
    public static BatchGetTableOptimizerRequestMarshaller Instance { get; }
    private static BatchGetTableOptimizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetTableOptimizerRequest publicRequest);
    internal static BatchGetTableOptimizerRequestMarshaller GetInstance();
    public static BatchGetTableOptimizerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetTableOptimizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetTableOptimizerResponseUnmarshaller _instance;
    public static BatchGetTableOptimizerResponseUnmarshaller Instance { get; }
    private static BatchGetTableOptimizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetTableOptimizerResponseUnmarshaller GetInstance();
    public static BatchGetTableOptimizerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetTriggersRequestMarshaller : object {
    private static BatchGetTriggersRequestMarshaller _instance;
    public static BatchGetTriggersRequestMarshaller Instance { get; }
    private static BatchGetTriggersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetTriggersRequest publicRequest);
    internal static BatchGetTriggersRequestMarshaller GetInstance();
    public static BatchGetTriggersRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetTriggersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetTriggersResponseUnmarshaller _instance;
    public static BatchGetTriggersResponseUnmarshaller Instance { get; }
    private static BatchGetTriggersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetTriggersResponseUnmarshaller GetInstance();
    public static BatchGetTriggersResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetWorkflowsRequestMarshaller : object {
    private static BatchGetWorkflowsRequestMarshaller _instance;
    public static BatchGetWorkflowsRequestMarshaller Instance { get; }
    private static BatchGetWorkflowsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetWorkflowsRequest publicRequest);
    internal static BatchGetWorkflowsRequestMarshaller GetInstance();
    public static BatchGetWorkflowsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchGetWorkflowsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetWorkflowsResponseUnmarshaller _instance;
    public static BatchGetWorkflowsResponseUnmarshaller Instance { get; }
    private static BatchGetWorkflowsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetWorkflowsResponseUnmarshaller GetInstance();
    public static BatchGetWorkflowsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchStopJobRunErrorUnmarshaller : object {
    private static BatchStopJobRunErrorUnmarshaller _instance;
    public static BatchStopJobRunErrorUnmarshaller Instance { get; }
    private static BatchStopJobRunErrorUnmarshaller();
    private sealed virtual override BatchStopJobRunError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BatchStopJobRunError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchStopJobRunError Unmarshall(JsonUnmarshallerContext context);
    public static BatchStopJobRunErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchStopJobRunRequestMarshaller : object {
    private static BatchStopJobRunRequestMarshaller _instance;
    public static BatchStopJobRunRequestMarshaller Instance { get; }
    private static BatchStopJobRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchStopJobRunRequest publicRequest);
    internal static BatchStopJobRunRequestMarshaller GetInstance();
    public static BatchStopJobRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchStopJobRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchStopJobRunResponseUnmarshaller _instance;
    public static BatchStopJobRunResponseUnmarshaller Instance { get; }
    private static BatchStopJobRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchStopJobRunResponseUnmarshaller GetInstance();
    public static BatchStopJobRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchStopJobRunSuccessfulSubmissionUnmarshaller : object {
    private static BatchStopJobRunSuccessfulSubmissionUnmarshaller _instance;
    public static BatchStopJobRunSuccessfulSubmissionUnmarshaller Instance { get; }
    private static BatchStopJobRunSuccessfulSubmissionUnmarshaller();
    private sealed virtual override BatchStopJobRunSuccessfulSubmission Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BatchStopJobRunSuccessfulSubmission,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchStopJobRunSuccessfulSubmission Unmarshall(JsonUnmarshallerContext context);
    public static BatchStopJobRunSuccessfulSubmissionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchTableOptimizerUnmarshaller : object {
    private static BatchTableOptimizerUnmarshaller _instance;
    public static BatchTableOptimizerUnmarshaller Instance { get; }
    private static BatchTableOptimizerUnmarshaller();
    private sealed virtual override BatchTableOptimizer Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BatchTableOptimizer,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchTableOptimizer Unmarshall(JsonUnmarshallerContext context);
    public static BatchTableOptimizerUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchUpdatePartitionFailureEntryUnmarshaller : object {
    private static BatchUpdatePartitionFailureEntryUnmarshaller _instance;
    public static BatchUpdatePartitionFailureEntryUnmarshaller Instance { get; }
    private static BatchUpdatePartitionFailureEntryUnmarshaller();
    private sealed virtual override BatchUpdatePartitionFailureEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BatchUpdatePartitionFailureEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchUpdatePartitionFailureEntry Unmarshall(JsonUnmarshallerContext context);
    public static BatchUpdatePartitionFailureEntryUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchUpdatePartitionRequestEntryMarshaller : object {
    public static BatchUpdatePartitionRequestEntryMarshaller Instance;
    private static BatchUpdatePartitionRequestEntryMarshaller();
    public sealed virtual void Marshall(BatchUpdatePartitionRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchUpdatePartitionRequestMarshaller : object {
    private static BatchUpdatePartitionRequestMarshaller _instance;
    public static BatchUpdatePartitionRequestMarshaller Instance { get; }
    private static BatchUpdatePartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchUpdatePartitionRequest publicRequest);
    internal static BatchUpdatePartitionRequestMarshaller GetInstance();
    public static BatchUpdatePartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BatchUpdatePartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchUpdatePartitionResponseUnmarshaller _instance;
    public static BatchUpdatePartitionResponseUnmarshaller Instance { get; }
    private static BatchUpdatePartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchUpdatePartitionResponseUnmarshaller GetInstance();
    public static BatchUpdatePartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BinaryColumnStatisticsDataMarshaller : object {
    public static BinaryColumnStatisticsDataMarshaller Instance;
    private static BinaryColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(BinaryColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BinaryColumnStatisticsDataUnmarshaller : object {
    private static BinaryColumnStatisticsDataUnmarshaller _instance;
    public static BinaryColumnStatisticsDataUnmarshaller Instance { get; }
    private static BinaryColumnStatisticsDataUnmarshaller();
    private sealed virtual override BinaryColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BinaryColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BinaryColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static BinaryColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BlueprintDetailsUnmarshaller : object {
    private static BlueprintDetailsUnmarshaller _instance;
    public static BlueprintDetailsUnmarshaller Instance { get; }
    private static BlueprintDetailsUnmarshaller();
    private sealed virtual override BlueprintDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BlueprintDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlueprintDetails Unmarshall(JsonUnmarshallerContext context);
    public static BlueprintDetailsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BlueprintRunUnmarshaller : object {
    private static BlueprintRunUnmarshaller _instance;
    public static BlueprintRunUnmarshaller Instance { get; }
    private static BlueprintRunUnmarshaller();
    private sealed virtual override BlueprintRun Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BlueprintRun,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlueprintRun Unmarshall(JsonUnmarshallerContext context);
    public static BlueprintRunUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BlueprintUnmarshaller : object {
    private static BlueprintUnmarshaller _instance;
    public static BlueprintUnmarshaller Instance { get; }
    private static BlueprintUnmarshaller();
    private sealed virtual override Blueprint Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Blueprint,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Blueprint Unmarshall(JsonUnmarshallerContext context);
    public static BlueprintUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BooleanColumnStatisticsDataMarshaller : object {
    public static BooleanColumnStatisticsDataMarshaller Instance;
    private static BooleanColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(BooleanColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.BooleanColumnStatisticsDataUnmarshaller : object {
    private static BooleanColumnStatisticsDataUnmarshaller _instance;
    public static BooleanColumnStatisticsDataUnmarshaller Instance { get; }
    private static BooleanColumnStatisticsDataUnmarshaller();
    private sealed virtual override BooleanColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.BooleanColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BooleanColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static BooleanColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelDataQualityRuleRecommendationRunRequestMarshaller : object {
    private static CancelDataQualityRuleRecommendationRunRequestMarshaller _instance;
    public static CancelDataQualityRuleRecommendationRunRequestMarshaller Instance { get; }
    private static CancelDataQualityRuleRecommendationRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelDataQualityRuleRecommendationRunRequest publicRequest);
    internal static CancelDataQualityRuleRecommendationRunRequestMarshaller GetInstance();
    public static CancelDataQualityRuleRecommendationRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelDataQualityRuleRecommendationRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelDataQualityRuleRecommendationRunResponseUnmarshaller _instance;
    public static CancelDataQualityRuleRecommendationRunResponseUnmarshaller Instance { get; }
    private static CancelDataQualityRuleRecommendationRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelDataQualityRuleRecommendationRunResponseUnmarshaller GetInstance();
    public static CancelDataQualityRuleRecommendationRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelDataQualityRulesetEvaluationRunRequestMarshaller : object {
    private static CancelDataQualityRulesetEvaluationRunRequestMarshaller _instance;
    public static CancelDataQualityRulesetEvaluationRunRequestMarshaller Instance { get; }
    private static CancelDataQualityRulesetEvaluationRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelDataQualityRulesetEvaluationRunRequest publicRequest);
    internal static CancelDataQualityRulesetEvaluationRunRequestMarshaller GetInstance();
    public static CancelDataQualityRulesetEvaluationRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelDataQualityRulesetEvaluationRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelDataQualityRulesetEvaluationRunResponseUnmarshaller _instance;
    public static CancelDataQualityRulesetEvaluationRunResponseUnmarshaller Instance { get; }
    private static CancelDataQualityRulesetEvaluationRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelDataQualityRulesetEvaluationRunResponseUnmarshaller GetInstance();
    public static CancelDataQualityRulesetEvaluationRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelMLTaskRunRequestMarshaller : object {
    private static CancelMLTaskRunRequestMarshaller _instance;
    public static CancelMLTaskRunRequestMarshaller Instance { get; }
    private static CancelMLTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelMLTaskRunRequest publicRequest);
    internal static CancelMLTaskRunRequestMarshaller GetInstance();
    public static CancelMLTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelMLTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelMLTaskRunResponseUnmarshaller _instance;
    public static CancelMLTaskRunResponseUnmarshaller Instance { get; }
    private static CancelMLTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelMLTaskRunResponseUnmarshaller GetInstance();
    public static CancelMLTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelStatementRequestMarshaller : object {
    private static CancelStatementRequestMarshaller _instance;
    public static CancelStatementRequestMarshaller Instance { get; }
    private static CancelStatementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelStatementRequest publicRequest);
    internal static CancelStatementRequestMarshaller GetInstance();
    public static CancelStatementRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CancelStatementResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelStatementResponseUnmarshaller _instance;
    public static CancelStatementResponseUnmarshaller Instance { get; }
    private static CancelStatementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelStatementResponseUnmarshaller GetInstance();
    public static CancelStatementResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogDeltaSourceMarshaller : object {
    public static CatalogDeltaSourceMarshaller Instance;
    private static CatalogDeltaSourceMarshaller();
    public sealed virtual void Marshall(CatalogDeltaSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogDeltaSourceUnmarshaller : object {
    private static CatalogDeltaSourceUnmarshaller _instance;
    public static CatalogDeltaSourceUnmarshaller Instance { get; }
    private static CatalogDeltaSourceUnmarshaller();
    private sealed virtual override CatalogDeltaSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogDeltaSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogDeltaSource Unmarshall(JsonUnmarshallerContext context);
    public static CatalogDeltaSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogEntryMarshaller : object {
    public static CatalogEntryMarshaller Instance;
    private static CatalogEntryMarshaller();
    public sealed virtual void Marshall(CatalogEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogHudiSourceMarshaller : object {
    public static CatalogHudiSourceMarshaller Instance;
    private static CatalogHudiSourceMarshaller();
    public sealed virtual void Marshall(CatalogHudiSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogHudiSourceUnmarshaller : object {
    private static CatalogHudiSourceUnmarshaller _instance;
    public static CatalogHudiSourceUnmarshaller Instance { get; }
    private static CatalogHudiSourceUnmarshaller();
    private sealed virtual override CatalogHudiSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogHudiSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogHudiSource Unmarshall(JsonUnmarshallerContext context);
    public static CatalogHudiSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogImportStatusUnmarshaller : object {
    private static CatalogImportStatusUnmarshaller _instance;
    public static CatalogImportStatusUnmarshaller Instance { get; }
    private static CatalogImportStatusUnmarshaller();
    private sealed virtual override CatalogImportStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogImportStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogImportStatus Unmarshall(JsonUnmarshallerContext context);
    public static CatalogImportStatusUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogKafkaSourceMarshaller : object {
    public static CatalogKafkaSourceMarshaller Instance;
    private static CatalogKafkaSourceMarshaller();
    public sealed virtual void Marshall(CatalogKafkaSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogKafkaSourceUnmarshaller : object {
    private static CatalogKafkaSourceUnmarshaller _instance;
    public static CatalogKafkaSourceUnmarshaller Instance { get; }
    private static CatalogKafkaSourceUnmarshaller();
    private sealed virtual override CatalogKafkaSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogKafkaSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogKafkaSource Unmarshall(JsonUnmarshallerContext context);
    public static CatalogKafkaSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogKinesisSourceMarshaller : object {
    public static CatalogKinesisSourceMarshaller Instance;
    private static CatalogKinesisSourceMarshaller();
    public sealed virtual void Marshall(CatalogKinesisSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogKinesisSourceUnmarshaller : object {
    private static CatalogKinesisSourceUnmarshaller _instance;
    public static CatalogKinesisSourceUnmarshaller Instance { get; }
    private static CatalogKinesisSourceUnmarshaller();
    private sealed virtual override CatalogKinesisSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogKinesisSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogKinesisSource Unmarshall(JsonUnmarshallerContext context);
    public static CatalogKinesisSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogSchemaChangePolicyMarshaller : object {
    public static CatalogSchemaChangePolicyMarshaller Instance;
    private static CatalogSchemaChangePolicyMarshaller();
    public sealed virtual void Marshall(CatalogSchemaChangePolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogSchemaChangePolicyUnmarshaller : object {
    private static CatalogSchemaChangePolicyUnmarshaller _instance;
    public static CatalogSchemaChangePolicyUnmarshaller Instance { get; }
    private static CatalogSchemaChangePolicyUnmarshaller();
    private sealed virtual override CatalogSchemaChangePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogSchemaChangePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogSchemaChangePolicy Unmarshall(JsonUnmarshallerContext context);
    public static CatalogSchemaChangePolicyUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogSourceMarshaller : object {
    public static CatalogSourceMarshaller Instance;
    private static CatalogSourceMarshaller();
    public sealed virtual void Marshall(CatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogSourceUnmarshaller : object {
    private static CatalogSourceUnmarshaller _instance;
    public static CatalogSourceUnmarshaller Instance { get; }
    private static CatalogSourceUnmarshaller();
    private sealed virtual override CatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static CatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogTargetMarshaller : object {
    public static CatalogTargetMarshaller Instance;
    private static CatalogTargetMarshaller();
    public sealed virtual void Marshall(CatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CatalogTargetUnmarshaller : object {
    private static CatalogTargetUnmarshaller _instance;
    public static CatalogTargetUnmarshaller Instance { get; }
    private static CatalogTargetUnmarshaller();
    private sealed virtual override CatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static CatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CheckSchemaVersionValidityRequestMarshaller : object {
    private static CheckSchemaVersionValidityRequestMarshaller _instance;
    public static CheckSchemaVersionValidityRequestMarshaller Instance { get; }
    private static CheckSchemaVersionValidityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CheckSchemaVersionValidityRequest publicRequest);
    internal static CheckSchemaVersionValidityRequestMarshaller GetInstance();
    public static CheckSchemaVersionValidityRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CheckSchemaVersionValidityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CheckSchemaVersionValidityResponseUnmarshaller _instance;
    public static CheckSchemaVersionValidityResponseUnmarshaller Instance { get; }
    private static CheckSchemaVersionValidityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CheckSchemaVersionValidityResponseUnmarshaller GetInstance();
    public static CheckSchemaVersionValidityResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ClassifierUnmarshaller : object {
    private static ClassifierUnmarshaller _instance;
    public static ClassifierUnmarshaller Instance { get; }
    private static ClassifierUnmarshaller();
    private sealed virtual override Classifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Classifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Classifier Unmarshall(JsonUnmarshallerContext context);
    public static ClassifierUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CloudWatchEncryptionMarshaller : object {
    public static CloudWatchEncryptionMarshaller Instance;
    private static CloudWatchEncryptionMarshaller();
    public sealed virtual void Marshall(CloudWatchEncryption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CloudWatchEncryptionUnmarshaller : object {
    private static CloudWatchEncryptionUnmarshaller _instance;
    public static CloudWatchEncryptionUnmarshaller Instance { get; }
    private static CloudWatchEncryptionUnmarshaller();
    private sealed virtual override CloudWatchEncryption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CloudWatchEncryption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchEncryption Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchEncryptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenConfigurationNodeMarshaller : object {
    public static CodeGenConfigurationNodeMarshaller Instance;
    private static CodeGenConfigurationNodeMarshaller();
    public sealed virtual void Marshall(CodeGenConfigurationNode requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenConfigurationNodeUnmarshaller : object {
    private static CodeGenConfigurationNodeUnmarshaller _instance;
    public static CodeGenConfigurationNodeUnmarshaller Instance { get; }
    private static CodeGenConfigurationNodeUnmarshaller();
    private sealed virtual override CodeGenConfigurationNode Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CodeGenConfigurationNode,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CodeGenConfigurationNode Unmarshall(JsonUnmarshallerContext context);
    public static CodeGenConfigurationNodeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenEdgeMarshaller : object {
    public static CodeGenEdgeMarshaller Instance;
    private static CodeGenEdgeMarshaller();
    public sealed virtual void Marshall(CodeGenEdge requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenEdgeUnmarshaller : object {
    private static CodeGenEdgeUnmarshaller _instance;
    public static CodeGenEdgeUnmarshaller Instance { get; }
    private static CodeGenEdgeUnmarshaller();
    private sealed virtual override CodeGenEdge Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CodeGenEdge,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CodeGenEdge Unmarshall(JsonUnmarshallerContext context);
    public static CodeGenEdgeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenNodeArgMarshaller : object {
    public static CodeGenNodeArgMarshaller Instance;
    private static CodeGenNodeArgMarshaller();
    public sealed virtual void Marshall(CodeGenNodeArg requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenNodeArgUnmarshaller : object {
    private static CodeGenNodeArgUnmarshaller _instance;
    public static CodeGenNodeArgUnmarshaller Instance { get; }
    private static CodeGenNodeArgUnmarshaller();
    private sealed virtual override CodeGenNodeArg Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CodeGenNodeArg,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CodeGenNodeArg Unmarshall(JsonUnmarshallerContext context);
    public static CodeGenNodeArgUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenNodeMarshaller : object {
    public static CodeGenNodeMarshaller Instance;
    private static CodeGenNodeMarshaller();
    public sealed virtual void Marshall(CodeGenNode requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CodeGenNodeUnmarshaller : object {
    private static CodeGenNodeUnmarshaller _instance;
    public static CodeGenNodeUnmarshaller Instance { get; }
    private static CodeGenNodeUnmarshaller();
    private sealed virtual override CodeGenNode Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CodeGenNode,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CodeGenNode Unmarshall(JsonUnmarshallerContext context);
    public static CodeGenNodeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnErrorUnmarshaller : object {
    private static ColumnErrorUnmarshaller _instance;
    public static ColumnErrorUnmarshaller Instance { get; }
    private static ColumnErrorUnmarshaller();
    private sealed virtual override ColumnError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ColumnError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ColumnError Unmarshall(JsonUnmarshallerContext context);
    public static ColumnErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnImportanceUnmarshaller : object {
    private static ColumnImportanceUnmarshaller _instance;
    public static ColumnImportanceUnmarshaller Instance { get; }
    private static ColumnImportanceUnmarshaller();
    private sealed virtual override ColumnImportance Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ColumnImportance,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ColumnImportance Unmarshall(JsonUnmarshallerContext context);
    public static ColumnImportanceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnMarshaller : object {
    public static ColumnMarshaller Instance;
    private static ColumnMarshaller();
    public sealed virtual void Marshall(Column requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnRowFilterUnmarshaller : object {
    private static ColumnRowFilterUnmarshaller _instance;
    public static ColumnRowFilterUnmarshaller Instance { get; }
    private static ColumnRowFilterUnmarshaller();
    private sealed virtual override ColumnRowFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ColumnRowFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ColumnRowFilter Unmarshall(JsonUnmarshallerContext context);
    public static ColumnRowFilterUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsDataMarshaller : object {
    public static ColumnStatisticsDataMarshaller Instance;
    private static ColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(ColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsDataUnmarshaller : object {
    private static ColumnStatisticsDataUnmarshaller _instance;
    public static ColumnStatisticsDataUnmarshaller Instance { get; }
    private static ColumnStatisticsDataUnmarshaller();
    private sealed virtual override ColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static ColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsErrorUnmarshaller : object {
    private static ColumnStatisticsErrorUnmarshaller _instance;
    public static ColumnStatisticsErrorUnmarshaller Instance { get; }
    private static ColumnStatisticsErrorUnmarshaller();
    private sealed virtual override ColumnStatisticsError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ColumnStatisticsError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ColumnStatisticsError Unmarshall(JsonUnmarshallerContext context);
    public static ColumnStatisticsErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsMarshaller : object {
    public static ColumnStatisticsMarshaller Instance;
    private static ColumnStatisticsMarshaller();
    public sealed virtual void Marshall(ColumnStatistics requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsTaskNotRunningExceptionUnmarshaller : object {
    private static ColumnStatisticsTaskNotRunningExceptionUnmarshaller _instance;
    public static ColumnStatisticsTaskNotRunningExceptionUnmarshaller Instance { get; }
    private static ColumnStatisticsTaskNotRunningExceptionUnmarshaller();
    public sealed virtual ColumnStatisticsTaskNotRunningException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ColumnStatisticsTaskNotRunningException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ColumnStatisticsTaskNotRunningExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsTaskRunningExceptionUnmarshaller : object {
    private static ColumnStatisticsTaskRunningExceptionUnmarshaller _instance;
    public static ColumnStatisticsTaskRunningExceptionUnmarshaller Instance { get; }
    private static ColumnStatisticsTaskRunningExceptionUnmarshaller();
    public sealed virtual ColumnStatisticsTaskRunningException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ColumnStatisticsTaskRunningException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ColumnStatisticsTaskRunningExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsTaskRunUnmarshaller : object {
    private static ColumnStatisticsTaskRunUnmarshaller _instance;
    public static ColumnStatisticsTaskRunUnmarshaller Instance { get; }
    private static ColumnStatisticsTaskRunUnmarshaller();
    private sealed virtual override ColumnStatisticsTaskRun Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ColumnStatisticsTaskRun,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ColumnStatisticsTaskRun Unmarshall(JsonUnmarshallerContext context);
    public static ColumnStatisticsTaskRunUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsTaskStoppingExceptionUnmarshaller : object {
    private static ColumnStatisticsTaskStoppingExceptionUnmarshaller _instance;
    public static ColumnStatisticsTaskStoppingExceptionUnmarshaller Instance { get; }
    private static ColumnStatisticsTaskStoppingExceptionUnmarshaller();
    public sealed virtual ColumnStatisticsTaskStoppingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ColumnStatisticsTaskStoppingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ColumnStatisticsTaskStoppingExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnStatisticsUnmarshaller : object {
    private static ColumnStatisticsUnmarshaller _instance;
    public static ColumnStatisticsUnmarshaller Instance { get; }
    private static ColumnStatisticsUnmarshaller();
    private sealed virtual override ColumnStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ColumnStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ColumnStatistics Unmarshall(JsonUnmarshallerContext context);
    public static ColumnStatisticsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ColumnUnmarshaller : object {
    private static ColumnUnmarshaller _instance;
    public static ColumnUnmarshaller Instance { get; }
    private static ColumnUnmarshaller();
    private sealed virtual override Column Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Column,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Column Unmarshall(JsonUnmarshallerContext context);
    public static ColumnUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConcurrentRunsExceededExceptionUnmarshaller : object {
    private static ConcurrentRunsExceededExceptionUnmarshaller _instance;
    public static ConcurrentRunsExceededExceptionUnmarshaller Instance { get; }
    private static ConcurrentRunsExceededExceptionUnmarshaller();
    public sealed virtual ConcurrentRunsExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentRunsExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentRunsExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConditionCheckFailureExceptionUnmarshaller : object {
    private static ConditionCheckFailureExceptionUnmarshaller _instance;
    public static ConditionCheckFailureExceptionUnmarshaller Instance { get; }
    private static ConditionCheckFailureExceptionUnmarshaller();
    public sealed virtual ConditionCheckFailureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConditionCheckFailureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConditionCheckFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConditionExpressionMarshaller : object {
    public static ConditionExpressionMarshaller Instance;
    private static ConditionExpressionMarshaller();
    public sealed virtual void Marshall(ConditionExpression requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConditionExpressionUnmarshaller : object {
    private static ConditionExpressionUnmarshaller _instance;
    public static ConditionExpressionUnmarshaller Instance { get; }
    private static ConditionExpressionUnmarshaller();
    private sealed virtual override ConditionExpression Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ConditionExpression,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConditionExpression Unmarshall(JsonUnmarshallerContext context);
    public static ConditionExpressionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConditionMarshaller : object {
    public static ConditionMarshaller Instance;
    private static ConditionMarshaller();
    public sealed virtual void Marshall(Condition requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConditionUnmarshaller : object {
    private static ConditionUnmarshaller _instance;
    public static ConditionUnmarshaller Instance { get; }
    private static ConditionUnmarshaller();
    private sealed virtual override Condition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Condition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Condition Unmarshall(JsonUnmarshallerContext context);
    public static ConditionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConfigurationObjectMarshaller : object {
    public static ConfigurationObjectMarshaller Instance;
    private static ConfigurationObjectMarshaller();
    public sealed virtual void Marshall(ConfigurationObject requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConfigurationObjectUnmarshaller : object {
    private static ConfigurationObjectUnmarshaller _instance;
    public static ConfigurationObjectUnmarshaller Instance { get; }
    private static ConfigurationObjectUnmarshaller();
    private sealed virtual override ConfigurationObject Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ConfigurationObject,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationObject Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationObjectUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConfusionMatrixUnmarshaller : object {
    private static ConfusionMatrixUnmarshaller _instance;
    public static ConfusionMatrixUnmarshaller Instance { get; }
    private static ConfusionMatrixUnmarshaller();
    private sealed virtual override ConfusionMatrix Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ConfusionMatrix,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfusionMatrix Unmarshall(JsonUnmarshallerContext context);
    public static ConfusionMatrixUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectionInputMarshaller : object {
    public static ConnectionInputMarshaller Instance;
    private static ConnectionInputMarshaller();
    public sealed virtual void Marshall(ConnectionInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectionPasswordEncryptionMarshaller : object {
    public static ConnectionPasswordEncryptionMarshaller Instance;
    private static ConnectionPasswordEncryptionMarshaller();
    public sealed virtual void Marshall(ConnectionPasswordEncryption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectionPasswordEncryptionUnmarshaller : object {
    private static ConnectionPasswordEncryptionUnmarshaller _instance;
    public static ConnectionPasswordEncryptionUnmarshaller Instance { get; }
    private static ConnectionPasswordEncryptionUnmarshaller();
    private sealed virtual override ConnectionPasswordEncryption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ConnectionPasswordEncryption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionPasswordEncryption Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionPasswordEncryptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectionsListMarshaller : object {
    public static ConnectionsListMarshaller Instance;
    private static ConnectionsListMarshaller();
    public sealed virtual void Marshall(ConnectionsList requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectionsListUnmarshaller : object {
    private static ConnectionsListUnmarshaller _instance;
    public static ConnectionsListUnmarshaller Instance { get; }
    private static ConnectionsListUnmarshaller();
    private sealed virtual override ConnectionsList Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ConnectionsList,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionsList Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionsListUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectionUnmarshaller : object {
    private static ConnectionUnmarshaller _instance;
    public static ConnectionUnmarshaller Instance { get; }
    private static ConnectionUnmarshaller();
    private sealed virtual override Connection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Connection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Connection Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectorDataSourceMarshaller : object {
    public static ConnectorDataSourceMarshaller Instance;
    private static ConnectorDataSourceMarshaller();
    public sealed virtual void Marshall(ConnectorDataSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectorDataSourceUnmarshaller : object {
    private static ConnectorDataSourceUnmarshaller _instance;
    public static ConnectorDataSourceUnmarshaller Instance { get; }
    private static ConnectorDataSourceUnmarshaller();
    private sealed virtual override ConnectorDataSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ConnectorDataSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectorDataSource Unmarshall(JsonUnmarshallerContext context);
    public static ConnectorDataSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectorDataTargetMarshaller : object {
    public static ConnectorDataTargetMarshaller Instance;
    private static ConnectorDataTargetMarshaller();
    public sealed virtual void Marshall(ConnectorDataTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ConnectorDataTargetUnmarshaller : object {
    private static ConnectorDataTargetUnmarshaller _instance;
    public static ConnectorDataTargetUnmarshaller Instance { get; }
    private static ConnectorDataTargetUnmarshaller();
    private sealed virtual override ConnectorDataTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ConnectorDataTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectorDataTarget Unmarshall(JsonUnmarshallerContext context);
    public static ConnectorDataTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerHistoryUnmarshaller : object {
    private static CrawlerHistoryUnmarshaller _instance;
    public static CrawlerHistoryUnmarshaller Instance { get; }
    private static CrawlerHistoryUnmarshaller();
    private sealed virtual override CrawlerHistory Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CrawlerHistory,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CrawlerHistory Unmarshall(JsonUnmarshallerContext context);
    public static CrawlerHistoryUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerMetricsUnmarshaller : object {
    private static CrawlerMetricsUnmarshaller _instance;
    public static CrawlerMetricsUnmarshaller Instance { get; }
    private static CrawlerMetricsUnmarshaller();
    private sealed virtual override CrawlerMetrics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CrawlerMetrics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CrawlerMetrics Unmarshall(JsonUnmarshallerContext context);
    public static CrawlerMetricsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerNodeDetailsUnmarshaller : object {
    private static CrawlerNodeDetailsUnmarshaller _instance;
    public static CrawlerNodeDetailsUnmarshaller Instance { get; }
    private static CrawlerNodeDetailsUnmarshaller();
    private sealed virtual override CrawlerNodeDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CrawlerNodeDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CrawlerNodeDetails Unmarshall(JsonUnmarshallerContext context);
    public static CrawlerNodeDetailsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerNotRunningExceptionUnmarshaller : object {
    private static CrawlerNotRunningExceptionUnmarshaller _instance;
    public static CrawlerNotRunningExceptionUnmarshaller Instance { get; }
    private static CrawlerNotRunningExceptionUnmarshaller();
    public sealed virtual CrawlerNotRunningException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CrawlerNotRunningException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CrawlerNotRunningExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerRunningExceptionUnmarshaller : object {
    private static CrawlerRunningExceptionUnmarshaller _instance;
    public static CrawlerRunningExceptionUnmarshaller Instance { get; }
    private static CrawlerRunningExceptionUnmarshaller();
    public sealed virtual CrawlerRunningException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CrawlerRunningException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CrawlerRunningExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerStoppingExceptionUnmarshaller : object {
    private static CrawlerStoppingExceptionUnmarshaller _instance;
    public static CrawlerStoppingExceptionUnmarshaller Instance { get; }
    private static CrawlerStoppingExceptionUnmarshaller();
    public sealed virtual CrawlerStoppingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CrawlerStoppingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CrawlerStoppingExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerTargetsMarshaller : object {
    public static CrawlerTargetsMarshaller Instance;
    private static CrawlerTargetsMarshaller();
    public sealed virtual void Marshall(CrawlerTargets requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerTargetsUnmarshaller : object {
    private static CrawlerTargetsUnmarshaller _instance;
    public static CrawlerTargetsUnmarshaller Instance { get; }
    private static CrawlerTargetsUnmarshaller();
    private sealed virtual override CrawlerTargets Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CrawlerTargets,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CrawlerTargets Unmarshall(JsonUnmarshallerContext context);
    public static CrawlerTargetsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlerUnmarshaller : object {
    private static CrawlerUnmarshaller _instance;
    public static CrawlerUnmarshaller Instance { get; }
    private static CrawlerUnmarshaller();
    private sealed virtual override Crawler Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Crawler,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Crawler Unmarshall(JsonUnmarshallerContext context);
    public static CrawlerUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlsFilterMarshaller : object {
    public static CrawlsFilterMarshaller Instance;
    private static CrawlsFilterMarshaller();
    public sealed virtual void Marshall(CrawlsFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CrawlUnmarshaller : object {
    private static CrawlUnmarshaller _instance;
    public static CrawlUnmarshaller Instance { get; }
    private static CrawlUnmarshaller();
    private sealed virtual override Crawl Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Crawl,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Crawl Unmarshall(JsonUnmarshallerContext context);
    public static CrawlUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateBlueprintRequestMarshaller : object {
    private static CreateBlueprintRequestMarshaller _instance;
    public static CreateBlueprintRequestMarshaller Instance { get; }
    private static CreateBlueprintRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateBlueprintRequest publicRequest);
    internal static CreateBlueprintRequestMarshaller GetInstance();
    public static CreateBlueprintRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateBlueprintResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateBlueprintResponseUnmarshaller _instance;
    public static CreateBlueprintResponseUnmarshaller Instance { get; }
    private static CreateBlueprintResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateBlueprintResponseUnmarshaller GetInstance();
    public static CreateBlueprintResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateClassifierRequestMarshaller : object {
    private static CreateClassifierRequestMarshaller _instance;
    public static CreateClassifierRequestMarshaller Instance { get; }
    private static CreateClassifierRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateClassifierRequest publicRequest);
    internal static CreateClassifierRequestMarshaller GetInstance();
    public static CreateClassifierRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateClassifierResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateClassifierResponseUnmarshaller _instance;
    public static CreateClassifierResponseUnmarshaller Instance { get; }
    private static CreateClassifierResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateClassifierResponseUnmarshaller GetInstance();
    public static CreateClassifierResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateConnectionRequestMarshaller : object {
    private static CreateConnectionRequestMarshaller _instance;
    public static CreateConnectionRequestMarshaller Instance { get; }
    private static CreateConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateConnectionRequest publicRequest);
    internal static CreateConnectionRequestMarshaller GetInstance();
    public static CreateConnectionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateConnectionResponseUnmarshaller _instance;
    public static CreateConnectionResponseUnmarshaller Instance { get; }
    private static CreateConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateConnectionResponseUnmarshaller GetInstance();
    public static CreateConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateCrawlerRequestMarshaller : object {
    private static CreateCrawlerRequestMarshaller _instance;
    public static CreateCrawlerRequestMarshaller Instance { get; }
    private static CreateCrawlerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCrawlerRequest publicRequest);
    internal static CreateCrawlerRequestMarshaller GetInstance();
    public static CreateCrawlerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateCrawlerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateCrawlerResponseUnmarshaller _instance;
    public static CreateCrawlerResponseUnmarshaller Instance { get; }
    private static CreateCrawlerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCrawlerResponseUnmarshaller GetInstance();
    public static CreateCrawlerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateCsvClassifierRequestMarshaller : object {
    public static CreateCsvClassifierRequestMarshaller Instance;
    private static CreateCsvClassifierRequestMarshaller();
    public sealed virtual void Marshall(CreateCsvClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateCustomEntityTypeRequestMarshaller : object {
    private static CreateCustomEntityTypeRequestMarshaller _instance;
    public static CreateCustomEntityTypeRequestMarshaller Instance { get; }
    private static CreateCustomEntityTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCustomEntityTypeRequest publicRequest);
    internal static CreateCustomEntityTypeRequestMarshaller GetInstance();
    public static CreateCustomEntityTypeRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateCustomEntityTypeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateCustomEntityTypeResponseUnmarshaller _instance;
    public static CreateCustomEntityTypeResponseUnmarshaller Instance { get; }
    private static CreateCustomEntityTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCustomEntityTypeResponseUnmarshaller GetInstance();
    public static CreateCustomEntityTypeResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateDatabaseRequestMarshaller : object {
    private static CreateDatabaseRequestMarshaller _instance;
    public static CreateDatabaseRequestMarshaller Instance { get; }
    private static CreateDatabaseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDatabaseRequest publicRequest);
    internal static CreateDatabaseRequestMarshaller GetInstance();
    public static CreateDatabaseRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateDatabaseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDatabaseResponseUnmarshaller _instance;
    public static CreateDatabaseResponseUnmarshaller Instance { get; }
    private static CreateDatabaseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDatabaseResponseUnmarshaller GetInstance();
    public static CreateDatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateDataQualityRulesetRequestMarshaller : object {
    private static CreateDataQualityRulesetRequestMarshaller _instance;
    public static CreateDataQualityRulesetRequestMarshaller Instance { get; }
    private static CreateDataQualityRulesetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDataQualityRulesetRequest publicRequest);
    internal static CreateDataQualityRulesetRequestMarshaller GetInstance();
    public static CreateDataQualityRulesetRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateDataQualityRulesetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDataQualityRulesetResponseUnmarshaller _instance;
    public static CreateDataQualityRulesetResponseUnmarshaller Instance { get; }
    private static CreateDataQualityRulesetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDataQualityRulesetResponseUnmarshaller GetInstance();
    public static CreateDataQualityRulesetResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateDevEndpointRequestMarshaller : object {
    private static CreateDevEndpointRequestMarshaller _instance;
    public static CreateDevEndpointRequestMarshaller Instance { get; }
    private static CreateDevEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDevEndpointRequest publicRequest);
    internal static CreateDevEndpointRequestMarshaller GetInstance();
    public static CreateDevEndpointRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateDevEndpointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDevEndpointResponseUnmarshaller _instance;
    public static CreateDevEndpointResponseUnmarshaller Instance { get; }
    private static CreateDevEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDevEndpointResponseUnmarshaller GetInstance();
    public static CreateDevEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateGrokClassifierRequestMarshaller : object {
    public static CreateGrokClassifierRequestMarshaller Instance;
    private static CreateGrokClassifierRequestMarshaller();
    public sealed virtual void Marshall(CreateGrokClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateJobRequestMarshaller : object {
    private static CreateJobRequestMarshaller _instance;
    public static CreateJobRequestMarshaller Instance { get; }
    private static CreateJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateJobRequest publicRequest);
    internal static CreateJobRequestMarshaller GetInstance();
    public static CreateJobRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateJobResponseUnmarshaller _instance;
    public static CreateJobResponseUnmarshaller Instance { get; }
    private static CreateJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateJobResponseUnmarshaller GetInstance();
    public static CreateJobResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateJsonClassifierRequestMarshaller : object {
    public static CreateJsonClassifierRequestMarshaller Instance;
    private static CreateJsonClassifierRequestMarshaller();
    public sealed virtual void Marshall(CreateJsonClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateMLTransformRequestMarshaller : object {
    private static CreateMLTransformRequestMarshaller _instance;
    public static CreateMLTransformRequestMarshaller Instance { get; }
    private static CreateMLTransformRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateMLTransformRequest publicRequest);
    internal static CreateMLTransformRequestMarshaller GetInstance();
    public static CreateMLTransformRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateMLTransformResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateMLTransformResponseUnmarshaller _instance;
    public static CreateMLTransformResponseUnmarshaller Instance { get; }
    private static CreateMLTransformResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateMLTransformResponseUnmarshaller GetInstance();
    public static CreateMLTransformResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreatePartitionIndexRequestMarshaller : object {
    private static CreatePartitionIndexRequestMarshaller _instance;
    public static CreatePartitionIndexRequestMarshaller Instance { get; }
    private static CreatePartitionIndexRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePartitionIndexRequest publicRequest);
    internal static CreatePartitionIndexRequestMarshaller GetInstance();
    public static CreatePartitionIndexRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreatePartitionIndexResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreatePartitionIndexResponseUnmarshaller _instance;
    public static CreatePartitionIndexResponseUnmarshaller Instance { get; }
    private static CreatePartitionIndexResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePartitionIndexResponseUnmarshaller GetInstance();
    public static CreatePartitionIndexResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreatePartitionRequestMarshaller : object {
    private static CreatePartitionRequestMarshaller _instance;
    public static CreatePartitionRequestMarshaller Instance { get; }
    private static CreatePartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePartitionRequest publicRequest);
    internal static CreatePartitionRequestMarshaller GetInstance();
    public static CreatePartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreatePartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreatePartitionResponseUnmarshaller _instance;
    public static CreatePartitionResponseUnmarshaller Instance { get; }
    private static CreatePartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePartitionResponseUnmarshaller GetInstance();
    public static CreatePartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateRegistryRequestMarshaller : object {
    private static CreateRegistryRequestMarshaller _instance;
    public static CreateRegistryRequestMarshaller Instance { get; }
    private static CreateRegistryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRegistryRequest publicRequest);
    internal static CreateRegistryRequestMarshaller GetInstance();
    public static CreateRegistryRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateRegistryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateRegistryResponseUnmarshaller _instance;
    public static CreateRegistryResponseUnmarshaller Instance { get; }
    private static CreateRegistryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRegistryResponseUnmarshaller GetInstance();
    public static CreateRegistryResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateSchemaRequestMarshaller : object {
    private static CreateSchemaRequestMarshaller _instance;
    public static CreateSchemaRequestMarshaller Instance { get; }
    private static CreateSchemaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSchemaRequest publicRequest);
    internal static CreateSchemaRequestMarshaller GetInstance();
    public static CreateSchemaRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateSchemaResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSchemaResponseUnmarshaller _instance;
    public static CreateSchemaResponseUnmarshaller Instance { get; }
    private static CreateSchemaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSchemaResponseUnmarshaller GetInstance();
    public static CreateSchemaResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateScriptRequestMarshaller : object {
    private static CreateScriptRequestMarshaller _instance;
    public static CreateScriptRequestMarshaller Instance { get; }
    private static CreateScriptRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateScriptRequest publicRequest);
    internal static CreateScriptRequestMarshaller GetInstance();
    public static CreateScriptRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateScriptResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateScriptResponseUnmarshaller _instance;
    public static CreateScriptResponseUnmarshaller Instance { get; }
    private static CreateScriptResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateScriptResponseUnmarshaller GetInstance();
    public static CreateScriptResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateSecurityConfigurationRequestMarshaller : object {
    private static CreateSecurityConfigurationRequestMarshaller _instance;
    public static CreateSecurityConfigurationRequestMarshaller Instance { get; }
    private static CreateSecurityConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSecurityConfigurationRequest publicRequest);
    internal static CreateSecurityConfigurationRequestMarshaller GetInstance();
    public static CreateSecurityConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateSecurityConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSecurityConfigurationResponseUnmarshaller _instance;
    public static CreateSecurityConfigurationResponseUnmarshaller Instance { get; }
    private static CreateSecurityConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSecurityConfigurationResponseUnmarshaller GetInstance();
    public static CreateSecurityConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateSessionRequestMarshaller : object {
    private static CreateSessionRequestMarshaller _instance;
    public static CreateSessionRequestMarshaller Instance { get; }
    private static CreateSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSessionRequest publicRequest);
    internal static CreateSessionRequestMarshaller GetInstance();
    public static CreateSessionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateSessionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSessionResponseUnmarshaller _instance;
    public static CreateSessionResponseUnmarshaller Instance { get; }
    private static CreateSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSessionResponseUnmarshaller GetInstance();
    public static CreateSessionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateTableOptimizerRequestMarshaller : object {
    private static CreateTableOptimizerRequestMarshaller _instance;
    public static CreateTableOptimizerRequestMarshaller Instance { get; }
    private static CreateTableOptimizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTableOptimizerRequest publicRequest);
    internal static CreateTableOptimizerRequestMarshaller GetInstance();
    public static CreateTableOptimizerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateTableOptimizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTableOptimizerResponseUnmarshaller _instance;
    public static CreateTableOptimizerResponseUnmarshaller Instance { get; }
    private static CreateTableOptimizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTableOptimizerResponseUnmarshaller GetInstance();
    public static CreateTableOptimizerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateTableRequestMarshaller : object {
    private static CreateTableRequestMarshaller _instance;
    public static CreateTableRequestMarshaller Instance { get; }
    private static CreateTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTableRequest publicRequest);
    internal static CreateTableRequestMarshaller GetInstance();
    public static CreateTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTableResponseUnmarshaller _instance;
    public static CreateTableResponseUnmarshaller Instance { get; }
    private static CreateTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTableResponseUnmarshaller GetInstance();
    public static CreateTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateTriggerRequestMarshaller : object {
    private static CreateTriggerRequestMarshaller _instance;
    public static CreateTriggerRequestMarshaller Instance { get; }
    private static CreateTriggerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTriggerRequest publicRequest);
    internal static CreateTriggerRequestMarshaller GetInstance();
    public static CreateTriggerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateTriggerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTriggerResponseUnmarshaller _instance;
    public static CreateTriggerResponseUnmarshaller Instance { get; }
    private static CreateTriggerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTriggerResponseUnmarshaller GetInstance();
    public static CreateTriggerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateUsageProfileRequestMarshaller : object {
    private static CreateUsageProfileRequestMarshaller _instance;
    public static CreateUsageProfileRequestMarshaller Instance { get; }
    private static CreateUsageProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateUsageProfileRequest publicRequest);
    internal static CreateUsageProfileRequestMarshaller GetInstance();
    public static CreateUsageProfileRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateUsageProfileResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateUsageProfileResponseUnmarshaller _instance;
    public static CreateUsageProfileResponseUnmarshaller Instance { get; }
    private static CreateUsageProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateUsageProfileResponseUnmarshaller GetInstance();
    public static CreateUsageProfileResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateUserDefinedFunctionRequestMarshaller : object {
    private static CreateUserDefinedFunctionRequestMarshaller _instance;
    public static CreateUserDefinedFunctionRequestMarshaller Instance { get; }
    private static CreateUserDefinedFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateUserDefinedFunctionRequest publicRequest);
    internal static CreateUserDefinedFunctionRequestMarshaller GetInstance();
    public static CreateUserDefinedFunctionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateUserDefinedFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateUserDefinedFunctionResponseUnmarshaller _instance;
    public static CreateUserDefinedFunctionResponseUnmarshaller Instance { get; }
    private static CreateUserDefinedFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateUserDefinedFunctionResponseUnmarshaller GetInstance();
    public static CreateUserDefinedFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateWorkflowRequestMarshaller : object {
    private static CreateWorkflowRequestMarshaller _instance;
    public static CreateWorkflowRequestMarshaller Instance { get; }
    private static CreateWorkflowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateWorkflowRequest publicRequest);
    internal static CreateWorkflowRequestMarshaller GetInstance();
    public static CreateWorkflowRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateWorkflowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateWorkflowResponseUnmarshaller _instance;
    public static CreateWorkflowResponseUnmarshaller Instance { get; }
    private static CreateWorkflowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateWorkflowResponseUnmarshaller GetInstance();
    public static CreateWorkflowResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CreateXMLClassifierRequestMarshaller : object {
    public static CreateXMLClassifierRequestMarshaller Instance;
    private static CreateXMLClassifierRequestMarshaller();
    public sealed virtual void Marshall(CreateXMLClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CsvClassifierUnmarshaller : object {
    private static CsvClassifierUnmarshaller _instance;
    public static CsvClassifierUnmarshaller Instance { get; }
    private static CsvClassifierUnmarshaller();
    private sealed virtual override CsvClassifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CsvClassifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CsvClassifier Unmarshall(JsonUnmarshallerContext context);
    public static CsvClassifierUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CustomCodeMarshaller : object {
    public static CustomCodeMarshaller Instance;
    private static CustomCodeMarshaller();
    public sealed virtual void Marshall(CustomCode requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CustomCodeUnmarshaller : object {
    private static CustomCodeUnmarshaller _instance;
    public static CustomCodeUnmarshaller Instance { get; }
    private static CustomCodeUnmarshaller();
    private sealed virtual override CustomCode Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CustomCode,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomCode Unmarshall(JsonUnmarshallerContext context);
    public static CustomCodeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.CustomEntityTypeUnmarshaller : object {
    private static CustomEntityTypeUnmarshaller _instance;
    public static CustomEntityTypeUnmarshaller Instance { get; }
    private static CustomEntityTypeUnmarshaller();
    private sealed virtual override CustomEntityType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.CustomEntityType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomEntityType Unmarshall(JsonUnmarshallerContext context);
    public static CustomEntityTypeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DatabaseIdentifierMarshaller : object {
    public static DatabaseIdentifierMarshaller Instance;
    private static DatabaseIdentifierMarshaller();
    public sealed virtual void Marshall(DatabaseIdentifier requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DatabaseIdentifierUnmarshaller : object {
    private static DatabaseIdentifierUnmarshaller _instance;
    public static DatabaseIdentifierUnmarshaller Instance { get; }
    private static DatabaseIdentifierUnmarshaller();
    private sealed virtual override DatabaseIdentifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DatabaseIdentifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DatabaseIdentifier Unmarshall(JsonUnmarshallerContext context);
    public static DatabaseIdentifierUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DatabaseInputMarshaller : object {
    public static DatabaseInputMarshaller Instance;
    private static DatabaseInputMarshaller();
    public sealed virtual void Marshall(DatabaseInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DatabaseUnmarshaller : object {
    private static DatabaseUnmarshaller _instance;
    public static DatabaseUnmarshaller Instance { get; }
    private static DatabaseUnmarshaller();
    private sealed virtual override Database Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Database,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Database Unmarshall(JsonUnmarshallerContext context);
    public static DatabaseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataCatalogEncryptionSettingsMarshaller : object {
    public static DataCatalogEncryptionSettingsMarshaller Instance;
    private static DataCatalogEncryptionSettingsMarshaller();
    public sealed virtual void Marshall(DataCatalogEncryptionSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataCatalogEncryptionSettingsUnmarshaller : object {
    private static DataCatalogEncryptionSettingsUnmarshaller _instance;
    public static DataCatalogEncryptionSettingsUnmarshaller Instance { get; }
    private static DataCatalogEncryptionSettingsUnmarshaller();
    private sealed virtual override DataCatalogEncryptionSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataCatalogEncryptionSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataCatalogEncryptionSettings Unmarshall(JsonUnmarshallerContext context);
    public static DataCatalogEncryptionSettingsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataLakePrincipalMarshaller : object {
    public static DataLakePrincipalMarshaller Instance;
    private static DataLakePrincipalMarshaller();
    public sealed virtual void Marshall(DataLakePrincipal requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller : object {
    private static DataLakePrincipalUnmarshaller _instance;
    public static DataLakePrincipalUnmarshaller Instance { get; }
    private static DataLakePrincipalUnmarshaller();
    private sealed virtual override DataLakePrincipal Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataLakePrincipal,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataLakePrincipal Unmarshall(JsonUnmarshallerContext context);
    public static DataLakePrincipalUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityAnalyzerResultUnmarshaller : object {
    private static DataQualityAnalyzerResultUnmarshaller _instance;
    public static DataQualityAnalyzerResultUnmarshaller Instance { get; }
    private static DataQualityAnalyzerResultUnmarshaller();
    private sealed virtual override DataQualityAnalyzerResult Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityAnalyzerResult,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityAnalyzerResult Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityAnalyzerResultUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityEvaluationRunAdditionalRunOptionsMarshaller : object {
    public static DataQualityEvaluationRunAdditionalRunOptionsMarshaller Instance;
    private static DataQualityEvaluationRunAdditionalRunOptionsMarshaller();
    public sealed virtual void Marshall(DataQualityEvaluationRunAdditionalRunOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityEvaluationRunAdditionalRunOptionsUnmarshaller : object {
    private static DataQualityEvaluationRunAdditionalRunOptionsUnmarshaller _instance;
    public static DataQualityEvaluationRunAdditionalRunOptionsUnmarshaller Instance { get; }
    private static DataQualityEvaluationRunAdditionalRunOptionsUnmarshaller();
    private sealed virtual override DataQualityEvaluationRunAdditionalRunOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityEvaluationRunAdditionalRunOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityEvaluationRunAdditionalRunOptions Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityEvaluationRunAdditionalRunOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityMetricValuesUnmarshaller : object {
    private static DataQualityMetricValuesUnmarshaller _instance;
    public static DataQualityMetricValuesUnmarshaller Instance { get; }
    private static DataQualityMetricValuesUnmarshaller();
    private sealed virtual override DataQualityMetricValues Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityMetricValues,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityMetricValues Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityMetricValuesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityObservationUnmarshaller : object {
    private static DataQualityObservationUnmarshaller _instance;
    public static DataQualityObservationUnmarshaller Instance { get; }
    private static DataQualityObservationUnmarshaller();
    private sealed virtual override DataQualityObservation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityObservation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityObservation Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityObservationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityResultDescriptionUnmarshaller : object {
    private static DataQualityResultDescriptionUnmarshaller _instance;
    public static DataQualityResultDescriptionUnmarshaller Instance { get; }
    private static DataQualityResultDescriptionUnmarshaller();
    private sealed virtual override DataQualityResultDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityResultDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityResultDescription Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityResultDescriptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityResultFilterCriteriaMarshaller : object {
    public static DataQualityResultFilterCriteriaMarshaller Instance;
    private static DataQualityResultFilterCriteriaMarshaller();
    public sealed virtual void Marshall(DataQualityResultFilterCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityResultUnmarshaller : object {
    private static DataQualityResultUnmarshaller _instance;
    public static DataQualityResultUnmarshaller Instance { get; }
    private static DataQualityResultUnmarshaller();
    private sealed virtual override DataQualityResult Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityResult,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityResult Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityResultUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityRuleRecommendationRunDescriptionUnmarshaller : object {
    private static DataQualityRuleRecommendationRunDescriptionUnmarshaller _instance;
    public static DataQualityRuleRecommendationRunDescriptionUnmarshaller Instance { get; }
    private static DataQualityRuleRecommendationRunDescriptionUnmarshaller();
    private sealed virtual override DataQualityRuleRecommendationRunDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityRuleRecommendationRunDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityRuleRecommendationRunDescription Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityRuleRecommendationRunDescriptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityRuleRecommendationRunFilterMarshaller : object {
    public static DataQualityRuleRecommendationRunFilterMarshaller Instance;
    private static DataQualityRuleRecommendationRunFilterMarshaller();
    public sealed virtual void Marshall(DataQualityRuleRecommendationRunFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityRuleResultUnmarshaller : object {
    private static DataQualityRuleResultUnmarshaller _instance;
    public static DataQualityRuleResultUnmarshaller Instance { get; }
    private static DataQualityRuleResultUnmarshaller();
    private sealed virtual override DataQualityRuleResult Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityRuleResult,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityRuleResult Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityRuleResultUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityRulesetEvaluationRunDescriptionUnmarshaller : object {
    private static DataQualityRulesetEvaluationRunDescriptionUnmarshaller _instance;
    public static DataQualityRulesetEvaluationRunDescriptionUnmarshaller Instance { get; }
    private static DataQualityRulesetEvaluationRunDescriptionUnmarshaller();
    private sealed virtual override DataQualityRulesetEvaluationRunDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityRulesetEvaluationRunDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityRulesetEvaluationRunDescription Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityRulesetEvaluationRunDescriptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityRulesetEvaluationRunFilterMarshaller : object {
    public static DataQualityRulesetEvaluationRunFilterMarshaller Instance;
    private static DataQualityRulesetEvaluationRunFilterMarshaller();
    public sealed virtual void Marshall(DataQualityRulesetEvaluationRunFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityRulesetFilterCriteriaMarshaller : object {
    public static DataQualityRulesetFilterCriteriaMarshaller Instance;
    private static DataQualityRulesetFilterCriteriaMarshaller();
    public sealed virtual void Marshall(DataQualityRulesetFilterCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityRulesetListDetailsUnmarshaller : object {
    private static DataQualityRulesetListDetailsUnmarshaller _instance;
    public static DataQualityRulesetListDetailsUnmarshaller Instance { get; }
    private static DataQualityRulesetListDetailsUnmarshaller();
    private sealed virtual override DataQualityRulesetListDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityRulesetListDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityRulesetListDetails Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityRulesetListDetailsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityTargetTableMarshaller : object {
    public static DataQualityTargetTableMarshaller Instance;
    private static DataQualityTargetTableMarshaller();
    public sealed virtual void Marshall(DataQualityTargetTable requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataQualityTargetTableUnmarshaller : object {
    private static DataQualityTargetTableUnmarshaller _instance;
    public static DataQualityTargetTableUnmarshaller Instance { get; }
    private static DataQualityTargetTableUnmarshaller();
    private sealed virtual override DataQualityTargetTable Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataQualityTargetTable,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataQualityTargetTable Unmarshall(JsonUnmarshallerContext context);
    public static DataQualityTargetTableUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataSourceMarshaller : object {
    public static DataSourceMarshaller Instance;
    private static DataSourceMarshaller();
    public sealed virtual void Marshall(DataSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DataSourceUnmarshaller : object {
    private static DataSourceUnmarshaller _instance;
    public static DataSourceUnmarshaller Instance { get; }
    private static DataSourceUnmarshaller();
    private sealed virtual override DataSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DataSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataSource Unmarshall(JsonUnmarshallerContext context);
    public static DataSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DatatypeMarshaller : object {
    public static DatatypeMarshaller Instance;
    private static DatatypeMarshaller();
    public sealed virtual void Marshall(Datatype requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DatatypeUnmarshaller : object {
    private static DatatypeUnmarshaller _instance;
    public static DatatypeUnmarshaller Instance { get; }
    private static DatatypeUnmarshaller();
    private sealed virtual override Datatype Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Datatype,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Datatype Unmarshall(JsonUnmarshallerContext context);
    public static DatatypeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DateColumnStatisticsDataMarshaller : object {
    public static DateColumnStatisticsDataMarshaller Instance;
    private static DateColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(DateColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DateColumnStatisticsDataUnmarshaller : object {
    private static DateColumnStatisticsDataUnmarshaller _instance;
    public static DateColumnStatisticsDataUnmarshaller Instance { get; }
    private static DateColumnStatisticsDataUnmarshaller();
    private sealed virtual override DateColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DateColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DateColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static DateColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DecimalColumnStatisticsDataMarshaller : object {
    public static DecimalColumnStatisticsDataMarshaller Instance;
    private static DecimalColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(DecimalColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DecimalColumnStatisticsDataUnmarshaller : object {
    private static DecimalColumnStatisticsDataUnmarshaller _instance;
    public static DecimalColumnStatisticsDataUnmarshaller Instance { get; }
    private static DecimalColumnStatisticsDataUnmarshaller();
    private sealed virtual override DecimalColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DecimalColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DecimalColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static DecimalColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DecimalNumberMarshaller : object {
    public static DecimalNumberMarshaller Instance;
    private static DecimalNumberMarshaller();
    public sealed virtual void Marshall(DecimalNumber requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DecimalNumberUnmarshaller : object {
    private static DecimalNumberUnmarshaller _instance;
    public static DecimalNumberUnmarshaller Instance { get; }
    private static DecimalNumberUnmarshaller();
    private sealed virtual override DecimalNumber Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DecimalNumber,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DecimalNumber Unmarshall(JsonUnmarshallerContext context);
    public static DecimalNumberUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteBlueprintRequestMarshaller : object {
    private static DeleteBlueprintRequestMarshaller _instance;
    public static DeleteBlueprintRequestMarshaller Instance { get; }
    private static DeleteBlueprintRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBlueprintRequest publicRequest);
    internal static DeleteBlueprintRequestMarshaller GetInstance();
    public static DeleteBlueprintRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteBlueprintResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteBlueprintResponseUnmarshaller _instance;
    public static DeleteBlueprintResponseUnmarshaller Instance { get; }
    private static DeleteBlueprintResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBlueprintResponseUnmarshaller GetInstance();
    public static DeleteBlueprintResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteClassifierRequestMarshaller : object {
    private static DeleteClassifierRequestMarshaller _instance;
    public static DeleteClassifierRequestMarshaller Instance { get; }
    private static DeleteClassifierRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteClassifierRequest publicRequest);
    internal static DeleteClassifierRequestMarshaller GetInstance();
    public static DeleteClassifierRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteClassifierResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteClassifierResponseUnmarshaller _instance;
    public static DeleteClassifierResponseUnmarshaller Instance { get; }
    private static DeleteClassifierResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteClassifierResponseUnmarshaller GetInstance();
    public static DeleteClassifierResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteColumnStatisticsForPartitionRequestMarshaller : object {
    private static DeleteColumnStatisticsForPartitionRequestMarshaller _instance;
    public static DeleteColumnStatisticsForPartitionRequestMarshaller Instance { get; }
    private static DeleteColumnStatisticsForPartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteColumnStatisticsForPartitionRequest publicRequest);
    internal static DeleteColumnStatisticsForPartitionRequestMarshaller GetInstance();
    public static DeleteColumnStatisticsForPartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteColumnStatisticsForPartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteColumnStatisticsForPartitionResponseUnmarshaller _instance;
    public static DeleteColumnStatisticsForPartitionResponseUnmarshaller Instance { get; }
    private static DeleteColumnStatisticsForPartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteColumnStatisticsForPartitionResponseUnmarshaller GetInstance();
    public static DeleteColumnStatisticsForPartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteColumnStatisticsForTableRequestMarshaller : object {
    private static DeleteColumnStatisticsForTableRequestMarshaller _instance;
    public static DeleteColumnStatisticsForTableRequestMarshaller Instance { get; }
    private static DeleteColumnStatisticsForTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteColumnStatisticsForTableRequest publicRequest);
    internal static DeleteColumnStatisticsForTableRequestMarshaller GetInstance();
    public static DeleteColumnStatisticsForTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteColumnStatisticsForTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteColumnStatisticsForTableResponseUnmarshaller _instance;
    public static DeleteColumnStatisticsForTableResponseUnmarshaller Instance { get; }
    private static DeleteColumnStatisticsForTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteColumnStatisticsForTableResponseUnmarshaller GetInstance();
    public static DeleteColumnStatisticsForTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteConnectionRequestMarshaller : object {
    private static DeleteConnectionRequestMarshaller _instance;
    public static DeleteConnectionRequestMarshaller Instance { get; }
    private static DeleteConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteConnectionRequest publicRequest);
    internal static DeleteConnectionRequestMarshaller GetInstance();
    public static DeleteConnectionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteConnectionResponseUnmarshaller _instance;
    public static DeleteConnectionResponseUnmarshaller Instance { get; }
    private static DeleteConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteConnectionResponseUnmarshaller GetInstance();
    public static DeleteConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteCrawlerRequestMarshaller : object {
    private static DeleteCrawlerRequestMarshaller _instance;
    public static DeleteCrawlerRequestMarshaller Instance { get; }
    private static DeleteCrawlerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCrawlerRequest publicRequest);
    internal static DeleteCrawlerRequestMarshaller GetInstance();
    public static DeleteCrawlerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteCrawlerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteCrawlerResponseUnmarshaller _instance;
    public static DeleteCrawlerResponseUnmarshaller Instance { get; }
    private static DeleteCrawlerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCrawlerResponseUnmarshaller GetInstance();
    public static DeleteCrawlerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteCustomEntityTypeRequestMarshaller : object {
    private static DeleteCustomEntityTypeRequestMarshaller _instance;
    public static DeleteCustomEntityTypeRequestMarshaller Instance { get; }
    private static DeleteCustomEntityTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCustomEntityTypeRequest publicRequest);
    internal static DeleteCustomEntityTypeRequestMarshaller GetInstance();
    public static DeleteCustomEntityTypeRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteCustomEntityTypeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteCustomEntityTypeResponseUnmarshaller _instance;
    public static DeleteCustomEntityTypeResponseUnmarshaller Instance { get; }
    private static DeleteCustomEntityTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCustomEntityTypeResponseUnmarshaller GetInstance();
    public static DeleteCustomEntityTypeResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteDatabaseRequestMarshaller : object {
    private static DeleteDatabaseRequestMarshaller _instance;
    public static DeleteDatabaseRequestMarshaller Instance { get; }
    private static DeleteDatabaseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDatabaseRequest publicRequest);
    internal static DeleteDatabaseRequestMarshaller GetInstance();
    public static DeleteDatabaseRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteDatabaseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDatabaseResponseUnmarshaller _instance;
    public static DeleteDatabaseResponseUnmarshaller Instance { get; }
    private static DeleteDatabaseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDatabaseResponseUnmarshaller GetInstance();
    public static DeleteDatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteDataQualityRulesetRequestMarshaller : object {
    private static DeleteDataQualityRulesetRequestMarshaller _instance;
    public static DeleteDataQualityRulesetRequestMarshaller Instance { get; }
    private static DeleteDataQualityRulesetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDataQualityRulesetRequest publicRequest);
    internal static DeleteDataQualityRulesetRequestMarshaller GetInstance();
    public static DeleteDataQualityRulesetRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteDataQualityRulesetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDataQualityRulesetResponseUnmarshaller _instance;
    public static DeleteDataQualityRulesetResponseUnmarshaller Instance { get; }
    private static DeleteDataQualityRulesetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDataQualityRulesetResponseUnmarshaller GetInstance();
    public static DeleteDataQualityRulesetResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteDevEndpointRequestMarshaller : object {
    private static DeleteDevEndpointRequestMarshaller _instance;
    public static DeleteDevEndpointRequestMarshaller Instance { get; }
    private static DeleteDevEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDevEndpointRequest publicRequest);
    internal static DeleteDevEndpointRequestMarshaller GetInstance();
    public static DeleteDevEndpointRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteDevEndpointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDevEndpointResponseUnmarshaller _instance;
    public static DeleteDevEndpointResponseUnmarshaller Instance { get; }
    private static DeleteDevEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDevEndpointResponseUnmarshaller GetInstance();
    public static DeleteDevEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteJobRequestMarshaller : object {
    private static DeleteJobRequestMarshaller _instance;
    public static DeleteJobRequestMarshaller Instance { get; }
    private static DeleteJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteJobRequest publicRequest);
    internal static DeleteJobRequestMarshaller GetInstance();
    public static DeleteJobRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteJobResponseUnmarshaller _instance;
    public static DeleteJobResponseUnmarshaller Instance { get; }
    private static DeleteJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteJobResponseUnmarshaller GetInstance();
    public static DeleteJobResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteMLTransformRequestMarshaller : object {
    private static DeleteMLTransformRequestMarshaller _instance;
    public static DeleteMLTransformRequestMarshaller Instance { get; }
    private static DeleteMLTransformRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMLTransformRequest publicRequest);
    internal static DeleteMLTransformRequestMarshaller GetInstance();
    public static DeleteMLTransformRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteMLTransformResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMLTransformResponseUnmarshaller _instance;
    public static DeleteMLTransformResponseUnmarshaller Instance { get; }
    private static DeleteMLTransformResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMLTransformResponseUnmarshaller GetInstance();
    public static DeleteMLTransformResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeletePartitionIndexRequestMarshaller : object {
    private static DeletePartitionIndexRequestMarshaller _instance;
    public static DeletePartitionIndexRequestMarshaller Instance { get; }
    private static DeletePartitionIndexRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePartitionIndexRequest publicRequest);
    internal static DeletePartitionIndexRequestMarshaller GetInstance();
    public static DeletePartitionIndexRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeletePartitionIndexResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeletePartitionIndexResponseUnmarshaller _instance;
    public static DeletePartitionIndexResponseUnmarshaller Instance { get; }
    private static DeletePartitionIndexResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePartitionIndexResponseUnmarshaller GetInstance();
    public static DeletePartitionIndexResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeletePartitionRequestMarshaller : object {
    private static DeletePartitionRequestMarshaller _instance;
    public static DeletePartitionRequestMarshaller Instance { get; }
    private static DeletePartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePartitionRequest publicRequest);
    internal static DeletePartitionRequestMarshaller GetInstance();
    public static DeletePartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeletePartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeletePartitionResponseUnmarshaller _instance;
    public static DeletePartitionResponseUnmarshaller Instance { get; }
    private static DeletePartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePartitionResponseUnmarshaller GetInstance();
    public static DeletePartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteRegistryRequestMarshaller : object {
    private static DeleteRegistryRequestMarshaller _instance;
    public static DeleteRegistryRequestMarshaller Instance { get; }
    private static DeleteRegistryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRegistryRequest publicRequest);
    internal static DeleteRegistryRequestMarshaller GetInstance();
    public static DeleteRegistryRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteRegistryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteRegistryResponseUnmarshaller _instance;
    public static DeleteRegistryResponseUnmarshaller Instance { get; }
    private static DeleteRegistryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRegistryResponseUnmarshaller GetInstance();
    public static DeleteRegistryResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSchemaRequestMarshaller : object {
    private static DeleteSchemaRequestMarshaller _instance;
    public static DeleteSchemaRequestMarshaller Instance { get; }
    private static DeleteSchemaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSchemaRequest publicRequest);
    internal static DeleteSchemaRequestMarshaller GetInstance();
    public static DeleteSchemaRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSchemaResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSchemaResponseUnmarshaller _instance;
    public static DeleteSchemaResponseUnmarshaller Instance { get; }
    private static DeleteSchemaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSchemaResponseUnmarshaller GetInstance();
    public static DeleteSchemaResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSchemaVersionsRequestMarshaller : object {
    private static DeleteSchemaVersionsRequestMarshaller _instance;
    public static DeleteSchemaVersionsRequestMarshaller Instance { get; }
    private static DeleteSchemaVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSchemaVersionsRequest publicRequest);
    internal static DeleteSchemaVersionsRequestMarshaller GetInstance();
    public static DeleteSchemaVersionsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSchemaVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSchemaVersionsResponseUnmarshaller _instance;
    public static DeleteSchemaVersionsResponseUnmarshaller Instance { get; }
    private static DeleteSchemaVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSchemaVersionsResponseUnmarshaller GetInstance();
    public static DeleteSchemaVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSecurityConfigurationRequestMarshaller : object {
    private static DeleteSecurityConfigurationRequestMarshaller _instance;
    public static DeleteSecurityConfigurationRequestMarshaller Instance { get; }
    private static DeleteSecurityConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSecurityConfigurationRequest publicRequest);
    internal static DeleteSecurityConfigurationRequestMarshaller GetInstance();
    public static DeleteSecurityConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSecurityConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSecurityConfigurationResponseUnmarshaller _instance;
    public static DeleteSecurityConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteSecurityConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSecurityConfigurationResponseUnmarshaller GetInstance();
    public static DeleteSecurityConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSessionRequestMarshaller : object {
    private static DeleteSessionRequestMarshaller _instance;
    public static DeleteSessionRequestMarshaller Instance { get; }
    private static DeleteSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSessionRequest publicRequest);
    internal static DeleteSessionRequestMarshaller GetInstance();
    public static DeleteSessionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteSessionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSessionResponseUnmarshaller _instance;
    public static DeleteSessionResponseUnmarshaller Instance { get; }
    private static DeleteSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSessionResponseUnmarshaller GetInstance();
    public static DeleteSessionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTableOptimizerRequestMarshaller : object {
    private static DeleteTableOptimizerRequestMarshaller _instance;
    public static DeleteTableOptimizerRequestMarshaller Instance { get; }
    private static DeleteTableOptimizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTableOptimizerRequest publicRequest);
    internal static DeleteTableOptimizerRequestMarshaller GetInstance();
    public static DeleteTableOptimizerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTableOptimizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTableOptimizerResponseUnmarshaller _instance;
    public static DeleteTableOptimizerResponseUnmarshaller Instance { get; }
    private static DeleteTableOptimizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTableOptimizerResponseUnmarshaller GetInstance();
    public static DeleteTableOptimizerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTableRequestMarshaller : object {
    private static DeleteTableRequestMarshaller _instance;
    public static DeleteTableRequestMarshaller Instance { get; }
    private static DeleteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTableRequest publicRequest);
    internal static DeleteTableRequestMarshaller GetInstance();
    public static DeleteTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTableResponseUnmarshaller _instance;
    public static DeleteTableResponseUnmarshaller Instance { get; }
    private static DeleteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTableResponseUnmarshaller GetInstance();
    public static DeleteTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTableVersionRequestMarshaller : object {
    private static DeleteTableVersionRequestMarshaller _instance;
    public static DeleteTableVersionRequestMarshaller Instance { get; }
    private static DeleteTableVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTableVersionRequest publicRequest);
    internal static DeleteTableVersionRequestMarshaller GetInstance();
    public static DeleteTableVersionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTableVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTableVersionResponseUnmarshaller _instance;
    public static DeleteTableVersionResponseUnmarshaller Instance { get; }
    private static DeleteTableVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTableVersionResponseUnmarshaller GetInstance();
    public static DeleteTableVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTriggerRequestMarshaller : object {
    private static DeleteTriggerRequestMarshaller _instance;
    public static DeleteTriggerRequestMarshaller Instance { get; }
    private static DeleteTriggerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTriggerRequest publicRequest);
    internal static DeleteTriggerRequestMarshaller GetInstance();
    public static DeleteTriggerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteTriggerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTriggerResponseUnmarshaller _instance;
    public static DeleteTriggerResponseUnmarshaller Instance { get; }
    private static DeleteTriggerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTriggerResponseUnmarshaller GetInstance();
    public static DeleteTriggerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteUsageProfileRequestMarshaller : object {
    private static DeleteUsageProfileRequestMarshaller _instance;
    public static DeleteUsageProfileRequestMarshaller Instance { get; }
    private static DeleteUsageProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUsageProfileRequest publicRequest);
    internal static DeleteUsageProfileRequestMarshaller GetInstance();
    public static DeleteUsageProfileRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteUsageProfileResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUsageProfileResponseUnmarshaller _instance;
    public static DeleteUsageProfileResponseUnmarshaller Instance { get; }
    private static DeleteUsageProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUsageProfileResponseUnmarshaller GetInstance();
    public static DeleteUsageProfileResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteUserDefinedFunctionRequestMarshaller : object {
    private static DeleteUserDefinedFunctionRequestMarshaller _instance;
    public static DeleteUserDefinedFunctionRequestMarshaller Instance { get; }
    private static DeleteUserDefinedFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUserDefinedFunctionRequest publicRequest);
    internal static DeleteUserDefinedFunctionRequestMarshaller GetInstance();
    public static DeleteUserDefinedFunctionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteUserDefinedFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUserDefinedFunctionResponseUnmarshaller _instance;
    public static DeleteUserDefinedFunctionResponseUnmarshaller Instance { get; }
    private static DeleteUserDefinedFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUserDefinedFunctionResponseUnmarshaller GetInstance();
    public static DeleteUserDefinedFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteWorkflowRequestMarshaller : object {
    private static DeleteWorkflowRequestMarshaller _instance;
    public static DeleteWorkflowRequestMarshaller Instance { get; }
    private static DeleteWorkflowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteWorkflowRequest publicRequest);
    internal static DeleteWorkflowRequestMarshaller GetInstance();
    public static DeleteWorkflowRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeleteWorkflowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteWorkflowResponseUnmarshaller _instance;
    public static DeleteWorkflowResponseUnmarshaller Instance { get; }
    private static DeleteWorkflowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteWorkflowResponseUnmarshaller GetInstance();
    public static DeleteWorkflowResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeltaTargetMarshaller : object {
    public static DeltaTargetMarshaller Instance;
    private static DeltaTargetMarshaller();
    public sealed virtual void Marshall(DeltaTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DeltaTargetUnmarshaller : object {
    private static DeltaTargetUnmarshaller _instance;
    public static DeltaTargetUnmarshaller Instance { get; }
    private static DeltaTargetUnmarshaller();
    private sealed virtual override DeltaTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DeltaTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeltaTarget Unmarshall(JsonUnmarshallerContext context);
    public static DeltaTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DevEndpointCustomLibrariesMarshaller : object {
    public static DevEndpointCustomLibrariesMarshaller Instance;
    private static DevEndpointCustomLibrariesMarshaller();
    public sealed virtual void Marshall(DevEndpointCustomLibraries requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DevEndpointUnmarshaller : object {
    private static DevEndpointUnmarshaller _instance;
    public static DevEndpointUnmarshaller Instance { get; }
    private static DevEndpointUnmarshaller();
    private sealed virtual override DevEndpoint Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DevEndpoint,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DevEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static DevEndpointUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectJDBCSourceMarshaller : object {
    public static DirectJDBCSourceMarshaller Instance;
    private static DirectJDBCSourceMarshaller();
    public sealed virtual void Marshall(DirectJDBCSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectJDBCSourceUnmarshaller : object {
    private static DirectJDBCSourceUnmarshaller _instance;
    public static DirectJDBCSourceUnmarshaller Instance { get; }
    private static DirectJDBCSourceUnmarshaller();
    private sealed virtual override DirectJDBCSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DirectJDBCSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DirectJDBCSource Unmarshall(JsonUnmarshallerContext context);
    public static DirectJDBCSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectKafkaSourceMarshaller : object {
    public static DirectKafkaSourceMarshaller Instance;
    private static DirectKafkaSourceMarshaller();
    public sealed virtual void Marshall(DirectKafkaSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectKafkaSourceUnmarshaller : object {
    private static DirectKafkaSourceUnmarshaller _instance;
    public static DirectKafkaSourceUnmarshaller Instance { get; }
    private static DirectKafkaSourceUnmarshaller();
    private sealed virtual override DirectKafkaSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DirectKafkaSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DirectKafkaSource Unmarshall(JsonUnmarshallerContext context);
    public static DirectKafkaSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectKinesisSourceMarshaller : object {
    public static DirectKinesisSourceMarshaller Instance;
    private static DirectKinesisSourceMarshaller();
    public sealed virtual void Marshall(DirectKinesisSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectKinesisSourceUnmarshaller : object {
    private static DirectKinesisSourceUnmarshaller _instance;
    public static DirectKinesisSourceUnmarshaller Instance { get; }
    private static DirectKinesisSourceUnmarshaller();
    private sealed virtual override DirectKinesisSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DirectKinesisSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DirectKinesisSource Unmarshall(JsonUnmarshallerContext context);
    public static DirectKinesisSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectSchemaChangePolicyMarshaller : object {
    public static DirectSchemaChangePolicyMarshaller Instance;
    private static DirectSchemaChangePolicyMarshaller();
    public sealed virtual void Marshall(DirectSchemaChangePolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DirectSchemaChangePolicyUnmarshaller : object {
    private static DirectSchemaChangePolicyUnmarshaller _instance;
    public static DirectSchemaChangePolicyUnmarshaller Instance { get; }
    private static DirectSchemaChangePolicyUnmarshaller();
    private sealed virtual override DirectSchemaChangePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DirectSchemaChangePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DirectSchemaChangePolicy Unmarshall(JsonUnmarshallerContext context);
    public static DirectSchemaChangePolicyUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DoubleColumnStatisticsDataMarshaller : object {
    public static DoubleColumnStatisticsDataMarshaller Instance;
    private static DoubleColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(DoubleColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DoubleColumnStatisticsDataUnmarshaller : object {
    private static DoubleColumnStatisticsDataUnmarshaller _instance;
    public static DoubleColumnStatisticsDataUnmarshaller Instance { get; }
    private static DoubleColumnStatisticsDataUnmarshaller();
    private sealed virtual override DoubleColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DoubleColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DoubleColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static DoubleColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DQResultsPublishingOptionsMarshaller : object {
    public static DQResultsPublishingOptionsMarshaller Instance;
    private static DQResultsPublishingOptionsMarshaller();
    public sealed virtual void Marshall(DQResultsPublishingOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DQResultsPublishingOptionsUnmarshaller : object {
    private static DQResultsPublishingOptionsUnmarshaller _instance;
    public static DQResultsPublishingOptionsUnmarshaller Instance { get; }
    private static DQResultsPublishingOptionsUnmarshaller();
    private sealed virtual override DQResultsPublishingOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DQResultsPublishingOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DQResultsPublishingOptions Unmarshall(JsonUnmarshallerContext context);
    public static DQResultsPublishingOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DQStopJobOnFailureOptionsMarshaller : object {
    public static DQStopJobOnFailureOptionsMarshaller Instance;
    private static DQStopJobOnFailureOptionsMarshaller();
    public sealed virtual void Marshall(DQStopJobOnFailureOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DQStopJobOnFailureOptionsUnmarshaller : object {
    private static DQStopJobOnFailureOptionsUnmarshaller _instance;
    public static DQStopJobOnFailureOptionsUnmarshaller Instance { get; }
    private static DQStopJobOnFailureOptionsUnmarshaller();
    private sealed virtual override DQStopJobOnFailureOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DQStopJobOnFailureOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DQStopJobOnFailureOptions Unmarshall(JsonUnmarshallerContext context);
    public static DQStopJobOnFailureOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DropDuplicatesMarshaller : object {
    public static DropDuplicatesMarshaller Instance;
    private static DropDuplicatesMarshaller();
    public sealed virtual void Marshall(DropDuplicates requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DropDuplicatesUnmarshaller : object {
    private static DropDuplicatesUnmarshaller _instance;
    public static DropDuplicatesUnmarshaller Instance { get; }
    private static DropDuplicatesUnmarshaller();
    private sealed virtual override DropDuplicates Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DropDuplicates,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DropDuplicates Unmarshall(JsonUnmarshallerContext context);
    public static DropDuplicatesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DropFieldsMarshaller : object {
    public static DropFieldsMarshaller Instance;
    private static DropFieldsMarshaller();
    public sealed virtual void Marshall(DropFields requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DropFieldsUnmarshaller : object {
    private static DropFieldsUnmarshaller _instance;
    public static DropFieldsUnmarshaller Instance { get; }
    private static DropFieldsUnmarshaller();
    private sealed virtual override DropFields Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DropFields,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DropFields Unmarshall(JsonUnmarshallerContext context);
    public static DropFieldsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DropNullFieldsMarshaller : object {
    public static DropNullFieldsMarshaller Instance;
    private static DropNullFieldsMarshaller();
    public sealed virtual void Marshall(DropNullFields requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DropNullFieldsUnmarshaller : object {
    private static DropNullFieldsUnmarshaller _instance;
    public static DropNullFieldsUnmarshaller Instance { get; }
    private static DropNullFieldsUnmarshaller();
    private sealed virtual override DropNullFields Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DropNullFields,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DropNullFields Unmarshall(JsonUnmarshallerContext context);
    public static DropNullFieldsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DynamicTransformMarshaller : object {
    public static DynamicTransformMarshaller Instance;
    private static DynamicTransformMarshaller();
    public sealed virtual void Marshall(DynamicTransform requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DynamicTransformUnmarshaller : object {
    private static DynamicTransformUnmarshaller _instance;
    public static DynamicTransformUnmarshaller Instance { get; }
    private static DynamicTransformUnmarshaller();
    private sealed virtual override DynamicTransform Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DynamicTransform,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DynamicTransform Unmarshall(JsonUnmarshallerContext context);
    public static DynamicTransformUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DynamoDBCatalogSourceMarshaller : object {
    public static DynamoDBCatalogSourceMarshaller Instance;
    private static DynamoDBCatalogSourceMarshaller();
    public sealed virtual void Marshall(DynamoDBCatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DynamoDBCatalogSourceUnmarshaller : object {
    private static DynamoDBCatalogSourceUnmarshaller _instance;
    public static DynamoDBCatalogSourceUnmarshaller Instance { get; }
    private static DynamoDBCatalogSourceUnmarshaller();
    private sealed virtual override DynamoDBCatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DynamoDBCatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DynamoDBCatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static DynamoDBCatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DynamoDBTargetMarshaller : object {
    public static DynamoDBTargetMarshaller Instance;
    private static DynamoDBTargetMarshaller();
    public sealed virtual void Marshall(DynamoDBTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.DynamoDBTargetUnmarshaller : object {
    private static DynamoDBTargetUnmarshaller _instance;
    public static DynamoDBTargetUnmarshaller Instance { get; }
    private static DynamoDBTargetUnmarshaller();
    private sealed virtual override DynamoDBTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.DynamoDBTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DynamoDBTarget Unmarshall(JsonUnmarshallerContext context);
    public static DynamoDBTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EdgeUnmarshaller : object {
    private static EdgeUnmarshaller _instance;
    public static EdgeUnmarshaller Instance { get; }
    private static EdgeUnmarshaller();
    private sealed virtual override Edge Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Edge,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Edge Unmarshall(JsonUnmarshallerContext context);
    public static EdgeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EncryptionAtRestMarshaller : object {
    public static EncryptionAtRestMarshaller Instance;
    private static EncryptionAtRestMarshaller();
    public sealed virtual void Marshall(EncryptionAtRest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EncryptionAtRestUnmarshaller : object {
    private static EncryptionAtRestUnmarshaller _instance;
    public static EncryptionAtRestUnmarshaller Instance { get; }
    private static EncryptionAtRestUnmarshaller();
    private sealed virtual override EncryptionAtRest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.EncryptionAtRest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionAtRest Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionAtRestUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller : object {
    public static EncryptionConfigurationMarshaller Instance;
    private static EncryptionConfigurationMarshaller();
    public sealed virtual void Marshall(EncryptionConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller : object {
    private static EncryptionConfigurationUnmarshaller _instance;
    public static EncryptionConfigurationUnmarshaller Instance { get; }
    private static EncryptionConfigurationUnmarshaller();
    private sealed virtual override EncryptionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.EncryptionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionConfigurationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller : object {
    private static EntityNotFoundExceptionUnmarshaller _instance;
    public static EntityNotFoundExceptionUnmarshaller Instance { get; }
    private static EntityNotFoundExceptionUnmarshaller();
    public sealed virtual EntityNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EntityNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EntityNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ErrorDetailsUnmarshaller : object {
    private static ErrorDetailsUnmarshaller _instance;
    public static ErrorDetailsUnmarshaller Instance { get; }
    private static ErrorDetailsUnmarshaller();
    private sealed virtual override ErrorDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ErrorDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorDetails Unmarshall(JsonUnmarshallerContext context);
    public static ErrorDetailsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller : object {
    private static ErrorDetailUnmarshaller _instance;
    public static ErrorDetailUnmarshaller Instance { get; }
    private static ErrorDetailUnmarshaller();
    private sealed virtual override ErrorDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ErrorDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorDetail Unmarshall(JsonUnmarshallerContext context);
    public static ErrorDetailUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EvaluateDataQualityMarshaller : object {
    public static EvaluateDataQualityMarshaller Instance;
    private static EvaluateDataQualityMarshaller();
    public sealed virtual void Marshall(EvaluateDataQuality requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EvaluateDataQualityMultiFrameMarshaller : object {
    public static EvaluateDataQualityMultiFrameMarshaller Instance;
    private static EvaluateDataQualityMultiFrameMarshaller();
    public sealed virtual void Marshall(EvaluateDataQualityMultiFrame requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EvaluateDataQualityMultiFrameUnmarshaller : object {
    private static EvaluateDataQualityMultiFrameUnmarshaller _instance;
    public static EvaluateDataQualityMultiFrameUnmarshaller Instance { get; }
    private static EvaluateDataQualityMultiFrameUnmarshaller();
    private sealed virtual override EvaluateDataQualityMultiFrame Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.EvaluateDataQualityMultiFrame,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EvaluateDataQualityMultiFrame Unmarshall(JsonUnmarshallerContext context);
    public static EvaluateDataQualityMultiFrameUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EvaluateDataQualityUnmarshaller : object {
    private static EvaluateDataQualityUnmarshaller _instance;
    public static EvaluateDataQualityUnmarshaller Instance { get; }
    private static EvaluateDataQualityUnmarshaller();
    private sealed virtual override EvaluateDataQuality Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.EvaluateDataQuality,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EvaluateDataQuality Unmarshall(JsonUnmarshallerContext context);
    public static EvaluateDataQualityUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EvaluationMetricsUnmarshaller : object {
    private static EvaluationMetricsUnmarshaller _instance;
    public static EvaluationMetricsUnmarshaller Instance { get; }
    private static EvaluationMetricsUnmarshaller();
    private sealed virtual override EvaluationMetrics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.EvaluationMetrics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EvaluationMetrics Unmarshall(JsonUnmarshallerContext context);
    public static EvaluationMetricsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EventBatchingConditionMarshaller : object {
    public static EventBatchingConditionMarshaller Instance;
    private static EventBatchingConditionMarshaller();
    public sealed virtual void Marshall(EventBatchingCondition requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.EventBatchingConditionUnmarshaller : object {
    private static EventBatchingConditionUnmarshaller _instance;
    public static EventBatchingConditionUnmarshaller Instance { get; }
    private static EventBatchingConditionUnmarshaller();
    private sealed virtual override EventBatchingCondition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.EventBatchingCondition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventBatchingCondition Unmarshall(JsonUnmarshallerContext context);
    public static EventBatchingConditionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ExecutionPropertyMarshaller : object {
    public static ExecutionPropertyMarshaller Instance;
    private static ExecutionPropertyMarshaller();
    public sealed virtual void Marshall(ExecutionProperty requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ExecutionPropertyUnmarshaller : object {
    private static ExecutionPropertyUnmarshaller _instance;
    public static ExecutionPropertyUnmarshaller Instance { get; }
    private static ExecutionPropertyUnmarshaller();
    private sealed virtual override ExecutionProperty Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ExecutionProperty,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExecutionProperty Unmarshall(JsonUnmarshallerContext context);
    public static ExecutionPropertyUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ExportLabelsTaskRunPropertiesUnmarshaller : object {
    private static ExportLabelsTaskRunPropertiesUnmarshaller _instance;
    public static ExportLabelsTaskRunPropertiesUnmarshaller Instance { get; }
    private static ExportLabelsTaskRunPropertiesUnmarshaller();
    private sealed virtual override ExportLabelsTaskRunProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ExportLabelsTaskRunProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportLabelsTaskRunProperties Unmarshall(JsonUnmarshallerContext context);
    public static ExportLabelsTaskRunPropertiesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FederatedDatabaseMarshaller : object {
    public static FederatedDatabaseMarshaller Instance;
    private static FederatedDatabaseMarshaller();
    public sealed virtual void Marshall(FederatedDatabase requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FederatedDatabaseUnmarshaller : object {
    private static FederatedDatabaseUnmarshaller _instance;
    public static FederatedDatabaseUnmarshaller Instance { get; }
    private static FederatedDatabaseUnmarshaller();
    private sealed virtual override FederatedDatabase Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FederatedDatabase,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FederatedDatabase Unmarshall(JsonUnmarshallerContext context);
    public static FederatedDatabaseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FederatedResourceAlreadyExistsExceptionUnmarshaller : object {
    private static FederatedResourceAlreadyExistsExceptionUnmarshaller _instance;
    public static FederatedResourceAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static FederatedResourceAlreadyExistsExceptionUnmarshaller();
    public sealed virtual FederatedResourceAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FederatedResourceAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FederatedResourceAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FederatedTableUnmarshaller : object {
    private static FederatedTableUnmarshaller _instance;
    public static FederatedTableUnmarshaller Instance { get; }
    private static FederatedTableUnmarshaller();
    private sealed virtual override FederatedTable Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FederatedTable,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FederatedTable Unmarshall(JsonUnmarshallerContext context);
    public static FederatedTableUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FederationSourceExceptionUnmarshaller : object {
    private static FederationSourceExceptionUnmarshaller _instance;
    public static FederationSourceExceptionUnmarshaller Instance { get; }
    private static FederationSourceExceptionUnmarshaller();
    public sealed virtual FederationSourceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FederationSourceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FederationSourceExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FederationSourceRetryableExceptionUnmarshaller : object {
    private static FederationSourceRetryableExceptionUnmarshaller _instance;
    public static FederationSourceRetryableExceptionUnmarshaller Instance { get; }
    private static FederationSourceRetryableExceptionUnmarshaller();
    public sealed virtual FederationSourceRetryableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FederationSourceRetryableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FederationSourceRetryableExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FillMissingValuesMarshaller : object {
    public static FillMissingValuesMarshaller Instance;
    private static FillMissingValuesMarshaller();
    public sealed virtual void Marshall(FillMissingValues requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FillMissingValuesUnmarshaller : object {
    private static FillMissingValuesUnmarshaller _instance;
    public static FillMissingValuesUnmarshaller Instance { get; }
    private static FillMissingValuesUnmarshaller();
    private sealed virtual override FillMissingValues Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FillMissingValues,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FillMissingValues Unmarshall(JsonUnmarshallerContext context);
    public static FillMissingValuesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FilterExpressionMarshaller : object {
    public static FilterExpressionMarshaller Instance;
    private static FilterExpressionMarshaller();
    public sealed virtual void Marshall(FilterExpression requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FilterExpressionUnmarshaller : object {
    private static FilterExpressionUnmarshaller _instance;
    public static FilterExpressionUnmarshaller Instance { get; }
    private static FilterExpressionUnmarshaller();
    private sealed virtual override FilterExpression Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FilterExpression,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FilterExpression Unmarshall(JsonUnmarshallerContext context);
    public static FilterExpressionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FilterMarshaller : object {
    public static FilterMarshaller Instance;
    private static FilterMarshaller();
    public sealed virtual void Marshall(Filter requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FilterUnmarshaller : object {
    private static FilterUnmarshaller _instance;
    public static FilterUnmarshaller Instance { get; }
    private static FilterUnmarshaller();
    private sealed virtual override Filter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Filter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Filter Unmarshall(JsonUnmarshallerContext context);
    public static FilterUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FilterValueMarshaller : object {
    public static FilterValueMarshaller Instance;
    private static FilterValueMarshaller();
    public sealed virtual void Marshall(FilterValue requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FilterValueUnmarshaller : object {
    private static FilterValueUnmarshaller _instance;
    public static FilterValueUnmarshaller Instance { get; }
    private static FilterValueUnmarshaller();
    private sealed virtual override FilterValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FilterValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FilterValue Unmarshall(JsonUnmarshallerContext context);
    public static FilterValueUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FindMatchesMetricsUnmarshaller : object {
    private static FindMatchesMetricsUnmarshaller _instance;
    public static FindMatchesMetricsUnmarshaller Instance { get; }
    private static FindMatchesMetricsUnmarshaller();
    private sealed virtual override FindMatchesMetrics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FindMatchesMetrics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindMatchesMetrics Unmarshall(JsonUnmarshallerContext context);
    public static FindMatchesMetricsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FindMatchesParametersMarshaller : object {
    public static FindMatchesParametersMarshaller Instance;
    private static FindMatchesParametersMarshaller();
    public sealed virtual void Marshall(FindMatchesParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FindMatchesParametersUnmarshaller : object {
    private static FindMatchesParametersUnmarshaller _instance;
    public static FindMatchesParametersUnmarshaller Instance { get; }
    private static FindMatchesParametersUnmarshaller();
    private sealed virtual override FindMatchesParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FindMatchesParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindMatchesParameters Unmarshall(JsonUnmarshallerContext context);
    public static FindMatchesParametersUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.FindMatchesTaskRunPropertiesUnmarshaller : object {
    private static FindMatchesTaskRunPropertiesUnmarshaller _instance;
    public static FindMatchesTaskRunPropertiesUnmarshaller Instance { get; }
    private static FindMatchesTaskRunPropertiesUnmarshaller();
    private sealed virtual override FindMatchesTaskRunProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.FindMatchesTaskRunProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindMatchesTaskRunProperties Unmarshall(JsonUnmarshallerContext context);
    public static FindMatchesTaskRunPropertiesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetBlueprintRequestMarshaller : object {
    private static GetBlueprintRequestMarshaller _instance;
    public static GetBlueprintRequestMarshaller Instance { get; }
    private static GetBlueprintRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBlueprintRequest publicRequest);
    internal static GetBlueprintRequestMarshaller GetInstance();
    public static GetBlueprintRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetBlueprintResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetBlueprintResponseUnmarshaller _instance;
    public static GetBlueprintResponseUnmarshaller Instance { get; }
    private static GetBlueprintResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBlueprintResponseUnmarshaller GetInstance();
    public static GetBlueprintResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetBlueprintRunRequestMarshaller : object {
    private static GetBlueprintRunRequestMarshaller _instance;
    public static GetBlueprintRunRequestMarshaller Instance { get; }
    private static GetBlueprintRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBlueprintRunRequest publicRequest);
    internal static GetBlueprintRunRequestMarshaller GetInstance();
    public static GetBlueprintRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetBlueprintRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetBlueprintRunResponseUnmarshaller _instance;
    public static GetBlueprintRunResponseUnmarshaller Instance { get; }
    private static GetBlueprintRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBlueprintRunResponseUnmarshaller GetInstance();
    public static GetBlueprintRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetBlueprintRunsRequestMarshaller : object {
    private static GetBlueprintRunsRequestMarshaller _instance;
    public static GetBlueprintRunsRequestMarshaller Instance { get; }
    private static GetBlueprintRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBlueprintRunsRequest publicRequest);
    internal static GetBlueprintRunsRequestMarshaller GetInstance();
    public static GetBlueprintRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetBlueprintRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetBlueprintRunsResponseUnmarshaller _instance;
    public static GetBlueprintRunsResponseUnmarshaller Instance { get; }
    private static GetBlueprintRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBlueprintRunsResponseUnmarshaller GetInstance();
    public static GetBlueprintRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCatalogImportStatusRequestMarshaller : object {
    private static GetCatalogImportStatusRequestMarshaller _instance;
    public static GetCatalogImportStatusRequestMarshaller Instance { get; }
    private static GetCatalogImportStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCatalogImportStatusRequest publicRequest);
    internal static GetCatalogImportStatusRequestMarshaller GetInstance();
    public static GetCatalogImportStatusRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCatalogImportStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCatalogImportStatusResponseUnmarshaller _instance;
    public static GetCatalogImportStatusResponseUnmarshaller Instance { get; }
    private static GetCatalogImportStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCatalogImportStatusResponseUnmarshaller GetInstance();
    public static GetCatalogImportStatusResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetClassifierRequestMarshaller : object {
    private static GetClassifierRequestMarshaller _instance;
    public static GetClassifierRequestMarshaller Instance { get; }
    private static GetClassifierRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetClassifierRequest publicRequest);
    internal static GetClassifierRequestMarshaller GetInstance();
    public static GetClassifierRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetClassifierResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetClassifierResponseUnmarshaller _instance;
    public static GetClassifierResponseUnmarshaller Instance { get; }
    private static GetClassifierResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetClassifierResponseUnmarshaller GetInstance();
    public static GetClassifierResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetClassifiersRequestMarshaller : object {
    private static GetClassifiersRequestMarshaller _instance;
    public static GetClassifiersRequestMarshaller Instance { get; }
    private static GetClassifiersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetClassifiersRequest publicRequest);
    internal static GetClassifiersRequestMarshaller GetInstance();
    public static GetClassifiersRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetClassifiersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetClassifiersResponseUnmarshaller _instance;
    public static GetClassifiersResponseUnmarshaller Instance { get; }
    private static GetClassifiersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetClassifiersResponseUnmarshaller GetInstance();
    public static GetClassifiersResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsForPartitionRequestMarshaller : object {
    private static GetColumnStatisticsForPartitionRequestMarshaller _instance;
    public static GetColumnStatisticsForPartitionRequestMarshaller Instance { get; }
    private static GetColumnStatisticsForPartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetColumnStatisticsForPartitionRequest publicRequest);
    internal static GetColumnStatisticsForPartitionRequestMarshaller GetInstance();
    public static GetColumnStatisticsForPartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsForPartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetColumnStatisticsForPartitionResponseUnmarshaller _instance;
    public static GetColumnStatisticsForPartitionResponseUnmarshaller Instance { get; }
    private static GetColumnStatisticsForPartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetColumnStatisticsForPartitionResponseUnmarshaller GetInstance();
    public static GetColumnStatisticsForPartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsForTableRequestMarshaller : object {
    private static GetColumnStatisticsForTableRequestMarshaller _instance;
    public static GetColumnStatisticsForTableRequestMarshaller Instance { get; }
    private static GetColumnStatisticsForTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetColumnStatisticsForTableRequest publicRequest);
    internal static GetColumnStatisticsForTableRequestMarshaller GetInstance();
    public static GetColumnStatisticsForTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsForTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetColumnStatisticsForTableResponseUnmarshaller _instance;
    public static GetColumnStatisticsForTableResponseUnmarshaller Instance { get; }
    private static GetColumnStatisticsForTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetColumnStatisticsForTableResponseUnmarshaller GetInstance();
    public static GetColumnStatisticsForTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsTaskRunRequestMarshaller : object {
    private static GetColumnStatisticsTaskRunRequestMarshaller _instance;
    public static GetColumnStatisticsTaskRunRequestMarshaller Instance { get; }
    private static GetColumnStatisticsTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetColumnStatisticsTaskRunRequest publicRequest);
    internal static GetColumnStatisticsTaskRunRequestMarshaller GetInstance();
    public static GetColumnStatisticsTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetColumnStatisticsTaskRunResponseUnmarshaller _instance;
    public static GetColumnStatisticsTaskRunResponseUnmarshaller Instance { get; }
    private static GetColumnStatisticsTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetColumnStatisticsTaskRunResponseUnmarshaller GetInstance();
    public static GetColumnStatisticsTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsTaskRunsRequestMarshaller : object {
    private static GetColumnStatisticsTaskRunsRequestMarshaller _instance;
    public static GetColumnStatisticsTaskRunsRequestMarshaller Instance { get; }
    private static GetColumnStatisticsTaskRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetColumnStatisticsTaskRunsRequest publicRequest);
    internal static GetColumnStatisticsTaskRunsRequestMarshaller GetInstance();
    public static GetColumnStatisticsTaskRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetColumnStatisticsTaskRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetColumnStatisticsTaskRunsResponseUnmarshaller _instance;
    public static GetColumnStatisticsTaskRunsResponseUnmarshaller Instance { get; }
    private static GetColumnStatisticsTaskRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetColumnStatisticsTaskRunsResponseUnmarshaller GetInstance();
    public static GetColumnStatisticsTaskRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetConnectionRequestMarshaller : object {
    private static GetConnectionRequestMarshaller _instance;
    public static GetConnectionRequestMarshaller Instance { get; }
    private static GetConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetConnectionRequest publicRequest);
    internal static GetConnectionRequestMarshaller GetInstance();
    public static GetConnectionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetConnectionResponseUnmarshaller _instance;
    public static GetConnectionResponseUnmarshaller Instance { get; }
    private static GetConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetConnectionResponseUnmarshaller GetInstance();
    public static GetConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetConnectionsFilterMarshaller : object {
    public static GetConnectionsFilterMarshaller Instance;
    private static GetConnectionsFilterMarshaller();
    public sealed virtual void Marshall(GetConnectionsFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetConnectionsRequestMarshaller : object {
    private static GetConnectionsRequestMarshaller _instance;
    public static GetConnectionsRequestMarshaller Instance { get; }
    private static GetConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetConnectionsRequest publicRequest);
    internal static GetConnectionsRequestMarshaller GetInstance();
    public static GetConnectionsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetConnectionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetConnectionsResponseUnmarshaller _instance;
    public static GetConnectionsResponseUnmarshaller Instance { get; }
    private static GetConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetConnectionsResponseUnmarshaller GetInstance();
    public static GetConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCrawlerMetricsRequestMarshaller : object {
    private static GetCrawlerMetricsRequestMarshaller _instance;
    public static GetCrawlerMetricsRequestMarshaller Instance { get; }
    private static GetCrawlerMetricsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCrawlerMetricsRequest publicRequest);
    internal static GetCrawlerMetricsRequestMarshaller GetInstance();
    public static GetCrawlerMetricsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCrawlerMetricsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCrawlerMetricsResponseUnmarshaller _instance;
    public static GetCrawlerMetricsResponseUnmarshaller Instance { get; }
    private static GetCrawlerMetricsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCrawlerMetricsResponseUnmarshaller GetInstance();
    public static GetCrawlerMetricsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCrawlerRequestMarshaller : object {
    private static GetCrawlerRequestMarshaller _instance;
    public static GetCrawlerRequestMarshaller Instance { get; }
    private static GetCrawlerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCrawlerRequest publicRequest);
    internal static GetCrawlerRequestMarshaller GetInstance();
    public static GetCrawlerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCrawlerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCrawlerResponseUnmarshaller _instance;
    public static GetCrawlerResponseUnmarshaller Instance { get; }
    private static GetCrawlerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCrawlerResponseUnmarshaller GetInstance();
    public static GetCrawlerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCrawlersRequestMarshaller : object {
    private static GetCrawlersRequestMarshaller _instance;
    public static GetCrawlersRequestMarshaller Instance { get; }
    private static GetCrawlersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCrawlersRequest publicRequest);
    internal static GetCrawlersRequestMarshaller GetInstance();
    public static GetCrawlersRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCrawlersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCrawlersResponseUnmarshaller _instance;
    public static GetCrawlersResponseUnmarshaller Instance { get; }
    private static GetCrawlersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCrawlersResponseUnmarshaller GetInstance();
    public static GetCrawlersResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCustomEntityTypeRequestMarshaller : object {
    private static GetCustomEntityTypeRequestMarshaller _instance;
    public static GetCustomEntityTypeRequestMarshaller Instance { get; }
    private static GetCustomEntityTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCustomEntityTypeRequest publicRequest);
    internal static GetCustomEntityTypeRequestMarshaller GetInstance();
    public static GetCustomEntityTypeRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetCustomEntityTypeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCustomEntityTypeResponseUnmarshaller _instance;
    public static GetCustomEntityTypeResponseUnmarshaller Instance { get; }
    private static GetCustomEntityTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCustomEntityTypeResponseUnmarshaller GetInstance();
    public static GetCustomEntityTypeResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDatabaseRequestMarshaller : object {
    private static GetDatabaseRequestMarshaller _instance;
    public static GetDatabaseRequestMarshaller Instance { get; }
    private static GetDatabaseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDatabaseRequest publicRequest);
    internal static GetDatabaseRequestMarshaller GetInstance();
    public static GetDatabaseRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDatabaseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDatabaseResponseUnmarshaller _instance;
    public static GetDatabaseResponseUnmarshaller Instance { get; }
    private static GetDatabaseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDatabaseResponseUnmarshaller GetInstance();
    public static GetDatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDatabasesRequestMarshaller : object {
    private static GetDatabasesRequestMarshaller _instance;
    public static GetDatabasesRequestMarshaller Instance { get; }
    private static GetDatabasesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDatabasesRequest publicRequest);
    internal static GetDatabasesRequestMarshaller GetInstance();
    public static GetDatabasesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDatabasesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDatabasesResponseUnmarshaller _instance;
    public static GetDatabasesResponseUnmarshaller Instance { get; }
    private static GetDatabasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDatabasesResponseUnmarshaller GetInstance();
    public static GetDatabasesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataCatalogEncryptionSettingsRequestMarshaller : object {
    private static GetDataCatalogEncryptionSettingsRequestMarshaller _instance;
    public static GetDataCatalogEncryptionSettingsRequestMarshaller Instance { get; }
    private static GetDataCatalogEncryptionSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataCatalogEncryptionSettingsRequest publicRequest);
    internal static GetDataCatalogEncryptionSettingsRequestMarshaller GetInstance();
    public static GetDataCatalogEncryptionSettingsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataCatalogEncryptionSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataCatalogEncryptionSettingsResponseUnmarshaller _instance;
    public static GetDataCatalogEncryptionSettingsResponseUnmarshaller Instance { get; }
    private static GetDataCatalogEncryptionSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataCatalogEncryptionSettingsResponseUnmarshaller GetInstance();
    public static GetDataCatalogEncryptionSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataflowGraphRequestMarshaller : object {
    private static GetDataflowGraphRequestMarshaller _instance;
    public static GetDataflowGraphRequestMarshaller Instance { get; }
    private static GetDataflowGraphRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataflowGraphRequest publicRequest);
    internal static GetDataflowGraphRequestMarshaller GetInstance();
    public static GetDataflowGraphRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataflowGraphResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataflowGraphResponseUnmarshaller _instance;
    public static GetDataflowGraphResponseUnmarshaller Instance { get; }
    private static GetDataflowGraphResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataflowGraphResponseUnmarshaller GetInstance();
    public static GetDataflowGraphResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityResultRequestMarshaller : object {
    private static GetDataQualityResultRequestMarshaller _instance;
    public static GetDataQualityResultRequestMarshaller Instance { get; }
    private static GetDataQualityResultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataQualityResultRequest publicRequest);
    internal static GetDataQualityResultRequestMarshaller GetInstance();
    public static GetDataQualityResultRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityResultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataQualityResultResponseUnmarshaller _instance;
    public static GetDataQualityResultResponseUnmarshaller Instance { get; }
    private static GetDataQualityResultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataQualityResultResponseUnmarshaller GetInstance();
    public static GetDataQualityResultResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityRuleRecommendationRunRequestMarshaller : object {
    private static GetDataQualityRuleRecommendationRunRequestMarshaller _instance;
    public static GetDataQualityRuleRecommendationRunRequestMarshaller Instance { get; }
    private static GetDataQualityRuleRecommendationRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataQualityRuleRecommendationRunRequest publicRequest);
    internal static GetDataQualityRuleRecommendationRunRequestMarshaller GetInstance();
    public static GetDataQualityRuleRecommendationRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityRuleRecommendationRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataQualityRuleRecommendationRunResponseUnmarshaller _instance;
    public static GetDataQualityRuleRecommendationRunResponseUnmarshaller Instance { get; }
    private static GetDataQualityRuleRecommendationRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataQualityRuleRecommendationRunResponseUnmarshaller GetInstance();
    public static GetDataQualityRuleRecommendationRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityRulesetEvaluationRunRequestMarshaller : object {
    private static GetDataQualityRulesetEvaluationRunRequestMarshaller _instance;
    public static GetDataQualityRulesetEvaluationRunRequestMarshaller Instance { get; }
    private static GetDataQualityRulesetEvaluationRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataQualityRulesetEvaluationRunRequest publicRequest);
    internal static GetDataQualityRulesetEvaluationRunRequestMarshaller GetInstance();
    public static GetDataQualityRulesetEvaluationRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityRulesetEvaluationRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataQualityRulesetEvaluationRunResponseUnmarshaller _instance;
    public static GetDataQualityRulesetEvaluationRunResponseUnmarshaller Instance { get; }
    private static GetDataQualityRulesetEvaluationRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataQualityRulesetEvaluationRunResponseUnmarshaller GetInstance();
    public static GetDataQualityRulesetEvaluationRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityRulesetRequestMarshaller : object {
    private static GetDataQualityRulesetRequestMarshaller _instance;
    public static GetDataQualityRulesetRequestMarshaller Instance { get; }
    private static GetDataQualityRulesetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataQualityRulesetRequest publicRequest);
    internal static GetDataQualityRulesetRequestMarshaller GetInstance();
    public static GetDataQualityRulesetRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDataQualityRulesetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataQualityRulesetResponseUnmarshaller _instance;
    public static GetDataQualityRulesetResponseUnmarshaller Instance { get; }
    private static GetDataQualityRulesetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataQualityRulesetResponseUnmarshaller GetInstance();
    public static GetDataQualityRulesetResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDevEndpointRequestMarshaller : object {
    private static GetDevEndpointRequestMarshaller _instance;
    public static GetDevEndpointRequestMarshaller Instance { get; }
    private static GetDevEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDevEndpointRequest publicRequest);
    internal static GetDevEndpointRequestMarshaller GetInstance();
    public static GetDevEndpointRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDevEndpointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDevEndpointResponseUnmarshaller _instance;
    public static GetDevEndpointResponseUnmarshaller Instance { get; }
    private static GetDevEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDevEndpointResponseUnmarshaller GetInstance();
    public static GetDevEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDevEndpointsRequestMarshaller : object {
    private static GetDevEndpointsRequestMarshaller _instance;
    public static GetDevEndpointsRequestMarshaller Instance { get; }
    private static GetDevEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDevEndpointsRequest publicRequest);
    internal static GetDevEndpointsRequestMarshaller GetInstance();
    public static GetDevEndpointsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetDevEndpointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDevEndpointsResponseUnmarshaller _instance;
    public static GetDevEndpointsResponseUnmarshaller Instance { get; }
    private static GetDevEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDevEndpointsResponseUnmarshaller GetInstance();
    public static GetDevEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobBookmarkRequestMarshaller : object {
    private static GetJobBookmarkRequestMarshaller _instance;
    public static GetJobBookmarkRequestMarshaller Instance { get; }
    private static GetJobBookmarkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetJobBookmarkRequest publicRequest);
    internal static GetJobBookmarkRequestMarshaller GetInstance();
    public static GetJobBookmarkRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobBookmarkResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetJobBookmarkResponseUnmarshaller _instance;
    public static GetJobBookmarkResponseUnmarshaller Instance { get; }
    private static GetJobBookmarkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetJobBookmarkResponseUnmarshaller GetInstance();
    public static GetJobBookmarkResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobRequestMarshaller : object {
    private static GetJobRequestMarshaller _instance;
    public static GetJobRequestMarshaller Instance { get; }
    private static GetJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetJobRequest publicRequest);
    internal static GetJobRequestMarshaller GetInstance();
    public static GetJobRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetJobResponseUnmarshaller _instance;
    public static GetJobResponseUnmarshaller Instance { get; }
    private static GetJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetJobResponseUnmarshaller GetInstance();
    public static GetJobResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobRunRequestMarshaller : object {
    private static GetJobRunRequestMarshaller _instance;
    public static GetJobRunRequestMarshaller Instance { get; }
    private static GetJobRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetJobRunRequest publicRequest);
    internal static GetJobRunRequestMarshaller GetInstance();
    public static GetJobRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetJobRunResponseUnmarshaller _instance;
    public static GetJobRunResponseUnmarshaller Instance { get; }
    private static GetJobRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetJobRunResponseUnmarshaller GetInstance();
    public static GetJobRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobRunsRequestMarshaller : object {
    private static GetJobRunsRequestMarshaller _instance;
    public static GetJobRunsRequestMarshaller Instance { get; }
    private static GetJobRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetJobRunsRequest publicRequest);
    internal static GetJobRunsRequestMarshaller GetInstance();
    public static GetJobRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetJobRunsResponseUnmarshaller _instance;
    public static GetJobRunsResponseUnmarshaller Instance { get; }
    private static GetJobRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetJobRunsResponseUnmarshaller GetInstance();
    public static GetJobRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobsRequestMarshaller : object {
    private static GetJobsRequestMarshaller _instance;
    public static GetJobsRequestMarshaller Instance { get; }
    private static GetJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetJobsRequest publicRequest);
    internal static GetJobsRequestMarshaller GetInstance();
    public static GetJobsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetJobsResponseUnmarshaller _instance;
    public static GetJobsResponseUnmarshaller Instance { get; }
    private static GetJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetJobsResponseUnmarshaller GetInstance();
    public static GetJobsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMappingRequestMarshaller : object {
    private static GetMappingRequestMarshaller _instance;
    public static GetMappingRequestMarshaller Instance { get; }
    private static GetMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMappingRequest publicRequest);
    internal static GetMappingRequestMarshaller GetInstance();
    public static GetMappingRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMappingResponseUnmarshaller _instance;
    public static GetMappingResponseUnmarshaller Instance { get; }
    private static GetMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMappingResponseUnmarshaller GetInstance();
    public static GetMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTaskRunRequestMarshaller : object {
    private static GetMLTaskRunRequestMarshaller _instance;
    public static GetMLTaskRunRequestMarshaller Instance { get; }
    private static GetMLTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMLTaskRunRequest publicRequest);
    internal static GetMLTaskRunRequestMarshaller GetInstance();
    public static GetMLTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMLTaskRunResponseUnmarshaller _instance;
    public static GetMLTaskRunResponseUnmarshaller Instance { get; }
    private static GetMLTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMLTaskRunResponseUnmarshaller GetInstance();
    public static GetMLTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTaskRunsRequestMarshaller : object {
    private static GetMLTaskRunsRequestMarshaller _instance;
    public static GetMLTaskRunsRequestMarshaller Instance { get; }
    private static GetMLTaskRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMLTaskRunsRequest publicRequest);
    internal static GetMLTaskRunsRequestMarshaller GetInstance();
    public static GetMLTaskRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTaskRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMLTaskRunsResponseUnmarshaller _instance;
    public static GetMLTaskRunsResponseUnmarshaller Instance { get; }
    private static GetMLTaskRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMLTaskRunsResponseUnmarshaller GetInstance();
    public static GetMLTaskRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTransformRequestMarshaller : object {
    private static GetMLTransformRequestMarshaller _instance;
    public static GetMLTransformRequestMarshaller Instance { get; }
    private static GetMLTransformRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMLTransformRequest publicRequest);
    internal static GetMLTransformRequestMarshaller GetInstance();
    public static GetMLTransformRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTransformResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMLTransformResponseUnmarshaller _instance;
    public static GetMLTransformResponseUnmarshaller Instance { get; }
    private static GetMLTransformResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMLTransformResponseUnmarshaller GetInstance();
    public static GetMLTransformResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTransformsRequestMarshaller : object {
    private static GetMLTransformsRequestMarshaller _instance;
    public static GetMLTransformsRequestMarshaller Instance { get; }
    private static GetMLTransformsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMLTransformsRequest publicRequest);
    internal static GetMLTransformsRequestMarshaller GetInstance();
    public static GetMLTransformsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetMLTransformsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMLTransformsResponseUnmarshaller _instance;
    public static GetMLTransformsResponseUnmarshaller Instance { get; }
    private static GetMLTransformsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMLTransformsResponseUnmarshaller GetInstance();
    public static GetMLTransformsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPartitionIndexesRequestMarshaller : object {
    private static GetPartitionIndexesRequestMarshaller _instance;
    public static GetPartitionIndexesRequestMarshaller Instance { get; }
    private static GetPartitionIndexesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPartitionIndexesRequest publicRequest);
    internal static GetPartitionIndexesRequestMarshaller GetInstance();
    public static GetPartitionIndexesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPartitionIndexesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPartitionIndexesResponseUnmarshaller _instance;
    public static GetPartitionIndexesResponseUnmarshaller Instance { get; }
    private static GetPartitionIndexesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPartitionIndexesResponseUnmarshaller GetInstance();
    public static GetPartitionIndexesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPartitionRequestMarshaller : object {
    private static GetPartitionRequestMarshaller _instance;
    public static GetPartitionRequestMarshaller Instance { get; }
    private static GetPartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPartitionRequest publicRequest);
    internal static GetPartitionRequestMarshaller GetInstance();
    public static GetPartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPartitionResponseUnmarshaller _instance;
    public static GetPartitionResponseUnmarshaller Instance { get; }
    private static GetPartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPartitionResponseUnmarshaller GetInstance();
    public static GetPartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPartitionsRequestMarshaller : object {
    private static GetPartitionsRequestMarshaller _instance;
    public static GetPartitionsRequestMarshaller Instance { get; }
    private static GetPartitionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPartitionsRequest publicRequest);
    internal static GetPartitionsRequestMarshaller GetInstance();
    public static GetPartitionsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPartitionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPartitionsResponseUnmarshaller _instance;
    public static GetPartitionsResponseUnmarshaller Instance { get; }
    private static GetPartitionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPartitionsResponseUnmarshaller GetInstance();
    public static GetPartitionsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPlanRequestMarshaller : object {
    private static GetPlanRequestMarshaller _instance;
    public static GetPlanRequestMarshaller Instance { get; }
    private static GetPlanRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPlanRequest publicRequest);
    internal static GetPlanRequestMarshaller GetInstance();
    public static GetPlanRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetPlanResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPlanResponseUnmarshaller _instance;
    public static GetPlanResponseUnmarshaller Instance { get; }
    private static GetPlanResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPlanResponseUnmarshaller GetInstance();
    public static GetPlanResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetRegistryRequestMarshaller : object {
    private static GetRegistryRequestMarshaller _instance;
    public static GetRegistryRequestMarshaller Instance { get; }
    private static GetRegistryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRegistryRequest publicRequest);
    internal static GetRegistryRequestMarshaller GetInstance();
    public static GetRegistryRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetRegistryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRegistryResponseUnmarshaller _instance;
    public static GetRegistryResponseUnmarshaller Instance { get; }
    private static GetRegistryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRegistryResponseUnmarshaller GetInstance();
    public static GetRegistryResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetResourcePoliciesRequestMarshaller : object {
    private static GetResourcePoliciesRequestMarshaller _instance;
    public static GetResourcePoliciesRequestMarshaller Instance { get; }
    private static GetResourcePoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePoliciesRequest publicRequest);
    internal static GetResourcePoliciesRequestMarshaller GetInstance();
    public static GetResourcePoliciesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetResourcePoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetResourcePoliciesResponseUnmarshaller _instance;
    public static GetResourcePoliciesResponseUnmarshaller Instance { get; }
    private static GetResourcePoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePoliciesResponseUnmarshaller GetInstance();
    public static GetResourcePoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller : object {
    private static GetResourcePolicyRequestMarshaller _instance;
    public static GetResourcePolicyRequestMarshaller Instance { get; }
    private static GetResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePolicyRequest publicRequest);
    internal static GetResourcePolicyRequestMarshaller GetInstance();
    public static GetResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetResourcePolicyResponseUnmarshaller _instance;
    public static GetResourcePolicyResponseUnmarshaller Instance { get; }
    private static GetResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePolicyResponseUnmarshaller GetInstance();
    public static GetResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaByDefinitionRequestMarshaller : object {
    private static GetSchemaByDefinitionRequestMarshaller _instance;
    public static GetSchemaByDefinitionRequestMarshaller Instance { get; }
    private static GetSchemaByDefinitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSchemaByDefinitionRequest publicRequest);
    internal static GetSchemaByDefinitionRequestMarshaller GetInstance();
    public static GetSchemaByDefinitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaByDefinitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSchemaByDefinitionResponseUnmarshaller _instance;
    public static GetSchemaByDefinitionResponseUnmarshaller Instance { get; }
    private static GetSchemaByDefinitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSchemaByDefinitionResponseUnmarshaller GetInstance();
    public static GetSchemaByDefinitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaRequestMarshaller : object {
    private static GetSchemaRequestMarshaller _instance;
    public static GetSchemaRequestMarshaller Instance { get; }
    private static GetSchemaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSchemaRequest publicRequest);
    internal static GetSchemaRequestMarshaller GetInstance();
    public static GetSchemaRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSchemaResponseUnmarshaller _instance;
    public static GetSchemaResponseUnmarshaller Instance { get; }
    private static GetSchemaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSchemaResponseUnmarshaller GetInstance();
    public static GetSchemaResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaVersionRequestMarshaller : object {
    private static GetSchemaVersionRequestMarshaller _instance;
    public static GetSchemaVersionRequestMarshaller Instance { get; }
    private static GetSchemaVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSchemaVersionRequest publicRequest);
    internal static GetSchemaVersionRequestMarshaller GetInstance();
    public static GetSchemaVersionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSchemaVersionResponseUnmarshaller _instance;
    public static GetSchemaVersionResponseUnmarshaller Instance { get; }
    private static GetSchemaVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSchemaVersionResponseUnmarshaller GetInstance();
    public static GetSchemaVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaVersionsDiffRequestMarshaller : object {
    private static GetSchemaVersionsDiffRequestMarshaller _instance;
    public static GetSchemaVersionsDiffRequestMarshaller Instance { get; }
    private static GetSchemaVersionsDiffRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSchemaVersionsDiffRequest publicRequest);
    internal static GetSchemaVersionsDiffRequestMarshaller GetInstance();
    public static GetSchemaVersionsDiffRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSchemaVersionsDiffResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSchemaVersionsDiffResponseUnmarshaller _instance;
    public static GetSchemaVersionsDiffResponseUnmarshaller Instance { get; }
    private static GetSchemaVersionsDiffResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSchemaVersionsDiffResponseUnmarshaller GetInstance();
    public static GetSchemaVersionsDiffResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSecurityConfigurationRequestMarshaller : object {
    private static GetSecurityConfigurationRequestMarshaller _instance;
    public static GetSecurityConfigurationRequestMarshaller Instance { get; }
    private static GetSecurityConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSecurityConfigurationRequest publicRequest);
    internal static GetSecurityConfigurationRequestMarshaller GetInstance();
    public static GetSecurityConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSecurityConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSecurityConfigurationResponseUnmarshaller _instance;
    public static GetSecurityConfigurationResponseUnmarshaller Instance { get; }
    private static GetSecurityConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSecurityConfigurationResponseUnmarshaller GetInstance();
    public static GetSecurityConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSecurityConfigurationsRequestMarshaller : object {
    private static GetSecurityConfigurationsRequestMarshaller _instance;
    public static GetSecurityConfigurationsRequestMarshaller Instance { get; }
    private static GetSecurityConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSecurityConfigurationsRequest publicRequest);
    internal static GetSecurityConfigurationsRequestMarshaller GetInstance();
    public static GetSecurityConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSecurityConfigurationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSecurityConfigurationsResponseUnmarshaller _instance;
    public static GetSecurityConfigurationsResponseUnmarshaller Instance { get; }
    private static GetSecurityConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSecurityConfigurationsResponseUnmarshaller GetInstance();
    public static GetSecurityConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSessionRequestMarshaller : object {
    private static GetSessionRequestMarshaller _instance;
    public static GetSessionRequestMarshaller Instance { get; }
    private static GetSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSessionRequest publicRequest);
    internal static GetSessionRequestMarshaller GetInstance();
    public static GetSessionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetSessionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSessionResponseUnmarshaller _instance;
    public static GetSessionResponseUnmarshaller Instance { get; }
    private static GetSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSessionResponseUnmarshaller GetInstance();
    public static GetSessionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetStatementRequestMarshaller : object {
    private static GetStatementRequestMarshaller _instance;
    public static GetStatementRequestMarshaller Instance { get; }
    private static GetStatementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStatementRequest publicRequest);
    internal static GetStatementRequestMarshaller GetInstance();
    public static GetStatementRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetStatementResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetStatementResponseUnmarshaller _instance;
    public static GetStatementResponseUnmarshaller Instance { get; }
    private static GetStatementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStatementResponseUnmarshaller GetInstance();
    public static GetStatementResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableOptimizerRequestMarshaller : object {
    private static GetTableOptimizerRequestMarshaller _instance;
    public static GetTableOptimizerRequestMarshaller Instance { get; }
    private static GetTableOptimizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTableOptimizerRequest publicRequest);
    internal static GetTableOptimizerRequestMarshaller GetInstance();
    public static GetTableOptimizerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableOptimizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTableOptimizerResponseUnmarshaller _instance;
    public static GetTableOptimizerResponseUnmarshaller Instance { get; }
    private static GetTableOptimizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTableOptimizerResponseUnmarshaller GetInstance();
    public static GetTableOptimizerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableRequestMarshaller : object {
    private static GetTableRequestMarshaller _instance;
    public static GetTableRequestMarshaller Instance { get; }
    private static GetTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTableRequest publicRequest);
    internal static GetTableRequestMarshaller GetInstance();
    public static GetTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTableResponseUnmarshaller _instance;
    public static GetTableResponseUnmarshaller Instance { get; }
    private static GetTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTableResponseUnmarshaller GetInstance();
    public static GetTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTablesRequestMarshaller : object {
    private static GetTablesRequestMarshaller _instance;
    public static GetTablesRequestMarshaller Instance { get; }
    private static GetTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTablesRequest publicRequest);
    internal static GetTablesRequestMarshaller GetInstance();
    public static GetTablesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTablesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTablesResponseUnmarshaller _instance;
    public static GetTablesResponseUnmarshaller Instance { get; }
    private static GetTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTablesResponseUnmarshaller GetInstance();
    public static GetTablesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableVersionRequestMarshaller : object {
    private static GetTableVersionRequestMarshaller _instance;
    public static GetTableVersionRequestMarshaller Instance { get; }
    private static GetTableVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTableVersionRequest publicRequest);
    internal static GetTableVersionRequestMarshaller GetInstance();
    public static GetTableVersionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTableVersionResponseUnmarshaller _instance;
    public static GetTableVersionResponseUnmarshaller Instance { get; }
    private static GetTableVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTableVersionResponseUnmarshaller GetInstance();
    public static GetTableVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableVersionsRequestMarshaller : object {
    private static GetTableVersionsRequestMarshaller _instance;
    public static GetTableVersionsRequestMarshaller Instance { get; }
    private static GetTableVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTableVersionsRequest publicRequest);
    internal static GetTableVersionsRequestMarshaller GetInstance();
    public static GetTableVersionsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTableVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTableVersionsResponseUnmarshaller _instance;
    public static GetTableVersionsResponseUnmarshaller Instance { get; }
    private static GetTableVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTableVersionsResponseUnmarshaller GetInstance();
    public static GetTableVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTagsRequestMarshaller : object {
    private static GetTagsRequestMarshaller _instance;
    public static GetTagsRequestMarshaller Instance { get; }
    private static GetTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTagsRequest publicRequest);
    internal static GetTagsRequestMarshaller GetInstance();
    public static GetTagsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTagsResponseUnmarshaller _instance;
    public static GetTagsResponseUnmarshaller Instance { get; }
    private static GetTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTagsResponseUnmarshaller GetInstance();
    public static GetTagsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTriggerRequestMarshaller : object {
    private static GetTriggerRequestMarshaller _instance;
    public static GetTriggerRequestMarshaller Instance { get; }
    private static GetTriggerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTriggerRequest publicRequest);
    internal static GetTriggerRequestMarshaller GetInstance();
    public static GetTriggerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTriggerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTriggerResponseUnmarshaller _instance;
    public static GetTriggerResponseUnmarshaller Instance { get; }
    private static GetTriggerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTriggerResponseUnmarshaller GetInstance();
    public static GetTriggerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTriggersRequestMarshaller : object {
    private static GetTriggersRequestMarshaller _instance;
    public static GetTriggersRequestMarshaller Instance { get; }
    private static GetTriggersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTriggersRequest publicRequest);
    internal static GetTriggersRequestMarshaller GetInstance();
    public static GetTriggersRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetTriggersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTriggersResponseUnmarshaller _instance;
    public static GetTriggersResponseUnmarshaller Instance { get; }
    private static GetTriggersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTriggersResponseUnmarshaller GetInstance();
    public static GetTriggersResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUnfilteredPartitionMetadataRequestMarshaller : object {
    private static GetUnfilteredPartitionMetadataRequestMarshaller _instance;
    public static GetUnfilteredPartitionMetadataRequestMarshaller Instance { get; }
    private static GetUnfilteredPartitionMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUnfilteredPartitionMetadataRequest publicRequest);
    internal static GetUnfilteredPartitionMetadataRequestMarshaller GetInstance();
    public static GetUnfilteredPartitionMetadataRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUnfilteredPartitionMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUnfilteredPartitionMetadataResponseUnmarshaller _instance;
    public static GetUnfilteredPartitionMetadataResponseUnmarshaller Instance { get; }
    private static GetUnfilteredPartitionMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUnfilteredPartitionMetadataResponseUnmarshaller GetInstance();
    public static GetUnfilteredPartitionMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUnfilteredPartitionsMetadataRequestMarshaller : object {
    private static GetUnfilteredPartitionsMetadataRequestMarshaller _instance;
    public static GetUnfilteredPartitionsMetadataRequestMarshaller Instance { get; }
    private static GetUnfilteredPartitionsMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUnfilteredPartitionsMetadataRequest publicRequest);
    internal static GetUnfilteredPartitionsMetadataRequestMarshaller GetInstance();
    public static GetUnfilteredPartitionsMetadataRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUnfilteredPartitionsMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUnfilteredPartitionsMetadataResponseUnmarshaller _instance;
    public static GetUnfilteredPartitionsMetadataResponseUnmarshaller Instance { get; }
    private static GetUnfilteredPartitionsMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUnfilteredPartitionsMetadataResponseUnmarshaller GetInstance();
    public static GetUnfilteredPartitionsMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUnfilteredTableMetadataRequestMarshaller : object {
    private static GetUnfilteredTableMetadataRequestMarshaller _instance;
    public static GetUnfilteredTableMetadataRequestMarshaller Instance { get; }
    private static GetUnfilteredTableMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUnfilteredTableMetadataRequest publicRequest);
    internal static GetUnfilteredTableMetadataRequestMarshaller GetInstance();
    public static GetUnfilteredTableMetadataRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUnfilteredTableMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUnfilteredTableMetadataResponseUnmarshaller _instance;
    public static GetUnfilteredTableMetadataResponseUnmarshaller Instance { get; }
    private static GetUnfilteredTableMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUnfilteredTableMetadataResponseUnmarshaller GetInstance();
    public static GetUnfilteredTableMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUsageProfileRequestMarshaller : object {
    private static GetUsageProfileRequestMarshaller _instance;
    public static GetUsageProfileRequestMarshaller Instance { get; }
    private static GetUsageProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUsageProfileRequest publicRequest);
    internal static GetUsageProfileRequestMarshaller GetInstance();
    public static GetUsageProfileRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUsageProfileResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUsageProfileResponseUnmarshaller _instance;
    public static GetUsageProfileResponseUnmarshaller Instance { get; }
    private static GetUsageProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUsageProfileResponseUnmarshaller GetInstance();
    public static GetUsageProfileResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUserDefinedFunctionRequestMarshaller : object {
    private static GetUserDefinedFunctionRequestMarshaller _instance;
    public static GetUserDefinedFunctionRequestMarshaller Instance { get; }
    private static GetUserDefinedFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUserDefinedFunctionRequest publicRequest);
    internal static GetUserDefinedFunctionRequestMarshaller GetInstance();
    public static GetUserDefinedFunctionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUserDefinedFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUserDefinedFunctionResponseUnmarshaller _instance;
    public static GetUserDefinedFunctionResponseUnmarshaller Instance { get; }
    private static GetUserDefinedFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUserDefinedFunctionResponseUnmarshaller GetInstance();
    public static GetUserDefinedFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUserDefinedFunctionsRequestMarshaller : object {
    private static GetUserDefinedFunctionsRequestMarshaller _instance;
    public static GetUserDefinedFunctionsRequestMarshaller Instance { get; }
    private static GetUserDefinedFunctionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUserDefinedFunctionsRequest publicRequest);
    internal static GetUserDefinedFunctionsRequestMarshaller GetInstance();
    public static GetUserDefinedFunctionsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetUserDefinedFunctionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUserDefinedFunctionsResponseUnmarshaller _instance;
    public static GetUserDefinedFunctionsResponseUnmarshaller Instance { get; }
    private static GetUserDefinedFunctionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUserDefinedFunctionsResponseUnmarshaller GetInstance();
    public static GetUserDefinedFunctionsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowRequestMarshaller : object {
    private static GetWorkflowRequestMarshaller _instance;
    public static GetWorkflowRequestMarshaller Instance { get; }
    private static GetWorkflowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetWorkflowRequest publicRequest);
    internal static GetWorkflowRequestMarshaller GetInstance();
    public static GetWorkflowRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetWorkflowResponseUnmarshaller _instance;
    public static GetWorkflowResponseUnmarshaller Instance { get; }
    private static GetWorkflowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetWorkflowResponseUnmarshaller GetInstance();
    public static GetWorkflowResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowRunPropertiesRequestMarshaller : object {
    private static GetWorkflowRunPropertiesRequestMarshaller _instance;
    public static GetWorkflowRunPropertiesRequestMarshaller Instance { get; }
    private static GetWorkflowRunPropertiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetWorkflowRunPropertiesRequest publicRequest);
    internal static GetWorkflowRunPropertiesRequestMarshaller GetInstance();
    public static GetWorkflowRunPropertiesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowRunPropertiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetWorkflowRunPropertiesResponseUnmarshaller _instance;
    public static GetWorkflowRunPropertiesResponseUnmarshaller Instance { get; }
    private static GetWorkflowRunPropertiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetWorkflowRunPropertiesResponseUnmarshaller GetInstance();
    public static GetWorkflowRunPropertiesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowRunRequestMarshaller : object {
    private static GetWorkflowRunRequestMarshaller _instance;
    public static GetWorkflowRunRequestMarshaller Instance { get; }
    private static GetWorkflowRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetWorkflowRunRequest publicRequest);
    internal static GetWorkflowRunRequestMarshaller GetInstance();
    public static GetWorkflowRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetWorkflowRunResponseUnmarshaller _instance;
    public static GetWorkflowRunResponseUnmarshaller Instance { get; }
    private static GetWorkflowRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetWorkflowRunResponseUnmarshaller GetInstance();
    public static GetWorkflowRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowRunsRequestMarshaller : object {
    private static GetWorkflowRunsRequestMarshaller _instance;
    public static GetWorkflowRunsRequestMarshaller Instance { get; }
    private static GetWorkflowRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetWorkflowRunsRequest publicRequest);
    internal static GetWorkflowRunsRequestMarshaller GetInstance();
    public static GetWorkflowRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GetWorkflowRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetWorkflowRunsResponseUnmarshaller _instance;
    public static GetWorkflowRunsResponseUnmarshaller Instance { get; }
    private static GetWorkflowRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetWorkflowRunsResponseUnmarshaller GetInstance();
    public static GetWorkflowRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller : object {
    private static GlueEncryptionExceptionUnmarshaller _instance;
    public static GlueEncryptionExceptionUnmarshaller Instance { get; }
    private static GlueEncryptionExceptionUnmarshaller();
    public sealed virtual GlueEncryptionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual GlueEncryptionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static GlueEncryptionExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GluePolicyUnmarshaller : object {
    private static GluePolicyUnmarshaller _instance;
    public static GluePolicyUnmarshaller Instance { get; }
    private static GluePolicyUnmarshaller();
    private sealed virtual override GluePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.GluePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GluePolicy Unmarshall(JsonUnmarshallerContext context);
    public static GluePolicyUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GlueSchemaMarshaller : object {
    public static GlueSchemaMarshaller Instance;
    private static GlueSchemaMarshaller();
    public sealed virtual void Marshall(GlueSchema requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GlueSchemaUnmarshaller : object {
    private static GlueSchemaUnmarshaller _instance;
    public static GlueSchemaUnmarshaller Instance { get; }
    private static GlueSchemaUnmarshaller();
    private sealed virtual override GlueSchema Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.GlueSchema,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlueSchema Unmarshall(JsonUnmarshallerContext context);
    public static GlueSchemaUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GlueStudioSchemaColumnMarshaller : object {
    public static GlueStudioSchemaColumnMarshaller Instance;
    private static GlueStudioSchemaColumnMarshaller();
    public sealed virtual void Marshall(GlueStudioSchemaColumn requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GlueStudioSchemaColumnUnmarshaller : object {
    private static GlueStudioSchemaColumnUnmarshaller _instance;
    public static GlueStudioSchemaColumnUnmarshaller Instance { get; }
    private static GlueStudioSchemaColumnUnmarshaller();
    private sealed virtual override GlueStudioSchemaColumn Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.GlueStudioSchemaColumn,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlueStudioSchemaColumn Unmarshall(JsonUnmarshallerContext context);
    public static GlueStudioSchemaColumnUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GlueTableMarshaller : object {
    public static GlueTableMarshaller Instance;
    private static GlueTableMarshaller();
    public sealed virtual void Marshall(GlueTable requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GlueTableUnmarshaller : object {
    private static GlueTableUnmarshaller _instance;
    public static GlueTableUnmarshaller Instance { get; }
    private static GlueTableUnmarshaller();
    private sealed virtual override GlueTable Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.GlueTable,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlueTable Unmarshall(JsonUnmarshallerContext context);
    public static GlueTableUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GovernedCatalogSourceMarshaller : object {
    public static GovernedCatalogSourceMarshaller Instance;
    private static GovernedCatalogSourceMarshaller();
    public sealed virtual void Marshall(GovernedCatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GovernedCatalogSourceUnmarshaller : object {
    private static GovernedCatalogSourceUnmarshaller _instance;
    public static GovernedCatalogSourceUnmarshaller Instance { get; }
    private static GovernedCatalogSourceUnmarshaller();
    private sealed virtual override GovernedCatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.GovernedCatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GovernedCatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static GovernedCatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GovernedCatalogTargetMarshaller : object {
    public static GovernedCatalogTargetMarshaller Instance;
    private static GovernedCatalogTargetMarshaller();
    public sealed virtual void Marshall(GovernedCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GovernedCatalogTargetUnmarshaller : object {
    private static GovernedCatalogTargetUnmarshaller _instance;
    public static GovernedCatalogTargetUnmarshaller Instance { get; }
    private static GovernedCatalogTargetUnmarshaller();
    private sealed virtual override GovernedCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.GovernedCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GovernedCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static GovernedCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.GrokClassifierUnmarshaller : object {
    private static GrokClassifierUnmarshaller _instance;
    public static GrokClassifierUnmarshaller Instance { get; }
    private static GrokClassifierUnmarshaller();
    private sealed virtual override GrokClassifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.GrokClassifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GrokClassifier Unmarshall(JsonUnmarshallerContext context);
    public static GrokClassifierUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.HudiTargetMarshaller : object {
    public static HudiTargetMarshaller Instance;
    private static HudiTargetMarshaller();
    public sealed virtual void Marshall(HudiTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.HudiTargetUnmarshaller : object {
    private static HudiTargetUnmarshaller _instance;
    public static HudiTargetUnmarshaller Instance { get; }
    private static HudiTargetUnmarshaller();
    private sealed virtual override HudiTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.HudiTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HudiTarget Unmarshall(JsonUnmarshallerContext context);
    public static HudiTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.IcebergInputMarshaller : object {
    public static IcebergInputMarshaller Instance;
    private static IcebergInputMarshaller();
    public sealed virtual void Marshall(IcebergInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.IcebergTargetMarshaller : object {
    public static IcebergTargetMarshaller Instance;
    private static IcebergTargetMarshaller();
    public sealed virtual void Marshall(IcebergTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.IcebergTargetUnmarshaller : object {
    private static IcebergTargetUnmarshaller _instance;
    public static IcebergTargetUnmarshaller Instance { get; }
    private static IcebergTargetUnmarshaller();
    private sealed virtual override IcebergTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.IcebergTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IcebergTarget Unmarshall(JsonUnmarshallerContext context);
    public static IcebergTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller : object {
    private static IdempotentParameterMismatchExceptionUnmarshaller _instance;
    public static IdempotentParameterMismatchExceptionUnmarshaller Instance { get; }
    private static IdempotentParameterMismatchExceptionUnmarshaller();
    public sealed virtual IdempotentParameterMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IdempotentParameterMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IdempotentParameterMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.IllegalBlueprintStateExceptionUnmarshaller : object {
    private static IllegalBlueprintStateExceptionUnmarshaller _instance;
    public static IllegalBlueprintStateExceptionUnmarshaller Instance { get; }
    private static IllegalBlueprintStateExceptionUnmarshaller();
    public sealed virtual IllegalBlueprintStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IllegalBlueprintStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IllegalBlueprintStateExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.IllegalSessionStateExceptionUnmarshaller : object {
    private static IllegalSessionStateExceptionUnmarshaller _instance;
    public static IllegalSessionStateExceptionUnmarshaller Instance { get; }
    private static IllegalSessionStateExceptionUnmarshaller();
    public sealed virtual IllegalSessionStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IllegalSessionStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IllegalSessionStateExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.IllegalWorkflowStateExceptionUnmarshaller : object {
    private static IllegalWorkflowStateExceptionUnmarshaller _instance;
    public static IllegalWorkflowStateExceptionUnmarshaller Instance { get; }
    private static IllegalWorkflowStateExceptionUnmarshaller();
    public sealed virtual IllegalWorkflowStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IllegalWorkflowStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IllegalWorkflowStateExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ImportCatalogToGlueRequestMarshaller : object {
    private static ImportCatalogToGlueRequestMarshaller _instance;
    public static ImportCatalogToGlueRequestMarshaller Instance { get; }
    private static ImportCatalogToGlueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportCatalogToGlueRequest publicRequest);
    internal static ImportCatalogToGlueRequestMarshaller GetInstance();
    public static ImportCatalogToGlueRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ImportCatalogToGlueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ImportCatalogToGlueResponseUnmarshaller _instance;
    public static ImportCatalogToGlueResponseUnmarshaller Instance { get; }
    private static ImportCatalogToGlueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportCatalogToGlueResponseUnmarshaller GetInstance();
    public static ImportCatalogToGlueResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ImportLabelsTaskRunPropertiesUnmarshaller : object {
    private static ImportLabelsTaskRunPropertiesUnmarshaller _instance;
    public static ImportLabelsTaskRunPropertiesUnmarshaller Instance { get; }
    private static ImportLabelsTaskRunPropertiesUnmarshaller();
    private sealed virtual override ImportLabelsTaskRunProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ImportLabelsTaskRunProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportLabelsTaskRunProperties Unmarshall(JsonUnmarshallerContext context);
    public static ImportLabelsTaskRunPropertiesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller : object {
    private static InternalServiceExceptionUnmarshaller _instance;
    public static InternalServiceExceptionUnmarshaller Instance { get; }
    private static InternalServiceExceptionUnmarshaller();
    public sealed virtual InternalServiceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServiceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServiceExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller : object {
    private static InvalidInputExceptionUnmarshaller _instance;
    public static InvalidInputExceptionUnmarshaller Instance { get; }
    private static InvalidInputExceptionUnmarshaller();
    public sealed virtual InvalidInputException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInputException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInputExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller : object {
    private static InvalidStateExceptionUnmarshaller _instance;
    public static InvalidStateExceptionUnmarshaller Instance { get; }
    private static InvalidStateExceptionUnmarshaller();
    public sealed virtual InvalidStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidStateExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JDBCConnectorOptionsMarshaller : object {
    public static JDBCConnectorOptionsMarshaller Instance;
    private static JDBCConnectorOptionsMarshaller();
    public sealed virtual void Marshall(JDBCConnectorOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JDBCConnectorOptionsUnmarshaller : object {
    private static JDBCConnectorOptionsUnmarshaller _instance;
    public static JDBCConnectorOptionsUnmarshaller Instance { get; }
    private static JDBCConnectorOptionsUnmarshaller();
    private sealed virtual override JDBCConnectorOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JDBCConnectorOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JDBCConnectorOptions Unmarshall(JsonUnmarshallerContext context);
    public static JDBCConnectorOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JDBCConnectorSourceMarshaller : object {
    public static JDBCConnectorSourceMarshaller Instance;
    private static JDBCConnectorSourceMarshaller();
    public sealed virtual void Marshall(JDBCConnectorSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JDBCConnectorSourceUnmarshaller : object {
    private static JDBCConnectorSourceUnmarshaller _instance;
    public static JDBCConnectorSourceUnmarshaller Instance { get; }
    private static JDBCConnectorSourceUnmarshaller();
    private sealed virtual override JDBCConnectorSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JDBCConnectorSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JDBCConnectorSource Unmarshall(JsonUnmarshallerContext context);
    public static JDBCConnectorSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JDBCConnectorTargetMarshaller : object {
    public static JDBCConnectorTargetMarshaller Instance;
    private static JDBCConnectorTargetMarshaller();
    public sealed virtual void Marshall(JDBCConnectorTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JDBCConnectorTargetUnmarshaller : object {
    private static JDBCConnectorTargetUnmarshaller _instance;
    public static JDBCConnectorTargetUnmarshaller Instance { get; }
    private static JDBCConnectorTargetUnmarshaller();
    private sealed virtual override JDBCConnectorTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JDBCConnectorTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JDBCConnectorTarget Unmarshall(JsonUnmarshallerContext context);
    public static JDBCConnectorTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JdbcTargetMarshaller : object {
    public static JdbcTargetMarshaller Instance;
    private static JdbcTargetMarshaller();
    public sealed virtual void Marshall(JdbcTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JdbcTargetUnmarshaller : object {
    private static JdbcTargetUnmarshaller _instance;
    public static JdbcTargetUnmarshaller Instance { get; }
    private static JdbcTargetUnmarshaller();
    private sealed virtual override JdbcTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JdbcTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JdbcTarget Unmarshall(JsonUnmarshallerContext context);
    public static JdbcTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobBookmarkEntryUnmarshaller : object {
    private static JobBookmarkEntryUnmarshaller _instance;
    public static JobBookmarkEntryUnmarshaller Instance { get; }
    private static JobBookmarkEntryUnmarshaller();
    private sealed virtual override JobBookmarkEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JobBookmarkEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobBookmarkEntry Unmarshall(JsonUnmarshallerContext context);
    public static JobBookmarkEntryUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobBookmarksEncryptionMarshaller : object {
    public static JobBookmarksEncryptionMarshaller Instance;
    private static JobBookmarksEncryptionMarshaller();
    public sealed virtual void Marshall(JobBookmarksEncryption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobBookmarksEncryptionUnmarshaller : object {
    private static JobBookmarksEncryptionUnmarshaller _instance;
    public static JobBookmarksEncryptionUnmarshaller Instance { get; }
    private static JobBookmarksEncryptionUnmarshaller();
    private sealed virtual override JobBookmarksEncryption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JobBookmarksEncryption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobBookmarksEncryption Unmarshall(JsonUnmarshallerContext context);
    public static JobBookmarksEncryptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobCommandMarshaller : object {
    public static JobCommandMarshaller Instance;
    private static JobCommandMarshaller();
    public sealed virtual void Marshall(JobCommand requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobCommandUnmarshaller : object {
    private static JobCommandUnmarshaller _instance;
    public static JobCommandUnmarshaller Instance { get; }
    private static JobCommandUnmarshaller();
    private sealed virtual override JobCommand Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JobCommand,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobCommand Unmarshall(JsonUnmarshallerContext context);
    public static JobCommandUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobNodeDetailsUnmarshaller : object {
    private static JobNodeDetailsUnmarshaller _instance;
    public static JobNodeDetailsUnmarshaller Instance { get; }
    private static JobNodeDetailsUnmarshaller();
    private sealed virtual override JobNodeDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JobNodeDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobNodeDetails Unmarshall(JsonUnmarshallerContext context);
    public static JobNodeDetailsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobRunUnmarshaller : object {
    private static JobRunUnmarshaller _instance;
    public static JobRunUnmarshaller Instance { get; }
    private static JobRunUnmarshaller();
    private sealed virtual override JobRun Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JobRun,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobRun Unmarshall(JsonUnmarshallerContext context);
    public static JobRunUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobUnmarshaller : object {
    private static JobUnmarshaller _instance;
    public static JobUnmarshaller Instance { get; }
    private static JobUnmarshaller();
    private sealed virtual override Job Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Job,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Job Unmarshall(JsonUnmarshallerContext context);
    public static JobUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JobUpdateMarshaller : object {
    public static JobUpdateMarshaller Instance;
    private static JobUpdateMarshaller();
    public sealed virtual void Marshall(JobUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JoinColumnMarshaller : object {
    public static JoinColumnMarshaller Instance;
    private static JoinColumnMarshaller();
    public sealed virtual void Marshall(JoinColumn requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JoinColumnUnmarshaller : object {
    private static JoinColumnUnmarshaller _instance;
    public static JoinColumnUnmarshaller Instance { get; }
    private static JoinColumnUnmarshaller();
    private sealed virtual override JoinColumn Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JoinColumn,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JoinColumn Unmarshall(JsonUnmarshallerContext context);
    public static JoinColumnUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JoinMarshaller : object {
    public static JoinMarshaller Instance;
    private static JoinMarshaller();
    public sealed virtual void Marshall(Join requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JoinUnmarshaller : object {
    private static JoinUnmarshaller _instance;
    public static JoinUnmarshaller Instance { get; }
    private static JoinUnmarshaller();
    private sealed virtual override Join Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Join,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Join Unmarshall(JsonUnmarshallerContext context);
    public static JoinUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.JsonClassifierUnmarshaller : object {
    private static JsonClassifierUnmarshaller _instance;
    public static JsonClassifierUnmarshaller Instance { get; }
    private static JsonClassifierUnmarshaller();
    private sealed virtual override JsonClassifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.JsonClassifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JsonClassifier Unmarshall(JsonUnmarshallerContext context);
    public static JsonClassifierUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.KafkaStreamingSourceOptionsMarshaller : object {
    public static KafkaStreamingSourceOptionsMarshaller Instance;
    private static KafkaStreamingSourceOptionsMarshaller();
    public sealed virtual void Marshall(KafkaStreamingSourceOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.KafkaStreamingSourceOptionsUnmarshaller : object {
    private static KafkaStreamingSourceOptionsUnmarshaller _instance;
    public static KafkaStreamingSourceOptionsUnmarshaller Instance { get; }
    private static KafkaStreamingSourceOptionsUnmarshaller();
    private sealed virtual override KafkaStreamingSourceOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.KafkaStreamingSourceOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KafkaStreamingSourceOptions Unmarshall(JsonUnmarshallerContext context);
    public static KafkaStreamingSourceOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.KeySchemaElementUnmarshaller : object {
    private static KeySchemaElementUnmarshaller _instance;
    public static KeySchemaElementUnmarshaller Instance { get; }
    private static KeySchemaElementUnmarshaller();
    private sealed virtual override KeySchemaElement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.KeySchemaElement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeySchemaElement Unmarshall(JsonUnmarshallerContext context);
    public static KeySchemaElementUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.KinesisStreamingSourceOptionsMarshaller : object {
    public static KinesisStreamingSourceOptionsMarshaller Instance;
    private static KinesisStreamingSourceOptionsMarshaller();
    public sealed virtual void Marshall(KinesisStreamingSourceOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.KinesisStreamingSourceOptionsUnmarshaller : object {
    private static KinesisStreamingSourceOptionsUnmarshaller _instance;
    public static KinesisStreamingSourceOptionsUnmarshaller Instance { get; }
    private static KinesisStreamingSourceOptionsUnmarshaller();
    private sealed virtual override KinesisStreamingSourceOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.KinesisStreamingSourceOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KinesisStreamingSourceOptions Unmarshall(JsonUnmarshallerContext context);
    public static KinesisStreamingSourceOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LabelingSetGenerationTaskRunPropertiesUnmarshaller : object {
    private static LabelingSetGenerationTaskRunPropertiesUnmarshaller _instance;
    public static LabelingSetGenerationTaskRunPropertiesUnmarshaller Instance { get; }
    private static LabelingSetGenerationTaskRunPropertiesUnmarshaller();
    private sealed virtual override LabelingSetGenerationTaskRunProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.LabelingSetGenerationTaskRunProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LabelingSetGenerationTaskRunProperties Unmarshall(JsonUnmarshallerContext context);
    public static LabelingSetGenerationTaskRunPropertiesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LakeFormationConfigurationMarshaller : object {
    public static LakeFormationConfigurationMarshaller Instance;
    private static LakeFormationConfigurationMarshaller();
    public sealed virtual void Marshall(LakeFormationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LakeFormationConfigurationUnmarshaller : object {
    private static LakeFormationConfigurationUnmarshaller _instance;
    public static LakeFormationConfigurationUnmarshaller Instance { get; }
    private static LakeFormationConfigurationUnmarshaller();
    private sealed virtual override LakeFormationConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.LakeFormationConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LakeFormationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static LakeFormationConfigurationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LastActiveDefinitionUnmarshaller : object {
    private static LastActiveDefinitionUnmarshaller _instance;
    public static LastActiveDefinitionUnmarshaller Instance { get; }
    private static LastActiveDefinitionUnmarshaller();
    private sealed virtual override LastActiveDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.LastActiveDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LastActiveDefinition Unmarshall(JsonUnmarshallerContext context);
    public static LastActiveDefinitionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LastCrawlInfoUnmarshaller : object {
    private static LastCrawlInfoUnmarshaller _instance;
    public static LastCrawlInfoUnmarshaller Instance { get; }
    private static LastCrawlInfoUnmarshaller();
    private sealed virtual override LastCrawlInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.LastCrawlInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LastCrawlInfo Unmarshall(JsonUnmarshallerContext context);
    public static LastCrawlInfoUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LineageConfigurationMarshaller : object {
    public static LineageConfigurationMarshaller Instance;
    private static LineageConfigurationMarshaller();
    public sealed virtual void Marshall(LineageConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LineageConfigurationUnmarshaller : object {
    private static LineageConfigurationUnmarshaller _instance;
    public static LineageConfigurationUnmarshaller Instance { get; }
    private static LineageConfigurationUnmarshaller();
    private sealed virtual override LineageConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.LineageConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LineageConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static LineageConfigurationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListBlueprintsRequestMarshaller : object {
    private static ListBlueprintsRequestMarshaller _instance;
    public static ListBlueprintsRequestMarshaller Instance { get; }
    private static ListBlueprintsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListBlueprintsRequest publicRequest);
    internal static ListBlueprintsRequestMarshaller GetInstance();
    public static ListBlueprintsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListBlueprintsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListBlueprintsResponseUnmarshaller _instance;
    public static ListBlueprintsResponseUnmarshaller Instance { get; }
    private static ListBlueprintsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListBlueprintsResponseUnmarshaller GetInstance();
    public static ListBlueprintsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListColumnStatisticsTaskRunsRequestMarshaller : object {
    private static ListColumnStatisticsTaskRunsRequestMarshaller _instance;
    public static ListColumnStatisticsTaskRunsRequestMarshaller Instance { get; }
    private static ListColumnStatisticsTaskRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListColumnStatisticsTaskRunsRequest publicRequest);
    internal static ListColumnStatisticsTaskRunsRequestMarshaller GetInstance();
    public static ListColumnStatisticsTaskRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListColumnStatisticsTaskRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListColumnStatisticsTaskRunsResponseUnmarshaller _instance;
    public static ListColumnStatisticsTaskRunsResponseUnmarshaller Instance { get; }
    private static ListColumnStatisticsTaskRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListColumnStatisticsTaskRunsResponseUnmarshaller GetInstance();
    public static ListColumnStatisticsTaskRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListCrawlersRequestMarshaller : object {
    private static ListCrawlersRequestMarshaller _instance;
    public static ListCrawlersRequestMarshaller Instance { get; }
    private static ListCrawlersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCrawlersRequest publicRequest);
    internal static ListCrawlersRequestMarshaller GetInstance();
    public static ListCrawlersRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListCrawlersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCrawlersResponseUnmarshaller _instance;
    public static ListCrawlersResponseUnmarshaller Instance { get; }
    private static ListCrawlersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCrawlersResponseUnmarshaller GetInstance();
    public static ListCrawlersResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListCrawlsRequestMarshaller : object {
    private static ListCrawlsRequestMarshaller _instance;
    public static ListCrawlsRequestMarshaller Instance { get; }
    private static ListCrawlsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCrawlsRequest publicRequest);
    internal static ListCrawlsRequestMarshaller GetInstance();
    public static ListCrawlsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListCrawlsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCrawlsResponseUnmarshaller _instance;
    public static ListCrawlsResponseUnmarshaller Instance { get; }
    private static ListCrawlsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCrawlsResponseUnmarshaller GetInstance();
    public static ListCrawlsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListCustomEntityTypesRequestMarshaller : object {
    private static ListCustomEntityTypesRequestMarshaller _instance;
    public static ListCustomEntityTypesRequestMarshaller Instance { get; }
    private static ListCustomEntityTypesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCustomEntityTypesRequest publicRequest);
    internal static ListCustomEntityTypesRequestMarshaller GetInstance();
    public static ListCustomEntityTypesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListCustomEntityTypesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCustomEntityTypesResponseUnmarshaller _instance;
    public static ListCustomEntityTypesResponseUnmarshaller Instance { get; }
    private static ListCustomEntityTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCustomEntityTypesResponseUnmarshaller GetInstance();
    public static ListCustomEntityTypesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityResultsRequestMarshaller : object {
    private static ListDataQualityResultsRequestMarshaller _instance;
    public static ListDataQualityResultsRequestMarshaller Instance { get; }
    private static ListDataQualityResultsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDataQualityResultsRequest publicRequest);
    internal static ListDataQualityResultsRequestMarshaller GetInstance();
    public static ListDataQualityResultsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityResultsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDataQualityResultsResponseUnmarshaller _instance;
    public static ListDataQualityResultsResponseUnmarshaller Instance { get; }
    private static ListDataQualityResultsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDataQualityResultsResponseUnmarshaller GetInstance();
    public static ListDataQualityResultsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityRuleRecommendationRunsRequestMarshaller : object {
    private static ListDataQualityRuleRecommendationRunsRequestMarshaller _instance;
    public static ListDataQualityRuleRecommendationRunsRequestMarshaller Instance { get; }
    private static ListDataQualityRuleRecommendationRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDataQualityRuleRecommendationRunsRequest publicRequest);
    internal static ListDataQualityRuleRecommendationRunsRequestMarshaller GetInstance();
    public static ListDataQualityRuleRecommendationRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityRuleRecommendationRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDataQualityRuleRecommendationRunsResponseUnmarshaller _instance;
    public static ListDataQualityRuleRecommendationRunsResponseUnmarshaller Instance { get; }
    private static ListDataQualityRuleRecommendationRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDataQualityRuleRecommendationRunsResponseUnmarshaller GetInstance();
    public static ListDataQualityRuleRecommendationRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityRulesetEvaluationRunsRequestMarshaller : object {
    private static ListDataQualityRulesetEvaluationRunsRequestMarshaller _instance;
    public static ListDataQualityRulesetEvaluationRunsRequestMarshaller Instance { get; }
    private static ListDataQualityRulesetEvaluationRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDataQualityRulesetEvaluationRunsRequest publicRequest);
    internal static ListDataQualityRulesetEvaluationRunsRequestMarshaller GetInstance();
    public static ListDataQualityRulesetEvaluationRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityRulesetEvaluationRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDataQualityRulesetEvaluationRunsResponseUnmarshaller _instance;
    public static ListDataQualityRulesetEvaluationRunsResponseUnmarshaller Instance { get; }
    private static ListDataQualityRulesetEvaluationRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDataQualityRulesetEvaluationRunsResponseUnmarshaller GetInstance();
    public static ListDataQualityRulesetEvaluationRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityRulesetsRequestMarshaller : object {
    private static ListDataQualityRulesetsRequestMarshaller _instance;
    public static ListDataQualityRulesetsRequestMarshaller Instance { get; }
    private static ListDataQualityRulesetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDataQualityRulesetsRequest publicRequest);
    internal static ListDataQualityRulesetsRequestMarshaller GetInstance();
    public static ListDataQualityRulesetsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDataQualityRulesetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDataQualityRulesetsResponseUnmarshaller _instance;
    public static ListDataQualityRulesetsResponseUnmarshaller Instance { get; }
    private static ListDataQualityRulesetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDataQualityRulesetsResponseUnmarshaller GetInstance();
    public static ListDataQualityRulesetsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDevEndpointsRequestMarshaller : object {
    private static ListDevEndpointsRequestMarshaller _instance;
    public static ListDevEndpointsRequestMarshaller Instance { get; }
    private static ListDevEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDevEndpointsRequest publicRequest);
    internal static ListDevEndpointsRequestMarshaller GetInstance();
    public static ListDevEndpointsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListDevEndpointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDevEndpointsResponseUnmarshaller _instance;
    public static ListDevEndpointsResponseUnmarshaller Instance { get; }
    private static ListDevEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDevEndpointsResponseUnmarshaller GetInstance();
    public static ListDevEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller : object {
    private static ListJobsRequestMarshaller _instance;
    public static ListJobsRequestMarshaller Instance { get; }
    private static ListJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListJobsRequest publicRequest);
    internal static ListJobsRequestMarshaller GetInstance();
    public static ListJobsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListJobsResponseUnmarshaller _instance;
    public static ListJobsResponseUnmarshaller Instance { get; }
    private static ListJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListJobsResponseUnmarshaller GetInstance();
    public static ListJobsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListMLTransformsRequestMarshaller : object {
    private static ListMLTransformsRequestMarshaller _instance;
    public static ListMLTransformsRequestMarshaller Instance { get; }
    private static ListMLTransformsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMLTransformsRequest publicRequest);
    internal static ListMLTransformsRequestMarshaller GetInstance();
    public static ListMLTransformsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListMLTransformsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListMLTransformsResponseUnmarshaller _instance;
    public static ListMLTransformsResponseUnmarshaller Instance { get; }
    private static ListMLTransformsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMLTransformsResponseUnmarshaller GetInstance();
    public static ListMLTransformsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListRegistriesRequestMarshaller : object {
    private static ListRegistriesRequestMarshaller _instance;
    public static ListRegistriesRequestMarshaller Instance { get; }
    private static ListRegistriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRegistriesRequest publicRequest);
    internal static ListRegistriesRequestMarshaller GetInstance();
    public static ListRegistriesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListRegistriesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListRegistriesResponseUnmarshaller _instance;
    public static ListRegistriesResponseUnmarshaller Instance { get; }
    private static ListRegistriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRegistriesResponseUnmarshaller GetInstance();
    public static ListRegistriesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListSchemasRequestMarshaller : object {
    private static ListSchemasRequestMarshaller _instance;
    public static ListSchemasRequestMarshaller Instance { get; }
    private static ListSchemasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSchemasRequest publicRequest);
    internal static ListSchemasRequestMarshaller GetInstance();
    public static ListSchemasRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListSchemasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListSchemasResponseUnmarshaller _instance;
    public static ListSchemasResponseUnmarshaller Instance { get; }
    private static ListSchemasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSchemasResponseUnmarshaller GetInstance();
    public static ListSchemasResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListSchemaVersionsRequestMarshaller : object {
    private static ListSchemaVersionsRequestMarshaller _instance;
    public static ListSchemaVersionsRequestMarshaller Instance { get; }
    private static ListSchemaVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSchemaVersionsRequest publicRequest);
    internal static ListSchemaVersionsRequestMarshaller GetInstance();
    public static ListSchemaVersionsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListSchemaVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListSchemaVersionsResponseUnmarshaller _instance;
    public static ListSchemaVersionsResponseUnmarshaller Instance { get; }
    private static ListSchemaVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSchemaVersionsResponseUnmarshaller GetInstance();
    public static ListSchemaVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListSessionsRequestMarshaller : object {
    private static ListSessionsRequestMarshaller _instance;
    public static ListSessionsRequestMarshaller Instance { get; }
    private static ListSessionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSessionsRequest publicRequest);
    internal static ListSessionsRequestMarshaller GetInstance();
    public static ListSessionsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListSessionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListSessionsResponseUnmarshaller _instance;
    public static ListSessionsResponseUnmarshaller Instance { get; }
    private static ListSessionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSessionsResponseUnmarshaller GetInstance();
    public static ListSessionsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListStatementsRequestMarshaller : object {
    private static ListStatementsRequestMarshaller _instance;
    public static ListStatementsRequestMarshaller Instance { get; }
    private static ListStatementsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStatementsRequest publicRequest);
    internal static ListStatementsRequestMarshaller GetInstance();
    public static ListStatementsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListStatementsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListStatementsResponseUnmarshaller _instance;
    public static ListStatementsResponseUnmarshaller Instance { get; }
    private static ListStatementsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStatementsResponseUnmarshaller GetInstance();
    public static ListStatementsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListTableOptimizerRunsRequestMarshaller : object {
    private static ListTableOptimizerRunsRequestMarshaller _instance;
    public static ListTableOptimizerRunsRequestMarshaller Instance { get; }
    private static ListTableOptimizerRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTableOptimizerRunsRequest publicRequest);
    internal static ListTableOptimizerRunsRequestMarshaller GetInstance();
    public static ListTableOptimizerRunsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListTableOptimizerRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTableOptimizerRunsResponseUnmarshaller _instance;
    public static ListTableOptimizerRunsResponseUnmarshaller Instance { get; }
    private static ListTableOptimizerRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTableOptimizerRunsResponseUnmarshaller GetInstance();
    public static ListTableOptimizerRunsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListTriggersRequestMarshaller : object {
    private static ListTriggersRequestMarshaller _instance;
    public static ListTriggersRequestMarshaller Instance { get; }
    private static ListTriggersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTriggersRequest publicRequest);
    internal static ListTriggersRequestMarshaller GetInstance();
    public static ListTriggersRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListTriggersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTriggersResponseUnmarshaller _instance;
    public static ListTriggersResponseUnmarshaller Instance { get; }
    private static ListTriggersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTriggersResponseUnmarshaller GetInstance();
    public static ListTriggersResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListUsageProfilesRequestMarshaller : object {
    private static ListUsageProfilesRequestMarshaller _instance;
    public static ListUsageProfilesRequestMarshaller Instance { get; }
    private static ListUsageProfilesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListUsageProfilesRequest publicRequest);
    internal static ListUsageProfilesRequestMarshaller GetInstance();
    public static ListUsageProfilesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListUsageProfilesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListUsageProfilesResponseUnmarshaller _instance;
    public static ListUsageProfilesResponseUnmarshaller Instance { get; }
    private static ListUsageProfilesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListUsageProfilesResponseUnmarshaller GetInstance();
    public static ListUsageProfilesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListWorkflowsRequestMarshaller : object {
    private static ListWorkflowsRequestMarshaller _instance;
    public static ListWorkflowsRequestMarshaller Instance { get; }
    private static ListWorkflowsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListWorkflowsRequest publicRequest);
    internal static ListWorkflowsRequestMarshaller GetInstance();
    public static ListWorkflowsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ListWorkflowsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListWorkflowsResponseUnmarshaller _instance;
    public static ListWorkflowsResponseUnmarshaller Instance { get; }
    private static ListWorkflowsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListWorkflowsResponseUnmarshaller GetInstance();
    public static ListWorkflowsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LocationMarshaller : object {
    public static LocationMarshaller Instance;
    private static LocationMarshaller();
    public sealed virtual void Marshall(Location requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LongColumnStatisticsDataMarshaller : object {
    public static LongColumnStatisticsDataMarshaller Instance;
    private static LongColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(LongColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.LongColumnStatisticsDataUnmarshaller : object {
    private static LongColumnStatisticsDataUnmarshaller _instance;
    public static LongColumnStatisticsDataUnmarshaller Instance { get; }
    private static LongColumnStatisticsDataUnmarshaller();
    private sealed virtual override LongColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.LongColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LongColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static LongColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MappingEntryMarshaller : object {
    public static MappingEntryMarshaller Instance;
    private static MappingEntryMarshaller();
    public sealed virtual void Marshall(MappingEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MappingEntryUnmarshaller : object {
    private static MappingEntryUnmarshaller _instance;
    public static MappingEntryUnmarshaller Instance { get; }
    private static MappingEntryUnmarshaller();
    private sealed virtual override MappingEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MappingEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MappingEntry Unmarshall(JsonUnmarshallerContext context);
    public static MappingEntryUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MappingMarshaller : object {
    public static MappingMarshaller Instance;
    private static MappingMarshaller();
    public sealed virtual void Marshall(Mapping requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MappingUnmarshaller : object {
    private static MappingUnmarshaller _instance;
    public static MappingUnmarshaller Instance { get; }
    private static MappingUnmarshaller();
    private sealed virtual override Mapping Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Mapping,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Mapping Unmarshall(JsonUnmarshallerContext context);
    public static MappingUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MergeMarshaller : object {
    public static MergeMarshaller Instance;
    private static MergeMarshaller();
    public sealed virtual void Marshall(Merge requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MergeUnmarshaller : object {
    private static MergeUnmarshaller _instance;
    public static MergeUnmarshaller Instance { get; }
    private static MergeUnmarshaller();
    private sealed virtual override Merge Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Merge,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Merge Unmarshall(JsonUnmarshallerContext context);
    public static MergeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MetadataInfoUnmarshaller : object {
    private static MetadataInfoUnmarshaller _instance;
    public static MetadataInfoUnmarshaller Instance { get; }
    private static MetadataInfoUnmarshaller();
    private sealed virtual override MetadataInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MetadataInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetadataInfo Unmarshall(JsonUnmarshallerContext context);
    public static MetadataInfoUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MetadataKeyValuePairMarshaller : object {
    public static MetadataKeyValuePairMarshaller Instance;
    private static MetadataKeyValuePairMarshaller();
    public sealed virtual void Marshall(MetadataKeyValuePair requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MetricBasedObservationUnmarshaller : object {
    private static MetricBasedObservationUnmarshaller _instance;
    public static MetricBasedObservationUnmarshaller Instance { get; }
    private static MetricBasedObservationUnmarshaller();
    private sealed virtual override MetricBasedObservation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MetricBasedObservation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricBasedObservation Unmarshall(JsonUnmarshallerContext context);
    public static MetricBasedObservationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MicrosoftSQLServerCatalogSourceMarshaller : object {
    public static MicrosoftSQLServerCatalogSourceMarshaller Instance;
    private static MicrosoftSQLServerCatalogSourceMarshaller();
    public sealed virtual void Marshall(MicrosoftSQLServerCatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MicrosoftSQLServerCatalogSourceUnmarshaller : object {
    private static MicrosoftSQLServerCatalogSourceUnmarshaller _instance;
    public static MicrosoftSQLServerCatalogSourceUnmarshaller Instance { get; }
    private static MicrosoftSQLServerCatalogSourceUnmarshaller();
    private sealed virtual override MicrosoftSQLServerCatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MicrosoftSQLServerCatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MicrosoftSQLServerCatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static MicrosoftSQLServerCatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MicrosoftSQLServerCatalogTargetMarshaller : object {
    public static MicrosoftSQLServerCatalogTargetMarshaller Instance;
    private static MicrosoftSQLServerCatalogTargetMarshaller();
    public sealed virtual void Marshall(MicrosoftSQLServerCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MicrosoftSQLServerCatalogTargetUnmarshaller : object {
    private static MicrosoftSQLServerCatalogTargetUnmarshaller _instance;
    public static MicrosoftSQLServerCatalogTargetUnmarshaller Instance { get; }
    private static MicrosoftSQLServerCatalogTargetUnmarshaller();
    private sealed virtual override MicrosoftSQLServerCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MicrosoftSQLServerCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MicrosoftSQLServerCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static MicrosoftSQLServerCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MLTransformNotReadyExceptionUnmarshaller : object {
    private static MLTransformNotReadyExceptionUnmarshaller _instance;
    public static MLTransformNotReadyExceptionUnmarshaller Instance { get; }
    private static MLTransformNotReadyExceptionUnmarshaller();
    public sealed virtual MLTransformNotReadyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MLTransformNotReadyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MLTransformNotReadyExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MLTransformUnmarshaller : object {
    private static MLTransformUnmarshaller _instance;
    public static MLTransformUnmarshaller Instance { get; }
    private static MLTransformUnmarshaller();
    private sealed virtual override MLTransform Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MLTransform,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MLTransform Unmarshall(JsonUnmarshallerContext context);
    public static MLTransformUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MLUserDataEncryptionMarshaller : object {
    public static MLUserDataEncryptionMarshaller Instance;
    private static MLUserDataEncryptionMarshaller();
    public sealed virtual void Marshall(MLUserDataEncryption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MLUserDataEncryptionUnmarshaller : object {
    private static MLUserDataEncryptionUnmarshaller _instance;
    public static MLUserDataEncryptionUnmarshaller Instance { get; }
    private static MLUserDataEncryptionUnmarshaller();
    private sealed virtual override MLUserDataEncryption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MLUserDataEncryption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MLUserDataEncryption Unmarshall(JsonUnmarshallerContext context);
    public static MLUserDataEncryptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MongoDBTargetMarshaller : object {
    public static MongoDBTargetMarshaller Instance;
    private static MongoDBTargetMarshaller();
    public sealed virtual void Marshall(MongoDBTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MongoDBTargetUnmarshaller : object {
    private static MongoDBTargetUnmarshaller _instance;
    public static MongoDBTargetUnmarshaller Instance { get; }
    private static MongoDBTargetUnmarshaller();
    private sealed virtual override MongoDBTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MongoDBTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MongoDBTarget Unmarshall(JsonUnmarshallerContext context);
    public static MongoDBTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MySQLCatalogSourceMarshaller : object {
    public static MySQLCatalogSourceMarshaller Instance;
    private static MySQLCatalogSourceMarshaller();
    public sealed virtual void Marshall(MySQLCatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MySQLCatalogSourceUnmarshaller : object {
    private static MySQLCatalogSourceUnmarshaller _instance;
    public static MySQLCatalogSourceUnmarshaller Instance { get; }
    private static MySQLCatalogSourceUnmarshaller();
    private sealed virtual override MySQLCatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MySQLCatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MySQLCatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static MySQLCatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MySQLCatalogTargetMarshaller : object {
    public static MySQLCatalogTargetMarshaller Instance;
    private static MySQLCatalogTargetMarshaller();
    public sealed virtual void Marshall(MySQLCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.MySQLCatalogTargetUnmarshaller : object {
    private static MySQLCatalogTargetUnmarshaller _instance;
    public static MySQLCatalogTargetUnmarshaller Instance { get; }
    private static MySQLCatalogTargetUnmarshaller();
    private sealed virtual override MySQLCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.MySQLCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MySQLCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static MySQLCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NodeUnmarshaller : object {
    private static NodeUnmarshaller _instance;
    public static NodeUnmarshaller Instance { get; }
    private static NodeUnmarshaller();
    private sealed virtual override Node Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Node,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Node Unmarshall(JsonUnmarshallerContext context);
    public static NodeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NoScheduleExceptionUnmarshaller : object {
    private static NoScheduleExceptionUnmarshaller _instance;
    public static NoScheduleExceptionUnmarshaller Instance { get; }
    private static NoScheduleExceptionUnmarshaller();
    public sealed virtual NoScheduleException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NoScheduleException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoScheduleExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NotificationPropertyMarshaller : object {
    public static NotificationPropertyMarshaller Instance;
    private static NotificationPropertyMarshaller();
    public sealed virtual void Marshall(NotificationProperty requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NotificationPropertyUnmarshaller : object {
    private static NotificationPropertyUnmarshaller _instance;
    public static NotificationPropertyUnmarshaller Instance { get; }
    private static NotificationPropertyUnmarshaller();
    private sealed virtual override NotificationProperty Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.NotificationProperty,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NotificationProperty Unmarshall(JsonUnmarshallerContext context);
    public static NotificationPropertyUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NullCheckBoxListMarshaller : object {
    public static NullCheckBoxListMarshaller Instance;
    private static NullCheckBoxListMarshaller();
    public sealed virtual void Marshall(NullCheckBoxList requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NullCheckBoxListUnmarshaller : object {
    private static NullCheckBoxListUnmarshaller _instance;
    public static NullCheckBoxListUnmarshaller Instance { get; }
    private static NullCheckBoxListUnmarshaller();
    private sealed virtual override NullCheckBoxList Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.NullCheckBoxList,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NullCheckBoxList Unmarshall(JsonUnmarshallerContext context);
    public static NullCheckBoxListUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NullValueFieldMarshaller : object {
    public static NullValueFieldMarshaller Instance;
    private static NullValueFieldMarshaller();
    public sealed virtual void Marshall(NullValueField requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.NullValueFieldUnmarshaller : object {
    private static NullValueFieldUnmarshaller _instance;
    public static NullValueFieldUnmarshaller Instance { get; }
    private static NullValueFieldUnmarshaller();
    private sealed virtual override NullValueField Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.NullValueField,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NullValueField Unmarshall(JsonUnmarshallerContext context);
    public static NullValueFieldUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OAuth2ClientApplicationMarshaller : object {
    public static OAuth2ClientApplicationMarshaller Instance;
    private static OAuth2ClientApplicationMarshaller();
    public sealed virtual void Marshall(OAuth2ClientApplication requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OAuth2ClientApplicationUnmarshaller : object {
    private static OAuth2ClientApplicationUnmarshaller _instance;
    public static OAuth2ClientApplicationUnmarshaller Instance { get; }
    private static OAuth2ClientApplicationUnmarshaller();
    private sealed virtual override OAuth2ClientApplication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.OAuth2ClientApplication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OAuth2ClientApplication Unmarshall(JsonUnmarshallerContext context);
    public static OAuth2ClientApplicationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OAuth2PropertiesInputMarshaller : object {
    public static OAuth2PropertiesInputMarshaller Instance;
    private static OAuth2PropertiesInputMarshaller();
    public sealed virtual void Marshall(OAuth2PropertiesInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OAuth2PropertiesUnmarshaller : object {
    private static OAuth2PropertiesUnmarshaller _instance;
    public static OAuth2PropertiesUnmarshaller Instance { get; }
    private static OAuth2PropertiesUnmarshaller();
    private sealed virtual override OAuth2Properties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.OAuth2Properties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OAuth2Properties Unmarshall(JsonUnmarshallerContext context);
    public static OAuth2PropertiesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OpenTableFormatInputMarshaller : object {
    public static OpenTableFormatInputMarshaller Instance;
    private static OpenTableFormatInputMarshaller();
    public sealed virtual void Marshall(OpenTableFormatInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OperationNotSupportedExceptionUnmarshaller : object {
    private static OperationNotSupportedExceptionUnmarshaller _instance;
    public static OperationNotSupportedExceptionUnmarshaller Instance { get; }
    private static OperationNotSupportedExceptionUnmarshaller();
    public sealed virtual OperationNotSupportedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OperationNotSupportedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OperationNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller : object {
    private static OperationTimeoutExceptionUnmarshaller _instance;
    public static OperationTimeoutExceptionUnmarshaller Instance { get; }
    private static OperationTimeoutExceptionUnmarshaller();
    public sealed virtual OperationTimeoutException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OperationTimeoutException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OperationTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OptionMarshaller : object {
    public static OptionMarshaller Instance;
    private static OptionMarshaller();
    public sealed virtual void Marshall(Option requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OptionUnmarshaller : object {
    private static OptionUnmarshaller _instance;
    public static OptionUnmarshaller Instance { get; }
    private static OptionUnmarshaller();
    private sealed virtual override Option Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Option,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Option Unmarshall(JsonUnmarshallerContext context);
    public static OptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OracleSQLCatalogSourceMarshaller : object {
    public static OracleSQLCatalogSourceMarshaller Instance;
    private static OracleSQLCatalogSourceMarshaller();
    public sealed virtual void Marshall(OracleSQLCatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OracleSQLCatalogSourceUnmarshaller : object {
    private static OracleSQLCatalogSourceUnmarshaller _instance;
    public static OracleSQLCatalogSourceUnmarshaller Instance { get; }
    private static OracleSQLCatalogSourceUnmarshaller();
    private sealed virtual override OracleSQLCatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.OracleSQLCatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OracleSQLCatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static OracleSQLCatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OracleSQLCatalogTargetMarshaller : object {
    public static OracleSQLCatalogTargetMarshaller Instance;
    private static OracleSQLCatalogTargetMarshaller();
    public sealed virtual void Marshall(OracleSQLCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OracleSQLCatalogTargetUnmarshaller : object {
    private static OracleSQLCatalogTargetUnmarshaller _instance;
    public static OracleSQLCatalogTargetUnmarshaller Instance { get; }
    private static OracleSQLCatalogTargetUnmarshaller();
    private sealed virtual override OracleSQLCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.OracleSQLCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OracleSQLCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static OracleSQLCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OrderMarshaller : object {
    public static OrderMarshaller Instance;
    private static OrderMarshaller();
    public sealed virtual void Marshall(Order requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OrderUnmarshaller : object {
    private static OrderUnmarshaller _instance;
    public static OrderUnmarshaller Instance { get; }
    private static OrderUnmarshaller();
    private sealed virtual override Order Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Order,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Order Unmarshall(JsonUnmarshallerContext context);
    public static OrderUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.OtherMetadataValueListItemUnmarshaller : object {
    private static OtherMetadataValueListItemUnmarshaller _instance;
    public static OtherMetadataValueListItemUnmarshaller Instance { get; }
    private static OtherMetadataValueListItemUnmarshaller();
    private sealed virtual override OtherMetadataValueListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.OtherMetadataValueListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OtherMetadataValueListItem Unmarshall(JsonUnmarshallerContext context);
    public static OtherMetadataValueListItemUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PartitionErrorUnmarshaller : object {
    private static PartitionErrorUnmarshaller _instance;
    public static PartitionErrorUnmarshaller Instance { get; }
    private static PartitionErrorUnmarshaller();
    private sealed virtual override PartitionError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PartitionError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PartitionError Unmarshall(JsonUnmarshallerContext context);
    public static PartitionErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PartitionIndexDescriptorUnmarshaller : object {
    private static PartitionIndexDescriptorUnmarshaller _instance;
    public static PartitionIndexDescriptorUnmarshaller Instance { get; }
    private static PartitionIndexDescriptorUnmarshaller();
    private sealed virtual override PartitionIndexDescriptor Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PartitionIndexDescriptor,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PartitionIndexDescriptor Unmarshall(JsonUnmarshallerContext context);
    public static PartitionIndexDescriptorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PartitionIndexMarshaller : object {
    public static PartitionIndexMarshaller Instance;
    private static PartitionIndexMarshaller();
    public sealed virtual void Marshall(PartitionIndex requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PartitionInputMarshaller : object {
    public static PartitionInputMarshaller Instance;
    private static PartitionInputMarshaller();
    public sealed virtual void Marshall(PartitionInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PartitionUnmarshaller : object {
    private static PartitionUnmarshaller _instance;
    public static PartitionUnmarshaller Instance { get; }
    private static PartitionUnmarshaller();
    private sealed virtual override Partition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Partition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Partition Unmarshall(JsonUnmarshallerContext context);
    public static PartitionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PartitionValueListMarshaller : object {
    public static PartitionValueListMarshaller Instance;
    private static PartitionValueListMarshaller();
    public sealed virtual void Marshall(PartitionValueList requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PartitionValueListUnmarshaller : object {
    private static PartitionValueListUnmarshaller _instance;
    public static PartitionValueListUnmarshaller Instance { get; }
    private static PartitionValueListUnmarshaller();
    private sealed virtual override PartitionValueList Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PartitionValueList,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PartitionValueList Unmarshall(JsonUnmarshallerContext context);
    public static PartitionValueListUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PermissionTypeMismatchExceptionUnmarshaller : object {
    private static PermissionTypeMismatchExceptionUnmarshaller _instance;
    public static PermissionTypeMismatchExceptionUnmarshaller Instance { get; }
    private static PermissionTypeMismatchExceptionUnmarshaller();
    public sealed virtual PermissionTypeMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PermissionTypeMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PermissionTypeMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PhysicalConnectionRequirementsMarshaller : object {
    public static PhysicalConnectionRequirementsMarshaller Instance;
    private static PhysicalConnectionRequirementsMarshaller();
    public sealed virtual void Marshall(PhysicalConnectionRequirements requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PhysicalConnectionRequirementsUnmarshaller : object {
    private static PhysicalConnectionRequirementsUnmarshaller _instance;
    public static PhysicalConnectionRequirementsUnmarshaller Instance { get; }
    private static PhysicalConnectionRequirementsUnmarshaller();
    private sealed virtual override PhysicalConnectionRequirements Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PhysicalConnectionRequirements,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PhysicalConnectionRequirements Unmarshall(JsonUnmarshallerContext context);
    public static PhysicalConnectionRequirementsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PIIDetectionMarshaller : object {
    public static PIIDetectionMarshaller Instance;
    private static PIIDetectionMarshaller();
    public sealed virtual void Marshall(PIIDetection requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PIIDetectionUnmarshaller : object {
    private static PIIDetectionUnmarshaller _instance;
    public static PIIDetectionUnmarshaller Instance { get; }
    private static PIIDetectionUnmarshaller();
    private sealed virtual override PIIDetection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PIIDetection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PIIDetection Unmarshall(JsonUnmarshallerContext context);
    public static PIIDetectionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PostgreSQLCatalogSourceMarshaller : object {
    public static PostgreSQLCatalogSourceMarshaller Instance;
    private static PostgreSQLCatalogSourceMarshaller();
    public sealed virtual void Marshall(PostgreSQLCatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PostgreSQLCatalogSourceUnmarshaller : object {
    private static PostgreSQLCatalogSourceUnmarshaller _instance;
    public static PostgreSQLCatalogSourceUnmarshaller Instance { get; }
    private static PostgreSQLCatalogSourceUnmarshaller();
    private sealed virtual override PostgreSQLCatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PostgreSQLCatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PostgreSQLCatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static PostgreSQLCatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PostgreSQLCatalogTargetMarshaller : object {
    public static PostgreSQLCatalogTargetMarshaller Instance;
    private static PostgreSQLCatalogTargetMarshaller();
    public sealed virtual void Marshall(PostgreSQLCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PostgreSQLCatalogTargetUnmarshaller : object {
    private static PostgreSQLCatalogTargetUnmarshaller _instance;
    public static PostgreSQLCatalogTargetUnmarshaller Instance { get; }
    private static PostgreSQLCatalogTargetUnmarshaller();
    private sealed virtual override PostgreSQLCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PostgreSQLCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PostgreSQLCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static PostgreSQLCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PredecessorUnmarshaller : object {
    private static PredecessorUnmarshaller _instance;
    public static PredecessorUnmarshaller Instance { get; }
    private static PredecessorUnmarshaller();
    private sealed virtual override Predecessor Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Predecessor,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Predecessor Unmarshall(JsonUnmarshallerContext context);
    public static PredecessorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PredicateMarshaller : object {
    public static PredicateMarshaller Instance;
    private static PredicateMarshaller();
    public sealed virtual void Marshall(Predicate requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PredicateUnmarshaller : object {
    private static PredicateUnmarshaller _instance;
    public static PredicateUnmarshaller Instance { get; }
    private static PredicateUnmarshaller();
    private sealed virtual override Predicate Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Predicate,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Predicate Unmarshall(JsonUnmarshallerContext context);
    public static PredicateUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PrincipalPermissionsMarshaller : object {
    public static PrincipalPermissionsMarshaller Instance;
    private static PrincipalPermissionsMarshaller();
    public sealed virtual void Marshall(PrincipalPermissions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller : object {
    private static PrincipalPermissionsUnmarshaller _instance;
    public static PrincipalPermissionsUnmarshaller Instance { get; }
    private static PrincipalPermissionsUnmarshaller();
    private sealed virtual override PrincipalPermissions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.PrincipalPermissions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrincipalPermissions Unmarshall(JsonUnmarshallerContext context);
    public static PrincipalPermissionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ProfileConfigurationMarshaller : object {
    public static ProfileConfigurationMarshaller Instance;
    private static ProfileConfigurationMarshaller();
    public sealed virtual void Marshall(ProfileConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ProfileConfigurationUnmarshaller : object {
    private static ProfileConfigurationUnmarshaller _instance;
    public static ProfileConfigurationUnmarshaller Instance { get; }
    private static ProfileConfigurationUnmarshaller();
    private sealed virtual override ProfileConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ProfileConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProfileConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ProfileConfigurationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PropertyPredicateMarshaller : object {
    public static PropertyPredicateMarshaller Instance;
    private static PropertyPredicateMarshaller();
    public sealed virtual void Marshall(PropertyPredicate requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutDataCatalogEncryptionSettingsRequestMarshaller : object {
    private static PutDataCatalogEncryptionSettingsRequestMarshaller _instance;
    public static PutDataCatalogEncryptionSettingsRequestMarshaller Instance { get; }
    private static PutDataCatalogEncryptionSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDataCatalogEncryptionSettingsRequest publicRequest);
    internal static PutDataCatalogEncryptionSettingsRequestMarshaller GetInstance();
    public static PutDataCatalogEncryptionSettingsRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutDataCatalogEncryptionSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutDataCatalogEncryptionSettingsResponseUnmarshaller _instance;
    public static PutDataCatalogEncryptionSettingsResponseUnmarshaller Instance { get; }
    private static PutDataCatalogEncryptionSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDataCatalogEncryptionSettingsResponseUnmarshaller GetInstance();
    public static PutDataCatalogEncryptionSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutSchemaVersionMetadataRequestMarshaller : object {
    private static PutSchemaVersionMetadataRequestMarshaller _instance;
    public static PutSchemaVersionMetadataRequestMarshaller Instance { get; }
    private static PutSchemaVersionMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutSchemaVersionMetadataRequest publicRequest);
    internal static PutSchemaVersionMetadataRequestMarshaller GetInstance();
    public static PutSchemaVersionMetadataRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutSchemaVersionMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutSchemaVersionMetadataResponseUnmarshaller _instance;
    public static PutSchemaVersionMetadataResponseUnmarshaller Instance { get; }
    private static PutSchemaVersionMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutSchemaVersionMetadataResponseUnmarshaller GetInstance();
    public static PutSchemaVersionMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutWorkflowRunPropertiesRequestMarshaller : object {
    private static PutWorkflowRunPropertiesRequestMarshaller _instance;
    public static PutWorkflowRunPropertiesRequestMarshaller Instance { get; }
    private static PutWorkflowRunPropertiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutWorkflowRunPropertiesRequest publicRequest);
    internal static PutWorkflowRunPropertiesRequestMarshaller GetInstance();
    public static PutWorkflowRunPropertiesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.PutWorkflowRunPropertiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutWorkflowRunPropertiesResponseUnmarshaller _instance;
    public static PutWorkflowRunPropertiesResponseUnmarshaller Instance { get; }
    private static PutWorkflowRunPropertiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutWorkflowRunPropertiesResponseUnmarshaller GetInstance();
    public static PutWorkflowRunPropertiesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.QuerySchemaVersionMetadataRequestMarshaller : object {
    private static QuerySchemaVersionMetadataRequestMarshaller _instance;
    public static QuerySchemaVersionMetadataRequestMarshaller Instance { get; }
    private static QuerySchemaVersionMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(QuerySchemaVersionMetadataRequest publicRequest);
    internal static QuerySchemaVersionMetadataRequestMarshaller GetInstance();
    public static QuerySchemaVersionMetadataRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.QuerySchemaVersionMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static QuerySchemaVersionMetadataResponseUnmarshaller _instance;
    public static QuerySchemaVersionMetadataResponseUnmarshaller Instance { get; }
    private static QuerySchemaVersionMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static QuerySchemaVersionMetadataResponseUnmarshaller GetInstance();
    public static QuerySchemaVersionMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.QuerySessionContextMarshaller : object {
    public static QuerySessionContextMarshaller Instance;
    private static QuerySessionContextMarshaller();
    public sealed virtual void Marshall(QuerySessionContext requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeActionMarshaller : object {
    public static RecipeActionMarshaller Instance;
    private static RecipeActionMarshaller();
    public sealed virtual void Marshall(RecipeAction requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeActionUnmarshaller : object {
    private static RecipeActionUnmarshaller _instance;
    public static RecipeActionUnmarshaller Instance { get; }
    private static RecipeActionUnmarshaller();
    private sealed virtual override RecipeAction Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RecipeAction,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecipeAction Unmarshall(JsonUnmarshallerContext context);
    public static RecipeActionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeMarshaller : object {
    public static RecipeMarshaller Instance;
    private static RecipeMarshaller();
    public sealed virtual void Marshall(Recipe requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeReferenceMarshaller : object {
    public static RecipeReferenceMarshaller Instance;
    private static RecipeReferenceMarshaller();
    public sealed virtual void Marshall(RecipeReference requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeReferenceUnmarshaller : object {
    private static RecipeReferenceUnmarshaller _instance;
    public static RecipeReferenceUnmarshaller Instance { get; }
    private static RecipeReferenceUnmarshaller();
    private sealed virtual override RecipeReference Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RecipeReference,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecipeReference Unmarshall(JsonUnmarshallerContext context);
    public static RecipeReferenceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeStepMarshaller : object {
    public static RecipeStepMarshaller Instance;
    private static RecipeStepMarshaller();
    public sealed virtual void Marshall(RecipeStep requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeStepUnmarshaller : object {
    private static RecipeStepUnmarshaller _instance;
    public static RecipeStepUnmarshaller Instance { get; }
    private static RecipeStepUnmarshaller();
    private sealed virtual override RecipeStep Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RecipeStep,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecipeStep Unmarshall(JsonUnmarshallerContext context);
    public static RecipeStepUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecipeUnmarshaller : object {
    private static RecipeUnmarshaller _instance;
    public static RecipeUnmarshaller Instance { get; }
    private static RecipeUnmarshaller();
    private sealed virtual override Recipe Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Recipe,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Recipe Unmarshall(JsonUnmarshallerContext context);
    public static RecipeUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecrawlPolicyMarshaller : object {
    public static RecrawlPolicyMarshaller Instance;
    private static RecrawlPolicyMarshaller();
    public sealed virtual void Marshall(RecrawlPolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RecrawlPolicyUnmarshaller : object {
    private static RecrawlPolicyUnmarshaller _instance;
    public static RecrawlPolicyUnmarshaller Instance { get; }
    private static RecrawlPolicyUnmarshaller();
    private sealed virtual override RecrawlPolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RecrawlPolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecrawlPolicy Unmarshall(JsonUnmarshallerContext context);
    public static RecrawlPolicyUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RedshiftSourceMarshaller : object {
    public static RedshiftSourceMarshaller Instance;
    private static RedshiftSourceMarshaller();
    public sealed virtual void Marshall(RedshiftSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RedshiftSourceUnmarshaller : object {
    private static RedshiftSourceUnmarshaller _instance;
    public static RedshiftSourceUnmarshaller Instance { get; }
    private static RedshiftSourceUnmarshaller();
    private sealed virtual override RedshiftSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RedshiftSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedshiftSource Unmarshall(JsonUnmarshallerContext context);
    public static RedshiftSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RedshiftTargetMarshaller : object {
    public static RedshiftTargetMarshaller Instance;
    private static RedshiftTargetMarshaller();
    public sealed virtual void Marshall(RedshiftTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RedshiftTargetUnmarshaller : object {
    private static RedshiftTargetUnmarshaller _instance;
    public static RedshiftTargetUnmarshaller Instance { get; }
    private static RedshiftTargetUnmarshaller();
    private sealed virtual override RedshiftTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RedshiftTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedshiftTarget Unmarshall(JsonUnmarshallerContext context);
    public static RedshiftTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RegisterSchemaVersionRequestMarshaller : object {
    private static RegisterSchemaVersionRequestMarshaller _instance;
    public static RegisterSchemaVersionRequestMarshaller Instance { get; }
    private static RegisterSchemaVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterSchemaVersionRequest publicRequest);
    internal static RegisterSchemaVersionRequestMarshaller GetInstance();
    public static RegisterSchemaVersionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RegisterSchemaVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterSchemaVersionResponseUnmarshaller _instance;
    public static RegisterSchemaVersionResponseUnmarshaller Instance { get; }
    private static RegisterSchemaVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterSchemaVersionResponseUnmarshaller GetInstance();
    public static RegisterSchemaVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RegistryIdMarshaller : object {
    public static RegistryIdMarshaller Instance;
    private static RegistryIdMarshaller();
    public sealed virtual void Marshall(RegistryId requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RegistryListItemUnmarshaller : object {
    private static RegistryListItemUnmarshaller _instance;
    public static RegistryListItemUnmarshaller Instance { get; }
    private static RegistryListItemUnmarshaller();
    private sealed virtual override RegistryListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RegistryListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RegistryListItem Unmarshall(JsonUnmarshallerContext context);
    public static RegistryListItemUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RelationalCatalogSourceMarshaller : object {
    public static RelationalCatalogSourceMarshaller Instance;
    private static RelationalCatalogSourceMarshaller();
    public sealed virtual void Marshall(RelationalCatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RelationalCatalogSourceUnmarshaller : object {
    private static RelationalCatalogSourceUnmarshaller _instance;
    public static RelationalCatalogSourceUnmarshaller Instance { get; }
    private static RelationalCatalogSourceUnmarshaller();
    private sealed virtual override RelationalCatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RelationalCatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RelationalCatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static RelationalCatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RemoveSchemaVersionMetadataRequestMarshaller : object {
    private static RemoveSchemaVersionMetadataRequestMarshaller _instance;
    public static RemoveSchemaVersionMetadataRequestMarshaller Instance { get; }
    private static RemoveSchemaVersionMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveSchemaVersionMetadataRequest publicRequest);
    internal static RemoveSchemaVersionMetadataRequestMarshaller GetInstance();
    public static RemoveSchemaVersionMetadataRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RemoveSchemaVersionMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveSchemaVersionMetadataResponseUnmarshaller _instance;
    public static RemoveSchemaVersionMetadataResponseUnmarshaller Instance { get; }
    private static RemoveSchemaVersionMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveSchemaVersionMetadataResponseUnmarshaller GetInstance();
    public static RemoveSchemaVersionMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RenameFieldMarshaller : object {
    public static RenameFieldMarshaller Instance;
    private static RenameFieldMarshaller();
    public sealed virtual void Marshall(RenameField requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RenameFieldUnmarshaller : object {
    private static RenameFieldUnmarshaller _instance;
    public static RenameFieldUnmarshaller Instance { get; }
    private static RenameFieldUnmarshaller();
    private sealed virtual override RenameField Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RenameField,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RenameField Unmarshall(JsonUnmarshallerContext context);
    public static RenameFieldUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResetJobBookmarkRequestMarshaller : object {
    private static ResetJobBookmarkRequestMarshaller _instance;
    public static ResetJobBookmarkRequestMarshaller Instance { get; }
    private static ResetJobBookmarkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetJobBookmarkRequest publicRequest);
    internal static ResetJobBookmarkRequestMarshaller GetInstance();
    public static ResetJobBookmarkRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResetJobBookmarkResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ResetJobBookmarkResponseUnmarshaller _instance;
    public static ResetJobBookmarkResponseUnmarshaller Instance { get; }
    private static ResetJobBookmarkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetJobBookmarkResponseUnmarshaller GetInstance();
    public static ResetJobBookmarkResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller : object {
    private static ResourceNotReadyExceptionUnmarshaller _instance;
    public static ResourceNotReadyExceptionUnmarshaller Instance { get; }
    private static ResourceNotReadyExceptionUnmarshaller();
    public sealed virtual ResourceNotReadyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotReadyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotReadyExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller : object {
    private static ResourceNumberLimitExceededExceptionUnmarshaller _instance;
    public static ResourceNumberLimitExceededExceptionUnmarshaller Instance { get; }
    private static ResourceNumberLimitExceededExceptionUnmarshaller();
    public sealed virtual ResourceNumberLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNumberLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNumberLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResourceUriMarshaller : object {
    public static ResourceUriMarshaller Instance;
    private static ResourceUriMarshaller();
    public sealed virtual void Marshall(ResourceUri requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResourceUriUnmarshaller : object {
    private static ResourceUriUnmarshaller _instance;
    public static ResourceUriUnmarshaller Instance { get; }
    private static ResourceUriUnmarshaller();
    private sealed virtual override ResourceUri Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ResourceUri,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceUri Unmarshall(JsonUnmarshallerContext context);
    public static ResourceUriUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResumeWorkflowRunRequestMarshaller : object {
    private static ResumeWorkflowRunRequestMarshaller _instance;
    public static ResumeWorkflowRunRequestMarshaller Instance { get; }
    private static ResumeWorkflowRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResumeWorkflowRunRequest publicRequest);
    internal static ResumeWorkflowRunRequestMarshaller GetInstance();
    public static ResumeWorkflowRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ResumeWorkflowRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ResumeWorkflowRunResponseUnmarshaller _instance;
    public static ResumeWorkflowRunResponseUnmarshaller Instance { get; }
    private static ResumeWorkflowRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResumeWorkflowRunResponseUnmarshaller GetInstance();
    public static ResumeWorkflowRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RunMetricsUnmarshaller : object {
    private static RunMetricsUnmarshaller _instance;
    public static RunMetricsUnmarshaller Instance { get; }
    private static RunMetricsUnmarshaller();
    private sealed virtual override RunMetrics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.RunMetrics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RunMetrics Unmarshall(JsonUnmarshallerContext context);
    public static RunMetricsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RunStatementRequestMarshaller : object {
    private static RunStatementRequestMarshaller _instance;
    public static RunStatementRequestMarshaller Instance { get; }
    private static RunStatementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RunStatementRequest publicRequest);
    internal static RunStatementRequestMarshaller GetInstance();
    public static RunStatementRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.RunStatementResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RunStatementResponseUnmarshaller _instance;
    public static RunStatementResponseUnmarshaller Instance { get; }
    private static RunStatementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RunStatementResponseUnmarshaller GetInstance();
    public static RunStatementResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogDeltaSourceMarshaller : object {
    public static S3CatalogDeltaSourceMarshaller Instance;
    private static S3CatalogDeltaSourceMarshaller();
    public sealed virtual void Marshall(S3CatalogDeltaSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogDeltaSourceUnmarshaller : object {
    private static S3CatalogDeltaSourceUnmarshaller _instance;
    public static S3CatalogDeltaSourceUnmarshaller Instance { get; }
    private static S3CatalogDeltaSourceUnmarshaller();
    private sealed virtual override S3CatalogDeltaSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3CatalogDeltaSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3CatalogDeltaSource Unmarshall(JsonUnmarshallerContext context);
    public static S3CatalogDeltaSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogHudiSourceMarshaller : object {
    public static S3CatalogHudiSourceMarshaller Instance;
    private static S3CatalogHudiSourceMarshaller();
    public sealed virtual void Marshall(S3CatalogHudiSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogHudiSourceUnmarshaller : object {
    private static S3CatalogHudiSourceUnmarshaller _instance;
    public static S3CatalogHudiSourceUnmarshaller Instance { get; }
    private static S3CatalogHudiSourceUnmarshaller();
    private sealed virtual override S3CatalogHudiSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3CatalogHudiSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3CatalogHudiSource Unmarshall(JsonUnmarshallerContext context);
    public static S3CatalogHudiSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogSourceMarshaller : object {
    public static S3CatalogSourceMarshaller Instance;
    private static S3CatalogSourceMarshaller();
    public sealed virtual void Marshall(S3CatalogSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogSourceUnmarshaller : object {
    private static S3CatalogSourceUnmarshaller _instance;
    public static S3CatalogSourceUnmarshaller Instance { get; }
    private static S3CatalogSourceUnmarshaller();
    private sealed virtual override S3CatalogSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3CatalogSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3CatalogSource Unmarshall(JsonUnmarshallerContext context);
    public static S3CatalogSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogTargetMarshaller : object {
    public static S3CatalogTargetMarshaller Instance;
    private static S3CatalogTargetMarshaller();
    public sealed virtual void Marshall(S3CatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CatalogTargetUnmarshaller : object {
    private static S3CatalogTargetUnmarshaller _instance;
    public static S3CatalogTargetUnmarshaller Instance { get; }
    private static S3CatalogTargetUnmarshaller();
    private sealed virtual override S3CatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3CatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3CatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static S3CatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CsvSourceMarshaller : object {
    public static S3CsvSourceMarshaller Instance;
    private static S3CsvSourceMarshaller();
    public sealed virtual void Marshall(S3CsvSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3CsvSourceUnmarshaller : object {
    private static S3CsvSourceUnmarshaller _instance;
    public static S3CsvSourceUnmarshaller Instance { get; }
    private static S3CsvSourceUnmarshaller();
    private sealed virtual override S3CsvSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3CsvSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3CsvSource Unmarshall(JsonUnmarshallerContext context);
    public static S3CsvSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DeltaCatalogTargetMarshaller : object {
    public static S3DeltaCatalogTargetMarshaller Instance;
    private static S3DeltaCatalogTargetMarshaller();
    public sealed virtual void Marshall(S3DeltaCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DeltaCatalogTargetUnmarshaller : object {
    private static S3DeltaCatalogTargetUnmarshaller _instance;
    public static S3DeltaCatalogTargetUnmarshaller Instance { get; }
    private static S3DeltaCatalogTargetUnmarshaller();
    private sealed virtual override S3DeltaCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3DeltaCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3DeltaCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static S3DeltaCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DeltaDirectTargetMarshaller : object {
    public static S3DeltaDirectTargetMarshaller Instance;
    private static S3DeltaDirectTargetMarshaller();
    public sealed virtual void Marshall(S3DeltaDirectTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DeltaDirectTargetUnmarshaller : object {
    private static S3DeltaDirectTargetUnmarshaller _instance;
    public static S3DeltaDirectTargetUnmarshaller Instance { get; }
    private static S3DeltaDirectTargetUnmarshaller();
    private sealed virtual override S3DeltaDirectTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3DeltaDirectTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3DeltaDirectTarget Unmarshall(JsonUnmarshallerContext context);
    public static S3DeltaDirectTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DeltaSourceMarshaller : object {
    public static S3DeltaSourceMarshaller Instance;
    private static S3DeltaSourceMarshaller();
    public sealed virtual void Marshall(S3DeltaSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DeltaSourceUnmarshaller : object {
    private static S3DeltaSourceUnmarshaller _instance;
    public static S3DeltaSourceUnmarshaller Instance { get; }
    private static S3DeltaSourceUnmarshaller();
    private sealed virtual override S3DeltaSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3DeltaSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3DeltaSource Unmarshall(JsonUnmarshallerContext context);
    public static S3DeltaSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DirectSourceAdditionalOptionsMarshaller : object {
    public static S3DirectSourceAdditionalOptionsMarshaller Instance;
    private static S3DirectSourceAdditionalOptionsMarshaller();
    public sealed virtual void Marshall(S3DirectSourceAdditionalOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DirectSourceAdditionalOptionsUnmarshaller : object {
    private static S3DirectSourceAdditionalOptionsUnmarshaller _instance;
    public static S3DirectSourceAdditionalOptionsUnmarshaller Instance { get; }
    private static S3DirectSourceAdditionalOptionsUnmarshaller();
    private sealed virtual override S3DirectSourceAdditionalOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3DirectSourceAdditionalOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3DirectSourceAdditionalOptions Unmarshall(JsonUnmarshallerContext context);
    public static S3DirectSourceAdditionalOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DirectTargetMarshaller : object {
    public static S3DirectTargetMarshaller Instance;
    private static S3DirectTargetMarshaller();
    public sealed virtual void Marshall(S3DirectTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3DirectTargetUnmarshaller : object {
    private static S3DirectTargetUnmarshaller _instance;
    public static S3DirectTargetUnmarshaller Instance { get; }
    private static S3DirectTargetUnmarshaller();
    private sealed virtual override S3DirectTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3DirectTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3DirectTarget Unmarshall(JsonUnmarshallerContext context);
    public static S3DirectTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3EncryptionMarshaller : object {
    public static S3EncryptionMarshaller Instance;
    private static S3EncryptionMarshaller();
    public sealed virtual void Marshall(S3Encryption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3EncryptionUnmarshaller : object {
    private static S3EncryptionUnmarshaller _instance;
    public static S3EncryptionUnmarshaller Instance { get; }
    private static S3EncryptionUnmarshaller();
    private sealed virtual override S3Encryption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3Encryption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Encryption Unmarshall(JsonUnmarshallerContext context);
    public static S3EncryptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3GlueParquetTargetMarshaller : object {
    public static S3GlueParquetTargetMarshaller Instance;
    private static S3GlueParquetTargetMarshaller();
    public sealed virtual void Marshall(S3GlueParquetTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3GlueParquetTargetUnmarshaller : object {
    private static S3GlueParquetTargetUnmarshaller _instance;
    public static S3GlueParquetTargetUnmarshaller Instance { get; }
    private static S3GlueParquetTargetUnmarshaller();
    private sealed virtual override S3GlueParquetTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3GlueParquetTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3GlueParquetTarget Unmarshall(JsonUnmarshallerContext context);
    public static S3GlueParquetTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3HudiCatalogTargetMarshaller : object {
    public static S3HudiCatalogTargetMarshaller Instance;
    private static S3HudiCatalogTargetMarshaller();
    public sealed virtual void Marshall(S3HudiCatalogTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3HudiCatalogTargetUnmarshaller : object {
    private static S3HudiCatalogTargetUnmarshaller _instance;
    public static S3HudiCatalogTargetUnmarshaller Instance { get; }
    private static S3HudiCatalogTargetUnmarshaller();
    private sealed virtual override S3HudiCatalogTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3HudiCatalogTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3HudiCatalogTarget Unmarshall(JsonUnmarshallerContext context);
    public static S3HudiCatalogTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3HudiDirectTargetMarshaller : object {
    public static S3HudiDirectTargetMarshaller Instance;
    private static S3HudiDirectTargetMarshaller();
    public sealed virtual void Marshall(S3HudiDirectTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3HudiDirectTargetUnmarshaller : object {
    private static S3HudiDirectTargetUnmarshaller _instance;
    public static S3HudiDirectTargetUnmarshaller Instance { get; }
    private static S3HudiDirectTargetUnmarshaller();
    private sealed virtual override S3HudiDirectTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3HudiDirectTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3HudiDirectTarget Unmarshall(JsonUnmarshallerContext context);
    public static S3HudiDirectTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3HudiSourceMarshaller : object {
    public static S3HudiSourceMarshaller Instance;
    private static S3HudiSourceMarshaller();
    public sealed virtual void Marshall(S3HudiSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3HudiSourceUnmarshaller : object {
    private static S3HudiSourceUnmarshaller _instance;
    public static S3HudiSourceUnmarshaller Instance { get; }
    private static S3HudiSourceUnmarshaller();
    private sealed virtual override S3HudiSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3HudiSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3HudiSource Unmarshall(JsonUnmarshallerContext context);
    public static S3HudiSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3JsonSourceMarshaller : object {
    public static S3JsonSourceMarshaller Instance;
    private static S3JsonSourceMarshaller();
    public sealed virtual void Marshall(S3JsonSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3JsonSourceUnmarshaller : object {
    private static S3JsonSourceUnmarshaller _instance;
    public static S3JsonSourceUnmarshaller Instance { get; }
    private static S3JsonSourceUnmarshaller();
    private sealed virtual override S3JsonSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3JsonSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3JsonSource Unmarshall(JsonUnmarshallerContext context);
    public static S3JsonSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3ParquetSourceMarshaller : object {
    public static S3ParquetSourceMarshaller Instance;
    private static S3ParquetSourceMarshaller();
    public sealed virtual void Marshall(S3ParquetSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3ParquetSourceUnmarshaller : object {
    private static S3ParquetSourceUnmarshaller _instance;
    public static S3ParquetSourceUnmarshaller Instance { get; }
    private static S3ParquetSourceUnmarshaller();
    private sealed virtual override S3ParquetSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3ParquetSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ParquetSource Unmarshall(JsonUnmarshallerContext context);
    public static S3ParquetSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3SourceAdditionalOptionsMarshaller : object {
    public static S3SourceAdditionalOptionsMarshaller Instance;
    private static S3SourceAdditionalOptionsMarshaller();
    public sealed virtual void Marshall(S3SourceAdditionalOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3SourceAdditionalOptionsUnmarshaller : object {
    private static S3SourceAdditionalOptionsUnmarshaller _instance;
    public static S3SourceAdditionalOptionsUnmarshaller Instance { get; }
    private static S3SourceAdditionalOptionsUnmarshaller();
    private sealed virtual override S3SourceAdditionalOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3SourceAdditionalOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3SourceAdditionalOptions Unmarshall(JsonUnmarshallerContext context);
    public static S3SourceAdditionalOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3TargetMarshaller : object {
    public static S3TargetMarshaller Instance;
    private static S3TargetMarshaller();
    public sealed virtual void Marshall(S3Target requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.S3TargetUnmarshaller : object {
    private static S3TargetUnmarshaller _instance;
    public static S3TargetUnmarshaller Instance { get; }
    private static S3TargetUnmarshaller();
    private sealed virtual override S3Target Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.S3Target,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Target Unmarshall(JsonUnmarshallerContext context);
    public static S3TargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchedulerNotRunningExceptionUnmarshaller : object {
    private static SchedulerNotRunningExceptionUnmarshaller _instance;
    public static SchedulerNotRunningExceptionUnmarshaller Instance { get; }
    private static SchedulerNotRunningExceptionUnmarshaller();
    public sealed virtual SchedulerNotRunningException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SchedulerNotRunningException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SchedulerNotRunningExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchedulerRunningExceptionUnmarshaller : object {
    private static SchedulerRunningExceptionUnmarshaller _instance;
    public static SchedulerRunningExceptionUnmarshaller Instance { get; }
    private static SchedulerRunningExceptionUnmarshaller();
    public sealed virtual SchedulerRunningException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SchedulerRunningException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SchedulerRunningExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchedulerTransitioningExceptionUnmarshaller : object {
    private static SchedulerTransitioningExceptionUnmarshaller _instance;
    public static SchedulerTransitioningExceptionUnmarshaller Instance { get; }
    private static SchedulerTransitioningExceptionUnmarshaller();
    public sealed virtual SchedulerTransitioningException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SchedulerTransitioningException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SchedulerTransitioningExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ScheduleUnmarshaller : object {
    private static ScheduleUnmarshaller _instance;
    public static ScheduleUnmarshaller Instance { get; }
    private static ScheduleUnmarshaller();
    private sealed virtual override Schedule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Schedule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Schedule Unmarshall(JsonUnmarshallerContext context);
    public static ScheduleUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaChangePolicyMarshaller : object {
    public static SchemaChangePolicyMarshaller Instance;
    private static SchemaChangePolicyMarshaller();
    public sealed virtual void Marshall(SchemaChangePolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaChangePolicyUnmarshaller : object {
    private static SchemaChangePolicyUnmarshaller _instance;
    public static SchemaChangePolicyUnmarshaller Instance { get; }
    private static SchemaChangePolicyUnmarshaller();
    private sealed virtual override SchemaChangePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SchemaChangePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaChangePolicy Unmarshall(JsonUnmarshallerContext context);
    public static SchemaChangePolicyUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaColumnMarshaller : object {
    public static SchemaColumnMarshaller Instance;
    private static SchemaColumnMarshaller();
    public sealed virtual void Marshall(SchemaColumn requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaColumnUnmarshaller : object {
    private static SchemaColumnUnmarshaller _instance;
    public static SchemaColumnUnmarshaller Instance { get; }
    private static SchemaColumnUnmarshaller();
    private sealed virtual override SchemaColumn Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SchemaColumn,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaColumn Unmarshall(JsonUnmarshallerContext context);
    public static SchemaColumnUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaIdMarshaller : object {
    public static SchemaIdMarshaller Instance;
    private static SchemaIdMarshaller();
    public sealed virtual void Marshall(SchemaId requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaIdUnmarshaller : object {
    private static SchemaIdUnmarshaller _instance;
    public static SchemaIdUnmarshaller Instance { get; }
    private static SchemaIdUnmarshaller();
    private sealed virtual override SchemaId Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SchemaId,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaId Unmarshall(JsonUnmarshallerContext context);
    public static SchemaIdUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaListItemUnmarshaller : object {
    private static SchemaListItemUnmarshaller _instance;
    public static SchemaListItemUnmarshaller Instance { get; }
    private static SchemaListItemUnmarshaller();
    private sealed virtual override SchemaListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SchemaListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaListItem Unmarshall(JsonUnmarshallerContext context);
    public static SchemaListItemUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaReferenceMarshaller : object {
    public static SchemaReferenceMarshaller Instance;
    private static SchemaReferenceMarshaller();
    public sealed virtual void Marshall(SchemaReference requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaReferenceUnmarshaller : object {
    private static SchemaReferenceUnmarshaller _instance;
    public static SchemaReferenceUnmarshaller Instance { get; }
    private static SchemaReferenceUnmarshaller();
    private sealed virtual override SchemaReference Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SchemaReference,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaReference Unmarshall(JsonUnmarshallerContext context);
    public static SchemaReferenceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaVersionErrorItemUnmarshaller : object {
    private static SchemaVersionErrorItemUnmarshaller _instance;
    public static SchemaVersionErrorItemUnmarshaller Instance { get; }
    private static SchemaVersionErrorItemUnmarshaller();
    private sealed virtual override SchemaVersionErrorItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SchemaVersionErrorItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaVersionErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static SchemaVersionErrorItemUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaVersionListItemUnmarshaller : object {
    private static SchemaVersionListItemUnmarshaller _instance;
    public static SchemaVersionListItemUnmarshaller Instance { get; }
    private static SchemaVersionListItemUnmarshaller();
    private sealed virtual override SchemaVersionListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SchemaVersionListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaVersionListItem Unmarshall(JsonUnmarshallerContext context);
    public static SchemaVersionListItemUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SchemaVersionNumberMarshaller : object {
    public static SchemaVersionNumberMarshaller Instance;
    private static SchemaVersionNumberMarshaller();
    public sealed virtual void Marshall(SchemaVersionNumber requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SearchTablesRequestMarshaller : object {
    private static SearchTablesRequestMarshaller _instance;
    public static SearchTablesRequestMarshaller Instance { get; }
    private static SearchTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SearchTablesRequest publicRequest);
    internal static SearchTablesRequestMarshaller GetInstance();
    public static SearchTablesRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SearchTablesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SearchTablesResponseUnmarshaller _instance;
    public static SearchTablesResponseUnmarshaller Instance { get; }
    private static SearchTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SearchTablesResponseUnmarshaller GetInstance();
    public static SearchTablesResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SecurityConfigurationUnmarshaller : object {
    private static SecurityConfigurationUnmarshaller _instance;
    public static SecurityConfigurationUnmarshaller Instance { get; }
    private static SecurityConfigurationUnmarshaller();
    private sealed virtual override SecurityConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SecurityConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecurityConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SecurityConfigurationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SegmentMarshaller : object {
    public static SegmentMarshaller Instance;
    private static SegmentMarshaller();
    public sealed virtual void Marshall(Segment requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SelectFieldsMarshaller : object {
    public static SelectFieldsMarshaller Instance;
    private static SelectFieldsMarshaller();
    public sealed virtual void Marshall(SelectFields requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SelectFieldsUnmarshaller : object {
    private static SelectFieldsUnmarshaller _instance;
    public static SelectFieldsUnmarshaller Instance { get; }
    private static SelectFieldsUnmarshaller();
    private sealed virtual override SelectFields Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SelectFields,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SelectFields Unmarshall(JsonUnmarshallerContext context);
    public static SelectFieldsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SelectFromCollectionMarshaller : object {
    public static SelectFromCollectionMarshaller Instance;
    private static SelectFromCollectionMarshaller();
    public sealed virtual void Marshall(SelectFromCollection requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SelectFromCollectionUnmarshaller : object {
    private static SelectFromCollectionUnmarshaller _instance;
    public static SelectFromCollectionUnmarshaller Instance { get; }
    private static SelectFromCollectionUnmarshaller();
    private sealed virtual override SelectFromCollection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SelectFromCollection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SelectFromCollection Unmarshall(JsonUnmarshallerContext context);
    public static SelectFromCollectionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SerDeInfoMarshaller : object {
    public static SerDeInfoMarshaller Instance;
    private static SerDeInfoMarshaller();
    public sealed virtual void Marshall(SerDeInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SerDeInfoUnmarshaller : object {
    private static SerDeInfoUnmarshaller _instance;
    public static SerDeInfoUnmarshaller Instance { get; }
    private static SerDeInfoUnmarshaller();
    private sealed virtual override SerDeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SerDeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SerDeInfo Unmarshall(JsonUnmarshallerContext context);
    public static SerDeInfoUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SessionCommandMarshaller : object {
    public static SessionCommandMarshaller Instance;
    private static SessionCommandMarshaller();
    public sealed virtual void Marshall(SessionCommand requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SessionCommandUnmarshaller : object {
    private static SessionCommandUnmarshaller _instance;
    public static SessionCommandUnmarshaller Instance { get; }
    private static SessionCommandUnmarshaller();
    private sealed virtual override SessionCommand Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SessionCommand,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SessionCommand Unmarshall(JsonUnmarshallerContext context);
    public static SessionCommandUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SessionUnmarshaller : object {
    private static SessionUnmarshaller _instance;
    public static SessionUnmarshaller Instance { get; }
    private static SessionUnmarshaller();
    private sealed virtual override Session Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Session,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Session Unmarshall(JsonUnmarshallerContext context);
    public static SessionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SkewedInfoMarshaller : object {
    public static SkewedInfoMarshaller Instance;
    private static SkewedInfoMarshaller();
    public sealed virtual void Marshall(SkewedInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SkewedInfoUnmarshaller : object {
    private static SkewedInfoUnmarshaller _instance;
    public static SkewedInfoUnmarshaller Instance { get; }
    private static SkewedInfoUnmarshaller();
    private sealed virtual override SkewedInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SkewedInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SkewedInfo Unmarshall(JsonUnmarshallerContext context);
    public static SkewedInfoUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SnowflakeNodeDataMarshaller : object {
    public static SnowflakeNodeDataMarshaller Instance;
    private static SnowflakeNodeDataMarshaller();
    public sealed virtual void Marshall(SnowflakeNodeData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SnowflakeNodeDataUnmarshaller : object {
    private static SnowflakeNodeDataUnmarshaller _instance;
    public static SnowflakeNodeDataUnmarshaller Instance { get; }
    private static SnowflakeNodeDataUnmarshaller();
    private sealed virtual override SnowflakeNodeData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SnowflakeNodeData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeNodeData Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeNodeDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SnowflakeSourceMarshaller : object {
    public static SnowflakeSourceMarshaller Instance;
    private static SnowflakeSourceMarshaller();
    public sealed virtual void Marshall(SnowflakeSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SnowflakeSourceUnmarshaller : object {
    private static SnowflakeSourceUnmarshaller _instance;
    public static SnowflakeSourceUnmarshaller Instance { get; }
    private static SnowflakeSourceUnmarshaller();
    private sealed virtual override SnowflakeSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SnowflakeSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeSource Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SnowflakeTargetMarshaller : object {
    public static SnowflakeTargetMarshaller Instance;
    private static SnowflakeTargetMarshaller();
    public sealed virtual void Marshall(SnowflakeTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SnowflakeTargetUnmarshaller : object {
    private static SnowflakeTargetUnmarshaller _instance;
    public static SnowflakeTargetUnmarshaller Instance { get; }
    private static SnowflakeTargetUnmarshaller();
    private sealed virtual override SnowflakeTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SnowflakeTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeTarget Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SortCriterionMarshaller : object {
    public static SortCriterionMarshaller Instance;
    private static SortCriterionMarshaller();
    public sealed virtual void Marshall(SortCriterion requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SourceControlDetailsMarshaller : object {
    public static SourceControlDetailsMarshaller Instance;
    private static SourceControlDetailsMarshaller();
    public sealed virtual void Marshall(SourceControlDetails requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SourceControlDetailsUnmarshaller : object {
    private static SourceControlDetailsUnmarshaller _instance;
    public static SourceControlDetailsUnmarshaller Instance { get; }
    private static SourceControlDetailsUnmarshaller();
    private sealed virtual override SourceControlDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SourceControlDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceControlDetails Unmarshall(JsonUnmarshallerContext context);
    public static SourceControlDetailsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SparkConnectorSourceMarshaller : object {
    public static SparkConnectorSourceMarshaller Instance;
    private static SparkConnectorSourceMarshaller();
    public sealed virtual void Marshall(SparkConnectorSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SparkConnectorSourceUnmarshaller : object {
    private static SparkConnectorSourceUnmarshaller _instance;
    public static SparkConnectorSourceUnmarshaller Instance { get; }
    private static SparkConnectorSourceUnmarshaller();
    private sealed virtual override SparkConnectorSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SparkConnectorSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SparkConnectorSource Unmarshall(JsonUnmarshallerContext context);
    public static SparkConnectorSourceUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SparkConnectorTargetMarshaller : object {
    public static SparkConnectorTargetMarshaller Instance;
    private static SparkConnectorTargetMarshaller();
    public sealed virtual void Marshall(SparkConnectorTarget requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SparkConnectorTargetUnmarshaller : object {
    private static SparkConnectorTargetUnmarshaller _instance;
    public static SparkConnectorTargetUnmarshaller Instance { get; }
    private static SparkConnectorTargetUnmarshaller();
    private sealed virtual override SparkConnectorTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SparkConnectorTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SparkConnectorTarget Unmarshall(JsonUnmarshallerContext context);
    public static SparkConnectorTargetUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SparkSQLMarshaller : object {
    public static SparkSQLMarshaller Instance;
    private static SparkSQLMarshaller();
    public sealed virtual void Marshall(SparkSQL requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SparkSQLUnmarshaller : object {
    private static SparkSQLUnmarshaller _instance;
    public static SparkSQLUnmarshaller Instance { get; }
    private static SparkSQLUnmarshaller();
    private sealed virtual override SparkSQL Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SparkSQL,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SparkSQL Unmarshall(JsonUnmarshallerContext context);
    public static SparkSQLUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SpigotMarshaller : object {
    public static SpigotMarshaller Instance;
    private static SpigotMarshaller();
    public sealed virtual void Marshall(Spigot requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SpigotUnmarshaller : object {
    private static SpigotUnmarshaller _instance;
    public static SpigotUnmarshaller Instance { get; }
    private static SpigotUnmarshaller();
    private sealed virtual override Spigot Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Spigot,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Spigot Unmarshall(JsonUnmarshallerContext context);
    public static SpigotUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SplitFieldsMarshaller : object {
    public static SplitFieldsMarshaller Instance;
    private static SplitFieldsMarshaller();
    public sealed virtual void Marshall(SplitFields requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SplitFieldsUnmarshaller : object {
    private static SplitFieldsUnmarshaller _instance;
    public static SplitFieldsUnmarshaller Instance { get; }
    private static SplitFieldsUnmarshaller();
    private sealed virtual override SplitFields Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SplitFields,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SplitFields Unmarshall(JsonUnmarshallerContext context);
    public static SplitFieldsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SqlAliasMarshaller : object {
    public static SqlAliasMarshaller Instance;
    private static SqlAliasMarshaller();
    public sealed virtual void Marshall(SqlAlias requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SqlAliasUnmarshaller : object {
    private static SqlAliasUnmarshaller _instance;
    public static SqlAliasUnmarshaller Instance { get; }
    private static SqlAliasUnmarshaller();
    private sealed virtual override SqlAlias Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.SqlAlias,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SqlAlias Unmarshall(JsonUnmarshallerContext context);
    public static SqlAliasUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartBlueprintRunRequestMarshaller : object {
    private static StartBlueprintRunRequestMarshaller _instance;
    public static StartBlueprintRunRequestMarshaller Instance { get; }
    private static StartBlueprintRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartBlueprintRunRequest publicRequest);
    internal static StartBlueprintRunRequestMarshaller GetInstance();
    public static StartBlueprintRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartBlueprintRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartBlueprintRunResponseUnmarshaller _instance;
    public static StartBlueprintRunResponseUnmarshaller Instance { get; }
    private static StartBlueprintRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartBlueprintRunResponseUnmarshaller GetInstance();
    public static StartBlueprintRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartColumnStatisticsTaskRunRequestMarshaller : object {
    private static StartColumnStatisticsTaskRunRequestMarshaller _instance;
    public static StartColumnStatisticsTaskRunRequestMarshaller Instance { get; }
    private static StartColumnStatisticsTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartColumnStatisticsTaskRunRequest publicRequest);
    internal static StartColumnStatisticsTaskRunRequestMarshaller GetInstance();
    public static StartColumnStatisticsTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartColumnStatisticsTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartColumnStatisticsTaskRunResponseUnmarshaller _instance;
    public static StartColumnStatisticsTaskRunResponseUnmarshaller Instance { get; }
    private static StartColumnStatisticsTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartColumnStatisticsTaskRunResponseUnmarshaller GetInstance();
    public static StartColumnStatisticsTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartCrawlerRequestMarshaller : object {
    private static StartCrawlerRequestMarshaller _instance;
    public static StartCrawlerRequestMarshaller Instance { get; }
    private static StartCrawlerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartCrawlerRequest publicRequest);
    internal static StartCrawlerRequestMarshaller GetInstance();
    public static StartCrawlerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartCrawlerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartCrawlerResponseUnmarshaller _instance;
    public static StartCrawlerResponseUnmarshaller Instance { get; }
    private static StartCrawlerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartCrawlerResponseUnmarshaller GetInstance();
    public static StartCrawlerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartCrawlerScheduleRequestMarshaller : object {
    private static StartCrawlerScheduleRequestMarshaller _instance;
    public static StartCrawlerScheduleRequestMarshaller Instance { get; }
    private static StartCrawlerScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartCrawlerScheduleRequest publicRequest);
    internal static StartCrawlerScheduleRequestMarshaller GetInstance();
    public static StartCrawlerScheduleRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartCrawlerScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartCrawlerScheduleResponseUnmarshaller _instance;
    public static StartCrawlerScheduleResponseUnmarshaller Instance { get; }
    private static StartCrawlerScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartCrawlerScheduleResponseUnmarshaller GetInstance();
    public static StartCrawlerScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartDataQualityRuleRecommendationRunRequestMarshaller : object {
    private static StartDataQualityRuleRecommendationRunRequestMarshaller _instance;
    public static StartDataQualityRuleRecommendationRunRequestMarshaller Instance { get; }
    private static StartDataQualityRuleRecommendationRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartDataQualityRuleRecommendationRunRequest publicRequest);
    internal static StartDataQualityRuleRecommendationRunRequestMarshaller GetInstance();
    public static StartDataQualityRuleRecommendationRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartDataQualityRuleRecommendationRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartDataQualityRuleRecommendationRunResponseUnmarshaller _instance;
    public static StartDataQualityRuleRecommendationRunResponseUnmarshaller Instance { get; }
    private static StartDataQualityRuleRecommendationRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartDataQualityRuleRecommendationRunResponseUnmarshaller GetInstance();
    public static StartDataQualityRuleRecommendationRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartDataQualityRulesetEvaluationRunRequestMarshaller : object {
    private static StartDataQualityRulesetEvaluationRunRequestMarshaller _instance;
    public static StartDataQualityRulesetEvaluationRunRequestMarshaller Instance { get; }
    private static StartDataQualityRulesetEvaluationRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartDataQualityRulesetEvaluationRunRequest publicRequest);
    internal static StartDataQualityRulesetEvaluationRunRequestMarshaller GetInstance();
    public static StartDataQualityRulesetEvaluationRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartDataQualityRulesetEvaluationRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartDataQualityRulesetEvaluationRunResponseUnmarshaller _instance;
    public static StartDataQualityRulesetEvaluationRunResponseUnmarshaller Instance { get; }
    private static StartDataQualityRulesetEvaluationRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartDataQualityRulesetEvaluationRunResponseUnmarshaller GetInstance();
    public static StartDataQualityRulesetEvaluationRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartExportLabelsTaskRunRequestMarshaller : object {
    private static StartExportLabelsTaskRunRequestMarshaller _instance;
    public static StartExportLabelsTaskRunRequestMarshaller Instance { get; }
    private static StartExportLabelsTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartExportLabelsTaskRunRequest publicRequest);
    internal static StartExportLabelsTaskRunRequestMarshaller GetInstance();
    public static StartExportLabelsTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartExportLabelsTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartExportLabelsTaskRunResponseUnmarshaller _instance;
    public static StartExportLabelsTaskRunResponseUnmarshaller Instance { get; }
    private static StartExportLabelsTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartExportLabelsTaskRunResponseUnmarshaller GetInstance();
    public static StartExportLabelsTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartImportLabelsTaskRunRequestMarshaller : object {
    private static StartImportLabelsTaskRunRequestMarshaller _instance;
    public static StartImportLabelsTaskRunRequestMarshaller Instance { get; }
    private static StartImportLabelsTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartImportLabelsTaskRunRequest publicRequest);
    internal static StartImportLabelsTaskRunRequestMarshaller GetInstance();
    public static StartImportLabelsTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartImportLabelsTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartImportLabelsTaskRunResponseUnmarshaller _instance;
    public static StartImportLabelsTaskRunResponseUnmarshaller Instance { get; }
    private static StartImportLabelsTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartImportLabelsTaskRunResponseUnmarshaller GetInstance();
    public static StartImportLabelsTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartingEventBatchConditionUnmarshaller : object {
    private static StartingEventBatchConditionUnmarshaller _instance;
    public static StartingEventBatchConditionUnmarshaller Instance { get; }
    private static StartingEventBatchConditionUnmarshaller();
    private sealed virtual override StartingEventBatchCondition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.StartingEventBatchCondition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StartingEventBatchCondition Unmarshall(JsonUnmarshallerContext context);
    public static StartingEventBatchConditionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartJobRunRequestMarshaller : object {
    private static StartJobRunRequestMarshaller _instance;
    public static StartJobRunRequestMarshaller Instance { get; }
    private static StartJobRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartJobRunRequest publicRequest);
    internal static StartJobRunRequestMarshaller GetInstance();
    public static StartJobRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartJobRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartJobRunResponseUnmarshaller _instance;
    public static StartJobRunResponseUnmarshaller Instance { get; }
    private static StartJobRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartJobRunResponseUnmarshaller GetInstance();
    public static StartJobRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartMLEvaluationTaskRunRequestMarshaller : object {
    private static StartMLEvaluationTaskRunRequestMarshaller _instance;
    public static StartMLEvaluationTaskRunRequestMarshaller Instance { get; }
    private static StartMLEvaluationTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMLEvaluationTaskRunRequest publicRequest);
    internal static StartMLEvaluationTaskRunRequestMarshaller GetInstance();
    public static StartMLEvaluationTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartMLEvaluationTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMLEvaluationTaskRunResponseUnmarshaller _instance;
    public static StartMLEvaluationTaskRunResponseUnmarshaller Instance { get; }
    private static StartMLEvaluationTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMLEvaluationTaskRunResponseUnmarshaller GetInstance();
    public static StartMLEvaluationTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartMLLabelingSetGenerationTaskRunRequestMarshaller : object {
    private static StartMLLabelingSetGenerationTaskRunRequestMarshaller _instance;
    public static StartMLLabelingSetGenerationTaskRunRequestMarshaller Instance { get; }
    private static StartMLLabelingSetGenerationTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMLLabelingSetGenerationTaskRunRequest publicRequest);
    internal static StartMLLabelingSetGenerationTaskRunRequestMarshaller GetInstance();
    public static StartMLLabelingSetGenerationTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartMLLabelingSetGenerationTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMLLabelingSetGenerationTaskRunResponseUnmarshaller _instance;
    public static StartMLLabelingSetGenerationTaskRunResponseUnmarshaller Instance { get; }
    private static StartMLLabelingSetGenerationTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMLLabelingSetGenerationTaskRunResponseUnmarshaller GetInstance();
    public static StartMLLabelingSetGenerationTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartTriggerRequestMarshaller : object {
    private static StartTriggerRequestMarshaller _instance;
    public static StartTriggerRequestMarshaller Instance { get; }
    private static StartTriggerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartTriggerRequest publicRequest);
    internal static StartTriggerRequestMarshaller GetInstance();
    public static StartTriggerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartTriggerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartTriggerResponseUnmarshaller _instance;
    public static StartTriggerResponseUnmarshaller Instance { get; }
    private static StartTriggerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartTriggerResponseUnmarshaller GetInstance();
    public static StartTriggerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartWorkflowRunRequestMarshaller : object {
    private static StartWorkflowRunRequestMarshaller _instance;
    public static StartWorkflowRunRequestMarshaller Instance { get; }
    private static StartWorkflowRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartWorkflowRunRequest publicRequest);
    internal static StartWorkflowRunRequestMarshaller GetInstance();
    public static StartWorkflowRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StartWorkflowRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartWorkflowRunResponseUnmarshaller _instance;
    public static StartWorkflowRunResponseUnmarshaller Instance { get; }
    private static StartWorkflowRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartWorkflowRunResponseUnmarshaller GetInstance();
    public static StartWorkflowRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StatementOutputDataUnmarshaller : object {
    private static StatementOutputDataUnmarshaller _instance;
    public static StatementOutputDataUnmarshaller Instance { get; }
    private static StatementOutputDataUnmarshaller();
    private sealed virtual override StatementOutputData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.StatementOutputData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatementOutputData Unmarshall(JsonUnmarshallerContext context);
    public static StatementOutputDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StatementOutputUnmarshaller : object {
    private static StatementOutputUnmarshaller _instance;
    public static StatementOutputUnmarshaller Instance { get; }
    private static StatementOutputUnmarshaller();
    private sealed virtual override StatementOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.StatementOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatementOutput Unmarshall(JsonUnmarshallerContext context);
    public static StatementOutputUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StatementUnmarshaller : object {
    private static StatementUnmarshaller _instance;
    public static StatementUnmarshaller Instance { get; }
    private static StatementUnmarshaller();
    private sealed virtual override Statement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Statement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Statement Unmarshall(JsonUnmarshallerContext context);
    public static StatementUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopColumnStatisticsTaskRunRequestMarshaller : object {
    private static StopColumnStatisticsTaskRunRequestMarshaller _instance;
    public static StopColumnStatisticsTaskRunRequestMarshaller Instance { get; }
    private static StopColumnStatisticsTaskRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopColumnStatisticsTaskRunRequest publicRequest);
    internal static StopColumnStatisticsTaskRunRequestMarshaller GetInstance();
    public static StopColumnStatisticsTaskRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopColumnStatisticsTaskRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopColumnStatisticsTaskRunResponseUnmarshaller _instance;
    public static StopColumnStatisticsTaskRunResponseUnmarshaller Instance { get; }
    private static StopColumnStatisticsTaskRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopColumnStatisticsTaskRunResponseUnmarshaller GetInstance();
    public static StopColumnStatisticsTaskRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopCrawlerRequestMarshaller : object {
    private static StopCrawlerRequestMarshaller _instance;
    public static StopCrawlerRequestMarshaller Instance { get; }
    private static StopCrawlerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopCrawlerRequest publicRequest);
    internal static StopCrawlerRequestMarshaller GetInstance();
    public static StopCrawlerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopCrawlerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopCrawlerResponseUnmarshaller _instance;
    public static StopCrawlerResponseUnmarshaller Instance { get; }
    private static StopCrawlerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopCrawlerResponseUnmarshaller GetInstance();
    public static StopCrawlerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopCrawlerScheduleRequestMarshaller : object {
    private static StopCrawlerScheduleRequestMarshaller _instance;
    public static StopCrawlerScheduleRequestMarshaller Instance { get; }
    private static StopCrawlerScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopCrawlerScheduleRequest publicRequest);
    internal static StopCrawlerScheduleRequestMarshaller GetInstance();
    public static StopCrawlerScheduleRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopCrawlerScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopCrawlerScheduleResponseUnmarshaller _instance;
    public static StopCrawlerScheduleResponseUnmarshaller Instance { get; }
    private static StopCrawlerScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopCrawlerScheduleResponseUnmarshaller GetInstance();
    public static StopCrawlerScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopSessionRequestMarshaller : object {
    private static StopSessionRequestMarshaller _instance;
    public static StopSessionRequestMarshaller Instance { get; }
    private static StopSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopSessionRequest publicRequest);
    internal static StopSessionRequestMarshaller GetInstance();
    public static StopSessionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopSessionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopSessionResponseUnmarshaller _instance;
    public static StopSessionResponseUnmarshaller Instance { get; }
    private static StopSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopSessionResponseUnmarshaller GetInstance();
    public static StopSessionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopTriggerRequestMarshaller : object {
    private static StopTriggerRequestMarshaller _instance;
    public static StopTriggerRequestMarshaller Instance { get; }
    private static StopTriggerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopTriggerRequest publicRequest);
    internal static StopTriggerRequestMarshaller GetInstance();
    public static StopTriggerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopTriggerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopTriggerResponseUnmarshaller _instance;
    public static StopTriggerResponseUnmarshaller Instance { get; }
    private static StopTriggerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopTriggerResponseUnmarshaller GetInstance();
    public static StopTriggerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopWorkflowRunRequestMarshaller : object {
    private static StopWorkflowRunRequestMarshaller _instance;
    public static StopWorkflowRunRequestMarshaller Instance { get; }
    private static StopWorkflowRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopWorkflowRunRequest publicRequest);
    internal static StopWorkflowRunRequestMarshaller GetInstance();
    public static StopWorkflowRunRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StopWorkflowRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopWorkflowRunResponseUnmarshaller _instance;
    public static StopWorkflowRunResponseUnmarshaller Instance { get; }
    private static StopWorkflowRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopWorkflowRunResponseUnmarshaller GetInstance();
    public static StopWorkflowRunResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StorageDescriptorMarshaller : object {
    public static StorageDescriptorMarshaller Instance;
    private static StorageDescriptorMarshaller();
    public sealed virtual void Marshall(StorageDescriptor requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StorageDescriptorUnmarshaller : object {
    private static StorageDescriptorUnmarshaller _instance;
    public static StorageDescriptorUnmarshaller Instance { get; }
    private static StorageDescriptorUnmarshaller();
    private sealed virtual override StorageDescriptor Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.StorageDescriptor,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageDescriptor Unmarshall(JsonUnmarshallerContext context);
    public static StorageDescriptorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StreamingDataPreviewOptionsMarshaller : object {
    public static StreamingDataPreviewOptionsMarshaller Instance;
    private static StreamingDataPreviewOptionsMarshaller();
    public sealed virtual void Marshall(StreamingDataPreviewOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StreamingDataPreviewOptionsUnmarshaller : object {
    private static StreamingDataPreviewOptionsUnmarshaller _instance;
    public static StreamingDataPreviewOptionsUnmarshaller Instance { get; }
    private static StreamingDataPreviewOptionsUnmarshaller();
    private sealed virtual override StreamingDataPreviewOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.StreamingDataPreviewOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingDataPreviewOptions Unmarshall(JsonUnmarshallerContext context);
    public static StreamingDataPreviewOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StringColumnStatisticsDataMarshaller : object {
    public static StringColumnStatisticsDataMarshaller Instance;
    private static StringColumnStatisticsDataMarshaller();
    public sealed virtual void Marshall(StringColumnStatisticsData requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.StringColumnStatisticsDataUnmarshaller : object {
    private static StringColumnStatisticsDataUnmarshaller _instance;
    public static StringColumnStatisticsDataUnmarshaller Instance { get; }
    private static StringColumnStatisticsDataUnmarshaller();
    private sealed virtual override StringColumnStatisticsData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.StringColumnStatisticsData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StringColumnStatisticsData Unmarshall(JsonUnmarshallerContext context);
    public static StringColumnStatisticsDataUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.SupportedDialectMarshaller : object {
    public static SupportedDialectMarshaller Instance;
    private static SupportedDialectMarshaller();
    public sealed virtual void Marshall(SupportedDialect requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableErrorUnmarshaller : object {
    private static TableErrorUnmarshaller _instance;
    public static TableErrorUnmarshaller Instance { get; }
    private static TableErrorUnmarshaller();
    private sealed virtual override TableError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TableError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableError Unmarshall(JsonUnmarshallerContext context);
    public static TableErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableIdentifierMarshaller : object {
    public static TableIdentifierMarshaller Instance;
    private static TableIdentifierMarshaller();
    public sealed virtual void Marshall(TableIdentifier requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableIdentifierUnmarshaller : object {
    private static TableIdentifierUnmarshaller _instance;
    public static TableIdentifierUnmarshaller Instance { get; }
    private static TableIdentifierUnmarshaller();
    private sealed virtual override TableIdentifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TableIdentifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableIdentifier Unmarshall(JsonUnmarshallerContext context);
    public static TableIdentifierUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableInputMarshaller : object {
    public static TableInputMarshaller Instance;
    private static TableInputMarshaller();
    public sealed virtual void Marshall(TableInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableOptimizerConfigurationMarshaller : object {
    public static TableOptimizerConfigurationMarshaller Instance;
    private static TableOptimizerConfigurationMarshaller();
    public sealed virtual void Marshall(TableOptimizerConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableOptimizerConfigurationUnmarshaller : object {
    private static TableOptimizerConfigurationUnmarshaller _instance;
    public static TableOptimizerConfigurationUnmarshaller Instance { get; }
    private static TableOptimizerConfigurationUnmarshaller();
    private sealed virtual override TableOptimizerConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TableOptimizerConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableOptimizerConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static TableOptimizerConfigurationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableOptimizerRunUnmarshaller : object {
    private static TableOptimizerRunUnmarshaller _instance;
    public static TableOptimizerRunUnmarshaller Instance { get; }
    private static TableOptimizerRunUnmarshaller();
    private sealed virtual override TableOptimizerRun Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TableOptimizerRun,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableOptimizerRun Unmarshall(JsonUnmarshallerContext context);
    public static TableOptimizerRunUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableOptimizerUnmarshaller : object {
    private static TableOptimizerUnmarshaller _instance;
    public static TableOptimizerUnmarshaller Instance { get; }
    private static TableOptimizerUnmarshaller();
    private sealed virtual override TableOptimizer Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TableOptimizer,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableOptimizer Unmarshall(JsonUnmarshallerContext context);
    public static TableOptimizerUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableUnmarshaller : object {
    private static TableUnmarshaller _instance;
    public static TableUnmarshaller Instance { get; }
    private static TableUnmarshaller();
    private sealed virtual override Table Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Table,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Table Unmarshall(JsonUnmarshallerContext context);
    public static TableUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableVersionErrorUnmarshaller : object {
    private static TableVersionErrorUnmarshaller _instance;
    public static TableVersionErrorUnmarshaller Instance { get; }
    private static TableVersionErrorUnmarshaller();
    private sealed virtual override TableVersionError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TableVersionError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableVersionError Unmarshall(JsonUnmarshallerContext context);
    public static TableVersionErrorUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TableVersionUnmarshaller : object {
    private static TableVersionUnmarshaller _instance;
    public static TableVersionUnmarshaller Instance { get; }
    private static TableVersionUnmarshaller();
    private sealed virtual override TableVersion Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TableVersion,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableVersion Unmarshall(JsonUnmarshallerContext context);
    public static TableVersionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TaskRunFilterCriteriaMarshaller : object {
    public static TaskRunFilterCriteriaMarshaller Instance;
    private static TaskRunFilterCriteriaMarshaller();
    public sealed virtual void Marshall(TaskRunFilterCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TaskRunPropertiesUnmarshaller : object {
    private static TaskRunPropertiesUnmarshaller _instance;
    public static TaskRunPropertiesUnmarshaller Instance { get; }
    private static TaskRunPropertiesUnmarshaller();
    private sealed virtual override TaskRunProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TaskRunProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TaskRunProperties Unmarshall(JsonUnmarshallerContext context);
    public static TaskRunPropertiesUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TaskRunSortCriteriaMarshaller : object {
    public static TaskRunSortCriteriaMarshaller Instance;
    private static TaskRunSortCriteriaMarshaller();
    public sealed virtual void Marshall(TaskRunSortCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TaskRunUnmarshaller : object {
    private static TaskRunUnmarshaller _instance;
    public static TaskRunUnmarshaller Instance { get; }
    private static TaskRunUnmarshaller();
    private sealed virtual override TaskRun Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TaskRun,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TaskRun Unmarshall(JsonUnmarshallerContext context);
    public static TaskRunUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformConfigParameterMarshaller : object {
    public static TransformConfigParameterMarshaller Instance;
    private static TransformConfigParameterMarshaller();
    public sealed virtual void Marshall(TransformConfigParameter requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformConfigParameterUnmarshaller : object {
    private static TransformConfigParameterUnmarshaller _instance;
    public static TransformConfigParameterUnmarshaller Instance { get; }
    private static TransformConfigParameterUnmarshaller();
    private sealed virtual override TransformConfigParameter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TransformConfigParameter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransformConfigParameter Unmarshall(JsonUnmarshallerContext context);
    public static TransformConfigParameterUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformEncryptionMarshaller : object {
    public static TransformEncryptionMarshaller Instance;
    private static TransformEncryptionMarshaller();
    public sealed virtual void Marshall(TransformEncryption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformEncryptionUnmarshaller : object {
    private static TransformEncryptionUnmarshaller _instance;
    public static TransformEncryptionUnmarshaller Instance { get; }
    private static TransformEncryptionUnmarshaller();
    private sealed virtual override TransformEncryption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TransformEncryption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransformEncryption Unmarshall(JsonUnmarshallerContext context);
    public static TransformEncryptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformFilterCriteriaMarshaller : object {
    public static TransformFilterCriteriaMarshaller Instance;
    private static TransformFilterCriteriaMarshaller();
    public sealed virtual void Marshall(TransformFilterCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformParametersMarshaller : object {
    public static TransformParametersMarshaller Instance;
    private static TransformParametersMarshaller();
    public sealed virtual void Marshall(TransformParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformParametersUnmarshaller : object {
    private static TransformParametersUnmarshaller _instance;
    public static TransformParametersUnmarshaller Instance { get; }
    private static TransformParametersUnmarshaller();
    private sealed virtual override TransformParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TransformParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TransformParameters Unmarshall(JsonUnmarshallerContext context);
    public static TransformParametersUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TransformSortCriteriaMarshaller : object {
    public static TransformSortCriteriaMarshaller Instance;
    private static TransformSortCriteriaMarshaller();
    public sealed virtual void Marshall(TransformSortCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TriggerNodeDetailsUnmarshaller : object {
    private static TriggerNodeDetailsUnmarshaller _instance;
    public static TriggerNodeDetailsUnmarshaller Instance { get; }
    private static TriggerNodeDetailsUnmarshaller();
    private sealed virtual override TriggerNodeDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.TriggerNodeDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TriggerNodeDetails Unmarshall(JsonUnmarshallerContext context);
    public static TriggerNodeDetailsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TriggerUnmarshaller : object {
    private static TriggerUnmarshaller _instance;
    public static TriggerUnmarshaller Instance { get; }
    private static TriggerUnmarshaller();
    private sealed virtual override Trigger Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Trigger,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Trigger Unmarshall(JsonUnmarshallerContext context);
    public static TriggerUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.TriggerUpdateMarshaller : object {
    public static TriggerUpdateMarshaller Instance;
    private static TriggerUpdateMarshaller();
    public sealed virtual void Marshall(TriggerUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UnfilteredPartitionUnmarshaller : object {
    private static UnfilteredPartitionUnmarshaller _instance;
    public static UnfilteredPartitionUnmarshaller Instance { get; }
    private static UnfilteredPartitionUnmarshaller();
    private sealed virtual override UnfilteredPartition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.UnfilteredPartition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnfilteredPartition Unmarshall(JsonUnmarshallerContext context);
    public static UnfilteredPartitionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UnionMarshaller : object {
    public static UnionMarshaller Instance;
    private static UnionMarshaller();
    public sealed virtual void Marshall(Union requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UnionUnmarshaller : object {
    private static UnionUnmarshaller _instance;
    public static UnionUnmarshaller Instance { get; }
    private static UnionUnmarshaller();
    private sealed virtual override Union Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Union,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Union Unmarshall(JsonUnmarshallerContext context);
    public static UnionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateBlueprintRequestMarshaller : object {
    private static UpdateBlueprintRequestMarshaller _instance;
    public static UpdateBlueprintRequestMarshaller Instance { get; }
    private static UpdateBlueprintRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateBlueprintRequest publicRequest);
    internal static UpdateBlueprintRequestMarshaller GetInstance();
    public static UpdateBlueprintRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateBlueprintResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateBlueprintResponseUnmarshaller _instance;
    public static UpdateBlueprintResponseUnmarshaller Instance { get; }
    private static UpdateBlueprintResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateBlueprintResponseUnmarshaller GetInstance();
    public static UpdateBlueprintResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateClassifierRequestMarshaller : object {
    private static UpdateClassifierRequestMarshaller _instance;
    public static UpdateClassifierRequestMarshaller Instance { get; }
    private static UpdateClassifierRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateClassifierRequest publicRequest);
    internal static UpdateClassifierRequestMarshaller GetInstance();
    public static UpdateClassifierRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateClassifierResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateClassifierResponseUnmarshaller _instance;
    public static UpdateClassifierResponseUnmarshaller Instance { get; }
    private static UpdateClassifierResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateClassifierResponseUnmarshaller GetInstance();
    public static UpdateClassifierResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateColumnStatisticsForPartitionRequestMarshaller : object {
    private static UpdateColumnStatisticsForPartitionRequestMarshaller _instance;
    public static UpdateColumnStatisticsForPartitionRequestMarshaller Instance { get; }
    private static UpdateColumnStatisticsForPartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateColumnStatisticsForPartitionRequest publicRequest);
    internal static UpdateColumnStatisticsForPartitionRequestMarshaller GetInstance();
    public static UpdateColumnStatisticsForPartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateColumnStatisticsForPartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateColumnStatisticsForPartitionResponseUnmarshaller _instance;
    public static UpdateColumnStatisticsForPartitionResponseUnmarshaller Instance { get; }
    private static UpdateColumnStatisticsForPartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateColumnStatisticsForPartitionResponseUnmarshaller GetInstance();
    public static UpdateColumnStatisticsForPartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateColumnStatisticsForTableRequestMarshaller : object {
    private static UpdateColumnStatisticsForTableRequestMarshaller _instance;
    public static UpdateColumnStatisticsForTableRequestMarshaller Instance { get; }
    private static UpdateColumnStatisticsForTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateColumnStatisticsForTableRequest publicRequest);
    internal static UpdateColumnStatisticsForTableRequestMarshaller GetInstance();
    public static UpdateColumnStatisticsForTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateColumnStatisticsForTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateColumnStatisticsForTableResponseUnmarshaller _instance;
    public static UpdateColumnStatisticsForTableResponseUnmarshaller Instance { get; }
    private static UpdateColumnStatisticsForTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateColumnStatisticsForTableResponseUnmarshaller GetInstance();
    public static UpdateColumnStatisticsForTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateConnectionRequestMarshaller : object {
    private static UpdateConnectionRequestMarshaller _instance;
    public static UpdateConnectionRequestMarshaller Instance { get; }
    private static UpdateConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConnectionRequest publicRequest);
    internal static UpdateConnectionRequestMarshaller GetInstance();
    public static UpdateConnectionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateConnectionResponseUnmarshaller _instance;
    public static UpdateConnectionResponseUnmarshaller Instance { get; }
    private static UpdateConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConnectionResponseUnmarshaller GetInstance();
    public static UpdateConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateCrawlerRequestMarshaller : object {
    private static UpdateCrawlerRequestMarshaller _instance;
    public static UpdateCrawlerRequestMarshaller Instance { get; }
    private static UpdateCrawlerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateCrawlerRequest publicRequest);
    internal static UpdateCrawlerRequestMarshaller GetInstance();
    public static UpdateCrawlerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateCrawlerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateCrawlerResponseUnmarshaller _instance;
    public static UpdateCrawlerResponseUnmarshaller Instance { get; }
    private static UpdateCrawlerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateCrawlerResponseUnmarshaller GetInstance();
    public static UpdateCrawlerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateCrawlerScheduleRequestMarshaller : object {
    private static UpdateCrawlerScheduleRequestMarshaller _instance;
    public static UpdateCrawlerScheduleRequestMarshaller Instance { get; }
    private static UpdateCrawlerScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateCrawlerScheduleRequest publicRequest);
    internal static UpdateCrawlerScheduleRequestMarshaller GetInstance();
    public static UpdateCrawlerScheduleRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateCrawlerScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateCrawlerScheduleResponseUnmarshaller _instance;
    public static UpdateCrawlerScheduleResponseUnmarshaller Instance { get; }
    private static UpdateCrawlerScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateCrawlerScheduleResponseUnmarshaller GetInstance();
    public static UpdateCrawlerScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateCsvClassifierRequestMarshaller : object {
    public static UpdateCsvClassifierRequestMarshaller Instance;
    private static UpdateCsvClassifierRequestMarshaller();
    public sealed virtual void Marshall(UpdateCsvClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateDatabaseRequestMarshaller : object {
    private static UpdateDatabaseRequestMarshaller _instance;
    public static UpdateDatabaseRequestMarshaller Instance { get; }
    private static UpdateDatabaseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDatabaseRequest publicRequest);
    internal static UpdateDatabaseRequestMarshaller GetInstance();
    public static UpdateDatabaseRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateDatabaseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDatabaseResponseUnmarshaller _instance;
    public static UpdateDatabaseResponseUnmarshaller Instance { get; }
    private static UpdateDatabaseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDatabaseResponseUnmarshaller GetInstance();
    public static UpdateDatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateDataQualityRulesetRequestMarshaller : object {
    private static UpdateDataQualityRulesetRequestMarshaller _instance;
    public static UpdateDataQualityRulesetRequestMarshaller Instance { get; }
    private static UpdateDataQualityRulesetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDataQualityRulesetRequest publicRequest);
    internal static UpdateDataQualityRulesetRequestMarshaller GetInstance();
    public static UpdateDataQualityRulesetRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateDataQualityRulesetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDataQualityRulesetResponseUnmarshaller _instance;
    public static UpdateDataQualityRulesetResponseUnmarshaller Instance { get; }
    private static UpdateDataQualityRulesetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDataQualityRulesetResponseUnmarshaller GetInstance();
    public static UpdateDataQualityRulesetResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateDevEndpointRequestMarshaller : object {
    private static UpdateDevEndpointRequestMarshaller _instance;
    public static UpdateDevEndpointRequestMarshaller Instance { get; }
    private static UpdateDevEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDevEndpointRequest publicRequest);
    internal static UpdateDevEndpointRequestMarshaller GetInstance();
    public static UpdateDevEndpointRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateDevEndpointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDevEndpointResponseUnmarshaller _instance;
    public static UpdateDevEndpointResponseUnmarshaller Instance { get; }
    private static UpdateDevEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDevEndpointResponseUnmarshaller GetInstance();
    public static UpdateDevEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateGrokClassifierRequestMarshaller : object {
    public static UpdateGrokClassifierRequestMarshaller Instance;
    private static UpdateGrokClassifierRequestMarshaller();
    public sealed virtual void Marshall(UpdateGrokClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateJobFromSourceControlRequestMarshaller : object {
    private static UpdateJobFromSourceControlRequestMarshaller _instance;
    public static UpdateJobFromSourceControlRequestMarshaller Instance { get; }
    private static UpdateJobFromSourceControlRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateJobFromSourceControlRequest publicRequest);
    internal static UpdateJobFromSourceControlRequestMarshaller GetInstance();
    public static UpdateJobFromSourceControlRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateJobFromSourceControlResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateJobFromSourceControlResponseUnmarshaller _instance;
    public static UpdateJobFromSourceControlResponseUnmarshaller Instance { get; }
    private static UpdateJobFromSourceControlResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateJobFromSourceControlResponseUnmarshaller GetInstance();
    public static UpdateJobFromSourceControlResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateJobRequestMarshaller : object {
    private static UpdateJobRequestMarshaller _instance;
    public static UpdateJobRequestMarshaller Instance { get; }
    private static UpdateJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateJobRequest publicRequest);
    internal static UpdateJobRequestMarshaller GetInstance();
    public static UpdateJobRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateJobResponseUnmarshaller _instance;
    public static UpdateJobResponseUnmarshaller Instance { get; }
    private static UpdateJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateJobResponseUnmarshaller GetInstance();
    public static UpdateJobResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateJsonClassifierRequestMarshaller : object {
    public static UpdateJsonClassifierRequestMarshaller Instance;
    private static UpdateJsonClassifierRequestMarshaller();
    public sealed virtual void Marshall(UpdateJsonClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateMLTransformRequestMarshaller : object {
    private static UpdateMLTransformRequestMarshaller _instance;
    public static UpdateMLTransformRequestMarshaller Instance { get; }
    private static UpdateMLTransformRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateMLTransformRequest publicRequest);
    internal static UpdateMLTransformRequestMarshaller GetInstance();
    public static UpdateMLTransformRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateMLTransformResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateMLTransformResponseUnmarshaller _instance;
    public static UpdateMLTransformResponseUnmarshaller Instance { get; }
    private static UpdateMLTransformResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateMLTransformResponseUnmarshaller GetInstance();
    public static UpdateMLTransformResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdatePartitionRequestMarshaller : object {
    private static UpdatePartitionRequestMarshaller _instance;
    public static UpdatePartitionRequestMarshaller Instance { get; }
    private static UpdatePartitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdatePartitionRequest publicRequest);
    internal static UpdatePartitionRequestMarshaller GetInstance();
    public static UpdatePartitionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdatePartitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdatePartitionResponseUnmarshaller _instance;
    public static UpdatePartitionResponseUnmarshaller Instance { get; }
    private static UpdatePartitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdatePartitionResponseUnmarshaller GetInstance();
    public static UpdatePartitionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateRegistryRequestMarshaller : object {
    private static UpdateRegistryRequestMarshaller _instance;
    public static UpdateRegistryRequestMarshaller Instance { get; }
    private static UpdateRegistryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateRegistryRequest publicRequest);
    internal static UpdateRegistryRequestMarshaller GetInstance();
    public static UpdateRegistryRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateRegistryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateRegistryResponseUnmarshaller _instance;
    public static UpdateRegistryResponseUnmarshaller Instance { get; }
    private static UpdateRegistryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateRegistryResponseUnmarshaller GetInstance();
    public static UpdateRegistryResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateSchemaRequestMarshaller : object {
    private static UpdateSchemaRequestMarshaller _instance;
    public static UpdateSchemaRequestMarshaller Instance { get; }
    private static UpdateSchemaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSchemaRequest publicRequest);
    internal static UpdateSchemaRequestMarshaller GetInstance();
    public static UpdateSchemaRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateSchemaResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSchemaResponseUnmarshaller _instance;
    public static UpdateSchemaResponseUnmarshaller Instance { get; }
    private static UpdateSchemaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSchemaResponseUnmarshaller GetInstance();
    public static UpdateSchemaResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateSourceControlFromJobRequestMarshaller : object {
    private static UpdateSourceControlFromJobRequestMarshaller _instance;
    public static UpdateSourceControlFromJobRequestMarshaller Instance { get; }
    private static UpdateSourceControlFromJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSourceControlFromJobRequest publicRequest);
    internal static UpdateSourceControlFromJobRequestMarshaller GetInstance();
    public static UpdateSourceControlFromJobRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateSourceControlFromJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSourceControlFromJobResponseUnmarshaller _instance;
    public static UpdateSourceControlFromJobResponseUnmarshaller Instance { get; }
    private static UpdateSourceControlFromJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSourceControlFromJobResponseUnmarshaller GetInstance();
    public static UpdateSourceControlFromJobResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateTableOptimizerRequestMarshaller : object {
    private static UpdateTableOptimizerRequestMarshaller _instance;
    public static UpdateTableOptimizerRequestMarshaller Instance { get; }
    private static UpdateTableOptimizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTableOptimizerRequest publicRequest);
    internal static UpdateTableOptimizerRequestMarshaller GetInstance();
    public static UpdateTableOptimizerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateTableOptimizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTableOptimizerResponseUnmarshaller _instance;
    public static UpdateTableOptimizerResponseUnmarshaller Instance { get; }
    private static UpdateTableOptimizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTableOptimizerResponseUnmarshaller GetInstance();
    public static UpdateTableOptimizerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateTableRequestMarshaller : object {
    private static UpdateTableRequestMarshaller _instance;
    public static UpdateTableRequestMarshaller Instance { get; }
    private static UpdateTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTableRequest publicRequest);
    internal static UpdateTableRequestMarshaller GetInstance();
    public static UpdateTableRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTableResponseUnmarshaller _instance;
    public static UpdateTableResponseUnmarshaller Instance { get; }
    private static UpdateTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTableResponseUnmarshaller GetInstance();
    public static UpdateTableResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateTriggerRequestMarshaller : object {
    private static UpdateTriggerRequestMarshaller _instance;
    public static UpdateTriggerRequestMarshaller Instance { get; }
    private static UpdateTriggerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTriggerRequest publicRequest);
    internal static UpdateTriggerRequestMarshaller GetInstance();
    public static UpdateTriggerRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateTriggerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTriggerResponseUnmarshaller _instance;
    public static UpdateTriggerResponseUnmarshaller Instance { get; }
    private static UpdateTriggerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTriggerResponseUnmarshaller GetInstance();
    public static UpdateTriggerResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateUsageProfileRequestMarshaller : object {
    private static UpdateUsageProfileRequestMarshaller _instance;
    public static UpdateUsageProfileRequestMarshaller Instance { get; }
    private static UpdateUsageProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateUsageProfileRequest publicRequest);
    internal static UpdateUsageProfileRequestMarshaller GetInstance();
    public static UpdateUsageProfileRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateUsageProfileResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateUsageProfileResponseUnmarshaller _instance;
    public static UpdateUsageProfileResponseUnmarshaller Instance { get; }
    private static UpdateUsageProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateUsageProfileResponseUnmarshaller GetInstance();
    public static UpdateUsageProfileResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateUserDefinedFunctionRequestMarshaller : object {
    private static UpdateUserDefinedFunctionRequestMarshaller _instance;
    public static UpdateUserDefinedFunctionRequestMarshaller Instance { get; }
    private static UpdateUserDefinedFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateUserDefinedFunctionRequest publicRequest);
    internal static UpdateUserDefinedFunctionRequestMarshaller GetInstance();
    public static UpdateUserDefinedFunctionRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateUserDefinedFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateUserDefinedFunctionResponseUnmarshaller _instance;
    public static UpdateUserDefinedFunctionResponseUnmarshaller Instance { get; }
    private static UpdateUserDefinedFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateUserDefinedFunctionResponseUnmarshaller GetInstance();
    public static UpdateUserDefinedFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateWorkflowRequestMarshaller : object {
    private static UpdateWorkflowRequestMarshaller _instance;
    public static UpdateWorkflowRequestMarshaller Instance { get; }
    private static UpdateWorkflowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateWorkflowRequest publicRequest);
    internal static UpdateWorkflowRequestMarshaller GetInstance();
    public static UpdateWorkflowRequestMarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateWorkflowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateWorkflowResponseUnmarshaller _instance;
    public static UpdateWorkflowResponseUnmarshaller Instance { get; }
    private static UpdateWorkflowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateWorkflowResponseUnmarshaller GetInstance();
    public static UpdateWorkflowResponseUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpdateXMLClassifierRequestMarshaller : object {
    public static UpdateXMLClassifierRequestMarshaller Instance;
    private static UpdateXMLClassifierRequestMarshaller();
    public sealed virtual void Marshall(UpdateXMLClassifierRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpsertRedshiftTargetOptionsMarshaller : object {
    public static UpsertRedshiftTargetOptionsMarshaller Instance;
    private static UpsertRedshiftTargetOptionsMarshaller();
    public sealed virtual void Marshall(UpsertRedshiftTargetOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UpsertRedshiftTargetOptionsUnmarshaller : object {
    private static UpsertRedshiftTargetOptionsUnmarshaller _instance;
    public static UpsertRedshiftTargetOptionsUnmarshaller Instance { get; }
    private static UpsertRedshiftTargetOptionsUnmarshaller();
    private sealed virtual override UpsertRedshiftTargetOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.UpsertRedshiftTargetOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UpsertRedshiftTargetOptions Unmarshall(JsonUnmarshallerContext context);
    public static UpsertRedshiftTargetOptionsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UsageProfileDefinitionUnmarshaller : object {
    private static UsageProfileDefinitionUnmarshaller _instance;
    public static UsageProfileDefinitionUnmarshaller Instance { get; }
    private static UsageProfileDefinitionUnmarshaller();
    private sealed virtual override UsageProfileDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.UsageProfileDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UsageProfileDefinition Unmarshall(JsonUnmarshallerContext context);
    public static UsageProfileDefinitionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UserDefinedFunctionInputMarshaller : object {
    public static UserDefinedFunctionInputMarshaller Instance;
    private static UserDefinedFunctionInputMarshaller();
    public sealed virtual void Marshall(UserDefinedFunctionInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.UserDefinedFunctionUnmarshaller : object {
    private static UserDefinedFunctionUnmarshaller _instance;
    public static UserDefinedFunctionUnmarshaller Instance { get; }
    private static UserDefinedFunctionUnmarshaller();
    private sealed virtual override UserDefinedFunction Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.UserDefinedFunction,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserDefinedFunction Unmarshall(JsonUnmarshallerContext context);
    public static UserDefinedFunctionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller : object {
    private static ValidationExceptionUnmarshaller _instance;
    public static ValidationExceptionUnmarshaller Instance { get; }
    private static ValidationExceptionUnmarshaller();
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ValidationExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.VersionMismatchExceptionUnmarshaller : object {
    private static VersionMismatchExceptionUnmarshaller _instance;
    public static VersionMismatchExceptionUnmarshaller Instance { get; }
    private static VersionMismatchExceptionUnmarshaller();
    public sealed virtual VersionMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual VersionMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static VersionMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ViewDefinitionInputMarshaller : object {
    public static ViewDefinitionInputMarshaller Instance;
    private static ViewDefinitionInputMarshaller();
    public sealed virtual void Marshall(ViewDefinitionInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ViewDefinitionUnmarshaller : object {
    private static ViewDefinitionUnmarshaller _instance;
    public static ViewDefinitionUnmarshaller Instance { get; }
    private static ViewDefinitionUnmarshaller();
    private sealed virtual override ViewDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ViewDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ViewDefinition Unmarshall(JsonUnmarshallerContext context);
    public static ViewDefinitionUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ViewRepresentationInputMarshaller : object {
    public static ViewRepresentationInputMarshaller Instance;
    private static ViewRepresentationInputMarshaller();
    public sealed virtual void Marshall(ViewRepresentationInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.ViewRepresentationUnmarshaller : object {
    private static ViewRepresentationUnmarshaller _instance;
    public static ViewRepresentationUnmarshaller Instance { get; }
    private static ViewRepresentationUnmarshaller();
    private sealed virtual override ViewRepresentation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.ViewRepresentation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ViewRepresentation Unmarshall(JsonUnmarshallerContext context);
    public static ViewRepresentationUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.WorkflowGraphUnmarshaller : object {
    private static WorkflowGraphUnmarshaller _instance;
    public static WorkflowGraphUnmarshaller Instance { get; }
    private static WorkflowGraphUnmarshaller();
    private sealed virtual override WorkflowGraph Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.WorkflowGraph,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WorkflowGraph Unmarshall(JsonUnmarshallerContext context);
    public static WorkflowGraphUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.WorkflowRunStatisticsUnmarshaller : object {
    private static WorkflowRunStatisticsUnmarshaller _instance;
    public static WorkflowRunStatisticsUnmarshaller Instance { get; }
    private static WorkflowRunStatisticsUnmarshaller();
    private sealed virtual override WorkflowRunStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.WorkflowRunStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WorkflowRunStatistics Unmarshall(JsonUnmarshallerContext context);
    public static WorkflowRunStatisticsUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.WorkflowRunUnmarshaller : object {
    private static WorkflowRunUnmarshaller _instance;
    public static WorkflowRunUnmarshaller Instance { get; }
    private static WorkflowRunUnmarshaller();
    private sealed virtual override WorkflowRun Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.WorkflowRun,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WorkflowRun Unmarshall(JsonUnmarshallerContext context);
    public static WorkflowRunUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.WorkflowUnmarshaller : object {
    private static WorkflowUnmarshaller _instance;
    public static WorkflowUnmarshaller Instance { get; }
    private static WorkflowUnmarshaller();
    private sealed virtual override Workflow Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.Workflow,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Workflow Unmarshall(JsonUnmarshallerContext context);
    public static WorkflowUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.Internal.MarshallTransformations.XMLClassifierUnmarshaller : object {
    private static XMLClassifierUnmarshaller _instance;
    public static XMLClassifierUnmarshaller Instance { get; }
    private static XMLClassifierUnmarshaller();
    private sealed virtual override XMLClassifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glue.Model.XMLClassifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual XMLClassifier Unmarshall(JsonUnmarshallerContext context);
    public static XMLClassifierUnmarshaller get_Instance();
}
public class Amazon.Glue.Model.InternalServiceException : AmazonGlueException {
    public InternalServiceException(string message);
    public InternalServiceException(string message, Exception innerException);
    public InternalServiceException(Exception innerException);
    public InternalServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.InvalidInputException : AmazonGlueException {
    private Nullable`1<bool> _fromFederationSource;
    public Nullable`1<bool> FromFederationSource { get; public set; }
    public InvalidInputException(string message);
    public InvalidInputException(string message, Exception innerException);
    public InvalidInputException(Exception innerException);
    public InvalidInputException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInputException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Nullable`1<bool> get_FromFederationSource();
    public void set_FromFederationSource(Nullable`1<bool> value);
    internal bool IsSetFromFederationSource();
}
public class Amazon.Glue.Model.InvalidStateException : AmazonGlueException {
    public InvalidStateException(string message);
    public InvalidStateException(string message, Exception innerException);
    public InvalidStateException(Exception innerException);
    public InvalidStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.Glue.Model.ISearchTablesPaginator {
    public IPaginatedEnumerable`1<SearchTablesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<SearchTablesResponse> get_Responses();
}
public class Amazon.Glue.Model.JDBCConnectorOptions : object {
    private Dictionary`2<string, string> _dataTypeMapping;
    private string _filterPredicate;
    private List`1<string> _jobBookmarkKeys;
    private string _jobBookmarkKeysSortOrder;
    private Nullable`1<long> _lowerBound;
    private Nullable`1<long> _numPartitions;
    private string _partitionColumn;
    private Nullable`1<long> _upperBound;
    public Dictionary`2<string, string> DataTypeMapping { get; public set; }
    public string FilterPredicate { get; public set; }
    public List`1<string> JobBookmarkKeys { get; public set; }
    public string JobBookmarkKeysSortOrder { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> LowerBound { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumPartitions { get; public set; }
    public string PartitionColumn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> UpperBound { get; public set; }
    public Dictionary`2<string, string> get_DataTypeMapping();
    public void set_DataTypeMapping(Dictionary`2<string, string> value);
    internal bool IsSetDataTypeMapping();
    public string get_FilterPredicate();
    public void set_FilterPredicate(string value);
    internal bool IsSetFilterPredicate();
    public List`1<string> get_JobBookmarkKeys();
    public void set_JobBookmarkKeys(List`1<string> value);
    internal bool IsSetJobBookmarkKeys();
    public string get_JobBookmarkKeysSortOrder();
    public void set_JobBookmarkKeysSortOrder(string value);
    internal bool IsSetJobBookmarkKeysSortOrder();
    public Nullable`1<long> get_LowerBound();
    public void set_LowerBound(Nullable`1<long> value);
    internal bool IsSetLowerBound();
    public Nullable`1<long> get_NumPartitions();
    public void set_NumPartitions(Nullable`1<long> value);
    internal bool IsSetNumPartitions();
    public string get_PartitionColumn();
    public void set_PartitionColumn(string value);
    internal bool IsSetPartitionColumn();
    public Nullable`1<long> get_UpperBound();
    public void set_UpperBound(Nullable`1<long> value);
    internal bool IsSetUpperBound();
}
public class Amazon.Glue.Model.JDBCConnectorSource : object {
    private JDBCConnectorOptions _additionalOptions;
    private string _connectionName;
    private string _connectionTable;
    private string _connectionType;
    private string _connectorName;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private string _query;
    public JDBCConnectorOptions AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    public string ConnectionTable { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public string ConnectorName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public string Query { get; public set; }
    public JDBCConnectorOptions get_AdditionalOptions();
    public void set_AdditionalOptions(JDBCConnectorOptions value);
    internal bool IsSetAdditionalOptions();
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_ConnectionTable();
    public void set_ConnectionTable(string value);
    internal bool IsSetConnectionTable();
    public string get_ConnectionType();
    public void set_ConnectionType(string value);
    internal bool IsSetConnectionType();
    public string get_ConnectorName();
    public void set_ConnectorName(string value);
    internal bool IsSetConnectorName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public string get_Query();
    public void set_Query(string value);
    internal bool IsSetQuery();
}
public class Amazon.Glue.Model.JDBCConnectorTarget : object {
    private Dictionary`2<string, string> _additionalOptions;
    private string _connectionName;
    private string _connectionTable;
    private string _connectionType;
    private string _connectorName;
    private List`1<string> _inputs;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionTable { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public string ConnectorName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_ConnectionTable();
    public void set_ConnectionTable(string value);
    internal bool IsSetConnectionTable();
    public string get_ConnectionType();
    public void set_ConnectionType(string value);
    internal bool IsSetConnectionType();
    public string get_ConnectorName();
    public void set_ConnectorName(string value);
    internal bool IsSetConnectorName();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
}
public class Amazon.Glue.Model.JdbcTarget : object {
    private string _connectionName;
    private List`1<string> _enableAdditionalMetadata;
    private List`1<string> _exclusions;
    private string _path;
    public string ConnectionName { get; public set; }
    public List`1<string> EnableAdditionalMetadata { get; public set; }
    public List`1<string> Exclusions { get; public set; }
    public string Path { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public List`1<string> get_EnableAdditionalMetadata();
    public void set_EnableAdditionalMetadata(List`1<string> value);
    internal bool IsSetEnableAdditionalMetadata();
    public List`1<string> get_Exclusions();
    public void set_Exclusions(List`1<string> value);
    internal bool IsSetExclusions();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
}
public class Amazon.Glue.Model.Job : object {
    private Nullable`1<int> _allocatedCapacity;
    private Dictionary`2<string, CodeGenConfigurationNode> _codeGenConfigurationNodes;
    private JobCommand _command;
    private ConnectionsList _connections;
    private Nullable`1<DateTime> _createdOn;
    private Dictionary`2<string, string> _defaultArguments;
    private string _description;
    private ExecutionClass _executionClass;
    private ExecutionProperty _executionProperty;
    private string _glueVersion;
    private JobMode _jobMode;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _logUri;
    private string _maintenanceWindow;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _maxRetries;
    private string _name;
    private Dictionary`2<string, string> _nonOverridableArguments;
    private NotificationProperty _notificationProperty;
    private Nullable`1<int> _numberOfWorkers;
    private string _profileName;
    private string _role;
    private string _securityConfiguration;
    private SourceControlDetails _sourceControlDetails;
    private Nullable`1<int> _timeout;
    private WorkerType _workerType;
    [ObsoleteAttribute("This property is deprecated, use MaxCapacity instead.")]
public Nullable`1<int> AllocatedCapacity { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, CodeGenConfigurationNode> CodeGenConfigurationNodes { get; public set; }
    public JobCommand Command { get; public set; }
    public ConnectionsList Connections { get; public set; }
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    public Dictionary`2<string, string> DefaultArguments { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public ExecutionClass ExecutionClass { get; public set; }
    public ExecutionProperty ExecutionProperty { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public JobMode JobMode { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public string LogUri { get; public set; }
    public string MaintenanceWindow { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> NonOverridableArguments { get; public set; }
    public NotificationProperty NotificationProperty { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string ProfileName { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public SourceControlDetails SourceControlDetails { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Nullable`1<int> get_AllocatedCapacity();
    public void set_AllocatedCapacity(Nullable`1<int> value);
    internal bool IsSetAllocatedCapacity();
    public Dictionary`2<string, CodeGenConfigurationNode> get_CodeGenConfigurationNodes();
    public void set_CodeGenConfigurationNodes(Dictionary`2<string, CodeGenConfigurationNode> value);
    internal bool IsSetCodeGenConfigurationNodes();
    public JobCommand get_Command();
    public void set_Command(JobCommand value);
    internal bool IsSetCommand();
    public ConnectionsList get_Connections();
    public void set_Connections(ConnectionsList value);
    internal bool IsSetConnections();
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public Dictionary`2<string, string> get_DefaultArguments();
    public void set_DefaultArguments(Dictionary`2<string, string> value);
    internal bool IsSetDefaultArguments();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ExecutionClass get_ExecutionClass();
    public void set_ExecutionClass(ExecutionClass value);
    internal bool IsSetExecutionClass();
    public ExecutionProperty get_ExecutionProperty();
    public void set_ExecutionProperty(ExecutionProperty value);
    internal bool IsSetExecutionProperty();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public JobMode get_JobMode();
    public void set_JobMode(JobMode value);
    internal bool IsSetJobMode();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_LogUri();
    public void set_LogUri(string value);
    internal bool IsSetLogUri();
    public string get_MaintenanceWindow();
    public void set_MaintenanceWindow(string value);
    internal bool IsSetMaintenanceWindow();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MaxRetries();
    public void set_MaxRetries(Nullable`1<int> value);
    internal bool IsSetMaxRetries();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_NonOverridableArguments();
    public void set_NonOverridableArguments(Dictionary`2<string, string> value);
    internal bool IsSetNonOverridableArguments();
    public NotificationProperty get_NotificationProperty();
    public void set_NotificationProperty(NotificationProperty value);
    internal bool IsSetNotificationProperty();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_ProfileName();
    public void set_ProfileName(string value);
    internal bool IsSetProfileName();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public SourceControlDetails get_SourceControlDetails();
    public void set_SourceControlDetails(SourceControlDetails value);
    internal bool IsSetSourceControlDetails();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.JobBookmarkEntry : object {
    private Nullable`1<int> _attempt;
    private string _jobBookmark;
    private string _jobName;
    private string _previousRunId;
    private Nullable`1<int> _run;
    private string _runId;
    private Nullable`1<int> _version;
    public Nullable`1<int> Attempt { get; public set; }
    public string JobBookmark { get; public set; }
    public string JobName { get; public set; }
    public string PreviousRunId { get; public set; }
    public Nullable`1<int> Run { get; public set; }
    public string RunId { get; public set; }
    public Nullable`1<int> Version { get; public set; }
    public Nullable`1<int> get_Attempt();
    public void set_Attempt(Nullable`1<int> value);
    internal bool IsSetAttempt();
    public string get_JobBookmark();
    public void set_JobBookmark(string value);
    internal bool IsSetJobBookmark();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_PreviousRunId();
    public void set_PreviousRunId(string value);
    internal bool IsSetPreviousRunId();
    public Nullable`1<int> get_Run();
    public void set_Run(Nullable`1<int> value);
    internal bool IsSetRun();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
    public Nullable`1<int> get_Version();
    public void set_Version(Nullable`1<int> value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.Model.JobBookmarksEncryption : object {
    private JobBookmarksEncryptionMode _jobBookmarksEncryptionMode;
    private string _kmsKeyArn;
    public JobBookmarksEncryptionMode JobBookmarksEncryptionMode { get; public set; }
    public string KmsKeyArn { get; public set; }
    public JobBookmarksEncryptionMode get_JobBookmarksEncryptionMode();
    public void set_JobBookmarksEncryptionMode(JobBookmarksEncryptionMode value);
    internal bool IsSetJobBookmarksEncryptionMode();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
}
public class Amazon.Glue.Model.JobCommand : object {
    private string _name;
    private string _pythonVersion;
    private string _runtime;
    private string _scriptLocation;
    public string Name { get; public set; }
    public string PythonVersion { get; public set; }
    [AWSPropertyAttribute]
public string Runtime { get; public set; }
    [AWSPropertyAttribute]
public string ScriptLocation { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PythonVersion();
    public void set_PythonVersion(string value);
    internal bool IsSetPythonVersion();
    public string get_Runtime();
    public void set_Runtime(string value);
    internal bool IsSetRuntime();
    public string get_ScriptLocation();
    public void set_ScriptLocation(string value);
    internal bool IsSetScriptLocation();
}
public class Amazon.Glue.Model.JobNodeDetails : object {
    private List`1<JobRun> _jobRuns;
    public List`1<JobRun> JobRuns { get; public set; }
    public List`1<JobRun> get_JobRuns();
    public void set_JobRuns(List`1<JobRun> value);
    internal bool IsSetJobRuns();
}
public class Amazon.Glue.Model.JobRun : object {
    private Nullable`1<int> _allocatedCapacity;
    private Dictionary`2<string, string> _arguments;
    private Nullable`1<int> _attempt;
    private Nullable`1<DateTime> _completedOn;
    private Nullable`1<double> _dpuSeconds;
    private string _errorMessage;
    private ExecutionClass _executionClass;
    private Nullable`1<int> _executionTime;
    private string _glueVersion;
    private string _id;
    private JobMode _jobMode;
    private string _jobName;
    private JobRunState _jobRunState;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _logGroupName;
    private string _maintenanceWindow;
    private Nullable`1<double> _maxCapacity;
    private NotificationProperty _notificationProperty;
    private Nullable`1<int> _numberOfWorkers;
    private List`1<Predecessor> _predecessorRuns;
    private string _previousRunId;
    private string _profileName;
    private string _securityConfiguration;
    private Nullable`1<DateTime> _startedOn;
    private Nullable`1<int> _timeout;
    private string _triggerName;
    private WorkerType _workerType;
    [ObsoleteAttribute("This property is deprecated, use MaxCapacity instead.")]
public Nullable`1<int> AllocatedCapacity { get; public set; }
    public Dictionary`2<string, string> Arguments { get; public set; }
    public Nullable`1<int> Attempt { get; public set; }
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public Nullable`1<double> DPUSeconds { get; public set; }
    public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public ExecutionClass ExecutionClass { get; public set; }
    public Nullable`1<int> ExecutionTime { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public JobMode JobMode { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public JobRunState JobRunState { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public string LogGroupName { get; public set; }
    public string MaintenanceWindow { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public NotificationProperty NotificationProperty { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public List`1<Predecessor> PredecessorRuns { get; public set; }
    [AWSPropertyAttribute]
public string PreviousRunId { get; public set; }
    [AWSPropertyAttribute]
public string ProfileName { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    [AWSPropertyAttribute]
public string TriggerName { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Nullable`1<int> get_AllocatedCapacity();
    public void set_AllocatedCapacity(Nullable`1<int> value);
    internal bool IsSetAllocatedCapacity();
    public Dictionary`2<string, string> get_Arguments();
    public void set_Arguments(Dictionary`2<string, string> value);
    internal bool IsSetArguments();
    public Nullable`1<int> get_Attempt();
    public void set_Attempt(Nullable`1<int> value);
    internal bool IsSetAttempt();
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public Nullable`1<double> get_DPUSeconds();
    public void set_DPUSeconds(Nullable`1<double> value);
    internal bool IsSetDPUSeconds();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public ExecutionClass get_ExecutionClass();
    public void set_ExecutionClass(ExecutionClass value);
    internal bool IsSetExecutionClass();
    public Nullable`1<int> get_ExecutionTime();
    public void set_ExecutionTime(Nullable`1<int> value);
    internal bool IsSetExecutionTime();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public JobMode get_JobMode();
    public void set_JobMode(JobMode value);
    internal bool IsSetJobMode();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public JobRunState get_JobRunState();
    public void set_JobRunState(JobRunState value);
    internal bool IsSetJobRunState();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_MaintenanceWindow();
    public void set_MaintenanceWindow(string value);
    internal bool IsSetMaintenanceWindow();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public NotificationProperty get_NotificationProperty();
    public void set_NotificationProperty(NotificationProperty value);
    internal bool IsSetNotificationProperty();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public List`1<Predecessor> get_PredecessorRuns();
    public void set_PredecessorRuns(List`1<Predecessor> value);
    internal bool IsSetPredecessorRuns();
    public string get_PreviousRunId();
    public void set_PreviousRunId(string value);
    internal bool IsSetPreviousRunId();
    public string get_ProfileName();
    public void set_ProfileName(string value);
    internal bool IsSetProfileName();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public string get_TriggerName();
    public void set_TriggerName(string value);
    internal bool IsSetTriggerName();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.JobUpdate : object {
    private Nullable`1<int> _allocatedCapacity;
    private Dictionary`2<string, CodeGenConfigurationNode> _codeGenConfigurationNodes;
    private JobCommand _command;
    private ConnectionsList _connections;
    private Dictionary`2<string, string> _defaultArguments;
    private string _description;
    private ExecutionClass _executionClass;
    private ExecutionProperty _executionProperty;
    private string _glueVersion;
    private JobMode _jobMode;
    private string _logUri;
    private string _maintenanceWindow;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _maxRetries;
    private Dictionary`2<string, string> _nonOverridableArguments;
    private NotificationProperty _notificationProperty;
    private Nullable`1<int> _numberOfWorkers;
    private string _role;
    private string _securityConfiguration;
    private SourceControlDetails _sourceControlDetails;
    private Nullable`1<int> _timeout;
    private WorkerType _workerType;
    [ObsoleteAttribute("This property is deprecated, use MaxCapacity instead.")]
public Nullable`1<int> AllocatedCapacity { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, CodeGenConfigurationNode> CodeGenConfigurationNodes { get; public set; }
    public JobCommand Command { get; public set; }
    public ConnectionsList Connections { get; public set; }
    public Dictionary`2<string, string> DefaultArguments { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public ExecutionClass ExecutionClass { get; public set; }
    public ExecutionProperty ExecutionProperty { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public JobMode JobMode { get; public set; }
    public string LogUri { get; public set; }
    public string MaintenanceWindow { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    public Dictionary`2<string, string> NonOverridableArguments { get; public set; }
    public NotificationProperty NotificationProperty { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public SourceControlDetails SourceControlDetails { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Nullable`1<int> get_AllocatedCapacity();
    public void set_AllocatedCapacity(Nullable`1<int> value);
    internal bool IsSetAllocatedCapacity();
    public Dictionary`2<string, CodeGenConfigurationNode> get_CodeGenConfigurationNodes();
    public void set_CodeGenConfigurationNodes(Dictionary`2<string, CodeGenConfigurationNode> value);
    internal bool IsSetCodeGenConfigurationNodes();
    public JobCommand get_Command();
    public void set_Command(JobCommand value);
    internal bool IsSetCommand();
    public ConnectionsList get_Connections();
    public void set_Connections(ConnectionsList value);
    internal bool IsSetConnections();
    public Dictionary`2<string, string> get_DefaultArguments();
    public void set_DefaultArguments(Dictionary`2<string, string> value);
    internal bool IsSetDefaultArguments();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ExecutionClass get_ExecutionClass();
    public void set_ExecutionClass(ExecutionClass value);
    internal bool IsSetExecutionClass();
    public ExecutionProperty get_ExecutionProperty();
    public void set_ExecutionProperty(ExecutionProperty value);
    internal bool IsSetExecutionProperty();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public JobMode get_JobMode();
    public void set_JobMode(JobMode value);
    internal bool IsSetJobMode();
    public string get_LogUri();
    public void set_LogUri(string value);
    internal bool IsSetLogUri();
    public string get_MaintenanceWindow();
    public void set_MaintenanceWindow(string value);
    internal bool IsSetMaintenanceWindow();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MaxRetries();
    public void set_MaxRetries(Nullable`1<int> value);
    internal bool IsSetMaxRetries();
    public Dictionary`2<string, string> get_NonOverridableArguments();
    public void set_NonOverridableArguments(Dictionary`2<string, string> value);
    internal bool IsSetNonOverridableArguments();
    public NotificationProperty get_NotificationProperty();
    public void set_NotificationProperty(NotificationProperty value);
    internal bool IsSetNotificationProperty();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public SourceControlDetails get_SourceControlDetails();
    public void set_SourceControlDetails(SourceControlDetails value);
    internal bool IsSetSourceControlDetails();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.Join : object {
    private List`1<JoinColumn> _columns;
    private List`1<string> _inputs;
    private JoinType _joinType;
    private string _name;
    [AWSPropertyAttribute]
public List`1<JoinColumn> Columns { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public JoinType JoinType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<JoinColumn> get_Columns();
    public void set_Columns(List`1<JoinColumn> value);
    internal bool IsSetColumns();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public JoinType get_JoinType();
    public void set_JoinType(JoinType value);
    internal bool IsSetJoinType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.JoinColumn : object {
    private string _from;
    private List`1<List`1<string>> _keys;
    [AWSPropertyAttribute]
public string From { get; public set; }
    [AWSPropertyAttribute]
public List`1<List`1<string>> Keys { get; public set; }
    public string get_From();
    public void set_From(string value);
    internal bool IsSetFrom();
    public List`1<List`1<string>> get_Keys();
    public void set_Keys(List`1<List`1<string>> value);
    internal bool IsSetKeys();
}
public class Amazon.Glue.Model.JsonClassifier : object {
    private Nullable`1<DateTime> _creationTime;
    private string _jsonPath;
    private Nullable`1<DateTime> _lastUpdated;
    private string _name;
    private Nullable`1<long> _version;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string JsonPath { get; public set; }
    public Nullable`1<DateTime> LastUpdated { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_JsonPath();
    public void set_JsonPath(string value);
    internal bool IsSetJsonPath();
    public Nullable`1<DateTime> get_LastUpdated();
    public void set_LastUpdated(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdated();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.Model.KafkaStreamingSourceOptions : object {
    private string _addRecordTimestamp;
    private string _assign;
    private string _bootstrapServers;
    private string _classification;
    private string _connectionName;
    private string _delimiter;
    private string _emitConsumerLagMetrics;
    private string _endingOffsets;
    private Nullable`1<bool> _includeHeaders;
    private Nullable`1<long> _maxOffsetsPerTrigger;
    private Nullable`1<int> _minPartitions;
    private Nullable`1<int> _numRetries;
    private Nullable`1<long> _pollTimeoutMs;
    private Nullable`1<long> _retryIntervalMs;
    private string _securityProtocol;
    private string _startingOffsets;
    private Nullable`1<DateTime> _startingTimestamp;
    private string _subscribePattern;
    private string _topicName;
    public string AddRecordTimestamp { get; public set; }
    public string Assign { get; public set; }
    public string BootstrapServers { get; public set; }
    public string Classification { get; public set; }
    public string ConnectionName { get; public set; }
    public string Delimiter { get; public set; }
    public string EmitConsumerLagMetrics { get; public set; }
    public string EndingOffsets { get; public set; }
    public Nullable`1<bool> IncludeHeaders { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaxOffsetsPerTrigger { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MinPartitions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumRetries { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> PollTimeoutMs { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> RetryIntervalMs { get; public set; }
    public string SecurityProtocol { get; public set; }
    public string StartingOffsets { get; public set; }
    public Nullable`1<DateTime> StartingTimestamp { get; public set; }
    public string SubscribePattern { get; public set; }
    public string TopicName { get; public set; }
    public string get_AddRecordTimestamp();
    public void set_AddRecordTimestamp(string value);
    internal bool IsSetAddRecordTimestamp();
    public string get_Assign();
    public void set_Assign(string value);
    internal bool IsSetAssign();
    public string get_BootstrapServers();
    public void set_BootstrapServers(string value);
    internal bool IsSetBootstrapServers();
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public string get_EmitConsumerLagMetrics();
    public void set_EmitConsumerLagMetrics(string value);
    internal bool IsSetEmitConsumerLagMetrics();
    public string get_EndingOffsets();
    public void set_EndingOffsets(string value);
    internal bool IsSetEndingOffsets();
    public Nullable`1<bool> get_IncludeHeaders();
    public void set_IncludeHeaders(Nullable`1<bool> value);
    internal bool IsSetIncludeHeaders();
    public Nullable`1<long> get_MaxOffsetsPerTrigger();
    public void set_MaxOffsetsPerTrigger(Nullable`1<long> value);
    internal bool IsSetMaxOffsetsPerTrigger();
    public Nullable`1<int> get_MinPartitions();
    public void set_MinPartitions(Nullable`1<int> value);
    internal bool IsSetMinPartitions();
    public Nullable`1<int> get_NumRetries();
    public void set_NumRetries(Nullable`1<int> value);
    internal bool IsSetNumRetries();
    public Nullable`1<long> get_PollTimeoutMs();
    public void set_PollTimeoutMs(Nullable`1<long> value);
    internal bool IsSetPollTimeoutMs();
    public Nullable`1<long> get_RetryIntervalMs();
    public void set_RetryIntervalMs(Nullable`1<long> value);
    internal bool IsSetRetryIntervalMs();
    public string get_SecurityProtocol();
    public void set_SecurityProtocol(string value);
    internal bool IsSetSecurityProtocol();
    public string get_StartingOffsets();
    public void set_StartingOffsets(string value);
    internal bool IsSetStartingOffsets();
    public Nullable`1<DateTime> get_StartingTimestamp();
    public void set_StartingTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingTimestamp();
    public string get_SubscribePattern();
    public void set_SubscribePattern(string value);
    internal bool IsSetSubscribePattern();
    public string get_TopicName();
    public void set_TopicName(string value);
    internal bool IsSetTopicName();
}
public class Amazon.Glue.Model.KeySchemaElement : object {
    private string _name;
    private string _type;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.KinesisStreamingSourceOptions : object {
    private Nullable`1<bool> _addIdleTimeBetweenReads;
    private string _addRecordTimestamp;
    private Nullable`1<bool> _avoidEmptyBatches;
    private string _classification;
    private string _delimiter;
    private Nullable`1<long> _describeShardInterval;
    private string _emitConsumerLagMetrics;
    private string _endpointUrl;
    private Nullable`1<long> _idleTimeBetweenReadsInMs;
    private Nullable`1<long> _maxFetchRecordsPerShard;
    private Nullable`1<long> _maxFetchTimeInMs;
    private Nullable`1<long> _maxRecordPerRead;
    private Nullable`1<long> _maxRetryIntervalMs;
    private Nullable`1<int> _numRetries;
    private Nullable`1<long> _retryIntervalMs;
    private string _roleArn;
    private string _roleSessionName;
    private StartingPosition _startingPosition;
    private Nullable`1<DateTime> _startingTimestamp;
    private string _streamArn;
    private string _streamName;
    public Nullable`1<bool> AddIdleTimeBetweenReads { get; public set; }
    public string AddRecordTimestamp { get; public set; }
    public Nullable`1<bool> AvoidEmptyBatches { get; public set; }
    public string Classification { get; public set; }
    public string Delimiter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> DescribeShardInterval { get; public set; }
    public string EmitConsumerLagMetrics { get; public set; }
    public string EndpointUrl { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> IdleTimeBetweenReadsInMs { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaxFetchRecordsPerShard { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaxFetchTimeInMs { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaxRecordPerRead { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaxRetryIntervalMs { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumRetries { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> RetryIntervalMs { get; public set; }
    public string RoleArn { get; public set; }
    public string RoleSessionName { get; public set; }
    public StartingPosition StartingPosition { get; public set; }
    public Nullable`1<DateTime> StartingTimestamp { get; public set; }
    public string StreamArn { get; public set; }
    public string StreamName { get; public set; }
    public Nullable`1<bool> get_AddIdleTimeBetweenReads();
    public void set_AddIdleTimeBetweenReads(Nullable`1<bool> value);
    internal bool IsSetAddIdleTimeBetweenReads();
    public string get_AddRecordTimestamp();
    public void set_AddRecordTimestamp(string value);
    internal bool IsSetAddRecordTimestamp();
    public Nullable`1<bool> get_AvoidEmptyBatches();
    public void set_AvoidEmptyBatches(Nullable`1<bool> value);
    internal bool IsSetAvoidEmptyBatches();
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public Nullable`1<long> get_DescribeShardInterval();
    public void set_DescribeShardInterval(Nullable`1<long> value);
    internal bool IsSetDescribeShardInterval();
    public string get_EmitConsumerLagMetrics();
    public void set_EmitConsumerLagMetrics(string value);
    internal bool IsSetEmitConsumerLagMetrics();
    public string get_EndpointUrl();
    public void set_EndpointUrl(string value);
    internal bool IsSetEndpointUrl();
    public Nullable`1<long> get_IdleTimeBetweenReadsInMs();
    public void set_IdleTimeBetweenReadsInMs(Nullable`1<long> value);
    internal bool IsSetIdleTimeBetweenReadsInMs();
    public Nullable`1<long> get_MaxFetchRecordsPerShard();
    public void set_MaxFetchRecordsPerShard(Nullable`1<long> value);
    internal bool IsSetMaxFetchRecordsPerShard();
    public Nullable`1<long> get_MaxFetchTimeInMs();
    public void set_MaxFetchTimeInMs(Nullable`1<long> value);
    internal bool IsSetMaxFetchTimeInMs();
    public Nullable`1<long> get_MaxRecordPerRead();
    public void set_MaxRecordPerRead(Nullable`1<long> value);
    internal bool IsSetMaxRecordPerRead();
    public Nullable`1<long> get_MaxRetryIntervalMs();
    public void set_MaxRetryIntervalMs(Nullable`1<long> value);
    internal bool IsSetMaxRetryIntervalMs();
    public Nullable`1<int> get_NumRetries();
    public void set_NumRetries(Nullable`1<int> value);
    internal bool IsSetNumRetries();
    public Nullable`1<long> get_RetryIntervalMs();
    public void set_RetryIntervalMs(Nullable`1<long> value);
    internal bool IsSetRetryIntervalMs();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_RoleSessionName();
    public void set_RoleSessionName(string value);
    internal bool IsSetRoleSessionName();
    public StartingPosition get_StartingPosition();
    public void set_StartingPosition(StartingPosition value);
    internal bool IsSetStartingPosition();
    public Nullable`1<DateTime> get_StartingTimestamp();
    public void set_StartingTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingTimestamp();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Glue.Model.LabelingSetGenerationTaskRunProperties : object {
    private string _outputS3Path;
    public string OutputS3Path { get; public set; }
    public string get_OutputS3Path();
    public void set_OutputS3Path(string value);
    internal bool IsSetOutputS3Path();
}
public class Amazon.Glue.Model.LakeFormationConfiguration : object {
    private string _accountId;
    private Nullable`1<bool> _useLakeFormationCredentials;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public Nullable`1<bool> UseLakeFormationCredentials { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<bool> get_UseLakeFormationCredentials();
    public void set_UseLakeFormationCredentials(Nullable`1<bool> value);
    internal bool IsSetUseLakeFormationCredentials();
}
public class Amazon.Glue.Model.LastActiveDefinition : object {
    private string _blueprintLocation;
    private string _blueprintServiceLocation;
    private string _description;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _parameterSpec;
    public string BlueprintLocation { get; public set; }
    public string BlueprintServiceLocation { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    [AWSPropertyAttribute]
public string ParameterSpec { get; public set; }
    public string get_BlueprintLocation();
    public void set_BlueprintLocation(string value);
    internal bool IsSetBlueprintLocation();
    public string get_BlueprintServiceLocation();
    public void set_BlueprintServiceLocation(string value);
    internal bool IsSetBlueprintServiceLocation();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_ParameterSpec();
    public void set_ParameterSpec(string value);
    internal bool IsSetParameterSpec();
}
public class Amazon.Glue.Model.LastCrawlInfo : object {
    private string _errorMessage;
    private string _logGroup;
    private string _logStream;
    private string _messagePrefix;
    private Nullable`1<DateTime> _startTime;
    private LastCrawlStatus _status;
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string LogGroup { get; public set; }
    [AWSPropertyAttribute]
public string LogStream { get; public set; }
    [AWSPropertyAttribute]
public string MessagePrefix { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public LastCrawlStatus Status { get; public set; }
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_LogGroup();
    public void set_LogGroup(string value);
    internal bool IsSetLogGroup();
    public string get_LogStream();
    public void set_LogStream(string value);
    internal bool IsSetLogStream();
    public string get_MessagePrefix();
    public void set_MessagePrefix(string value);
    internal bool IsSetMessagePrefix();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public LastCrawlStatus get_Status();
    public void set_Status(LastCrawlStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Glue.Model.LineageConfiguration : object {
    private CrawlerLineageSettings _crawlerLineageSettings;
    public CrawlerLineageSettings CrawlerLineageSettings { get; public set; }
    public CrawlerLineageSettings get_CrawlerLineageSettings();
    public void set_CrawlerLineageSettings(CrawlerLineageSettings value);
    internal bool IsSetCrawlerLineageSettings();
}
internal class Amazon.Glue.Model.ListBlueprintsPaginator : object {
    private IAmazonGlue _client;
    private ListBlueprintsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListBlueprintsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> Blueprints { get; }
    internal ListBlueprintsPaginator(IAmazonGlue client, ListBlueprintsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListBlueprintsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_Blueprints();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListBlueprintsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListBlueprintsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListBlueprintsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListBlueprintsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListBlueprintsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListBlueprintsResponse : AmazonWebServiceResponse {
    private List`1<string> _blueprints;
    private string _nextToken;
    public List`1<string> Blueprints { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_Blueprints();
    public void set_Blueprints(List`1<string> value);
    internal bool IsSetBlueprints();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.ListColumnStatisticsTaskRunsPaginator : object {
    private IAmazonGlue _client;
    private ListColumnStatisticsTaskRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListColumnStatisticsTaskRunsResponse> Responses { get; }
    internal ListColumnStatisticsTaskRunsPaginator(IAmazonGlue client, ListColumnStatisticsTaskRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListColumnStatisticsTaskRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListColumnStatisticsTaskRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListColumnStatisticsTaskRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListColumnStatisticsTaskRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListColumnStatisticsTaskRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListColumnStatisticsTaskRunsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListColumnStatisticsTaskRunsResponse : AmazonWebServiceResponse {
    private List`1<string> _columnStatisticsTaskRunIds;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> ColumnStatisticsTaskRunIds { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_ColumnStatisticsTaskRunIds();
    public void set_ColumnStatisticsTaskRunIds(List`1<string> value);
    internal bool IsSetColumnStatisticsTaskRunIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.ListCrawlersPaginator : object {
    private IAmazonGlue _client;
    private ListCrawlersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCrawlersResponse> Responses { get; }
    internal ListCrawlersPaginator(IAmazonGlue client, ListCrawlersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCrawlersResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListCrawlersPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListCrawlersResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListCrawlersResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListCrawlersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListCrawlersRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListCrawlersResponse : AmazonWebServiceResponse {
    private List`1<string> _crawlerNames;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> CrawlerNames { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_CrawlerNames();
    public void set_CrawlerNames(List`1<string> value);
    internal bool IsSetCrawlerNames();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListCrawlsRequest : AmazonGlueRequest {
    private string _crawlerName;
    private List`1<CrawlsFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string CrawlerName { get; public set; }
    public List`1<CrawlsFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_CrawlerName();
    public void set_CrawlerName(string value);
    internal bool IsSetCrawlerName();
    public List`1<CrawlsFilter> get_Filters();
    public void set_Filters(List`1<CrawlsFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListCrawlsResponse : AmazonWebServiceResponse {
    private List`1<CrawlerHistory> _crawls;
    private string _nextToken;
    public List`1<CrawlerHistory> Crawls { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CrawlerHistory> get_Crawls();
    public void set_Crawls(List`1<CrawlerHistory> value);
    internal bool IsSetCrawls();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.ListCustomEntityTypesPaginator : object {
    private IAmazonGlue _client;
    private ListCustomEntityTypesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCustomEntityTypesResponse> Responses { get; }
    internal ListCustomEntityTypesPaginator(IAmazonGlue client, ListCustomEntityTypesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCustomEntityTypesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListCustomEntityTypesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListCustomEntityTypesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListCustomEntityTypesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListCustomEntityTypesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListCustomEntityTypesRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListCustomEntityTypesResponse : AmazonWebServiceResponse {
    private List`1<CustomEntityType> _customEntityTypes;
    private string _nextToken;
    public List`1<CustomEntityType> CustomEntityTypes { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CustomEntityType> get_CustomEntityTypes();
    public void set_CustomEntityTypes(List`1<CustomEntityType> value);
    internal bool IsSetCustomEntityTypes();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.ListDataQualityResultsPaginator : object {
    private IAmazonGlue _client;
    private ListDataQualityResultsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDataQualityResultsResponse> Responses { get; }
    internal ListDataQualityResultsPaginator(IAmazonGlue client, ListDataQualityResultsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDataQualityResultsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListDataQualityResultsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListDataQualityResultsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListDataQualityResultsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListDataQualityResultsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListDataQualityResultsRequest : AmazonGlueRequest {
    private DataQualityResultFilterCriteria _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public DataQualityResultFilterCriteria Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public DataQualityResultFilterCriteria get_Filter();
    public void set_Filter(DataQualityResultFilterCriteria value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListDataQualityResultsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<DataQualityResultDescription> _results;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<DataQualityResultDescription> Results { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<DataQualityResultDescription> get_Results();
    public void set_Results(List`1<DataQualityResultDescription> value);
    internal bool IsSetResults();
}
internal class Amazon.Glue.Model.ListDataQualityRuleRecommendationRunsPaginator : object {
    private IAmazonGlue _client;
    private ListDataQualityRuleRecommendationRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDataQualityRuleRecommendationRunsResponse> Responses { get; }
    internal ListDataQualityRuleRecommendationRunsPaginator(IAmazonGlue client, ListDataQualityRuleRecommendationRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDataQualityRuleRecommendationRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListDataQualityRuleRecommendationRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListDataQualityRuleRecommendationRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListDataQualityRuleRecommendationRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListDataQualityRuleRecommendationRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListDataQualityRuleRecommendationRunsRequest : AmazonGlueRequest {
    private DataQualityRuleRecommendationRunFilter _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public DataQualityRuleRecommendationRunFilter Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public DataQualityRuleRecommendationRunFilter get_Filter();
    public void set_Filter(DataQualityRuleRecommendationRunFilter value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListDataQualityRuleRecommendationRunsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<DataQualityRuleRecommendationRunDescription> _runs;
    public string NextToken { get; public set; }
    public List`1<DataQualityRuleRecommendationRunDescription> Runs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<DataQualityRuleRecommendationRunDescription> get_Runs();
    public void set_Runs(List`1<DataQualityRuleRecommendationRunDescription> value);
    internal bool IsSetRuns();
}
internal class Amazon.Glue.Model.ListDataQualityRulesetEvaluationRunsPaginator : object {
    private IAmazonGlue _client;
    private ListDataQualityRulesetEvaluationRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDataQualityRulesetEvaluationRunsResponse> Responses { get; }
    internal ListDataQualityRulesetEvaluationRunsPaginator(IAmazonGlue client, ListDataQualityRulesetEvaluationRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDataQualityRulesetEvaluationRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListDataQualityRulesetEvaluationRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListDataQualityRulesetEvaluationRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListDataQualityRulesetEvaluationRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListDataQualityRulesetEvaluationRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListDataQualityRulesetEvaluationRunsRequest : AmazonGlueRequest {
    private DataQualityRulesetEvaluationRunFilter _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public DataQualityRulesetEvaluationRunFilter Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public DataQualityRulesetEvaluationRunFilter get_Filter();
    public void set_Filter(DataQualityRulesetEvaluationRunFilter value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListDataQualityRulesetEvaluationRunsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<DataQualityRulesetEvaluationRunDescription> _runs;
    public string NextToken { get; public set; }
    public List`1<DataQualityRulesetEvaluationRunDescription> Runs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<DataQualityRulesetEvaluationRunDescription> get_Runs();
    public void set_Runs(List`1<DataQualityRulesetEvaluationRunDescription> value);
    internal bool IsSetRuns();
}
internal class Amazon.Glue.Model.ListDataQualityRulesetsPaginator : object {
    private IAmazonGlue _client;
    private ListDataQualityRulesetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDataQualityRulesetsResponse> Responses { get; }
    internal ListDataQualityRulesetsPaginator(IAmazonGlue client, ListDataQualityRulesetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDataQualityRulesetsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListDataQualityRulesetsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListDataQualityRulesetsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListDataQualityRulesetsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListDataQualityRulesetsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListDataQualityRulesetsRequest : AmazonGlueRequest {
    private DataQualityRulesetFilterCriteria _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Dictionary`2<string, string> _tags;
    public DataQualityRulesetFilterCriteria Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public DataQualityRulesetFilterCriteria get_Filter();
    public void set_Filter(DataQualityRulesetFilterCriteria value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListDataQualityRulesetsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<DataQualityRulesetListDetails> _rulesets;
    public string NextToken { get; public set; }
    public List`1<DataQualityRulesetListDetails> Rulesets { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<DataQualityRulesetListDetails> get_Rulesets();
    public void set_Rulesets(List`1<DataQualityRulesetListDetails> value);
    internal bool IsSetRulesets();
}
internal class Amazon.Glue.Model.ListDevEndpointsPaginator : object {
    private IAmazonGlue _client;
    private ListDevEndpointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDevEndpointsResponse> Responses { get; }
    internal ListDevEndpointsPaginator(IAmazonGlue client, ListDevEndpointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDevEndpointsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListDevEndpointsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListDevEndpointsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListDevEndpointsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListDevEndpointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListDevEndpointsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListDevEndpointsResponse : AmazonWebServiceResponse {
    private List`1<string> _devEndpointNames;
    private string _nextToken;
    public List`1<string> DevEndpointNames { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_DevEndpointNames();
    public void set_DevEndpointNames(List`1<string> value);
    internal bool IsSetDevEndpointNames();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.ListJobsPaginator : object {
    private IAmazonGlue _client;
    private ListJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListJobsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> JobNames { get; }
    internal ListJobsPaginator(IAmazonGlue client, ListJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListJobsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_JobNames();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListJobsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListJobsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListJobsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListJobsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListJobsResponse : AmazonWebServiceResponse {
    private List`1<string> _jobNames;
    private string _nextToken;
    public List`1<string> JobNames { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_JobNames();
    public void set_JobNames(List`1<string> value);
    internal bool IsSetJobNames();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Glue.Model.ListMLTransformsPaginator : object {
    private IAmazonGlue _client;
    private ListMLTransformsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListMLTransformsResponse> Responses { get; }
    internal ListMLTransformsPaginator(IAmazonGlue client, ListMLTransformsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListMLTransformsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListMLTransformsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListMLTransformsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListMLTransformsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListMLTransformsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListMLTransformsRequest : AmazonGlueRequest {
    private TransformFilterCriteria _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private TransformSortCriteria _sort;
    private Dictionary`2<string, string> _tags;
    public TransformFilterCriteria Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public TransformSortCriteria Sort { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public TransformFilterCriteria get_Filter();
    public void set_Filter(TransformFilterCriteria value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public TransformSortCriteria get_Sort();
    public void set_Sort(TransformSortCriteria value);
    internal bool IsSetSort();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListMLTransformsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<string> _transformIds;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TransformIds { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TransformIds();
    public void set_TransformIds(List`1<string> value);
    internal bool IsSetTransformIds();
}
internal class Amazon.Glue.Model.ListRegistriesPaginator : object {
    private IAmazonGlue _client;
    private ListRegistriesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListRegistriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<RegistryListItem> Registries { get; }
    internal ListRegistriesPaginator(IAmazonGlue client, ListRegistriesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListRegistriesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<RegistryListItem> get_Registries();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListRegistriesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListRegistriesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListRegistriesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListRegistriesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListRegistriesRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListRegistriesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<RegistryListItem> _registries;
    public string NextToken { get; public set; }
    public List`1<RegistryListItem> Registries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<RegistryListItem> get_Registries();
    public void set_Registries(List`1<RegistryListItem> value);
    internal bool IsSetRegistries();
}
internal class Amazon.Glue.Model.ListSchemasPaginator : object {
    private IAmazonGlue _client;
    private ListSchemasRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListSchemasResponse> Responses { get; }
    public IPaginatedEnumerable`1<SchemaListItem> Schemas { get; }
    internal ListSchemasPaginator(IAmazonGlue client, ListSchemasRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListSchemasResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SchemaListItem> get_Schemas();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListSchemasPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListSchemasResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListSchemasResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListSchemasResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListSchemasRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private RegistryId _registryId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public RegistryId RegistryId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public RegistryId get_RegistryId();
    public void set_RegistryId(RegistryId value);
    internal bool IsSetRegistryId();
}
public class Amazon.Glue.Model.ListSchemasResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SchemaListItem> _schemas;
    public string NextToken { get; public set; }
    public List`1<SchemaListItem> Schemas { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SchemaListItem> get_Schemas();
    public void set_Schemas(List`1<SchemaListItem> value);
    internal bool IsSetSchemas();
}
internal class Amazon.Glue.Model.ListSchemaVersionsPaginator : object {
    private IAmazonGlue _client;
    private ListSchemaVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListSchemaVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<SchemaVersionListItem> Schemas { get; }
    internal ListSchemaVersionsPaginator(IAmazonGlue client, ListSchemaVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListSchemaVersionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SchemaVersionListItem> get_Schemas();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListSchemaVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListSchemaVersionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListSchemaVersionsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListSchemaVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListSchemaVersionsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private SchemaId _schemaId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
}
public class Amazon.Glue.Model.ListSchemaVersionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SchemaVersionListItem> _schemas;
    public string NextToken { get; public set; }
    public List`1<SchemaVersionListItem> Schemas { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SchemaVersionListItem> get_Schemas();
    public void set_Schemas(List`1<SchemaVersionListItem> value);
    internal bool IsSetSchemas();
}
internal class Amazon.Glue.Model.ListSessionsPaginator : object {
    private IAmazonGlue _client;
    private ListSessionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListSessionsResponse> Responses { get; }
    internal ListSessionsPaginator(IAmazonGlue client, ListSessionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListSessionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListSessionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListSessionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListSessionsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListSessionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListSessionsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _requestOrigin;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListSessionsResponse : AmazonWebServiceResponse {
    private List`1<string> _ids;
    private string _nextToken;
    private List`1<Session> _sessions;
    public List`1<string> Ids { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Session> Sessions { get; public set; }
    public List`1<string> get_Ids();
    public void set_Ids(List`1<string> value);
    internal bool IsSetIds();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Session> get_Sessions();
    public void set_Sessions(List`1<Session> value);
    internal bool IsSetSessions();
}
public class Amazon.Glue.Model.ListStatementsRequest : AmazonGlueRequest {
    private string _nextToken;
    private string _requestOrigin;
    private string _sessionId;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.Glue.Model.ListStatementsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Statement> _statements;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Statement> Statements { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Statement> get_Statements();
    public void set_Statements(List`1<Statement> value);
    internal bool IsSetStatements();
}
internal class Amazon.Glue.Model.ListTableOptimizerRunsPaginator : object {
    private IAmazonGlue _client;
    private ListTableOptimizerRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTableOptimizerRunsResponse> Responses { get; }
    internal ListTableOptimizerRunsPaginator(IAmazonGlue client, ListTableOptimizerRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTableOptimizerRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListTableOptimizerRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListTableOptimizerRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListTableOptimizerRunsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListTableOptimizerRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListTableOptimizerRunsRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _tableName;
    private TableOptimizerType _type;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public TableOptimizerType Type { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.ListTableOptimizerRunsResponse : AmazonWebServiceResponse {
    private string _catalogId;
    private string _databaseName;
    private string _nextToken;
    private string _tableName;
    private List`1<TableOptimizerRun> _tableOptimizerRuns;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public List`1<TableOptimizerRun> TableOptimizerRuns { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public List`1<TableOptimizerRun> get_TableOptimizerRuns();
    public void set_TableOptimizerRuns(List`1<TableOptimizerRun> value);
    internal bool IsSetTableOptimizerRuns();
}
internal class Amazon.Glue.Model.ListTriggersPaginator : object {
    private IAmazonGlue _client;
    private ListTriggersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTriggersResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> TriggerNames { get; }
    internal ListTriggersPaginator(IAmazonGlue client, ListTriggersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTriggersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_TriggerNames();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListTriggersPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListTriggersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTriggersResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListTriggersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListTriggersRequest : AmazonGlueRequest {
    private string _dependentJobName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string DependentJobName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_DependentJobName();
    public void set_DependentJobName(string value);
    internal bool IsSetDependentJobName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Glue.Model.ListTriggersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<string> _triggerNames;
    public string NextToken { get; public set; }
    public List`1<string> TriggerNames { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TriggerNames();
    public void set_TriggerNames(List`1<string> value);
    internal bool IsSetTriggerNames();
}
internal class Amazon.Glue.Model.ListUsageProfilesPaginator : object {
    private IAmazonGlue _client;
    private ListUsageProfilesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListUsageProfilesResponse> Responses { get; }
    public IPaginatedEnumerable`1<UsageProfileDefinition> Profiles { get; }
    internal ListUsageProfilesPaginator(IAmazonGlue client, ListUsageProfilesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListUsageProfilesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<UsageProfileDefinition> get_Profiles();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListUsageProfilesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListUsageProfilesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListUsageProfilesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListUsageProfilesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListUsageProfilesRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListUsageProfilesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<UsageProfileDefinition> _profiles;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<UsageProfileDefinition> Profiles { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<UsageProfileDefinition> get_Profiles();
    public void set_Profiles(List`1<UsageProfileDefinition> value);
    internal bool IsSetProfiles();
}
internal class Amazon.Glue.Model.ListWorkflowsPaginator : object {
    private IAmazonGlue _client;
    private ListWorkflowsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListWorkflowsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> Workflows { get; }
    internal ListWorkflowsPaginator(IAmazonGlue client, ListWorkflowsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListWorkflowsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_Workflows();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.ListWorkflowsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-ListWorkflowsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListWorkflowsResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.ListWorkflowsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.ListWorkflowsRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Glue.Model.ListWorkflowsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<string> _workflows;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Workflows { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_Workflows();
    public void set_Workflows(List`1<string> value);
    internal bool IsSetWorkflows();
}
public class Amazon.Glue.Model.Location : object {
    private List`1<CodeGenNodeArg> _dynamoDB;
    private List`1<CodeGenNodeArg> _jdbc;
    private List`1<CodeGenNodeArg> _s3;
    [AWSPropertyAttribute]
public List`1<CodeGenNodeArg> DynamoDB { get; public set; }
    [AWSPropertyAttribute]
public List`1<CodeGenNodeArg> Jdbc { get; public set; }
    [AWSPropertyAttribute]
public List`1<CodeGenNodeArg> S3 { get; public set; }
    public List`1<CodeGenNodeArg> get_DynamoDB();
    public void set_DynamoDB(List`1<CodeGenNodeArg> value);
    internal bool IsSetDynamoDB();
    public List`1<CodeGenNodeArg> get_Jdbc();
    public void set_Jdbc(List`1<CodeGenNodeArg> value);
    internal bool IsSetJdbc();
    public List`1<CodeGenNodeArg> get_S3();
    public void set_S3(List`1<CodeGenNodeArg> value);
    internal bool IsSetS3();
}
public class Amazon.Glue.Model.LongColumnStatisticsData : object {
    private Nullable`1<long> _maximumValue;
    private Nullable`1<long> _minimumValue;
    private Nullable`1<long> _numberOfDistinctValues;
    private Nullable`1<long> _numberOfNulls;
    public Nullable`1<long> MaximumValue { get; public set; }
    public Nullable`1<long> MinimumValue { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfDistinctValues { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfNulls { get; public set; }
    public Nullable`1<long> get_MaximumValue();
    public void set_MaximumValue(Nullable`1<long> value);
    internal bool IsSetMaximumValue();
    public Nullable`1<long> get_MinimumValue();
    public void set_MinimumValue(Nullable`1<long> value);
    internal bool IsSetMinimumValue();
    public Nullable`1<long> get_NumberOfDistinctValues();
    public void set_NumberOfDistinctValues(Nullable`1<long> value);
    internal bool IsSetNumberOfDistinctValues();
    public Nullable`1<long> get_NumberOfNulls();
    public void set_NumberOfNulls(Nullable`1<long> value);
    internal bool IsSetNumberOfNulls();
}
public class Amazon.Glue.Model.Mapping : object {
    private List`1<Mapping> _children;
    private Nullable`1<bool> _dropped;
    private List`1<string> _fromPath;
    private string _fromType;
    private string _toKey;
    private string _toType;
    public List`1<Mapping> Children { get; public set; }
    public Nullable`1<bool> Dropped { get; public set; }
    public List`1<string> FromPath { get; public set; }
    public string FromType { get; public set; }
    public string ToKey { get; public set; }
    public string ToType { get; public set; }
    public List`1<Mapping> get_Children();
    public void set_Children(List`1<Mapping> value);
    internal bool IsSetChildren();
    public Nullable`1<bool> get_Dropped();
    public void set_Dropped(Nullable`1<bool> value);
    internal bool IsSetDropped();
    public List`1<string> get_FromPath();
    public void set_FromPath(List`1<string> value);
    internal bool IsSetFromPath();
    public string get_FromType();
    public void set_FromType(string value);
    internal bool IsSetFromType();
    public string get_ToKey();
    public void set_ToKey(string value);
    internal bool IsSetToKey();
    public string get_ToType();
    public void set_ToType(string value);
    internal bool IsSetToType();
}
public class Amazon.Glue.Model.MappingEntry : object {
    private string _sourcePath;
    private string _sourceTable;
    private string _sourceType;
    private string _targetPath;
    private string _targetTable;
    private string _targetType;
    public string SourcePath { get; public set; }
    public string SourceTable { get; public set; }
    public string SourceType { get; public set; }
    public string TargetPath { get; public set; }
    public string TargetTable { get; public set; }
    public string TargetType { get; public set; }
    public string get_SourcePath();
    public void set_SourcePath(string value);
    internal bool IsSetSourcePath();
    public string get_SourceTable();
    public void set_SourceTable(string value);
    internal bool IsSetSourceTable();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_TargetPath();
    public void set_TargetPath(string value);
    internal bool IsSetTargetPath();
    public string get_TargetTable();
    public void set_TargetTable(string value);
    internal bool IsSetTargetTable();
    public string get_TargetType();
    public void set_TargetType(string value);
    internal bool IsSetTargetType();
}
public class Amazon.Glue.Model.Merge : object {
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _primaryKeys;
    private string _source;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<List`1<string>> PrimaryKeys { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PrimaryKeys();
    public void set_PrimaryKeys(List`1<List`1<string>> value);
    internal bool IsSetPrimaryKeys();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
}
public class Amazon.Glue.Model.MetadataInfo : object {
    private string _createdTime;
    private string _metadataValue;
    private List`1<OtherMetadataValueListItem> _otherMetadataValueList;
    public string CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string MetadataValue { get; public set; }
    public List`1<OtherMetadataValueListItem> OtherMetadataValueList { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public string get_MetadataValue();
    public void set_MetadataValue(string value);
    internal bool IsSetMetadataValue();
    public List`1<OtherMetadataValueListItem> get_OtherMetadataValueList();
    public void set_OtherMetadataValueList(List`1<OtherMetadataValueListItem> value);
    internal bool IsSetOtherMetadataValueList();
}
public class Amazon.Glue.Model.MetadataKeyValuePair : object {
    private string _metadataKey;
    private string _metadataValue;
    [AWSPropertyAttribute]
public string MetadataKey { get; public set; }
    [AWSPropertyAttribute]
public string MetadataValue { get; public set; }
    public string get_MetadataKey();
    public void set_MetadataKey(string value);
    internal bool IsSetMetadataKey();
    public string get_MetadataValue();
    public void set_MetadataValue(string value);
    internal bool IsSetMetadataValue();
}
public class Amazon.Glue.Model.MetricBasedObservation : object {
    private string _metricName;
    private DataQualityMetricValues _metricValues;
    private List`1<string> _newRules;
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    public DataQualityMetricValues MetricValues { get; public set; }
    public List`1<string> NewRules { get; public set; }
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public DataQualityMetricValues get_MetricValues();
    public void set_MetricValues(DataQualityMetricValues value);
    internal bool IsSetMetricValues();
    public List`1<string> get_NewRules();
    public void set_NewRules(List`1<string> value);
    internal bool IsSetNewRules();
}
public class Amazon.Glue.Model.MicrosoftSQLServerCatalogSource : object {
    private string _database;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.MicrosoftSQLServerCatalogTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.MLTransform : object {
    private Nullable`1<DateTime> _createdOn;
    private string _description;
    private EvaluationMetrics _evaluationMetrics;
    private string _glueVersion;
    private List`1<GlueTable> _inputRecordTables;
    private Nullable`1<int> _labelCount;
    private Nullable`1<DateTime> _lastModifiedOn;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _maxRetries;
    private string _name;
    private Nullable`1<int> _numberOfWorkers;
    private TransformParameters _parameters;
    private string _role;
    private List`1<SchemaColumn> _schema;
    private TransformStatusType _status;
    private Nullable`1<int> _timeout;
    private TransformEncryption _transformEncryption;
    private string _transformId;
    private WorkerType _workerType;
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EvaluationMetrics EvaluationMetrics { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    [AWSPropertyAttribute]
public List`1<GlueTable> InputRecordTables { get; public set; }
    public Nullable`1<int> LabelCount { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public TransformParameters Parameters { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public List`1<SchemaColumn> Schema { get; public set; }
    public TransformStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TransformEncryption TransformEncryption { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EvaluationMetrics get_EvaluationMetrics();
    public void set_EvaluationMetrics(EvaluationMetrics value);
    internal bool IsSetEvaluationMetrics();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public List`1<GlueTable> get_InputRecordTables();
    public void set_InputRecordTables(List`1<GlueTable> value);
    internal bool IsSetInputRecordTables();
    public Nullable`1<int> get_LabelCount();
    public void set_LabelCount(Nullable`1<int> value);
    internal bool IsSetLabelCount();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MaxRetries();
    public void set_MaxRetries(Nullable`1<int> value);
    internal bool IsSetMaxRetries();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public TransformParameters get_Parameters();
    public void set_Parameters(TransformParameters value);
    internal bool IsSetParameters();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public List`1<SchemaColumn> get_Schema();
    public void set_Schema(List`1<SchemaColumn> value);
    internal bool IsSetSchema();
    public TransformStatusType get_Status();
    public void set_Status(TransformStatusType value);
    internal bool IsSetStatus();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TransformEncryption get_TransformEncryption();
    public void set_TransformEncryption(TransformEncryption value);
    internal bool IsSetTransformEncryption();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.MLTransformNotReadyException : AmazonGlueException {
    public MLTransformNotReadyException(string message);
    public MLTransformNotReadyException(string message, Exception innerException);
    public MLTransformNotReadyException(Exception innerException);
    public MLTransformNotReadyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MLTransformNotReadyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.MLUserDataEncryption : object {
    private string _kmsKeyId;
    private MLUserDataEncryptionModeString _mlUserDataEncryptionMode;
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public MLUserDataEncryptionModeString MlUserDataEncryptionMode { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public MLUserDataEncryptionModeString get_MlUserDataEncryptionMode();
    public void set_MlUserDataEncryptionMode(MLUserDataEncryptionModeString value);
    internal bool IsSetMlUserDataEncryptionMode();
}
public class Amazon.Glue.Model.MongoDBTarget : object {
    private string _connectionName;
    private string _path;
    private Nullable`1<bool> _scanAll;
    public string ConnectionName { get; public set; }
    public string Path { get; public set; }
    public Nullable`1<bool> ScanAll { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public Nullable`1<bool> get_ScanAll();
    public void set_ScanAll(Nullable`1<bool> value);
    internal bool IsSetScanAll();
}
public class Amazon.Glue.Model.MySQLCatalogSource : object {
    private string _database;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.MySQLCatalogTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.Node : object {
    private CrawlerNodeDetails _crawlerDetails;
    private JobNodeDetails _jobDetails;
    private string _name;
    private TriggerNodeDetails _triggerDetails;
    private NodeType _type;
    private string _uniqueId;
    public CrawlerNodeDetails CrawlerDetails { get; public set; }
    public JobNodeDetails JobDetails { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public TriggerNodeDetails TriggerDetails { get; public set; }
    public NodeType Type { get; public set; }
    [AWSPropertyAttribute]
public string UniqueId { get; public set; }
    public CrawlerNodeDetails get_CrawlerDetails();
    public void set_CrawlerDetails(CrawlerNodeDetails value);
    internal bool IsSetCrawlerDetails();
    public JobNodeDetails get_JobDetails();
    public void set_JobDetails(JobNodeDetails value);
    internal bool IsSetJobDetails();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public TriggerNodeDetails get_TriggerDetails();
    public void set_TriggerDetails(TriggerNodeDetails value);
    internal bool IsSetTriggerDetails();
    public NodeType get_Type();
    public void set_Type(NodeType value);
    internal bool IsSetType();
    public string get_UniqueId();
    public void set_UniqueId(string value);
    internal bool IsSetUniqueId();
}
public class Amazon.Glue.Model.NoScheduleException : AmazonGlueException {
    public NoScheduleException(string message);
    public NoScheduleException(string message, Exception innerException);
    public NoScheduleException(Exception innerException);
    public NoScheduleException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoScheduleException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.NotificationProperty : object {
    private Nullable`1<int> _notifyDelayAfter;
    [AWSPropertyAttribute]
public Nullable`1<int> NotifyDelayAfter { get; public set; }
    public Nullable`1<int> get_NotifyDelayAfter();
    public void set_NotifyDelayAfter(Nullable`1<int> value);
    internal bool IsSetNotifyDelayAfter();
}
public class Amazon.Glue.Model.NullCheckBoxList : object {
    private Nullable`1<bool> _isEmpty;
    private Nullable`1<bool> _isNegOne;
    private Nullable`1<bool> _isNullString;
    public Nullable`1<bool> IsEmpty { get; public set; }
    public Nullable`1<bool> IsNegOne { get; public set; }
    public Nullable`1<bool> IsNullString { get; public set; }
    public Nullable`1<bool> get_IsEmpty();
    public void set_IsEmpty(Nullable`1<bool> value);
    internal bool IsSetIsEmpty();
    public Nullable`1<bool> get_IsNegOne();
    public void set_IsNegOne(Nullable`1<bool> value);
    internal bool IsSetIsNegOne();
    public Nullable`1<bool> get_IsNullString();
    public void set_IsNullString(Nullable`1<bool> value);
    internal bool IsSetIsNullString();
}
public class Amazon.Glue.Model.NullValueField : object {
    private Datatype _datatype;
    private string _value;
    [AWSPropertyAttribute]
public Datatype Datatype { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public Datatype get_Datatype();
    public void set_Datatype(Datatype value);
    internal bool IsSetDatatype();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.OAuth2ClientApplication : object {
    private string _awsManagedClientApplicationReference;
    private string _userManagedClientApplicationClientId;
    [AWSPropertyAttribute]
public string AWSManagedClientApplicationReference { get; public set; }
    [AWSPropertyAttribute]
public string UserManagedClientApplicationClientId { get; public set; }
    public string get_AWSManagedClientApplicationReference();
    public void set_AWSManagedClientApplicationReference(string value);
    internal bool IsSetAWSManagedClientApplicationReference();
    public string get_UserManagedClientApplicationClientId();
    public void set_UserManagedClientApplicationClientId(string value);
    internal bool IsSetUserManagedClientApplicationClientId();
}
public class Amazon.Glue.Model.OAuth2Properties : object {
    private OAuth2ClientApplication _oAuth2ClientApplication;
    private OAuth2GrantType _oAuth2GrantType;
    private string _tokenUrl;
    private Dictionary`2<string, string> _tokenUrlParametersMap;
    public OAuth2ClientApplication OAuth2ClientApplication { get; public set; }
    public OAuth2GrantType OAuth2GrantType { get; public set; }
    [AWSPropertyAttribute]
public string TokenUrl { get; public set; }
    public Dictionary`2<string, string> TokenUrlParametersMap { get; public set; }
    public OAuth2ClientApplication get_OAuth2ClientApplication();
    public void set_OAuth2ClientApplication(OAuth2ClientApplication value);
    internal bool IsSetOAuth2ClientApplication();
    public OAuth2GrantType get_OAuth2GrantType();
    public void set_OAuth2GrantType(OAuth2GrantType value);
    internal bool IsSetOAuth2GrantType();
    public string get_TokenUrl();
    public void set_TokenUrl(string value);
    internal bool IsSetTokenUrl();
    public Dictionary`2<string, string> get_TokenUrlParametersMap();
    public void set_TokenUrlParametersMap(Dictionary`2<string, string> value);
    internal bool IsSetTokenUrlParametersMap();
}
public class Amazon.Glue.Model.OAuth2PropertiesInput : object {
    private AuthorizationCodeProperties _authorizationCodeProperties;
    private OAuth2ClientApplication _oAuth2ClientApplication;
    private OAuth2GrantType _oAuth2GrantType;
    private string _tokenUrl;
    private Dictionary`2<string, string> _tokenUrlParametersMap;
    public AuthorizationCodeProperties AuthorizationCodeProperties { get; public set; }
    public OAuth2ClientApplication OAuth2ClientApplication { get; public set; }
    public OAuth2GrantType OAuth2GrantType { get; public set; }
    [AWSPropertyAttribute]
public string TokenUrl { get; public set; }
    public Dictionary`2<string, string> TokenUrlParametersMap { get; public set; }
    public AuthorizationCodeProperties get_AuthorizationCodeProperties();
    public void set_AuthorizationCodeProperties(AuthorizationCodeProperties value);
    internal bool IsSetAuthorizationCodeProperties();
    public OAuth2ClientApplication get_OAuth2ClientApplication();
    public void set_OAuth2ClientApplication(OAuth2ClientApplication value);
    internal bool IsSetOAuth2ClientApplication();
    public OAuth2GrantType get_OAuth2GrantType();
    public void set_OAuth2GrantType(OAuth2GrantType value);
    internal bool IsSetOAuth2GrantType();
    public string get_TokenUrl();
    public void set_TokenUrl(string value);
    internal bool IsSetTokenUrl();
    public Dictionary`2<string, string> get_TokenUrlParametersMap();
    public void set_TokenUrlParametersMap(Dictionary`2<string, string> value);
    internal bool IsSetTokenUrlParametersMap();
}
public class Amazon.Glue.Model.OpenTableFormatInput : object {
    private IcebergInput _icebergInput;
    public IcebergInput IcebergInput { get; public set; }
    public IcebergInput get_IcebergInput();
    public void set_IcebergInput(IcebergInput value);
    internal bool IsSetIcebergInput();
}
public class Amazon.Glue.Model.OperationNotSupportedException : AmazonGlueException {
    public OperationNotSupportedException(string message);
    public OperationNotSupportedException(string message, Exception innerException);
    public OperationNotSupportedException(Exception innerException);
    public OperationNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OperationNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.OperationTimeoutException : AmazonGlueException {
    public OperationTimeoutException(string message);
    public OperationTimeoutException(string message, Exception innerException);
    public OperationTimeoutException(Exception innerException);
    public OperationTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OperationTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.Option : object {
    private string _description;
    private string _label;
    private string _value;
    public string Description { get; public set; }
    public string Label { get; public set; }
    public string Value { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.OracleSQLCatalogSource : object {
    private string _database;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.OracleSQLCatalogTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.Order : object {
    private string _column;
    private Nullable`1<int> _sortOrder;
    [AWSPropertyAttribute]
public string Column { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SortOrder { get; public set; }
    public string get_Column();
    public void set_Column(string value);
    internal bool IsSetColumn();
    public Nullable`1<int> get_SortOrder();
    public void set_SortOrder(Nullable`1<int> value);
    internal bool IsSetSortOrder();
}
public class Amazon.Glue.Model.OtherMetadataValueListItem : object {
    private string _createdTime;
    private string _metadataValue;
    public string CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string MetadataValue { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public string get_MetadataValue();
    public void set_MetadataValue(string value);
    internal bool IsSetMetadataValue();
}
public class Amazon.Glue.Model.Partition : object {
    private string _catalogId;
    private Nullable`1<DateTime> _creationTime;
    private string _databaseName;
    private Nullable`1<DateTime> _lastAccessTime;
    private Nullable`1<DateTime> _lastAnalyzedTime;
    private Dictionary`2<string, string> _parameters;
    private StorageDescriptor _storageDescriptor;
    private string _tableName;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public Nullable`1<DateTime> LastAccessTime { get; public set; }
    public Nullable`1<DateTime> LastAnalyzedTime { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public StorageDescriptor StorageDescriptor { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<DateTime> get_LastAccessTime();
    public void set_LastAccessTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessTime();
    public Nullable`1<DateTime> get_LastAnalyzedTime();
    public void set_LastAnalyzedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAnalyzedTime();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public StorageDescriptor get_StorageDescriptor();
    public void set_StorageDescriptor(StorageDescriptor value);
    internal bool IsSetStorageDescriptor();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.Glue.Model.PartitionError : object {
    private ErrorDetail _errorDetail;
    private List`1<string> _partitionValues;
    public ErrorDetail ErrorDetail { get; public set; }
    public List`1<string> PartitionValues { get; public set; }
    public ErrorDetail get_ErrorDetail();
    public void set_ErrorDetail(ErrorDetail value);
    internal bool IsSetErrorDetail();
    public List`1<string> get_PartitionValues();
    public void set_PartitionValues(List`1<string> value);
    internal bool IsSetPartitionValues();
}
public class Amazon.Glue.Model.PartitionIndex : object {
    private string _indexName;
    private List`1<string> _keys;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Keys { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<string> get_Keys();
    public void set_Keys(List`1<string> value);
    internal bool IsSetKeys();
}
public class Amazon.Glue.Model.PartitionIndexDescriptor : object {
    private List`1<BackfillError> _backfillErrors;
    private string _indexName;
    private PartitionIndexStatus _indexStatus;
    private List`1<KeySchemaElement> _keys;
    public List`1<BackfillError> BackfillErrors { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public PartitionIndexStatus IndexStatus { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> Keys { get; public set; }
    public List`1<BackfillError> get_BackfillErrors();
    public void set_BackfillErrors(List`1<BackfillError> value);
    internal bool IsSetBackfillErrors();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public PartitionIndexStatus get_IndexStatus();
    public void set_IndexStatus(PartitionIndexStatus value);
    internal bool IsSetIndexStatus();
    public List`1<KeySchemaElement> get_Keys();
    public void set_Keys(List`1<KeySchemaElement> value);
    internal bool IsSetKeys();
}
public class Amazon.Glue.Model.PartitionInput : object {
    private Nullable`1<DateTime> _lastAccessTime;
    private Nullable`1<DateTime> _lastAnalyzedTime;
    private Dictionary`2<string, string> _parameters;
    private StorageDescriptor _storageDescriptor;
    private List`1<string> _values;
    public Nullable`1<DateTime> LastAccessTime { get; public set; }
    public Nullable`1<DateTime> LastAnalyzedTime { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public StorageDescriptor StorageDescriptor { get; public set; }
    public List`1<string> Values { get; public set; }
    public Nullable`1<DateTime> get_LastAccessTime();
    public void set_LastAccessTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessTime();
    public Nullable`1<DateTime> get_LastAnalyzedTime();
    public void set_LastAnalyzedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAnalyzedTime();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public StorageDescriptor get_StorageDescriptor();
    public void set_StorageDescriptor(StorageDescriptor value);
    internal bool IsSetStorageDescriptor();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.Glue.Model.PartitionValueList : object {
    private List`1<string> _values;
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.Glue.Model.PermissionTypeMismatchException : AmazonGlueException {
    public PermissionTypeMismatchException(string message);
    public PermissionTypeMismatchException(string message, Exception innerException);
    public PermissionTypeMismatchException(Exception innerException);
    public PermissionTypeMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PermissionTypeMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.PhysicalConnectionRequirements : object {
    private string _availabilityZone;
    private List`1<string> _securityGroupIdList;
    private string _subnetId;
    [AWSPropertyAttribute]
public string AvailabilityZone { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIdList { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<string> get_SecurityGroupIdList();
    public void set_SecurityGroupIdList(List`1<string> value);
    internal bool IsSetSecurityGroupIdList();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.Glue.Model.PIIDetection : object {
    private List`1<string> _entityTypesToDetect;
    private List`1<string> _inputs;
    private string _maskValue;
    private string _name;
    private string _outputColumnName;
    private PiiType _piiType;
    private Nullable`1<double> _sampleFraction;
    private Nullable`1<double> _thresholdFraction;
    [AWSPropertyAttribute]
public List`1<string> EntityTypesToDetect { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string MaskValue { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string OutputColumnName { get; public set; }
    [AWSPropertyAttribute]
public PiiType PiiType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> SampleFraction { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> ThresholdFraction { get; public set; }
    public List`1<string> get_EntityTypesToDetect();
    public void set_EntityTypesToDetect(List`1<string> value);
    internal bool IsSetEntityTypesToDetect();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_MaskValue();
    public void set_MaskValue(string value);
    internal bool IsSetMaskValue();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OutputColumnName();
    public void set_OutputColumnName(string value);
    internal bool IsSetOutputColumnName();
    public PiiType get_PiiType();
    public void set_PiiType(PiiType value);
    internal bool IsSetPiiType();
    public Nullable`1<double> get_SampleFraction();
    public void set_SampleFraction(Nullable`1<double> value);
    internal bool IsSetSampleFraction();
    public Nullable`1<double> get_ThresholdFraction();
    public void set_ThresholdFraction(Nullable`1<double> value);
    internal bool IsSetThresholdFraction();
}
public class Amazon.Glue.Model.PostgreSQLCatalogSource : object {
    private string _database;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.PostgreSQLCatalogTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.Predecessor : object {
    private string _jobName;
    private string _runId;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.Predicate : object {
    private List`1<Condition> _conditions;
    private Logical _logical;
    public List`1<Condition> Conditions { get; public set; }
    public Logical Logical { get; public set; }
    public List`1<Condition> get_Conditions();
    public void set_Conditions(List`1<Condition> value);
    internal bool IsSetConditions();
    public Logical get_Logical();
    public void set_Logical(Logical value);
    internal bool IsSetLogical();
}
public class Amazon.Glue.Model.PrincipalPermissions : object {
    private List`1<string> _permissions;
    private DataLakePrincipal _principal;
    public List`1<string> Permissions { get; public set; }
    public DataLakePrincipal Principal { get; public set; }
    public List`1<string> get_Permissions();
    public void set_Permissions(List`1<string> value);
    internal bool IsSetPermissions();
    public DataLakePrincipal get_Principal();
    public void set_Principal(DataLakePrincipal value);
    internal bool IsSetPrincipal();
}
public class Amazon.Glue.Model.ProfileConfiguration : object {
    private Dictionary`2<string, ConfigurationObject> _jobConfiguration;
    private Dictionary`2<string, ConfigurationObject> _sessionConfiguration;
    public Dictionary`2<string, ConfigurationObject> JobConfiguration { get; public set; }
    public Dictionary`2<string, ConfigurationObject> SessionConfiguration { get; public set; }
    public Dictionary`2<string, ConfigurationObject> get_JobConfiguration();
    public void set_JobConfiguration(Dictionary`2<string, ConfigurationObject> value);
    internal bool IsSetJobConfiguration();
    public Dictionary`2<string, ConfigurationObject> get_SessionConfiguration();
    public void set_SessionConfiguration(Dictionary`2<string, ConfigurationObject> value);
    internal bool IsSetSessionConfiguration();
}
public class Amazon.Glue.Model.PropertyPredicate : object {
    private Comparator _comparator;
    private string _key;
    private string _value;
    public Comparator Comparator { get; public set; }
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public Comparator get_Comparator();
    public void set_Comparator(Comparator value);
    internal bool IsSetComparator();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.PutDataCatalogEncryptionSettingsRequest : AmazonGlueRequest {
    private string _catalogId;
    private DataCatalogEncryptionSettings _dataCatalogEncryptionSettings;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public DataCatalogEncryptionSettings DataCatalogEncryptionSettings { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public DataCatalogEncryptionSettings get_DataCatalogEncryptionSettings();
    public void set_DataCatalogEncryptionSettings(DataCatalogEncryptionSettings value);
    internal bool IsSetDataCatalogEncryptionSettings();
}
public class Amazon.Glue.Model.PutDataCatalogEncryptionSettingsResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.PutResourcePolicyRequest : AmazonGlueRequest {
    private EnableHybridValues _enableHybrid;
    private ExistCondition _policyExistsCondition;
    private string _policyHashCondition;
    private string _policyInJson;
    private string _resourceArn;
    public EnableHybridValues EnableHybrid { get; public set; }
    public ExistCondition PolicyExistsCondition { get; public set; }
    [AWSPropertyAttribute]
public string PolicyHashCondition { get; public set; }
    [AWSPropertyAttribute]
public string PolicyInJson { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public EnableHybridValues get_EnableHybrid();
    public void set_EnableHybrid(EnableHybridValues value);
    internal bool IsSetEnableHybrid();
    public ExistCondition get_PolicyExistsCondition();
    public void set_PolicyExistsCondition(ExistCondition value);
    internal bool IsSetPolicyExistsCondition();
    public string get_PolicyHashCondition();
    public void set_PolicyHashCondition(string value);
    internal bool IsSetPolicyHashCondition();
    public string get_PolicyInJson();
    public void set_PolicyInJson(string value);
    internal bool IsSetPolicyInJson();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.Glue.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private string _policyHash;
    [AWSPropertyAttribute]
public string PolicyHash { get; public set; }
    public string get_PolicyHash();
    public void set_PolicyHash(string value);
    internal bool IsSetPolicyHash();
}
public class Amazon.Glue.Model.PutSchemaVersionMetadataRequest : AmazonGlueRequest {
    private MetadataKeyValuePair _metadataKeyValue;
    private SchemaId _schemaId;
    private string _schemaVersionId;
    private SchemaVersionNumber _schemaVersionNumber;
    [AWSPropertyAttribute]
public MetadataKeyValuePair MetadataKeyValue { get; public set; }
    public SchemaId SchemaId { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionNumber SchemaVersionNumber { get; public set; }
    public MetadataKeyValuePair get_MetadataKeyValue();
    public void set_MetadataKeyValue(MetadataKeyValuePair value);
    internal bool IsSetMetadataKeyValue();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionNumber get_SchemaVersionNumber();
    public void set_SchemaVersionNumber(SchemaVersionNumber value);
    internal bool IsSetSchemaVersionNumber();
}
public class Amazon.Glue.Model.PutSchemaVersionMetadataResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _latestVersion;
    private string _metadataKey;
    private string _metadataValue;
    private string _registryName;
    private string _schemaArn;
    private string _schemaName;
    private string _schemaVersionId;
    private Nullable`1<long> _versionNumber;
    public Nullable`1<bool> LatestVersion { get; public set; }
    [AWSPropertyAttribute]
public string MetadataKey { get; public set; }
    [AWSPropertyAttribute]
public string MetadataValue { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public Nullable`1<bool> get_LatestVersion();
    public void set_LatestVersion(Nullable`1<bool> value);
    internal bool IsSetLatestVersion();
    public string get_MetadataKey();
    public void set_MetadataKey(string value);
    internal bool IsSetMetadataKey();
    public string get_MetadataValue();
    public void set_MetadataValue(string value);
    internal bool IsSetMetadataValue();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Glue.Model.PutWorkflowRunPropertiesRequest : AmazonGlueRequest {
    private string _name;
    private string _runId;
    private Dictionary`2<string, string> _runProperties;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> RunProperties { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
    public Dictionary`2<string, string> get_RunProperties();
    public void set_RunProperties(Dictionary`2<string, string> value);
    internal bool IsSetRunProperties();
}
public class Amazon.Glue.Model.PutWorkflowRunPropertiesResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.QuerySchemaVersionMetadataRequest : AmazonGlueRequest {
    private Nullable`1<int> _maxResults;
    private List`1<MetadataKeyValuePair> _metadataList;
    private string _nextToken;
    private SchemaId _schemaId;
    private string _schemaVersionId;
    private SchemaVersionNumber _schemaVersionNumber;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public List`1<MetadataKeyValuePair> MetadataList { get; public set; }
    public string NextToken { get; public set; }
    public SchemaId SchemaId { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionNumber SchemaVersionNumber { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public List`1<MetadataKeyValuePair> get_MetadataList();
    public void set_MetadataList(List`1<MetadataKeyValuePair> value);
    internal bool IsSetMetadataList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionNumber get_SchemaVersionNumber();
    public void set_SchemaVersionNumber(SchemaVersionNumber value);
    internal bool IsSetSchemaVersionNumber();
}
public class Amazon.Glue.Model.QuerySchemaVersionMetadataResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, MetadataInfo> _metadataInfoMap;
    private string _nextToken;
    private string _schemaVersionId;
    public Dictionary`2<string, MetadataInfo> MetadataInfoMap { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public Dictionary`2<string, MetadataInfo> get_MetadataInfoMap();
    public void set_MetadataInfoMap(Dictionary`2<string, MetadataInfo> value);
    internal bool IsSetMetadataInfoMap();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
}
public class Amazon.Glue.Model.QuerySessionContext : object {
    private Dictionary`2<string, string> _additionalContext;
    private string _clusterId;
    private string _queryAuthorizationId;
    private string _queryId;
    private Nullable`1<DateTime> _queryStartTime;
    public Dictionary`2<string, string> AdditionalContext { get; public set; }
    public string ClusterId { get; public set; }
    [AWSPropertyAttribute]
public string QueryAuthorizationId { get; public set; }
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public Nullable`1<DateTime> QueryStartTime { get; public set; }
    public Dictionary`2<string, string> get_AdditionalContext();
    public void set_AdditionalContext(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalContext();
    public string get_ClusterId();
    public void set_ClusterId(string value);
    internal bool IsSetClusterId();
    public string get_QueryAuthorizationId();
    public void set_QueryAuthorizationId(string value);
    internal bool IsSetQueryAuthorizationId();
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
    public Nullable`1<DateTime> get_QueryStartTime();
    public void set_QueryStartTime(Nullable`1<DateTime> value);
    internal bool IsSetQueryStartTime();
}
public class Amazon.Glue.Model.Recipe : object {
    private List`1<string> _inputs;
    private string _name;
    private RecipeReference _recipeReference;
    private List`1<RecipeStep> _recipeSteps;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public RecipeReference RecipeReference { get; public set; }
    public List`1<RecipeStep> RecipeSteps { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public RecipeReference get_RecipeReference();
    public void set_RecipeReference(RecipeReference value);
    internal bool IsSetRecipeReference();
    public List`1<RecipeStep> get_RecipeSteps();
    public void set_RecipeSteps(List`1<RecipeStep> value);
    internal bool IsSetRecipeSteps();
}
public class Amazon.Glue.Model.RecipeAction : object {
    private string _operation;
    private Dictionary`2<string, string> _parameters;
    [AWSPropertyAttribute]
public string Operation { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public string get_Operation();
    public void set_Operation(string value);
    internal bool IsSetOperation();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
}
public class Amazon.Glue.Model.RecipeReference : object {
    private string _recipeArn;
    private string _recipeVersion;
    [AWSPropertyAttribute]
public string RecipeArn { get; public set; }
    [AWSPropertyAttribute]
public string RecipeVersion { get; public set; }
    public string get_RecipeArn();
    public void set_RecipeArn(string value);
    internal bool IsSetRecipeArn();
    public string get_RecipeVersion();
    public void set_RecipeVersion(string value);
    internal bool IsSetRecipeVersion();
}
public class Amazon.Glue.Model.RecipeStep : object {
    private RecipeAction _action;
    private List`1<ConditionExpression> _conditionExpressions;
    [AWSPropertyAttribute]
public RecipeAction Action { get; public set; }
    public List`1<ConditionExpression> ConditionExpressions { get; public set; }
    public RecipeAction get_Action();
    public void set_Action(RecipeAction value);
    internal bool IsSetAction();
    public List`1<ConditionExpression> get_ConditionExpressions();
    public void set_ConditionExpressions(List`1<ConditionExpression> value);
    internal bool IsSetConditionExpressions();
}
public class Amazon.Glue.Model.RecrawlPolicy : object {
    private RecrawlBehavior _recrawlBehavior;
    public RecrawlBehavior RecrawlBehavior { get; public set; }
    public RecrawlBehavior get_RecrawlBehavior();
    public void set_RecrawlBehavior(RecrawlBehavior value);
    internal bool IsSetRecrawlBehavior();
}
public class Amazon.Glue.Model.RedshiftSource : object {
    private string _database;
    private string _name;
    private string _redshiftTmpDir;
    private string _table;
    private string _tmpDirIAMRole;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RedshiftTmpDir { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string TmpDirIAMRole { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RedshiftTmpDir();
    public void set_RedshiftTmpDir(string value);
    internal bool IsSetRedshiftTmpDir();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public string get_TmpDirIAMRole();
    public void set_TmpDirIAMRole(string value);
    internal bool IsSetTmpDirIAMRole();
}
public class Amazon.Glue.Model.RedshiftTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private string _redshiftTmpDir;
    private string _table;
    private string _tmpDirIAMRole;
    private UpsertRedshiftTargetOptions _upsertRedshiftOptions;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RedshiftTmpDir { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string TmpDirIAMRole { get; public set; }
    public UpsertRedshiftTargetOptions UpsertRedshiftOptions { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RedshiftTmpDir();
    public void set_RedshiftTmpDir(string value);
    internal bool IsSetRedshiftTmpDir();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public string get_TmpDirIAMRole();
    public void set_TmpDirIAMRole(string value);
    internal bool IsSetTmpDirIAMRole();
    public UpsertRedshiftTargetOptions get_UpsertRedshiftOptions();
    public void set_UpsertRedshiftOptions(UpsertRedshiftTargetOptions value);
    internal bool IsSetUpsertRedshiftOptions();
}
public class Amazon.Glue.Model.RegisterSchemaVersionRequest : AmazonGlueRequest {
    private string _schemaDefinition;
    private SchemaId _schemaId;
    [AWSPropertyAttribute]
public string SchemaDefinition { get; public set; }
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    public string get_SchemaDefinition();
    public void set_SchemaDefinition(string value);
    internal bool IsSetSchemaDefinition();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
}
public class Amazon.Glue.Model.RegisterSchemaVersionResponse : AmazonWebServiceResponse {
    private string _schemaVersionId;
    private SchemaVersionStatus _status;
    private Nullable`1<long> _versionNumber;
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionStatus get_Status();
    public void set_Status(SchemaVersionStatus value);
    internal bool IsSetStatus();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Glue.Model.RegistryId : object {
    private string _registryArn;
    private string _registryName;
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
}
public class Amazon.Glue.Model.RegistryListItem : object {
    private string _createdTime;
    private string _description;
    private string _registryArn;
    private string _registryName;
    private RegistryStatus _status;
    private string _updatedTime;
    public string CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    public RegistryStatus Status { get; public set; }
    public string UpdatedTime { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public RegistryStatus get_Status();
    public void set_Status(RegistryStatus value);
    internal bool IsSetStatus();
    public string get_UpdatedTime();
    public void set_UpdatedTime(string value);
    internal bool IsSetUpdatedTime();
}
public class Amazon.Glue.Model.RelationalCatalogSource : object {
    private string _database;
    private string _name;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.RemoveSchemaVersionMetadataRequest : AmazonGlueRequest {
    private MetadataKeyValuePair _metadataKeyValue;
    private SchemaId _schemaId;
    private string _schemaVersionId;
    private SchemaVersionNumber _schemaVersionNumber;
    [AWSPropertyAttribute]
public MetadataKeyValuePair MetadataKeyValue { get; public set; }
    public SchemaId SchemaId { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionNumber SchemaVersionNumber { get; public set; }
    public MetadataKeyValuePair get_MetadataKeyValue();
    public void set_MetadataKeyValue(MetadataKeyValuePair value);
    internal bool IsSetMetadataKeyValue();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionNumber get_SchemaVersionNumber();
    public void set_SchemaVersionNumber(SchemaVersionNumber value);
    internal bool IsSetSchemaVersionNumber();
}
public class Amazon.Glue.Model.RemoveSchemaVersionMetadataResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _latestVersion;
    private string _metadataKey;
    private string _metadataValue;
    private string _registryName;
    private string _schemaArn;
    private string _schemaName;
    private string _schemaVersionId;
    private Nullable`1<long> _versionNumber;
    public Nullable`1<bool> LatestVersion { get; public set; }
    [AWSPropertyAttribute]
public string MetadataKey { get; public set; }
    [AWSPropertyAttribute]
public string MetadataValue { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public Nullable`1<bool> get_LatestVersion();
    public void set_LatestVersion(Nullable`1<bool> value);
    internal bool IsSetLatestVersion();
    public string get_MetadataKey();
    public void set_MetadataKey(string value);
    internal bool IsSetMetadataKey();
    public string get_MetadataValue();
    public void set_MetadataValue(string value);
    internal bool IsSetMetadataValue();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Glue.Model.RenameField : object {
    private List`1<string> _inputs;
    private string _name;
    private List`1<string> _sourcePath;
    private List`1<string> _targetPath;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SourcePath { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TargetPath { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_SourcePath();
    public void set_SourcePath(List`1<string> value);
    internal bool IsSetSourcePath();
    public List`1<string> get_TargetPath();
    public void set_TargetPath(List`1<string> value);
    internal bool IsSetTargetPath();
}
public class Amazon.Glue.Model.ResetJobBookmarkRequest : AmazonGlueRequest {
    private string _jobName;
    private string _runId;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string RunId { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.ResetJobBookmarkResponse : AmazonWebServiceResponse {
    private JobBookmarkEntry _jobBookmarkEntry;
    public JobBookmarkEntry JobBookmarkEntry { get; public set; }
    public JobBookmarkEntry get_JobBookmarkEntry();
    public void set_JobBookmarkEntry(JobBookmarkEntry value);
    internal bool IsSetJobBookmarkEntry();
}
public class Amazon.Glue.Model.ResourceNotReadyException : AmazonGlueException {
    public ResourceNotReadyException(string message);
    public ResourceNotReadyException(string message, Exception innerException);
    public ResourceNotReadyException(Exception innerException);
    public ResourceNotReadyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotReadyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ResourceNumberLimitExceededException : AmazonGlueException {
    public ResourceNumberLimitExceededException(string message);
    public ResourceNumberLimitExceededException(string message, Exception innerException);
    public ResourceNumberLimitExceededException(Exception innerException);
    public ResourceNumberLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNumberLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ResourceUri : object {
    private ResourceType _resourceType;
    private string _uri;
    public ResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public string Uri { get; public set; }
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public string get_Uri();
    public void set_Uri(string value);
    internal bool IsSetUri();
}
public class Amazon.Glue.Model.ResumeWorkflowRunRequest : AmazonGlueRequest {
    private string _name;
    private List`1<string> _nodeIds;
    private string _runId;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> NodeIds { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_NodeIds();
    public void set_NodeIds(List`1<string> value);
    internal bool IsSetNodeIds();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.ResumeWorkflowRunResponse : AmazonWebServiceResponse {
    private List`1<string> _nodeIds;
    private string _runId;
    public List`1<string> NodeIds { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public List`1<string> get_NodeIds();
    public void set_NodeIds(List`1<string> value);
    internal bool IsSetNodeIds();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.RunMetrics : object {
    private string _jobDurationInHour;
    private string _numberOfBytesCompacted;
    private string _numberOfDpus;
    private string _numberOfFilesCompacted;
    public string JobDurationInHour { get; public set; }
    public string NumberOfBytesCompacted { get; public set; }
    public string NumberOfDpus { get; public set; }
    public string NumberOfFilesCompacted { get; public set; }
    public string get_JobDurationInHour();
    public void set_JobDurationInHour(string value);
    internal bool IsSetJobDurationInHour();
    public string get_NumberOfBytesCompacted();
    public void set_NumberOfBytesCompacted(string value);
    internal bool IsSetNumberOfBytesCompacted();
    public string get_NumberOfDpus();
    public void set_NumberOfDpus(string value);
    internal bool IsSetNumberOfDpus();
    public string get_NumberOfFilesCompacted();
    public void set_NumberOfFilesCompacted(string value);
    internal bool IsSetNumberOfFilesCompacted();
}
public class Amazon.Glue.Model.RunStatementRequest : AmazonGlueRequest {
    private string _code;
    private string _requestOrigin;
    private string _sessionId;
    [AWSPropertyAttribute]
public string Code { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.Glue.Model.RunStatementResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _id;
    public Nullable`1<int> Id { get; public set; }
    public Nullable`1<int> get_Id();
    public void set_Id(Nullable`1<int> value);
    internal bool IsSetId();
}
public class Amazon.Glue.Model.S3CatalogDeltaSource : object {
    private Dictionary`2<string, string> _additionalDeltaOptions;
    private string _database;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private string _table;
    public Dictionary`2<string, string> AdditionalDeltaOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public Dictionary`2<string, string> get_AdditionalDeltaOptions();
    public void set_AdditionalDeltaOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalDeltaOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.S3CatalogHudiSource : object {
    private Dictionary`2<string, string> _additionalHudiOptions;
    private string _database;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private string _table;
    public Dictionary`2<string, string> AdditionalHudiOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public Dictionary`2<string, string> get_AdditionalHudiOptions();
    public void set_AdditionalHudiOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalHudiOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.S3CatalogSource : object {
    private S3SourceAdditionalOptions _additionalOptions;
    private string _database;
    private string _name;
    private string _partitionPredicate;
    private string _table;
    public S3SourceAdditionalOptions AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string PartitionPredicate { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public S3SourceAdditionalOptions get_AdditionalOptions();
    public void set_AdditionalOptions(S3SourceAdditionalOptions value);
    internal bool IsSetAdditionalOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PartitionPredicate();
    public void set_PartitionPredicate(string value);
    internal bool IsSetPartitionPredicate();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.S3CatalogTarget : object {
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private CatalogSchemaChangePolicy _schemaChangePolicy;
    private string _table;
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    public CatalogSchemaChangePolicy SchemaChangePolicy { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public CatalogSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(CatalogSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.S3CsvSource : object {
    private S3DirectSourceAdditionalOptions _additionalOptions;
    private CompressionType _compressionType;
    private string _escaper;
    private List`1<string> _exclusions;
    private string _groupFiles;
    private string _groupSize;
    private Nullable`1<int> _maxBand;
    private Nullable`1<int> _maxFilesInBand;
    private Nullable`1<bool> _multiline;
    private string _name;
    private Nullable`1<bool> _optimizePerformance;
    private List`1<GlueSchema> _outputSchemas;
    private List`1<string> _paths;
    private QuoteChar _quoteChar;
    private Nullable`1<bool> _recurse;
    private Separator _separator;
    private Nullable`1<bool> _skipFirst;
    private Nullable`1<bool> _withHeader;
    private Nullable`1<bool> _writeHeader;
    public S3DirectSourceAdditionalOptions AdditionalOptions { get; public set; }
    public CompressionType CompressionType { get; public set; }
    public string Escaper { get; public set; }
    public List`1<string> Exclusions { get; public set; }
    public string GroupFiles { get; public set; }
    public string GroupSize { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxBand { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxFilesInBand { get; public set; }
    public Nullable`1<bool> Multiline { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> OptimizePerformance { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Paths { get; public set; }
    [AWSPropertyAttribute]
public QuoteChar QuoteChar { get; public set; }
    public Nullable`1<bool> Recurse { get; public set; }
    [AWSPropertyAttribute]
public Separator Separator { get; public set; }
    public Nullable`1<bool> SkipFirst { get; public set; }
    public Nullable`1<bool> WithHeader { get; public set; }
    public Nullable`1<bool> WriteHeader { get; public set; }
    public S3DirectSourceAdditionalOptions get_AdditionalOptions();
    public void set_AdditionalOptions(S3DirectSourceAdditionalOptions value);
    internal bool IsSetAdditionalOptions();
    public CompressionType get_CompressionType();
    public void set_CompressionType(CompressionType value);
    internal bool IsSetCompressionType();
    public string get_Escaper();
    public void set_Escaper(string value);
    internal bool IsSetEscaper();
    public List`1<string> get_Exclusions();
    public void set_Exclusions(List`1<string> value);
    internal bool IsSetExclusions();
    public string get_GroupFiles();
    public void set_GroupFiles(string value);
    internal bool IsSetGroupFiles();
    public string get_GroupSize();
    public void set_GroupSize(string value);
    internal bool IsSetGroupSize();
    public Nullable`1<int> get_MaxBand();
    public void set_MaxBand(Nullable`1<int> value);
    internal bool IsSetMaxBand();
    public Nullable`1<int> get_MaxFilesInBand();
    public void set_MaxFilesInBand(Nullable`1<int> value);
    internal bool IsSetMaxFilesInBand();
    public Nullable`1<bool> get_Multiline();
    public void set_Multiline(Nullable`1<bool> value);
    internal bool IsSetMultiline();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OptimizePerformance();
    public void set_OptimizePerformance(Nullable`1<bool> value);
    internal bool IsSetOptimizePerformance();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public List`1<string> get_Paths();
    public void set_Paths(List`1<string> value);
    internal bool IsSetPaths();
    public QuoteChar get_QuoteChar();
    public void set_QuoteChar(QuoteChar value);
    internal bool IsSetQuoteChar();
    public Nullable`1<bool> get_Recurse();
    public void set_Recurse(Nullable`1<bool> value);
    internal bool IsSetRecurse();
    public Separator get_Separator();
    public void set_Separator(Separator value);
    internal bool IsSetSeparator();
    public Nullable`1<bool> get_SkipFirst();
    public void set_SkipFirst(Nullable`1<bool> value);
    internal bool IsSetSkipFirst();
    public Nullable`1<bool> get_WithHeader();
    public void set_WithHeader(Nullable`1<bool> value);
    internal bool IsSetWithHeader();
    public Nullable`1<bool> get_WriteHeader();
    public void set_WriteHeader(Nullable`1<bool> value);
    internal bool IsSetWriteHeader();
}
public class Amazon.Glue.Model.S3DeltaCatalogTarget : object {
    private Dictionary`2<string, string> _additionalOptions;
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private CatalogSchemaChangePolicy _schemaChangePolicy;
    private string _table;
    public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    public CatalogSchemaChangePolicy SchemaChangePolicy { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public CatalogSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(CatalogSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.S3DeltaDirectTarget : object {
    private Dictionary`2<string, string> _additionalOptions;
    private DeltaTargetCompressionType _compression;
    private TargetFormat _format;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private string _path;
    private DirectSchemaChangePolicy _schemaChangePolicy;
    public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public DeltaTargetCompressionType Compression { get; public set; }
    [AWSPropertyAttribute]
public TargetFormat Format { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    public DirectSchemaChangePolicy SchemaChangePolicy { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public DeltaTargetCompressionType get_Compression();
    public void set_Compression(DeltaTargetCompressionType value);
    internal bool IsSetCompression();
    public TargetFormat get_Format();
    public void set_Format(TargetFormat value);
    internal bool IsSetFormat();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public DirectSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(DirectSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
}
public class Amazon.Glue.Model.S3DeltaSource : object {
    private Dictionary`2<string, string> _additionalDeltaOptions;
    private S3DirectSourceAdditionalOptions _additionalOptions;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private List`1<string> _paths;
    public Dictionary`2<string, string> AdditionalDeltaOptions { get; public set; }
    public S3DirectSourceAdditionalOptions AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Paths { get; public set; }
    public Dictionary`2<string, string> get_AdditionalDeltaOptions();
    public void set_AdditionalDeltaOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalDeltaOptions();
    public S3DirectSourceAdditionalOptions get_AdditionalOptions();
    public void set_AdditionalOptions(S3DirectSourceAdditionalOptions value);
    internal bool IsSetAdditionalOptions();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public List`1<string> get_Paths();
    public void set_Paths(List`1<string> value);
    internal bool IsSetPaths();
}
public class Amazon.Glue.Model.S3DirectSourceAdditionalOptions : object {
    private Nullable`1<long> _boundedFiles;
    private Nullable`1<long> _boundedSize;
    private Nullable`1<bool> _enableSamplePath;
    private string _samplePath;
    public Nullable`1<long> BoundedFiles { get; public set; }
    public Nullable`1<long> BoundedSize { get; public set; }
    public Nullable`1<bool> EnableSamplePath { get; public set; }
    public string SamplePath { get; public set; }
    public Nullable`1<long> get_BoundedFiles();
    public void set_BoundedFiles(Nullable`1<long> value);
    internal bool IsSetBoundedFiles();
    public Nullable`1<long> get_BoundedSize();
    public void set_BoundedSize(Nullable`1<long> value);
    internal bool IsSetBoundedSize();
    public Nullable`1<bool> get_EnableSamplePath();
    public void set_EnableSamplePath(Nullable`1<bool> value);
    internal bool IsSetEnableSamplePath();
    public string get_SamplePath();
    public void set_SamplePath(string value);
    internal bool IsSetSamplePath();
}
public class Amazon.Glue.Model.S3DirectTarget : object {
    private string _compression;
    private TargetFormat _format;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private string _path;
    private DirectSchemaChangePolicy _schemaChangePolicy;
    public string Compression { get; public set; }
    [AWSPropertyAttribute]
public TargetFormat Format { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    public DirectSchemaChangePolicy SchemaChangePolicy { get; public set; }
    public string get_Compression();
    public void set_Compression(string value);
    internal bool IsSetCompression();
    public TargetFormat get_Format();
    public void set_Format(TargetFormat value);
    internal bool IsSetFormat();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public DirectSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(DirectSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
}
public class Amazon.Glue.Model.S3Encryption : object {
    private string _kmsKeyArn;
    private S3EncryptionMode _s3EncryptionMode;
    public string KmsKeyArn { get; public set; }
    public S3EncryptionMode S3EncryptionMode { get; public set; }
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
    public S3EncryptionMode get_S3EncryptionMode();
    public void set_S3EncryptionMode(S3EncryptionMode value);
    internal bool IsSetS3EncryptionMode();
}
public class Amazon.Glue.Model.S3GlueParquetTarget : object {
    private ParquetCompressionType _compression;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private string _path;
    private DirectSchemaChangePolicy _schemaChangePolicy;
    public ParquetCompressionType Compression { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    public DirectSchemaChangePolicy SchemaChangePolicy { get; public set; }
    public ParquetCompressionType get_Compression();
    public void set_Compression(ParquetCompressionType value);
    internal bool IsSetCompression();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public DirectSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(DirectSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
}
public class Amazon.Glue.Model.S3HudiCatalogTarget : object {
    private Dictionary`2<string, string> _additionalOptions;
    private string _database;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private CatalogSchemaChangePolicy _schemaChangePolicy;
    private string _table;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    public CatalogSchemaChangePolicy SchemaChangePolicy { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public CatalogSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(CatalogSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
}
public class Amazon.Glue.Model.S3HudiDirectTarget : object {
    private Dictionary`2<string, string> _additionalOptions;
    private HudiTargetCompressionType _compression;
    private TargetFormat _format;
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _partitionKeys;
    private string _path;
    private DirectSchemaChangePolicy _schemaChangePolicy;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public HudiTargetCompressionType Compression { get; public set; }
    [AWSPropertyAttribute]
public TargetFormat Format { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<List`1<string>> PartitionKeys { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    public DirectSchemaChangePolicy SchemaChangePolicy { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public HudiTargetCompressionType get_Compression();
    public void set_Compression(HudiTargetCompressionType value);
    internal bool IsSetCompression();
    public TargetFormat get_Format();
    public void set_Format(TargetFormat value);
    internal bool IsSetFormat();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_PartitionKeys();
    public void set_PartitionKeys(List`1<List`1<string>> value);
    internal bool IsSetPartitionKeys();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public DirectSchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(DirectSchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
}
public class Amazon.Glue.Model.S3HudiSource : object {
    private Dictionary`2<string, string> _additionalHudiOptions;
    private S3DirectSourceAdditionalOptions _additionalOptions;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private List`1<string> _paths;
    public Dictionary`2<string, string> AdditionalHudiOptions { get; public set; }
    public S3DirectSourceAdditionalOptions AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Paths { get; public set; }
    public Dictionary`2<string, string> get_AdditionalHudiOptions();
    public void set_AdditionalHudiOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalHudiOptions();
    public S3DirectSourceAdditionalOptions get_AdditionalOptions();
    public void set_AdditionalOptions(S3DirectSourceAdditionalOptions value);
    internal bool IsSetAdditionalOptions();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public List`1<string> get_Paths();
    public void set_Paths(List`1<string> value);
    internal bool IsSetPaths();
}
public class Amazon.Glue.Model.S3JsonSource : object {
    private S3DirectSourceAdditionalOptions _additionalOptions;
    private CompressionType _compressionType;
    private List`1<string> _exclusions;
    private string _groupFiles;
    private string _groupSize;
    private string _jsonPath;
    private Nullable`1<int> _maxBand;
    private Nullable`1<int> _maxFilesInBand;
    private Nullable`1<bool> _multiline;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private List`1<string> _paths;
    private Nullable`1<bool> _recurse;
    public S3DirectSourceAdditionalOptions AdditionalOptions { get; public set; }
    public CompressionType CompressionType { get; public set; }
    public List`1<string> Exclusions { get; public set; }
    public string GroupFiles { get; public set; }
    public string GroupSize { get; public set; }
    public string JsonPath { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxBand { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxFilesInBand { get; public set; }
    public Nullable`1<bool> Multiline { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Paths { get; public set; }
    public Nullable`1<bool> Recurse { get; public set; }
    public S3DirectSourceAdditionalOptions get_AdditionalOptions();
    public void set_AdditionalOptions(S3DirectSourceAdditionalOptions value);
    internal bool IsSetAdditionalOptions();
    public CompressionType get_CompressionType();
    public void set_CompressionType(CompressionType value);
    internal bool IsSetCompressionType();
    public List`1<string> get_Exclusions();
    public void set_Exclusions(List`1<string> value);
    internal bool IsSetExclusions();
    public string get_GroupFiles();
    public void set_GroupFiles(string value);
    internal bool IsSetGroupFiles();
    public string get_GroupSize();
    public void set_GroupSize(string value);
    internal bool IsSetGroupSize();
    public string get_JsonPath();
    public void set_JsonPath(string value);
    internal bool IsSetJsonPath();
    public Nullable`1<int> get_MaxBand();
    public void set_MaxBand(Nullable`1<int> value);
    internal bool IsSetMaxBand();
    public Nullable`1<int> get_MaxFilesInBand();
    public void set_MaxFilesInBand(Nullable`1<int> value);
    internal bool IsSetMaxFilesInBand();
    public Nullable`1<bool> get_Multiline();
    public void set_Multiline(Nullable`1<bool> value);
    internal bool IsSetMultiline();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public List`1<string> get_Paths();
    public void set_Paths(List`1<string> value);
    internal bool IsSetPaths();
    public Nullable`1<bool> get_Recurse();
    public void set_Recurse(Nullable`1<bool> value);
    internal bool IsSetRecurse();
}
public class Amazon.Glue.Model.S3ParquetSource : object {
    private S3DirectSourceAdditionalOptions _additionalOptions;
    private ParquetCompressionType _compressionType;
    private List`1<string> _exclusions;
    private string _groupFiles;
    private string _groupSize;
    private Nullable`1<int> _maxBand;
    private Nullable`1<int> _maxFilesInBand;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private List`1<string> _paths;
    private Nullable`1<bool> _recurse;
    public S3DirectSourceAdditionalOptions AdditionalOptions { get; public set; }
    public ParquetCompressionType CompressionType { get; public set; }
    public List`1<string> Exclusions { get; public set; }
    public string GroupFiles { get; public set; }
    public string GroupSize { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxBand { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxFilesInBand { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Paths { get; public set; }
    public Nullable`1<bool> Recurse { get; public set; }
    public S3DirectSourceAdditionalOptions get_AdditionalOptions();
    public void set_AdditionalOptions(S3DirectSourceAdditionalOptions value);
    internal bool IsSetAdditionalOptions();
    public ParquetCompressionType get_CompressionType();
    public void set_CompressionType(ParquetCompressionType value);
    internal bool IsSetCompressionType();
    public List`1<string> get_Exclusions();
    public void set_Exclusions(List`1<string> value);
    internal bool IsSetExclusions();
    public string get_GroupFiles();
    public void set_GroupFiles(string value);
    internal bool IsSetGroupFiles();
    public string get_GroupSize();
    public void set_GroupSize(string value);
    internal bool IsSetGroupSize();
    public Nullable`1<int> get_MaxBand();
    public void set_MaxBand(Nullable`1<int> value);
    internal bool IsSetMaxBand();
    public Nullable`1<int> get_MaxFilesInBand();
    public void set_MaxFilesInBand(Nullable`1<int> value);
    internal bool IsSetMaxFilesInBand();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public List`1<string> get_Paths();
    public void set_Paths(List`1<string> value);
    internal bool IsSetPaths();
    public Nullable`1<bool> get_Recurse();
    public void set_Recurse(Nullable`1<bool> value);
    internal bool IsSetRecurse();
}
public class Amazon.Glue.Model.S3SourceAdditionalOptions : object {
    private Nullable`1<long> _boundedFiles;
    private Nullable`1<long> _boundedSize;
    public Nullable`1<long> BoundedFiles { get; public set; }
    public Nullable`1<long> BoundedSize { get; public set; }
    public Nullable`1<long> get_BoundedFiles();
    public void set_BoundedFiles(Nullable`1<long> value);
    internal bool IsSetBoundedFiles();
    public Nullable`1<long> get_BoundedSize();
    public void set_BoundedSize(Nullable`1<long> value);
    internal bool IsSetBoundedSize();
}
public class Amazon.Glue.Model.S3Target : object {
    private string _connectionName;
    private string _dlqEventQueueArn;
    private string _eventQueueArn;
    private List`1<string> _exclusions;
    private string _path;
    private Nullable`1<int> _sampleSize;
    public string ConnectionName { get; public set; }
    public string DlqEventQueueArn { get; public set; }
    public string EventQueueArn { get; public set; }
    public List`1<string> Exclusions { get; public set; }
    public string Path { get; public set; }
    public Nullable`1<int> SampleSize { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_DlqEventQueueArn();
    public void set_DlqEventQueueArn(string value);
    internal bool IsSetDlqEventQueueArn();
    public string get_EventQueueArn();
    public void set_EventQueueArn(string value);
    internal bool IsSetEventQueueArn();
    public List`1<string> get_Exclusions();
    public void set_Exclusions(List`1<string> value);
    internal bool IsSetExclusions();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public Nullable`1<int> get_SampleSize();
    public void set_SampleSize(Nullable`1<int> value);
    internal bool IsSetSampleSize();
}
public class Amazon.Glue.Model.Schedule : object {
    private string _scheduleExpression;
    private ScheduleState _state;
    public string ScheduleExpression { get; public set; }
    public ScheduleState State { get; public set; }
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
    public ScheduleState get_State();
    public void set_State(ScheduleState value);
    internal bool IsSetState();
}
public class Amazon.Glue.Model.SchedulerNotRunningException : AmazonGlueException {
    public SchedulerNotRunningException(string message);
    public SchedulerNotRunningException(string message, Exception innerException);
    public SchedulerNotRunningException(Exception innerException);
    public SchedulerNotRunningException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SchedulerNotRunningException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.SchedulerRunningException : AmazonGlueException {
    public SchedulerRunningException(string message);
    public SchedulerRunningException(string message, Exception innerException);
    public SchedulerRunningException(Exception innerException);
    public SchedulerRunningException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SchedulerRunningException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.SchedulerTransitioningException : AmazonGlueException {
    public SchedulerTransitioningException(string message);
    public SchedulerTransitioningException(string message, Exception innerException);
    public SchedulerTransitioningException(Exception innerException);
    public SchedulerTransitioningException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SchedulerTransitioningException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.SchemaChangePolicy : object {
    private DeleteBehavior _deleteBehavior;
    private UpdateBehavior _updateBehavior;
    public DeleteBehavior DeleteBehavior { get; public set; }
    public UpdateBehavior UpdateBehavior { get; public set; }
    public DeleteBehavior get_DeleteBehavior();
    public void set_DeleteBehavior(DeleteBehavior value);
    internal bool IsSetDeleteBehavior();
    public UpdateBehavior get_UpdateBehavior();
    public void set_UpdateBehavior(UpdateBehavior value);
    internal bool IsSetUpdateBehavior();
}
public class Amazon.Glue.Model.SchemaColumn : object {
    private string _dataType;
    private string _name;
    [AWSPropertyAttribute]
public string DataType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.SchemaId : object {
    private string _registryName;
    private string _schemaArn;
    private string _schemaName;
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
}
public class Amazon.Glue.Model.SchemaListItem : object {
    private string _createdTime;
    private string _description;
    private string _registryName;
    private string _schemaArn;
    private string _schemaName;
    private SchemaStatus _schemaStatus;
    private string _updatedTime;
    public string CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    public SchemaStatus SchemaStatus { get; public set; }
    public string UpdatedTime { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public SchemaStatus get_SchemaStatus();
    public void set_SchemaStatus(SchemaStatus value);
    internal bool IsSetSchemaStatus();
    public string get_UpdatedTime();
    public void set_UpdatedTime(string value);
    internal bool IsSetUpdatedTime();
}
public class Amazon.Glue.Model.SchemaReference : object {
    private SchemaId _schemaId;
    private string _schemaVersionId;
    private Nullable`1<long> _schemaVersionNumber;
    public SchemaId SchemaId { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SchemaVersionNumber { get; public set; }
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public Nullable`1<long> get_SchemaVersionNumber();
    public void set_SchemaVersionNumber(Nullable`1<long> value);
    internal bool IsSetSchemaVersionNumber();
}
public class Amazon.Glue.Model.SchemaVersionErrorItem : object {
    private ErrorDetails _errorDetails;
    private Nullable`1<long> _versionNumber;
    public ErrorDetails ErrorDetails { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public ErrorDetails get_ErrorDetails();
    public void set_ErrorDetails(ErrorDetails value);
    internal bool IsSetErrorDetails();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Glue.Model.SchemaVersionListItem : object {
    private string _createdTime;
    private string _schemaArn;
    private string _schemaVersionId;
    private SchemaVersionStatus _status;
    private Nullable`1<long> _versionNumber;
    public string CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersionId { get; public set; }
    public SchemaVersionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    internal bool IsSetCreatedTime();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaVersionId();
    public void set_SchemaVersionId(string value);
    internal bool IsSetSchemaVersionId();
    public SchemaVersionStatus get_Status();
    public void set_Status(SchemaVersionStatus value);
    internal bool IsSetStatus();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Glue.Model.SchemaVersionNumber : object {
    private Nullable`1<bool> _latestVersion;
    private Nullable`1<long> _versionNumber;
    public Nullable`1<bool> LatestVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public Nullable`1<bool> get_LatestVersion();
    public void set_LatestVersion(Nullable`1<bool> value);
    internal bool IsSetLatestVersion();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
internal class Amazon.Glue.Model.SearchTablesPaginator : object {
    private IAmazonGlue _client;
    private SearchTablesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<SearchTablesResponse> Responses { get; }
    internal SearchTablesPaginator(IAmazonGlue client, SearchTablesRequest request);
    public sealed virtual IPaginatedEnumerable`1<SearchTablesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Glue.Model.SearchTablesPaginator/<Amazon-Runtime-IPaginator<Amazon-Glue-Model-SearchTablesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<SearchTablesResponse> Amazon.Runtime.IPaginator<Amazon.Glue.Model.SearchTablesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glue.Model.SearchTablesRequest : AmazonGlueRequest {
    private string _catalogId;
    private List`1<PropertyPredicate> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private ResourceShareType _resourceShareType;
    private string _searchText;
    private List`1<SortCriterion> _sortCriteria;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    public List`1<PropertyPredicate> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public ResourceShareType ResourceShareType { get; public set; }
    [AWSPropertyAttribute]
public string SearchText { get; public set; }
    [AWSPropertyAttribute]
public List`1<SortCriterion> SortCriteria { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public List`1<PropertyPredicate> get_Filters();
    public void set_Filters(List`1<PropertyPredicate> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ResourceShareType get_ResourceShareType();
    public void set_ResourceShareType(ResourceShareType value);
    internal bool IsSetResourceShareType();
    public string get_SearchText();
    public void set_SearchText(string value);
    internal bool IsSetSearchText();
    public List`1<SortCriterion> get_SortCriteria();
    public void set_SortCriteria(List`1<SortCriterion> value);
    internal bool IsSetSortCriteria();
}
public class Amazon.Glue.Model.SearchTablesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Table> _tableList;
    public string NextToken { get; public set; }
    public List`1<Table> TableList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Table> get_TableList();
    public void set_TableList(List`1<Table> value);
    internal bool IsSetTableList();
}
public class Amazon.Glue.Model.SecurityConfiguration : object {
    private Nullable`1<DateTime> _createdTimeStamp;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _name;
    public Nullable`1<DateTime> CreatedTimeStamp { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimeStamp();
    public void set_CreatedTimeStamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimeStamp();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.Segment : object {
    private Nullable`1<int> _segmentNumber;
    private Nullable`1<int> _totalSegments;
    [AWSPropertyAttribute]
public Nullable`1<int> SegmentNumber { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TotalSegments { get; public set; }
    public Nullable`1<int> get_SegmentNumber();
    public void set_SegmentNumber(Nullable`1<int> value);
    internal bool IsSetSegmentNumber();
    public Nullable`1<int> get_TotalSegments();
    public void set_TotalSegments(Nullable`1<int> value);
    internal bool IsSetTotalSegments();
}
public class Amazon.Glue.Model.SelectFields : object {
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _paths;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<List`1<string>> Paths { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_Paths();
    public void set_Paths(List`1<List`1<string>> value);
    internal bool IsSetPaths();
}
public class Amazon.Glue.Model.SelectFromCollection : object {
    private Nullable`1<int> _index;
    private List`1<string> _inputs;
    private string _name;
    [AWSPropertyAttribute]
public Nullable`1<int> Index { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<int> get_Index();
    public void set_Index(Nullable`1<int> value);
    internal bool IsSetIndex();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.SerDeInfo : object {
    private string _name;
    private Dictionary`2<string, string> _parameters;
    private string _serializationLibrary;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string SerializationLibrary { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public string get_SerializationLibrary();
    public void set_SerializationLibrary(string value);
    internal bool IsSetSerializationLibrary();
}
public class Amazon.Glue.Model.Session : object {
    private SessionCommand _command;
    private Nullable`1<DateTime> _completedOn;
    private ConnectionsList _connections;
    private Nullable`1<DateTime> _createdOn;
    private Dictionary`2<string, string> _defaultArguments;
    private string _description;
    private Nullable`1<double> _dpuSeconds;
    private string _errorMessage;
    private Nullable`1<double> _executionTime;
    private string _glueVersion;
    private string _id;
    private Nullable`1<int> _idleTimeout;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _numberOfWorkers;
    private string _profileName;
    private Nullable`1<double> _progress;
    private string _role;
    private string _securityConfiguration;
    private SessionStatus _status;
    private WorkerType _workerType;
    public SessionCommand Command { get; public set; }
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public ConnectionsList Connections { get; public set; }
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> DefaultArguments { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<double> DPUSeconds { get; public set; }
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    public Nullable`1<double> ExecutionTime { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<int> IdleTimeout { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string ProfileName { get; public set; }
    public Nullable`1<double> Progress { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    public SessionStatus Status { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public SessionCommand get_Command();
    public void set_Command(SessionCommand value);
    internal bool IsSetCommand();
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public ConnectionsList get_Connections();
    public void set_Connections(ConnectionsList value);
    internal bool IsSetConnections();
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public Dictionary`2<string, string> get_DefaultArguments();
    public void set_DefaultArguments(Dictionary`2<string, string> value);
    internal bool IsSetDefaultArguments();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<double> get_DPUSeconds();
    public void set_DPUSeconds(Nullable`1<double> value);
    internal bool IsSetDPUSeconds();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public Nullable`1<double> get_ExecutionTime();
    public void set_ExecutionTime(Nullable`1<double> value);
    internal bool IsSetExecutionTime();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_IdleTimeout();
    public void set_IdleTimeout(Nullable`1<int> value);
    internal bool IsSetIdleTimeout();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_ProfileName();
    public void set_ProfileName(string value);
    internal bool IsSetProfileName();
    public Nullable`1<double> get_Progress();
    public void set_Progress(Nullable`1<double> value);
    internal bool IsSetProgress();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public SessionStatus get_Status();
    public void set_Status(SessionStatus value);
    internal bool IsSetStatus();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.SessionCommand : object {
    private string _name;
    private string _pythonVersion;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string PythonVersion { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PythonVersion();
    public void set_PythonVersion(string value);
    internal bool IsSetPythonVersion();
}
public class Amazon.Glue.Model.SkewedInfo : object {
    private List`1<string> _skewedColumnNames;
    private Dictionary`2<string, string> _skewedColumnValueLocationMaps;
    private List`1<string> _skewedColumnValues;
    public List`1<string> SkewedColumnNames { get; public set; }
    public Dictionary`2<string, string> SkewedColumnValueLocationMaps { get; public set; }
    public List`1<string> SkewedColumnValues { get; public set; }
    public List`1<string> get_SkewedColumnNames();
    public void set_SkewedColumnNames(List`1<string> value);
    internal bool IsSetSkewedColumnNames();
    public Dictionary`2<string, string> get_SkewedColumnValueLocationMaps();
    public void set_SkewedColumnValueLocationMaps(Dictionary`2<string, string> value);
    internal bool IsSetSkewedColumnValueLocationMaps();
    public List`1<string> get_SkewedColumnValues();
    public void set_SkewedColumnValues(List`1<string> value);
    internal bool IsSetSkewedColumnValues();
}
public class Amazon.Glue.Model.SnowflakeNodeData : object {
    private string _action;
    private Dictionary`2<string, string> _additionalOptions;
    private Nullable`1<bool> _autoPushdown;
    private Option _connection;
    private string _database;
    private Option _iamRole;
    private string _mergeAction;
    private string _mergeClause;
    private string _mergeWhenMatched;
    private string _mergeWhenNotMatched;
    private string _postAction;
    private string _preAction;
    private string _sampleQuery;
    private string _schema;
    private List`1<Option> _selectedColumns;
    private string _sourceType;
    private string _stagingTable;
    private string _table;
    private List`1<Option> _tableSchema;
    private string _tempDir;
    private Nullable`1<bool> _upsert;
    public string Action { get; public set; }
    public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    public Nullable`1<bool> AutoPushdown { get; public set; }
    public Option Connection { get; public set; }
    public string Database { get; public set; }
    public Option IamRole { get; public set; }
    public string MergeAction { get; public set; }
    public string MergeClause { get; public set; }
    public string MergeWhenMatched { get; public set; }
    public string MergeWhenNotMatched { get; public set; }
    public string PostAction { get; public set; }
    public string PreAction { get; public set; }
    public string SampleQuery { get; public set; }
    public string Schema { get; public set; }
    public List`1<Option> SelectedColumns { get; public set; }
    public string SourceType { get; public set; }
    public string StagingTable { get; public set; }
    public string Table { get; public set; }
    public List`1<Option> TableSchema { get; public set; }
    public string TempDir { get; public set; }
    public Nullable`1<bool> Upsert { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public Nullable`1<bool> get_AutoPushdown();
    public void set_AutoPushdown(Nullable`1<bool> value);
    internal bool IsSetAutoPushdown();
    public Option get_Connection();
    public void set_Connection(Option value);
    internal bool IsSetConnection();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public Option get_IamRole();
    public void set_IamRole(Option value);
    internal bool IsSetIamRole();
    public string get_MergeAction();
    public void set_MergeAction(string value);
    internal bool IsSetMergeAction();
    public string get_MergeClause();
    public void set_MergeClause(string value);
    internal bool IsSetMergeClause();
    public string get_MergeWhenMatched();
    public void set_MergeWhenMatched(string value);
    internal bool IsSetMergeWhenMatched();
    public string get_MergeWhenNotMatched();
    public void set_MergeWhenNotMatched(string value);
    internal bool IsSetMergeWhenNotMatched();
    public string get_PostAction();
    public void set_PostAction(string value);
    internal bool IsSetPostAction();
    public string get_PreAction();
    public void set_PreAction(string value);
    internal bool IsSetPreAction();
    public string get_SampleQuery();
    public void set_SampleQuery(string value);
    internal bool IsSetSampleQuery();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
    public List`1<Option> get_SelectedColumns();
    public void set_SelectedColumns(List`1<Option> value);
    internal bool IsSetSelectedColumns();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_StagingTable();
    public void set_StagingTable(string value);
    internal bool IsSetStagingTable();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public List`1<Option> get_TableSchema();
    public void set_TableSchema(List`1<Option> value);
    internal bool IsSetTableSchema();
    public string get_TempDir();
    public void set_TempDir(string value);
    internal bool IsSetTempDir();
    public Nullable`1<bool> get_Upsert();
    public void set_Upsert(Nullable`1<bool> value);
    internal bool IsSetUpsert();
}
public class Amazon.Glue.Model.SnowflakeSource : object {
    private SnowflakeNodeData _data;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    [AWSPropertyAttribute]
public SnowflakeNodeData Data { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public SnowflakeNodeData get_Data();
    public void set_Data(SnowflakeNodeData value);
    internal bool IsSetData();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
}
public class Amazon.Glue.Model.SnowflakeTarget : object {
    private SnowflakeNodeData _data;
    private List`1<string> _inputs;
    private string _name;
    [AWSPropertyAttribute]
public SnowflakeNodeData Data { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public SnowflakeNodeData get_Data();
    public void set_Data(SnowflakeNodeData value);
    internal bool IsSetData();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.SortCriterion : object {
    private string _fieldName;
    private Sort _sort;
    [AWSPropertyAttribute]
public string FieldName { get; public set; }
    public Sort Sort { get; public set; }
    public string get_FieldName();
    public void set_FieldName(string value);
    internal bool IsSetFieldName();
    public Sort get_Sort();
    public void set_Sort(Sort value);
    internal bool IsSetSort();
}
public class Amazon.Glue.Model.SourceControlDetails : object {
    private SourceControlAuthStrategy _authStrategy;
    private string _authToken;
    private string _branch;
    private string _folder;
    private string _lastCommitId;
    private string _owner;
    private SourceControlProvider _provider;
    private string _repository;
    public SourceControlAuthStrategy AuthStrategy { get; public set; }
    [AWSPropertyAttribute]
public string AuthToken { get; public set; }
    [AWSPropertyAttribute]
public string Branch { get; public set; }
    [AWSPropertyAttribute]
public string Folder { get; public set; }
    [AWSPropertyAttribute]
public string LastCommitId { get; public set; }
    [AWSPropertyAttribute]
public string Owner { get; public set; }
    public SourceControlProvider Provider { get; public set; }
    [AWSPropertyAttribute]
public string Repository { get; public set; }
    public SourceControlAuthStrategy get_AuthStrategy();
    public void set_AuthStrategy(SourceControlAuthStrategy value);
    internal bool IsSetAuthStrategy();
    public string get_AuthToken();
    public void set_AuthToken(string value);
    internal bool IsSetAuthToken();
    public string get_Branch();
    public void set_Branch(string value);
    internal bool IsSetBranch();
    public string get_Folder();
    public void set_Folder(string value);
    internal bool IsSetFolder();
    public string get_LastCommitId();
    public void set_LastCommitId(string value);
    internal bool IsSetLastCommitId();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public SourceControlProvider get_Provider();
    public void set_Provider(SourceControlProvider value);
    internal bool IsSetProvider();
    public string get_Repository();
    public void set_Repository(string value);
    internal bool IsSetRepository();
}
public class Amazon.Glue.Model.SparkConnectorSource : object {
    private Dictionary`2<string, string> _additionalOptions;
    private string _connectionName;
    private string _connectionType;
    private string _connectorName;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public string ConnectorName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_ConnectionType();
    public void set_ConnectionType(string value);
    internal bool IsSetConnectionType();
    public string get_ConnectorName();
    public void set_ConnectorName(string value);
    internal bool IsSetConnectorName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
}
public class Amazon.Glue.Model.SparkConnectorTarget : object {
    private Dictionary`2<string, string> _additionalOptions;
    private string _connectionName;
    private string _connectionType;
    private string _connectorName;
    private List`1<string> _inputs;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    public Dictionary`2<string, string> AdditionalOptions { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionName { get; public set; }
    [AWSPropertyAttribute]
public string ConnectionType { get; public set; }
    [AWSPropertyAttribute]
public string ConnectorName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    public Dictionary`2<string, string> get_AdditionalOptions();
    public void set_AdditionalOptions(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalOptions();
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_ConnectionType();
    public void set_ConnectionType(string value);
    internal bool IsSetConnectionType();
    public string get_ConnectorName();
    public void set_ConnectorName(string value);
    internal bool IsSetConnectorName();
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
}
public class Amazon.Glue.Model.SparkSQL : object {
    private List`1<string> _inputs;
    private string _name;
    private List`1<GlueSchema> _outputSchemas;
    private List`1<SqlAlias> _sqlAliases;
    private string _sqlQuery;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<GlueSchema> OutputSchemas { get; public set; }
    [AWSPropertyAttribute]
public List`1<SqlAlias> SqlAliases { get; public set; }
    [AWSPropertyAttribute]
public string SqlQuery { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<GlueSchema> get_OutputSchemas();
    public void set_OutputSchemas(List`1<GlueSchema> value);
    internal bool IsSetOutputSchemas();
    public List`1<SqlAlias> get_SqlAliases();
    public void set_SqlAliases(List`1<SqlAlias> value);
    internal bool IsSetSqlAliases();
    public string get_SqlQuery();
    public void set_SqlQuery(string value);
    internal bool IsSetSqlQuery();
}
public class Amazon.Glue.Model.Spigot : object {
    private List`1<string> _inputs;
    private string _name;
    private string _path;
    private Nullable`1<double> _prob;
    private Nullable`1<int> _topk;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Prob { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Topk { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public Nullable`1<double> get_Prob();
    public void set_Prob(Nullable`1<double> value);
    internal bool IsSetProb();
    public Nullable`1<int> get_Topk();
    public void set_Topk(Nullable`1<int> value);
    internal bool IsSetTopk();
}
public class Amazon.Glue.Model.SplitFields : object {
    private List`1<string> _inputs;
    private string _name;
    private List`1<List`1<string>> _paths;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<List`1<string>> Paths { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<List`1<string>> get_Paths();
    public void set_Paths(List`1<List`1<string>> value);
    internal bool IsSetPaths();
}
public class Amazon.Glue.Model.SqlAlias : object {
    private string _alias;
    private string _from;
    [AWSPropertyAttribute]
public string Alias { get; public set; }
    [AWSPropertyAttribute]
public string From { get; public set; }
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
    public string get_From();
    public void set_From(string value);
    internal bool IsSetFrom();
}
public class Amazon.Glue.Model.StartBlueprintRunRequest : AmazonGlueRequest {
    private string _blueprintName;
    private string _parameters;
    private string _roleArn;
    [AWSPropertyAttribute]
public string BlueprintName { get; public set; }
    [AWSPropertyAttribute]
public string Parameters { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_BlueprintName();
    public void set_BlueprintName(string value);
    internal bool IsSetBlueprintName();
    public string get_Parameters();
    public void set_Parameters(string value);
    internal bool IsSetParameters();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.Glue.Model.StartBlueprintRunResponse : AmazonWebServiceResponse {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.StartColumnStatisticsTaskRunRequest : AmazonGlueRequest {
    private string _catalogID;
    private List`1<string> _columnNameList;
    private string _databaseName;
    private string _role;
    private Nullable`1<double> _sampleSize;
    private string _securityConfiguration;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogID { get; public set; }
    public List`1<string> ColumnNameList { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> SampleSize { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogID();
    public void set_CatalogID(string value);
    internal bool IsSetCatalogID();
    public List`1<string> get_ColumnNameList();
    public void set_ColumnNameList(List`1<string> value);
    internal bool IsSetColumnNameList();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Nullable`1<double> get_SampleSize();
    public void set_SampleSize(Nullable`1<double> value);
    internal bool IsSetSampleSize();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.StartColumnStatisticsTaskRunResponse : AmazonWebServiceResponse {
    private string _columnStatisticsTaskRunId;
    [AWSPropertyAttribute]
public string ColumnStatisticsTaskRunId { get; public set; }
    public string get_ColumnStatisticsTaskRunId();
    public void set_ColumnStatisticsTaskRunId(string value);
    internal bool IsSetColumnStatisticsTaskRunId();
}
public class Amazon.Glue.Model.StartCrawlerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.StartCrawlerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.StartCrawlerScheduleRequest : AmazonGlueRequest {
    private string _crawlerName;
    [AWSPropertyAttribute]
public string CrawlerName { get; public set; }
    public string get_CrawlerName();
    public void set_CrawlerName(string value);
    internal bool IsSetCrawlerName();
}
public class Amazon.Glue.Model.StartCrawlerScheduleResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.StartDataQualityRuleRecommendationRunRequest : AmazonGlueRequest {
    private string _clientToken;
    private string _createdRulesetName;
    private DataSource _dataSource;
    private Nullable`1<int> _numberOfWorkers;
    private string _role;
    private Nullable`1<int> _timeout;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string CreatedRulesetName { get; public set; }
    [AWSPropertyAttribute]
public DataSource DataSource { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_CreatedRulesetName();
    public void set_CreatedRulesetName(string value);
    internal bool IsSetCreatedRulesetName();
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
}
public class Amazon.Glue.Model.StartDataQualityRuleRecommendationRunResponse : AmazonWebServiceResponse {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.StartDataQualityRulesetEvaluationRunRequest : AmazonGlueRequest {
    private Dictionary`2<string, DataSource> _additionalDataSources;
    private DataQualityEvaluationRunAdditionalRunOptions _additionalRunOptions;
    private string _clientToken;
    private DataSource _dataSource;
    private Nullable`1<int> _numberOfWorkers;
    private string _role;
    private List`1<string> _rulesetNames;
    private Nullable`1<int> _timeout;
    public Dictionary`2<string, DataSource> AdditionalDataSources { get; public set; }
    public DataQualityEvaluationRunAdditionalRunOptions AdditionalRunOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public DataSource DataSource { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RulesetNames { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public Dictionary`2<string, DataSource> get_AdditionalDataSources();
    public void set_AdditionalDataSources(Dictionary`2<string, DataSource> value);
    internal bool IsSetAdditionalDataSources();
    public DataQualityEvaluationRunAdditionalRunOptions get_AdditionalRunOptions();
    public void set_AdditionalRunOptions(DataQualityEvaluationRunAdditionalRunOptions value);
    internal bool IsSetAdditionalRunOptions();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public DataSource get_DataSource();
    public void set_DataSource(DataSource value);
    internal bool IsSetDataSource();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public List`1<string> get_RulesetNames();
    public void set_RulesetNames(List`1<string> value);
    internal bool IsSetRulesetNames();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
}
public class Amazon.Glue.Model.StartDataQualityRulesetEvaluationRunResponse : AmazonWebServiceResponse {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.StartExportLabelsTaskRunRequest : AmazonGlueRequest {
    private string _outputS3Path;
    private string _transformId;
    [AWSPropertyAttribute]
public string OutputS3Path { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_OutputS3Path();
    public void set_OutputS3Path(string value);
    internal bool IsSetOutputS3Path();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.StartExportLabelsTaskRunResponse : AmazonWebServiceResponse {
    private string _taskRunId;
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
}
public class Amazon.Glue.Model.StartImportLabelsTaskRunRequest : AmazonGlueRequest {
    private string _inputS3Path;
    private Nullable`1<bool> _replaceAllLabels;
    private string _transformId;
    [AWSPropertyAttribute]
public string InputS3Path { get; public set; }
    public Nullable`1<bool> ReplaceAllLabels { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_InputS3Path();
    public void set_InputS3Path(string value);
    internal bool IsSetInputS3Path();
    public Nullable`1<bool> get_ReplaceAllLabels();
    public void set_ReplaceAllLabels(Nullable`1<bool> value);
    internal bool IsSetReplaceAllLabels();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.StartImportLabelsTaskRunResponse : AmazonWebServiceResponse {
    private string _taskRunId;
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
}
public class Amazon.Glue.Model.StartingEventBatchCondition : object {
    private Nullable`1<int> _batchSize;
    private Nullable`1<int> _batchWindow;
    public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<int> BatchWindow { get; public set; }
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<int> get_BatchWindow();
    public void set_BatchWindow(Nullable`1<int> value);
    internal bool IsSetBatchWindow();
}
public class Amazon.Glue.Model.StartJobRunRequest : AmazonGlueRequest {
    private Nullable`1<int> _allocatedCapacity;
    private Dictionary`2<string, string> _arguments;
    private ExecutionClass _executionClass;
    private string _jobName;
    private string _jobRunId;
    private Nullable`1<double> _maxCapacity;
    private NotificationProperty _notificationProperty;
    private Nullable`1<int> _numberOfWorkers;
    private string _securityConfiguration;
    private Nullable`1<int> _timeout;
    private WorkerType _workerType;
    [ObsoleteAttribute("This property is deprecated, use MaxCapacity instead.")]
public Nullable`1<int> AllocatedCapacity { get; public set; }
    public Dictionary`2<string, string> Arguments { get; public set; }
    [AWSPropertyAttribute]
public ExecutionClass ExecutionClass { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public NotificationProperty NotificationProperty { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    [AWSPropertyAttribute]
public string SecurityConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public Nullable`1<int> get_AllocatedCapacity();
    public void set_AllocatedCapacity(Nullable`1<int> value);
    internal bool IsSetAllocatedCapacity();
    public Dictionary`2<string, string> get_Arguments();
    public void set_Arguments(Dictionary`2<string, string> value);
    internal bool IsSetArguments();
    public ExecutionClass get_ExecutionClass();
    public void set_ExecutionClass(ExecutionClass value);
    internal bool IsSetExecutionClass();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public NotificationProperty get_NotificationProperty();
    public void set_NotificationProperty(NotificationProperty value);
    internal bool IsSetNotificationProperty();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public string get_SecurityConfiguration();
    public void set_SecurityConfiguration(string value);
    internal bool IsSetSecurityConfiguration();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.StartJobRunResponse : AmazonWebServiceResponse {
    private string _jobRunId;
    [AWSPropertyAttribute]
public string JobRunId { get; public set; }
    public string get_JobRunId();
    public void set_JobRunId(string value);
    internal bool IsSetJobRunId();
}
public class Amazon.Glue.Model.StartMLEvaluationTaskRunRequest : AmazonGlueRequest {
    private string _transformId;
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.StartMLEvaluationTaskRunResponse : AmazonWebServiceResponse {
    private string _taskRunId;
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
}
public class Amazon.Glue.Model.StartMLLabelingSetGenerationTaskRunRequest : AmazonGlueRequest {
    private string _outputS3Path;
    private string _transformId;
    [AWSPropertyAttribute]
public string OutputS3Path { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_OutputS3Path();
    public void set_OutputS3Path(string value);
    internal bool IsSetOutputS3Path();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.StartMLLabelingSetGenerationTaskRunResponse : AmazonWebServiceResponse {
    private string _taskRunId;
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
}
public class Amazon.Glue.Model.StartTriggerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.StartTriggerResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.StartWorkflowRunRequest : AmazonGlueRequest {
    private string _name;
    private Dictionary`2<string, string> _runProperties;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> RunProperties { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_RunProperties();
    public void set_RunProperties(Dictionary`2<string, string> value);
    internal bool IsSetRunProperties();
}
public class Amazon.Glue.Model.StartWorkflowRunResponse : AmazonWebServiceResponse {
    private string _runId;
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.Statement : object {
    private string _code;
    private Nullable`1<long> _completedOn;
    private Nullable`1<int> _id;
    private StatementOutput _output;
    private Nullable`1<double> _progress;
    private Nullable`1<long> _startedOn;
    private StatementState _state;
    public string Code { get; public set; }
    public Nullable`1<long> CompletedOn { get; public set; }
    public Nullable`1<int> Id { get; public set; }
    public StatementOutput Output { get; public set; }
    public Nullable`1<double> Progress { get; public set; }
    public Nullable`1<long> StartedOn { get; public set; }
    public StatementState State { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public Nullable`1<long> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<long> value);
    internal bool IsSetCompletedOn();
    public Nullable`1<int> get_Id();
    public void set_Id(Nullable`1<int> value);
    internal bool IsSetId();
    public StatementOutput get_Output();
    public void set_Output(StatementOutput value);
    internal bool IsSetOutput();
    public Nullable`1<double> get_Progress();
    public void set_Progress(Nullable`1<double> value);
    internal bool IsSetProgress();
    public Nullable`1<long> get_StartedOn();
    public void set_StartedOn(Nullable`1<long> value);
    internal bool IsSetStartedOn();
    public StatementState get_State();
    public void set_State(StatementState value);
    internal bool IsSetState();
}
public class Amazon.Glue.Model.StatementOutput : object {
    private StatementOutputData _data;
    private string _errorName;
    private string _errorValue;
    private Nullable`1<int> _executionCount;
    private StatementState _status;
    private List`1<string> _traceback;
    public StatementOutputData Data { get; public set; }
    public string ErrorName { get; public set; }
    public string ErrorValue { get; public set; }
    public Nullable`1<int> ExecutionCount { get; public set; }
    public StatementState Status { get; public set; }
    public List`1<string> Traceback { get; public set; }
    public StatementOutputData get_Data();
    public void set_Data(StatementOutputData value);
    internal bool IsSetData();
    public string get_ErrorName();
    public void set_ErrorName(string value);
    internal bool IsSetErrorName();
    public string get_ErrorValue();
    public void set_ErrorValue(string value);
    internal bool IsSetErrorValue();
    public Nullable`1<int> get_ExecutionCount();
    public void set_ExecutionCount(Nullable`1<int> value);
    internal bool IsSetExecutionCount();
    public StatementState get_Status();
    public void set_Status(StatementState value);
    internal bool IsSetStatus();
    public List`1<string> get_Traceback();
    public void set_Traceback(List`1<string> value);
    internal bool IsSetTraceback();
}
public class Amazon.Glue.Model.StatementOutputData : object {
    private string _textPlain;
    public string TextPlain { get; public set; }
    public string get_TextPlain();
    public void set_TextPlain(string value);
    internal bool IsSetTextPlain();
}
public class Amazon.Glue.Model.StopColumnStatisticsTaskRunRequest : AmazonGlueRequest {
    private string _databaseName;
    private string _tableName;
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.StopColumnStatisticsTaskRunResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.StopCrawlerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.StopCrawlerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.StopCrawlerScheduleRequest : AmazonGlueRequest {
    private string _crawlerName;
    [AWSPropertyAttribute]
public string CrawlerName { get; public set; }
    public string get_CrawlerName();
    public void set_CrawlerName(string value);
    internal bool IsSetCrawlerName();
}
public class Amazon.Glue.Model.StopCrawlerScheduleResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.StopSessionRequest : AmazonGlueRequest {
    private string _id;
    private string _requestOrigin;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string RequestOrigin { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_RequestOrigin();
    public void set_RequestOrigin(string value);
    internal bool IsSetRequestOrigin();
}
public class Amazon.Glue.Model.StopSessionResponse : AmazonWebServiceResponse {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.Glue.Model.StopTriggerRequest : AmazonGlueRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.StopTriggerResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.StopWorkflowRunRequest : AmazonGlueRequest {
    private string _name;
    private string _runId;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RunId { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RunId();
    public void set_RunId(string value);
    internal bool IsSetRunId();
}
public class Amazon.Glue.Model.StopWorkflowRunResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.StorageDescriptor : object {
    private List`1<string> _additionalLocations;
    private List`1<string> _bucketColumns;
    private List`1<Column> _columns;
    private Nullable`1<bool> _compressed;
    private string _inputFormat;
    private string _location;
    private Nullable`1<int> _numberOfBuckets;
    private string _outputFormat;
    private Dictionary`2<string, string> _parameters;
    private SchemaReference _schemaReference;
    private SerDeInfo _serdeInfo;
    private SkewedInfo _skewedInfo;
    private List`1<Order> _sortColumns;
    private Nullable`1<bool> _storedAsSubDirectories;
    public List`1<string> AdditionalLocations { get; public set; }
    public List`1<string> BucketColumns { get; public set; }
    public List`1<Column> Columns { get; public set; }
    public Nullable`1<bool> Compressed { get; public set; }
    [AWSPropertyAttribute]
public string InputFormat { get; public set; }
    [AWSPropertyAttribute]
public string Location { get; public set; }
    public Nullable`1<int> NumberOfBuckets { get; public set; }
    [AWSPropertyAttribute]
public string OutputFormat { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public SchemaReference SchemaReference { get; public set; }
    public SerDeInfo SerdeInfo { get; public set; }
    public SkewedInfo SkewedInfo { get; public set; }
    public List`1<Order> SortColumns { get; public set; }
    public Nullable`1<bool> StoredAsSubDirectories { get; public set; }
    public List`1<string> get_AdditionalLocations();
    public void set_AdditionalLocations(List`1<string> value);
    internal bool IsSetAdditionalLocations();
    public List`1<string> get_BucketColumns();
    public void set_BucketColumns(List`1<string> value);
    internal bool IsSetBucketColumns();
    public List`1<Column> get_Columns();
    public void set_Columns(List`1<Column> value);
    internal bool IsSetColumns();
    public Nullable`1<bool> get_Compressed();
    public void set_Compressed(Nullable`1<bool> value);
    internal bool IsSetCompressed();
    public string get_InputFormat();
    public void set_InputFormat(string value);
    internal bool IsSetInputFormat();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public Nullable`1<int> get_NumberOfBuckets();
    public void set_NumberOfBuckets(Nullable`1<int> value);
    internal bool IsSetNumberOfBuckets();
    public string get_OutputFormat();
    public void set_OutputFormat(string value);
    internal bool IsSetOutputFormat();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public SchemaReference get_SchemaReference();
    public void set_SchemaReference(SchemaReference value);
    internal bool IsSetSchemaReference();
    public SerDeInfo get_SerdeInfo();
    public void set_SerdeInfo(SerDeInfo value);
    internal bool IsSetSerdeInfo();
    public SkewedInfo get_SkewedInfo();
    public void set_SkewedInfo(SkewedInfo value);
    internal bool IsSetSkewedInfo();
    public List`1<Order> get_SortColumns();
    public void set_SortColumns(List`1<Order> value);
    internal bool IsSetSortColumns();
    public Nullable`1<bool> get_StoredAsSubDirectories();
    public void set_StoredAsSubDirectories(Nullable`1<bool> value);
    internal bool IsSetStoredAsSubDirectories();
}
public class Amazon.Glue.Model.StreamingDataPreviewOptions : object {
    private Nullable`1<long> _pollingTime;
    private Nullable`1<long> _recordPollingLimit;
    [AWSPropertyAttribute]
public Nullable`1<long> PollingTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> RecordPollingLimit { get; public set; }
    public Nullable`1<long> get_PollingTime();
    public void set_PollingTime(Nullable`1<long> value);
    internal bool IsSetPollingTime();
    public Nullable`1<long> get_RecordPollingLimit();
    public void set_RecordPollingLimit(Nullable`1<long> value);
    internal bool IsSetRecordPollingLimit();
}
public class Amazon.Glue.Model.StringColumnStatisticsData : object {
    private Nullable`1<double> _averageLength;
    private Nullable`1<long> _maximumLength;
    private Nullable`1<long> _numberOfDistinctValues;
    private Nullable`1<long> _numberOfNulls;
    [AWSPropertyAttribute]
public Nullable`1<double> AverageLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaximumLength { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfDistinctValues { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfNulls { get; public set; }
    public Nullable`1<double> get_AverageLength();
    public void set_AverageLength(Nullable`1<double> value);
    internal bool IsSetAverageLength();
    public Nullable`1<long> get_MaximumLength();
    public void set_MaximumLength(Nullable`1<long> value);
    internal bool IsSetMaximumLength();
    public Nullable`1<long> get_NumberOfDistinctValues();
    public void set_NumberOfDistinctValues(Nullable`1<long> value);
    internal bool IsSetNumberOfDistinctValues();
    public Nullable`1<long> get_NumberOfNulls();
    public void set_NumberOfNulls(Nullable`1<long> value);
    internal bool IsSetNumberOfNulls();
}
public class Amazon.Glue.Model.SupportedDialect : object {
    private ViewDialect _dialect;
    private string _dialectVersion;
    public ViewDialect Dialect { get; public set; }
    [AWSPropertyAttribute]
public string DialectVersion { get; public set; }
    public ViewDialect get_Dialect();
    public void set_Dialect(ViewDialect value);
    internal bool IsSetDialect();
    public string get_DialectVersion();
    public void set_DialectVersion(string value);
    internal bool IsSetDialectVersion();
}
public class Amazon.Glue.Model.Table : object {
    private string _catalogId;
    private string _createdBy;
    private Nullable`1<DateTime> _createTime;
    private string _databaseName;
    private string _description;
    private FederatedTable _federatedTable;
    private Nullable`1<bool> _isMultiDialectView;
    private Nullable`1<bool> _isRegisteredWithLakeFormation;
    private Nullable`1<DateTime> _lastAccessTime;
    private Nullable`1<DateTime> _lastAnalyzedTime;
    private string _name;
    private string _owner;
    private Dictionary`2<string, string> _parameters;
    private List`1<Column> _partitionKeys;
    private Nullable`1<int> _retention;
    private StorageDescriptor _storageDescriptor;
    private string _tableType;
    private TableIdentifier _targetTable;
    private Nullable`1<DateTime> _updateTime;
    private string _versionId;
    private ViewDefinition _viewDefinition;
    private string _viewExpandedText;
    private string _viewOriginalText;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string CreatedBy { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public FederatedTable FederatedTable { get; public set; }
    public Nullable`1<bool> IsMultiDialectView { get; public set; }
    public Nullable`1<bool> IsRegisteredWithLakeFormation { get; public set; }
    public Nullable`1<DateTime> LastAccessTime { get; public set; }
    public Nullable`1<DateTime> LastAnalyzedTime { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Owner { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public List`1<Column> PartitionKeys { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Retention { get; public set; }
    public StorageDescriptor StorageDescriptor { get; public set; }
    [AWSPropertyAttribute]
public string TableType { get; public set; }
    public TableIdentifier TargetTable { get; public set; }
    public Nullable`1<DateTime> UpdateTime { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public ViewDefinition ViewDefinition { get; public set; }
    [AWSPropertyAttribute]
public string ViewExpandedText { get; public set; }
    [AWSPropertyAttribute]
public string ViewOriginalText { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    internal bool IsSetCreatedBy();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public FederatedTable get_FederatedTable();
    public void set_FederatedTable(FederatedTable value);
    internal bool IsSetFederatedTable();
    public Nullable`1<bool> get_IsMultiDialectView();
    public void set_IsMultiDialectView(Nullable`1<bool> value);
    internal bool IsSetIsMultiDialectView();
    public Nullable`1<bool> get_IsRegisteredWithLakeFormation();
    public void set_IsRegisteredWithLakeFormation(Nullable`1<bool> value);
    internal bool IsSetIsRegisteredWithLakeFormation();
    public Nullable`1<DateTime> get_LastAccessTime();
    public void set_LastAccessTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessTime();
    public Nullable`1<DateTime> get_LastAnalyzedTime();
    public void set_LastAnalyzedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAnalyzedTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public List`1<Column> get_PartitionKeys();
    public void set_PartitionKeys(List`1<Column> value);
    internal bool IsSetPartitionKeys();
    public Nullable`1<int> get_Retention();
    public void set_Retention(Nullable`1<int> value);
    internal bool IsSetRetention();
    public StorageDescriptor get_StorageDescriptor();
    public void set_StorageDescriptor(StorageDescriptor value);
    internal bool IsSetStorageDescriptor();
    public string get_TableType();
    public void set_TableType(string value);
    internal bool IsSetTableType();
    public TableIdentifier get_TargetTable();
    public void set_TargetTable(TableIdentifier value);
    internal bool IsSetTargetTable();
    public Nullable`1<DateTime> get_UpdateTime();
    public void set_UpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdateTime();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public ViewDefinition get_ViewDefinition();
    public void set_ViewDefinition(ViewDefinition value);
    internal bool IsSetViewDefinition();
    public string get_ViewExpandedText();
    public void set_ViewExpandedText(string value);
    internal bool IsSetViewExpandedText();
    public string get_ViewOriginalText();
    public void set_ViewOriginalText(string value);
    internal bool IsSetViewOriginalText();
}
public class Amazon.Glue.Model.TableError : object {
    private ErrorDetail _errorDetail;
    private string _tableName;
    public ErrorDetail ErrorDetail { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public ErrorDetail get_ErrorDetail();
    public void set_ErrorDetail(ErrorDetail value);
    internal bool IsSetErrorDetail();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.TableIdentifier : object {
    private string _catalogId;
    private string _databaseName;
    private string _name;
    private string _region;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
}
public class Amazon.Glue.Model.TableInput : object {
    private string _description;
    private Nullable`1<DateTime> _lastAccessTime;
    private Nullable`1<DateTime> _lastAnalyzedTime;
    private string _name;
    private string _owner;
    private Dictionary`2<string, string> _parameters;
    private List`1<Column> _partitionKeys;
    private Nullable`1<int> _retention;
    private StorageDescriptor _storageDescriptor;
    private string _tableType;
    private TableIdentifier _targetTable;
    private ViewDefinitionInput _viewDefinition;
    private string _viewExpandedText;
    private string _viewOriginalText;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastAccessTime { get; public set; }
    public Nullable`1<DateTime> LastAnalyzedTime { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Owner { get; public set; }
    public Dictionary`2<string, string> Parameters { get; public set; }
    public List`1<Column> PartitionKeys { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Retention { get; public set; }
    public StorageDescriptor StorageDescriptor { get; public set; }
    [AWSPropertyAttribute]
public string TableType { get; public set; }
    public TableIdentifier TargetTable { get; public set; }
    public ViewDefinitionInput ViewDefinition { get; public set; }
    [AWSPropertyAttribute]
public string ViewExpandedText { get; public set; }
    [AWSPropertyAttribute]
public string ViewOriginalText { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastAccessTime();
    public void set_LastAccessTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessTime();
    public Nullable`1<DateTime> get_LastAnalyzedTime();
    public void set_LastAnalyzedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastAnalyzedTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public Dictionary`2<string, string> get_Parameters();
    public void set_Parameters(Dictionary`2<string, string> value);
    internal bool IsSetParameters();
    public List`1<Column> get_PartitionKeys();
    public void set_PartitionKeys(List`1<Column> value);
    internal bool IsSetPartitionKeys();
    public Nullable`1<int> get_Retention();
    public void set_Retention(Nullable`1<int> value);
    internal bool IsSetRetention();
    public StorageDescriptor get_StorageDescriptor();
    public void set_StorageDescriptor(StorageDescriptor value);
    internal bool IsSetStorageDescriptor();
    public string get_TableType();
    public void set_TableType(string value);
    internal bool IsSetTableType();
    public TableIdentifier get_TargetTable();
    public void set_TargetTable(TableIdentifier value);
    internal bool IsSetTargetTable();
    public ViewDefinitionInput get_ViewDefinition();
    public void set_ViewDefinition(ViewDefinitionInput value);
    internal bool IsSetViewDefinition();
    public string get_ViewExpandedText();
    public void set_ViewExpandedText(string value);
    internal bool IsSetViewExpandedText();
    public string get_ViewOriginalText();
    public void set_ViewOriginalText(string value);
    internal bool IsSetViewOriginalText();
}
public class Amazon.Glue.Model.TableOptimizer : object {
    private TableOptimizerConfiguration _configuration;
    private TableOptimizerRun _lastRun;
    private TableOptimizerType _type;
    public TableOptimizerConfiguration Configuration { get; public set; }
    public TableOptimizerRun LastRun { get; public set; }
    public TableOptimizerType Type { get; public set; }
    public TableOptimizerConfiguration get_Configuration();
    public void set_Configuration(TableOptimizerConfiguration value);
    internal bool IsSetConfiguration();
    public TableOptimizerRun get_LastRun();
    public void set_LastRun(TableOptimizerRun value);
    internal bool IsSetLastRun();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.TableOptimizerConfiguration : object {
    private Nullable`1<bool> _enabled;
    private string _roleArn;
    public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.Glue.Model.TableOptimizerRun : object {
    private Nullable`1<DateTime> _endTimestamp;
    private string _error;
    private TableOptimizerEventType _eventType;
    private RunMetrics _metrics;
    private Nullable`1<DateTime> _startTimestamp;
    public Nullable`1<DateTime> EndTimestamp { get; public set; }
    public string Error { get; public set; }
    public TableOptimizerEventType EventType { get; public set; }
    public RunMetrics Metrics { get; public set; }
    public Nullable`1<DateTime> StartTimestamp { get; public set; }
    public Nullable`1<DateTime> get_EndTimestamp();
    public void set_EndTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetEndTimestamp();
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public TableOptimizerEventType get_EventType();
    public void set_EventType(TableOptimizerEventType value);
    internal bool IsSetEventType();
    public RunMetrics get_Metrics();
    public void set_Metrics(RunMetrics value);
    internal bool IsSetMetrics();
    public Nullable`1<DateTime> get_StartTimestamp();
    public void set_StartTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartTimestamp();
}
public class Amazon.Glue.Model.TableVersion : object {
    private Table _table;
    private string _versionId;
    public Table Table { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public Table get_Table();
    public void set_Table(Table value);
    internal bool IsSetTable();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.Glue.Model.TableVersionError : object {
    private ErrorDetail _errorDetail;
    private string _tableName;
    private string _versionId;
    public ErrorDetail ErrorDetail { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public ErrorDetail get_ErrorDetail();
    public void set_ErrorDetail(ErrorDetail value);
    internal bool IsSetErrorDetail();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.Glue.Model.TagResourceRequest : AmazonGlueRequest {
    private string _resourceArn;
    private Dictionary`2<string, string> _tagsToAdd;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> TagsToAdd { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_TagsToAdd();
    public void set_TagsToAdd(Dictionary`2<string, string> value);
    internal bool IsSetTagsToAdd();
}
public class Amazon.Glue.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.TaskRun : object {
    private Nullable`1<DateTime> _completedOn;
    private string _errorString;
    private Nullable`1<int> _executionTime;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _logGroupName;
    private TaskRunProperties _properties;
    private Nullable`1<DateTime> _startedOn;
    private TaskStatusType _status;
    private string _taskRunId;
    private string _transformId;
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public string ErrorString { get; public set; }
    public Nullable`1<int> ExecutionTime { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public string LogGroupName { get; public set; }
    public TaskRunProperties Properties { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public TaskStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public string TaskRunId { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public string get_ErrorString();
    public void set_ErrorString(string value);
    internal bool IsSetErrorString();
    public Nullable`1<int> get_ExecutionTime();
    public void set_ExecutionTime(Nullable`1<int> value);
    internal bool IsSetExecutionTime();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public TaskRunProperties get_Properties();
    public void set_Properties(TaskRunProperties value);
    internal bool IsSetProperties();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
    public string get_TaskRunId();
    public void set_TaskRunId(string value);
    internal bool IsSetTaskRunId();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.TaskRunFilterCriteria : object {
    private Nullable`1<DateTime> _startedAfter;
    private Nullable`1<DateTime> _startedBefore;
    private TaskStatusType _status;
    private TaskType _taskRunType;
    public Nullable`1<DateTime> StartedAfter { get; public set; }
    public Nullable`1<DateTime> StartedBefore { get; public set; }
    public TaskStatusType Status { get; public set; }
    public TaskType TaskRunType { get; public set; }
    public Nullable`1<DateTime> get_StartedAfter();
    public void set_StartedAfter(Nullable`1<DateTime> value);
    internal bool IsSetStartedAfter();
    public Nullable`1<DateTime> get_StartedBefore();
    public void set_StartedBefore(Nullable`1<DateTime> value);
    internal bool IsSetStartedBefore();
    public TaskStatusType get_Status();
    public void set_Status(TaskStatusType value);
    internal bool IsSetStatus();
    public TaskType get_TaskRunType();
    public void set_TaskRunType(TaskType value);
    internal bool IsSetTaskRunType();
}
public class Amazon.Glue.Model.TaskRunProperties : object {
    private ExportLabelsTaskRunProperties _exportLabelsTaskRunProperties;
    private FindMatchesTaskRunProperties _findMatchesTaskRunProperties;
    private ImportLabelsTaskRunProperties _importLabelsTaskRunProperties;
    private LabelingSetGenerationTaskRunProperties _labelingSetGenerationTaskRunProperties;
    private TaskType _taskType;
    public ExportLabelsTaskRunProperties ExportLabelsTaskRunProperties { get; public set; }
    public FindMatchesTaskRunProperties FindMatchesTaskRunProperties { get; public set; }
    public ImportLabelsTaskRunProperties ImportLabelsTaskRunProperties { get; public set; }
    public LabelingSetGenerationTaskRunProperties LabelingSetGenerationTaskRunProperties { get; public set; }
    public TaskType TaskType { get; public set; }
    public ExportLabelsTaskRunProperties get_ExportLabelsTaskRunProperties();
    public void set_ExportLabelsTaskRunProperties(ExportLabelsTaskRunProperties value);
    internal bool IsSetExportLabelsTaskRunProperties();
    public FindMatchesTaskRunProperties get_FindMatchesTaskRunProperties();
    public void set_FindMatchesTaskRunProperties(FindMatchesTaskRunProperties value);
    internal bool IsSetFindMatchesTaskRunProperties();
    public ImportLabelsTaskRunProperties get_ImportLabelsTaskRunProperties();
    public void set_ImportLabelsTaskRunProperties(ImportLabelsTaskRunProperties value);
    internal bool IsSetImportLabelsTaskRunProperties();
    public LabelingSetGenerationTaskRunProperties get_LabelingSetGenerationTaskRunProperties();
    public void set_LabelingSetGenerationTaskRunProperties(LabelingSetGenerationTaskRunProperties value);
    internal bool IsSetLabelingSetGenerationTaskRunProperties();
    public TaskType get_TaskType();
    public void set_TaskType(TaskType value);
    internal bool IsSetTaskType();
}
public class Amazon.Glue.Model.TaskRunSortCriteria : object {
    private TaskRunSortColumnType _column;
    private SortDirectionType _sortDirection;
    [AWSPropertyAttribute]
public TaskRunSortColumnType Column { get; public set; }
    [AWSPropertyAttribute]
public SortDirectionType SortDirection { get; public set; }
    public TaskRunSortColumnType get_Column();
    public void set_Column(TaskRunSortColumnType value);
    internal bool IsSetColumn();
    public SortDirectionType get_SortDirection();
    public void set_SortDirection(SortDirectionType value);
    internal bool IsSetSortDirection();
}
public class Amazon.Glue.Model.TransformConfigParameter : object {
    private Nullable`1<bool> _isOptional;
    private ParamType _listType;
    private string _name;
    private ParamType _type;
    private string _validationMessage;
    private string _validationRule;
    private List`1<string> _value;
    public Nullable`1<bool> IsOptional { get; public set; }
    public ParamType ListType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public ParamType Type { get; public set; }
    public string ValidationMessage { get; public set; }
    public string ValidationRule { get; public set; }
    public List`1<string> Value { get; public set; }
    public Nullable`1<bool> get_IsOptional();
    public void set_IsOptional(Nullable`1<bool> value);
    internal bool IsSetIsOptional();
    public ParamType get_ListType();
    public void set_ListType(ParamType value);
    internal bool IsSetListType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParamType get_Type();
    public void set_Type(ParamType value);
    internal bool IsSetType();
    public string get_ValidationMessage();
    public void set_ValidationMessage(string value);
    internal bool IsSetValidationMessage();
    public string get_ValidationRule();
    public void set_ValidationRule(string value);
    internal bool IsSetValidationRule();
    public List`1<string> get_Value();
    public void set_Value(List`1<string> value);
    internal bool IsSetValue();
}
public class Amazon.Glue.Model.TransformEncryption : object {
    private MLUserDataEncryption _mlUserDataEncryption;
    private string _taskRunSecurityConfigurationName;
    public MLUserDataEncryption MlUserDataEncryption { get; public set; }
    [AWSPropertyAttribute]
public string TaskRunSecurityConfigurationName { get; public set; }
    public MLUserDataEncryption get_MlUserDataEncryption();
    public void set_MlUserDataEncryption(MLUserDataEncryption value);
    internal bool IsSetMlUserDataEncryption();
    public string get_TaskRunSecurityConfigurationName();
    public void set_TaskRunSecurityConfigurationName(string value);
    internal bool IsSetTaskRunSecurityConfigurationName();
}
public class Amazon.Glue.Model.TransformFilterCriteria : object {
    private Nullable`1<DateTime> _createdAfter;
    private Nullable`1<DateTime> _createdBefore;
    private string _glueVersion;
    private Nullable`1<DateTime> _lastModifiedAfter;
    private Nullable`1<DateTime> _lastModifiedBefore;
    private string _name;
    private List`1<SchemaColumn> _schema;
    private TransformStatusType _status;
    private TransformType _transformType;
    public Nullable`1<DateTime> CreatedAfter { get; public set; }
    public Nullable`1<DateTime> CreatedBefore { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public Nullable`1<DateTime> LastModifiedAfter { get; public set; }
    public Nullable`1<DateTime> LastModifiedBefore { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<SchemaColumn> Schema { get; public set; }
    public TransformStatusType Status { get; public set; }
    public TransformType TransformType { get; public set; }
    public Nullable`1<DateTime> get_CreatedAfter();
    public void set_CreatedAfter(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAfter();
    public Nullable`1<DateTime> get_CreatedBefore();
    public void set_CreatedBefore(Nullable`1<DateTime> value);
    internal bool IsSetCreatedBefore();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public Nullable`1<DateTime> get_LastModifiedAfter();
    public void set_LastModifiedAfter(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedAfter();
    public Nullable`1<DateTime> get_LastModifiedBefore();
    public void set_LastModifiedBefore(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedBefore();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<SchemaColumn> get_Schema();
    public void set_Schema(List`1<SchemaColumn> value);
    internal bool IsSetSchema();
    public TransformStatusType get_Status();
    public void set_Status(TransformStatusType value);
    internal bool IsSetStatus();
    public TransformType get_TransformType();
    public void set_TransformType(TransformType value);
    internal bool IsSetTransformType();
}
public class Amazon.Glue.Model.TransformParameters : object {
    private FindMatchesParameters _findMatchesParameters;
    private TransformType _transformType;
    public FindMatchesParameters FindMatchesParameters { get; public set; }
    [AWSPropertyAttribute]
public TransformType TransformType { get; public set; }
    public FindMatchesParameters get_FindMatchesParameters();
    public void set_FindMatchesParameters(FindMatchesParameters value);
    internal bool IsSetFindMatchesParameters();
    public TransformType get_TransformType();
    public void set_TransformType(TransformType value);
    internal bool IsSetTransformType();
}
public class Amazon.Glue.Model.TransformSortCriteria : object {
    private TransformSortColumnType _column;
    private SortDirectionType _sortDirection;
    [AWSPropertyAttribute]
public TransformSortColumnType Column { get; public set; }
    [AWSPropertyAttribute]
public SortDirectionType SortDirection { get; public set; }
    public TransformSortColumnType get_Column();
    public void set_Column(TransformSortColumnType value);
    internal bool IsSetColumn();
    public SortDirectionType get_SortDirection();
    public void set_SortDirection(SortDirectionType value);
    internal bool IsSetSortDirection();
}
public class Amazon.Glue.Model.Trigger : object {
    private List`1<Action> _actions;
    private string _description;
    private EventBatchingCondition _eventBatchingCondition;
    private string _id;
    private string _name;
    private Predicate _predicate;
    private string _schedule;
    private TriggerState _state;
    private TriggerType _type;
    private string _workflowName;
    public List`1<Action> Actions { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EventBatchingCondition EventBatchingCondition { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Predicate Predicate { get; public set; }
    public string Schedule { get; public set; }
    public TriggerState State { get; public set; }
    public TriggerType Type { get; public set; }
    [AWSPropertyAttribute]
public string WorkflowName { get; public set; }
    public List`1<Action> get_Actions();
    public void set_Actions(List`1<Action> value);
    internal bool IsSetActions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EventBatchingCondition get_EventBatchingCondition();
    public void set_EventBatchingCondition(EventBatchingCondition value);
    internal bool IsSetEventBatchingCondition();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Predicate get_Predicate();
    public void set_Predicate(Predicate value);
    internal bool IsSetPredicate();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public TriggerState get_State();
    public void set_State(TriggerState value);
    internal bool IsSetState();
    public TriggerType get_Type();
    public void set_Type(TriggerType value);
    internal bool IsSetType();
    public string get_WorkflowName();
    public void set_WorkflowName(string value);
    internal bool IsSetWorkflowName();
}
public class Amazon.Glue.Model.TriggerNodeDetails : object {
    private Trigger _trigger;
    public Trigger Trigger { get; public set; }
    public Trigger get_Trigger();
    public void set_Trigger(Trigger value);
    internal bool IsSetTrigger();
}
public class Amazon.Glue.Model.TriggerUpdate : object {
    private List`1<Action> _actions;
    private string _description;
    private EventBatchingCondition _eventBatchingCondition;
    private string _name;
    private Predicate _predicate;
    private string _schedule;
    public List`1<Action> Actions { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EventBatchingCondition EventBatchingCondition { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Predicate Predicate { get; public set; }
    public string Schedule { get; public set; }
    public List`1<Action> get_Actions();
    public void set_Actions(List`1<Action> value);
    internal bool IsSetActions();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EventBatchingCondition get_EventBatchingCondition();
    public void set_EventBatchingCondition(EventBatchingCondition value);
    internal bool IsSetEventBatchingCondition();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Predicate get_Predicate();
    public void set_Predicate(Predicate value);
    internal bool IsSetPredicate();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
}
public class Amazon.Glue.Model.UnfilteredPartition : object {
    private List`1<string> _authorizedColumns;
    private Nullable`1<bool> _isRegisteredWithLakeFormation;
    private Partition _partition;
    public List`1<string> AuthorizedColumns { get; public set; }
    public Nullable`1<bool> IsRegisteredWithLakeFormation { get; public set; }
    public Partition Partition { get; public set; }
    public List`1<string> get_AuthorizedColumns();
    public void set_AuthorizedColumns(List`1<string> value);
    internal bool IsSetAuthorizedColumns();
    public Nullable`1<bool> get_IsRegisteredWithLakeFormation();
    public void set_IsRegisteredWithLakeFormation(Nullable`1<bool> value);
    internal bool IsSetIsRegisteredWithLakeFormation();
    public Partition get_Partition();
    public void set_Partition(Partition value);
    internal bool IsSetPartition();
}
public class Amazon.Glue.Model.Union : object {
    private List`1<string> _inputs;
    private string _name;
    private UnionType _unionType;
    [AWSPropertyAttribute]
public List`1<string> Inputs { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public UnionType UnionType { get; public set; }
    public List`1<string> get_Inputs();
    public void set_Inputs(List`1<string> value);
    internal bool IsSetInputs();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public UnionType get_UnionType();
    public void set_UnionType(UnionType value);
    internal bool IsSetUnionType();
}
public class Amazon.Glue.Model.UntagResourceRequest : AmazonGlueRequest {
    private string _resourceArn;
    private List`1<string> _tagsToRemove;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagsToRemove { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagsToRemove();
    public void set_TagsToRemove(List`1<string> value);
    internal bool IsSetTagsToRemove();
}
public class Amazon.Glue.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateBlueprintRequest : AmazonGlueRequest {
    private string _blueprintLocation;
    private string _description;
    private string _name;
    [AWSPropertyAttribute]
public string BlueprintLocation { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_BlueprintLocation();
    public void set_BlueprintLocation(string value);
    internal bool IsSetBlueprintLocation();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateBlueprintResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateClassifierRequest : AmazonGlueRequest {
    private UpdateCsvClassifierRequest _csvClassifier;
    private UpdateGrokClassifierRequest _grokClassifier;
    private UpdateJsonClassifierRequest _jsonClassifier;
    private UpdateXMLClassifierRequest _xmlClassifier;
    public UpdateCsvClassifierRequest CsvClassifier { get; public set; }
    public UpdateGrokClassifierRequest GrokClassifier { get; public set; }
    public UpdateJsonClassifierRequest JsonClassifier { get; public set; }
    public UpdateXMLClassifierRequest XMLClassifier { get; public set; }
    public UpdateCsvClassifierRequest get_CsvClassifier();
    public void set_CsvClassifier(UpdateCsvClassifierRequest value);
    internal bool IsSetCsvClassifier();
    public UpdateGrokClassifierRequest get_GrokClassifier();
    public void set_GrokClassifier(UpdateGrokClassifierRequest value);
    internal bool IsSetGrokClassifier();
    public UpdateJsonClassifierRequest get_JsonClassifier();
    public void set_JsonClassifier(UpdateJsonClassifierRequest value);
    internal bool IsSetJsonClassifier();
    public UpdateXMLClassifierRequest get_XMLClassifier();
    public void set_XMLClassifier(UpdateXMLClassifierRequest value);
    internal bool IsSetXMLClassifier();
}
public class Amazon.Glue.Model.UpdateClassifierResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateColumnStatisticsForPartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private List`1<ColumnStatistics> _columnStatisticsList;
    private string _databaseName;
    private List`1<string> _partitionValues;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public List`1<ColumnStatistics> ColumnStatisticsList { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValues { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public List`1<ColumnStatistics> get_ColumnStatisticsList();
    public void set_ColumnStatisticsList(List`1<ColumnStatistics> value);
    internal bool IsSetColumnStatisticsList();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public List`1<string> get_PartitionValues();
    public void set_PartitionValues(List`1<string> value);
    internal bool IsSetPartitionValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.UpdateColumnStatisticsForPartitionResponse : AmazonWebServiceResponse {
    private List`1<ColumnStatisticsError> _errors;
    public List`1<ColumnStatisticsError> Errors { get; public set; }
    public List`1<ColumnStatisticsError> get_Errors();
    public void set_Errors(List`1<ColumnStatisticsError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.UpdateColumnStatisticsForTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private List`1<ColumnStatistics> _columnStatisticsList;
    private string _databaseName;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public List`1<ColumnStatistics> ColumnStatisticsList { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public List`1<ColumnStatistics> get_ColumnStatisticsList();
    public void set_ColumnStatisticsList(List`1<ColumnStatistics> value);
    internal bool IsSetColumnStatisticsList();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.UpdateColumnStatisticsForTableResponse : AmazonWebServiceResponse {
    private List`1<ColumnStatisticsError> _errors;
    public List`1<ColumnStatisticsError> Errors { get; public set; }
    public List`1<ColumnStatisticsError> get_Errors();
    public void set_Errors(List`1<ColumnStatisticsError> value);
    internal bool IsSetErrors();
}
public class Amazon.Glue.Model.UpdateConnectionRequest : AmazonGlueRequest {
    private string _catalogId;
    private ConnectionInput _connectionInput;
    private string _name;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public ConnectionInput ConnectionInput { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public ConnectionInput get_ConnectionInput();
    public void set_ConnectionInput(ConnectionInput value);
    internal bool IsSetConnectionInput();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateCrawlerRequest : AmazonGlueRequest {
    private List`1<string> _classifiers;
    private string _configuration;
    private string _crawlerSecurityConfiguration;
    private string _databaseName;
    private string _description;
    private LakeFormationConfiguration _lakeFormationConfiguration;
    private LineageConfiguration _lineageConfiguration;
    private string _name;
    private RecrawlPolicy _recrawlPolicy;
    private string _role;
    private string _schedule;
    private SchemaChangePolicy _schemaChangePolicy;
    private string _tablePrefix;
    private CrawlerTargets _targets;
    public List`1<string> Classifiers { get; public set; }
    public string Configuration { get; public set; }
    [AWSPropertyAttribute]
public string CrawlerSecurityConfiguration { get; public set; }
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LakeFormationConfiguration LakeFormationConfiguration { get; public set; }
    public LineageConfiguration LineageConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public RecrawlPolicy RecrawlPolicy { get; public set; }
    public string Role { get; public set; }
    public string Schedule { get; public set; }
    public SchemaChangePolicy SchemaChangePolicy { get; public set; }
    [AWSPropertyAttribute]
public string TablePrefix { get; public set; }
    public CrawlerTargets Targets { get; public set; }
    public List`1<string> get_Classifiers();
    public void set_Classifiers(List`1<string> value);
    internal bool IsSetClassifiers();
    public string get_Configuration();
    public void set_Configuration(string value);
    internal bool IsSetConfiguration();
    public string get_CrawlerSecurityConfiguration();
    public void set_CrawlerSecurityConfiguration(string value);
    internal bool IsSetCrawlerSecurityConfiguration();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LakeFormationConfiguration get_LakeFormationConfiguration();
    public void set_LakeFormationConfiguration(LakeFormationConfiguration value);
    internal bool IsSetLakeFormationConfiguration();
    public LineageConfiguration get_LineageConfiguration();
    public void set_LineageConfiguration(LineageConfiguration value);
    internal bool IsSetLineageConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public RecrawlPolicy get_RecrawlPolicy();
    public void set_RecrawlPolicy(RecrawlPolicy value);
    internal bool IsSetRecrawlPolicy();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public SchemaChangePolicy get_SchemaChangePolicy();
    public void set_SchemaChangePolicy(SchemaChangePolicy value);
    internal bool IsSetSchemaChangePolicy();
    public string get_TablePrefix();
    public void set_TablePrefix(string value);
    internal bool IsSetTablePrefix();
    public CrawlerTargets get_Targets();
    public void set_Targets(CrawlerTargets value);
    internal bool IsSetTargets();
}
public class Amazon.Glue.Model.UpdateCrawlerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateCrawlerScheduleRequest : AmazonGlueRequest {
    private string _crawlerName;
    private string _schedule;
    [AWSPropertyAttribute]
public string CrawlerName { get; public set; }
    public string Schedule { get; public set; }
    public string get_CrawlerName();
    public void set_CrawlerName(string value);
    internal bool IsSetCrawlerName();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
}
public class Amazon.Glue.Model.UpdateCrawlerScheduleResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateCsvClassifierRequest : object {
    private Nullable`1<bool> _allowSingleColumn;
    private CsvHeaderOption _containsHeader;
    private Nullable`1<bool> _customDatatypeConfigured;
    private List`1<string> _customDatatypes;
    private string _delimiter;
    private Nullable`1<bool> _disableValueTrimming;
    private List`1<string> _header;
    private string _name;
    private string _quoteSymbol;
    private CsvSerdeOption _serde;
    public Nullable`1<bool> AllowSingleColumn { get; public set; }
    public CsvHeaderOption ContainsHeader { get; public set; }
    public Nullable`1<bool> CustomDatatypeConfigured { get; public set; }
    public List`1<string> CustomDatatypes { get; public set; }
    [AWSPropertyAttribute]
public string Delimiter { get; public set; }
    public Nullable`1<bool> DisableValueTrimming { get; public set; }
    public List`1<string> Header { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string QuoteSymbol { get; public set; }
    public CsvSerdeOption Serde { get; public set; }
    public Nullable`1<bool> get_AllowSingleColumn();
    public void set_AllowSingleColumn(Nullable`1<bool> value);
    internal bool IsSetAllowSingleColumn();
    public CsvHeaderOption get_ContainsHeader();
    public void set_ContainsHeader(CsvHeaderOption value);
    internal bool IsSetContainsHeader();
    public Nullable`1<bool> get_CustomDatatypeConfigured();
    public void set_CustomDatatypeConfigured(Nullable`1<bool> value);
    internal bool IsSetCustomDatatypeConfigured();
    public List`1<string> get_CustomDatatypes();
    public void set_CustomDatatypes(List`1<string> value);
    internal bool IsSetCustomDatatypes();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public Nullable`1<bool> get_DisableValueTrimming();
    public void set_DisableValueTrimming(Nullable`1<bool> value);
    internal bool IsSetDisableValueTrimming();
    public List`1<string> get_Header();
    public void set_Header(List`1<string> value);
    internal bool IsSetHeader();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_QuoteSymbol();
    public void set_QuoteSymbol(string value);
    internal bool IsSetQuoteSymbol();
    public CsvSerdeOption get_Serde();
    public void set_Serde(CsvSerdeOption value);
    internal bool IsSetSerde();
}
public class Amazon.Glue.Model.UpdateDatabaseRequest : AmazonGlueRequest {
    private string _catalogId;
    private DatabaseInput _databaseInput;
    private string _name;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public DatabaseInput DatabaseInput { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public DatabaseInput get_DatabaseInput();
    public void set_DatabaseInput(DatabaseInput value);
    internal bool IsSetDatabaseInput();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateDatabaseResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateDataQualityRulesetRequest : AmazonGlueRequest {
    private string _description;
    private string _name;
    private string _ruleset;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Ruleset { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Ruleset();
    public void set_Ruleset(string value);
    internal bool IsSetRuleset();
}
public class Amazon.Glue.Model.UpdateDataQualityRulesetResponse : AmazonWebServiceResponse {
    private string _description;
    private string _name;
    private string _ruleset;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Ruleset { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Ruleset();
    public void set_Ruleset(string value);
    internal bool IsSetRuleset();
}
public class Amazon.Glue.Model.UpdateDevEndpointRequest : AmazonGlueRequest {
    private Dictionary`2<string, string> _addArguments;
    private List`1<string> _addPublicKeys;
    private DevEndpointCustomLibraries _customLibraries;
    private List`1<string> _deleteArguments;
    private List`1<string> _deletePublicKeys;
    private string _endpointName;
    private string _publicKey;
    private Nullable`1<bool> _updateEtlLibraries;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> AddArguments { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AddPublicKeys { get; public set; }
    public DevEndpointCustomLibraries CustomLibraries { get; public set; }
    public List`1<string> DeleteArguments { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> DeletePublicKeys { get; public set; }
    [AWSPropertyAttribute]
public string EndpointName { get; public set; }
    public string PublicKey { get; public set; }
    public Nullable`1<bool> UpdateEtlLibraries { get; public set; }
    public Dictionary`2<string, string> get_AddArguments();
    public void set_AddArguments(Dictionary`2<string, string> value);
    internal bool IsSetAddArguments();
    public List`1<string> get_AddPublicKeys();
    public void set_AddPublicKeys(List`1<string> value);
    internal bool IsSetAddPublicKeys();
    public DevEndpointCustomLibraries get_CustomLibraries();
    public void set_CustomLibraries(DevEndpointCustomLibraries value);
    internal bool IsSetCustomLibraries();
    public List`1<string> get_DeleteArguments();
    public void set_DeleteArguments(List`1<string> value);
    internal bool IsSetDeleteArguments();
    public List`1<string> get_DeletePublicKeys();
    public void set_DeletePublicKeys(List`1<string> value);
    internal bool IsSetDeletePublicKeys();
    public string get_EndpointName();
    public void set_EndpointName(string value);
    internal bool IsSetEndpointName();
    public string get_PublicKey();
    public void set_PublicKey(string value);
    internal bool IsSetPublicKey();
    public Nullable`1<bool> get_UpdateEtlLibraries();
    public void set_UpdateEtlLibraries(Nullable`1<bool> value);
    internal bool IsSetUpdateEtlLibraries();
}
public class Amazon.Glue.Model.UpdateDevEndpointResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateGrokClassifierRequest : object {
    private string _classification;
    private string _customPatterns;
    private string _grokPattern;
    private string _name;
    public string Classification { get; public set; }
    [AWSPropertyAttribute]
public string CustomPatterns { get; public set; }
    [AWSPropertyAttribute]
public string GrokPattern { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_CustomPatterns();
    public void set_CustomPatterns(string value);
    internal bool IsSetCustomPatterns();
    public string get_GrokPattern();
    public void set_GrokPattern(string value);
    internal bool IsSetGrokPattern();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateJobFromSourceControlRequest : AmazonGlueRequest {
    private SourceControlAuthStrategy _authStrategy;
    private string _authToken;
    private string _branchName;
    private string _commitId;
    private string _folder;
    private string _jobName;
    private SourceControlProvider _provider;
    private string _repositoryName;
    private string _repositoryOwner;
    public SourceControlAuthStrategy AuthStrategy { get; public set; }
    [AWSPropertyAttribute]
public string AuthToken { get; public set; }
    [AWSPropertyAttribute]
public string BranchName { get; public set; }
    [AWSPropertyAttribute]
public string CommitId { get; public set; }
    [AWSPropertyAttribute]
public string Folder { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public SourceControlProvider Provider { get; public set; }
    [AWSPropertyAttribute]
public string RepositoryName { get; public set; }
    [AWSPropertyAttribute]
public string RepositoryOwner { get; public set; }
    public SourceControlAuthStrategy get_AuthStrategy();
    public void set_AuthStrategy(SourceControlAuthStrategy value);
    internal bool IsSetAuthStrategy();
    public string get_AuthToken();
    public void set_AuthToken(string value);
    internal bool IsSetAuthToken();
    public string get_BranchName();
    public void set_BranchName(string value);
    internal bool IsSetBranchName();
    public string get_CommitId();
    public void set_CommitId(string value);
    internal bool IsSetCommitId();
    public string get_Folder();
    public void set_Folder(string value);
    internal bool IsSetFolder();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public SourceControlProvider get_Provider();
    public void set_Provider(SourceControlProvider value);
    internal bool IsSetProvider();
    public string get_RepositoryName();
    public void set_RepositoryName(string value);
    internal bool IsSetRepositoryName();
    public string get_RepositoryOwner();
    public void set_RepositoryOwner(string value);
    internal bool IsSetRepositoryOwner();
}
public class Amazon.Glue.Model.UpdateJobFromSourceControlResponse : AmazonWebServiceResponse {
    private string _jobName;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
}
public class Amazon.Glue.Model.UpdateJobRequest : AmazonGlueRequest {
    private string _jobName;
    private JobUpdate _jobUpdate;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public JobUpdate JobUpdate { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public JobUpdate get_JobUpdate();
    public void set_JobUpdate(JobUpdate value);
    internal bool IsSetJobUpdate();
}
public class Amazon.Glue.Model.UpdateJobResponse : AmazonWebServiceResponse {
    private string _jobName;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
}
public class Amazon.Glue.Model.UpdateJsonClassifierRequest : object {
    private string _jsonPath;
    private string _name;
    public string JsonPath { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_JsonPath();
    public void set_JsonPath(string value);
    internal bool IsSetJsonPath();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateMLTransformRequest : AmazonGlueRequest {
    private string _description;
    private string _glueVersion;
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<int> _maxRetries;
    private string _name;
    private Nullable`1<int> _numberOfWorkers;
    private TransformParameters _parameters;
    private string _role;
    private Nullable`1<int> _timeout;
    private string _transformId;
    private WorkerType _workerType;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string GlueVersion { get; public set; }
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<int> NumberOfWorkers { get; public set; }
    public TransformParameters Parameters { get; public set; }
    public string Role { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public WorkerType WorkerType { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GlueVersion();
    public void set_GlueVersion(string value);
    internal bool IsSetGlueVersion();
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MaxRetries();
    public void set_MaxRetries(Nullable`1<int> value);
    internal bool IsSetMaxRetries();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_NumberOfWorkers();
    public void set_NumberOfWorkers(Nullable`1<int> value);
    internal bool IsSetNumberOfWorkers();
    public TransformParameters get_Parameters();
    public void set_Parameters(TransformParameters value);
    internal bool IsSetParameters();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
    public WorkerType get_WorkerType();
    public void set_WorkerType(WorkerType value);
    internal bool IsSetWorkerType();
}
public class Amazon.Glue.Model.UpdateMLTransformResponse : AmazonWebServiceResponse {
    private string _transformId;
    [AWSPropertyAttribute]
public string TransformId { get; public set; }
    public string get_TransformId();
    public void set_TransformId(string value);
    internal bool IsSetTransformId();
}
public class Amazon.Glue.Model.UpdatePartitionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private PartitionInput _partitionInput;
    private List`1<string> _partitionValueList;
    private string _tableName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public PartitionInput PartitionInput { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PartitionValueList { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public PartitionInput get_PartitionInput();
    public void set_PartitionInput(PartitionInput value);
    internal bool IsSetPartitionInput();
    public List`1<string> get_PartitionValueList();
    public void set_PartitionValueList(List`1<string> value);
    internal bool IsSetPartitionValueList();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.Glue.Model.UpdatePartitionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateRegistryRequest : AmazonGlueRequest {
    private string _description;
    private RegistryId _registryId;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public RegistryId RegistryId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public RegistryId get_RegistryId();
    public void set_RegistryId(RegistryId value);
    internal bool IsSetRegistryId();
}
public class Amazon.Glue.Model.UpdateRegistryResponse : AmazonWebServiceResponse {
    private string _registryArn;
    private string _registryName;
    [AWSPropertyAttribute]
public string RegistryArn { get; public set; }
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    public string get_RegistryArn();
    public void set_RegistryArn(string value);
    internal bool IsSetRegistryArn();
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
}
public class Amazon.Glue.Model.UpdateSchemaRequest : AmazonGlueRequest {
    private Compatibility _compatibility;
    private string _description;
    private SchemaId _schemaId;
    private SchemaVersionNumber _schemaVersionNumber;
    public Compatibility Compatibility { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public SchemaId SchemaId { get; public set; }
    public SchemaVersionNumber SchemaVersionNumber { get; public set; }
    public Compatibility get_Compatibility();
    public void set_Compatibility(Compatibility value);
    internal bool IsSetCompatibility();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public SchemaId get_SchemaId();
    public void set_SchemaId(SchemaId value);
    internal bool IsSetSchemaId();
    public SchemaVersionNumber get_SchemaVersionNumber();
    public void set_SchemaVersionNumber(SchemaVersionNumber value);
    internal bool IsSetSchemaVersionNumber();
}
public class Amazon.Glue.Model.UpdateSchemaResponse : AmazonWebServiceResponse {
    private string _registryName;
    private string _schemaArn;
    private string _schemaName;
    [AWSPropertyAttribute]
public string RegistryName { get; public set; }
    [AWSPropertyAttribute]
public string SchemaArn { get; public set; }
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    public string get_RegistryName();
    public void set_RegistryName(string value);
    internal bool IsSetRegistryName();
    public string get_SchemaArn();
    public void set_SchemaArn(string value);
    internal bool IsSetSchemaArn();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
}
public class Amazon.Glue.Model.UpdateSourceControlFromJobRequest : AmazonGlueRequest {
    private SourceControlAuthStrategy _authStrategy;
    private string _authToken;
    private string _branchName;
    private string _commitId;
    private string _folder;
    private string _jobName;
    private SourceControlProvider _provider;
    private string _repositoryName;
    private string _repositoryOwner;
    public SourceControlAuthStrategy AuthStrategy { get; public set; }
    [AWSPropertyAttribute]
public string AuthToken { get; public set; }
    [AWSPropertyAttribute]
public string BranchName { get; public set; }
    [AWSPropertyAttribute]
public string CommitId { get; public set; }
    [AWSPropertyAttribute]
public string Folder { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public SourceControlProvider Provider { get; public set; }
    [AWSPropertyAttribute]
public string RepositoryName { get; public set; }
    [AWSPropertyAttribute]
public string RepositoryOwner { get; public set; }
    public SourceControlAuthStrategy get_AuthStrategy();
    public void set_AuthStrategy(SourceControlAuthStrategy value);
    internal bool IsSetAuthStrategy();
    public string get_AuthToken();
    public void set_AuthToken(string value);
    internal bool IsSetAuthToken();
    public string get_BranchName();
    public void set_BranchName(string value);
    internal bool IsSetBranchName();
    public string get_CommitId();
    public void set_CommitId(string value);
    internal bool IsSetCommitId();
    public string get_Folder();
    public void set_Folder(string value);
    internal bool IsSetFolder();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public SourceControlProvider get_Provider();
    public void set_Provider(SourceControlProvider value);
    internal bool IsSetProvider();
    public string get_RepositoryName();
    public void set_RepositoryName(string value);
    internal bool IsSetRepositoryName();
    public string get_RepositoryOwner();
    public void set_RepositoryOwner(string value);
    internal bool IsSetRepositoryOwner();
}
public class Amazon.Glue.Model.UpdateSourceControlFromJobResponse : AmazonWebServiceResponse {
    private string _jobName;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
}
public class Amazon.Glue.Model.UpdateTableOptimizerRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private string _tableName;
    private TableOptimizerConfiguration _tableOptimizerConfiguration;
    private TableOptimizerType _type;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public TableOptimizerConfiguration TableOptimizerConfiguration { get; public set; }
    [AWSPropertyAttribute]
public TableOptimizerType Type { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableOptimizerConfiguration get_TableOptimizerConfiguration();
    public void set_TableOptimizerConfiguration(TableOptimizerConfiguration value);
    internal bool IsSetTableOptimizerConfiguration();
    public TableOptimizerType get_Type();
    public void set_Type(TableOptimizerType value);
    internal bool IsSetType();
}
public class Amazon.Glue.Model.UpdateTableOptimizerResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateTableRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private Nullable`1<bool> _force;
    private Nullable`1<bool> _skipArchive;
    private TableInput _tableInput;
    private string _transactionId;
    private string _versionId;
    private ViewUpdateAction _viewUpdateAction;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public Nullable`1<bool> Force { get; public set; }
    public Nullable`1<bool> SkipArchive { get; public set; }
    [AWSPropertyAttribute]
public TableInput TableInput { get; public set; }
    [AWSPropertyAttribute]
public string TransactionId { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public ViewUpdateAction ViewUpdateAction { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
    public Nullable`1<bool> get_SkipArchive();
    public void set_SkipArchive(Nullable`1<bool> value);
    internal bool IsSetSkipArchive();
    public TableInput get_TableInput();
    public void set_TableInput(TableInput value);
    internal bool IsSetTableInput();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    internal bool IsSetTransactionId();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public ViewUpdateAction get_ViewUpdateAction();
    public void set_ViewUpdateAction(ViewUpdateAction value);
    internal bool IsSetViewUpdateAction();
}
public class Amazon.Glue.Model.UpdateTableResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateTriggerRequest : AmazonGlueRequest {
    private string _name;
    private TriggerUpdate _triggerUpdate;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public TriggerUpdate TriggerUpdate { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public TriggerUpdate get_TriggerUpdate();
    public void set_TriggerUpdate(TriggerUpdate value);
    internal bool IsSetTriggerUpdate();
}
public class Amazon.Glue.Model.UpdateTriggerResponse : AmazonWebServiceResponse {
    private Trigger _trigger;
    public Trigger Trigger { get; public set; }
    public Trigger get_Trigger();
    public void set_Trigger(Trigger value);
    internal bool IsSetTrigger();
}
public class Amazon.Glue.Model.UpdateUsageProfileRequest : AmazonGlueRequest {
    private ProfileConfiguration _configuration;
    private string _description;
    private string _name;
    [AWSPropertyAttribute]
public ProfileConfiguration Configuration { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ProfileConfiguration get_Configuration();
    public void set_Configuration(ProfileConfiguration value);
    internal bool IsSetConfiguration();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateUsageProfileResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateUserDefinedFunctionRequest : AmazonGlueRequest {
    private string _catalogId;
    private string _databaseName;
    private UserDefinedFunctionInput _functionInput;
    private string _functionName;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public UserDefinedFunctionInput FunctionInput { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public UserDefinedFunctionInput get_FunctionInput();
    public void set_FunctionInput(UserDefinedFunctionInput value);
    internal bool IsSetFunctionInput();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Glue.Model.UpdateUserDefinedFunctionResponse : AmazonWebServiceResponse {
}
public class Amazon.Glue.Model.UpdateWorkflowRequest : AmazonGlueRequest {
    private Dictionary`2<string, string> _defaultRunProperties;
    private string _description;
    private Nullable`1<int> _maxConcurrentRuns;
    private string _name;
    public Dictionary`2<string, string> DefaultRunProperties { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> MaxConcurrentRuns { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> get_DefaultRunProperties();
    public void set_DefaultRunProperties(Dictionary`2<string, string> value);
    internal bool IsSetDefaultRunProperties();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_MaxConcurrentRuns();
    public void set_MaxConcurrentRuns(Nullable`1<int> value);
    internal bool IsSetMaxConcurrentRuns();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateWorkflowResponse : AmazonWebServiceResponse {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UpdateXMLClassifierRequest : object {
    private string _classification;
    private string _name;
    private string _rowTag;
    public string Classification { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RowTag { get; public set; }
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RowTag();
    public void set_RowTag(string value);
    internal bool IsSetRowTag();
}
public class Amazon.Glue.Model.UpsertRedshiftTargetOptions : object {
    private string _connectionName;
    private string _tableLocation;
    private List`1<string> _upsertKeys;
    public string ConnectionName { get; public set; }
    public string TableLocation { get; public set; }
    public List`1<string> UpsertKeys { get; public set; }
    public string get_ConnectionName();
    public void set_ConnectionName(string value);
    internal bool IsSetConnectionName();
    public string get_TableLocation();
    public void set_TableLocation(string value);
    internal bool IsSetTableLocation();
    public List`1<string> get_UpsertKeys();
    public void set_UpsertKeys(List`1<string> value);
    internal bool IsSetUpsertKeys();
}
public class Amazon.Glue.Model.UsageProfileDefinition : object {
    private Nullable`1<DateTime> _createdOn;
    private string _description;
    private Nullable`1<DateTime> _lastModifiedOn;
    private string _name;
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.UserDefinedFunction : object {
    private string _catalogId;
    private string _className;
    private Nullable`1<DateTime> _createTime;
    private string _databaseName;
    private string _functionName;
    private string _ownerName;
    private PrincipalType _ownerType;
    private List`1<ResourceUri> _resourceUris;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string ClassName { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string OwnerName { get; public set; }
    public PrincipalType OwnerType { get; public set; }
    [AWSPropertyAttribute]
public List`1<ResourceUri> ResourceUris { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_ClassName();
    public void set_ClassName(string value);
    internal bool IsSetClassName();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_OwnerName();
    public void set_OwnerName(string value);
    internal bool IsSetOwnerName();
    public PrincipalType get_OwnerType();
    public void set_OwnerType(PrincipalType value);
    internal bool IsSetOwnerType();
    public List`1<ResourceUri> get_ResourceUris();
    public void set_ResourceUris(List`1<ResourceUri> value);
    internal bool IsSetResourceUris();
}
public class Amazon.Glue.Model.UserDefinedFunctionInput : object {
    private string _className;
    private string _functionName;
    private string _ownerName;
    private PrincipalType _ownerType;
    private List`1<ResourceUri> _resourceUris;
    [AWSPropertyAttribute]
public string ClassName { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string OwnerName { get; public set; }
    public PrincipalType OwnerType { get; public set; }
    [AWSPropertyAttribute]
public List`1<ResourceUri> ResourceUris { get; public set; }
    public string get_ClassName();
    public void set_ClassName(string value);
    internal bool IsSetClassName();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_OwnerName();
    public void set_OwnerName(string value);
    internal bool IsSetOwnerName();
    public PrincipalType get_OwnerType();
    public void set_OwnerType(PrincipalType value);
    internal bool IsSetOwnerType();
    public List`1<ResourceUri> get_ResourceUris();
    public void set_ResourceUris(List`1<ResourceUri> value);
    internal bool IsSetResourceUris();
}
public class Amazon.Glue.Model.ValidationException : AmazonGlueException {
    public ValidationException(string message);
    public ValidationException(string message, Exception innerException);
    public ValidationException(Exception innerException);
    public ValidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ValidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.VersionMismatchException : AmazonGlueException {
    public VersionMismatchException(string message);
    public VersionMismatchException(string message, Exception innerException);
    public VersionMismatchException(Exception innerException);
    public VersionMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public VersionMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Glue.Model.ViewDefinition : object {
    private string _definer;
    private Nullable`1<bool> _isProtected;
    private List`1<ViewRepresentation> _representations;
    private List`1<string> _subObjects;
    [AWSPropertyAttribute]
public string Definer { get; public set; }
    public Nullable`1<bool> IsProtected { get; public set; }
    [AWSPropertyAttribute]
public List`1<ViewRepresentation> Representations { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubObjects { get; public set; }
    public string get_Definer();
    public void set_Definer(string value);
    internal bool IsSetDefiner();
    public Nullable`1<bool> get_IsProtected();
    public void set_IsProtected(Nullable`1<bool> value);
    internal bool IsSetIsProtected();
    public List`1<ViewRepresentation> get_Representations();
    public void set_Representations(List`1<ViewRepresentation> value);
    internal bool IsSetRepresentations();
    public List`1<string> get_SubObjects();
    public void set_SubObjects(List`1<string> value);
    internal bool IsSetSubObjects();
}
public class Amazon.Glue.Model.ViewDefinitionInput : object {
    private string _definer;
    private Nullable`1<bool> _isProtected;
    private List`1<ViewRepresentationInput> _representations;
    private List`1<string> _subObjects;
    [AWSPropertyAttribute]
public string Definer { get; public set; }
    public Nullable`1<bool> IsProtected { get; public set; }
    [AWSPropertyAttribute]
public List`1<ViewRepresentationInput> Representations { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubObjects { get; public set; }
    public string get_Definer();
    public void set_Definer(string value);
    internal bool IsSetDefiner();
    public Nullable`1<bool> get_IsProtected();
    public void set_IsProtected(Nullable`1<bool> value);
    internal bool IsSetIsProtected();
    public List`1<ViewRepresentationInput> get_Representations();
    public void set_Representations(List`1<ViewRepresentationInput> value);
    internal bool IsSetRepresentations();
    public List`1<string> get_SubObjects();
    public void set_SubObjects(List`1<string> value);
    internal bool IsSetSubObjects();
}
public class Amazon.Glue.Model.ViewRepresentation : object {
    private ViewDialect _dialect;
    private string _dialectVersion;
    private Nullable`1<bool> _isStale;
    private string _validationConnection;
    private string _viewExpandedText;
    private string _viewOriginalText;
    public ViewDialect Dialect { get; public set; }
    [AWSPropertyAttribute]
public string DialectVersion { get; public set; }
    public Nullable`1<bool> IsStale { get; public set; }
    [AWSPropertyAttribute]
public string ValidationConnection { get; public set; }
    [AWSPropertyAttribute]
public string ViewExpandedText { get; public set; }
    [AWSPropertyAttribute]
public string ViewOriginalText { get; public set; }
    public ViewDialect get_Dialect();
    public void set_Dialect(ViewDialect value);
    internal bool IsSetDialect();
    public string get_DialectVersion();
    public void set_DialectVersion(string value);
    internal bool IsSetDialectVersion();
    public Nullable`1<bool> get_IsStale();
    public void set_IsStale(Nullable`1<bool> value);
    internal bool IsSetIsStale();
    public string get_ValidationConnection();
    public void set_ValidationConnection(string value);
    internal bool IsSetValidationConnection();
    public string get_ViewExpandedText();
    public void set_ViewExpandedText(string value);
    internal bool IsSetViewExpandedText();
    public string get_ViewOriginalText();
    public void set_ViewOriginalText(string value);
    internal bool IsSetViewOriginalText();
}
public class Amazon.Glue.Model.ViewRepresentationInput : object {
    private ViewDialect _dialect;
    private string _dialectVersion;
    private string _validationConnection;
    private string _viewExpandedText;
    private string _viewOriginalText;
    public ViewDialect Dialect { get; public set; }
    [AWSPropertyAttribute]
public string DialectVersion { get; public set; }
    [AWSPropertyAttribute]
public string ValidationConnection { get; public set; }
    [AWSPropertyAttribute]
public string ViewExpandedText { get; public set; }
    [AWSPropertyAttribute]
public string ViewOriginalText { get; public set; }
    public ViewDialect get_Dialect();
    public void set_Dialect(ViewDialect value);
    internal bool IsSetDialect();
    public string get_DialectVersion();
    public void set_DialectVersion(string value);
    internal bool IsSetDialectVersion();
    public string get_ValidationConnection();
    public void set_ValidationConnection(string value);
    internal bool IsSetValidationConnection();
    public string get_ViewExpandedText();
    public void set_ViewExpandedText(string value);
    internal bool IsSetViewExpandedText();
    public string get_ViewOriginalText();
    public void set_ViewOriginalText(string value);
    internal bool IsSetViewOriginalText();
}
public class Amazon.Glue.Model.Workflow : object {
    private BlueprintDetails _blueprintDetails;
    private Nullable`1<DateTime> _createdOn;
    private Dictionary`2<string, string> _defaultRunProperties;
    private string _description;
    private WorkflowGraph _graph;
    private Nullable`1<DateTime> _lastModifiedOn;
    private WorkflowRun _lastRun;
    private Nullable`1<int> _maxConcurrentRuns;
    private string _name;
    public BlueprintDetails BlueprintDetails { get; public set; }
    public Nullable`1<DateTime> CreatedOn { get; public set; }
    public Dictionary`2<string, string> DefaultRunProperties { get; public set; }
    public string Description { get; public set; }
    public WorkflowGraph Graph { get; public set; }
    public Nullable`1<DateTime> LastModifiedOn { get; public set; }
    public WorkflowRun LastRun { get; public set; }
    public Nullable`1<int> MaxConcurrentRuns { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public BlueprintDetails get_BlueprintDetails();
    public void set_BlueprintDetails(BlueprintDetails value);
    internal bool IsSetBlueprintDetails();
    public Nullable`1<DateTime> get_CreatedOn();
    public void set_CreatedOn(Nullable`1<DateTime> value);
    internal bool IsSetCreatedOn();
    public Dictionary`2<string, string> get_DefaultRunProperties();
    public void set_DefaultRunProperties(Dictionary`2<string, string> value);
    internal bool IsSetDefaultRunProperties();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public WorkflowGraph get_Graph();
    public void set_Graph(WorkflowGraph value);
    internal bool IsSetGraph();
    public Nullable`1<DateTime> get_LastModifiedOn();
    public void set_LastModifiedOn(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedOn();
    public WorkflowRun get_LastRun();
    public void set_LastRun(WorkflowRun value);
    internal bool IsSetLastRun();
    public Nullable`1<int> get_MaxConcurrentRuns();
    public void set_MaxConcurrentRuns(Nullable`1<int> value);
    internal bool IsSetMaxConcurrentRuns();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Glue.Model.WorkflowGraph : object {
    private List`1<Edge> _edges;
    private List`1<Node> _nodes;
    public List`1<Edge> Edges { get; public set; }
    public List`1<Node> Nodes { get; public set; }
    public List`1<Edge> get_Edges();
    public void set_Edges(List`1<Edge> value);
    internal bool IsSetEdges();
    public List`1<Node> get_Nodes();
    public void set_Nodes(List`1<Node> value);
    internal bool IsSetNodes();
}
public class Amazon.Glue.Model.WorkflowRun : object {
    private Nullable`1<DateTime> _completedOn;
    private string _errorMessage;
    private WorkflowGraph _graph;
    private string _name;
    private string _previousRunId;
    private Nullable`1<DateTime> _startedOn;
    private StartingEventBatchCondition _startingEventBatchCondition;
    private WorkflowRunStatistics _statistics;
    private WorkflowRunStatus _status;
    private string _workflowRunId;
    private Dictionary`2<string, string> _workflowRunProperties;
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public string ErrorMessage { get; public set; }
    public WorkflowGraph Graph { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string PreviousRunId { get; public set; }
    public Nullable`1<DateTime> StartedOn { get; public set; }
    public StartingEventBatchCondition StartingEventBatchCondition { get; public set; }
    public WorkflowRunStatistics Statistics { get; public set; }
    public WorkflowRunStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string WorkflowRunId { get; public set; }
    public Dictionary`2<string, string> WorkflowRunProperties { get; public set; }
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public WorkflowGraph get_Graph();
    public void set_Graph(WorkflowGraph value);
    internal bool IsSetGraph();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PreviousRunId();
    public void set_PreviousRunId(string value);
    internal bool IsSetPreviousRunId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public StartingEventBatchCondition get_StartingEventBatchCondition();
    public void set_StartingEventBatchCondition(StartingEventBatchCondition value);
    internal bool IsSetStartingEventBatchCondition();
    public WorkflowRunStatistics get_Statistics();
    public void set_Statistics(WorkflowRunStatistics value);
    internal bool IsSetStatistics();
    public WorkflowRunStatus get_Status();
    public void set_Status(WorkflowRunStatus value);
    internal bool IsSetStatus();
    public string get_WorkflowRunId();
    public void set_WorkflowRunId(string value);
    internal bool IsSetWorkflowRunId();
    public Dictionary`2<string, string> get_WorkflowRunProperties();
    public void set_WorkflowRunProperties(Dictionary`2<string, string> value);
    internal bool IsSetWorkflowRunProperties();
}
public class Amazon.Glue.Model.WorkflowRunStatistics : object {
    private Nullable`1<int> _erroredActions;
    private Nullable`1<int> _failedActions;
    private Nullable`1<int> _runningActions;
    private Nullable`1<int> _stoppedActions;
    private Nullable`1<int> _succeededActions;
    private Nullable`1<int> _timeoutActions;
    private Nullable`1<int> _totalActions;
    private Nullable`1<int> _waitingActions;
    public Nullable`1<int> ErroredActions { get; public set; }
    public Nullable`1<int> FailedActions { get; public set; }
    public Nullable`1<int> RunningActions { get; public set; }
    public Nullable`1<int> StoppedActions { get; public set; }
    public Nullable`1<int> SucceededActions { get; public set; }
    public Nullable`1<int> TimeoutActions { get; public set; }
    public Nullable`1<int> TotalActions { get; public set; }
    public Nullable`1<int> WaitingActions { get; public set; }
    public Nullable`1<int> get_ErroredActions();
    public void set_ErroredActions(Nullable`1<int> value);
    internal bool IsSetErroredActions();
    public Nullable`1<int> get_FailedActions();
    public void set_FailedActions(Nullable`1<int> value);
    internal bool IsSetFailedActions();
    public Nullable`1<int> get_RunningActions();
    public void set_RunningActions(Nullable`1<int> value);
    internal bool IsSetRunningActions();
    public Nullable`1<int> get_StoppedActions();
    public void set_StoppedActions(Nullable`1<int> value);
    internal bool IsSetStoppedActions();
    public Nullable`1<int> get_SucceededActions();
    public void set_SucceededActions(Nullable`1<int> value);
    internal bool IsSetSucceededActions();
    public Nullable`1<int> get_TimeoutActions();
    public void set_TimeoutActions(Nullable`1<int> value);
    internal bool IsSetTimeoutActions();
    public Nullable`1<int> get_TotalActions();
    public void set_TotalActions(Nullable`1<int> value);
    internal bool IsSetTotalActions();
    public Nullable`1<int> get_WaitingActions();
    public void set_WaitingActions(Nullable`1<int> value);
    internal bool IsSetWaitingActions();
}
public class Amazon.Glue.Model.XMLClassifier : object {
    private string _classification;
    private Nullable`1<DateTime> _creationTime;
    private Nullable`1<DateTime> _lastUpdated;
    private string _name;
    private string _rowTag;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public string Classification { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public Nullable`1<DateTime> LastUpdated { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RowTag { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public Nullable`1<DateTime> get_LastUpdated();
    public void set_LastUpdated(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdated();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RowTag();
    public void set_RowTag(string value);
    internal bool IsSetRowTag();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Glue.NodeType : ConstantClass {
    public static NodeType CRAWLER;
    public static NodeType JOB;
    public static NodeType TRIGGER;
    public NodeType(string value);
    private static NodeType();
    public static NodeType FindValue(string value);
    public static NodeType op_Implicit(string value);
}
public class Amazon.Glue.OAuth2GrantType : ConstantClass {
    public static OAuth2GrantType AUTHORIZATION_CODE;
    public static OAuth2GrantType CLIENT_CREDENTIALS;
    public static OAuth2GrantType JWT_BEARER;
    public OAuth2GrantType(string value);
    private static OAuth2GrantType();
    public static OAuth2GrantType FindValue(string value);
    public static OAuth2GrantType op_Implicit(string value);
}
public class Amazon.Glue.ParamType : ConstantClass {
    public static ParamType Bool;
    public static ParamType Complex;
    public static ParamType Float;
    public static ParamType Int;
    public static ParamType List;
    public static ParamType Null;
    public static ParamType Str;
    public ParamType(string value);
    private static ParamType();
    public static ParamType FindValue(string value);
    public static ParamType op_Implicit(string value);
}
public class Amazon.Glue.ParquetCompressionType : ConstantClass {
    public static ParquetCompressionType Gzip;
    public static ParquetCompressionType Lzo;
    public static ParquetCompressionType None;
    public static ParquetCompressionType Snappy;
    public static ParquetCompressionType Uncompressed;
    public ParquetCompressionType(string value);
    private static ParquetCompressionType();
    public static ParquetCompressionType FindValue(string value);
    public static ParquetCompressionType op_Implicit(string value);
}
public class Amazon.Glue.PartitionIndexStatus : ConstantClass {
    public static PartitionIndexStatus ACTIVE;
    public static PartitionIndexStatus CREATING;
    public static PartitionIndexStatus DELETING;
    public static PartitionIndexStatus FAILED;
    public PartitionIndexStatus(string value);
    private static PartitionIndexStatus();
    public static PartitionIndexStatus FindValue(string value);
    public static PartitionIndexStatus op_Implicit(string value);
}
public class Amazon.Glue.Permission : ConstantClass {
    public static Permission ALL;
    public static Permission ALTER;
    public static Permission CREATE_DATABASE;
    public static Permission CREATE_TABLE;
    public static Permission DATA_LOCATION_ACCESS;
    public static Permission DELETE;
    public static Permission DROP;
    public static Permission INSERT;
    public static Permission SELECT;
    public Permission(string value);
    private static Permission();
    public static Permission FindValue(string value);
    public static Permission op_Implicit(string value);
}
public class Amazon.Glue.PermissionType : ConstantClass {
    public static PermissionType CELL_FILTER_PERMISSION;
    public static PermissionType COLUMN_PERMISSION;
    public static PermissionType NESTED_CELL_PERMISSION;
    public static PermissionType NESTED_PERMISSION;
    public PermissionType(string value);
    private static PermissionType();
    public static PermissionType FindValue(string value);
    public static PermissionType op_Implicit(string value);
}
public class Amazon.Glue.PiiType : ConstantClass {
    public static PiiType ColumnAudit;
    public static PiiType ColumnMasking;
    public static PiiType RowAudit;
    public static PiiType RowMasking;
    public PiiType(string value);
    private static PiiType();
    public static PiiType FindValue(string value);
    public static PiiType op_Implicit(string value);
}
public class Amazon.Glue.PrincipalType : ConstantClass {
    public static PrincipalType GROUP;
    public static PrincipalType ROLE;
    public static PrincipalType USER;
    public PrincipalType(string value);
    private static PrincipalType();
    public static PrincipalType FindValue(string value);
    public static PrincipalType op_Implicit(string value);
}
public class Amazon.Glue.QuoteChar : ConstantClass {
    public static QuoteChar Disabled;
    public static QuoteChar Quillemet;
    public static QuoteChar Quote;
    public static QuoteChar Single_quote;
    public QuoteChar(string value);
    private static QuoteChar();
    public static QuoteChar FindValue(string value);
    public static QuoteChar op_Implicit(string value);
}
public class Amazon.Glue.RecrawlBehavior : ConstantClass {
    public static RecrawlBehavior CRAWL_EVENT_MODE;
    public static RecrawlBehavior CRAWL_EVERYTHING;
    public static RecrawlBehavior CRAWL_NEW_FOLDERS_ONLY;
    public RecrawlBehavior(string value);
    private static RecrawlBehavior();
    public static RecrawlBehavior FindValue(string value);
    public static RecrawlBehavior op_Implicit(string value);
}
public class Amazon.Glue.RegistryStatus : ConstantClass {
    public static RegistryStatus AVAILABLE;
    public static RegistryStatus DELETING;
    public RegistryStatus(string value);
    private static RegistryStatus();
    public static RegistryStatus FindValue(string value);
    public static RegistryStatus op_Implicit(string value);
}
public class Amazon.Glue.ResourceShareType : ConstantClass {
    public static ResourceShareType ALL;
    public static ResourceShareType FEDERATED;
    public static ResourceShareType FOREIGN;
    public ResourceShareType(string value);
    private static ResourceShareType();
    public static ResourceShareType FindValue(string value);
    public static ResourceShareType op_Implicit(string value);
}
public class Amazon.Glue.ResourceType : ConstantClass {
    public static ResourceType ARCHIVE;
    public static ResourceType FILE;
    public static ResourceType JAR;
    public ResourceType(string value);
    private static ResourceType();
    public static ResourceType FindValue(string value);
    public static ResourceType op_Implicit(string value);
}
public class Amazon.Glue.S3EncryptionMode : ConstantClass {
    public static S3EncryptionMode DISABLED;
    public static S3EncryptionMode SSEKMS;
    public static S3EncryptionMode SSES3;
    public S3EncryptionMode(string value);
    private static S3EncryptionMode();
    public static S3EncryptionMode FindValue(string value);
    public static S3EncryptionMode op_Implicit(string value);
}
public class Amazon.Glue.ScheduleState : ConstantClass {
    public static ScheduleState NOT_SCHEDULED;
    public static ScheduleState SCHEDULED;
    public static ScheduleState TRANSITIONING;
    public ScheduleState(string value);
    private static ScheduleState();
    public static ScheduleState FindValue(string value);
    public static ScheduleState op_Implicit(string value);
}
public class Amazon.Glue.SchemaDiffType : ConstantClass {
    public static SchemaDiffType SYNTAX_DIFF;
    public SchemaDiffType(string value);
    private static SchemaDiffType();
    public static SchemaDiffType FindValue(string value);
    public static SchemaDiffType op_Implicit(string value);
}
public class Amazon.Glue.SchemaStatus : ConstantClass {
    public static SchemaStatus AVAILABLE;
    public static SchemaStatus DELETING;
    public static SchemaStatus PENDING;
    public SchemaStatus(string value);
    private static SchemaStatus();
    public static SchemaStatus FindValue(string value);
    public static SchemaStatus op_Implicit(string value);
}
public class Amazon.Glue.SchemaVersionStatus : ConstantClass {
    public static SchemaVersionStatus AVAILABLE;
    public static SchemaVersionStatus DELETING;
    public static SchemaVersionStatus FAILURE;
    public static SchemaVersionStatus PENDING;
    public SchemaVersionStatus(string value);
    private static SchemaVersionStatus();
    public static SchemaVersionStatus FindValue(string value);
    public static SchemaVersionStatus op_Implicit(string value);
}
public class Amazon.Glue.Separator : ConstantClass {
    public static Separator Comma;
    public static Separator Ctrla;
    public static Separator Pipe;
    public static Separator Semicolon;
    public static Separator Tab;
    public Separator(string value);
    private static Separator();
    public static Separator FindValue(string value);
    public static Separator op_Implicit(string value);
}
public class Amazon.Glue.SessionStatus : ConstantClass {
    public static SessionStatus FAILED;
    public static SessionStatus PROVISIONING;
    public static SessionStatus READY;
    public static SessionStatus STOPPED;
    public static SessionStatus STOPPING;
    public static SessionStatus TIMEOUT;
    public SessionStatus(string value);
    private static SessionStatus();
    public static SessionStatus FindValue(string value);
    public static SessionStatus op_Implicit(string value);
}
public class Amazon.Glue.Sort : ConstantClass {
    public static Sort ASC;
    public static Sort DESC;
    public Sort(string value);
    private static Sort();
    public static Sort FindValue(string value);
    public static Sort op_Implicit(string value);
}
public class Amazon.Glue.SortDirectionType : ConstantClass {
    public static SortDirectionType ASCENDING;
    public static SortDirectionType DESCENDING;
    public SortDirectionType(string value);
    private static SortDirectionType();
    public static SortDirectionType FindValue(string value);
    public static SortDirectionType op_Implicit(string value);
}
public class Amazon.Glue.SourceControlAuthStrategy : ConstantClass {
    public static SourceControlAuthStrategy AWS_SECRETS_MANAGER;
    public static SourceControlAuthStrategy PERSONAL_ACCESS_TOKEN;
    public SourceControlAuthStrategy(string value);
    private static SourceControlAuthStrategy();
    public static SourceControlAuthStrategy FindValue(string value);
    public static SourceControlAuthStrategy op_Implicit(string value);
}
public class Amazon.Glue.SourceControlProvider : ConstantClass {
    public static SourceControlProvider AWS_CODE_COMMIT;
    public static SourceControlProvider BITBUCKET;
    public static SourceControlProvider GITHUB;
    public static SourceControlProvider GITLAB;
    public SourceControlProvider(string value);
    private static SourceControlProvider();
    public static SourceControlProvider FindValue(string value);
    public static SourceControlProvider op_Implicit(string value);
}
public class Amazon.Glue.StartingPosition : ConstantClass {
    public static StartingPosition Earliest;
    public static StartingPosition Latest;
    public static StartingPosition Timestamp;
    public static StartingPosition Trim_horizon;
    public StartingPosition(string value);
    private static StartingPosition();
    public static StartingPosition FindValue(string value);
    public static StartingPosition op_Implicit(string value);
}
public class Amazon.Glue.StatementState : ConstantClass {
    public static StatementState AVAILABLE;
    public static StatementState CANCELLED;
    public static StatementState CANCELLING;
    public static StatementState ERROR;
    public static StatementState RUNNING;
    public static StatementState WAITING;
    public StatementState(string value);
    private static StatementState();
    public static StatementState FindValue(string value);
    public static StatementState op_Implicit(string value);
}
public class Amazon.Glue.TableOptimizerEventType : ConstantClass {
    public static TableOptimizerEventType Completed;
    public static TableOptimizerEventType Failed;
    public static TableOptimizerEventType In_progress;
    public static TableOptimizerEventType Starting;
    public TableOptimizerEventType(string value);
    private static TableOptimizerEventType();
    public static TableOptimizerEventType FindValue(string value);
    public static TableOptimizerEventType op_Implicit(string value);
}
public class Amazon.Glue.TableOptimizerType : ConstantClass {
    public static TableOptimizerType Compaction;
    public TableOptimizerType(string value);
    private static TableOptimizerType();
    public static TableOptimizerType FindValue(string value);
    public static TableOptimizerType op_Implicit(string value);
}
public class Amazon.Glue.TargetFormat : ConstantClass {
    public static TargetFormat Avro;
    public static TargetFormat Csv;
    public static TargetFormat Delta;
    public static TargetFormat Hudi;
    public static TargetFormat Json;
    public static TargetFormat Orc;
    public static TargetFormat Parquet;
    public TargetFormat(string value);
    private static TargetFormat();
    public static TargetFormat FindValue(string value);
    public static TargetFormat op_Implicit(string value);
}
public class Amazon.Glue.TaskRunSortColumnType : ConstantClass {
    public static TaskRunSortColumnType STARTED;
    public static TaskRunSortColumnType STATUS;
    public static TaskRunSortColumnType TASK_RUN_TYPE;
    public TaskRunSortColumnType(string value);
    private static TaskRunSortColumnType();
    public static TaskRunSortColumnType FindValue(string value);
    public static TaskRunSortColumnType op_Implicit(string value);
}
public class Amazon.Glue.TaskStatusType : ConstantClass {
    public static TaskStatusType FAILED;
    public static TaskStatusType RUNNING;
    public static TaskStatusType STARTING;
    public static TaskStatusType STOPPED;
    public static TaskStatusType STOPPING;
    public static TaskStatusType SUCCEEDED;
    public static TaskStatusType TIMEOUT;
    public TaskStatusType(string value);
    private static TaskStatusType();
    public static TaskStatusType FindValue(string value);
    public static TaskStatusType op_Implicit(string value);
}
public class Amazon.Glue.TaskType : ConstantClass {
    public static TaskType EVALUATION;
    public static TaskType EXPORT_LABELS;
    public static TaskType FIND_MATCHES;
    public static TaskType IMPORT_LABELS;
    public static TaskType LABELING_SET_GENERATION;
    public TaskType(string value);
    private static TaskType();
    public static TaskType FindValue(string value);
    public static TaskType op_Implicit(string value);
}
public class Amazon.Glue.TransformSortColumnType : ConstantClass {
    public static TransformSortColumnType CREATED;
    public static TransformSortColumnType LAST_MODIFIED;
    public static TransformSortColumnType NAME;
    public static TransformSortColumnType STATUS;
    public static TransformSortColumnType TRANSFORM_TYPE;
    public TransformSortColumnType(string value);
    private static TransformSortColumnType();
    public static TransformSortColumnType FindValue(string value);
    public static TransformSortColumnType op_Implicit(string value);
}
public class Amazon.Glue.TransformStatusType : ConstantClass {
    public static TransformStatusType DELETING;
    public static TransformStatusType NOT_READY;
    public static TransformStatusType READY;
    public TransformStatusType(string value);
    private static TransformStatusType();
    public static TransformStatusType FindValue(string value);
    public static TransformStatusType op_Implicit(string value);
}
public class Amazon.Glue.TransformType : ConstantClass {
    public static TransformType FIND_MATCHES;
    public TransformType(string value);
    private static TransformType();
    public static TransformType FindValue(string value);
    public static TransformType op_Implicit(string value);
}
public class Amazon.Glue.TriggerState : ConstantClass {
    public static TriggerState ACTIVATED;
    public static TriggerState ACTIVATING;
    public static TriggerState CREATED;
    public static TriggerState CREATING;
    public static TriggerState DEACTIVATED;
    public static TriggerState DEACTIVATING;
    public static TriggerState DELETING;
    public static TriggerState UPDATING;
    public TriggerState(string value);
    private static TriggerState();
    public static TriggerState FindValue(string value);
    public static TriggerState op_Implicit(string value);
}
public class Amazon.Glue.TriggerType : ConstantClass {
    public static TriggerType CONDITIONAL;
    public static TriggerType EVENT;
    public static TriggerType ON_DEMAND;
    public static TriggerType SCHEDULED;
    public TriggerType(string value);
    private static TriggerType();
    public static TriggerType FindValue(string value);
    public static TriggerType op_Implicit(string value);
}
public class Amazon.Glue.UnionType : ConstantClass {
    public static UnionType ALL;
    public static UnionType DISTINCT;
    public UnionType(string value);
    private static UnionType();
    public static UnionType FindValue(string value);
    public static UnionType op_Implicit(string value);
}
public class Amazon.Glue.UpdateBehavior : ConstantClass {
    public static UpdateBehavior LOG;
    public static UpdateBehavior UPDATE_IN_DATABASE;
    public UpdateBehavior(string value);
    private static UpdateBehavior();
    public static UpdateBehavior FindValue(string value);
    public static UpdateBehavior op_Implicit(string value);
}
public class Amazon.Glue.UpdateCatalogBehavior : ConstantClass {
    public static UpdateCatalogBehavior LOG;
    public static UpdateCatalogBehavior UPDATE_IN_DATABASE;
    public UpdateCatalogBehavior(string value);
    private static UpdateCatalogBehavior();
    public static UpdateCatalogBehavior FindValue(string value);
    public static UpdateCatalogBehavior op_Implicit(string value);
}
public class Amazon.Glue.ViewDialect : ConstantClass {
    public static ViewDialect ATHENA;
    public static ViewDialect REDSHIFT;
    public static ViewDialect SPARK;
    public ViewDialect(string value);
    private static ViewDialect();
    public static ViewDialect FindValue(string value);
    public static ViewDialect op_Implicit(string value);
}
public class Amazon.Glue.ViewUpdateAction : ConstantClass {
    public static ViewUpdateAction ADD;
    public static ViewUpdateAction ADD_OR_REPLACE;
    public static ViewUpdateAction DROP;
    public static ViewUpdateAction REPLACE;
    public ViewUpdateAction(string value);
    private static ViewUpdateAction();
    public static ViewUpdateAction FindValue(string value);
    public static ViewUpdateAction op_Implicit(string value);
}
public class Amazon.Glue.WorkerType : ConstantClass {
    public static WorkerType G025X;
    public static WorkerType G1X;
    public static WorkerType G2X;
    public static WorkerType G4X;
    public static WorkerType G8X;
    public static WorkerType Standard;
    public static WorkerType Z2X;
    public WorkerType(string value);
    private static WorkerType();
    public static WorkerType FindValue(string value);
    public static WorkerType op_Implicit(string value);
}
public class Amazon.Glue.WorkflowRunStatus : ConstantClass {
    public static WorkflowRunStatus COMPLETED;
    public static WorkflowRunStatus ERROR;
    public static WorkflowRunStatus RUNNING;
    public static WorkflowRunStatus STOPPED;
    public static WorkflowRunStatus STOPPING;
    public WorkflowRunStatus(string value);
    private static WorkflowRunStatus();
    public static WorkflowRunStatus FindValue(string value);
    public static WorkflowRunStatus op_Implicit(string value);
}
