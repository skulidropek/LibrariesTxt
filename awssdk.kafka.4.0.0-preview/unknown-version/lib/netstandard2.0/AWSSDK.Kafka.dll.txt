public class Amazon.Kafka.AmazonKafkaClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IKafkaPaginatorFactory _paginators;
    public IKafkaPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonKafkaClient(RegionEndpoint region);
    public AmazonKafkaClient(AmazonKafkaConfig config);
    public AmazonKafkaClient(AWSCredentials credentials);
    public AmazonKafkaClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonKafkaClient(AWSCredentials credentials, AmazonKafkaConfig clientConfig);
    public AmazonKafkaClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonKafkaClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonKafkaClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonKafkaConfig clientConfig);
    public AmazonKafkaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonKafkaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonKafkaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonKafkaConfig clientConfig);
    private static AmazonKafkaClient();
    public sealed virtual IKafkaPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual BatchAssociateScramSecretResponse BatchAssociateScramSecret(BatchAssociateScramSecretRequest request);
    public virtual Task`1<BatchAssociateScramSecretResponse> BatchAssociateScramSecretAsync(BatchAssociateScramSecretRequest request, CancellationToken cancellationToken);
    internal virtual BatchDisassociateScramSecretResponse BatchDisassociateScramSecret(BatchDisassociateScramSecretRequest request);
    public virtual Task`1<BatchDisassociateScramSecretResponse> BatchDisassociateScramSecretAsync(BatchDisassociateScramSecretRequest request, CancellationToken cancellationToken);
    internal virtual CreateClusterResponse CreateCluster(CreateClusterRequest request);
    public virtual Task`1<CreateClusterResponse> CreateClusterAsync(CreateClusterRequest request, CancellationToken cancellationToken);
    internal virtual CreateClusterV2Response CreateClusterV2(CreateClusterV2Request request);
    public virtual Task`1<CreateClusterV2Response> CreateClusterV2Async(CreateClusterV2Request request, CancellationToken cancellationToken);
    internal virtual CreateConfigurationResponse CreateConfiguration(CreateConfigurationRequest request);
    public virtual Task`1<CreateConfigurationResponse> CreateConfigurationAsync(CreateConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual CreateReplicatorResponse CreateReplicator(CreateReplicatorRequest request);
    public virtual Task`1<CreateReplicatorResponse> CreateReplicatorAsync(CreateReplicatorRequest request, CancellationToken cancellationToken);
    internal virtual CreateVpcConnectionResponse CreateVpcConnection(CreateVpcConnectionRequest request);
    public virtual Task`1<CreateVpcConnectionResponse> CreateVpcConnectionAsync(CreateVpcConnectionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request);
    public virtual Task`1<DeleteClusterResponse> DeleteClusterAsync(DeleteClusterRequest request, CancellationToken cancellationToken);
    internal virtual DeleteClusterPolicyResponse DeleteClusterPolicy(DeleteClusterPolicyRequest request);
    public virtual Task`1<DeleteClusterPolicyResponse> DeleteClusterPolicyAsync(DeleteClusterPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteConfigurationResponse DeleteConfiguration(DeleteConfigurationRequest request);
    public virtual Task`1<DeleteConfigurationResponse> DeleteConfigurationAsync(DeleteConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReplicatorResponse DeleteReplicator(DeleteReplicatorRequest request);
    public virtual Task`1<DeleteReplicatorResponse> DeleteReplicatorAsync(DeleteReplicatorRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVpcConnectionResponse DeleteVpcConnection(DeleteVpcConnectionRequest request);
    public virtual Task`1<DeleteVpcConnectionResponse> DeleteVpcConnectionAsync(DeleteVpcConnectionRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClusterResponse DescribeCluster(DescribeClusterRequest request);
    public virtual Task`1<DescribeClusterResponse> DescribeClusterAsync(DescribeClusterRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClusterOperationResponse DescribeClusterOperation(DescribeClusterOperationRequest request);
    public virtual Task`1<DescribeClusterOperationResponse> DescribeClusterOperationAsync(DescribeClusterOperationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeClusterOperationV2Response DescribeClusterOperationV2(DescribeClusterOperationV2Request request);
    public virtual Task`1<DescribeClusterOperationV2Response> DescribeClusterOperationV2Async(DescribeClusterOperationV2Request request, CancellationToken cancellationToken);
    internal virtual DescribeClusterV2Response DescribeClusterV2(DescribeClusterV2Request request);
    public virtual Task`1<DescribeClusterV2Response> DescribeClusterV2Async(DescribeClusterV2Request request, CancellationToken cancellationToken);
    internal virtual DescribeConfigurationResponse DescribeConfiguration(DescribeConfigurationRequest request);
    public virtual Task`1<DescribeConfigurationResponse> DescribeConfigurationAsync(DescribeConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeConfigurationRevisionResponse DescribeConfigurationRevision(DescribeConfigurationRevisionRequest request);
    public virtual Task`1<DescribeConfigurationRevisionResponse> DescribeConfigurationRevisionAsync(DescribeConfigurationRevisionRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicatorResponse DescribeReplicator(DescribeReplicatorRequest request);
    public virtual Task`1<DescribeReplicatorResponse> DescribeReplicatorAsync(DescribeReplicatorRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVpcConnectionResponse DescribeVpcConnection(DescribeVpcConnectionRequest request);
    public virtual Task`1<DescribeVpcConnectionResponse> DescribeVpcConnectionAsync(DescribeVpcConnectionRequest request, CancellationToken cancellationToken);
    internal virtual GetBootstrapBrokersResponse GetBootstrapBrokers(GetBootstrapBrokersRequest request);
    public virtual Task`1<GetBootstrapBrokersResponse> GetBootstrapBrokersAsync(GetBootstrapBrokersRequest request, CancellationToken cancellationToken);
    internal virtual GetClusterPolicyResponse GetClusterPolicy(GetClusterPolicyRequest request);
    public virtual Task`1<GetClusterPolicyResponse> GetClusterPolicyAsync(GetClusterPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetCompatibleKafkaVersionsResponse GetCompatibleKafkaVersions(GetCompatibleKafkaVersionsRequest request);
    public virtual Task`1<GetCompatibleKafkaVersionsResponse> GetCompatibleKafkaVersionsAsync(GetCompatibleKafkaVersionsRequest request, CancellationToken cancellationToken);
    internal virtual ListClientVpcConnectionsResponse ListClientVpcConnections(ListClientVpcConnectionsRequest request);
    public virtual Task`1<ListClientVpcConnectionsResponse> ListClientVpcConnectionsAsync(ListClientVpcConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual ListClusterOperationsResponse ListClusterOperations(ListClusterOperationsRequest request);
    public virtual Task`1<ListClusterOperationsResponse> ListClusterOperationsAsync(ListClusterOperationsRequest request, CancellationToken cancellationToken);
    internal virtual ListClusterOperationsV2Response ListClusterOperationsV2(ListClusterOperationsV2Request request);
    public virtual Task`1<ListClusterOperationsV2Response> ListClusterOperationsV2Async(ListClusterOperationsV2Request request, CancellationToken cancellationToken);
    internal virtual ListClustersResponse ListClusters(ListClustersRequest request);
    public virtual Task`1<ListClustersResponse> ListClustersAsync(ListClustersRequest request, CancellationToken cancellationToken);
    internal virtual ListClustersV2Response ListClustersV2(ListClustersV2Request request);
    public virtual Task`1<ListClustersV2Response> ListClustersV2Async(ListClustersV2Request request, CancellationToken cancellationToken);
    internal virtual ListConfigurationRevisionsResponse ListConfigurationRevisions(ListConfigurationRevisionsRequest request);
    public virtual Task`1<ListConfigurationRevisionsResponse> ListConfigurationRevisionsAsync(ListConfigurationRevisionsRequest request, CancellationToken cancellationToken);
    internal virtual ListConfigurationsResponse ListConfigurations(ListConfigurationsRequest request);
    public virtual Task`1<ListConfigurationsResponse> ListConfigurationsAsync(ListConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual ListKafkaVersionsResponse ListKafkaVersions(ListKafkaVersionsRequest request);
    public virtual Task`1<ListKafkaVersionsResponse> ListKafkaVersionsAsync(ListKafkaVersionsRequest request, CancellationToken cancellationToken);
    internal virtual ListNodesResponse ListNodes(ListNodesRequest request);
    public virtual Task`1<ListNodesResponse> ListNodesAsync(ListNodesRequest request, CancellationToken cancellationToken);
    internal virtual ListReplicatorsResponse ListReplicators(ListReplicatorsRequest request);
    public virtual Task`1<ListReplicatorsResponse> ListReplicatorsAsync(ListReplicatorsRequest request, CancellationToken cancellationToken);
    internal virtual ListScramSecretsResponse ListScramSecrets(ListScramSecretsRequest request);
    public virtual Task`1<ListScramSecretsResponse> ListScramSecretsAsync(ListScramSecretsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ListVpcConnectionsResponse ListVpcConnections(ListVpcConnectionsRequest request);
    public virtual Task`1<ListVpcConnectionsResponse> ListVpcConnectionsAsync(ListVpcConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual PutClusterPolicyResponse PutClusterPolicy(PutClusterPolicyRequest request);
    public virtual Task`1<PutClusterPolicyResponse> PutClusterPolicyAsync(PutClusterPolicyRequest request, CancellationToken cancellationToken);
    internal virtual RebootBrokerResponse RebootBroker(RebootBrokerRequest request);
    public virtual Task`1<RebootBrokerResponse> RebootBrokerAsync(RebootBrokerRequest request, CancellationToken cancellationToken);
    internal virtual RejectClientVpcConnectionResponse RejectClientVpcConnection(RejectClientVpcConnectionRequest request);
    public virtual Task`1<RejectClientVpcConnectionResponse> RejectClientVpcConnectionAsync(RejectClientVpcConnectionRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateBrokerCountResponse UpdateBrokerCount(UpdateBrokerCountRequest request);
    public virtual Task`1<UpdateBrokerCountResponse> UpdateBrokerCountAsync(UpdateBrokerCountRequest request, CancellationToken cancellationToken);
    internal virtual UpdateBrokerStorageResponse UpdateBrokerStorage(UpdateBrokerStorageRequest request);
    public virtual Task`1<UpdateBrokerStorageResponse> UpdateBrokerStorageAsync(UpdateBrokerStorageRequest request, CancellationToken cancellationToken);
    internal virtual UpdateBrokerTypeResponse UpdateBrokerType(UpdateBrokerTypeRequest request);
    public virtual Task`1<UpdateBrokerTypeResponse> UpdateBrokerTypeAsync(UpdateBrokerTypeRequest request, CancellationToken cancellationToken);
    internal virtual UpdateClusterConfigurationResponse UpdateClusterConfiguration(UpdateClusterConfigurationRequest request);
    public virtual Task`1<UpdateClusterConfigurationResponse> UpdateClusterConfigurationAsync(UpdateClusterConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateClusterKafkaVersionResponse UpdateClusterKafkaVersion(UpdateClusterKafkaVersionRequest request);
    public virtual Task`1<UpdateClusterKafkaVersionResponse> UpdateClusterKafkaVersionAsync(UpdateClusterKafkaVersionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConfigurationResponse UpdateConfiguration(UpdateConfigurationRequest request);
    public virtual Task`1<UpdateConfigurationResponse> UpdateConfigurationAsync(UpdateConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConnectivityResponse UpdateConnectivity(UpdateConnectivityRequest request);
    public virtual Task`1<UpdateConnectivityResponse> UpdateConnectivityAsync(UpdateConnectivityRequest request, CancellationToken cancellationToken);
    internal virtual UpdateMonitoringResponse UpdateMonitoring(UpdateMonitoringRequest request);
    public virtual Task`1<UpdateMonitoringResponse> UpdateMonitoringAsync(UpdateMonitoringRequest request, CancellationToken cancellationToken);
    internal virtual UpdateReplicationInfoResponse UpdateReplicationInfo(UpdateReplicationInfoRequest request);
    public virtual Task`1<UpdateReplicationInfoResponse> UpdateReplicationInfoAsync(UpdateReplicationInfoRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSecurityResponse UpdateSecurity(UpdateSecurityRequest request);
    public virtual Task`1<UpdateSecurityResponse> UpdateSecurityAsync(UpdateSecurityRequest request, CancellationToken cancellationToken);
    internal virtual UpdateStorageResponse UpdateStorage(UpdateStorageRequest request);
    public virtual Task`1<UpdateStorageResponse> UpdateStorageAsync(UpdateStorageRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Kafka.AmazonKafkaConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonKafkaEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonKafkaConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.Kafka.AmazonKafkaDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonKafkaDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.Kafka.AmazonKafkaException : AmazonServiceException {
    public AmazonKafkaException(string message);
    public AmazonKafkaException(string message, Exception innerException);
    public AmazonKafkaException(Exception innerException);
    public AmazonKafkaException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonKafkaException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kafka.AmazonKafkaRequest : AmazonWebServiceRequest {
}
public class Amazon.Kafka.BrokerAZDistribution : ConstantClass {
    public static BrokerAZDistribution DEFAULT;
    public BrokerAZDistribution(string value);
    private static BrokerAZDistribution();
    public static BrokerAZDistribution FindValue(string value);
    public static BrokerAZDistribution op_Implicit(string value);
}
public class Amazon.Kafka.ClientBroker : ConstantClass {
    public static ClientBroker PLAINTEXT;
    public static ClientBroker TLS;
    public static ClientBroker TLS_PLAINTEXT;
    public ClientBroker(string value);
    private static ClientBroker();
    public static ClientBroker FindValue(string value);
    public static ClientBroker op_Implicit(string value);
}
public class Amazon.Kafka.ClusterState : ConstantClass {
    public static ClusterState ACTIVE;
    public static ClusterState CREATING;
    public static ClusterState DELETING;
    public static ClusterState FAILED;
    public static ClusterState HEALING;
    public static ClusterState MAINTENANCE;
    public static ClusterState REBOOTING_BROKER;
    public static ClusterState UPDATING;
    public ClusterState(string value);
    private static ClusterState();
    public static ClusterState FindValue(string value);
    public static ClusterState op_Implicit(string value);
}
public class Amazon.Kafka.ClusterType : ConstantClass {
    public static ClusterType PROVISIONED;
    public static ClusterType SERVERLESS;
    public ClusterType(string value);
    private static ClusterType();
    public static ClusterType FindValue(string value);
    public static ClusterType op_Implicit(string value);
}
public class Amazon.Kafka.ConfigurationState : ConstantClass {
    public static ConfigurationState ACTIVE;
    public static ConfigurationState DELETE_FAILED;
    public static ConfigurationState DELETING;
    public ConfigurationState(string value);
    private static ConfigurationState();
    public static ConfigurationState FindValue(string value);
    public static ConfigurationState op_Implicit(string value);
}
public class Amazon.Kafka.CustomerActionStatus : ConstantClass {
    public static CustomerActionStatus ACTION_RECOMMENDED;
    public static CustomerActionStatus CRITICAL_ACTION_REQUIRED;
    public static CustomerActionStatus NONE;
    public CustomerActionStatus(string value);
    private static CustomerActionStatus();
    public static CustomerActionStatus FindValue(string value);
    public static CustomerActionStatus op_Implicit(string value);
}
public class Amazon.Kafka.Endpoints.KafkaEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.Kafka.EnhancedMonitoring : ConstantClass {
    public static EnhancedMonitoring DEFAULT;
    public static EnhancedMonitoring PER_BROKER;
    public static EnhancedMonitoring PER_TOPIC_PER_BROKER;
    public static EnhancedMonitoring PER_TOPIC_PER_PARTITION;
    public EnhancedMonitoring(string value);
    private static EnhancedMonitoring();
    public static EnhancedMonitoring FindValue(string value);
    public static EnhancedMonitoring op_Implicit(string value);
}
public interface Amazon.Kafka.IAmazonKafka {
    public IKafkaPaginatorFactory Paginators { get; }
    public abstract virtual IKafkaPaginatorFactory get_Paginators();
    public abstract virtual Task`1<BatchAssociateScramSecretResponse> BatchAssociateScramSecretAsync(BatchAssociateScramSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchDisassociateScramSecretResponse> BatchDisassociateScramSecretAsync(BatchDisassociateScramSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateClusterResponse> CreateClusterAsync(CreateClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateClusterV2Response> CreateClusterV2Async(CreateClusterV2Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateConfigurationResponse> CreateConfigurationAsync(CreateConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReplicatorResponse> CreateReplicatorAsync(CreateReplicatorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcConnectionResponse> CreateVpcConnectionAsync(CreateVpcConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteClusterResponse> DeleteClusterAsync(DeleteClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteClusterPolicyResponse> DeleteClusterPolicyAsync(DeleteClusterPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteConfigurationResponse> DeleteConfigurationAsync(DeleteConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReplicatorResponse> DeleteReplicatorAsync(DeleteReplicatorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcConnectionResponse> DeleteVpcConnectionAsync(DeleteVpcConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClusterResponse> DescribeClusterAsync(DescribeClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClusterOperationResponse> DescribeClusterOperationAsync(DescribeClusterOperationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClusterOperationV2Response> DescribeClusterOperationV2Async(DescribeClusterOperationV2Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClusterV2Response> DescribeClusterV2Async(DescribeClusterV2Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConfigurationResponse> DescribeConfigurationAsync(DescribeConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConfigurationRevisionResponse> DescribeConfigurationRevisionAsync(DescribeConfigurationRevisionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicatorResponse> DescribeReplicatorAsync(DescribeReplicatorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcConnectionResponse> DescribeVpcConnectionAsync(DescribeVpcConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBootstrapBrokersResponse> GetBootstrapBrokersAsync(GetBootstrapBrokersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetClusterPolicyResponse> GetClusterPolicyAsync(GetClusterPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCompatibleKafkaVersionsResponse> GetCompatibleKafkaVersionsAsync(GetCompatibleKafkaVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListClientVpcConnectionsResponse> ListClientVpcConnectionsAsync(ListClientVpcConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListClusterOperationsResponse> ListClusterOperationsAsync(ListClusterOperationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListClusterOperationsV2Response> ListClusterOperationsV2Async(ListClusterOperationsV2Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListClustersResponse> ListClustersAsync(ListClustersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListClustersV2Response> ListClustersV2Async(ListClustersV2Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListConfigurationRevisionsResponse> ListConfigurationRevisionsAsync(ListConfigurationRevisionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListConfigurationsResponse> ListConfigurationsAsync(ListConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListKafkaVersionsResponse> ListKafkaVersionsAsync(ListKafkaVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListNodesResponse> ListNodesAsync(ListNodesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListReplicatorsResponse> ListReplicatorsAsync(ListReplicatorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListScramSecretsResponse> ListScramSecretsAsync(ListScramSecretsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVpcConnectionsResponse> ListVpcConnectionsAsync(ListVpcConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutClusterPolicyResponse> PutClusterPolicyAsync(PutClusterPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootBrokerResponse> RebootBrokerAsync(RebootBrokerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RejectClientVpcConnectionResponse> RejectClientVpcConnectionAsync(RejectClientVpcConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateBrokerCountResponse> UpdateBrokerCountAsync(UpdateBrokerCountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateBrokerStorageResponse> UpdateBrokerStorageAsync(UpdateBrokerStorageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateBrokerTypeResponse> UpdateBrokerTypeAsync(UpdateBrokerTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateClusterConfigurationResponse> UpdateClusterConfigurationAsync(UpdateClusterConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateClusterKafkaVersionResponse> UpdateClusterKafkaVersionAsync(UpdateClusterKafkaVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConfigurationResponse> UpdateConfigurationAsync(UpdateConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConnectivityResponse> UpdateConnectivityAsync(UpdateConnectivityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateMonitoringResponse> UpdateMonitoringAsync(UpdateMonitoringRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateReplicationInfoResponse> UpdateReplicationInfoAsync(UpdateReplicationInfoRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSecurityResponse> UpdateSecurityAsync(UpdateSecurityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateStorageResponse> UpdateStorageAsync(UpdateStorageRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.Kafka.Internal.AmazonKafkaEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Kafka.Internal.AmazonKafkaEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Kafka.Internal.AmazonKafkaMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Kafka.KafkaVersionStatus : ConstantClass {
    public static KafkaVersionStatus ACTIVE;
    public static KafkaVersionStatus DEPRECATED;
    public KafkaVersionStatus(string value);
    private static KafkaVersionStatus();
    public static KafkaVersionStatus FindValue(string value);
    public static KafkaVersionStatus op_Implicit(string value);
}
public class Amazon.Kafka.Model.AmazonMskCluster : object {
    private string _mskClusterArn;
    [AWSPropertyAttribute]
public string MskClusterArn { get; public set; }
    public string get_MskClusterArn();
    public void set_MskClusterArn(string value);
    internal bool IsSetMskClusterArn();
}
public class Amazon.Kafka.Model.BadRequestException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
    public BadRequestException(Exception innerException);
    public BadRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BadRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.BatchAssociateScramSecretRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private List`1<string> _secretArnList;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecretArnList { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public List`1<string> get_SecretArnList();
    public void set_SecretArnList(List`1<string> value);
    internal bool IsSetSecretArnList();
}
public class Amazon.Kafka.Model.BatchAssociateScramSecretResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private List`1<UnprocessedScramSecret> _unprocessedScramSecrets;
    public string ClusterArn { get; public set; }
    public List`1<UnprocessedScramSecret> UnprocessedScramSecrets { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public List`1<UnprocessedScramSecret> get_UnprocessedScramSecrets();
    public void set_UnprocessedScramSecrets(List`1<UnprocessedScramSecret> value);
    internal bool IsSetUnprocessedScramSecrets();
}
public class Amazon.Kafka.Model.BatchDisassociateScramSecretRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private List`1<string> _secretArnList;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecretArnList { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public List`1<string> get_SecretArnList();
    public void set_SecretArnList(List`1<string> value);
    internal bool IsSetSecretArnList();
}
public class Amazon.Kafka.Model.BatchDisassociateScramSecretResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private List`1<UnprocessedScramSecret> _unprocessedScramSecrets;
    public string ClusterArn { get; public set; }
    public List`1<UnprocessedScramSecret> UnprocessedScramSecrets { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public List`1<UnprocessedScramSecret> get_UnprocessedScramSecrets();
    public void set_UnprocessedScramSecrets(List`1<UnprocessedScramSecret> value);
    internal bool IsSetUnprocessedScramSecrets();
}
public class Amazon.Kafka.Model.BrokerCountUpdateInfo : object {
    private List`1<double> _createdBrokerIds;
    private List`1<double> _deletedBrokerIds;
    public List`1<double> CreatedBrokerIds { get; public set; }
    public List`1<double> DeletedBrokerIds { get; public set; }
    public List`1<double> get_CreatedBrokerIds();
    public void set_CreatedBrokerIds(List`1<double> value);
    internal bool IsSetCreatedBrokerIds();
    public List`1<double> get_DeletedBrokerIds();
    public void set_DeletedBrokerIds(List`1<double> value);
    internal bool IsSetDeletedBrokerIds();
}
public class Amazon.Kafka.Model.BrokerEBSVolumeInfo : object {
    private string _kafkaBrokerNodeId;
    private ProvisionedThroughput _provisionedThroughput;
    private Nullable`1<int> _volumeSizeGB;
    [AWSPropertyAttribute]
public string KafkaBrokerNodeId { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public Nullable`1<int> VolumeSizeGB { get; public set; }
    public string get_KafkaBrokerNodeId();
    public void set_KafkaBrokerNodeId(string value);
    internal bool IsSetKafkaBrokerNodeId();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public Nullable`1<int> get_VolumeSizeGB();
    public void set_VolumeSizeGB(Nullable`1<int> value);
    internal bool IsSetVolumeSizeGB();
}
public class Amazon.Kafka.Model.BrokerLogs : object {
    private CloudWatchLogs _cloudWatchLogs;
    private Firehose _firehose;
    private S3 _s3;
    public CloudWatchLogs CloudWatchLogs { get; public set; }
    public Firehose Firehose { get; public set; }
    public S3 S3 { get; public set; }
    public CloudWatchLogs get_CloudWatchLogs();
    public void set_CloudWatchLogs(CloudWatchLogs value);
    internal bool IsSetCloudWatchLogs();
    public Firehose get_Firehose();
    public void set_Firehose(Firehose value);
    internal bool IsSetFirehose();
    public S3 get_S3();
    public void set_S3(S3 value);
    internal bool IsSetS3();
}
public class Amazon.Kafka.Model.BrokerNodeGroupInfo : object {
    private BrokerAZDistribution _brokerAZDistribution;
    private List`1<string> _clientSubnets;
    private ConnectivityInfo _connectivityInfo;
    private string _instanceType;
    private List`1<string> _securityGroups;
    private StorageInfo _storageInfo;
    private List`1<string> _zoneIds;
    public BrokerAZDistribution BrokerAZDistribution { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ClientSubnets { get; public set; }
    public ConnectivityInfo ConnectivityInfo { get; public set; }
    [AWSPropertyAttribute]
public string InstanceType { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public StorageInfo StorageInfo { get; public set; }
    public List`1<string> ZoneIds { get; public set; }
    public BrokerAZDistribution get_BrokerAZDistribution();
    public void set_BrokerAZDistribution(BrokerAZDistribution value);
    internal bool IsSetBrokerAZDistribution();
    public List`1<string> get_ClientSubnets();
    public void set_ClientSubnets(List`1<string> value);
    internal bool IsSetClientSubnets();
    public ConnectivityInfo get_ConnectivityInfo();
    public void set_ConnectivityInfo(ConnectivityInfo value);
    internal bool IsSetConnectivityInfo();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public StorageInfo get_StorageInfo();
    public void set_StorageInfo(StorageInfo value);
    internal bool IsSetStorageInfo();
    public List`1<string> get_ZoneIds();
    public void set_ZoneIds(List`1<string> value);
    internal bool IsSetZoneIds();
}
public class Amazon.Kafka.Model.BrokerNodeInfo : object {
    private string _attachedENIId;
    private Nullable`1<double> _brokerId;
    private string _clientSubnet;
    private string _clientVpcIpAddress;
    private BrokerSoftwareInfo _currentBrokerSoftwareInfo;
    private List`1<string> _endpoints;
    public string AttachedENIId { get; public set; }
    public Nullable`1<double> BrokerId { get; public set; }
    public string ClientSubnet { get; public set; }
    public string ClientVpcIpAddress { get; public set; }
    public BrokerSoftwareInfo CurrentBrokerSoftwareInfo { get; public set; }
    public List`1<string> Endpoints { get; public set; }
    public string get_AttachedENIId();
    public void set_AttachedENIId(string value);
    internal bool IsSetAttachedENIId();
    public Nullable`1<double> get_BrokerId();
    public void set_BrokerId(Nullable`1<double> value);
    internal bool IsSetBrokerId();
    public string get_ClientSubnet();
    public void set_ClientSubnet(string value);
    internal bool IsSetClientSubnet();
    public string get_ClientVpcIpAddress();
    public void set_ClientVpcIpAddress(string value);
    internal bool IsSetClientVpcIpAddress();
    public BrokerSoftwareInfo get_CurrentBrokerSoftwareInfo();
    public void set_CurrentBrokerSoftwareInfo(BrokerSoftwareInfo value);
    internal bool IsSetCurrentBrokerSoftwareInfo();
    public List`1<string> get_Endpoints();
    public void set_Endpoints(List`1<string> value);
    internal bool IsSetEndpoints();
}
public class Amazon.Kafka.Model.BrokerSoftwareInfo : object {
    private string _configurationArn;
    private Nullable`1<long> _configurationRevision;
    private string _kafkaVersion;
    public string ConfigurationArn { get; public set; }
    public Nullable`1<long> ConfigurationRevision { get; public set; }
    public string KafkaVersion { get; public set; }
    public string get_ConfigurationArn();
    public void set_ConfigurationArn(string value);
    internal bool IsSetConfigurationArn();
    public Nullable`1<long> get_ConfigurationRevision();
    public void set_ConfigurationRevision(Nullable`1<long> value);
    internal bool IsSetConfigurationRevision();
    public string get_KafkaVersion();
    public void set_KafkaVersion(string value);
    internal bool IsSetKafkaVersion();
}
public class Amazon.Kafka.Model.ClientAuthentication : object {
    private Sasl _sasl;
    private Tls _tls;
    private Unauthenticated _unauthenticated;
    public Sasl Sasl { get; public set; }
    public Tls Tls { get; public set; }
    public Unauthenticated Unauthenticated { get; public set; }
    public Sasl get_Sasl();
    public void set_Sasl(Sasl value);
    internal bool IsSetSasl();
    public Tls get_Tls();
    public void set_Tls(Tls value);
    internal bool IsSetTls();
    public Unauthenticated get_Unauthenticated();
    public void set_Unauthenticated(Unauthenticated value);
    internal bool IsSetUnauthenticated();
}
public class Amazon.Kafka.Model.ClientVpcConnection : object {
    private string _authentication;
    private Nullable`1<DateTime> _creationTime;
    private string _owner;
    private VpcConnectionState _state;
    private string _vpcConnectionArn;
    public string Authentication { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string Owner { get; public set; }
    public VpcConnectionState State { get; public set; }
    [AWSPropertyAttribute]
public string VpcConnectionArn { get; public set; }
    public string get_Authentication();
    public void set_Authentication(string value);
    internal bool IsSetAuthentication();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public VpcConnectionState get_State();
    public void set_State(VpcConnectionState value);
    internal bool IsSetState();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
}
public class Amazon.Kafka.Model.CloudWatchLogs : object {
    private Nullable`1<bool> _enabled;
    private string _logGroup;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string LogGroup { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_LogGroup();
    public void set_LogGroup(string value);
    internal bool IsSetLogGroup();
}
public class Amazon.Kafka.Model.Cluster : object {
    private string _activeOperationArn;
    private string _clusterArn;
    private string _clusterName;
    private ClusterType _clusterType;
    private Nullable`1<DateTime> _creationTime;
    private string _currentVersion;
    private Provisioned _provisioned;
    private Serverless _serverless;
    private ClusterState _state;
    private StateInfo _stateInfo;
    private Dictionary`2<string, string> _tags;
    public string ActiveOperationArn { get; public set; }
    public string ClusterArn { get; public set; }
    public string ClusterName { get; public set; }
    public ClusterType ClusterType { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string CurrentVersion { get; public set; }
    public Provisioned Provisioned { get; public set; }
    public Serverless Serverless { get; public set; }
    public ClusterState State { get; public set; }
    public StateInfo StateInfo { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ActiveOperationArn();
    public void set_ActiveOperationArn(string value);
    internal bool IsSetActiveOperationArn();
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterName();
    public void set_ClusterName(string value);
    internal bool IsSetClusterName();
    public ClusterType get_ClusterType();
    public void set_ClusterType(ClusterType value);
    internal bool IsSetClusterType();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public Provisioned get_Provisioned();
    public void set_Provisioned(Provisioned value);
    internal bool IsSetProvisioned();
    public Serverless get_Serverless();
    public void set_Serverless(Serverless value);
    internal bool IsSetServerless();
    public ClusterState get_State();
    public void set_State(ClusterState value);
    internal bool IsSetState();
    public StateInfo get_StateInfo();
    public void set_StateInfo(StateInfo value);
    internal bool IsSetStateInfo();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kafka.Model.ClusterInfo : object {
    private string _activeOperationArn;
    private BrokerNodeGroupInfo _brokerNodeGroupInfo;
    private ClientAuthentication _clientAuthentication;
    private string _clusterArn;
    private string _clusterName;
    private Nullable`1<DateTime> _creationTime;
    private BrokerSoftwareInfo _currentBrokerSoftwareInfo;
    private string _currentVersion;
    private CustomerActionStatus _customerActionStatus;
    private EncryptionInfo _encryptionInfo;
    private EnhancedMonitoring _enhancedMonitoring;
    private LoggingInfo _loggingInfo;
    private Nullable`1<int> _numberOfBrokerNodes;
    private OpenMonitoring _openMonitoring;
    private ClusterState _state;
    private StateInfo _stateInfo;
    private StorageMode _storageMode;
    private Dictionary`2<string, string> _tags;
    private string _zookeeperConnectString;
    private string _zookeeperConnectStringTls;
    public string ActiveOperationArn { get; public set; }
    public BrokerNodeGroupInfo BrokerNodeGroupInfo { get; public set; }
    public ClientAuthentication ClientAuthentication { get; public set; }
    public string ClusterArn { get; public set; }
    public string ClusterName { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public BrokerSoftwareInfo CurrentBrokerSoftwareInfo { get; public set; }
    public string CurrentVersion { get; public set; }
    public CustomerActionStatus CustomerActionStatus { get; public set; }
    public EncryptionInfo EncryptionInfo { get; public set; }
    public EnhancedMonitoring EnhancedMonitoring { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    public Nullable`1<int> NumberOfBrokerNodes { get; public set; }
    public OpenMonitoring OpenMonitoring { get; public set; }
    public ClusterState State { get; public set; }
    public StateInfo StateInfo { get; public set; }
    public StorageMode StorageMode { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string ZookeeperConnectString { get; public set; }
    public string ZookeeperConnectStringTls { get; public set; }
    public string get_ActiveOperationArn();
    public void set_ActiveOperationArn(string value);
    internal bool IsSetActiveOperationArn();
    public BrokerNodeGroupInfo get_BrokerNodeGroupInfo();
    public void set_BrokerNodeGroupInfo(BrokerNodeGroupInfo value);
    internal bool IsSetBrokerNodeGroupInfo();
    public ClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterName();
    public void set_ClusterName(string value);
    internal bool IsSetClusterName();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public BrokerSoftwareInfo get_CurrentBrokerSoftwareInfo();
    public void set_CurrentBrokerSoftwareInfo(BrokerSoftwareInfo value);
    internal bool IsSetCurrentBrokerSoftwareInfo();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public CustomerActionStatus get_CustomerActionStatus();
    public void set_CustomerActionStatus(CustomerActionStatus value);
    internal bool IsSetCustomerActionStatus();
    public EncryptionInfo get_EncryptionInfo();
    public void set_EncryptionInfo(EncryptionInfo value);
    internal bool IsSetEncryptionInfo();
    public EnhancedMonitoring get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(EnhancedMonitoring value);
    internal bool IsSetEnhancedMonitoring();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public Nullable`1<int> get_NumberOfBrokerNodes();
    public void set_NumberOfBrokerNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfBrokerNodes();
    public OpenMonitoring get_OpenMonitoring();
    public void set_OpenMonitoring(OpenMonitoring value);
    internal bool IsSetOpenMonitoring();
    public ClusterState get_State();
    public void set_State(ClusterState value);
    internal bool IsSetState();
    public StateInfo get_StateInfo();
    public void set_StateInfo(StateInfo value);
    internal bool IsSetStateInfo();
    public StorageMode get_StorageMode();
    public void set_StorageMode(StorageMode value);
    internal bool IsSetStorageMode();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_ZookeeperConnectString();
    public void set_ZookeeperConnectString(string value);
    internal bool IsSetZookeeperConnectString();
    public string get_ZookeeperConnectStringTls();
    public void set_ZookeeperConnectStringTls(string value);
    internal bool IsSetZookeeperConnectStringTls();
}
public class Amazon.Kafka.Model.ClusterOperationInfo : object {
    private string _clientRequestId;
    private string _clusterArn;
    private Nullable`1<DateTime> _creationTime;
    private Nullable`1<DateTime> _endTime;
    private ErrorInfo _errorInfo;
    private string _operationArn;
    private string _operationState;
    private List`1<ClusterOperationStep> _operationSteps;
    private string _operationType;
    private MutableClusterInfo _sourceClusterInfo;
    private MutableClusterInfo _targetClusterInfo;
    private VpcConnectionInfo _vpcConnectionInfo;
    public string ClientRequestId { get; public set; }
    public string ClusterArn { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public ErrorInfo ErrorInfo { get; public set; }
    public string OperationArn { get; public set; }
    public string OperationState { get; public set; }
    public List`1<ClusterOperationStep> OperationSteps { get; public set; }
    public string OperationType { get; public set; }
    public MutableClusterInfo SourceClusterInfo { get; public set; }
    public MutableClusterInfo TargetClusterInfo { get; public set; }
    public VpcConnectionInfo VpcConnectionInfo { get; public set; }
    public string get_ClientRequestId();
    public void set_ClientRequestId(string value);
    internal bool IsSetClientRequestId();
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public ErrorInfo get_ErrorInfo();
    public void set_ErrorInfo(ErrorInfo value);
    internal bool IsSetErrorInfo();
    public string get_OperationArn();
    public void set_OperationArn(string value);
    internal bool IsSetOperationArn();
    public string get_OperationState();
    public void set_OperationState(string value);
    internal bool IsSetOperationState();
    public List`1<ClusterOperationStep> get_OperationSteps();
    public void set_OperationSteps(List`1<ClusterOperationStep> value);
    internal bool IsSetOperationSteps();
    public string get_OperationType();
    public void set_OperationType(string value);
    internal bool IsSetOperationType();
    public MutableClusterInfo get_SourceClusterInfo();
    public void set_SourceClusterInfo(MutableClusterInfo value);
    internal bool IsSetSourceClusterInfo();
    public MutableClusterInfo get_TargetClusterInfo();
    public void set_TargetClusterInfo(MutableClusterInfo value);
    internal bool IsSetTargetClusterInfo();
    public VpcConnectionInfo get_VpcConnectionInfo();
    public void set_VpcConnectionInfo(VpcConnectionInfo value);
    internal bool IsSetVpcConnectionInfo();
}
public class Amazon.Kafka.Model.ClusterOperationStep : object {
    private ClusterOperationStepInfo _stepInfo;
    private string _stepName;
    public ClusterOperationStepInfo StepInfo { get; public set; }
    public string StepName { get; public set; }
    public ClusterOperationStepInfo get_StepInfo();
    public void set_StepInfo(ClusterOperationStepInfo value);
    internal bool IsSetStepInfo();
    public string get_StepName();
    public void set_StepName(string value);
    internal bool IsSetStepName();
}
public class Amazon.Kafka.Model.ClusterOperationStepInfo : object {
    private string _stepStatus;
    public string StepStatus { get; public set; }
    public string get_StepStatus();
    public void set_StepStatus(string value);
    internal bool IsSetStepStatus();
}
public class Amazon.Kafka.Model.ClusterOperationV2 : object {
    private string _clusterArn;
    private ClusterType _clusterType;
    private Nullable`1<DateTime> _endTime;
    private ErrorInfo _errorInfo;
    private string _operationArn;
    private string _operationState;
    private string _operationType;
    private ClusterOperationV2Provisioned _provisioned;
    private ClusterOperationV2Serverless _serverless;
    private Nullable`1<DateTime> _startTime;
    public string ClusterArn { get; public set; }
    public ClusterType ClusterType { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public ErrorInfo ErrorInfo { get; public set; }
    public string OperationArn { get; public set; }
    public string OperationState { get; public set; }
    public string OperationType { get; public set; }
    public ClusterOperationV2Provisioned Provisioned { get; public set; }
    public ClusterOperationV2Serverless Serverless { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public ClusterType get_ClusterType();
    public void set_ClusterType(ClusterType value);
    internal bool IsSetClusterType();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public ErrorInfo get_ErrorInfo();
    public void set_ErrorInfo(ErrorInfo value);
    internal bool IsSetErrorInfo();
    public string get_OperationArn();
    public void set_OperationArn(string value);
    internal bool IsSetOperationArn();
    public string get_OperationState();
    public void set_OperationState(string value);
    internal bool IsSetOperationState();
    public string get_OperationType();
    public void set_OperationType(string value);
    internal bool IsSetOperationType();
    public ClusterOperationV2Provisioned get_Provisioned();
    public void set_Provisioned(ClusterOperationV2Provisioned value);
    internal bool IsSetProvisioned();
    public ClusterOperationV2Serverless get_Serverless();
    public void set_Serverless(ClusterOperationV2Serverless value);
    internal bool IsSetServerless();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.Kafka.Model.ClusterOperationV2Provisioned : object {
    private List`1<ClusterOperationStep> _operationSteps;
    private MutableClusterInfo _sourceClusterInfo;
    private MutableClusterInfo _targetClusterInfo;
    private VpcConnectionInfo _vpcConnectionInfo;
    public List`1<ClusterOperationStep> OperationSteps { get; public set; }
    public MutableClusterInfo SourceClusterInfo { get; public set; }
    public MutableClusterInfo TargetClusterInfo { get; public set; }
    public VpcConnectionInfo VpcConnectionInfo { get; public set; }
    public List`1<ClusterOperationStep> get_OperationSteps();
    public void set_OperationSteps(List`1<ClusterOperationStep> value);
    internal bool IsSetOperationSteps();
    public MutableClusterInfo get_SourceClusterInfo();
    public void set_SourceClusterInfo(MutableClusterInfo value);
    internal bool IsSetSourceClusterInfo();
    public MutableClusterInfo get_TargetClusterInfo();
    public void set_TargetClusterInfo(MutableClusterInfo value);
    internal bool IsSetTargetClusterInfo();
    public VpcConnectionInfo get_VpcConnectionInfo();
    public void set_VpcConnectionInfo(VpcConnectionInfo value);
    internal bool IsSetVpcConnectionInfo();
}
public class Amazon.Kafka.Model.ClusterOperationV2Serverless : object {
    private VpcConnectionInfoServerless _vpcConnectionInfo;
    public VpcConnectionInfoServerless VpcConnectionInfo { get; public set; }
    public VpcConnectionInfoServerless get_VpcConnectionInfo();
    public void set_VpcConnectionInfo(VpcConnectionInfoServerless value);
    internal bool IsSetVpcConnectionInfo();
}
public class Amazon.Kafka.Model.ClusterOperationV2Summary : object {
    private string _clusterArn;
    private ClusterType _clusterType;
    private Nullable`1<DateTime> _endTime;
    private string _operationArn;
    private string _operationState;
    private string _operationType;
    private Nullable`1<DateTime> _startTime;
    public string ClusterArn { get; public set; }
    public ClusterType ClusterType { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string OperationArn { get; public set; }
    public string OperationState { get; public set; }
    public string OperationType { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public ClusterType get_ClusterType();
    public void set_ClusterType(ClusterType value);
    internal bool IsSetClusterType();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_OperationArn();
    public void set_OperationArn(string value);
    internal bool IsSetOperationArn();
    public string get_OperationState();
    public void set_OperationState(string value);
    internal bool IsSetOperationState();
    public string get_OperationType();
    public void set_OperationType(string value);
    internal bool IsSetOperationType();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.Kafka.Model.CompatibleKafkaVersion : object {
    private string _sourceVersion;
    private List`1<string> _targetVersions;
    public string SourceVersion { get; public set; }
    public List`1<string> TargetVersions { get; public set; }
    public string get_SourceVersion();
    public void set_SourceVersion(string value);
    internal bool IsSetSourceVersion();
    public List`1<string> get_TargetVersions();
    public void set_TargetVersions(List`1<string> value);
    internal bool IsSetTargetVersions();
}
public class Amazon.Kafka.Model.Configuration : object {
    private string _arn;
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private List`1<string> _kafkaVersions;
    private ConfigurationRevision _latestRevision;
    private string _name;
    private ConfigurationState _state;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> KafkaVersions { get; public set; }
    [AWSPropertyAttribute]
public ConfigurationRevision LatestRevision { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public ConfigurationState State { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_KafkaVersions();
    public void set_KafkaVersions(List`1<string> value);
    internal bool IsSetKafkaVersions();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ConfigurationState get_State();
    public void set_State(ConfigurationState value);
    internal bool IsSetState();
}
public class Amazon.Kafka.Model.ConfigurationInfo : object {
    private string _arn;
    private Nullable`1<long> _revision;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Revision { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<long> get_Revision();
    public void set_Revision(Nullable`1<long> value);
    internal bool IsSetRevision();
}
public class Amazon.Kafka.Model.ConfigurationRevision : object {
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private Nullable`1<long> _revision;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Revision { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<long> get_Revision();
    public void set_Revision(Nullable`1<long> value);
    internal bool IsSetRevision();
}
public class Amazon.Kafka.Model.ConflictException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.ConnectivityInfo : object {
    private PublicAccess _publicAccess;
    private VpcConnectivity _vpcConnectivity;
    public PublicAccess PublicAccess { get; public set; }
    public VpcConnectivity VpcConnectivity { get; public set; }
    public PublicAccess get_PublicAccess();
    public void set_PublicAccess(PublicAccess value);
    internal bool IsSetPublicAccess();
    public VpcConnectivity get_VpcConnectivity();
    public void set_VpcConnectivity(VpcConnectivity value);
    internal bool IsSetVpcConnectivity();
}
public class Amazon.Kafka.Model.ConsumerGroupReplication : object {
    private List`1<string> _consumerGroupsToExclude;
    private List`1<string> _consumerGroupsToReplicate;
    private Nullable`1<bool> _detectAndCopyNewConsumerGroups;
    private Nullable`1<bool> _synchroniseConsumerGroupOffsets;
    public List`1<string> ConsumerGroupsToExclude { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ConsumerGroupsToReplicate { get; public set; }
    public Nullable`1<bool> DetectAndCopyNewConsumerGroups { get; public set; }
    public Nullable`1<bool> SynchroniseConsumerGroupOffsets { get; public set; }
    public List`1<string> get_ConsumerGroupsToExclude();
    public void set_ConsumerGroupsToExclude(List`1<string> value);
    internal bool IsSetConsumerGroupsToExclude();
    public List`1<string> get_ConsumerGroupsToReplicate();
    public void set_ConsumerGroupsToReplicate(List`1<string> value);
    internal bool IsSetConsumerGroupsToReplicate();
    public Nullable`1<bool> get_DetectAndCopyNewConsumerGroups();
    public void set_DetectAndCopyNewConsumerGroups(Nullable`1<bool> value);
    internal bool IsSetDetectAndCopyNewConsumerGroups();
    public Nullable`1<bool> get_SynchroniseConsumerGroupOffsets();
    public void set_SynchroniseConsumerGroupOffsets(Nullable`1<bool> value);
    internal bool IsSetSynchroniseConsumerGroupOffsets();
}
public class Amazon.Kafka.Model.ConsumerGroupReplicationUpdate : object {
    private List`1<string> _consumerGroupsToExclude;
    private List`1<string> _consumerGroupsToReplicate;
    private Nullable`1<bool> _detectAndCopyNewConsumerGroups;
    private Nullable`1<bool> _synchroniseConsumerGroupOffsets;
    [AWSPropertyAttribute]
public List`1<string> ConsumerGroupsToExclude { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ConsumerGroupsToReplicate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> DetectAndCopyNewConsumerGroups { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> SynchroniseConsumerGroupOffsets { get; public set; }
    public List`1<string> get_ConsumerGroupsToExclude();
    public void set_ConsumerGroupsToExclude(List`1<string> value);
    internal bool IsSetConsumerGroupsToExclude();
    public List`1<string> get_ConsumerGroupsToReplicate();
    public void set_ConsumerGroupsToReplicate(List`1<string> value);
    internal bool IsSetConsumerGroupsToReplicate();
    public Nullable`1<bool> get_DetectAndCopyNewConsumerGroups();
    public void set_DetectAndCopyNewConsumerGroups(Nullable`1<bool> value);
    internal bool IsSetDetectAndCopyNewConsumerGroups();
    public Nullable`1<bool> get_SynchroniseConsumerGroupOffsets();
    public void set_SynchroniseConsumerGroupOffsets(Nullable`1<bool> value);
    internal bool IsSetSynchroniseConsumerGroupOffsets();
}
public class Amazon.Kafka.Model.ControllerNodeInfo : object {
    private List`1<string> _endpoints;
    public List`1<string> Endpoints { get; public set; }
    public List`1<string> get_Endpoints();
    public void set_Endpoints(List`1<string> value);
    internal bool IsSetEndpoints();
}
public class Amazon.Kafka.Model.CreateClusterRequest : AmazonKafkaRequest {
    private BrokerNodeGroupInfo _brokerNodeGroupInfo;
    private ClientAuthentication _clientAuthentication;
    private string _clusterName;
    private ConfigurationInfo _configurationInfo;
    private EncryptionInfo _encryptionInfo;
    private EnhancedMonitoring _enhancedMonitoring;
    private string _kafkaVersion;
    private LoggingInfo _loggingInfo;
    private Nullable`1<int> _numberOfBrokerNodes;
    private OpenMonitoringInfo _openMonitoring;
    private StorageMode _storageMode;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public BrokerNodeGroupInfo BrokerNodeGroupInfo { get; public set; }
    public ClientAuthentication ClientAuthentication { get; public set; }
    [AWSPropertyAttribute]
public string ClusterName { get; public set; }
    public ConfigurationInfo ConfigurationInfo { get; public set; }
    public EncryptionInfo EncryptionInfo { get; public set; }
    public EnhancedMonitoring EnhancedMonitoring { get; public set; }
    [AWSPropertyAttribute]
public string KafkaVersion { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumberOfBrokerNodes { get; public set; }
    public OpenMonitoringInfo OpenMonitoring { get; public set; }
    public StorageMode StorageMode { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public BrokerNodeGroupInfo get_BrokerNodeGroupInfo();
    public void set_BrokerNodeGroupInfo(BrokerNodeGroupInfo value);
    internal bool IsSetBrokerNodeGroupInfo();
    public ClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public string get_ClusterName();
    public void set_ClusterName(string value);
    internal bool IsSetClusterName();
    public ConfigurationInfo get_ConfigurationInfo();
    public void set_ConfigurationInfo(ConfigurationInfo value);
    internal bool IsSetConfigurationInfo();
    public EncryptionInfo get_EncryptionInfo();
    public void set_EncryptionInfo(EncryptionInfo value);
    internal bool IsSetEncryptionInfo();
    public EnhancedMonitoring get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(EnhancedMonitoring value);
    internal bool IsSetEnhancedMonitoring();
    public string get_KafkaVersion();
    public void set_KafkaVersion(string value);
    internal bool IsSetKafkaVersion();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public Nullable`1<int> get_NumberOfBrokerNodes();
    public void set_NumberOfBrokerNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfBrokerNodes();
    public OpenMonitoringInfo get_OpenMonitoring();
    public void set_OpenMonitoring(OpenMonitoringInfo value);
    internal bool IsSetOpenMonitoring();
    public StorageMode get_StorageMode();
    public void set_StorageMode(StorageMode value);
    internal bool IsSetStorageMode();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kafka.Model.CreateClusterResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterName;
    private ClusterState _state;
    public string ClusterArn { get; public set; }
    public string ClusterName { get; public set; }
    public ClusterState State { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterName();
    public void set_ClusterName(string value);
    internal bool IsSetClusterName();
    public ClusterState get_State();
    public void set_State(ClusterState value);
    internal bool IsSetState();
}
public class Amazon.Kafka.Model.CreateClusterV2Request : AmazonKafkaRequest {
    private string _clusterName;
    private ProvisionedRequest _provisioned;
    private ServerlessRequest _serverless;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ClusterName { get; public set; }
    public ProvisionedRequest Provisioned { get; public set; }
    public ServerlessRequest Serverless { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ClusterName();
    public void set_ClusterName(string value);
    internal bool IsSetClusterName();
    public ProvisionedRequest get_Provisioned();
    public void set_Provisioned(ProvisionedRequest value);
    internal bool IsSetProvisioned();
    public ServerlessRequest get_Serverless();
    public void set_Serverless(ServerlessRequest value);
    internal bool IsSetServerless();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kafka.Model.CreateClusterV2Response : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterName;
    private ClusterType _clusterType;
    private ClusterState _state;
    public string ClusterArn { get; public set; }
    public string ClusterName { get; public set; }
    public ClusterType ClusterType { get; public set; }
    public ClusterState State { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterName();
    public void set_ClusterName(string value);
    internal bool IsSetClusterName();
    public ClusterType get_ClusterType();
    public void set_ClusterType(ClusterType value);
    internal bool IsSetClusterType();
    public ClusterState get_State();
    public void set_State(ClusterState value);
    internal bool IsSetState();
}
public class Amazon.Kafka.Model.CreateConfigurationRequest : AmazonKafkaRequest {
    private string _description;
    private List`1<string> _kafkaVersions;
    private string _name;
    private MemoryStream _serverProperties;
    public string Description { get; public set; }
    public List`1<string> KafkaVersions { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream ServerProperties { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_KafkaVersions();
    public void set_KafkaVersions(List`1<string> value);
    internal bool IsSetKafkaVersions();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public MemoryStream get_ServerProperties();
    public void set_ServerProperties(MemoryStream value);
    internal bool IsSetServerProperties();
}
public class Amazon.Kafka.Model.CreateConfigurationResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _creationTime;
    private ConfigurationRevision _latestRevision;
    private string _name;
    private ConfigurationState _state;
    public string Arn { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public ConfigurationRevision LatestRevision { get; public set; }
    public string Name { get; public set; }
    public ConfigurationState State { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ConfigurationState get_State();
    public void set_State(ConfigurationState value);
    internal bool IsSetState();
}
public class Amazon.Kafka.Model.CreateReplicatorRequest : AmazonKafkaRequest {
    private string _description;
    private List`1<KafkaCluster> _kafkaClusters;
    private List`1<ReplicationInfo> _replicationInfoList;
    private string _replicatorName;
    private string _serviceExecutionRoleArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public List`1<KafkaCluster> KafkaClusters { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReplicationInfo> ReplicationInfoList { get; public set; }
    [AWSPropertyAttribute]
public string ReplicatorName { get; public set; }
    [AWSPropertyAttribute]
public string ServiceExecutionRoleArn { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<KafkaCluster> get_KafkaClusters();
    public void set_KafkaClusters(List`1<KafkaCluster> value);
    internal bool IsSetKafkaClusters();
    public List`1<ReplicationInfo> get_ReplicationInfoList();
    public void set_ReplicationInfoList(List`1<ReplicationInfo> value);
    internal bool IsSetReplicationInfoList();
    public string get_ReplicatorName();
    public void set_ReplicatorName(string value);
    internal bool IsSetReplicatorName();
    public string get_ServiceExecutionRoleArn();
    public void set_ServiceExecutionRoleArn(string value);
    internal bool IsSetServiceExecutionRoleArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kafka.Model.CreateReplicatorResponse : AmazonWebServiceResponse {
    private string _replicatorArn;
    private string _replicatorName;
    private ReplicatorState _replicatorState;
    public string ReplicatorArn { get; public set; }
    public string ReplicatorName { get; public set; }
    public ReplicatorState ReplicatorState { get; public set; }
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
    public string get_ReplicatorName();
    public void set_ReplicatorName(string value);
    internal bool IsSetReplicatorName();
    public ReplicatorState get_ReplicatorState();
    public void set_ReplicatorState(ReplicatorState value);
    internal bool IsSetReplicatorState();
}
public class Amazon.Kafka.Model.CreateVpcConnectionRequest : AmazonKafkaRequest {
    private string _authentication;
    private List`1<string> _clientSubnets;
    private List`1<string> _securityGroups;
    private Dictionary`2<string, string> _tags;
    private string _targetClusterArn;
    private string _vpcId;
    [AWSPropertyAttribute]
public string Authentication { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ClientSubnets { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroups { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_Authentication();
    public void set_Authentication(string value);
    internal bool IsSetAuthentication();
    public List`1<string> get_ClientSubnets();
    public void set_ClientSubnets(List`1<string> value);
    internal bool IsSetClientSubnets();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_TargetClusterArn();
    public void set_TargetClusterArn(string value);
    internal bool IsSetTargetClusterArn();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.Kafka.Model.CreateVpcConnectionResponse : AmazonWebServiceResponse {
    private string _authentication;
    private List`1<string> _clientSubnets;
    private Nullable`1<DateTime> _creationTime;
    private List`1<string> _securityGroups;
    private VpcConnectionState _state;
    private Dictionary`2<string, string> _tags;
    private string _vpcConnectionArn;
    private string _vpcId;
    public string Authentication { get; public set; }
    public List`1<string> ClientSubnets { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public VpcConnectionState State { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string VpcConnectionArn { get; public set; }
    public string VpcId { get; public set; }
    public string get_Authentication();
    public void set_Authentication(string value);
    internal bool IsSetAuthentication();
    public List`1<string> get_ClientSubnets();
    public void set_ClientSubnets(List`1<string> value);
    internal bool IsSetClientSubnets();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public VpcConnectionState get_State();
    public void set_State(VpcConnectionState value);
    internal bool IsSetState();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.Kafka.Model.DeleteClusterPolicyRequest : AmazonKafkaRequest {
    private string _clusterArn;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
}
public class Amazon.Kafka.Model.DeleteClusterPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Kafka.Model.DeleteClusterRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _currentVersion;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public string CurrentVersion { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
}
public class Amazon.Kafka.Model.DeleteClusterResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private ClusterState _state;
    public string ClusterArn { get; public set; }
    public ClusterState State { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public ClusterState get_State();
    public void set_State(ClusterState value);
    internal bool IsSetState();
}
public class Amazon.Kafka.Model.DeleteConfigurationRequest : AmazonKafkaRequest {
    private string _arn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.Kafka.Model.DeleteConfigurationResponse : AmazonWebServiceResponse {
    private string _arn;
    private ConfigurationState _state;
    public string Arn { get; public set; }
    public ConfigurationState State { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public ConfigurationState get_State();
    public void set_State(ConfigurationState value);
    internal bool IsSetState();
}
public class Amazon.Kafka.Model.DeleteReplicatorRequest : AmazonKafkaRequest {
    private string _currentVersion;
    private string _replicatorArn;
    public string CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public string ReplicatorArn { get; public set; }
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
}
public class Amazon.Kafka.Model.DeleteReplicatorResponse : AmazonWebServiceResponse {
    private string _replicatorArn;
    private ReplicatorState _replicatorState;
    public string ReplicatorArn { get; public set; }
    public ReplicatorState ReplicatorState { get; public set; }
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
    public ReplicatorState get_ReplicatorState();
    public void set_ReplicatorState(ReplicatorState value);
    internal bool IsSetReplicatorState();
}
public class Amazon.Kafka.Model.DeleteVpcConnectionRequest : AmazonKafkaRequest {
    private string _arn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.Kafka.Model.DeleteVpcConnectionResponse : AmazonWebServiceResponse {
    private VpcConnectionState _state;
    private string _vpcConnectionArn;
    public VpcConnectionState State { get; public set; }
    public string VpcConnectionArn { get; public set; }
    public VpcConnectionState get_State();
    public void set_State(VpcConnectionState value);
    internal bool IsSetState();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
}
public class Amazon.Kafka.Model.DescribeClusterOperationRequest : AmazonKafkaRequest {
    private string _clusterOperationArn;
    [AWSPropertyAttribute]
public string ClusterOperationArn { get; public set; }
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.DescribeClusterOperationResponse : AmazonWebServiceResponse {
    private ClusterOperationInfo _clusterOperationInfo;
    public ClusterOperationInfo ClusterOperationInfo { get; public set; }
    public ClusterOperationInfo get_ClusterOperationInfo();
    public void set_ClusterOperationInfo(ClusterOperationInfo value);
    internal bool IsSetClusterOperationInfo();
}
public class Amazon.Kafka.Model.DescribeClusterOperationV2Request : AmazonKafkaRequest {
    private string _clusterOperationArn;
    [AWSPropertyAttribute]
public string ClusterOperationArn { get; public set; }
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.DescribeClusterOperationV2Response : AmazonWebServiceResponse {
    private ClusterOperationV2 _clusterOperationInfo;
    public ClusterOperationV2 ClusterOperationInfo { get; public set; }
    public ClusterOperationV2 get_ClusterOperationInfo();
    public void set_ClusterOperationInfo(ClusterOperationV2 value);
    internal bool IsSetClusterOperationInfo();
}
public class Amazon.Kafka.Model.DescribeClusterRequest : AmazonKafkaRequest {
    private string _clusterArn;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
}
public class Amazon.Kafka.Model.DescribeClusterResponse : AmazonWebServiceResponse {
    private ClusterInfo _clusterInfo;
    public ClusterInfo ClusterInfo { get; public set; }
    public ClusterInfo get_ClusterInfo();
    public void set_ClusterInfo(ClusterInfo value);
    internal bool IsSetClusterInfo();
}
public class Amazon.Kafka.Model.DescribeClusterV2Request : AmazonKafkaRequest {
    private string _clusterArn;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
}
public class Amazon.Kafka.Model.DescribeClusterV2Response : AmazonWebServiceResponse {
    private Cluster _clusterInfo;
    public Cluster ClusterInfo { get; public set; }
    public Cluster get_ClusterInfo();
    public void set_ClusterInfo(Cluster value);
    internal bool IsSetClusterInfo();
}
public class Amazon.Kafka.Model.DescribeConfigurationRequest : AmazonKafkaRequest {
    private string _arn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.Kafka.Model.DescribeConfigurationResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private List`1<string> _kafkaVersions;
    private ConfigurationRevision _latestRevision;
    private string _name;
    private ConfigurationState _state;
    public string Arn { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string Description { get; public set; }
    public List`1<string> KafkaVersions { get; public set; }
    public ConfigurationRevision LatestRevision { get; public set; }
    public string Name { get; public set; }
    public ConfigurationState State { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_KafkaVersions();
    public void set_KafkaVersions(List`1<string> value);
    internal bool IsSetKafkaVersions();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ConfigurationState get_State();
    public void set_State(ConfigurationState value);
    internal bool IsSetState();
}
public class Amazon.Kafka.Model.DescribeConfigurationRevisionRequest : AmazonKafkaRequest {
    private string _arn;
    private Nullable`1<long> _revision;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Revision { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<long> get_Revision();
    public void set_Revision(Nullable`1<long> value);
    internal bool IsSetRevision();
}
public class Amazon.Kafka.Model.DescribeConfigurationRevisionResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private Nullable`1<long> _revision;
    private MemoryStream _serverProperties;
    public string Arn { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<long> Revision { get; public set; }
    public MemoryStream ServerProperties { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<long> get_Revision();
    public void set_Revision(Nullable`1<long> value);
    internal bool IsSetRevision();
    public MemoryStream get_ServerProperties();
    public void set_ServerProperties(MemoryStream value);
    internal bool IsSetServerProperties();
}
public class Amazon.Kafka.Model.DescribeReplicatorRequest : AmazonKafkaRequest {
    private string _replicatorArn;
    [AWSPropertyAttribute]
public string ReplicatorArn { get; public set; }
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
}
public class Amazon.Kafka.Model.DescribeReplicatorResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _creationTime;
    private string _currentVersion;
    private Nullable`1<bool> _isReplicatorReference;
    private List`1<KafkaClusterDescription> _kafkaClusters;
    private List`1<ReplicationInfoDescription> _replicationInfoList;
    private string _replicatorArn;
    private string _replicatorDescription;
    private string _replicatorName;
    private string _replicatorResourceArn;
    private ReplicatorState _replicatorState;
    private string _serviceExecutionRoleArn;
    private ReplicationStateInfo _stateInfo;
    private Dictionary`2<string, string> _tags;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string CurrentVersion { get; public set; }
    public Nullable`1<bool> IsReplicatorReference { get; public set; }
    public List`1<KafkaClusterDescription> KafkaClusters { get; public set; }
    public List`1<ReplicationInfoDescription> ReplicationInfoList { get; public set; }
    public string ReplicatorArn { get; public set; }
    public string ReplicatorDescription { get; public set; }
    public string ReplicatorName { get; public set; }
    public string ReplicatorResourceArn { get; public set; }
    public ReplicatorState ReplicatorState { get; public set; }
    public string ServiceExecutionRoleArn { get; public set; }
    public ReplicationStateInfo StateInfo { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public Nullable`1<bool> get_IsReplicatorReference();
    public void set_IsReplicatorReference(Nullable`1<bool> value);
    internal bool IsSetIsReplicatorReference();
    public List`1<KafkaClusterDescription> get_KafkaClusters();
    public void set_KafkaClusters(List`1<KafkaClusterDescription> value);
    internal bool IsSetKafkaClusters();
    public List`1<ReplicationInfoDescription> get_ReplicationInfoList();
    public void set_ReplicationInfoList(List`1<ReplicationInfoDescription> value);
    internal bool IsSetReplicationInfoList();
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
    public string get_ReplicatorDescription();
    public void set_ReplicatorDescription(string value);
    internal bool IsSetReplicatorDescription();
    public string get_ReplicatorName();
    public void set_ReplicatorName(string value);
    internal bool IsSetReplicatorName();
    public string get_ReplicatorResourceArn();
    public void set_ReplicatorResourceArn(string value);
    internal bool IsSetReplicatorResourceArn();
    public ReplicatorState get_ReplicatorState();
    public void set_ReplicatorState(ReplicatorState value);
    internal bool IsSetReplicatorState();
    public string get_ServiceExecutionRoleArn();
    public void set_ServiceExecutionRoleArn(string value);
    internal bool IsSetServiceExecutionRoleArn();
    public ReplicationStateInfo get_StateInfo();
    public void set_StateInfo(ReplicationStateInfo value);
    internal bool IsSetStateInfo();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kafka.Model.DescribeVpcConnectionRequest : AmazonKafkaRequest {
    private string _arn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.Kafka.Model.DescribeVpcConnectionResponse : AmazonWebServiceResponse {
    private string _authentication;
    private Nullable`1<DateTime> _creationTime;
    private List`1<string> _securityGroups;
    private VpcConnectionState _state;
    private List`1<string> _subnets;
    private Dictionary`2<string, string> _tags;
    private string _targetClusterArn;
    private string _vpcConnectionArn;
    private string _vpcId;
    public string Authentication { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public VpcConnectionState State { get; public set; }
    public List`1<string> Subnets { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string TargetClusterArn { get; public set; }
    public string VpcConnectionArn { get; public set; }
    public string VpcId { get; public set; }
    public string get_Authentication();
    public void set_Authentication(string value);
    internal bool IsSetAuthentication();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public VpcConnectionState get_State();
    public void set_State(VpcConnectionState value);
    internal bool IsSetState();
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_TargetClusterArn();
    public void set_TargetClusterArn(string value);
    internal bool IsSetTargetClusterArn();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.Kafka.Model.EBSStorageInfo : object {
    private ProvisionedThroughput _provisionedThroughput;
    private Nullable`1<int> _volumeSize;
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> VolumeSize { get; public set; }
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public Nullable`1<int> get_VolumeSize();
    public void set_VolumeSize(Nullable`1<int> value);
    internal bool IsSetVolumeSize();
}
public class Amazon.Kafka.Model.EncryptionAtRest : object {
    private string _dataVolumeKMSKeyId;
    [AWSPropertyAttribute]
public string DataVolumeKMSKeyId { get; public set; }
    public string get_DataVolumeKMSKeyId();
    public void set_DataVolumeKMSKeyId(string value);
    internal bool IsSetDataVolumeKMSKeyId();
}
public class Amazon.Kafka.Model.EncryptionInfo : object {
    private EncryptionAtRest _encryptionAtRest;
    private EncryptionInTransit _encryptionInTransit;
    public EncryptionAtRest EncryptionAtRest { get; public set; }
    public EncryptionInTransit EncryptionInTransit { get; public set; }
    public EncryptionAtRest get_EncryptionAtRest();
    public void set_EncryptionAtRest(EncryptionAtRest value);
    internal bool IsSetEncryptionAtRest();
    public EncryptionInTransit get_EncryptionInTransit();
    public void set_EncryptionInTransit(EncryptionInTransit value);
    internal bool IsSetEncryptionInTransit();
}
public class Amazon.Kafka.Model.EncryptionInTransit : object {
    private ClientBroker _clientBroker;
    private Nullable`1<bool> _inCluster;
    public ClientBroker ClientBroker { get; public set; }
    public Nullable`1<bool> InCluster { get; public set; }
    public ClientBroker get_ClientBroker();
    public void set_ClientBroker(ClientBroker value);
    internal bool IsSetClientBroker();
    public Nullable`1<bool> get_InCluster();
    public void set_InCluster(Nullable`1<bool> value);
    internal bool IsSetInCluster();
}
public class Amazon.Kafka.Model.ErrorInfo : object {
    private string _errorCode;
    private string _errorString;
    public string ErrorCode { get; public set; }
    public string ErrorString { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorString();
    public void set_ErrorString(string value);
    internal bool IsSetErrorString();
}
public class Amazon.Kafka.Model.Firehose : object {
    private string _deliveryStream;
    private Nullable`1<bool> _enabled;
    public string DeliveryStream { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string get_DeliveryStream();
    public void set_DeliveryStream(string value);
    internal bool IsSetDeliveryStream();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.Kafka.Model.ForbiddenException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public ForbiddenException(string message);
    public ForbiddenException(string message, Exception innerException);
    public ForbiddenException(Exception innerException);
    public ForbiddenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ForbiddenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.GetBootstrapBrokersRequest : AmazonKafkaRequest {
    private string _clusterArn;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
}
public class Amazon.Kafka.Model.GetBootstrapBrokersResponse : AmazonWebServiceResponse {
    private string _bootstrapBrokerString;
    private string _bootstrapBrokerStringPublicSaslIam;
    private string _bootstrapBrokerStringPublicSaslScram;
    private string _bootstrapBrokerStringPublicTls;
    private string _bootstrapBrokerStringSaslIam;
    private string _bootstrapBrokerStringSaslScram;
    private string _bootstrapBrokerStringTls;
    private string _bootstrapBrokerStringVpcConnectivitySaslIam;
    private string _bootstrapBrokerStringVpcConnectivitySaslScram;
    private string _bootstrapBrokerStringVpcConnectivityTls;
    public string BootstrapBrokerString { get; public set; }
    public string BootstrapBrokerStringPublicSaslIam { get; public set; }
    public string BootstrapBrokerStringPublicSaslScram { get; public set; }
    public string BootstrapBrokerStringPublicTls { get; public set; }
    public string BootstrapBrokerStringSaslIam { get; public set; }
    public string BootstrapBrokerStringSaslScram { get; public set; }
    public string BootstrapBrokerStringTls { get; public set; }
    public string BootstrapBrokerStringVpcConnectivitySaslIam { get; public set; }
    public string BootstrapBrokerStringVpcConnectivitySaslScram { get; public set; }
    public string BootstrapBrokerStringVpcConnectivityTls { get; public set; }
    public string get_BootstrapBrokerString();
    public void set_BootstrapBrokerString(string value);
    internal bool IsSetBootstrapBrokerString();
    public string get_BootstrapBrokerStringPublicSaslIam();
    public void set_BootstrapBrokerStringPublicSaslIam(string value);
    internal bool IsSetBootstrapBrokerStringPublicSaslIam();
    public string get_BootstrapBrokerStringPublicSaslScram();
    public void set_BootstrapBrokerStringPublicSaslScram(string value);
    internal bool IsSetBootstrapBrokerStringPublicSaslScram();
    public string get_BootstrapBrokerStringPublicTls();
    public void set_BootstrapBrokerStringPublicTls(string value);
    internal bool IsSetBootstrapBrokerStringPublicTls();
    public string get_BootstrapBrokerStringSaslIam();
    public void set_BootstrapBrokerStringSaslIam(string value);
    internal bool IsSetBootstrapBrokerStringSaslIam();
    public string get_BootstrapBrokerStringSaslScram();
    public void set_BootstrapBrokerStringSaslScram(string value);
    internal bool IsSetBootstrapBrokerStringSaslScram();
    public string get_BootstrapBrokerStringTls();
    public void set_BootstrapBrokerStringTls(string value);
    internal bool IsSetBootstrapBrokerStringTls();
    public string get_BootstrapBrokerStringVpcConnectivitySaslIam();
    public void set_BootstrapBrokerStringVpcConnectivitySaslIam(string value);
    internal bool IsSetBootstrapBrokerStringVpcConnectivitySaslIam();
    public string get_BootstrapBrokerStringVpcConnectivitySaslScram();
    public void set_BootstrapBrokerStringVpcConnectivitySaslScram(string value);
    internal bool IsSetBootstrapBrokerStringVpcConnectivitySaslScram();
    public string get_BootstrapBrokerStringVpcConnectivityTls();
    public void set_BootstrapBrokerStringVpcConnectivityTls(string value);
    internal bool IsSetBootstrapBrokerStringVpcConnectivityTls();
}
public class Amazon.Kafka.Model.GetClusterPolicyRequest : AmazonKafkaRequest {
    private string _clusterArn;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
}
public class Amazon.Kafka.Model.GetClusterPolicyResponse : AmazonWebServiceResponse {
    private string _currentVersion;
    private string _policy;
    public string CurrentVersion { get; public set; }
    public string Policy { get; public set; }
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.Kafka.Model.GetCompatibleKafkaVersionsRequest : AmazonKafkaRequest {
    private string _clusterArn;
    public string ClusterArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
}
public class Amazon.Kafka.Model.GetCompatibleKafkaVersionsResponse : AmazonWebServiceResponse {
    private List`1<CompatibleKafkaVersion> _compatibleKafkaVersions;
    public List`1<CompatibleKafkaVersion> CompatibleKafkaVersions { get; public set; }
    public List`1<CompatibleKafkaVersion> get_CompatibleKafkaVersions();
    public void set_CompatibleKafkaVersions(List`1<CompatibleKafkaVersion> value);
    internal bool IsSetCompatibleKafkaVersions();
}
public class Amazon.Kafka.Model.Iam : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public interface Amazon.Kafka.Model.IKafkaPaginatorFactory {
    public abstract virtual IListClientVpcConnectionsPaginator ListClientVpcConnections(ListClientVpcConnectionsRequest request);
    public abstract virtual IListClusterOperationsPaginator ListClusterOperations(ListClusterOperationsRequest request);
    public abstract virtual IListClusterOperationsV2Paginator ListClusterOperationsV2(ListClusterOperationsV2Request request);
    public abstract virtual IListClustersPaginator ListClusters(ListClustersRequest request);
    public abstract virtual IListClustersV2Paginator ListClustersV2(ListClustersV2Request request);
    public abstract virtual IListConfigurationRevisionsPaginator ListConfigurationRevisions(ListConfigurationRevisionsRequest request);
    public abstract virtual IListConfigurationsPaginator ListConfigurations(ListConfigurationsRequest request);
    public abstract virtual IListKafkaVersionsPaginator ListKafkaVersions(ListKafkaVersionsRequest request);
    public abstract virtual IListNodesPaginator ListNodes(ListNodesRequest request);
    public abstract virtual IListReplicatorsPaginator ListReplicators(ListReplicatorsRequest request);
    public abstract virtual IListScramSecretsPaginator ListScramSecrets(ListScramSecretsRequest request);
    public abstract virtual IListVpcConnectionsPaginator ListVpcConnections(ListVpcConnectionsRequest request);
}
public interface Amazon.Kafka.Model.IListClientVpcConnectionsPaginator {
    public IPaginatedEnumerable`1<ListClientVpcConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpcConnection> ClientVpcConnections { get; }
    public abstract virtual IPaginatedEnumerable`1<ListClientVpcConnectionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClientVpcConnection> get_ClientVpcConnections();
}
public interface Amazon.Kafka.Model.IListClusterOperationsPaginator {
    public IPaginatedEnumerable`1<ListClusterOperationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClusterOperationInfo> ClusterOperationInfoList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListClusterOperationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClusterOperationInfo> get_ClusterOperationInfoList();
}
public interface Amazon.Kafka.Model.IListClusterOperationsV2Paginator {
    public IPaginatedEnumerable`1<ListClusterOperationsV2Response> Responses { get; }
    public IPaginatedEnumerable`1<ClusterOperationV2Summary> ClusterOperationInfoList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListClusterOperationsV2Response> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClusterOperationV2Summary> get_ClusterOperationInfoList();
}
public interface Amazon.Kafka.Model.IListClustersPaginator {
    public IPaginatedEnumerable`1<ListClustersResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClusterInfo> ClusterInfoList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListClustersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ClusterInfo> get_ClusterInfoList();
}
public interface Amazon.Kafka.Model.IListClustersV2Paginator {
    public IPaginatedEnumerable`1<ListClustersV2Response> Responses { get; }
    public IPaginatedEnumerable`1<Cluster> ClusterInfoList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListClustersV2Response> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Cluster> get_ClusterInfoList();
}
public interface Amazon.Kafka.Model.IListConfigurationRevisionsPaginator {
    public IPaginatedEnumerable`1<ListConfigurationRevisionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ConfigurationRevision> Revisions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListConfigurationRevisionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ConfigurationRevision> get_Revisions();
}
public interface Amazon.Kafka.Model.IListConfigurationsPaginator {
    public IPaginatedEnumerable`1<ListConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Configuration> Configurations { get; }
    public abstract virtual IPaginatedEnumerable`1<ListConfigurationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Configuration> get_Configurations();
}
public interface Amazon.Kafka.Model.IListKafkaVersionsPaginator {
    public IPaginatedEnumerable`1<ListKafkaVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<KafkaVersion> KafkaVersions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListKafkaVersionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<KafkaVersion> get_KafkaVersions();
}
public interface Amazon.Kafka.Model.IListNodesPaginator {
    public IPaginatedEnumerable`1<ListNodesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NodeInfo> NodeInfoList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListNodesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<NodeInfo> get_NodeInfoList();
}
public interface Amazon.Kafka.Model.IListReplicatorsPaginator {
    public IPaginatedEnumerable`1<ListReplicatorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReplicatorSummary> Replicators { get; }
    public abstract virtual IPaginatedEnumerable`1<ListReplicatorsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ReplicatorSummary> get_Replicators();
}
public interface Amazon.Kafka.Model.IListScramSecretsPaginator {
    public IPaginatedEnumerable`1<ListScramSecretsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> SecretArnList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListScramSecretsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_SecretArnList();
}
public interface Amazon.Kafka.Model.IListVpcConnectionsPaginator {
    public IPaginatedEnumerable`1<ListVpcConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcConnection> VpcConnections { get; }
    public abstract virtual IPaginatedEnumerable`1<ListVpcConnectionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VpcConnection> get_VpcConnections();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.AmazonMskClusterMarshaller : object {
    public static AmazonMskClusterMarshaller Instance;
    private static AmazonMskClusterMarshaller();
    public sealed virtual void Marshall(AmazonMskCluster requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.AmazonMskClusterUnmarshaller : object {
    private static AmazonMskClusterUnmarshaller _instance;
    public static AmazonMskClusterUnmarshaller Instance { get; }
    private static AmazonMskClusterUnmarshaller();
    private sealed virtual override AmazonMskCluster Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.AmazonMskCluster,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonMskCluster Unmarshall(JsonUnmarshallerContext context);
    public static AmazonMskClusterUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller : object {
    private static BadRequestExceptionUnmarshaller _instance;
    public static BadRequestExceptionUnmarshaller Instance { get; }
    private static BadRequestExceptionUnmarshaller();
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BadRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BatchAssociateScramSecretRequestMarshaller : object {
    private static BatchAssociateScramSecretRequestMarshaller _instance;
    public static BatchAssociateScramSecretRequestMarshaller Instance { get; }
    private static BatchAssociateScramSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchAssociateScramSecretRequest publicRequest);
    internal static BatchAssociateScramSecretRequestMarshaller GetInstance();
    public static BatchAssociateScramSecretRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BatchAssociateScramSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchAssociateScramSecretResponseUnmarshaller _instance;
    public static BatchAssociateScramSecretResponseUnmarshaller Instance { get; }
    private static BatchAssociateScramSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchAssociateScramSecretResponseUnmarshaller GetInstance();
    public static BatchAssociateScramSecretResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BatchDisassociateScramSecretRequestMarshaller : object {
    private static BatchDisassociateScramSecretRequestMarshaller _instance;
    public static BatchDisassociateScramSecretRequestMarshaller Instance { get; }
    private static BatchDisassociateScramSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchDisassociateScramSecretRequest publicRequest);
    internal static BatchDisassociateScramSecretRequestMarshaller GetInstance();
    public static BatchDisassociateScramSecretRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BatchDisassociateScramSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchDisassociateScramSecretResponseUnmarshaller _instance;
    public static BatchDisassociateScramSecretResponseUnmarshaller Instance { get; }
    private static BatchDisassociateScramSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchDisassociateScramSecretResponseUnmarshaller GetInstance();
    public static BatchDisassociateScramSecretResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerCountUpdateInfoUnmarshaller : object {
    private static BrokerCountUpdateInfoUnmarshaller _instance;
    public static BrokerCountUpdateInfoUnmarshaller Instance { get; }
    private static BrokerCountUpdateInfoUnmarshaller();
    private sealed virtual override BrokerCountUpdateInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.BrokerCountUpdateInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerCountUpdateInfo Unmarshall(JsonUnmarshallerContext context);
    public static BrokerCountUpdateInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerEBSVolumeInfoMarshaller : object {
    public static BrokerEBSVolumeInfoMarshaller Instance;
    private static BrokerEBSVolumeInfoMarshaller();
    public sealed virtual void Marshall(BrokerEBSVolumeInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerEBSVolumeInfoUnmarshaller : object {
    private static BrokerEBSVolumeInfoUnmarshaller _instance;
    public static BrokerEBSVolumeInfoUnmarshaller Instance { get; }
    private static BrokerEBSVolumeInfoUnmarshaller();
    private sealed virtual override BrokerEBSVolumeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.BrokerEBSVolumeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerEBSVolumeInfo Unmarshall(JsonUnmarshallerContext context);
    public static BrokerEBSVolumeInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerLogsMarshaller : object {
    public static BrokerLogsMarshaller Instance;
    private static BrokerLogsMarshaller();
    public sealed virtual void Marshall(BrokerLogs requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerLogsUnmarshaller : object {
    private static BrokerLogsUnmarshaller _instance;
    public static BrokerLogsUnmarshaller Instance { get; }
    private static BrokerLogsUnmarshaller();
    private sealed virtual override BrokerLogs Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.BrokerLogs,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerLogs Unmarshall(JsonUnmarshallerContext context);
    public static BrokerLogsUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerNodeGroupInfoMarshaller : object {
    public static BrokerNodeGroupInfoMarshaller Instance;
    private static BrokerNodeGroupInfoMarshaller();
    public sealed virtual void Marshall(BrokerNodeGroupInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerNodeGroupInfoUnmarshaller : object {
    private static BrokerNodeGroupInfoUnmarshaller _instance;
    public static BrokerNodeGroupInfoUnmarshaller Instance { get; }
    private static BrokerNodeGroupInfoUnmarshaller();
    private sealed virtual override BrokerNodeGroupInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.BrokerNodeGroupInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerNodeGroupInfo Unmarshall(JsonUnmarshallerContext context);
    public static BrokerNodeGroupInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerNodeInfoUnmarshaller : object {
    private static BrokerNodeInfoUnmarshaller _instance;
    public static BrokerNodeInfoUnmarshaller Instance { get; }
    private static BrokerNodeInfoUnmarshaller();
    private sealed virtual override BrokerNodeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.BrokerNodeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerNodeInfo Unmarshall(JsonUnmarshallerContext context);
    public static BrokerNodeInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.BrokerSoftwareInfoUnmarshaller : object {
    private static BrokerSoftwareInfoUnmarshaller _instance;
    public static BrokerSoftwareInfoUnmarshaller Instance { get; }
    private static BrokerSoftwareInfoUnmarshaller();
    private sealed virtual override BrokerSoftwareInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.BrokerSoftwareInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerSoftwareInfo Unmarshall(JsonUnmarshallerContext context);
    public static BrokerSoftwareInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClientAuthenticationMarshaller : object {
    public static ClientAuthenticationMarshaller Instance;
    private static ClientAuthenticationMarshaller();
    public sealed virtual void Marshall(ClientAuthentication requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClientAuthenticationUnmarshaller : object {
    private static ClientAuthenticationUnmarshaller _instance;
    public static ClientAuthenticationUnmarshaller Instance { get; }
    private static ClientAuthenticationUnmarshaller();
    private sealed virtual override ClientAuthentication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClientAuthentication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static ClientAuthenticationUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClientVpcConnectionUnmarshaller : object {
    private static ClientVpcConnectionUnmarshaller _instance;
    public static ClientVpcConnectionUnmarshaller Instance { get; }
    private static ClientVpcConnectionUnmarshaller();
    private sealed virtual override ClientVpcConnection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClientVpcConnection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClientVpcConnection Unmarshall(JsonUnmarshallerContext context);
    public static ClientVpcConnectionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CloudWatchLogsMarshaller : object {
    public static CloudWatchLogsMarshaller Instance;
    private static CloudWatchLogsMarshaller();
    public sealed virtual void Marshall(CloudWatchLogs requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CloudWatchLogsUnmarshaller : object {
    private static CloudWatchLogsUnmarshaller _instance;
    public static CloudWatchLogsUnmarshaller Instance { get; }
    private static CloudWatchLogsUnmarshaller();
    private sealed virtual override CloudWatchLogs Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.CloudWatchLogs,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchLogs Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchLogsUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterInfoUnmarshaller : object {
    private static ClusterInfoUnmarshaller _instance;
    public static ClusterInfoUnmarshaller Instance { get; }
    private static ClusterInfoUnmarshaller();
    private sealed virtual override ClusterInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterInfo Unmarshall(JsonUnmarshallerContext context);
    public static ClusterInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterOperationInfoUnmarshaller : object {
    private static ClusterOperationInfoUnmarshaller _instance;
    public static ClusterOperationInfoUnmarshaller Instance { get; }
    private static ClusterOperationInfoUnmarshaller();
    private sealed virtual override ClusterOperationInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterOperationInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterOperationInfo Unmarshall(JsonUnmarshallerContext context);
    public static ClusterOperationInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterOperationStepInfoUnmarshaller : object {
    private static ClusterOperationStepInfoUnmarshaller _instance;
    public static ClusterOperationStepInfoUnmarshaller Instance { get; }
    private static ClusterOperationStepInfoUnmarshaller();
    private sealed virtual override ClusterOperationStepInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterOperationStepInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterOperationStepInfo Unmarshall(JsonUnmarshallerContext context);
    public static ClusterOperationStepInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterOperationStepUnmarshaller : object {
    private static ClusterOperationStepUnmarshaller _instance;
    public static ClusterOperationStepUnmarshaller Instance { get; }
    private static ClusterOperationStepUnmarshaller();
    private sealed virtual override ClusterOperationStep Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterOperationStep,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterOperationStep Unmarshall(JsonUnmarshallerContext context);
    public static ClusterOperationStepUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterOperationV2ProvisionedUnmarshaller : object {
    private static ClusterOperationV2ProvisionedUnmarshaller _instance;
    public static ClusterOperationV2ProvisionedUnmarshaller Instance { get; }
    private static ClusterOperationV2ProvisionedUnmarshaller();
    private sealed virtual override ClusterOperationV2Provisioned Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterOperationV2Provisioned,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterOperationV2Provisioned Unmarshall(JsonUnmarshallerContext context);
    public static ClusterOperationV2ProvisionedUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterOperationV2ServerlessUnmarshaller : object {
    private static ClusterOperationV2ServerlessUnmarshaller _instance;
    public static ClusterOperationV2ServerlessUnmarshaller Instance { get; }
    private static ClusterOperationV2ServerlessUnmarshaller();
    private sealed virtual override ClusterOperationV2Serverless Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterOperationV2Serverless,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterOperationV2Serverless Unmarshall(JsonUnmarshallerContext context);
    public static ClusterOperationV2ServerlessUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterOperationV2SummaryUnmarshaller : object {
    private static ClusterOperationV2SummaryUnmarshaller _instance;
    public static ClusterOperationV2SummaryUnmarshaller Instance { get; }
    private static ClusterOperationV2SummaryUnmarshaller();
    private sealed virtual override ClusterOperationV2Summary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterOperationV2Summary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterOperationV2Summary Unmarshall(JsonUnmarshallerContext context);
    public static ClusterOperationV2SummaryUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterOperationV2Unmarshaller : object {
    private static ClusterOperationV2Unmarshaller _instance;
    public static ClusterOperationV2Unmarshaller Instance { get; }
    private static ClusterOperationV2Unmarshaller();
    private sealed virtual override ClusterOperationV2 Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ClusterOperationV2,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterOperationV2 Unmarshall(JsonUnmarshallerContext context);
    public static ClusterOperationV2Unmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ClusterUnmarshaller : object {
    private static ClusterUnmarshaller _instance;
    public static ClusterUnmarshaller Instance { get; }
    private static ClusterUnmarshaller();
    private sealed virtual override Cluster Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Cluster,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Cluster Unmarshall(JsonUnmarshallerContext context);
    public static ClusterUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CompatibleKafkaVersionUnmarshaller : object {
    private static CompatibleKafkaVersionUnmarshaller _instance;
    public static CompatibleKafkaVersionUnmarshaller Instance { get; }
    private static CompatibleKafkaVersionUnmarshaller();
    private sealed virtual override CompatibleKafkaVersion Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.CompatibleKafkaVersion,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CompatibleKafkaVersion Unmarshall(JsonUnmarshallerContext context);
    public static CompatibleKafkaVersionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConfigurationInfoMarshaller : object {
    public static ConfigurationInfoMarshaller Instance;
    private static ConfigurationInfoMarshaller();
    public sealed virtual void Marshall(ConfigurationInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConfigurationInfoUnmarshaller : object {
    private static ConfigurationInfoUnmarshaller _instance;
    public static ConfigurationInfoUnmarshaller Instance { get; }
    private static ConfigurationInfoUnmarshaller();
    private sealed virtual override ConfigurationInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ConfigurationInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationInfo Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConfigurationRevisionUnmarshaller : object {
    private static ConfigurationRevisionUnmarshaller _instance;
    public static ConfigurationRevisionUnmarshaller Instance { get; }
    private static ConfigurationRevisionUnmarshaller();
    private sealed virtual override ConfigurationRevision Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ConfigurationRevision,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationRevision Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationRevisionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConfigurationUnmarshaller : object {
    private static ConfigurationUnmarshaller _instance;
    public static ConfigurationUnmarshaller Instance { get; }
    private static ConfigurationUnmarshaller();
    private sealed virtual override Configuration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Configuration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Configuration Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConnectivityInfoMarshaller : object {
    public static ConnectivityInfoMarshaller Instance;
    private static ConnectivityInfoMarshaller();
    public sealed virtual void Marshall(ConnectivityInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConnectivityInfoUnmarshaller : object {
    private static ConnectivityInfoUnmarshaller _instance;
    public static ConnectivityInfoUnmarshaller Instance { get; }
    private static ConnectivityInfoUnmarshaller();
    private sealed virtual override ConnectivityInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ConnectivityInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectivityInfo Unmarshall(JsonUnmarshallerContext context);
    public static ConnectivityInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConsumerGroupReplicationMarshaller : object {
    public static ConsumerGroupReplicationMarshaller Instance;
    private static ConsumerGroupReplicationMarshaller();
    public sealed virtual void Marshall(ConsumerGroupReplication requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConsumerGroupReplicationUnmarshaller : object {
    private static ConsumerGroupReplicationUnmarshaller _instance;
    public static ConsumerGroupReplicationUnmarshaller Instance { get; }
    private static ConsumerGroupReplicationUnmarshaller();
    private sealed virtual override ConsumerGroupReplication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ConsumerGroupReplication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConsumerGroupReplication Unmarshall(JsonUnmarshallerContext context);
    public static ConsumerGroupReplicationUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ConsumerGroupReplicationUpdateMarshaller : object {
    public static ConsumerGroupReplicationUpdateMarshaller Instance;
    private static ConsumerGroupReplicationUpdateMarshaller();
    public sealed virtual void Marshall(ConsumerGroupReplicationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ControllerNodeInfoUnmarshaller : object {
    private static ControllerNodeInfoUnmarshaller _instance;
    public static ControllerNodeInfoUnmarshaller Instance { get; }
    private static ControllerNodeInfoUnmarshaller();
    private sealed virtual override ControllerNodeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ControllerNodeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ControllerNodeInfo Unmarshall(JsonUnmarshallerContext context);
    public static ControllerNodeInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller : object {
    private static CreateClusterRequestMarshaller _instance;
    public static CreateClusterRequestMarshaller Instance { get; }
    private static CreateClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateClusterRequest publicRequest);
    internal static CreateClusterRequestMarshaller GetInstance();
    public static CreateClusterRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateClusterResponseUnmarshaller _instance;
    public static CreateClusterResponseUnmarshaller Instance { get; }
    private static CreateClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateClusterResponseUnmarshaller GetInstance();
    public static CreateClusterResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateClusterV2RequestMarshaller : object {
    private static CreateClusterV2RequestMarshaller _instance;
    public static CreateClusterV2RequestMarshaller Instance { get; }
    private static CreateClusterV2RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateClusterV2Request publicRequest);
    internal static CreateClusterV2RequestMarshaller GetInstance();
    public static CreateClusterV2RequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateClusterV2ResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateClusterV2ResponseUnmarshaller _instance;
    public static CreateClusterV2ResponseUnmarshaller Instance { get; }
    private static CreateClusterV2ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateClusterV2ResponseUnmarshaller GetInstance();
    public static CreateClusterV2ResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateConfigurationRequestMarshaller : object {
    private static CreateConfigurationRequestMarshaller _instance;
    public static CreateConfigurationRequestMarshaller Instance { get; }
    private static CreateConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateConfigurationRequest publicRequest);
    internal static CreateConfigurationRequestMarshaller GetInstance();
    public static CreateConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateConfigurationResponseUnmarshaller _instance;
    public static CreateConfigurationResponseUnmarshaller Instance { get; }
    private static CreateConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateConfigurationResponseUnmarshaller GetInstance();
    public static CreateConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateReplicatorRequestMarshaller : object {
    private static CreateReplicatorRequestMarshaller _instance;
    public static CreateReplicatorRequestMarshaller Instance { get; }
    private static CreateReplicatorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReplicatorRequest publicRequest);
    internal static CreateReplicatorRequestMarshaller GetInstance();
    public static CreateReplicatorRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateReplicatorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateReplicatorResponseUnmarshaller _instance;
    public static CreateReplicatorResponseUnmarshaller Instance { get; }
    private static CreateReplicatorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReplicatorResponseUnmarshaller GetInstance();
    public static CreateReplicatorResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateVpcConnectionRequestMarshaller : object {
    private static CreateVpcConnectionRequestMarshaller _instance;
    public static CreateVpcConnectionRequestMarshaller Instance { get; }
    private static CreateVpcConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcConnectionRequest publicRequest);
    internal static CreateVpcConnectionRequestMarshaller GetInstance();
    public static CreateVpcConnectionRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.CreateVpcConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateVpcConnectionResponseUnmarshaller _instance;
    public static CreateVpcConnectionResponseUnmarshaller Instance { get; }
    private static CreateVpcConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcConnectionResponseUnmarshaller GetInstance();
    public static CreateVpcConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteClusterPolicyRequestMarshaller : object {
    private static DeleteClusterPolicyRequestMarshaller _instance;
    public static DeleteClusterPolicyRequestMarshaller Instance { get; }
    private static DeleteClusterPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteClusterPolicyRequest publicRequest);
    internal static DeleteClusterPolicyRequestMarshaller GetInstance();
    public static DeleteClusterPolicyRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteClusterPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteClusterPolicyResponseUnmarshaller _instance;
    public static DeleteClusterPolicyResponseUnmarshaller Instance { get; }
    private static DeleteClusterPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteClusterPolicyResponseUnmarshaller GetInstance();
    public static DeleteClusterPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller : object {
    private static DeleteClusterRequestMarshaller _instance;
    public static DeleteClusterRequestMarshaller Instance { get; }
    private static DeleteClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteClusterRequest publicRequest);
    internal static DeleteClusterRequestMarshaller GetInstance();
    public static DeleteClusterRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteClusterResponseUnmarshaller _instance;
    public static DeleteClusterResponseUnmarshaller Instance { get; }
    private static DeleteClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteClusterResponseUnmarshaller GetInstance();
    public static DeleteClusterResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteConfigurationRequestMarshaller : object {
    private static DeleteConfigurationRequestMarshaller _instance;
    public static DeleteConfigurationRequestMarshaller Instance { get; }
    private static DeleteConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteConfigurationRequest publicRequest);
    internal static DeleteConfigurationRequestMarshaller GetInstance();
    public static DeleteConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteConfigurationResponseUnmarshaller _instance;
    public static DeleteConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteConfigurationResponseUnmarshaller GetInstance();
    public static DeleteConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteReplicatorRequestMarshaller : object {
    private static DeleteReplicatorRequestMarshaller _instance;
    public static DeleteReplicatorRequestMarshaller Instance { get; }
    private static DeleteReplicatorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReplicatorRequest publicRequest);
    internal static DeleteReplicatorRequestMarshaller GetInstance();
    public static DeleteReplicatorRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteReplicatorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteReplicatorResponseUnmarshaller _instance;
    public static DeleteReplicatorResponseUnmarshaller Instance { get; }
    private static DeleteReplicatorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReplicatorResponseUnmarshaller GetInstance();
    public static DeleteReplicatorResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteVpcConnectionRequestMarshaller : object {
    private static DeleteVpcConnectionRequestMarshaller _instance;
    public static DeleteVpcConnectionRequestMarshaller Instance { get; }
    private static DeleteVpcConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcConnectionRequest publicRequest);
    internal static DeleteVpcConnectionRequestMarshaller GetInstance();
    public static DeleteVpcConnectionRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DeleteVpcConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVpcConnectionResponseUnmarshaller _instance;
    public static DeleteVpcConnectionResponseUnmarshaller Instance { get; }
    private static DeleteVpcConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcConnectionResponseUnmarshaller GetInstance();
    public static DeleteVpcConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterOperationRequestMarshaller : object {
    private static DescribeClusterOperationRequestMarshaller _instance;
    public static DescribeClusterOperationRequestMarshaller Instance { get; }
    private static DescribeClusterOperationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClusterOperationRequest publicRequest);
    internal static DescribeClusterOperationRequestMarshaller GetInstance();
    public static DescribeClusterOperationRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterOperationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeClusterOperationResponseUnmarshaller _instance;
    public static DescribeClusterOperationResponseUnmarshaller Instance { get; }
    private static DescribeClusterOperationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClusterOperationResponseUnmarshaller GetInstance();
    public static DescribeClusterOperationResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterOperationV2RequestMarshaller : object {
    private static DescribeClusterOperationV2RequestMarshaller _instance;
    public static DescribeClusterOperationV2RequestMarshaller Instance { get; }
    private static DescribeClusterOperationV2RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClusterOperationV2Request publicRequest);
    internal static DescribeClusterOperationV2RequestMarshaller GetInstance();
    public static DescribeClusterOperationV2RequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterOperationV2ResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeClusterOperationV2ResponseUnmarshaller _instance;
    public static DescribeClusterOperationV2ResponseUnmarshaller Instance { get; }
    private static DescribeClusterOperationV2ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClusterOperationV2ResponseUnmarshaller GetInstance();
    public static DescribeClusterOperationV2ResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller : object {
    private static DescribeClusterRequestMarshaller _instance;
    public static DescribeClusterRequestMarshaller Instance { get; }
    private static DescribeClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClusterRequest publicRequest);
    internal static DescribeClusterRequestMarshaller GetInstance();
    public static DescribeClusterRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeClusterResponseUnmarshaller _instance;
    public static DescribeClusterResponseUnmarshaller Instance { get; }
    private static DescribeClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClusterResponseUnmarshaller GetInstance();
    public static DescribeClusterResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterV2RequestMarshaller : object {
    private static DescribeClusterV2RequestMarshaller _instance;
    public static DescribeClusterV2RequestMarshaller Instance { get; }
    private static DescribeClusterV2RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClusterV2Request publicRequest);
    internal static DescribeClusterV2RequestMarshaller GetInstance();
    public static DescribeClusterV2RequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeClusterV2ResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeClusterV2ResponseUnmarshaller _instance;
    public static DescribeClusterV2ResponseUnmarshaller Instance { get; }
    private static DescribeClusterV2ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClusterV2ResponseUnmarshaller GetInstance();
    public static DescribeClusterV2ResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeConfigurationRequestMarshaller : object {
    private static DescribeConfigurationRequestMarshaller _instance;
    public static DescribeConfigurationRequestMarshaller Instance { get; }
    private static DescribeConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConfigurationRequest publicRequest);
    internal static DescribeConfigurationRequestMarshaller GetInstance();
    public static DescribeConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeConfigurationResponseUnmarshaller _instance;
    public static DescribeConfigurationResponseUnmarshaller Instance { get; }
    private static DescribeConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConfigurationResponseUnmarshaller GetInstance();
    public static DescribeConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionRequestMarshaller : object {
    private static DescribeConfigurationRevisionRequestMarshaller _instance;
    public static DescribeConfigurationRevisionRequestMarshaller Instance { get; }
    private static DescribeConfigurationRevisionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConfigurationRevisionRequest publicRequest);
    internal static DescribeConfigurationRevisionRequestMarshaller GetInstance();
    public static DescribeConfigurationRevisionRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeConfigurationRevisionResponseUnmarshaller _instance;
    public static DescribeConfigurationRevisionResponseUnmarshaller Instance { get; }
    private static DescribeConfigurationRevisionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConfigurationRevisionResponseUnmarshaller GetInstance();
    public static DescribeConfigurationRevisionResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeReplicatorRequestMarshaller : object {
    private static DescribeReplicatorRequestMarshaller _instance;
    public static DescribeReplicatorRequestMarshaller Instance { get; }
    private static DescribeReplicatorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicatorRequest publicRequest);
    internal static DescribeReplicatorRequestMarshaller GetInstance();
    public static DescribeReplicatorRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeReplicatorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicatorResponseUnmarshaller _instance;
    public static DescribeReplicatorResponseUnmarshaller Instance { get; }
    private static DescribeReplicatorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicatorResponseUnmarshaller GetInstance();
    public static DescribeReplicatorResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeVpcConnectionRequestMarshaller : object {
    private static DescribeVpcConnectionRequestMarshaller _instance;
    public static DescribeVpcConnectionRequestMarshaller Instance { get; }
    private static DescribeVpcConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcConnectionRequest publicRequest);
    internal static DescribeVpcConnectionRequestMarshaller GetInstance();
    public static DescribeVpcConnectionRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.DescribeVpcConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeVpcConnectionResponseUnmarshaller _instance;
    public static DescribeVpcConnectionResponseUnmarshaller Instance { get; }
    private static DescribeVpcConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcConnectionResponseUnmarshaller GetInstance();
    public static DescribeVpcConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EBSStorageInfoMarshaller : object {
    public static EBSStorageInfoMarshaller Instance;
    private static EBSStorageInfoMarshaller();
    public sealed virtual void Marshall(EBSStorageInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EBSStorageInfoUnmarshaller : object {
    private static EBSStorageInfoUnmarshaller _instance;
    public static EBSStorageInfoUnmarshaller Instance { get; }
    private static EBSStorageInfoUnmarshaller();
    private sealed virtual override EBSStorageInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.EBSStorageInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EBSStorageInfo Unmarshall(JsonUnmarshallerContext context);
    public static EBSStorageInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EncryptionAtRestMarshaller : object {
    public static EncryptionAtRestMarshaller Instance;
    private static EncryptionAtRestMarshaller();
    public sealed virtual void Marshall(EncryptionAtRest requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EncryptionAtRestUnmarshaller : object {
    private static EncryptionAtRestUnmarshaller _instance;
    public static EncryptionAtRestUnmarshaller Instance { get; }
    private static EncryptionAtRestUnmarshaller();
    private sealed virtual override EncryptionAtRest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.EncryptionAtRest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionAtRest Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionAtRestUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EncryptionInfoMarshaller : object {
    public static EncryptionInfoMarshaller Instance;
    private static EncryptionInfoMarshaller();
    public sealed virtual void Marshall(EncryptionInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EncryptionInfoUnmarshaller : object {
    private static EncryptionInfoUnmarshaller _instance;
    public static EncryptionInfoUnmarshaller Instance { get; }
    private static EncryptionInfoUnmarshaller();
    private sealed virtual override EncryptionInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.EncryptionInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionInfo Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EncryptionInTransitMarshaller : object {
    public static EncryptionInTransitMarshaller Instance;
    private static EncryptionInTransitMarshaller();
    public sealed virtual void Marshall(EncryptionInTransit requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.EncryptionInTransitUnmarshaller : object {
    private static EncryptionInTransitUnmarshaller _instance;
    public static EncryptionInTransitUnmarshaller Instance { get; }
    private static EncryptionInTransitUnmarshaller();
    private sealed virtual override EncryptionInTransit Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.EncryptionInTransit,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionInTransit Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionInTransitUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ErrorInfoUnmarshaller : object {
    private static ErrorInfoUnmarshaller _instance;
    public static ErrorInfoUnmarshaller Instance { get; }
    private static ErrorInfoUnmarshaller();
    private sealed virtual override ErrorInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ErrorInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorInfo Unmarshall(JsonUnmarshallerContext context);
    public static ErrorInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.FirehoseMarshaller : object {
    public static FirehoseMarshaller Instance;
    private static FirehoseMarshaller();
    public sealed virtual void Marshall(Firehose requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.FirehoseUnmarshaller : object {
    private static FirehoseUnmarshaller _instance;
    public static FirehoseUnmarshaller Instance { get; }
    private static FirehoseUnmarshaller();
    private sealed virtual override Firehose Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Firehose,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Firehose Unmarshall(JsonUnmarshallerContext context);
    public static FirehoseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller : object {
    private static ForbiddenExceptionUnmarshaller _instance;
    public static ForbiddenExceptionUnmarshaller Instance { get; }
    private static ForbiddenExceptionUnmarshaller();
    public sealed virtual ForbiddenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ForbiddenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ForbiddenExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.GetBootstrapBrokersRequestMarshaller : object {
    private static GetBootstrapBrokersRequestMarshaller _instance;
    public static GetBootstrapBrokersRequestMarshaller Instance { get; }
    private static GetBootstrapBrokersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBootstrapBrokersRequest publicRequest);
    internal static GetBootstrapBrokersRequestMarshaller GetInstance();
    public static GetBootstrapBrokersRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.GetBootstrapBrokersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetBootstrapBrokersResponseUnmarshaller _instance;
    public static GetBootstrapBrokersResponseUnmarshaller Instance { get; }
    private static GetBootstrapBrokersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBootstrapBrokersResponseUnmarshaller GetInstance();
    public static GetBootstrapBrokersResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.GetClusterPolicyRequestMarshaller : object {
    private static GetClusterPolicyRequestMarshaller _instance;
    public static GetClusterPolicyRequestMarshaller Instance { get; }
    private static GetClusterPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetClusterPolicyRequest publicRequest);
    internal static GetClusterPolicyRequestMarshaller GetInstance();
    public static GetClusterPolicyRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.GetClusterPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetClusterPolicyResponseUnmarshaller _instance;
    public static GetClusterPolicyResponseUnmarshaller Instance { get; }
    private static GetClusterPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetClusterPolicyResponseUnmarshaller GetInstance();
    public static GetClusterPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.GetCompatibleKafkaVersionsRequestMarshaller : object {
    private static GetCompatibleKafkaVersionsRequestMarshaller _instance;
    public static GetCompatibleKafkaVersionsRequestMarshaller Instance { get; }
    private static GetCompatibleKafkaVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCompatibleKafkaVersionsRequest publicRequest);
    internal static GetCompatibleKafkaVersionsRequestMarshaller GetInstance();
    public static GetCompatibleKafkaVersionsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.GetCompatibleKafkaVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCompatibleKafkaVersionsResponseUnmarshaller _instance;
    public static GetCompatibleKafkaVersionsResponseUnmarshaller Instance { get; }
    private static GetCompatibleKafkaVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCompatibleKafkaVersionsResponseUnmarshaller GetInstance();
    public static GetCompatibleKafkaVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.IamMarshaller : object {
    public static IamMarshaller Instance;
    private static IamMarshaller();
    public sealed virtual void Marshall(Iam requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.IamUnmarshaller : object {
    private static IamUnmarshaller _instance;
    public static IamUnmarshaller Instance { get; }
    private static IamUnmarshaller();
    private sealed virtual override Iam Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Iam,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Iam Unmarshall(JsonUnmarshallerContext context);
    public static IamUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller : object {
    private static InternalServerErrorExceptionUnmarshaller _instance;
    public static InternalServerErrorExceptionUnmarshaller Instance { get; }
    private static InternalServerErrorExceptionUnmarshaller();
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.JmxExporterInfoMarshaller : object {
    public static JmxExporterInfoMarshaller Instance;
    private static JmxExporterInfoMarshaller();
    public sealed virtual void Marshall(JmxExporterInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.JmxExporterInfoUnmarshaller : object {
    private static JmxExporterInfoUnmarshaller _instance;
    public static JmxExporterInfoUnmarshaller Instance { get; }
    private static JmxExporterInfoUnmarshaller();
    private sealed virtual override JmxExporterInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.JmxExporterInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JmxExporterInfo Unmarshall(JsonUnmarshallerContext context);
    public static JmxExporterInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.JmxExporterUnmarshaller : object {
    private static JmxExporterUnmarshaller _instance;
    public static JmxExporterUnmarshaller Instance { get; }
    private static JmxExporterUnmarshaller();
    private sealed virtual override JmxExporter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.JmxExporter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JmxExporter Unmarshall(JsonUnmarshallerContext context);
    public static JmxExporterUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.KafkaClusterClientVpcConfigMarshaller : object {
    public static KafkaClusterClientVpcConfigMarshaller Instance;
    private static KafkaClusterClientVpcConfigMarshaller();
    public sealed virtual void Marshall(KafkaClusterClientVpcConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.KafkaClusterClientVpcConfigUnmarshaller : object {
    private static KafkaClusterClientVpcConfigUnmarshaller _instance;
    public static KafkaClusterClientVpcConfigUnmarshaller Instance { get; }
    private static KafkaClusterClientVpcConfigUnmarshaller();
    private sealed virtual override KafkaClusterClientVpcConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.KafkaClusterClientVpcConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KafkaClusterClientVpcConfig Unmarshall(JsonUnmarshallerContext context);
    public static KafkaClusterClientVpcConfigUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.KafkaClusterDescriptionUnmarshaller : object {
    private static KafkaClusterDescriptionUnmarshaller _instance;
    public static KafkaClusterDescriptionUnmarshaller Instance { get; }
    private static KafkaClusterDescriptionUnmarshaller();
    private sealed virtual override KafkaClusterDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.KafkaClusterDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KafkaClusterDescription Unmarshall(JsonUnmarshallerContext context);
    public static KafkaClusterDescriptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.KafkaClusterMarshaller : object {
    public static KafkaClusterMarshaller Instance;
    private static KafkaClusterMarshaller();
    public sealed virtual void Marshall(KafkaCluster requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.KafkaClusterSummaryUnmarshaller : object {
    private static KafkaClusterSummaryUnmarshaller _instance;
    public static KafkaClusterSummaryUnmarshaller Instance { get; }
    private static KafkaClusterSummaryUnmarshaller();
    private sealed virtual override KafkaClusterSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.KafkaClusterSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KafkaClusterSummary Unmarshall(JsonUnmarshallerContext context);
    public static KafkaClusterSummaryUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.KafkaVersionUnmarshaller : object {
    private static KafkaVersionUnmarshaller _instance;
    public static KafkaVersionUnmarshaller Instance { get; }
    private static KafkaVersionUnmarshaller();
    private sealed virtual override KafkaVersion Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.KafkaVersion,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KafkaVersion Unmarshall(JsonUnmarshallerContext context);
    public static KafkaVersionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClientVpcConnectionsRequestMarshaller : object {
    private static ListClientVpcConnectionsRequestMarshaller _instance;
    public static ListClientVpcConnectionsRequestMarshaller Instance { get; }
    private static ListClientVpcConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListClientVpcConnectionsRequest publicRequest);
    internal static ListClientVpcConnectionsRequestMarshaller GetInstance();
    public static ListClientVpcConnectionsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClientVpcConnectionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListClientVpcConnectionsResponseUnmarshaller _instance;
    public static ListClientVpcConnectionsResponseUnmarshaller Instance { get; }
    private static ListClientVpcConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListClientVpcConnectionsResponseUnmarshaller GetInstance();
    public static ListClientVpcConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClusterOperationsRequestMarshaller : object {
    private static ListClusterOperationsRequestMarshaller _instance;
    public static ListClusterOperationsRequestMarshaller Instance { get; }
    private static ListClusterOperationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListClusterOperationsRequest publicRequest);
    internal static ListClusterOperationsRequestMarshaller GetInstance();
    public static ListClusterOperationsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClusterOperationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListClusterOperationsResponseUnmarshaller _instance;
    public static ListClusterOperationsResponseUnmarshaller Instance { get; }
    private static ListClusterOperationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListClusterOperationsResponseUnmarshaller GetInstance();
    public static ListClusterOperationsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClusterOperationsV2RequestMarshaller : object {
    private static ListClusterOperationsV2RequestMarshaller _instance;
    public static ListClusterOperationsV2RequestMarshaller Instance { get; }
    private static ListClusterOperationsV2RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListClusterOperationsV2Request publicRequest);
    internal static ListClusterOperationsV2RequestMarshaller GetInstance();
    public static ListClusterOperationsV2RequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClusterOperationsV2ResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListClusterOperationsV2ResponseUnmarshaller _instance;
    public static ListClusterOperationsV2ResponseUnmarshaller Instance { get; }
    private static ListClusterOperationsV2ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListClusterOperationsV2ResponseUnmarshaller GetInstance();
    public static ListClusterOperationsV2ResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller : object {
    private static ListClustersRequestMarshaller _instance;
    public static ListClustersRequestMarshaller Instance { get; }
    private static ListClustersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListClustersRequest publicRequest);
    internal static ListClustersRequestMarshaller GetInstance();
    public static ListClustersRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListClustersResponseUnmarshaller _instance;
    public static ListClustersResponseUnmarshaller Instance { get; }
    private static ListClustersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListClustersResponseUnmarshaller GetInstance();
    public static ListClustersResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClustersV2RequestMarshaller : object {
    private static ListClustersV2RequestMarshaller _instance;
    public static ListClustersV2RequestMarshaller Instance { get; }
    private static ListClustersV2RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListClustersV2Request publicRequest);
    internal static ListClustersV2RequestMarshaller GetInstance();
    public static ListClustersV2RequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListClustersV2ResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListClustersV2ResponseUnmarshaller _instance;
    public static ListClustersV2ResponseUnmarshaller Instance { get; }
    private static ListClustersV2ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListClustersV2ResponseUnmarshaller GetInstance();
    public static ListClustersV2ResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListConfigurationRevisionsRequestMarshaller : object {
    private static ListConfigurationRevisionsRequestMarshaller _instance;
    public static ListConfigurationRevisionsRequestMarshaller Instance { get; }
    private static ListConfigurationRevisionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListConfigurationRevisionsRequest publicRequest);
    internal static ListConfigurationRevisionsRequestMarshaller GetInstance();
    public static ListConfigurationRevisionsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListConfigurationRevisionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListConfigurationRevisionsResponseUnmarshaller _instance;
    public static ListConfigurationRevisionsResponseUnmarshaller Instance { get; }
    private static ListConfigurationRevisionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListConfigurationRevisionsResponseUnmarshaller GetInstance();
    public static ListConfigurationRevisionsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListConfigurationsRequestMarshaller : object {
    private static ListConfigurationsRequestMarshaller _instance;
    public static ListConfigurationsRequestMarshaller Instance { get; }
    private static ListConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListConfigurationsRequest publicRequest);
    internal static ListConfigurationsRequestMarshaller GetInstance();
    public static ListConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListConfigurationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListConfigurationsResponseUnmarshaller _instance;
    public static ListConfigurationsResponseUnmarshaller Instance { get; }
    private static ListConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListConfigurationsResponseUnmarshaller GetInstance();
    public static ListConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListKafkaVersionsRequestMarshaller : object {
    private static ListKafkaVersionsRequestMarshaller _instance;
    public static ListKafkaVersionsRequestMarshaller Instance { get; }
    private static ListKafkaVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListKafkaVersionsRequest publicRequest);
    internal static ListKafkaVersionsRequestMarshaller GetInstance();
    public static ListKafkaVersionsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListKafkaVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListKafkaVersionsResponseUnmarshaller _instance;
    public static ListKafkaVersionsResponseUnmarshaller Instance { get; }
    private static ListKafkaVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListKafkaVersionsResponseUnmarshaller GetInstance();
    public static ListKafkaVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListNodesRequestMarshaller : object {
    private static ListNodesRequestMarshaller _instance;
    public static ListNodesRequestMarshaller Instance { get; }
    private static ListNodesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListNodesRequest publicRequest);
    internal static ListNodesRequestMarshaller GetInstance();
    public static ListNodesRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListNodesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListNodesResponseUnmarshaller _instance;
    public static ListNodesResponseUnmarshaller Instance { get; }
    private static ListNodesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListNodesResponseUnmarshaller GetInstance();
    public static ListNodesResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListReplicatorsRequestMarshaller : object {
    private static ListReplicatorsRequestMarshaller _instance;
    public static ListReplicatorsRequestMarshaller Instance { get; }
    private static ListReplicatorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListReplicatorsRequest publicRequest);
    internal static ListReplicatorsRequestMarshaller GetInstance();
    public static ListReplicatorsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListReplicatorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListReplicatorsResponseUnmarshaller _instance;
    public static ListReplicatorsResponseUnmarshaller Instance { get; }
    private static ListReplicatorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListReplicatorsResponseUnmarshaller GetInstance();
    public static ListReplicatorsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListScramSecretsRequestMarshaller : object {
    private static ListScramSecretsRequestMarshaller _instance;
    public static ListScramSecretsRequestMarshaller Instance { get; }
    private static ListScramSecretsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListScramSecretsRequest publicRequest);
    internal static ListScramSecretsRequestMarshaller GetInstance();
    public static ListScramSecretsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListScramSecretsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListScramSecretsResponseUnmarshaller _instance;
    public static ListScramSecretsResponseUnmarshaller Instance { get; }
    private static ListScramSecretsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListScramSecretsResponseUnmarshaller GetInstance();
    public static ListScramSecretsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListVpcConnectionsRequestMarshaller : object {
    private static ListVpcConnectionsRequestMarshaller _instance;
    public static ListVpcConnectionsRequestMarshaller Instance { get; }
    private static ListVpcConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVpcConnectionsRequest publicRequest);
    internal static ListVpcConnectionsRequestMarshaller GetInstance();
    public static ListVpcConnectionsRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ListVpcConnectionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVpcConnectionsResponseUnmarshaller _instance;
    public static ListVpcConnectionsResponseUnmarshaller Instance { get; }
    private static ListVpcConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVpcConnectionsResponseUnmarshaller GetInstance();
    public static ListVpcConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.LoggingInfoMarshaller : object {
    public static LoggingInfoMarshaller Instance;
    private static LoggingInfoMarshaller();
    public sealed virtual void Marshall(LoggingInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.LoggingInfoUnmarshaller : object {
    private static LoggingInfoUnmarshaller _instance;
    public static LoggingInfoUnmarshaller Instance { get; }
    private static LoggingInfoUnmarshaller();
    private sealed virtual override LoggingInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.LoggingInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoggingInfo Unmarshall(JsonUnmarshallerContext context);
    public static LoggingInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.MutableClusterInfoUnmarshaller : object {
    private static MutableClusterInfoUnmarshaller _instance;
    public static MutableClusterInfoUnmarshaller Instance { get; }
    private static MutableClusterInfoUnmarshaller();
    private sealed virtual override MutableClusterInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.MutableClusterInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MutableClusterInfo Unmarshall(JsonUnmarshallerContext context);
    public static MutableClusterInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.NodeExporterInfoMarshaller : object {
    public static NodeExporterInfoMarshaller Instance;
    private static NodeExporterInfoMarshaller();
    public sealed virtual void Marshall(NodeExporterInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.NodeExporterInfoUnmarshaller : object {
    private static NodeExporterInfoUnmarshaller _instance;
    public static NodeExporterInfoUnmarshaller Instance { get; }
    private static NodeExporterInfoUnmarshaller();
    private sealed virtual override NodeExporterInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.NodeExporterInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NodeExporterInfo Unmarshall(JsonUnmarshallerContext context);
    public static NodeExporterInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.NodeExporterUnmarshaller : object {
    private static NodeExporterUnmarshaller _instance;
    public static NodeExporterUnmarshaller Instance { get; }
    private static NodeExporterUnmarshaller();
    private sealed virtual override NodeExporter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.NodeExporter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NodeExporter Unmarshall(JsonUnmarshallerContext context);
    public static NodeExporterUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.NodeInfoUnmarshaller : object {
    private static NodeInfoUnmarshaller _instance;
    public static NodeInfoUnmarshaller Instance { get; }
    private static NodeInfoUnmarshaller();
    private sealed virtual override NodeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.NodeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NodeInfo Unmarshall(JsonUnmarshallerContext context);
    public static NodeInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller : object {
    private static NotFoundExceptionUnmarshaller _instance;
    public static NotFoundExceptionUnmarshaller Instance { get; }
    private static NotFoundExceptionUnmarshaller();
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.OpenMonitoringInfoMarshaller : object {
    public static OpenMonitoringInfoMarshaller Instance;
    private static OpenMonitoringInfoMarshaller();
    public sealed virtual void Marshall(OpenMonitoringInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.OpenMonitoringInfoUnmarshaller : object {
    private static OpenMonitoringInfoUnmarshaller _instance;
    public static OpenMonitoringInfoUnmarshaller Instance { get; }
    private static OpenMonitoringInfoUnmarshaller();
    private sealed virtual override OpenMonitoringInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.OpenMonitoringInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpenMonitoringInfo Unmarshall(JsonUnmarshallerContext context);
    public static OpenMonitoringInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.OpenMonitoringUnmarshaller : object {
    private static OpenMonitoringUnmarshaller _instance;
    public static OpenMonitoringUnmarshaller Instance { get; }
    private static OpenMonitoringUnmarshaller();
    private sealed virtual override OpenMonitoring Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.OpenMonitoring,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpenMonitoring Unmarshall(JsonUnmarshallerContext context);
    public static OpenMonitoringUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.PrometheusInfoMarshaller : object {
    public static PrometheusInfoMarshaller Instance;
    private static PrometheusInfoMarshaller();
    public sealed virtual void Marshall(PrometheusInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.PrometheusInfoUnmarshaller : object {
    private static PrometheusInfoUnmarshaller _instance;
    public static PrometheusInfoUnmarshaller Instance { get; }
    private static PrometheusInfoUnmarshaller();
    private sealed virtual override PrometheusInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.PrometheusInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrometheusInfo Unmarshall(JsonUnmarshallerContext context);
    public static PrometheusInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.PrometheusUnmarshaller : object {
    private static PrometheusUnmarshaller _instance;
    public static PrometheusUnmarshaller Instance { get; }
    private static PrometheusUnmarshaller();
    private sealed virtual override Prometheus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Prometheus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Prometheus Unmarshall(JsonUnmarshallerContext context);
    public static PrometheusUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ProvisionedRequestMarshaller : object {
    public static ProvisionedRequestMarshaller Instance;
    private static ProvisionedRequestMarshaller();
    public sealed virtual void Marshall(ProvisionedRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ProvisionedThroughputMarshaller : object {
    public static ProvisionedThroughputMarshaller Instance;
    private static ProvisionedThroughputMarshaller();
    public sealed virtual void Marshall(ProvisionedThroughput requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ProvisionedThroughputUnmarshaller : object {
    private static ProvisionedThroughputUnmarshaller _instance;
    public static ProvisionedThroughputUnmarshaller Instance { get; }
    private static ProvisionedThroughputUnmarshaller();
    private sealed virtual override ProvisionedThroughput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ProvisionedThroughput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedThroughput Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedThroughputUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ProvisionedUnmarshaller : object {
    private static ProvisionedUnmarshaller _instance;
    public static ProvisionedUnmarshaller Instance { get; }
    private static ProvisionedUnmarshaller();
    private sealed virtual override Provisioned Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Provisioned,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Provisioned Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.PublicAccessMarshaller : object {
    public static PublicAccessMarshaller Instance;
    private static PublicAccessMarshaller();
    public sealed virtual void Marshall(PublicAccess requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.PublicAccessUnmarshaller : object {
    private static PublicAccessUnmarshaller _instance;
    public static PublicAccessUnmarshaller Instance { get; }
    private static PublicAccessUnmarshaller();
    private sealed virtual override PublicAccess Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.PublicAccess,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicAccess Unmarshall(JsonUnmarshallerContext context);
    public static PublicAccessUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.PutClusterPolicyRequestMarshaller : object {
    private static PutClusterPolicyRequestMarshaller _instance;
    public static PutClusterPolicyRequestMarshaller Instance { get; }
    private static PutClusterPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutClusterPolicyRequest publicRequest);
    internal static PutClusterPolicyRequestMarshaller GetInstance();
    public static PutClusterPolicyRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.PutClusterPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutClusterPolicyResponseUnmarshaller _instance;
    public static PutClusterPolicyResponseUnmarshaller Instance { get; }
    private static PutClusterPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutClusterPolicyResponseUnmarshaller GetInstance();
    public static PutClusterPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.RebootBrokerRequestMarshaller : object {
    private static RebootBrokerRequestMarshaller _instance;
    public static RebootBrokerRequestMarshaller Instance { get; }
    private static RebootBrokerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootBrokerRequest publicRequest);
    internal static RebootBrokerRequestMarshaller GetInstance();
    public static RebootBrokerRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.RebootBrokerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RebootBrokerResponseUnmarshaller _instance;
    public static RebootBrokerResponseUnmarshaller Instance { get; }
    private static RebootBrokerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootBrokerResponseUnmarshaller GetInstance();
    public static RebootBrokerResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.RejectClientVpcConnectionRequestMarshaller : object {
    private static RejectClientVpcConnectionRequestMarshaller _instance;
    public static RejectClientVpcConnectionRequestMarshaller Instance { get; }
    private static RejectClientVpcConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RejectClientVpcConnectionRequest publicRequest);
    internal static RejectClientVpcConnectionRequestMarshaller GetInstance();
    public static RejectClientVpcConnectionRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.RejectClientVpcConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RejectClientVpcConnectionResponseUnmarshaller _instance;
    public static RejectClientVpcConnectionResponseUnmarshaller Instance { get; }
    private static RejectClientVpcConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RejectClientVpcConnectionResponseUnmarshaller GetInstance();
    public static RejectClientVpcConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ReplicationInfoDescriptionUnmarshaller : object {
    private static ReplicationInfoDescriptionUnmarshaller _instance;
    public static ReplicationInfoDescriptionUnmarshaller Instance { get; }
    private static ReplicationInfoDescriptionUnmarshaller();
    private sealed virtual override ReplicationInfoDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ReplicationInfoDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationInfoDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationInfoDescriptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ReplicationInfoMarshaller : object {
    public static ReplicationInfoMarshaller Instance;
    private static ReplicationInfoMarshaller();
    public sealed virtual void Marshall(ReplicationInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ReplicationInfoSummaryUnmarshaller : object {
    private static ReplicationInfoSummaryUnmarshaller _instance;
    public static ReplicationInfoSummaryUnmarshaller Instance { get; }
    private static ReplicationInfoSummaryUnmarshaller();
    private sealed virtual override ReplicationInfoSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ReplicationInfoSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationInfoSummary Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationInfoSummaryUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ReplicationStartingPositionMarshaller : object {
    public static ReplicationStartingPositionMarshaller Instance;
    private static ReplicationStartingPositionMarshaller();
    public sealed virtual void Marshall(ReplicationStartingPosition requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ReplicationStartingPositionUnmarshaller : object {
    private static ReplicationStartingPositionUnmarshaller _instance;
    public static ReplicationStartingPositionUnmarshaller Instance { get; }
    private static ReplicationStartingPositionUnmarshaller();
    private sealed virtual override ReplicationStartingPosition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ReplicationStartingPosition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationStartingPosition Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationStartingPositionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ReplicationStateInfoUnmarshaller : object {
    private static ReplicationStateInfoUnmarshaller _instance;
    public static ReplicationStateInfoUnmarshaller Instance { get; }
    private static ReplicationStateInfoUnmarshaller();
    private sealed virtual override ReplicationStateInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ReplicationStateInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationStateInfo Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationStateInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ReplicatorSummaryUnmarshaller : object {
    private static ReplicatorSummaryUnmarshaller _instance;
    public static ReplicatorSummaryUnmarshaller Instance { get; }
    private static ReplicatorSummaryUnmarshaller();
    private sealed virtual override ReplicatorSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ReplicatorSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicatorSummary Unmarshall(JsonUnmarshallerContext context);
    public static ReplicatorSummaryUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.S3Marshaller : object {
    public static S3Marshaller Instance;
    private static S3Marshaller();
    public sealed virtual void Marshall(S3 requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.S3Unmarshaller : object {
    private static S3Unmarshaller _instance;
    public static S3Unmarshaller Instance { get; }
    private static S3Unmarshaller();
    private sealed virtual override S3 Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.S3,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3 Unmarshall(JsonUnmarshallerContext context);
    public static S3Unmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.SaslMarshaller : object {
    public static SaslMarshaller Instance;
    private static SaslMarshaller();
    public sealed virtual void Marshall(Sasl requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.SaslUnmarshaller : object {
    private static SaslUnmarshaller _instance;
    public static SaslUnmarshaller Instance { get; }
    private static SaslUnmarshaller();
    private sealed virtual override Sasl Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Sasl,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Sasl Unmarshall(JsonUnmarshallerContext context);
    public static SaslUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ScramMarshaller : object {
    public static ScramMarshaller Instance;
    private static ScramMarshaller();
    public sealed virtual void Marshall(Scram requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ScramUnmarshaller : object {
    private static ScramUnmarshaller _instance;
    public static ScramUnmarshaller Instance { get; }
    private static ScramUnmarshaller();
    private sealed virtual override Scram Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Scram,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Scram Unmarshall(JsonUnmarshallerContext context);
    public static ScramUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ServerlessClientAuthenticationMarshaller : object {
    public static ServerlessClientAuthenticationMarshaller Instance;
    private static ServerlessClientAuthenticationMarshaller();
    public sealed virtual void Marshall(ServerlessClientAuthentication requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ServerlessClientAuthenticationUnmarshaller : object {
    private static ServerlessClientAuthenticationUnmarshaller _instance;
    public static ServerlessClientAuthenticationUnmarshaller Instance { get; }
    private static ServerlessClientAuthenticationUnmarshaller();
    private sealed virtual override ServerlessClientAuthentication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ServerlessClientAuthentication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServerlessClientAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static ServerlessClientAuthenticationUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ServerlessRequestMarshaller : object {
    public static ServerlessRequestMarshaller Instance;
    private static ServerlessRequestMarshaller();
    public sealed virtual void Marshall(ServerlessRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ServerlessSaslMarshaller : object {
    public static ServerlessSaslMarshaller Instance;
    private static ServerlessSaslMarshaller();
    public sealed virtual void Marshall(ServerlessSasl requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ServerlessSaslUnmarshaller : object {
    private static ServerlessSaslUnmarshaller _instance;
    public static ServerlessSaslUnmarshaller Instance { get; }
    private static ServerlessSaslUnmarshaller();
    private sealed virtual override ServerlessSasl Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ServerlessSasl,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServerlessSasl Unmarshall(JsonUnmarshallerContext context);
    public static ServerlessSaslUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ServerlessUnmarshaller : object {
    private static ServerlessUnmarshaller _instance;
    public static ServerlessUnmarshaller Instance { get; }
    private static ServerlessUnmarshaller();
    private sealed virtual override Serverless Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Serverless,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Serverless Unmarshall(JsonUnmarshallerContext context);
    public static ServerlessUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller : object {
    private static ServiceUnavailableExceptionUnmarshaller _instance;
    public static ServiceUnavailableExceptionUnmarshaller Instance { get; }
    private static ServiceUnavailableExceptionUnmarshaller();
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.StateInfoUnmarshaller : object {
    private static StateInfoUnmarshaller _instance;
    public static StateInfoUnmarshaller Instance { get; }
    private static StateInfoUnmarshaller();
    private sealed virtual override StateInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.StateInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StateInfo Unmarshall(JsonUnmarshallerContext context);
    public static StateInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.StorageInfoMarshaller : object {
    public static StorageInfoMarshaller Instance;
    private static StorageInfoMarshaller();
    public sealed virtual void Marshall(StorageInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.StorageInfoUnmarshaller : object {
    private static StorageInfoUnmarshaller _instance;
    public static StorageInfoUnmarshaller Instance { get; }
    private static StorageInfoUnmarshaller();
    private sealed virtual override StorageInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.StorageInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageInfo Unmarshall(JsonUnmarshallerContext context);
    public static StorageInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TlsMarshaller : object {
    public static TlsMarshaller Instance;
    private static TlsMarshaller();
    public sealed virtual void Marshall(Tls requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TlsUnmarshaller : object {
    private static TlsUnmarshaller _instance;
    public static TlsUnmarshaller Instance { get; }
    private static TlsUnmarshaller();
    private sealed virtual override Tls Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Tls,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tls Unmarshall(JsonUnmarshallerContext context);
    public static TlsUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TopicReplicationMarshaller : object {
    public static TopicReplicationMarshaller Instance;
    private static TopicReplicationMarshaller();
    public sealed virtual void Marshall(TopicReplication requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TopicReplicationUnmarshaller : object {
    private static TopicReplicationUnmarshaller _instance;
    public static TopicReplicationUnmarshaller Instance { get; }
    private static TopicReplicationUnmarshaller();
    private sealed virtual override TopicReplication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.TopicReplication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TopicReplication Unmarshall(JsonUnmarshallerContext context);
    public static TopicReplicationUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.TopicReplicationUpdateMarshaller : object {
    public static TopicReplicationUpdateMarshaller Instance;
    private static TopicReplicationUpdateMarshaller();
    public sealed virtual void Marshall(TopicReplicationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UnauthenticatedMarshaller : object {
    public static UnauthenticatedMarshaller Instance;
    private static UnauthenticatedMarshaller();
    public sealed virtual void Marshall(Unauthenticated requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UnauthenticatedUnmarshaller : object {
    private static UnauthenticatedUnmarshaller _instance;
    public static UnauthenticatedUnmarshaller Instance { get; }
    private static UnauthenticatedUnmarshaller();
    private sealed virtual override Unauthenticated Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.Unauthenticated,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Unauthenticated Unmarshall(JsonUnmarshallerContext context);
    public static UnauthenticatedUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller : object {
    private static UnauthorizedExceptionUnmarshaller _instance;
    public static UnauthorizedExceptionUnmarshaller Instance { get; }
    private static UnauthorizedExceptionUnmarshaller();
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnauthorizedExceptionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UnprocessedScramSecretUnmarshaller : object {
    private static UnprocessedScramSecretUnmarshaller _instance;
    public static UnprocessedScramSecretUnmarshaller Instance { get; }
    private static UnprocessedScramSecretUnmarshaller();
    private sealed virtual override UnprocessedScramSecret Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.UnprocessedScramSecret,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnprocessedScramSecret Unmarshall(JsonUnmarshallerContext context);
    public static UnprocessedScramSecretUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateBrokerCountRequestMarshaller : object {
    private static UpdateBrokerCountRequestMarshaller _instance;
    public static UpdateBrokerCountRequestMarshaller Instance { get; }
    private static UpdateBrokerCountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateBrokerCountRequest publicRequest);
    internal static UpdateBrokerCountRequestMarshaller GetInstance();
    public static UpdateBrokerCountRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateBrokerCountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateBrokerCountResponseUnmarshaller _instance;
    public static UpdateBrokerCountResponseUnmarshaller Instance { get; }
    private static UpdateBrokerCountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateBrokerCountResponseUnmarshaller GetInstance();
    public static UpdateBrokerCountResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateBrokerStorageRequestMarshaller : object {
    private static UpdateBrokerStorageRequestMarshaller _instance;
    public static UpdateBrokerStorageRequestMarshaller Instance { get; }
    private static UpdateBrokerStorageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateBrokerStorageRequest publicRequest);
    internal static UpdateBrokerStorageRequestMarshaller GetInstance();
    public static UpdateBrokerStorageRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateBrokerStorageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateBrokerStorageResponseUnmarshaller _instance;
    public static UpdateBrokerStorageResponseUnmarshaller Instance { get; }
    private static UpdateBrokerStorageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateBrokerStorageResponseUnmarshaller GetInstance();
    public static UpdateBrokerStorageResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateBrokerTypeRequestMarshaller : object {
    private static UpdateBrokerTypeRequestMarshaller _instance;
    public static UpdateBrokerTypeRequestMarshaller Instance { get; }
    private static UpdateBrokerTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateBrokerTypeRequest publicRequest);
    internal static UpdateBrokerTypeRequestMarshaller GetInstance();
    public static UpdateBrokerTypeRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateBrokerTypeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateBrokerTypeResponseUnmarshaller _instance;
    public static UpdateBrokerTypeResponseUnmarshaller Instance { get; }
    private static UpdateBrokerTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateBrokerTypeResponseUnmarshaller GetInstance();
    public static UpdateBrokerTypeResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateClusterConfigurationRequestMarshaller : object {
    private static UpdateClusterConfigurationRequestMarshaller _instance;
    public static UpdateClusterConfigurationRequestMarshaller Instance { get; }
    private static UpdateClusterConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateClusterConfigurationRequest publicRequest);
    internal static UpdateClusterConfigurationRequestMarshaller GetInstance();
    public static UpdateClusterConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateClusterConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateClusterConfigurationResponseUnmarshaller _instance;
    public static UpdateClusterConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateClusterConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateClusterConfigurationResponseUnmarshaller GetInstance();
    public static UpdateClusterConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateClusterKafkaVersionRequestMarshaller : object {
    private static UpdateClusterKafkaVersionRequestMarshaller _instance;
    public static UpdateClusterKafkaVersionRequestMarshaller Instance { get; }
    private static UpdateClusterKafkaVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateClusterKafkaVersionRequest publicRequest);
    internal static UpdateClusterKafkaVersionRequestMarshaller GetInstance();
    public static UpdateClusterKafkaVersionRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateClusterKafkaVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateClusterKafkaVersionResponseUnmarshaller _instance;
    public static UpdateClusterKafkaVersionResponseUnmarshaller Instance { get; }
    private static UpdateClusterKafkaVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateClusterKafkaVersionResponseUnmarshaller GetInstance();
    public static UpdateClusterKafkaVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateConfigurationRequestMarshaller : object {
    private static UpdateConfigurationRequestMarshaller _instance;
    public static UpdateConfigurationRequestMarshaller Instance { get; }
    private static UpdateConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConfigurationRequest publicRequest);
    internal static UpdateConfigurationRequestMarshaller GetInstance();
    public static UpdateConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateConfigurationResponseUnmarshaller _instance;
    public static UpdateConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConfigurationResponseUnmarshaller GetInstance();
    public static UpdateConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateConnectivityRequestMarshaller : object {
    private static UpdateConnectivityRequestMarshaller _instance;
    public static UpdateConnectivityRequestMarshaller Instance { get; }
    private static UpdateConnectivityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConnectivityRequest publicRequest);
    internal static UpdateConnectivityRequestMarshaller GetInstance();
    public static UpdateConnectivityRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateConnectivityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateConnectivityResponseUnmarshaller _instance;
    public static UpdateConnectivityResponseUnmarshaller Instance { get; }
    private static UpdateConnectivityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConnectivityResponseUnmarshaller GetInstance();
    public static UpdateConnectivityResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateMonitoringRequestMarshaller : object {
    private static UpdateMonitoringRequestMarshaller _instance;
    public static UpdateMonitoringRequestMarshaller Instance { get; }
    private static UpdateMonitoringRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateMonitoringRequest publicRequest);
    internal static UpdateMonitoringRequestMarshaller GetInstance();
    public static UpdateMonitoringRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateMonitoringResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateMonitoringResponseUnmarshaller _instance;
    public static UpdateMonitoringResponseUnmarshaller Instance { get; }
    private static UpdateMonitoringResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateMonitoringResponseUnmarshaller GetInstance();
    public static UpdateMonitoringResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateReplicationInfoRequestMarshaller : object {
    private static UpdateReplicationInfoRequestMarshaller _instance;
    public static UpdateReplicationInfoRequestMarshaller Instance { get; }
    private static UpdateReplicationInfoRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateReplicationInfoRequest publicRequest);
    internal static UpdateReplicationInfoRequestMarshaller GetInstance();
    public static UpdateReplicationInfoRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateReplicationInfoResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateReplicationInfoResponseUnmarshaller _instance;
    public static UpdateReplicationInfoResponseUnmarshaller Instance { get; }
    private static UpdateReplicationInfoResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateReplicationInfoResponseUnmarshaller GetInstance();
    public static UpdateReplicationInfoResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateSecurityRequestMarshaller : object {
    private static UpdateSecurityRequestMarshaller _instance;
    public static UpdateSecurityRequestMarshaller Instance { get; }
    private static UpdateSecurityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSecurityRequest publicRequest);
    internal static UpdateSecurityRequestMarshaller GetInstance();
    public static UpdateSecurityRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateSecurityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSecurityResponseUnmarshaller _instance;
    public static UpdateSecurityResponseUnmarshaller Instance { get; }
    private static UpdateSecurityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSecurityResponseUnmarshaller GetInstance();
    public static UpdateSecurityResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateStorageRequestMarshaller : object {
    private static UpdateStorageRequestMarshaller _instance;
    public static UpdateStorageRequestMarshaller Instance { get; }
    private static UpdateStorageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateStorageRequest publicRequest);
    internal static UpdateStorageRequestMarshaller GetInstance();
    public static UpdateStorageRequestMarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UpdateStorageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateStorageResponseUnmarshaller _instance;
    public static UpdateStorageResponseUnmarshaller Instance { get; }
    private static UpdateStorageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateStorageResponseUnmarshaller GetInstance();
    public static UpdateStorageResponseUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.UserIdentityUnmarshaller : object {
    private static UserIdentityUnmarshaller _instance;
    public static UserIdentityUnmarshaller Instance { get; }
    private static UserIdentityUnmarshaller();
    private sealed virtual override UserIdentity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.UserIdentity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserIdentity Unmarshall(JsonUnmarshallerContext context);
    public static UserIdentityUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConfigMarshaller : object {
    public static VpcConfigMarshaller Instance;
    private static VpcConfigMarshaller();
    public sealed virtual void Marshall(VpcConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConfigUnmarshaller : object {
    private static VpcConfigUnmarshaller _instance;
    public static VpcConfigUnmarshaller Instance { get; }
    private static VpcConfigUnmarshaller();
    private sealed virtual override VpcConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConfig Unmarshall(JsonUnmarshallerContext context);
    public static VpcConfigUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectionInfoServerlessUnmarshaller : object {
    private static VpcConnectionInfoServerlessUnmarshaller _instance;
    public static VpcConnectionInfoServerlessUnmarshaller Instance { get; }
    private static VpcConnectionInfoServerlessUnmarshaller();
    private sealed virtual override VpcConnectionInfoServerless Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectionInfoServerless,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectionInfoServerless Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectionInfoServerlessUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectionInfoUnmarshaller : object {
    private static VpcConnectionInfoUnmarshaller _instance;
    public static VpcConnectionInfoUnmarshaller Instance { get; }
    private static VpcConnectionInfoUnmarshaller();
    private sealed virtual override VpcConnectionInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectionInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectionInfo Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectionInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectionUnmarshaller : object {
    private static VpcConnectionUnmarshaller _instance;
    public static VpcConnectionUnmarshaller Instance { get; }
    private static VpcConnectionUnmarshaller();
    private sealed virtual override VpcConnection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnection Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectionUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityClientAuthenticationMarshaller : object {
    public static VpcConnectivityClientAuthenticationMarshaller Instance;
    private static VpcConnectivityClientAuthenticationMarshaller();
    public sealed virtual void Marshall(VpcConnectivityClientAuthentication requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityClientAuthenticationUnmarshaller : object {
    private static VpcConnectivityClientAuthenticationUnmarshaller _instance;
    public static VpcConnectivityClientAuthenticationUnmarshaller Instance { get; }
    private static VpcConnectivityClientAuthenticationUnmarshaller();
    private sealed virtual override VpcConnectivityClientAuthentication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectivityClientAuthentication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectivityClientAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectivityClientAuthenticationUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityIamMarshaller : object {
    public static VpcConnectivityIamMarshaller Instance;
    private static VpcConnectivityIamMarshaller();
    public sealed virtual void Marshall(VpcConnectivityIam requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityIamUnmarshaller : object {
    private static VpcConnectivityIamUnmarshaller _instance;
    public static VpcConnectivityIamUnmarshaller Instance { get; }
    private static VpcConnectivityIamUnmarshaller();
    private sealed virtual override VpcConnectivityIam Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectivityIam,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectivityIam Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectivityIamUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityMarshaller : object {
    public static VpcConnectivityMarshaller Instance;
    private static VpcConnectivityMarshaller();
    public sealed virtual void Marshall(VpcConnectivity requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivitySaslMarshaller : object {
    public static VpcConnectivitySaslMarshaller Instance;
    private static VpcConnectivitySaslMarshaller();
    public sealed virtual void Marshall(VpcConnectivitySasl requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivitySaslUnmarshaller : object {
    private static VpcConnectivitySaslUnmarshaller _instance;
    public static VpcConnectivitySaslUnmarshaller Instance { get; }
    private static VpcConnectivitySaslUnmarshaller();
    private sealed virtual override VpcConnectivitySasl Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectivitySasl,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectivitySasl Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectivitySaslUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityScramMarshaller : object {
    public static VpcConnectivityScramMarshaller Instance;
    private static VpcConnectivityScramMarshaller();
    public sealed virtual void Marshall(VpcConnectivityScram requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityScramUnmarshaller : object {
    private static VpcConnectivityScramUnmarshaller _instance;
    public static VpcConnectivityScramUnmarshaller Instance { get; }
    private static VpcConnectivityScramUnmarshaller();
    private sealed virtual override VpcConnectivityScram Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectivityScram,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectivityScram Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectivityScramUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityTlsMarshaller : object {
    public static VpcConnectivityTlsMarshaller Instance;
    private static VpcConnectivityTlsMarshaller();
    public sealed virtual void Marshall(VpcConnectivityTls requestObject, JsonMarshallerContext context);
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityTlsUnmarshaller : object {
    private static VpcConnectivityTlsUnmarshaller _instance;
    public static VpcConnectivityTlsUnmarshaller Instance { get; }
    private static VpcConnectivityTlsUnmarshaller();
    private sealed virtual override VpcConnectivityTls Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectivityTls,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectivityTls Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectivityTlsUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.VpcConnectivityUnmarshaller : object {
    private static VpcConnectivityUnmarshaller _instance;
    public static VpcConnectivityUnmarshaller Instance { get; }
    private static VpcConnectivityUnmarshaller();
    private sealed virtual override VpcConnectivity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.VpcConnectivity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConnectivity Unmarshall(JsonUnmarshallerContext context);
    public static VpcConnectivityUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.Internal.MarshallTransformations.ZookeeperNodeInfoUnmarshaller : object {
    private static ZookeeperNodeInfoUnmarshaller _instance;
    public static ZookeeperNodeInfoUnmarshaller Instance { get; }
    private static ZookeeperNodeInfoUnmarshaller();
    private sealed virtual override ZookeeperNodeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kafka.Model.ZookeeperNodeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ZookeeperNodeInfo Unmarshall(JsonUnmarshallerContext context);
    public static ZookeeperNodeInfoUnmarshaller get_Instance();
}
public class Amazon.Kafka.Model.InternalServerErrorException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.JmxExporter : object {
    private Nullable`1<bool> _enabledInBroker;
    [AWSPropertyAttribute]
public Nullable`1<bool> EnabledInBroker { get; public set; }
    public Nullable`1<bool> get_EnabledInBroker();
    public void set_EnabledInBroker(Nullable`1<bool> value);
    internal bool IsSetEnabledInBroker();
}
public class Amazon.Kafka.Model.JmxExporterInfo : object {
    private Nullable`1<bool> _enabledInBroker;
    [AWSPropertyAttribute]
public Nullable`1<bool> EnabledInBroker { get; public set; }
    public Nullable`1<bool> get_EnabledInBroker();
    public void set_EnabledInBroker(Nullable`1<bool> value);
    internal bool IsSetEnabledInBroker();
}
public class Amazon.Kafka.Model.KafkaCluster : object {
    private AmazonMskCluster _amazonMskCluster;
    private KafkaClusterClientVpcConfig _vpcConfig;
    [AWSPropertyAttribute]
public AmazonMskCluster AmazonMskCluster { get; public set; }
    [AWSPropertyAttribute]
public KafkaClusterClientVpcConfig VpcConfig { get; public set; }
    public AmazonMskCluster get_AmazonMskCluster();
    public void set_AmazonMskCluster(AmazonMskCluster value);
    internal bool IsSetAmazonMskCluster();
    public KafkaClusterClientVpcConfig get_VpcConfig();
    public void set_VpcConfig(KafkaClusterClientVpcConfig value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Kafka.Model.KafkaClusterClientVpcConfig : object {
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.Kafka.Model.KafkaClusterDescription : object {
    private AmazonMskCluster _amazonMskCluster;
    private string _kafkaClusterAlias;
    private KafkaClusterClientVpcConfig _vpcConfig;
    public AmazonMskCluster AmazonMskCluster { get; public set; }
    public string KafkaClusterAlias { get; public set; }
    public KafkaClusterClientVpcConfig VpcConfig { get; public set; }
    public AmazonMskCluster get_AmazonMskCluster();
    public void set_AmazonMskCluster(AmazonMskCluster value);
    internal bool IsSetAmazonMskCluster();
    public string get_KafkaClusterAlias();
    public void set_KafkaClusterAlias(string value);
    internal bool IsSetKafkaClusterAlias();
    public KafkaClusterClientVpcConfig get_VpcConfig();
    public void set_VpcConfig(KafkaClusterClientVpcConfig value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Kafka.Model.KafkaClusterSummary : object {
    private AmazonMskCluster _amazonMskCluster;
    private string _kafkaClusterAlias;
    public AmazonMskCluster AmazonMskCluster { get; public set; }
    public string KafkaClusterAlias { get; public set; }
    public AmazonMskCluster get_AmazonMskCluster();
    public void set_AmazonMskCluster(AmazonMskCluster value);
    internal bool IsSetAmazonMskCluster();
    public string get_KafkaClusterAlias();
    public void set_KafkaClusterAlias(string value);
    internal bool IsSetKafkaClusterAlias();
}
public class Amazon.Kafka.Model.KafkaPaginatorFactory : object {
    private IAmazonKafka client;
    internal KafkaPaginatorFactory(IAmazonKafka client);
    public sealed virtual IListClientVpcConnectionsPaginator ListClientVpcConnections(ListClientVpcConnectionsRequest request);
    public sealed virtual IListClusterOperationsPaginator ListClusterOperations(ListClusterOperationsRequest request);
    public sealed virtual IListClusterOperationsV2Paginator ListClusterOperationsV2(ListClusterOperationsV2Request request);
    public sealed virtual IListClustersPaginator ListClusters(ListClustersRequest request);
    public sealed virtual IListClustersV2Paginator ListClustersV2(ListClustersV2Request request);
    public sealed virtual IListConfigurationRevisionsPaginator ListConfigurationRevisions(ListConfigurationRevisionsRequest request);
    public sealed virtual IListConfigurationsPaginator ListConfigurations(ListConfigurationsRequest request);
    public sealed virtual IListKafkaVersionsPaginator ListKafkaVersions(ListKafkaVersionsRequest request);
    public sealed virtual IListNodesPaginator ListNodes(ListNodesRequest request);
    public sealed virtual IListReplicatorsPaginator ListReplicators(ListReplicatorsRequest request);
    public sealed virtual IListScramSecretsPaginator ListScramSecrets(ListScramSecretsRequest request);
    public sealed virtual IListVpcConnectionsPaginator ListVpcConnections(ListVpcConnectionsRequest request);
}
public class Amazon.Kafka.Model.KafkaVersion : object {
    private KafkaVersionStatus _status;
    private string _version;
    public KafkaVersionStatus Status { get; public set; }
    public string Version { get; public set; }
    public KafkaVersionStatus get_Status();
    public void set_Status(KafkaVersionStatus value);
    internal bool IsSetStatus();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
internal class Amazon.Kafka.Model.ListClientVpcConnectionsPaginator : object {
    private IAmazonKafka _client;
    private ListClientVpcConnectionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListClientVpcConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClientVpcConnection> ClientVpcConnections { get; }
    internal ListClientVpcConnectionsPaginator(IAmazonKafka client, ListClientVpcConnectionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListClientVpcConnectionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClientVpcConnection> get_ClientVpcConnections();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListClientVpcConnectionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListClientVpcConnectionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListClientVpcConnectionsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListClientVpcConnectionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListClientVpcConnectionsRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListClientVpcConnectionsResponse : AmazonWebServiceResponse {
    private List`1<ClientVpcConnection> _clientVpcConnections;
    private string _nextToken;
    public List`1<ClientVpcConnection> ClientVpcConnections { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClientVpcConnection> get_ClientVpcConnections();
    public void set_ClientVpcConnections(List`1<ClientVpcConnection> value);
    internal bool IsSetClientVpcConnections();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kafka.Model.ListClusterOperationsPaginator : object {
    private IAmazonKafka _client;
    private ListClusterOperationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListClusterOperationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClusterOperationInfo> ClusterOperationInfoList { get; }
    internal ListClusterOperationsPaginator(IAmazonKafka client, ListClusterOperationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListClusterOperationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClusterOperationInfo> get_ClusterOperationInfoList();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListClusterOperationsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListClusterOperationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListClusterOperationsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListClusterOperationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListClusterOperationsRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListClusterOperationsResponse : AmazonWebServiceResponse {
    private List`1<ClusterOperationInfo> _clusterOperationInfoList;
    private string _nextToken;
    public List`1<ClusterOperationInfo> ClusterOperationInfoList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClusterOperationInfo> get_ClusterOperationInfoList();
    public void set_ClusterOperationInfoList(List`1<ClusterOperationInfo> value);
    internal bool IsSetClusterOperationInfoList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kafka.Model.ListClusterOperationsV2Paginator : object {
    private IAmazonKafka _client;
    private ListClusterOperationsV2Request _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListClusterOperationsV2Response> Responses { get; }
    public IPaginatedEnumerable`1<ClusterOperationV2Summary> ClusterOperationInfoList { get; }
    internal ListClusterOperationsV2Paginator(IAmazonKafka client, ListClusterOperationsV2Request request);
    public sealed virtual IPaginatedEnumerable`1<ListClusterOperationsV2Response> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClusterOperationV2Summary> get_ClusterOperationInfoList();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListClusterOperationsV2Paginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListClusterOperationsV2Response>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListClusterOperationsV2Response> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListClusterOperationsV2Response>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListClusterOperationsV2Request : AmazonKafkaRequest {
    private string _clusterArn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListClusterOperationsV2Response : AmazonWebServiceResponse {
    private List`1<ClusterOperationV2Summary> _clusterOperationInfoList;
    private string _nextToken;
    public List`1<ClusterOperationV2Summary> ClusterOperationInfoList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClusterOperationV2Summary> get_ClusterOperationInfoList();
    public void set_ClusterOperationInfoList(List`1<ClusterOperationV2Summary> value);
    internal bool IsSetClusterOperationInfoList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kafka.Model.ListClustersPaginator : object {
    private IAmazonKafka _client;
    private ListClustersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListClustersResponse> Responses { get; }
    public IPaginatedEnumerable`1<ClusterInfo> ClusterInfoList { get; }
    internal ListClustersPaginator(IAmazonKafka client, ListClustersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListClustersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ClusterInfo> get_ClusterInfoList();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListClustersPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListClustersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListClustersResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListClustersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListClustersRequest : AmazonKafkaRequest {
    private string _clusterNameFilter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public string ClusterNameFilter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClusterNameFilter();
    public void set_ClusterNameFilter(string value);
    internal bool IsSetClusterNameFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListClustersResponse : AmazonWebServiceResponse {
    private List`1<ClusterInfo> _clusterInfoList;
    private string _nextToken;
    public List`1<ClusterInfo> ClusterInfoList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClusterInfo> get_ClusterInfoList();
    public void set_ClusterInfoList(List`1<ClusterInfo> value);
    internal bool IsSetClusterInfoList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kafka.Model.ListClustersV2Paginator : object {
    private IAmazonKafka _client;
    private ListClustersV2Request _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListClustersV2Response> Responses { get; }
    public IPaginatedEnumerable`1<Cluster> ClusterInfoList { get; }
    internal ListClustersV2Paginator(IAmazonKafka client, ListClustersV2Request request);
    public sealed virtual IPaginatedEnumerable`1<ListClustersV2Response> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Cluster> get_ClusterInfoList();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListClustersV2Paginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListClustersV2Response>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListClustersV2Response> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListClustersV2Response>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListClustersV2Request : AmazonKafkaRequest {
    private string _clusterNameFilter;
    private string _clusterTypeFilter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public string ClusterNameFilter { get; public set; }
    public string ClusterTypeFilter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClusterNameFilter();
    public void set_ClusterNameFilter(string value);
    internal bool IsSetClusterNameFilter();
    public string get_ClusterTypeFilter();
    public void set_ClusterTypeFilter(string value);
    internal bool IsSetClusterTypeFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListClustersV2Response : AmazonWebServiceResponse {
    private List`1<Cluster> _clusterInfoList;
    private string _nextToken;
    public List`1<Cluster> ClusterInfoList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Cluster> get_ClusterInfoList();
    public void set_ClusterInfoList(List`1<Cluster> value);
    internal bool IsSetClusterInfoList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kafka.Model.ListConfigurationRevisionsPaginator : object {
    private IAmazonKafka _client;
    private ListConfigurationRevisionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListConfigurationRevisionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ConfigurationRevision> Revisions { get; }
    internal ListConfigurationRevisionsPaginator(IAmazonKafka client, ListConfigurationRevisionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListConfigurationRevisionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ConfigurationRevision> get_Revisions();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListConfigurationRevisionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListConfigurationRevisionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListConfigurationRevisionsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListConfigurationRevisionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListConfigurationRevisionsRequest : AmazonKafkaRequest {
    private string _arn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListConfigurationRevisionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ConfigurationRevision> _revisions;
    public string NextToken { get; public set; }
    public List`1<ConfigurationRevision> Revisions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ConfigurationRevision> get_Revisions();
    public void set_Revisions(List`1<ConfigurationRevision> value);
    internal bool IsSetRevisions();
}
internal class Amazon.Kafka.Model.ListConfigurationsPaginator : object {
    private IAmazonKafka _client;
    private ListConfigurationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Configuration> Configurations { get; }
    internal ListConfigurationsPaginator(IAmazonKafka client, ListConfigurationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListConfigurationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Configuration> get_Configurations();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListConfigurationsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListConfigurationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListConfigurationsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListConfigurationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListConfigurationsRequest : AmazonKafkaRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListConfigurationsResponse : AmazonWebServiceResponse {
    private List`1<Configuration> _configurations;
    private string _nextToken;
    public List`1<Configuration> Configurations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Configuration> get_Configurations();
    public void set_Configurations(List`1<Configuration> value);
    internal bool IsSetConfigurations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kafka.Model.ListKafkaVersionsPaginator : object {
    private IAmazonKafka _client;
    private ListKafkaVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListKafkaVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<KafkaVersion> KafkaVersions { get; }
    internal ListKafkaVersionsPaginator(IAmazonKafka client, ListKafkaVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListKafkaVersionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<KafkaVersion> get_KafkaVersions();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListKafkaVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListKafkaVersionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListKafkaVersionsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListKafkaVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListKafkaVersionsRequest : AmazonKafkaRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListKafkaVersionsResponse : AmazonWebServiceResponse {
    private List`1<KafkaVersion> _kafkaVersions;
    private string _nextToken;
    public List`1<KafkaVersion> KafkaVersions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<KafkaVersion> get_KafkaVersions();
    public void set_KafkaVersions(List`1<KafkaVersion> value);
    internal bool IsSetKafkaVersions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kafka.Model.ListNodesPaginator : object {
    private IAmazonKafka _client;
    private ListNodesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListNodesResponse> Responses { get; }
    public IPaginatedEnumerable`1<NodeInfo> NodeInfoList { get; }
    internal ListNodesPaginator(IAmazonKafka client, ListNodesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListNodesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<NodeInfo> get_NodeInfoList();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListNodesPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListNodesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListNodesResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListNodesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListNodesRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListNodesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<NodeInfo> _nodeInfoList;
    public string NextToken { get; public set; }
    public List`1<NodeInfo> NodeInfoList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<NodeInfo> get_NodeInfoList();
    public void set_NodeInfoList(List`1<NodeInfo> value);
    internal bool IsSetNodeInfoList();
}
internal class Amazon.Kafka.Model.ListReplicatorsPaginator : object {
    private IAmazonKafka _client;
    private ListReplicatorsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListReplicatorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReplicatorSummary> Replicators { get; }
    internal ListReplicatorsPaginator(IAmazonKafka client, ListReplicatorsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListReplicatorsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ReplicatorSummary> get_Replicators();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListReplicatorsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListReplicatorsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListReplicatorsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListReplicatorsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListReplicatorsRequest : AmazonKafkaRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _replicatorNameFilter;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string ReplicatorNameFilter { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ReplicatorNameFilter();
    public void set_ReplicatorNameFilter(string value);
    internal bool IsSetReplicatorNameFilter();
}
public class Amazon.Kafka.Model.ListReplicatorsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReplicatorSummary> _replicators;
    public string NextToken { get; public set; }
    public List`1<ReplicatorSummary> Replicators { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReplicatorSummary> get_Replicators();
    public void set_Replicators(List`1<ReplicatorSummary> value);
    internal bool IsSetReplicators();
}
internal class Amazon.Kafka.Model.ListScramSecretsPaginator : object {
    private IAmazonKafka _client;
    private ListScramSecretsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListScramSecretsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> SecretArnList { get; }
    internal ListScramSecretsPaginator(IAmazonKafka client, ListScramSecretsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListScramSecretsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_SecretArnList();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListScramSecretsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListScramSecretsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListScramSecretsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListScramSecretsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListScramSecretsRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListScramSecretsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<string> _secretArnList;
    public string NextToken { get; public set; }
    public List`1<string> SecretArnList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SecretArnList();
    public void set_SecretArnList(List`1<string> value);
    internal bool IsSetSecretArnList();
}
public class Amazon.Kafka.Model.ListTagsForResourceRequest : AmazonKafkaRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.Kafka.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
internal class Amazon.Kafka.Model.ListVpcConnectionsPaginator : object {
    private IAmazonKafka _client;
    private ListVpcConnectionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListVpcConnectionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<VpcConnection> VpcConnections { get; }
    internal ListVpcConnectionsPaginator(IAmazonKafka client, ListVpcConnectionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListVpcConnectionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VpcConnection> get_VpcConnections();
    [AsyncIteratorStateMachineAttribute("Amazon.Kafka.Model.ListVpcConnectionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kafka-Model-ListVpcConnectionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListVpcConnectionsResponse> Amazon.Runtime.IPaginator<Amazon.Kafka.Model.ListVpcConnectionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kafka.Model.ListVpcConnectionsRequest : AmazonKafkaRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kafka.Model.ListVpcConnectionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VpcConnection> _vpcConnections;
    public string NextToken { get; public set; }
    public List`1<VpcConnection> VpcConnections { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VpcConnection> get_VpcConnections();
    public void set_VpcConnections(List`1<VpcConnection> value);
    internal bool IsSetVpcConnections();
}
public class Amazon.Kafka.Model.LoggingInfo : object {
    private BrokerLogs _brokerLogs;
    [AWSPropertyAttribute]
public BrokerLogs BrokerLogs { get; public set; }
    public BrokerLogs get_BrokerLogs();
    public void set_BrokerLogs(BrokerLogs value);
    internal bool IsSetBrokerLogs();
}
public class Amazon.Kafka.Model.MutableClusterInfo : object {
    private BrokerCountUpdateInfo _brokerCountUpdateInfo;
    private List`1<BrokerEBSVolumeInfo> _brokerEBSVolumeInfo;
    private ClientAuthentication _clientAuthentication;
    private ConfigurationInfo _configurationInfo;
    private ConnectivityInfo _connectivityInfo;
    private EncryptionInfo _encryptionInfo;
    private EnhancedMonitoring _enhancedMonitoring;
    private string _instanceType;
    private string _kafkaVersion;
    private LoggingInfo _loggingInfo;
    private Nullable`1<int> _numberOfBrokerNodes;
    private OpenMonitoring _openMonitoring;
    private StorageMode _storageMode;
    public BrokerCountUpdateInfo BrokerCountUpdateInfo { get; public set; }
    public List`1<BrokerEBSVolumeInfo> BrokerEBSVolumeInfo { get; public set; }
    public ClientAuthentication ClientAuthentication { get; public set; }
    public ConfigurationInfo ConfigurationInfo { get; public set; }
    public ConnectivityInfo ConnectivityInfo { get; public set; }
    public EncryptionInfo EncryptionInfo { get; public set; }
    public EnhancedMonitoring EnhancedMonitoring { get; public set; }
    [AWSPropertyAttribute]
public string InstanceType { get; public set; }
    public string KafkaVersion { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    public Nullable`1<int> NumberOfBrokerNodes { get; public set; }
    public OpenMonitoring OpenMonitoring { get; public set; }
    public StorageMode StorageMode { get; public set; }
    public BrokerCountUpdateInfo get_BrokerCountUpdateInfo();
    public void set_BrokerCountUpdateInfo(BrokerCountUpdateInfo value);
    internal bool IsSetBrokerCountUpdateInfo();
    public List`1<BrokerEBSVolumeInfo> get_BrokerEBSVolumeInfo();
    public void set_BrokerEBSVolumeInfo(List`1<BrokerEBSVolumeInfo> value);
    internal bool IsSetBrokerEBSVolumeInfo();
    public ClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public ConfigurationInfo get_ConfigurationInfo();
    public void set_ConfigurationInfo(ConfigurationInfo value);
    internal bool IsSetConfigurationInfo();
    public ConnectivityInfo get_ConnectivityInfo();
    public void set_ConnectivityInfo(ConnectivityInfo value);
    internal bool IsSetConnectivityInfo();
    public EncryptionInfo get_EncryptionInfo();
    public void set_EncryptionInfo(EncryptionInfo value);
    internal bool IsSetEncryptionInfo();
    public EnhancedMonitoring get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(EnhancedMonitoring value);
    internal bool IsSetEnhancedMonitoring();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_KafkaVersion();
    public void set_KafkaVersion(string value);
    internal bool IsSetKafkaVersion();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public Nullable`1<int> get_NumberOfBrokerNodes();
    public void set_NumberOfBrokerNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfBrokerNodes();
    public OpenMonitoring get_OpenMonitoring();
    public void set_OpenMonitoring(OpenMonitoring value);
    internal bool IsSetOpenMonitoring();
    public StorageMode get_StorageMode();
    public void set_StorageMode(StorageMode value);
    internal bool IsSetStorageMode();
}
public class Amazon.Kafka.Model.NodeExporter : object {
    private Nullable`1<bool> _enabledInBroker;
    [AWSPropertyAttribute]
public Nullable`1<bool> EnabledInBroker { get; public set; }
    public Nullable`1<bool> get_EnabledInBroker();
    public void set_EnabledInBroker(Nullable`1<bool> value);
    internal bool IsSetEnabledInBroker();
}
public class Amazon.Kafka.Model.NodeExporterInfo : object {
    private Nullable`1<bool> _enabledInBroker;
    [AWSPropertyAttribute]
public Nullable`1<bool> EnabledInBroker { get; public set; }
    public Nullable`1<bool> get_EnabledInBroker();
    public void set_EnabledInBroker(Nullable`1<bool> value);
    internal bool IsSetEnabledInBroker();
}
public class Amazon.Kafka.Model.NodeInfo : object {
    private string _addedToClusterTime;
    private BrokerNodeInfo _brokerNodeInfo;
    private ControllerNodeInfo _controllerNodeInfo;
    private string _instanceType;
    private string _nodeARN;
    private NodeType _nodeType;
    private ZookeeperNodeInfo _zookeeperNodeInfo;
    public string AddedToClusterTime { get; public set; }
    public BrokerNodeInfo BrokerNodeInfo { get; public set; }
    public ControllerNodeInfo ControllerNodeInfo { get; public set; }
    public string InstanceType { get; public set; }
    public string NodeARN { get; public set; }
    public NodeType NodeType { get; public set; }
    public ZookeeperNodeInfo ZookeeperNodeInfo { get; public set; }
    public string get_AddedToClusterTime();
    public void set_AddedToClusterTime(string value);
    internal bool IsSetAddedToClusterTime();
    public BrokerNodeInfo get_BrokerNodeInfo();
    public void set_BrokerNodeInfo(BrokerNodeInfo value);
    internal bool IsSetBrokerNodeInfo();
    public ControllerNodeInfo get_ControllerNodeInfo();
    public void set_ControllerNodeInfo(ControllerNodeInfo value);
    internal bool IsSetControllerNodeInfo();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_NodeARN();
    public void set_NodeARN(string value);
    internal bool IsSetNodeARN();
    public NodeType get_NodeType();
    public void set_NodeType(NodeType value);
    internal bool IsSetNodeType();
    public ZookeeperNodeInfo get_ZookeeperNodeInfo();
    public void set_ZookeeperNodeInfo(ZookeeperNodeInfo value);
    internal bool IsSetZookeeperNodeInfo();
}
public class Amazon.Kafka.Model.NotFoundException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
    public NotFoundException(Exception innerException);
    public NotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.OpenMonitoring : object {
    private Prometheus _prometheus;
    [AWSPropertyAttribute]
public Prometheus Prometheus { get; public set; }
    public Prometheus get_Prometheus();
    public void set_Prometheus(Prometheus value);
    internal bool IsSetPrometheus();
}
public class Amazon.Kafka.Model.OpenMonitoringInfo : object {
    private PrometheusInfo _prometheus;
    [AWSPropertyAttribute]
public PrometheusInfo Prometheus { get; public set; }
    public PrometheusInfo get_Prometheus();
    public void set_Prometheus(PrometheusInfo value);
    internal bool IsSetPrometheus();
}
public class Amazon.Kafka.Model.Prometheus : object {
    private JmxExporter _jmxExporter;
    private NodeExporter _nodeExporter;
    public JmxExporter JmxExporter { get; public set; }
    public NodeExporter NodeExporter { get; public set; }
    public JmxExporter get_JmxExporter();
    public void set_JmxExporter(JmxExporter value);
    internal bool IsSetJmxExporter();
    public NodeExporter get_NodeExporter();
    public void set_NodeExporter(NodeExporter value);
    internal bool IsSetNodeExporter();
}
public class Amazon.Kafka.Model.PrometheusInfo : object {
    private JmxExporterInfo _jmxExporter;
    private NodeExporterInfo _nodeExporter;
    public JmxExporterInfo JmxExporter { get; public set; }
    public NodeExporterInfo NodeExporter { get; public set; }
    public JmxExporterInfo get_JmxExporter();
    public void set_JmxExporter(JmxExporterInfo value);
    internal bool IsSetJmxExporter();
    public NodeExporterInfo get_NodeExporter();
    public void set_NodeExporter(NodeExporterInfo value);
    internal bool IsSetNodeExporter();
}
public class Amazon.Kafka.Model.Provisioned : object {
    private BrokerNodeGroupInfo _brokerNodeGroupInfo;
    private ClientAuthentication _clientAuthentication;
    private BrokerSoftwareInfo _currentBrokerSoftwareInfo;
    private CustomerActionStatus _customerActionStatus;
    private EncryptionInfo _encryptionInfo;
    private EnhancedMonitoring _enhancedMonitoring;
    private LoggingInfo _loggingInfo;
    private Nullable`1<int> _numberOfBrokerNodes;
    private OpenMonitoringInfo _openMonitoring;
    private StorageMode _storageMode;
    private string _zookeeperConnectString;
    private string _zookeeperConnectStringTls;
    [AWSPropertyAttribute]
public BrokerNodeGroupInfo BrokerNodeGroupInfo { get; public set; }
    public ClientAuthentication ClientAuthentication { get; public set; }
    public BrokerSoftwareInfo CurrentBrokerSoftwareInfo { get; public set; }
    public CustomerActionStatus CustomerActionStatus { get; public set; }
    public EncryptionInfo EncryptionInfo { get; public set; }
    public EnhancedMonitoring EnhancedMonitoring { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumberOfBrokerNodes { get; public set; }
    public OpenMonitoringInfo OpenMonitoring { get; public set; }
    public StorageMode StorageMode { get; public set; }
    public string ZookeeperConnectString { get; public set; }
    public string ZookeeperConnectStringTls { get; public set; }
    public BrokerNodeGroupInfo get_BrokerNodeGroupInfo();
    public void set_BrokerNodeGroupInfo(BrokerNodeGroupInfo value);
    internal bool IsSetBrokerNodeGroupInfo();
    public ClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public BrokerSoftwareInfo get_CurrentBrokerSoftwareInfo();
    public void set_CurrentBrokerSoftwareInfo(BrokerSoftwareInfo value);
    internal bool IsSetCurrentBrokerSoftwareInfo();
    public CustomerActionStatus get_CustomerActionStatus();
    public void set_CustomerActionStatus(CustomerActionStatus value);
    internal bool IsSetCustomerActionStatus();
    public EncryptionInfo get_EncryptionInfo();
    public void set_EncryptionInfo(EncryptionInfo value);
    internal bool IsSetEncryptionInfo();
    public EnhancedMonitoring get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(EnhancedMonitoring value);
    internal bool IsSetEnhancedMonitoring();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public Nullable`1<int> get_NumberOfBrokerNodes();
    public void set_NumberOfBrokerNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfBrokerNodes();
    public OpenMonitoringInfo get_OpenMonitoring();
    public void set_OpenMonitoring(OpenMonitoringInfo value);
    internal bool IsSetOpenMonitoring();
    public StorageMode get_StorageMode();
    public void set_StorageMode(StorageMode value);
    internal bool IsSetStorageMode();
    public string get_ZookeeperConnectString();
    public void set_ZookeeperConnectString(string value);
    internal bool IsSetZookeeperConnectString();
    public string get_ZookeeperConnectStringTls();
    public void set_ZookeeperConnectStringTls(string value);
    internal bool IsSetZookeeperConnectStringTls();
}
public class Amazon.Kafka.Model.ProvisionedRequest : object {
    private BrokerNodeGroupInfo _brokerNodeGroupInfo;
    private ClientAuthentication _clientAuthentication;
    private ConfigurationInfo _configurationInfo;
    private EncryptionInfo _encryptionInfo;
    private EnhancedMonitoring _enhancedMonitoring;
    private string _kafkaVersion;
    private LoggingInfo _loggingInfo;
    private Nullable`1<int> _numberOfBrokerNodes;
    private OpenMonitoringInfo _openMonitoring;
    private StorageMode _storageMode;
    [AWSPropertyAttribute]
public BrokerNodeGroupInfo BrokerNodeGroupInfo { get; public set; }
    public ClientAuthentication ClientAuthentication { get; public set; }
    public ConfigurationInfo ConfigurationInfo { get; public set; }
    public EncryptionInfo EncryptionInfo { get; public set; }
    public EnhancedMonitoring EnhancedMonitoring { get; public set; }
    [AWSPropertyAttribute]
public string KafkaVersion { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumberOfBrokerNodes { get; public set; }
    public OpenMonitoringInfo OpenMonitoring { get; public set; }
    public StorageMode StorageMode { get; public set; }
    public BrokerNodeGroupInfo get_BrokerNodeGroupInfo();
    public void set_BrokerNodeGroupInfo(BrokerNodeGroupInfo value);
    internal bool IsSetBrokerNodeGroupInfo();
    public ClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public ConfigurationInfo get_ConfigurationInfo();
    public void set_ConfigurationInfo(ConfigurationInfo value);
    internal bool IsSetConfigurationInfo();
    public EncryptionInfo get_EncryptionInfo();
    public void set_EncryptionInfo(EncryptionInfo value);
    internal bool IsSetEncryptionInfo();
    public EnhancedMonitoring get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(EnhancedMonitoring value);
    internal bool IsSetEnhancedMonitoring();
    public string get_KafkaVersion();
    public void set_KafkaVersion(string value);
    internal bool IsSetKafkaVersion();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public Nullable`1<int> get_NumberOfBrokerNodes();
    public void set_NumberOfBrokerNodes(Nullable`1<int> value);
    internal bool IsSetNumberOfBrokerNodes();
    public OpenMonitoringInfo get_OpenMonitoring();
    public void set_OpenMonitoring(OpenMonitoringInfo value);
    internal bool IsSetOpenMonitoring();
    public StorageMode get_StorageMode();
    public void set_StorageMode(StorageMode value);
    internal bool IsSetStorageMode();
}
public class Amazon.Kafka.Model.ProvisionedThroughput : object {
    private Nullable`1<bool> _enabled;
    private Nullable`1<int> _volumeThroughput;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<int> VolumeThroughput { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public Nullable`1<int> get_VolumeThroughput();
    public void set_VolumeThroughput(Nullable`1<int> value);
    internal bool IsSetVolumeThroughput();
}
public class Amazon.Kafka.Model.PublicAccess : object {
    private string _type;
    public string Type { get; public set; }
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Kafka.Model.PutClusterPolicyRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _currentVersion;
    private string _policy;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public string CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.Kafka.Model.PutClusterPolicyResponse : AmazonWebServiceResponse {
    private string _currentVersion;
    public string CurrentVersion { get; public set; }
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
}
public class Amazon.Kafka.Model.RebootBrokerRequest : AmazonKafkaRequest {
    private List`1<string> _brokerIds;
    private string _clusterArn;
    [AWSPropertyAttribute]
public List`1<string> BrokerIds { get; public set; }
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public List`1<string> get_BrokerIds();
    public void set_BrokerIds(List`1<string> value);
    internal bool IsSetBrokerIds();
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
}
public class Amazon.Kafka.Model.RebootBrokerResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.RejectClientVpcConnectionRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _vpcConnectionArn;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string VpcConnectionArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
}
public class Amazon.Kafka.Model.RejectClientVpcConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.Kafka.Model.ReplicationInfo : object {
    private ConsumerGroupReplication _consumerGroupReplication;
    private string _sourceKafkaClusterArn;
    private TargetCompressionType _targetCompressionType;
    private string _targetKafkaClusterArn;
    private TopicReplication _topicReplication;
    [AWSPropertyAttribute]
public ConsumerGroupReplication ConsumerGroupReplication { get; public set; }
    [AWSPropertyAttribute]
public string SourceKafkaClusterArn { get; public set; }
    [AWSPropertyAttribute]
public TargetCompressionType TargetCompressionType { get; public set; }
    [AWSPropertyAttribute]
public string TargetKafkaClusterArn { get; public set; }
    [AWSPropertyAttribute]
public TopicReplication TopicReplication { get; public set; }
    public ConsumerGroupReplication get_ConsumerGroupReplication();
    public void set_ConsumerGroupReplication(ConsumerGroupReplication value);
    internal bool IsSetConsumerGroupReplication();
    public string get_SourceKafkaClusterArn();
    public void set_SourceKafkaClusterArn(string value);
    internal bool IsSetSourceKafkaClusterArn();
    public TargetCompressionType get_TargetCompressionType();
    public void set_TargetCompressionType(TargetCompressionType value);
    internal bool IsSetTargetCompressionType();
    public string get_TargetKafkaClusterArn();
    public void set_TargetKafkaClusterArn(string value);
    internal bool IsSetTargetKafkaClusterArn();
    public TopicReplication get_TopicReplication();
    public void set_TopicReplication(TopicReplication value);
    internal bool IsSetTopicReplication();
}
public class Amazon.Kafka.Model.ReplicationInfoDescription : object {
    private ConsumerGroupReplication _consumerGroupReplication;
    private string _sourceKafkaClusterAlias;
    private TargetCompressionType _targetCompressionType;
    private string _targetKafkaClusterAlias;
    private TopicReplication _topicReplication;
    public ConsumerGroupReplication ConsumerGroupReplication { get; public set; }
    public string SourceKafkaClusterAlias { get; public set; }
    public TargetCompressionType TargetCompressionType { get; public set; }
    public string TargetKafkaClusterAlias { get; public set; }
    public TopicReplication TopicReplication { get; public set; }
    public ConsumerGroupReplication get_ConsumerGroupReplication();
    public void set_ConsumerGroupReplication(ConsumerGroupReplication value);
    internal bool IsSetConsumerGroupReplication();
    public string get_SourceKafkaClusterAlias();
    public void set_SourceKafkaClusterAlias(string value);
    internal bool IsSetSourceKafkaClusterAlias();
    public TargetCompressionType get_TargetCompressionType();
    public void set_TargetCompressionType(TargetCompressionType value);
    internal bool IsSetTargetCompressionType();
    public string get_TargetKafkaClusterAlias();
    public void set_TargetKafkaClusterAlias(string value);
    internal bool IsSetTargetKafkaClusterAlias();
    public TopicReplication get_TopicReplication();
    public void set_TopicReplication(TopicReplication value);
    internal bool IsSetTopicReplication();
}
public class Amazon.Kafka.Model.ReplicationInfoSummary : object {
    private string _sourceKafkaClusterAlias;
    private string _targetKafkaClusterAlias;
    public string SourceKafkaClusterAlias { get; public set; }
    public string TargetKafkaClusterAlias { get; public set; }
    public string get_SourceKafkaClusterAlias();
    public void set_SourceKafkaClusterAlias(string value);
    internal bool IsSetSourceKafkaClusterAlias();
    public string get_TargetKafkaClusterAlias();
    public void set_TargetKafkaClusterAlias(string value);
    internal bool IsSetTargetKafkaClusterAlias();
}
public class Amazon.Kafka.Model.ReplicationStartingPosition : object {
    private ReplicationStartingPositionType _type;
    public ReplicationStartingPositionType Type { get; public set; }
    public ReplicationStartingPositionType get_Type();
    public void set_Type(ReplicationStartingPositionType value);
    internal bool IsSetType();
}
public class Amazon.Kafka.Model.ReplicationStateInfo : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.Kafka.Model.ReplicatorSummary : object {
    private Nullable`1<DateTime> _creationTime;
    private string _currentVersion;
    private Nullable`1<bool> _isReplicatorReference;
    private List`1<KafkaClusterSummary> _kafkaClustersSummary;
    private List`1<ReplicationInfoSummary> _replicationInfoSummaryList;
    private string _replicatorArn;
    private string _replicatorName;
    private string _replicatorResourceArn;
    private ReplicatorState _replicatorState;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string CurrentVersion { get; public set; }
    public Nullable`1<bool> IsReplicatorReference { get; public set; }
    public List`1<KafkaClusterSummary> KafkaClustersSummary { get; public set; }
    public List`1<ReplicationInfoSummary> ReplicationInfoSummaryList { get; public set; }
    public string ReplicatorArn { get; public set; }
    public string ReplicatorName { get; public set; }
    public string ReplicatorResourceArn { get; public set; }
    public ReplicatorState ReplicatorState { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public Nullable`1<bool> get_IsReplicatorReference();
    public void set_IsReplicatorReference(Nullable`1<bool> value);
    internal bool IsSetIsReplicatorReference();
    public List`1<KafkaClusterSummary> get_KafkaClustersSummary();
    public void set_KafkaClustersSummary(List`1<KafkaClusterSummary> value);
    internal bool IsSetKafkaClustersSummary();
    public List`1<ReplicationInfoSummary> get_ReplicationInfoSummaryList();
    public void set_ReplicationInfoSummaryList(List`1<ReplicationInfoSummary> value);
    internal bool IsSetReplicationInfoSummaryList();
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
    public string get_ReplicatorName();
    public void set_ReplicatorName(string value);
    internal bool IsSetReplicatorName();
    public string get_ReplicatorResourceArn();
    public void set_ReplicatorResourceArn(string value);
    internal bool IsSetReplicatorResourceArn();
    public ReplicatorState get_ReplicatorState();
    public void set_ReplicatorState(ReplicatorState value);
    internal bool IsSetReplicatorState();
}
public class Amazon.Kafka.Model.S3 : object {
    private string _bucket;
    private Nullable`1<bool> _enabled;
    private string _prefix;
    public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string Prefix { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.Kafka.Model.Sasl : object {
    private Iam _iam;
    private Scram _scram;
    public Iam Iam { get; public set; }
    public Scram Scram { get; public set; }
    public Iam get_Iam();
    public void set_Iam(Iam value);
    internal bool IsSetIam();
    public Scram get_Scram();
    public void set_Scram(Scram value);
    internal bool IsSetScram();
}
public class Amazon.Kafka.Model.Scram : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.Kafka.Model.Serverless : object {
    private ServerlessClientAuthentication _clientAuthentication;
    private List`1<VpcConfig> _vpcConfigs;
    public ServerlessClientAuthentication ClientAuthentication { get; public set; }
    [AWSPropertyAttribute]
public List`1<VpcConfig> VpcConfigs { get; public set; }
    public ServerlessClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ServerlessClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public List`1<VpcConfig> get_VpcConfigs();
    public void set_VpcConfigs(List`1<VpcConfig> value);
    internal bool IsSetVpcConfigs();
}
public class Amazon.Kafka.Model.ServerlessClientAuthentication : object {
    private ServerlessSasl _sasl;
    public ServerlessSasl Sasl { get; public set; }
    public ServerlessSasl get_Sasl();
    public void set_Sasl(ServerlessSasl value);
    internal bool IsSetSasl();
}
public class Amazon.Kafka.Model.ServerlessRequest : object {
    private ServerlessClientAuthentication _clientAuthentication;
    private List`1<VpcConfig> _vpcConfigs;
    public ServerlessClientAuthentication ClientAuthentication { get; public set; }
    [AWSPropertyAttribute]
public List`1<VpcConfig> VpcConfigs { get; public set; }
    public ServerlessClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ServerlessClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public List`1<VpcConfig> get_VpcConfigs();
    public void set_VpcConfigs(List`1<VpcConfig> value);
    internal bool IsSetVpcConfigs();
}
public class Amazon.Kafka.Model.ServerlessSasl : object {
    private Iam _iam;
    public Iam Iam { get; public set; }
    public Iam get_Iam();
    public void set_Iam(Iam value);
    internal bool IsSetIam();
}
public class Amazon.Kafka.Model.ServiceUnavailableException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public ServiceUnavailableException(string message);
    public ServiceUnavailableException(string message, Exception innerException);
    public ServiceUnavailableException(Exception innerException);
    public ServiceUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.StateInfo : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.Kafka.Model.StorageInfo : object {
    private EBSStorageInfo _ebsStorageInfo;
    public EBSStorageInfo EbsStorageInfo { get; public set; }
    public EBSStorageInfo get_EbsStorageInfo();
    public void set_EbsStorageInfo(EBSStorageInfo value);
    internal bool IsSetEbsStorageInfo();
}
public class Amazon.Kafka.Model.TagResourceRequest : AmazonKafkaRequest {
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kafka.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Kafka.Model.Tls : object {
    private List`1<string> _certificateAuthorityArnList;
    private Nullable`1<bool> _enabled;
    public List`1<string> CertificateAuthorityArnList { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> get_CertificateAuthorityArnList();
    public void set_CertificateAuthorityArnList(List`1<string> value);
    internal bool IsSetCertificateAuthorityArnList();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.Kafka.Model.TooManyRequestsException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.TopicReplication : object {
    private Nullable`1<bool> _copyAccessControlListsForTopics;
    private Nullable`1<bool> _copyTopicConfigurations;
    private Nullable`1<bool> _detectAndCopyNewTopics;
    private ReplicationStartingPosition _startingPosition;
    private List`1<string> _topicsToExclude;
    private List`1<string> _topicsToReplicate;
    public Nullable`1<bool> CopyAccessControlListsForTopics { get; public set; }
    public Nullable`1<bool> CopyTopicConfigurations { get; public set; }
    public Nullable`1<bool> DetectAndCopyNewTopics { get; public set; }
    public ReplicationStartingPosition StartingPosition { get; public set; }
    public List`1<string> TopicsToExclude { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TopicsToReplicate { get; public set; }
    public Nullable`1<bool> get_CopyAccessControlListsForTopics();
    public void set_CopyAccessControlListsForTopics(Nullable`1<bool> value);
    internal bool IsSetCopyAccessControlListsForTopics();
    public Nullable`1<bool> get_CopyTopicConfigurations();
    public void set_CopyTopicConfigurations(Nullable`1<bool> value);
    internal bool IsSetCopyTopicConfigurations();
    public Nullable`1<bool> get_DetectAndCopyNewTopics();
    public void set_DetectAndCopyNewTopics(Nullable`1<bool> value);
    internal bool IsSetDetectAndCopyNewTopics();
    public ReplicationStartingPosition get_StartingPosition();
    public void set_StartingPosition(ReplicationStartingPosition value);
    internal bool IsSetStartingPosition();
    public List`1<string> get_TopicsToExclude();
    public void set_TopicsToExclude(List`1<string> value);
    internal bool IsSetTopicsToExclude();
    public List`1<string> get_TopicsToReplicate();
    public void set_TopicsToReplicate(List`1<string> value);
    internal bool IsSetTopicsToReplicate();
}
public class Amazon.Kafka.Model.TopicReplicationUpdate : object {
    private Nullable`1<bool> _copyAccessControlListsForTopics;
    private Nullable`1<bool> _copyTopicConfigurations;
    private Nullable`1<bool> _detectAndCopyNewTopics;
    private List`1<string> _topicsToExclude;
    private List`1<string> _topicsToReplicate;
    [AWSPropertyAttribute]
public Nullable`1<bool> CopyAccessControlListsForTopics { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> CopyTopicConfigurations { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> DetectAndCopyNewTopics { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TopicsToExclude { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TopicsToReplicate { get; public set; }
    public Nullable`1<bool> get_CopyAccessControlListsForTopics();
    public void set_CopyAccessControlListsForTopics(Nullable`1<bool> value);
    internal bool IsSetCopyAccessControlListsForTopics();
    public Nullable`1<bool> get_CopyTopicConfigurations();
    public void set_CopyTopicConfigurations(Nullable`1<bool> value);
    internal bool IsSetCopyTopicConfigurations();
    public Nullable`1<bool> get_DetectAndCopyNewTopics();
    public void set_DetectAndCopyNewTopics(Nullable`1<bool> value);
    internal bool IsSetDetectAndCopyNewTopics();
    public List`1<string> get_TopicsToExclude();
    public void set_TopicsToExclude(List`1<string> value);
    internal bool IsSetTopicsToExclude();
    public List`1<string> get_TopicsToReplicate();
    public void set_TopicsToReplicate(List`1<string> value);
    internal bool IsSetTopicsToReplicate();
}
public class Amazon.Kafka.Model.Unauthenticated : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.Kafka.Model.UnauthorizedException : AmazonKafkaException {
    private string _invalidParameter;
    public string InvalidParameter { get; public set; }
    public UnauthorizedException(string message);
    public UnauthorizedException(string message, Exception innerException);
    public UnauthorizedException(Exception innerException);
    public UnauthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnauthorizedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_InvalidParameter();
    public void set_InvalidParameter(string value);
    internal bool IsSetInvalidParameter();
}
public class Amazon.Kafka.Model.UnprocessedScramSecret : object {
    private string _errorCode;
    private string _errorMessage;
    private string _secretArn;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public string SecretArn { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_SecretArn();
    public void set_SecretArn(string value);
    internal bool IsSetSecretArn();
}
public class Amazon.Kafka.Model.UntagResourceRequest : AmazonKafkaRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.Kafka.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Kafka.Model.UpdateBrokerCountRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _currentVersion;
    private Nullable`1<int> _targetNumberOfBrokerNodes;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TargetNumberOfBrokerNodes { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public Nullable`1<int> get_TargetNumberOfBrokerNodes();
    public void set_TargetNumberOfBrokerNodes(Nullable`1<int> value);
    internal bool IsSetTargetNumberOfBrokerNodes();
}
public class Amazon.Kafka.Model.UpdateBrokerCountResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateBrokerStorageRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _currentVersion;
    private List`1<BrokerEBSVolumeInfo> _targetBrokerEBSVolumeInfo;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public List`1<BrokerEBSVolumeInfo> TargetBrokerEBSVolumeInfo { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public List`1<BrokerEBSVolumeInfo> get_TargetBrokerEBSVolumeInfo();
    public void set_TargetBrokerEBSVolumeInfo(List`1<BrokerEBSVolumeInfo> value);
    internal bool IsSetTargetBrokerEBSVolumeInfo();
}
public class Amazon.Kafka.Model.UpdateBrokerStorageResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateBrokerTypeRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _currentVersion;
    private string _targetInstanceType;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public string TargetInstanceType { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public string get_TargetInstanceType();
    public void set_TargetInstanceType(string value);
    internal bool IsSetTargetInstanceType();
}
public class Amazon.Kafka.Model.UpdateBrokerTypeResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateClusterConfigurationRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private ConfigurationInfo _configurationInfo;
    private string _currentVersion;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public ConfigurationInfo ConfigurationInfo { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public ConfigurationInfo get_ConfigurationInfo();
    public void set_ConfigurationInfo(ConfigurationInfo value);
    internal bool IsSetConfigurationInfo();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
}
public class Amazon.Kafka.Model.UpdateClusterConfigurationResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateClusterKafkaVersionRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private ConfigurationInfo _configurationInfo;
    private string _currentVersion;
    private string _targetKafkaVersion;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    public ConfigurationInfo ConfigurationInfo { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public string TargetKafkaVersion { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public ConfigurationInfo get_ConfigurationInfo();
    public void set_ConfigurationInfo(ConfigurationInfo value);
    internal bool IsSetConfigurationInfo();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public string get_TargetKafkaVersion();
    public void set_TargetKafkaVersion(string value);
    internal bool IsSetTargetKafkaVersion();
}
public class Amazon.Kafka.Model.UpdateClusterKafkaVersionResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateConfigurationRequest : AmazonKafkaRequest {
    private string _arn;
    private string _description;
    private MemoryStream _serverProperties;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream ServerProperties { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public MemoryStream get_ServerProperties();
    public void set_ServerProperties(MemoryStream value);
    internal bool IsSetServerProperties();
}
public class Amazon.Kafka.Model.UpdateConfigurationResponse : AmazonWebServiceResponse {
    private string _arn;
    private ConfigurationRevision _latestRevision;
    public string Arn { get; public set; }
    public ConfigurationRevision LatestRevision { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
}
public class Amazon.Kafka.Model.UpdateConnectivityRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private ConnectivityInfo _connectivityInfo;
    private string _currentVersion;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public ConnectivityInfo ConnectivityInfo { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public ConnectivityInfo get_ConnectivityInfo();
    public void set_ConnectivityInfo(ConnectivityInfo value);
    internal bool IsSetConnectivityInfo();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
}
public class Amazon.Kafka.Model.UpdateConnectivityResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateMonitoringRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _currentVersion;
    private EnhancedMonitoring _enhancedMonitoring;
    private LoggingInfo _loggingInfo;
    private OpenMonitoringInfo _openMonitoring;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    public EnhancedMonitoring EnhancedMonitoring { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    public OpenMonitoringInfo OpenMonitoring { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public EnhancedMonitoring get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(EnhancedMonitoring value);
    internal bool IsSetEnhancedMonitoring();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public OpenMonitoringInfo get_OpenMonitoring();
    public void set_OpenMonitoring(OpenMonitoringInfo value);
    internal bool IsSetOpenMonitoring();
}
public class Amazon.Kafka.Model.UpdateMonitoringResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateReplicationInfoRequest : AmazonKafkaRequest {
    private ConsumerGroupReplicationUpdate _consumerGroupReplication;
    private string _currentVersion;
    private string _replicatorArn;
    private string _sourceKafkaClusterArn;
    private string _targetKafkaClusterArn;
    private TopicReplicationUpdate _topicReplication;
    public ConsumerGroupReplicationUpdate ConsumerGroupReplication { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    [AWSPropertyAttribute]
public string ReplicatorArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceKafkaClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string TargetKafkaClusterArn { get; public set; }
    public TopicReplicationUpdate TopicReplication { get; public set; }
    public ConsumerGroupReplicationUpdate get_ConsumerGroupReplication();
    public void set_ConsumerGroupReplication(ConsumerGroupReplicationUpdate value);
    internal bool IsSetConsumerGroupReplication();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
    public string get_SourceKafkaClusterArn();
    public void set_SourceKafkaClusterArn(string value);
    internal bool IsSetSourceKafkaClusterArn();
    public string get_TargetKafkaClusterArn();
    public void set_TargetKafkaClusterArn(string value);
    internal bool IsSetTargetKafkaClusterArn();
    public TopicReplicationUpdate get_TopicReplication();
    public void set_TopicReplication(TopicReplicationUpdate value);
    internal bool IsSetTopicReplication();
}
public class Amazon.Kafka.Model.UpdateReplicationInfoResponse : AmazonWebServiceResponse {
    private string _replicatorArn;
    private ReplicatorState _replicatorState;
    public string ReplicatorArn { get; public set; }
    public ReplicatorState ReplicatorState { get; public set; }
    public string get_ReplicatorArn();
    public void set_ReplicatorArn(string value);
    internal bool IsSetReplicatorArn();
    public ReplicatorState get_ReplicatorState();
    public void set_ReplicatorState(ReplicatorState value);
    internal bool IsSetReplicatorState();
}
public class Amazon.Kafka.Model.UpdateSecurityRequest : AmazonKafkaRequest {
    private ClientAuthentication _clientAuthentication;
    private string _clusterArn;
    private string _currentVersion;
    private EncryptionInfo _encryptionInfo;
    public ClientAuthentication ClientAuthentication { get; public set; }
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    public EncryptionInfo EncryptionInfo { get; public set; }
    public ClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(ClientAuthentication value);
    internal bool IsSetClientAuthentication();
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public EncryptionInfo get_EncryptionInfo();
    public void set_EncryptionInfo(EncryptionInfo value);
    internal bool IsSetEncryptionInfo();
}
public class Amazon.Kafka.Model.UpdateSecurityResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UpdateStorageRequest : AmazonKafkaRequest {
    private string _clusterArn;
    private string _currentVersion;
    private ProvisionedThroughput _provisionedThroughput;
    private StorageMode _storageMode;
    private Nullable`1<int> _volumeSizeGB;
    [AWSPropertyAttribute]
public string ClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string CurrentVersion { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public StorageMode StorageMode { get; public set; }
    public Nullable`1<int> VolumeSizeGB { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_CurrentVersion();
    public void set_CurrentVersion(string value);
    internal bool IsSetCurrentVersion();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public StorageMode get_StorageMode();
    public void set_StorageMode(StorageMode value);
    internal bool IsSetStorageMode();
    public Nullable`1<int> get_VolumeSizeGB();
    public void set_VolumeSizeGB(Nullable`1<int> value);
    internal bool IsSetVolumeSizeGB();
}
public class Amazon.Kafka.Model.UpdateStorageResponse : AmazonWebServiceResponse {
    private string _clusterArn;
    private string _clusterOperationArn;
    public string ClusterArn { get; public set; }
    public string ClusterOperationArn { get; public set; }
    public string get_ClusterArn();
    public void set_ClusterArn(string value);
    internal bool IsSetClusterArn();
    public string get_ClusterOperationArn();
    public void set_ClusterOperationArn(string value);
    internal bool IsSetClusterOperationArn();
}
public class Amazon.Kafka.Model.UserIdentity : object {
    private string _principalId;
    private UserIdentityType _type;
    public string PrincipalId { get; public set; }
    public UserIdentityType Type { get; public set; }
    public string get_PrincipalId();
    public void set_PrincipalId(string value);
    internal bool IsSetPrincipalId();
    public UserIdentityType get_Type();
    public void set_Type(UserIdentityType value);
    internal bool IsSetType();
}
public class Amazon.Kafka.Model.VpcConfig : object {
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.Kafka.Model.VpcConnection : object {
    private string _authentication;
    private Nullable`1<DateTime> _creationTime;
    private VpcConnectionState _state;
    private string _targetClusterArn;
    private string _vpcConnectionArn;
    private string _vpcId;
    public string Authentication { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public VpcConnectionState State { get; public set; }
    [AWSPropertyAttribute]
public string TargetClusterArn { get; public set; }
    [AWSPropertyAttribute]
public string VpcConnectionArn { get; public set; }
    public string VpcId { get; public set; }
    public string get_Authentication();
    public void set_Authentication(string value);
    internal bool IsSetAuthentication();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public VpcConnectionState get_State();
    public void set_State(VpcConnectionState value);
    internal bool IsSetState();
    public string get_TargetClusterArn();
    public void set_TargetClusterArn(string value);
    internal bool IsSetTargetClusterArn();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.Kafka.Model.VpcConnectionInfo : object {
    private Nullable`1<DateTime> _creationTime;
    private string _owner;
    private UserIdentity _userIdentity;
    private string _vpcConnectionArn;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string Owner { get; public set; }
    public UserIdentity UserIdentity { get; public set; }
    public string VpcConnectionArn { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public UserIdentity get_UserIdentity();
    public void set_UserIdentity(UserIdentity value);
    internal bool IsSetUserIdentity();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
}
public class Amazon.Kafka.Model.VpcConnectionInfoServerless : object {
    private Nullable`1<DateTime> _creationTime;
    private string _owner;
    private UserIdentity _userIdentity;
    private string _vpcConnectionArn;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string Owner { get; public set; }
    public UserIdentity UserIdentity { get; public set; }
    public string VpcConnectionArn { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public UserIdentity get_UserIdentity();
    public void set_UserIdentity(UserIdentity value);
    internal bool IsSetUserIdentity();
    public string get_VpcConnectionArn();
    public void set_VpcConnectionArn(string value);
    internal bool IsSetVpcConnectionArn();
}
public class Amazon.Kafka.Model.VpcConnectivity : object {
    private VpcConnectivityClientAuthentication _clientAuthentication;
    public VpcConnectivityClientAuthentication ClientAuthentication { get; public set; }
    public VpcConnectivityClientAuthentication get_ClientAuthentication();
    public void set_ClientAuthentication(VpcConnectivityClientAuthentication value);
    internal bool IsSetClientAuthentication();
}
public class Amazon.Kafka.Model.VpcConnectivityClientAuthentication : object {
    private VpcConnectivitySasl _sasl;
    private VpcConnectivityTls _tls;
    public VpcConnectivitySasl Sasl { get; public set; }
    public VpcConnectivityTls Tls { get; public set; }
    public VpcConnectivitySasl get_Sasl();
    public void set_Sasl(VpcConnectivitySasl value);
    internal bool IsSetSasl();
    public VpcConnectivityTls get_Tls();
    public void set_Tls(VpcConnectivityTls value);
    internal bool IsSetTls();
}
public class Amazon.Kafka.Model.VpcConnectivityIam : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.Kafka.Model.VpcConnectivitySasl : object {
    private VpcConnectivityIam _iam;
    private VpcConnectivityScram _scram;
    public VpcConnectivityIam Iam { get; public set; }
    public VpcConnectivityScram Scram { get; public set; }
    public VpcConnectivityIam get_Iam();
    public void set_Iam(VpcConnectivityIam value);
    internal bool IsSetIam();
    public VpcConnectivityScram get_Scram();
    public void set_Scram(VpcConnectivityScram value);
    internal bool IsSetScram();
}
public class Amazon.Kafka.Model.VpcConnectivityScram : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.Kafka.Model.VpcConnectivityTls : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.Kafka.Model.ZookeeperNodeInfo : object {
    private string _attachedENIId;
    private string _clientVpcIpAddress;
    private List`1<string> _endpoints;
    private Nullable`1<double> _zookeeperId;
    private string _zookeeperVersion;
    public string AttachedENIId { get; public set; }
    public string ClientVpcIpAddress { get; public set; }
    public List`1<string> Endpoints { get; public set; }
    public Nullable`1<double> ZookeeperId { get; public set; }
    public string ZookeeperVersion { get; public set; }
    public string get_AttachedENIId();
    public void set_AttachedENIId(string value);
    internal bool IsSetAttachedENIId();
    public string get_ClientVpcIpAddress();
    public void set_ClientVpcIpAddress(string value);
    internal bool IsSetClientVpcIpAddress();
    public List`1<string> get_Endpoints();
    public void set_Endpoints(List`1<string> value);
    internal bool IsSetEndpoints();
    public Nullable`1<double> get_ZookeeperId();
    public void set_ZookeeperId(Nullable`1<double> value);
    internal bool IsSetZookeeperId();
    public string get_ZookeeperVersion();
    public void set_ZookeeperVersion(string value);
    internal bool IsSetZookeeperVersion();
}
public class Amazon.Kafka.NodeType : ConstantClass {
    public static NodeType BROKER;
    public NodeType(string value);
    private static NodeType();
    public static NodeType FindValue(string value);
    public static NodeType op_Implicit(string value);
}
public class Amazon.Kafka.ReplicationStartingPositionType : ConstantClass {
    public static ReplicationStartingPositionType EARLIEST;
    public static ReplicationStartingPositionType LATEST;
    public ReplicationStartingPositionType(string value);
    private static ReplicationStartingPositionType();
    public static ReplicationStartingPositionType FindValue(string value);
    public static ReplicationStartingPositionType op_Implicit(string value);
}
public class Amazon.Kafka.ReplicatorState : ConstantClass {
    public static ReplicatorState CREATING;
    public static ReplicatorState DELETING;
    public static ReplicatorState FAILED;
    public static ReplicatorState RUNNING;
    public static ReplicatorState UPDATING;
    public ReplicatorState(string value);
    private static ReplicatorState();
    public static ReplicatorState FindValue(string value);
    public static ReplicatorState op_Implicit(string value);
}
public class Amazon.Kafka.StorageMode : ConstantClass {
    public static StorageMode LOCAL;
    public static StorageMode TIERED;
    public StorageMode(string value);
    private static StorageMode();
    public static StorageMode FindValue(string value);
    public static StorageMode op_Implicit(string value);
}
public class Amazon.Kafka.TargetCompressionType : ConstantClass {
    public static TargetCompressionType GZIP;
    public static TargetCompressionType LZ4;
    public static TargetCompressionType NONE;
    public static TargetCompressionType SNAPPY;
    public static TargetCompressionType ZSTD;
    public TargetCompressionType(string value);
    private static TargetCompressionType();
    public static TargetCompressionType FindValue(string value);
    public static TargetCompressionType op_Implicit(string value);
}
public class Amazon.Kafka.UserIdentityType : ConstantClass {
    public static UserIdentityType AWSACCOUNT;
    public static UserIdentityType AWSSERVICE;
    public UserIdentityType(string value);
    private static UserIdentityType();
    public static UserIdentityType FindValue(string value);
    public static UserIdentityType op_Implicit(string value);
}
public class Amazon.Kafka.VpcConnectionState : ConstantClass {
    public static VpcConnectionState AVAILABLE;
    public static VpcConnectionState CREATING;
    public static VpcConnectionState DEACTIVATING;
    public static VpcConnectionState DELETING;
    public static VpcConnectionState FAILED;
    public static VpcConnectionState INACTIVE;
    public static VpcConnectionState REJECTED;
    public static VpcConnectionState REJECTING;
    public VpcConnectionState(string value);
    private static VpcConnectionState();
    public static VpcConnectionState FindValue(string value);
    public static VpcConnectionState op_Implicit(string value);
}
