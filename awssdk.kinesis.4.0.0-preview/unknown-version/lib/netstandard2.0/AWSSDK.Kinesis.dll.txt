public class Amazon.Kinesis.AmazonKinesisClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IKinesisPaginatorFactory _paginators;
    public IKinesisPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonKinesisClient(RegionEndpoint region);
    public AmazonKinesisClient(AmazonKinesisConfig config);
    public AmazonKinesisClient(AWSCredentials credentials);
    public AmazonKinesisClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonKinesisClient(AWSCredentials credentials, AmazonKinesisConfig clientConfig);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonKinesisConfig clientConfig);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonKinesisConfig clientConfig);
    private static AmazonKinesisClient();
    public sealed virtual IKinesisPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddTagsToStreamResponse AddTagsToStream(AddTagsToStreamRequest request);
    public virtual Task`1<AddTagsToStreamResponse> AddTagsToStreamAsync(AddTagsToStreamRequest request, CancellationToken cancellationToken);
    internal virtual CreateStreamResponse CreateStream(CreateStreamRequest request);
    public virtual Task`1<CreateStreamResponse> CreateStreamAsync(CreateStreamRequest request, CancellationToken cancellationToken);
    internal virtual DecreaseStreamRetentionPeriodResponse DecreaseStreamRetentionPeriod(DecreaseStreamRetentionPeriodRequest request);
    public virtual Task`1<DecreaseStreamRetentionPeriodResponse> DecreaseStreamRetentionPeriodAsync(string streamName, Nullable`1<int> retentionPeriodHours, CancellationToken cancellationToken);
    public virtual Task`1<DecreaseStreamRetentionPeriodResponse> DecreaseStreamRetentionPeriodAsync(DecreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteStreamResponse DeleteStream(DeleteStreamRequest request);
    public virtual Task`1<DeleteStreamResponse> DeleteStreamAsync(DeleteStreamRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterStreamConsumerResponse DeregisterStreamConsumer(DeregisterStreamConsumerRequest request);
    public virtual Task`1<DeregisterStreamConsumerResponse> DeregisterStreamConsumerAsync(DeregisterStreamConsumerRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLimitsResponse DescribeLimits(DescribeLimitsRequest request);
    public virtual Task`1<DescribeLimitsResponse> DescribeLimitsAsync(DescribeLimitsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeStreamResponse DescribeStream(DescribeStreamRequest request);
    public virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    internal virtual DescribeStreamConsumerResponse DescribeStreamConsumer(DescribeStreamConsumerRequest request);
    public virtual Task`1<DescribeStreamConsumerResponse> DescribeStreamConsumerAsync(DescribeStreamConsumerRequest request, CancellationToken cancellationToken);
    internal virtual DescribeStreamSummaryResponse DescribeStreamSummary(DescribeStreamSummaryRequest request);
    public virtual Task`1<DescribeStreamSummaryResponse> DescribeStreamSummaryAsync(DescribeStreamSummaryRequest request, CancellationToken cancellationToken);
    internal virtual DisableEnhancedMonitoringResponse DisableEnhancedMonitoring(DisableEnhancedMonitoringRequest request);
    public virtual Task`1<DisableEnhancedMonitoringResponse> DisableEnhancedMonitoringAsync(DisableEnhancedMonitoringRequest request, CancellationToken cancellationToken);
    internal virtual EnableEnhancedMonitoringResponse EnableEnhancedMonitoring(EnableEnhancedMonitoringRequest request);
    public virtual Task`1<EnableEnhancedMonitoringResponse> EnableEnhancedMonitoringAsync(EnableEnhancedMonitoringRequest request, CancellationToken cancellationToken);
    internal virtual GetRecordsResponse GetRecords(GetRecordsRequest request);
    public virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePolicyResponse GetResourcePolicy(GetResourcePolicyRequest request);
    public virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request);
    public virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    internal virtual IncreaseStreamRetentionPeriodResponse IncreaseStreamRetentionPeriod(IncreaseStreamRetentionPeriodRequest request);
    public virtual Task`1<IncreaseStreamRetentionPeriodResponse> IncreaseStreamRetentionPeriodAsync(string streamName, Nullable`1<int> retentionPeriodHours, CancellationToken cancellationToken);
    public virtual Task`1<IncreaseStreamRetentionPeriodResponse> IncreaseStreamRetentionPeriodAsync(IncreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    internal virtual ListShardsResponse ListShards(ListShardsRequest request);
    public virtual Task`1<ListShardsResponse> ListShardsAsync(ListShardsRequest request, CancellationToken cancellationToken);
    internal virtual ListStreamConsumersResponse ListStreamConsumers(ListStreamConsumersRequest request);
    public virtual Task`1<ListStreamConsumersResponse> ListStreamConsumersAsync(ListStreamConsumersRequest request, CancellationToken cancellationToken);
    internal virtual ListStreamsResponse ListStreams();
    internal virtual ListStreamsResponse ListStreams(ListStreamsRequest request);
    public virtual Task`1<ListStreamsResponse> ListStreamsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForStreamResponse ListTagsForStream(ListTagsForStreamRequest request);
    public virtual Task`1<ListTagsForStreamResponse> ListTagsForStreamAsync(ListTagsForStreamRequest request, CancellationToken cancellationToken);
    internal virtual MergeShardsResponse MergeShards(MergeShardsRequest request);
    public virtual Task`1<MergeShardsResponse> MergeShardsAsync(MergeShardsRequest request, CancellationToken cancellationToken);
    internal virtual PutRecordResponse PutRecord(PutRecordRequest request);
    public virtual Task`1<PutRecordResponse> PutRecordAsync(PutRecordRequest request, CancellationToken cancellationToken);
    internal virtual PutRecordsResponse PutRecords(PutRecordsRequest request);
    public virtual Task`1<PutRecordsResponse> PutRecordsAsync(PutRecordsRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual RegisterStreamConsumerResponse RegisterStreamConsumer(RegisterStreamConsumerRequest request);
    public virtual Task`1<RegisterStreamConsumerResponse> RegisterStreamConsumerAsync(RegisterStreamConsumerRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsFromStreamResponse RemoveTagsFromStream(RemoveTagsFromStreamRequest request);
    public virtual Task`1<RemoveTagsFromStreamResponse> RemoveTagsFromStreamAsync(RemoveTagsFromStreamRequest request, CancellationToken cancellationToken);
    internal virtual SplitShardResponse SplitShard(SplitShardRequest request);
    public virtual Task`1<SplitShardResponse> SplitShardAsync(SplitShardRequest request, CancellationToken cancellationToken);
    internal virtual StartStreamEncryptionResponse StartStreamEncryption(StartStreamEncryptionRequest request);
    public virtual Task`1<StartStreamEncryptionResponse> StartStreamEncryptionAsync(StartStreamEncryptionRequest request, CancellationToken cancellationToken);
    internal virtual StopStreamEncryptionResponse StopStreamEncryption(StopStreamEncryptionRequest request);
    public virtual Task`1<StopStreamEncryptionResponse> StopStreamEncryptionAsync(StopStreamEncryptionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateShardCountResponse UpdateShardCount(UpdateShardCountRequest request);
    public virtual Task`1<UpdateShardCountResponse> UpdateShardCountAsync(UpdateShardCountRequest request, CancellationToken cancellationToken);
    internal virtual UpdateStreamModeResponse UpdateStreamMode(UpdateStreamModeRequest request);
    public virtual Task`1<UpdateStreamModeResponse> UpdateStreamModeAsync(UpdateStreamModeRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Kinesis.AmazonKinesisConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonKinesisEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonKinesisConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.Kinesis.AmazonKinesisDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonKinesisDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.Kinesis.AmazonKinesisException : AmazonServiceException {
    public AmazonKinesisException(string message);
    public AmazonKinesisException(string message, Exception innerException);
    public AmazonKinesisException(Exception innerException);
    public AmazonKinesisException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonKinesisException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.AmazonKinesisRequest : AmazonWebServiceRequest {
}
public class Amazon.Kinesis.ConsumerStatus : ConstantClass {
    public static ConsumerStatus ACTIVE;
    public static ConsumerStatus CREATING;
    public static ConsumerStatus DELETING;
    public ConsumerStatus(string value);
    private static ConsumerStatus();
    public static ConsumerStatus FindValue(string value);
    public static ConsumerStatus op_Implicit(string value);
}
public class Amazon.Kinesis.EncryptionType : ConstantClass {
    public static EncryptionType KMS;
    public static EncryptionType NONE;
    public EncryptionType(string value);
    private static EncryptionType();
    public static EncryptionType FindValue(string value);
    public static EncryptionType op_Implicit(string value);
}
public class Amazon.Kinesis.Endpoints.KinesisEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string StreamARN { get; public set; }
    public string OperationType { get; public set; }
    public string ConsumerARN { get; public set; }
    public string ResourceARN { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
    public string get_StreamARN();
    public void set_StreamARN(string value);
    public string get_OperationType();
    public void set_OperationType(string value);
    public string get_ConsumerARN();
    public void set_ConsumerARN(string value);
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
}
public interface Amazon.Kinesis.IAmazonKinesis {
    public IKinesisPaginatorFactory Paginators { get; }
    public abstract virtual IKinesisPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddTagsToStreamResponse> AddTagsToStreamAsync(AddTagsToStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateStreamResponse> CreateStreamAsync(CreateStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DecreaseStreamRetentionPeriodResponse> DecreaseStreamRetentionPeriodAsync(string streamName, Nullable`1<int> retentionPeriodHours, CancellationToken cancellationToken);
    public abstract virtual Task`1<DecreaseStreamRetentionPeriodResponse> DecreaseStreamRetentionPeriodAsync(DecreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteStreamResponse> DeleteStreamAsync(DeleteStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterStreamConsumerResponse> DeregisterStreamConsumerAsync(DeregisterStreamConsumerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLimitsResponse> DescribeLimitsAsync(DescribeLimitsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStreamConsumerResponse> DescribeStreamConsumerAsync(DescribeStreamConsumerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStreamSummaryResponse> DescribeStreamSummaryAsync(DescribeStreamSummaryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableEnhancedMonitoringResponse> DisableEnhancedMonitoringAsync(DisableEnhancedMonitoringRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableEnhancedMonitoringResponse> EnableEnhancedMonitoringAsync(EnableEnhancedMonitoringRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<IncreaseStreamRetentionPeriodResponse> IncreaseStreamRetentionPeriodAsync(string streamName, Nullable`1<int> retentionPeriodHours, CancellationToken cancellationToken);
    public abstract virtual Task`1<IncreaseStreamRetentionPeriodResponse> IncreaseStreamRetentionPeriodAsync(IncreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListShardsResponse> ListShardsAsync(ListShardsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamConsumersResponse> ListStreamConsumersAsync(ListStreamConsumersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamsResponse> ListStreamsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForStreamResponse> ListTagsForStreamAsync(ListTagsForStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MergeShardsResponse> MergeShardsAsync(MergeShardsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordResponse> PutRecordAsync(PutRecordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordsResponse> PutRecordsAsync(PutRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterStreamConsumerResponse> RegisterStreamConsumerAsync(RegisterStreamConsumerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsFromStreamResponse> RemoveTagsFromStreamAsync(RemoveTagsFromStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SplitShardResponse> SplitShardAsync(SplitShardRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartStreamEncryptionResponse> StartStreamEncryptionAsync(StartStreamEncryptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopStreamEncryptionResponse> StopStreamEncryptionAsync(StopStreamEncryptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateShardCountResponse> UpdateShardCountAsync(UpdateShardCountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateStreamModeResponse> UpdateStreamModeAsync(UpdateStreamModeRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.Kinesis.Internal.AmazonKinesisEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Kinesis.Internal.AmazonKinesisEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Kinesis.Internal.AmazonKinesisMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Kinesis.MetricsName : ConstantClass {
    public static MetricsName ALL;
    public static MetricsName IncomingBytes;
    public static MetricsName IncomingRecords;
    public static MetricsName IteratorAgeMilliseconds;
    public static MetricsName OutgoingBytes;
    public static MetricsName OutgoingRecords;
    public static MetricsName ReadProvisionedThroughputExceeded;
    public static MetricsName WriteProvisionedThroughputExceeded;
    public MetricsName(string value);
    private static MetricsName();
    public static MetricsName FindValue(string value);
    public static MetricsName op_Implicit(string value);
}
public class Amazon.Kinesis.Model.AccessDeniedException : AmazonKinesisException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.AddTagsToStreamRequest : AmazonKinesisRequest {
    private string _streamARN;
    private string _streamName;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kinesis.Model.AddTagsToStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.ChildShard : object {
    private HashKeyRange _hashKeyRange;
    private List`1<string> _parentShards;
    private string _shardId;
    [AWSPropertyAttribute]
public HashKeyRange HashKeyRange { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ParentShards { get; public set; }
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    public HashKeyRange get_HashKeyRange();
    public void set_HashKeyRange(HashKeyRange value);
    internal bool IsSetHashKeyRange();
    public List`1<string> get_ParentShards();
    public void set_ParentShards(List`1<string> value);
    internal bool IsSetParentShards();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.Kinesis.Model.Consumer : object {
    private string _consumerARN;
    private Nullable`1<DateTime> _consumerCreationTimestamp;
    private string _consumerName;
    private ConsumerStatus _consumerStatus;
    [AWSPropertyAttribute]
public string ConsumerARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> ConsumerCreationTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string ConsumerName { get; public set; }
    [AWSPropertyAttribute]
public ConsumerStatus ConsumerStatus { get; public set; }
    public string get_ConsumerARN();
    public void set_ConsumerARN(string value);
    internal bool IsSetConsumerARN();
    public Nullable`1<DateTime> get_ConsumerCreationTimestamp();
    public void set_ConsumerCreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetConsumerCreationTimestamp();
    public string get_ConsumerName();
    public void set_ConsumerName(string value);
    internal bool IsSetConsumerName();
    public ConsumerStatus get_ConsumerStatus();
    public void set_ConsumerStatus(ConsumerStatus value);
    internal bool IsSetConsumerStatus();
}
public class Amazon.Kinesis.Model.ConsumerDescription : object {
    private string _consumerARN;
    private Nullable`1<DateTime> _consumerCreationTimestamp;
    private string _consumerName;
    private ConsumerStatus _consumerStatus;
    private string _streamARN;
    [AWSPropertyAttribute]
public string ConsumerARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> ConsumerCreationTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string ConsumerName { get; public set; }
    [AWSPropertyAttribute]
public ConsumerStatus ConsumerStatus { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public string get_ConsumerARN();
    public void set_ConsumerARN(string value);
    internal bool IsSetConsumerARN();
    public Nullable`1<DateTime> get_ConsumerCreationTimestamp();
    public void set_ConsumerCreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetConsumerCreationTimestamp();
    public string get_ConsumerName();
    public void set_ConsumerName(string value);
    internal bool IsSetConsumerName();
    public ConsumerStatus get_ConsumerStatus();
    public void set_ConsumerStatus(ConsumerStatus value);
    internal bool IsSetConsumerStatus();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
}
public class Amazon.Kinesis.Model.CreateStreamRequest : AmazonKinesisRequest {
    private Nullable`1<int> _shardCount;
    private StreamModeDetails _streamModeDetails;
    private string _streamName;
    [AWSPropertyAttribute]
public Nullable`1<int> ShardCount { get; public set; }
    public StreamModeDetails StreamModeDetails { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public Nullable`1<int> get_ShardCount();
    public void set_ShardCount(Nullable`1<int> value);
    internal bool IsSetShardCount();
    public StreamModeDetails get_StreamModeDetails();
    public void set_StreamModeDetails(StreamModeDetails value);
    internal bool IsSetStreamModeDetails();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.CreateStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DecreaseStreamRetentionPeriodRequest : AmazonKinesisRequest {
    private Nullable`1<int> _retentionPeriodHours;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriodHours { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public Nullable`1<int> get_RetentionPeriodHours();
    public void set_RetentionPeriodHours(Nullable`1<int> value);
    internal bool IsSetRetentionPeriodHours();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DecreaseStreamRetentionPeriodResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DeleteResourcePolicyRequest : AmazonKinesisRequest {
    private string _resourceARN;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.Kinesis.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DeleteStreamRequest : AmazonKinesisRequest {
    private Nullable`1<bool> _enforceConsumerDeletion;
    private string _streamARN;
    private string _streamName;
    public Nullable`1<bool> EnforceConsumerDeletion { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public Nullable`1<bool> get_EnforceConsumerDeletion();
    public void set_EnforceConsumerDeletion(Nullable`1<bool> value);
    internal bool IsSetEnforceConsumerDeletion();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DeleteStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DeregisterStreamConsumerRequest : AmazonKinesisRequest {
    private string _consumerARN;
    private string _consumerName;
    private string _streamARN;
    [AWSPropertyAttribute]
public string ConsumerARN { get; public set; }
    [AWSPropertyAttribute]
public string ConsumerName { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public string get_ConsumerARN();
    public void set_ConsumerARN(string value);
    internal bool IsSetConsumerARN();
    public string get_ConsumerName();
    public void set_ConsumerName(string value);
    internal bool IsSetConsumerName();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
}
public class Amazon.Kinesis.Model.DeregisterStreamConsumerResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DescribeLimitsRequest : AmazonKinesisRequest {
}
public class Amazon.Kinesis.Model.DescribeLimitsResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _onDemandStreamCount;
    private Nullable`1<int> _onDemandStreamCountLimit;
    private Nullable`1<int> _openShardCount;
    private Nullable`1<int> _shardLimit;
    [AWSPropertyAttribute]
public Nullable`1<int> OnDemandStreamCount { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> OnDemandStreamCountLimit { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> OpenShardCount { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ShardLimit { get; public set; }
    public Nullable`1<int> get_OnDemandStreamCount();
    public void set_OnDemandStreamCount(Nullable`1<int> value);
    internal bool IsSetOnDemandStreamCount();
    public Nullable`1<int> get_OnDemandStreamCountLimit();
    public void set_OnDemandStreamCountLimit(Nullable`1<int> value);
    internal bool IsSetOnDemandStreamCountLimit();
    public Nullable`1<int> get_OpenShardCount();
    public void set_OpenShardCount(Nullable`1<int> value);
    internal bool IsSetOpenShardCount();
    public Nullable`1<int> get_ShardLimit();
    public void set_ShardLimit(Nullable`1<int> value);
    internal bool IsSetShardLimit();
}
public class Amazon.Kinesis.Model.DescribeStreamConsumerRequest : AmazonKinesisRequest {
    private string _consumerARN;
    private string _consumerName;
    private string _streamARN;
    [AWSPropertyAttribute]
public string ConsumerARN { get; public set; }
    [AWSPropertyAttribute]
public string ConsumerName { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public string get_ConsumerARN();
    public void set_ConsumerARN(string value);
    internal bool IsSetConsumerARN();
    public string get_ConsumerName();
    public void set_ConsumerName(string value);
    internal bool IsSetConsumerName();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
}
public class Amazon.Kinesis.Model.DescribeStreamConsumerResponse : AmazonWebServiceResponse {
    private ConsumerDescription _consumerDescription;
    [AWSPropertyAttribute]
public ConsumerDescription ConsumerDescription { get; public set; }
    public ConsumerDescription get_ConsumerDescription();
    public void set_ConsumerDescription(ConsumerDescription value);
    internal bool IsSetConsumerDescription();
}
public class Amazon.Kinesis.Model.DescribeStreamRequest : AmazonKinesisRequest {
    private string _exclusiveStartShardId;
    private Nullable`1<int> _limit;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public string ExclusiveStartShardId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public string get_ExclusiveStartShardId();
    public void set_ExclusiveStartShardId(string value);
    internal bool IsSetExclusiveStartShardId();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DescribeStreamResponse : AmazonWebServiceResponse {
    private StreamDescription _streamDescription;
    [AWSPropertyAttribute]
public StreamDescription StreamDescription { get; public set; }
    public StreamDescription get_StreamDescription();
    public void set_StreamDescription(StreamDescription value);
    internal bool IsSetStreamDescription();
}
public class Amazon.Kinesis.Model.DescribeStreamSummaryRequest : AmazonKinesisRequest {
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DescribeStreamSummaryResponse : AmazonWebServiceResponse {
    private StreamDescriptionSummary _streamDescriptionSummary;
    [AWSPropertyAttribute]
public StreamDescriptionSummary StreamDescriptionSummary { get; public set; }
    public StreamDescriptionSummary get_StreamDescriptionSummary();
    public void set_StreamDescriptionSummary(StreamDescriptionSummary value);
    internal bool IsSetStreamDescriptionSummary();
}
public class Amazon.Kinesis.Model.DisableEnhancedMonitoringRequest : AmazonKinesisRequest {
    private List`1<string> _shardLevelMetrics;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public List`1<string> ShardLevelMetrics { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public List`1<string> get_ShardLevelMetrics();
    public void set_ShardLevelMetrics(List`1<string> value);
    internal bool IsSetShardLevelMetrics();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DisableEnhancedMonitoringResponse : AmazonWebServiceResponse {
    private List`1<string> _currentShardLevelMetrics;
    private List`1<string> _desiredShardLevelMetrics;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public List`1<string> CurrentShardLevelMetrics { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> DesiredShardLevelMetrics { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public List`1<string> get_CurrentShardLevelMetrics();
    public void set_CurrentShardLevelMetrics(List`1<string> value);
    internal bool IsSetCurrentShardLevelMetrics();
    public List`1<string> get_DesiredShardLevelMetrics();
    public void set_DesiredShardLevelMetrics(List`1<string> value);
    internal bool IsSetDesiredShardLevelMetrics();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.EnableEnhancedMonitoringRequest : AmazonKinesisRequest {
    private List`1<string> _shardLevelMetrics;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public List`1<string> ShardLevelMetrics { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public List`1<string> get_ShardLevelMetrics();
    public void set_ShardLevelMetrics(List`1<string> value);
    internal bool IsSetShardLevelMetrics();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.EnableEnhancedMonitoringResponse : AmazonWebServiceResponse {
    private List`1<string> _currentShardLevelMetrics;
    private List`1<string> _desiredShardLevelMetrics;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public List`1<string> CurrentShardLevelMetrics { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> DesiredShardLevelMetrics { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public List`1<string> get_CurrentShardLevelMetrics();
    public void set_CurrentShardLevelMetrics(List`1<string> value);
    internal bool IsSetCurrentShardLevelMetrics();
    public List`1<string> get_DesiredShardLevelMetrics();
    public void set_DesiredShardLevelMetrics(List`1<string> value);
    internal bool IsSetDesiredShardLevelMetrics();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.EnhancedMetrics : object {
    private List`1<string> _shardLevelMetrics;
    [AWSPropertyAttribute]
public List`1<string> ShardLevelMetrics { get; public set; }
    public List`1<string> get_ShardLevelMetrics();
    public void set_ShardLevelMetrics(List`1<string> value);
    internal bool IsSetShardLevelMetrics();
}
public class Amazon.Kinesis.Model.ExpiredIteratorException : AmazonKinesisException {
    public ExpiredIteratorException(string message);
    public ExpiredIteratorException(string message, Exception innerException);
    public ExpiredIteratorException(Exception innerException);
    public ExpiredIteratorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExpiredIteratorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.ExpiredNextTokenException : AmazonKinesisException {
    public ExpiredNextTokenException(string message);
    public ExpiredNextTokenException(string message, Exception innerException);
    public ExpiredNextTokenException(Exception innerException);
    public ExpiredNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExpiredNextTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.GetRecordsRequest : AmazonKinesisRequest {
    private Nullable`1<int> _limit;
    private string _shardIterator;
    private string _streamARN;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string ShardIterator { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
}
public class Amazon.Kinesis.Model.GetRecordsResponse : AmazonWebServiceResponse {
    private List`1<ChildShard> _childShards;
    private Nullable`1<long> _millisBehindLatest;
    private string _nextShardIterator;
    private List`1<Record> _records;
    public List`1<ChildShard> ChildShards { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MillisBehindLatest { get; public set; }
    [AWSPropertyAttribute]
public string NextShardIterator { get; public set; }
    [AWSPropertyAttribute]
public List`1<Record> Records { get; public set; }
    public List`1<ChildShard> get_ChildShards();
    public void set_ChildShards(List`1<ChildShard> value);
    internal bool IsSetChildShards();
    public Nullable`1<long> get_MillisBehindLatest();
    public void set_MillisBehindLatest(Nullable`1<long> value);
    internal bool IsSetMillisBehindLatest();
    public string get_NextShardIterator();
    public void set_NextShardIterator(string value);
    internal bool IsSetNextShardIterator();
    public List`1<Record> get_Records();
    public void set_Records(List`1<Record> value);
    internal bool IsSetRecords();
}
public class Amazon.Kinesis.Model.GetResourcePolicyRequest : AmazonKinesisRequest {
    private string _resourceARN;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.Kinesis.Model.GetResourcePolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.Kinesis.Model.GetShardIteratorRequest : AmazonKinesisRequest {
    private string _shardId;
    private ShardIteratorType _shardIteratorType;
    private string _startingSequenceNumber;
    private string _streamARN;
    private string _streamName;
    private Nullable`1<DateTime> _timestamp;
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    [AWSPropertyAttribute]
public ShardIteratorType ShardIteratorType { get; public set; }
    public string StartingSequenceNumber { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
    public ShardIteratorType get_ShardIteratorType();
    public void set_ShardIteratorType(ShardIteratorType value);
    internal bool IsSetShardIteratorType();
    public string get_StartingSequenceNumber();
    public void set_StartingSequenceNumber(string value);
    internal bool IsSetStartingSequenceNumber();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.Kinesis.Model.GetShardIteratorResponse : AmazonWebServiceResponse {
    private string _shardIterator;
    [AWSPropertyAttribute]
public string ShardIterator { get; public set; }
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
}
public class Amazon.Kinesis.Model.HashKeyRange : object {
    private string _endingHashKey;
    private string _startingHashKey;
    [AWSPropertyAttribute]
public string EndingHashKey { get; public set; }
    [AWSPropertyAttribute]
public string StartingHashKey { get; public set; }
    public string get_EndingHashKey();
    public void set_EndingHashKey(string value);
    internal bool IsSetEndingHashKey();
    public string get_StartingHashKey();
    public void set_StartingHashKey(string value);
    internal bool IsSetStartingHashKey();
}
public interface Amazon.Kinesis.Model.IKinesisPaginatorFactory {
    public abstract virtual IListStreamConsumersPaginator ListStreamConsumers(ListStreamConsumersRequest request);
    public abstract virtual IListStreamsPaginator ListStreams(ListStreamsRequest request);
}
public interface Amazon.Kinesis.Model.IListStreamConsumersPaginator {
    public IPaginatedEnumerable`1<ListStreamConsumersResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListStreamConsumersResponse> get_Responses();
}
public interface Amazon.Kinesis.Model.IListStreamsPaginator {
    public IPaginatedEnumerable`1<ListStreamsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> StreamNames { get; }
    public IPaginatedEnumerable`1<StreamSummary> StreamSummaries { get; }
    public abstract virtual IPaginatedEnumerable`1<ListStreamsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_StreamNames();
    public abstract virtual IPaginatedEnumerable`1<StreamSummary> get_StreamSummaries();
}
public class Amazon.Kinesis.Model.IncreaseStreamRetentionPeriodRequest : AmazonKinesisRequest {
    private Nullable`1<int> _retentionPeriodHours;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriodHours { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public Nullable`1<int> get_RetentionPeriodHours();
    public void set_RetentionPeriodHours(Nullable`1<int> value);
    internal bool IsSetRetentionPeriodHours();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.IncreaseStreamRetentionPeriodResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.AddTagsToStreamRequestMarshaller : object {
    private static AddTagsToStreamRequestMarshaller _instance;
    public static AddTagsToStreamRequestMarshaller Instance { get; }
    private static AddTagsToStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsToStreamRequest publicRequest);
    internal static AddTagsToStreamRequestMarshaller GetInstance();
    public static AddTagsToStreamRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.AddTagsToStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddTagsToStreamResponseUnmarshaller _instance;
    public static AddTagsToStreamResponseUnmarshaller Instance { get; }
    private static AddTagsToStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsToStreamResponseUnmarshaller GetInstance();
    public static AddTagsToStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ChildShardUnmarshaller : object {
    private static ChildShardUnmarshaller _instance;
    public static ChildShardUnmarshaller Instance { get; }
    private static ChildShardUnmarshaller();
    private sealed virtual override ChildShard Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.ChildShard,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ChildShard Unmarshall(JsonUnmarshallerContext context);
    public static ChildShardUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ConsumerDescriptionUnmarshaller : object {
    private static ConsumerDescriptionUnmarshaller _instance;
    public static ConsumerDescriptionUnmarshaller Instance { get; }
    private static ConsumerDescriptionUnmarshaller();
    private sealed virtual override ConsumerDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.ConsumerDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConsumerDescription Unmarshall(JsonUnmarshallerContext context);
    public static ConsumerDescriptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ConsumerUnmarshaller : object {
    private static ConsumerUnmarshaller _instance;
    public static ConsumerUnmarshaller Instance { get; }
    private static ConsumerUnmarshaller();
    private sealed virtual override Consumer Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.Consumer,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Consumer Unmarshall(JsonUnmarshallerContext context);
    public static ConsumerUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.CreateStreamRequestMarshaller : object {
    private static CreateStreamRequestMarshaller _instance;
    public static CreateStreamRequestMarshaller Instance { get; }
    private static CreateStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStreamRequest publicRequest);
    internal static CreateStreamRequestMarshaller GetInstance();
    public static CreateStreamRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.CreateStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateStreamResponseUnmarshaller _instance;
    public static CreateStreamResponseUnmarshaller Instance { get; }
    private static CreateStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStreamResponseUnmarshaller GetInstance();
    public static CreateStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DecreaseStreamRetentionPeriodRequestMarshaller : object {
    private static DecreaseStreamRetentionPeriodRequestMarshaller _instance;
    public static DecreaseStreamRetentionPeriodRequestMarshaller Instance { get; }
    private static DecreaseStreamRetentionPeriodRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DecreaseStreamRetentionPeriodRequest publicRequest);
    internal static DecreaseStreamRetentionPeriodRequestMarshaller GetInstance();
    public static DecreaseStreamRetentionPeriodRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DecreaseStreamRetentionPeriodResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DecreaseStreamRetentionPeriodResponseUnmarshaller _instance;
    public static DecreaseStreamRetentionPeriodResponseUnmarshaller Instance { get; }
    private static DecreaseStreamRetentionPeriodResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DecreaseStreamRetentionPeriodResponseUnmarshaller GetInstance();
    public static DecreaseStreamRetentionPeriodResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteStreamRequestMarshaller : object {
    private static DeleteStreamRequestMarshaller _instance;
    public static DeleteStreamRequestMarshaller Instance { get; }
    private static DeleteStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteStreamRequest publicRequest);
    internal static DeleteStreamRequestMarshaller GetInstance();
    public static DeleteStreamRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteStreamResponseUnmarshaller _instance;
    public static DeleteStreamResponseUnmarshaller Instance { get; }
    private static DeleteStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteStreamResponseUnmarshaller GetInstance();
    public static DeleteStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeregisterStreamConsumerRequestMarshaller : object {
    private static DeregisterStreamConsumerRequestMarshaller _instance;
    public static DeregisterStreamConsumerRequestMarshaller Instance { get; }
    private static DeregisterStreamConsumerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterStreamConsumerRequest publicRequest);
    internal static DeregisterStreamConsumerRequestMarshaller GetInstance();
    public static DeregisterStreamConsumerRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeregisterStreamConsumerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeregisterStreamConsumerResponseUnmarshaller _instance;
    public static DeregisterStreamConsumerResponseUnmarshaller Instance { get; }
    private static DeregisterStreamConsumerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterStreamConsumerResponseUnmarshaller GetInstance();
    public static DeregisterStreamConsumerResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeLimitsRequestMarshaller : object {
    private static DescribeLimitsRequestMarshaller _instance;
    public static DescribeLimitsRequestMarshaller Instance { get; }
    private static DescribeLimitsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLimitsRequest publicRequest);
    internal static DescribeLimitsRequestMarshaller GetInstance();
    public static DescribeLimitsRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeLimitsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLimitsResponseUnmarshaller _instance;
    public static DescribeLimitsResponseUnmarshaller Instance { get; }
    private static DescribeLimitsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLimitsResponseUnmarshaller GetInstance();
    public static DescribeLimitsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamConsumerRequestMarshaller : object {
    private static DescribeStreamConsumerRequestMarshaller _instance;
    public static DescribeStreamConsumerRequestMarshaller Instance { get; }
    private static DescribeStreamConsumerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStreamConsumerRequest publicRequest);
    internal static DescribeStreamConsumerRequestMarshaller GetInstance();
    public static DescribeStreamConsumerRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamConsumerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeStreamConsumerResponseUnmarshaller _instance;
    public static DescribeStreamConsumerResponseUnmarshaller Instance { get; }
    private static DescribeStreamConsumerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStreamConsumerResponseUnmarshaller GetInstance();
    public static DescribeStreamConsumerResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller : object {
    private static DescribeStreamRequestMarshaller _instance;
    public static DescribeStreamRequestMarshaller Instance { get; }
    private static DescribeStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStreamRequest publicRequest);
    internal static DescribeStreamRequestMarshaller GetInstance();
    public static DescribeStreamRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeStreamResponseUnmarshaller _instance;
    public static DescribeStreamResponseUnmarshaller Instance { get; }
    private static DescribeStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStreamResponseUnmarshaller GetInstance();
    public static DescribeStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamSummaryRequestMarshaller : object {
    private static DescribeStreamSummaryRequestMarshaller _instance;
    public static DescribeStreamSummaryRequestMarshaller Instance { get; }
    private static DescribeStreamSummaryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStreamSummaryRequest publicRequest);
    internal static DescribeStreamSummaryRequestMarshaller GetInstance();
    public static DescribeStreamSummaryRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamSummaryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeStreamSummaryResponseUnmarshaller _instance;
    public static DescribeStreamSummaryResponseUnmarshaller Instance { get; }
    private static DescribeStreamSummaryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStreamSummaryResponseUnmarshaller GetInstance();
    public static DescribeStreamSummaryResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DisableEnhancedMonitoringRequestMarshaller : object {
    private static DisableEnhancedMonitoringRequestMarshaller _instance;
    public static DisableEnhancedMonitoringRequestMarshaller Instance { get; }
    private static DisableEnhancedMonitoringRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableEnhancedMonitoringRequest publicRequest);
    internal static DisableEnhancedMonitoringRequestMarshaller GetInstance();
    public static DisableEnhancedMonitoringRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DisableEnhancedMonitoringResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableEnhancedMonitoringResponseUnmarshaller _instance;
    public static DisableEnhancedMonitoringResponseUnmarshaller Instance { get; }
    private static DisableEnhancedMonitoringResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableEnhancedMonitoringResponseUnmarshaller GetInstance();
    public static DisableEnhancedMonitoringResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.EnableEnhancedMonitoringRequestMarshaller : object {
    private static EnableEnhancedMonitoringRequestMarshaller _instance;
    public static EnableEnhancedMonitoringRequestMarshaller Instance { get; }
    private static EnableEnhancedMonitoringRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableEnhancedMonitoringRequest publicRequest);
    internal static EnableEnhancedMonitoringRequestMarshaller GetInstance();
    public static EnableEnhancedMonitoringRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.EnableEnhancedMonitoringResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableEnhancedMonitoringResponseUnmarshaller _instance;
    public static EnableEnhancedMonitoringResponseUnmarshaller Instance { get; }
    private static EnableEnhancedMonitoringResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableEnhancedMonitoringResponseUnmarshaller GetInstance();
    public static EnableEnhancedMonitoringResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.EnhancedMetricsUnmarshaller : object {
    private static EnhancedMetricsUnmarshaller _instance;
    public static EnhancedMetricsUnmarshaller Instance { get; }
    private static EnhancedMetricsUnmarshaller();
    private sealed virtual override EnhancedMetrics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.EnhancedMetrics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnhancedMetrics Unmarshall(JsonUnmarshallerContext context);
    public static EnhancedMetricsUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ExpiredIteratorExceptionUnmarshaller : object {
    private static ExpiredIteratorExceptionUnmarshaller _instance;
    public static ExpiredIteratorExceptionUnmarshaller Instance { get; }
    private static ExpiredIteratorExceptionUnmarshaller();
    public sealed virtual ExpiredIteratorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ExpiredIteratorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExpiredIteratorExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ExpiredNextTokenExceptionUnmarshaller : object {
    private static ExpiredNextTokenExceptionUnmarshaller _instance;
    public static ExpiredNextTokenExceptionUnmarshaller Instance { get; }
    private static ExpiredNextTokenExceptionUnmarshaller();
    public sealed virtual ExpiredNextTokenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ExpiredNextTokenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExpiredNextTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetRecordsRequestMarshaller : object {
    private static GetRecordsRequestMarshaller _instance;
    public static GetRecordsRequestMarshaller Instance { get; }
    private static GetRecordsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRecordsRequest publicRequest);
    internal static GetRecordsRequestMarshaller GetInstance();
    public static GetRecordsRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRecordsResponseUnmarshaller _instance;
    public static GetRecordsResponseUnmarshaller Instance { get; }
    private static GetRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRecordsResponseUnmarshaller GetInstance();
    public static GetRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller : object {
    private static GetResourcePolicyRequestMarshaller _instance;
    public static GetResourcePolicyRequestMarshaller Instance { get; }
    private static GetResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePolicyRequest publicRequest);
    internal static GetResourcePolicyRequestMarshaller GetInstance();
    public static GetResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetResourcePolicyResponseUnmarshaller _instance;
    public static GetResourcePolicyResponseUnmarshaller Instance { get; }
    private static GetResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePolicyResponseUnmarshaller GetInstance();
    public static GetResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetShardIteratorRequestMarshaller : object {
    private static GetShardIteratorRequestMarshaller _instance;
    public static GetShardIteratorRequestMarshaller Instance { get; }
    private static GetShardIteratorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetShardIteratorRequest publicRequest);
    internal static GetShardIteratorRequestMarshaller GetInstance();
    public static GetShardIteratorRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetShardIteratorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetShardIteratorResponseUnmarshaller _instance;
    public static GetShardIteratorResponseUnmarshaller Instance { get; }
    private static GetShardIteratorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetShardIteratorResponseUnmarshaller GetInstance();
    public static GetShardIteratorResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.HashKeyRangeUnmarshaller : object {
    private static HashKeyRangeUnmarshaller _instance;
    public static HashKeyRangeUnmarshaller Instance { get; }
    private static HashKeyRangeUnmarshaller();
    private sealed virtual override HashKeyRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.HashKeyRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HashKeyRange Unmarshall(JsonUnmarshallerContext context);
    public static HashKeyRangeUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.IncreaseStreamRetentionPeriodRequestMarshaller : object {
    private static IncreaseStreamRetentionPeriodRequestMarshaller _instance;
    public static IncreaseStreamRetentionPeriodRequestMarshaller Instance { get; }
    private static IncreaseStreamRetentionPeriodRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(IncreaseStreamRetentionPeriodRequest publicRequest);
    internal static IncreaseStreamRetentionPeriodRequestMarshaller GetInstance();
    public static IncreaseStreamRetentionPeriodRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.IncreaseStreamRetentionPeriodResponseUnmarshaller : JsonResponseUnmarshaller {
    private static IncreaseStreamRetentionPeriodResponseUnmarshaller _instance;
    public static IncreaseStreamRetentionPeriodResponseUnmarshaller Instance { get; }
    private static IncreaseStreamRetentionPeriodResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static IncreaseStreamRetentionPeriodResponseUnmarshaller GetInstance();
    public static IncreaseStreamRetentionPeriodResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller : object {
    private static InvalidArgumentExceptionUnmarshaller _instance;
    public static InvalidArgumentExceptionUnmarshaller Instance { get; }
    private static InvalidArgumentExceptionUnmarshaller();
    public sealed virtual InvalidArgumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidArgumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidArgumentExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.KMSAccessDeniedExceptionUnmarshaller : object {
    private static KMSAccessDeniedExceptionUnmarshaller _instance;
    public static KMSAccessDeniedExceptionUnmarshaller Instance { get; }
    private static KMSAccessDeniedExceptionUnmarshaller();
    public sealed virtual KMSAccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSAccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSAccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.KMSDisabledExceptionUnmarshaller : object {
    private static KMSDisabledExceptionUnmarshaller _instance;
    public static KMSDisabledExceptionUnmarshaller Instance { get; }
    private static KMSDisabledExceptionUnmarshaller();
    public sealed virtual KMSDisabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSDisabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSDisabledExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.KMSInvalidStateExceptionUnmarshaller : object {
    private static KMSInvalidStateExceptionUnmarshaller _instance;
    public static KMSInvalidStateExceptionUnmarshaller Instance { get; }
    private static KMSInvalidStateExceptionUnmarshaller();
    public sealed virtual KMSInvalidStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSInvalidStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSInvalidStateExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.KMSNotFoundExceptionUnmarshaller : object {
    private static KMSNotFoundExceptionUnmarshaller _instance;
    public static KMSNotFoundExceptionUnmarshaller Instance { get; }
    private static KMSNotFoundExceptionUnmarshaller();
    public sealed virtual KMSNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.KMSOptInRequiredExceptionUnmarshaller : object {
    private static KMSOptInRequiredExceptionUnmarshaller _instance;
    public static KMSOptInRequiredExceptionUnmarshaller Instance { get; }
    private static KMSOptInRequiredExceptionUnmarshaller();
    public sealed virtual KMSOptInRequiredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSOptInRequiredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSOptInRequiredExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.KMSThrottlingExceptionUnmarshaller : object {
    private static KMSThrottlingExceptionUnmarshaller _instance;
    public static KMSThrottlingExceptionUnmarshaller Instance { get; }
    private static KMSThrottlingExceptionUnmarshaller();
    public sealed virtual KMSThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListShardsRequestMarshaller : object {
    private static ListShardsRequestMarshaller _instance;
    public static ListShardsRequestMarshaller Instance { get; }
    private static ListShardsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListShardsRequest publicRequest);
    internal static ListShardsRequestMarshaller GetInstance();
    public static ListShardsRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListShardsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListShardsResponseUnmarshaller _instance;
    public static ListShardsResponseUnmarshaller Instance { get; }
    private static ListShardsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListShardsResponseUnmarshaller GetInstance();
    public static ListShardsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamConsumersRequestMarshaller : object {
    private static ListStreamConsumersRequestMarshaller _instance;
    public static ListStreamConsumersRequestMarshaller Instance { get; }
    private static ListStreamConsumersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStreamConsumersRequest publicRequest);
    internal static ListStreamConsumersRequestMarshaller GetInstance();
    public static ListStreamConsumersRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamConsumersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListStreamConsumersResponseUnmarshaller _instance;
    public static ListStreamConsumersResponseUnmarshaller Instance { get; }
    private static ListStreamConsumersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStreamConsumersResponseUnmarshaller GetInstance();
    public static ListStreamConsumersResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller : object {
    private static ListStreamsRequestMarshaller _instance;
    public static ListStreamsRequestMarshaller Instance { get; }
    private static ListStreamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStreamsRequest publicRequest);
    internal static ListStreamsRequestMarshaller GetInstance();
    public static ListStreamsRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListStreamsResponseUnmarshaller _instance;
    public static ListStreamsResponseUnmarshaller Instance { get; }
    private static ListStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStreamsResponseUnmarshaller GetInstance();
    public static ListStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListTagsForStreamRequestMarshaller : object {
    private static ListTagsForStreamRequestMarshaller _instance;
    public static ListTagsForStreamRequestMarshaller Instance { get; }
    private static ListTagsForStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForStreamRequest publicRequest);
    internal static ListTagsForStreamRequestMarshaller GetInstance();
    public static ListTagsForStreamRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListTagsForStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForStreamResponseUnmarshaller _instance;
    public static ListTagsForStreamResponseUnmarshaller Instance { get; }
    private static ListTagsForStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForStreamResponseUnmarshaller GetInstance();
    public static ListTagsForStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.MergeShardsRequestMarshaller : object {
    private static MergeShardsRequestMarshaller _instance;
    public static MergeShardsRequestMarshaller Instance { get; }
    private static MergeShardsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MergeShardsRequest publicRequest);
    internal static MergeShardsRequestMarshaller GetInstance();
    public static MergeShardsRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.MergeShardsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static MergeShardsResponseUnmarshaller _instance;
    public static MergeShardsResponseUnmarshaller Instance { get; }
    private static MergeShardsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MergeShardsResponseUnmarshaller GetInstance();
    public static MergeShardsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller : object {
    private static ProvisionedThroughputExceededExceptionUnmarshaller _instance;
    public static ProvisionedThroughputExceededExceptionUnmarshaller Instance { get; }
    private static ProvisionedThroughputExceededExceptionUnmarshaller();
    public sealed virtual ProvisionedThroughputExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ProvisionedThroughputExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ProvisionedThroughputExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller : object {
    private static PutRecordRequestMarshaller _instance;
    public static PutRecordRequestMarshaller Instance { get; }
    private static PutRecordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRecordRequest publicRequest);
    internal static PutRecordRequestMarshaller GetInstance();
    public static PutRecordRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRecordResponseUnmarshaller _instance;
    public static PutRecordResponseUnmarshaller Instance { get; }
    private static PutRecordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRecordResponseUnmarshaller GetInstance();
    public static PutRecordResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsRequestEntryMarshaller : object {
    public static PutRecordsRequestEntryMarshaller Instance;
    private static PutRecordsRequestEntryMarshaller();
    public sealed virtual void Marshall(PutRecordsRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsRequestMarshaller : object {
    private static PutRecordsRequestMarshaller _instance;
    public static PutRecordsRequestMarshaller Instance { get; }
    private static PutRecordsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRecordsRequest publicRequest);
    internal static PutRecordsRequestMarshaller GetInstance();
    public static PutRecordsRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRecordsResponseUnmarshaller _instance;
    public static PutRecordsResponseUnmarshaller Instance { get; }
    private static PutRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRecordsResponseUnmarshaller GetInstance();
    public static PutRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsResultEntryUnmarshaller : object {
    private static PutRecordsResultEntryUnmarshaller _instance;
    public static PutRecordsResultEntryUnmarshaller Instance { get; }
    private static PutRecordsResultEntryUnmarshaller();
    private sealed virtual override PutRecordsResultEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.PutRecordsResultEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PutRecordsResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static PutRecordsResultEntryUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RecordUnmarshaller : object {
    private static RecordUnmarshaller _instance;
    public static RecordUnmarshaller Instance { get; }
    private static RecordUnmarshaller();
    private sealed virtual override Record Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.Record,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Record Unmarshall(JsonUnmarshallerContext context);
    public static RecordUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RegisterStreamConsumerRequestMarshaller : object {
    private static RegisterStreamConsumerRequestMarshaller _instance;
    public static RegisterStreamConsumerRequestMarshaller Instance { get; }
    private static RegisterStreamConsumerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterStreamConsumerRequest publicRequest);
    internal static RegisterStreamConsumerRequestMarshaller GetInstance();
    public static RegisterStreamConsumerRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RegisterStreamConsumerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterStreamConsumerResponseUnmarshaller _instance;
    public static RegisterStreamConsumerResponseUnmarshaller Instance { get; }
    private static RegisterStreamConsumerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterStreamConsumerResponseUnmarshaller GetInstance();
    public static RegisterStreamConsumerResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RemoveTagsFromStreamRequestMarshaller : object {
    private static RemoveTagsFromStreamRequestMarshaller _instance;
    public static RemoveTagsFromStreamRequestMarshaller Instance { get; }
    private static RemoveTagsFromStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsFromStreamRequest publicRequest);
    internal static RemoveTagsFromStreamRequestMarshaller GetInstance();
    public static RemoveTagsFromStreamRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RemoveTagsFromStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveTagsFromStreamResponseUnmarshaller _instance;
    public static RemoveTagsFromStreamResponseUnmarshaller Instance { get; }
    private static RemoveTagsFromStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsFromStreamResponseUnmarshaller GetInstance();
    public static RemoveTagsFromStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller : object {
    private static ResourceInUseExceptionUnmarshaller _instance;
    public static ResourceInUseExceptionUnmarshaller Instance { get; }
    private static ResourceInUseExceptionUnmarshaller();
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.SequenceNumberRangeUnmarshaller : object {
    private static SequenceNumberRangeUnmarshaller _instance;
    public static SequenceNumberRangeUnmarshaller Instance { get; }
    private static SequenceNumberRangeUnmarshaller();
    private sealed virtual override SequenceNumberRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.SequenceNumberRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SequenceNumberRange Unmarshall(JsonUnmarshallerContext context);
    public static SequenceNumberRangeUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ShardFilterMarshaller : object {
    public static ShardFilterMarshaller Instance;
    private static ShardFilterMarshaller();
    public sealed virtual void Marshall(ShardFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ShardUnmarshaller : object {
    private static ShardUnmarshaller _instance;
    public static ShardUnmarshaller Instance { get; }
    private static ShardUnmarshaller();
    private sealed virtual override Shard Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.Shard,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Shard Unmarshall(JsonUnmarshallerContext context);
    public static ShardUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.SplitShardRequestMarshaller : object {
    private static SplitShardRequestMarshaller _instance;
    public static SplitShardRequestMarshaller Instance { get; }
    private static SplitShardRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SplitShardRequest publicRequest);
    internal static SplitShardRequestMarshaller GetInstance();
    public static SplitShardRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.SplitShardResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SplitShardResponseUnmarshaller _instance;
    public static SplitShardResponseUnmarshaller Instance { get; }
    private static SplitShardResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SplitShardResponseUnmarshaller GetInstance();
    public static SplitShardResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StartStreamEncryptionRequestMarshaller : object {
    private static StartStreamEncryptionRequestMarshaller _instance;
    public static StartStreamEncryptionRequestMarshaller Instance { get; }
    private static StartStreamEncryptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartStreamEncryptionRequest publicRequest);
    internal static StartStreamEncryptionRequestMarshaller GetInstance();
    public static StartStreamEncryptionRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StartStreamEncryptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartStreamEncryptionResponseUnmarshaller _instance;
    public static StartStreamEncryptionResponseUnmarshaller Instance { get; }
    private static StartStreamEncryptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartStreamEncryptionResponseUnmarshaller GetInstance();
    public static StartStreamEncryptionResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StopStreamEncryptionRequestMarshaller : object {
    private static StopStreamEncryptionRequestMarshaller _instance;
    public static StopStreamEncryptionRequestMarshaller Instance { get; }
    private static StopStreamEncryptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopStreamEncryptionRequest publicRequest);
    internal static StopStreamEncryptionRequestMarshaller GetInstance();
    public static StopStreamEncryptionRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StopStreamEncryptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopStreamEncryptionResponseUnmarshaller _instance;
    public static StopStreamEncryptionResponseUnmarshaller Instance { get; }
    private static StopStreamEncryptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopStreamEncryptionResponseUnmarshaller GetInstance();
    public static StopStreamEncryptionResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StreamDescriptionSummaryUnmarshaller : object {
    private static StreamDescriptionSummaryUnmarshaller _instance;
    public static StreamDescriptionSummaryUnmarshaller Instance { get; }
    private static StreamDescriptionSummaryUnmarshaller();
    private sealed virtual override StreamDescriptionSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.StreamDescriptionSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamDescriptionSummary Unmarshall(JsonUnmarshallerContext context);
    public static StreamDescriptionSummaryUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StreamDescriptionUnmarshaller : object {
    private static StreamDescriptionUnmarshaller _instance;
    public static StreamDescriptionUnmarshaller Instance { get; }
    private static StreamDescriptionUnmarshaller();
    private sealed virtual override StreamDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.StreamDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamDescription Unmarshall(JsonUnmarshallerContext context);
    public static StreamDescriptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StreamModeDetailsMarshaller : object {
    public static StreamModeDetailsMarshaller Instance;
    private static StreamModeDetailsMarshaller();
    public sealed virtual void Marshall(StreamModeDetails requestObject, JsonMarshallerContext context);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StreamModeDetailsUnmarshaller : object {
    private static StreamModeDetailsUnmarshaller _instance;
    public static StreamModeDetailsUnmarshaller Instance { get; }
    private static StreamModeDetailsUnmarshaller();
    private sealed virtual override StreamModeDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.StreamModeDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamModeDetails Unmarshall(JsonUnmarshallerContext context);
    public static StreamModeDetailsUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StreamSummaryUnmarshaller : object {
    private static StreamSummaryUnmarshaller _instance;
    public static StreamSummaryUnmarshaller Instance { get; }
    private static StreamSummaryUnmarshaller();
    private sealed virtual override StreamSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.StreamSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamSummary Unmarshall(JsonUnmarshallerContext context);
    public static StreamSummaryUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.UpdateShardCountRequestMarshaller : object {
    private static UpdateShardCountRequestMarshaller _instance;
    public static UpdateShardCountRequestMarshaller Instance { get; }
    private static UpdateShardCountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateShardCountRequest publicRequest);
    internal static UpdateShardCountRequestMarshaller GetInstance();
    public static UpdateShardCountRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.UpdateShardCountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateShardCountResponseUnmarshaller _instance;
    public static UpdateShardCountResponseUnmarshaller Instance { get; }
    private static UpdateShardCountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateShardCountResponseUnmarshaller GetInstance();
    public static UpdateShardCountResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.UpdateStreamModeRequestMarshaller : object {
    private static UpdateStreamModeRequestMarshaller _instance;
    public static UpdateStreamModeRequestMarshaller Instance { get; }
    private static UpdateStreamModeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateStreamModeRequest publicRequest);
    internal static UpdateStreamModeRequestMarshaller GetInstance();
    public static UpdateStreamModeRequestMarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.UpdateStreamModeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateStreamModeResponseUnmarshaller _instance;
    public static UpdateStreamModeResponseUnmarshaller Instance { get; }
    private static UpdateStreamModeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateStreamModeResponseUnmarshaller GetInstance();
    public static UpdateStreamModeResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller : object {
    private static ValidationExceptionUnmarshaller _instance;
    public static ValidationExceptionUnmarshaller Instance { get; }
    private static ValidationExceptionUnmarshaller();
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ValidationExceptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.InvalidArgumentException : AmazonKinesisException {
    public InvalidArgumentException(string message);
    public InvalidArgumentException(string message, Exception innerException);
    public InvalidArgumentException(Exception innerException);
    public InvalidArgumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidArgumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.KinesisPaginatorFactory : object {
    private IAmazonKinesis client;
    internal KinesisPaginatorFactory(IAmazonKinesis client);
    public sealed virtual IListStreamConsumersPaginator ListStreamConsumers(ListStreamConsumersRequest request);
    public sealed virtual IListStreamsPaginator ListStreams(ListStreamsRequest request);
}
public class Amazon.Kinesis.Model.KMSAccessDeniedException : AmazonKinesisException {
    public KMSAccessDeniedException(string message);
    public KMSAccessDeniedException(string message, Exception innerException);
    public KMSAccessDeniedException(Exception innerException);
    public KMSAccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSAccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.KMSDisabledException : AmazonKinesisException {
    public KMSDisabledException(string message);
    public KMSDisabledException(string message, Exception innerException);
    public KMSDisabledException(Exception innerException);
    public KMSDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSDisabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.KMSInvalidStateException : AmazonKinesisException {
    public KMSInvalidStateException(string message);
    public KMSInvalidStateException(string message, Exception innerException);
    public KMSInvalidStateException(Exception innerException);
    public KMSInvalidStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSInvalidStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.KMSNotFoundException : AmazonKinesisException {
    public KMSNotFoundException(string message);
    public KMSNotFoundException(string message, Exception innerException);
    public KMSNotFoundException(Exception innerException);
    public KMSNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.KMSOptInRequiredException : AmazonKinesisException {
    public KMSOptInRequiredException(string message);
    public KMSOptInRequiredException(string message, Exception innerException);
    public KMSOptInRequiredException(Exception innerException);
    public KMSOptInRequiredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSOptInRequiredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.KMSThrottlingException : AmazonKinesisException {
    public KMSThrottlingException(string message);
    public KMSThrottlingException(string message, Exception innerException);
    public KMSThrottlingException(Exception innerException);
    public KMSThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.LimitExceededException : AmazonKinesisException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.ListShardsRequest : AmazonKinesisRequest {
    private string _exclusiveStartShardId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private ShardFilter _shardFilter;
    private string _streamARN;
    private Nullable`1<DateTime> _streamCreationTimestamp;
    private string _streamName;
    [AWSPropertyAttribute]
public string ExclusiveStartShardId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public ShardFilter ShardFilter { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public Nullable`1<DateTime> StreamCreationTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public string get_ExclusiveStartShardId();
    public void set_ExclusiveStartShardId(string value);
    internal bool IsSetExclusiveStartShardId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ShardFilter get_ShardFilter();
    public void set_ShardFilter(ShardFilter value);
    internal bool IsSetShardFilter();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public Nullable`1<DateTime> get_StreamCreationTimestamp();
    public void set_StreamCreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStreamCreationTimestamp();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.ListShardsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Shard> _shards;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Shard> Shards { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Shard> get_Shards();
    public void set_Shards(List`1<Shard> value);
    internal bool IsSetShards();
}
internal class Amazon.Kinesis.Model.ListStreamConsumersPaginator : object {
    private IAmazonKinesis _client;
    private ListStreamConsumersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListStreamConsumersResponse> Responses { get; }
    internal ListStreamConsumersPaginator(IAmazonKinesis client, ListStreamConsumersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListStreamConsumersResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Kinesis.Model.ListStreamConsumersPaginator/<Amazon-Runtime-IPaginator<Amazon-Kinesis-Model-ListStreamConsumersResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListStreamConsumersResponse> Amazon.Runtime.IPaginator<Amazon.Kinesis.Model.ListStreamConsumersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kinesis.Model.ListStreamConsumersRequest : AmazonKinesisRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _streamARN;
    private Nullable`1<DateTime> _streamCreationTimestamp;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public Nullable`1<DateTime> StreamCreationTimestamp { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public Nullable`1<DateTime> get_StreamCreationTimestamp();
    public void set_StreamCreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStreamCreationTimestamp();
}
public class Amazon.Kinesis.Model.ListStreamConsumersResponse : AmazonWebServiceResponse {
    private List`1<Consumer> _consumers;
    private string _nextToken;
    public List`1<Consumer> Consumers { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Consumer> get_Consumers();
    public void set_Consumers(List`1<Consumer> value);
    internal bool IsSetConsumers();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Kinesis.Model.ListStreamsPaginator : object {
    private IAmazonKinesis _client;
    private ListStreamsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListStreamsResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> StreamNames { get; }
    public IPaginatedEnumerable`1<StreamSummary> StreamSummaries { get; }
    internal ListStreamsPaginator(IAmazonKinesis client, ListStreamsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListStreamsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_StreamNames();
    public sealed virtual IPaginatedEnumerable`1<StreamSummary> get_StreamSummaries();
    [AsyncIteratorStateMachineAttribute("Amazon.Kinesis.Model.ListStreamsPaginator/<Amazon-Runtime-IPaginator<Amazon-Kinesis-Model-ListStreamsResponse>-PaginateAsync>d__10")]
private sealed virtual override IAsyncEnumerable`1<ListStreamsResponse> Amazon.Runtime.IPaginator<Amazon.Kinesis.Model.ListStreamsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Kinesis.Model.ListStreamsRequest : AmazonKinesisRequest {
    private string _exclusiveStartStreamName;
    private Nullable`1<int> _limit;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ExclusiveStartStreamName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_ExclusiveStartStreamName();
    public void set_ExclusiveStartStreamName(string value);
    internal bool IsSetExclusiveStartStreamName();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Kinesis.Model.ListStreamsResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _hasMoreStreams;
    private string _nextToken;
    private List`1<string> _streamNames;
    private List`1<StreamSummary> _streamSummaries;
    [AWSPropertyAttribute]
public Nullable`1<bool> HasMoreStreams { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> StreamNames { get; public set; }
    public List`1<StreamSummary> StreamSummaries { get; public set; }
    public Nullable`1<bool> get_HasMoreStreams();
    public void set_HasMoreStreams(Nullable`1<bool> value);
    internal bool IsSetHasMoreStreams();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_StreamNames();
    public void set_StreamNames(List`1<string> value);
    internal bool IsSetStreamNames();
    public List`1<StreamSummary> get_StreamSummaries();
    public void set_StreamSummaries(List`1<StreamSummary> value);
    internal bool IsSetStreamSummaries();
}
public class Amazon.Kinesis.Model.ListTagsForStreamRequest : AmazonKinesisRequest {
    private string _exclusiveStartTagKey;
    private Nullable`1<int> _limit;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public string ExclusiveStartTagKey { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public string get_ExclusiveStartTagKey();
    public void set_ExclusiveStartTagKey(string value);
    internal bool IsSetExclusiveStartTagKey();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.ListTagsForStreamResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _hasMoreTags;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public Nullable`1<bool> HasMoreTags { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_HasMoreTags();
    public void set_HasMoreTags(Nullable`1<bool> value);
    internal bool IsSetHasMoreTags();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Kinesis.Model.MergeShardsRequest : AmazonKinesisRequest {
    private string _adjacentShardToMerge;
    private string _shardToMerge;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public string AdjacentShardToMerge { get; public set; }
    [AWSPropertyAttribute]
public string ShardToMerge { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public string get_AdjacentShardToMerge();
    public void set_AdjacentShardToMerge(string value);
    internal bool IsSetAdjacentShardToMerge();
    public string get_ShardToMerge();
    public void set_ShardToMerge(string value);
    internal bool IsSetShardToMerge();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.MergeShardsResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.ProvisionedThroughputExceededException : AmazonKinesisException {
    public ProvisionedThroughputExceededException(string message);
    public ProvisionedThroughputExceededException(string message, Exception innerException);
    public ProvisionedThroughputExceededException(Exception innerException);
    public ProvisionedThroughputExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ProvisionedThroughputExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.PutRecordRequest : AmazonKinesisRequest {
    private MemoryStream _data;
    private string _explicitHashKey;
    private string _partitionKey;
    private string _sequenceNumberForOrdering;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public MemoryStream Data { get; public set; }
    public string ExplicitHashKey { get; public set; }
    [AWSPropertyAttribute]
public string PartitionKey { get; public set; }
    public string SequenceNumberForOrdering { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
    public string get_ExplicitHashKey();
    public void set_ExplicitHashKey(string value);
    internal bool IsSetExplicitHashKey();
    public string get_PartitionKey();
    public void set_PartitionKey(string value);
    internal bool IsSetPartitionKey();
    public string get_SequenceNumberForOrdering();
    public void set_SequenceNumberForOrdering(string value);
    internal bool IsSetSequenceNumberForOrdering();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.PutRecordResponse : AmazonWebServiceResponse {
    private EncryptionType _encryptionType;
    private string _sequenceNumber;
    private string _shardId;
    public EncryptionType EncryptionType { get; public set; }
    [AWSPropertyAttribute]
public string SequenceNumber { get; public set; }
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.Kinesis.Model.PutRecordsRequest : AmazonKinesisRequest {
    private List`1<PutRecordsRequestEntry> _records;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public List`1<PutRecordsRequestEntry> Records { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public List`1<PutRecordsRequestEntry> get_Records();
    public void set_Records(List`1<PutRecordsRequestEntry> value);
    internal bool IsSetRecords();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.PutRecordsRequestEntry : object {
    private MemoryStream _data;
    private string _explicitHashKey;
    private string _partitionKey;
    [AWSPropertyAttribute]
public MemoryStream Data { get; public set; }
    public string ExplicitHashKey { get; public set; }
    [AWSPropertyAttribute]
public string PartitionKey { get; public set; }
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
    public string get_ExplicitHashKey();
    public void set_ExplicitHashKey(string value);
    internal bool IsSetExplicitHashKey();
    public string get_PartitionKey();
    public void set_PartitionKey(string value);
    internal bool IsSetPartitionKey();
}
public class Amazon.Kinesis.Model.PutRecordsResponse : AmazonWebServiceResponse {
    private EncryptionType _encryptionType;
    private Nullable`1<int> _failedRecordCount;
    private List`1<PutRecordsResultEntry> _records;
    public EncryptionType EncryptionType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> FailedRecordCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<PutRecordsResultEntry> Records { get; public set; }
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public Nullable`1<int> get_FailedRecordCount();
    public void set_FailedRecordCount(Nullable`1<int> value);
    internal bool IsSetFailedRecordCount();
    public List`1<PutRecordsResultEntry> get_Records();
    public void set_Records(List`1<PutRecordsResultEntry> value);
    internal bool IsSetRecords();
}
public class Amazon.Kinesis.Model.PutRecordsResultEntry : object {
    private string _errorCode;
    private string _errorMessage;
    private string _sequenceNumber;
    private string _shardId;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public string SequenceNumber { get; public set; }
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.Kinesis.Model.PutResourcePolicyRequest : AmazonKinesisRequest {
    private string _policy;
    private string _resourceARN;
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.Kinesis.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.Record : object {
    private Nullable`1<DateTime> _approximateArrivalTimestamp;
    private MemoryStream _data;
    private EncryptionType _encryptionType;
    private string _partitionKey;
    private string _sequenceNumber;
    public Nullable`1<DateTime> ApproximateArrivalTimestamp { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream Data { get; public set; }
    public EncryptionType EncryptionType { get; public set; }
    [AWSPropertyAttribute]
public string PartitionKey { get; public set; }
    [AWSPropertyAttribute]
public string SequenceNumber { get; public set; }
    public Nullable`1<DateTime> get_ApproximateArrivalTimestamp();
    public void set_ApproximateArrivalTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetApproximateArrivalTimestamp();
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public string get_PartitionKey();
    public void set_PartitionKey(string value);
    internal bool IsSetPartitionKey();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
}
public class Amazon.Kinesis.Model.RegisterStreamConsumerRequest : AmazonKinesisRequest {
    private string _consumerName;
    private string _streamARN;
    [AWSPropertyAttribute]
public string ConsumerName { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public string get_ConsumerName();
    public void set_ConsumerName(string value);
    internal bool IsSetConsumerName();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
}
public class Amazon.Kinesis.Model.RegisterStreamConsumerResponse : AmazonWebServiceResponse {
    private Consumer _consumer;
    [AWSPropertyAttribute]
public Consumer Consumer { get; public set; }
    public Consumer get_Consumer();
    public void set_Consumer(Consumer value);
    internal bool IsSetConsumer();
}
public class Amazon.Kinesis.Model.RemoveTagsFromStreamRequest : AmazonKinesisRequest {
    private string _streamARN;
    private string _streamName;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.Kinesis.Model.RemoveTagsFromStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.ResourceInUseException : AmazonKinesisException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.ResourceNotFoundException : AmazonKinesisException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.SequenceNumberRange : object {
    private string _endingSequenceNumber;
    private string _startingSequenceNumber;
    public string EndingSequenceNumber { get; public set; }
    [AWSPropertyAttribute]
public string StartingSequenceNumber { get; public set; }
    public string get_EndingSequenceNumber();
    public void set_EndingSequenceNumber(string value);
    internal bool IsSetEndingSequenceNumber();
    public string get_StartingSequenceNumber();
    public void set_StartingSequenceNumber(string value);
    internal bool IsSetStartingSequenceNumber();
}
public class Amazon.Kinesis.Model.Shard : object {
    private string _adjacentParentShardId;
    private HashKeyRange _hashKeyRange;
    private string _parentShardId;
    private SequenceNumberRange _sequenceNumberRange;
    private string _shardId;
    [AWSPropertyAttribute]
public string AdjacentParentShardId { get; public set; }
    [AWSPropertyAttribute]
public HashKeyRange HashKeyRange { get; public set; }
    [AWSPropertyAttribute]
public string ParentShardId { get; public set; }
    [AWSPropertyAttribute]
public SequenceNumberRange SequenceNumberRange { get; public set; }
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    public string get_AdjacentParentShardId();
    public void set_AdjacentParentShardId(string value);
    internal bool IsSetAdjacentParentShardId();
    public HashKeyRange get_HashKeyRange();
    public void set_HashKeyRange(HashKeyRange value);
    internal bool IsSetHashKeyRange();
    public string get_ParentShardId();
    public void set_ParentShardId(string value);
    internal bool IsSetParentShardId();
    public SequenceNumberRange get_SequenceNumberRange();
    public void set_SequenceNumberRange(SequenceNumberRange value);
    internal bool IsSetSequenceNumberRange();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.Kinesis.Model.ShardFilter : object {
    private string _shardId;
    private Nullable`1<DateTime> _timestamp;
    private ShardFilterType _type;
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    [AWSPropertyAttribute]
public ShardFilterType Type { get; public set; }
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
    public ShardFilterType get_Type();
    public void set_Type(ShardFilterType value);
    internal bool IsSetType();
}
public class Amazon.Kinesis.Model.SplitShardRequest : AmazonKinesisRequest {
    private string _newStartingHashKey;
    private string _shardToSplit;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public string NewStartingHashKey { get; public set; }
    [AWSPropertyAttribute]
public string ShardToSplit { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public string get_NewStartingHashKey();
    public void set_NewStartingHashKey(string value);
    internal bool IsSetNewStartingHashKey();
    public string get_ShardToSplit();
    public void set_ShardToSplit(string value);
    internal bool IsSetShardToSplit();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.SplitShardResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.StartStreamEncryptionRequest : AmazonKinesisRequest {
    private EncryptionType _encryptionType;
    private string _keyId;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public EncryptionType EncryptionType { get; public set; }
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.StartStreamEncryptionResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.StopStreamEncryptionRequest : AmazonKinesisRequest {
    private EncryptionType _encryptionType;
    private string _keyId;
    private string _streamARN;
    private string _streamName;
    [AWSPropertyAttribute]
public EncryptionType EncryptionType { get; public set; }
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.StopStreamEncryptionResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.StreamDescription : object {
    private EncryptionType _encryptionType;
    private List`1<EnhancedMetrics> _enhancedMonitoring;
    private Nullable`1<bool> _hasMoreShards;
    private string _keyId;
    private Nullable`1<int> _retentionPeriodHours;
    private List`1<Shard> _shards;
    private string _streamARN;
    private Nullable`1<DateTime> _streamCreationTimestamp;
    private StreamModeDetails _streamModeDetails;
    private string _streamName;
    private StreamStatus _streamStatus;
    public EncryptionType EncryptionType { get; public set; }
    [AWSPropertyAttribute]
public List`1<EnhancedMetrics> EnhancedMonitoring { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> HasMoreShards { get; public set; }
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriodHours { get; public set; }
    [AWSPropertyAttribute]
public List`1<Shard> Shards { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StreamCreationTimestamp { get; public set; }
    public StreamModeDetails StreamModeDetails { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    [AWSPropertyAttribute]
public StreamStatus StreamStatus { get; public set; }
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public List`1<EnhancedMetrics> get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(List`1<EnhancedMetrics> value);
    internal bool IsSetEnhancedMonitoring();
    public Nullable`1<bool> get_HasMoreShards();
    public void set_HasMoreShards(Nullable`1<bool> value);
    internal bool IsSetHasMoreShards();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public Nullable`1<int> get_RetentionPeriodHours();
    public void set_RetentionPeriodHours(Nullable`1<int> value);
    internal bool IsSetRetentionPeriodHours();
    public List`1<Shard> get_Shards();
    public void set_Shards(List`1<Shard> value);
    internal bool IsSetShards();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public Nullable`1<DateTime> get_StreamCreationTimestamp();
    public void set_StreamCreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStreamCreationTimestamp();
    public StreamModeDetails get_StreamModeDetails();
    public void set_StreamModeDetails(StreamModeDetails value);
    internal bool IsSetStreamModeDetails();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public StreamStatus get_StreamStatus();
    public void set_StreamStatus(StreamStatus value);
    internal bool IsSetStreamStatus();
}
public class Amazon.Kinesis.Model.StreamDescriptionSummary : object {
    private Nullable`1<int> _consumerCount;
    private EncryptionType _encryptionType;
    private List`1<EnhancedMetrics> _enhancedMonitoring;
    private string _keyId;
    private Nullable`1<int> _openShardCount;
    private Nullable`1<int> _retentionPeriodHours;
    private string _streamARN;
    private Nullable`1<DateTime> _streamCreationTimestamp;
    private StreamModeDetails _streamModeDetails;
    private string _streamName;
    private StreamStatus _streamStatus;
    [AWSPropertyAttribute]
public Nullable`1<int> ConsumerCount { get; public set; }
    public EncryptionType EncryptionType { get; public set; }
    [AWSPropertyAttribute]
public List`1<EnhancedMetrics> EnhancedMonitoring { get; public set; }
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> OpenShardCount { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriodHours { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StreamCreationTimestamp { get; public set; }
    public StreamModeDetails StreamModeDetails { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    [AWSPropertyAttribute]
public StreamStatus StreamStatus { get; public set; }
    public Nullable`1<int> get_ConsumerCount();
    public void set_ConsumerCount(Nullable`1<int> value);
    internal bool IsSetConsumerCount();
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public List`1<EnhancedMetrics> get_EnhancedMonitoring();
    public void set_EnhancedMonitoring(List`1<EnhancedMetrics> value);
    internal bool IsSetEnhancedMonitoring();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public Nullable`1<int> get_OpenShardCount();
    public void set_OpenShardCount(Nullable`1<int> value);
    internal bool IsSetOpenShardCount();
    public Nullable`1<int> get_RetentionPeriodHours();
    public void set_RetentionPeriodHours(Nullable`1<int> value);
    internal bool IsSetRetentionPeriodHours();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public Nullable`1<DateTime> get_StreamCreationTimestamp();
    public void set_StreamCreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStreamCreationTimestamp();
    public StreamModeDetails get_StreamModeDetails();
    public void set_StreamModeDetails(StreamModeDetails value);
    internal bool IsSetStreamModeDetails();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public StreamStatus get_StreamStatus();
    public void set_StreamStatus(StreamStatus value);
    internal bool IsSetStreamStatus();
}
public class Amazon.Kinesis.Model.StreamModeDetails : object {
    private StreamMode _streamMode;
    [AWSPropertyAttribute]
public StreamMode StreamMode { get; public set; }
    public StreamMode get_StreamMode();
    public void set_StreamMode(StreamMode value);
    internal bool IsSetStreamMode();
}
public class Amazon.Kinesis.Model.StreamSummary : object {
    private string _streamARN;
    private Nullable`1<DateTime> _streamCreationTimestamp;
    private StreamModeDetails _streamModeDetails;
    private string _streamName;
    private StreamStatus _streamStatus;
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public Nullable`1<DateTime> StreamCreationTimestamp { get; public set; }
    public StreamModeDetails StreamModeDetails { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    [AWSPropertyAttribute]
public StreamStatus StreamStatus { get; public set; }
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public Nullable`1<DateTime> get_StreamCreationTimestamp();
    public void set_StreamCreationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStreamCreationTimestamp();
    public StreamModeDetails get_StreamModeDetails();
    public void set_StreamModeDetails(StreamModeDetails value);
    internal bool IsSetStreamModeDetails();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public StreamStatus get_StreamStatus();
    public void set_StreamStatus(StreamStatus value);
    internal bool IsSetStreamStatus();
}
public class Amazon.Kinesis.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Kinesis.Model.UpdateShardCountRequest : AmazonKinesisRequest {
    private ScalingType _scalingType;
    private string _streamARN;
    private string _streamName;
    private Nullable`1<int> _targetShardCount;
    [AWSPropertyAttribute]
public ScalingType ScalingType { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TargetShardCount { get; public set; }
    public ScalingType get_ScalingType();
    public void set_ScalingType(ScalingType value);
    internal bool IsSetScalingType();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public Nullable`1<int> get_TargetShardCount();
    public void set_TargetShardCount(Nullable`1<int> value);
    internal bool IsSetTargetShardCount();
}
public class Amazon.Kinesis.Model.UpdateShardCountResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _currentShardCount;
    private string _streamARN;
    private string _streamName;
    private Nullable`1<int> _targetShardCount;
    [AWSPropertyAttribute]
public Nullable`1<int> CurrentShardCount { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TargetShardCount { get; public set; }
    public Nullable`1<int> get_CurrentShardCount();
    public void set_CurrentShardCount(Nullable`1<int> value);
    internal bool IsSetCurrentShardCount();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public Nullable`1<int> get_TargetShardCount();
    public void set_TargetShardCount(Nullable`1<int> value);
    internal bool IsSetTargetShardCount();
}
public class Amazon.Kinesis.Model.UpdateStreamModeRequest : AmazonKinesisRequest {
    private string _streamARN;
    private StreamModeDetails _streamModeDetails;
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    [AWSPropertyAttribute]
public StreamModeDetails StreamModeDetails { get; public set; }
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public StreamModeDetails get_StreamModeDetails();
    public void set_StreamModeDetails(StreamModeDetails value);
    internal bool IsSetStreamModeDetails();
}
public class Amazon.Kinesis.Model.UpdateStreamModeResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.ValidationException : AmazonKinesisException {
    public ValidationException(string message);
    public ValidationException(string message, Exception innerException);
    public ValidationException(Exception innerException);
    public ValidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ValidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.ScalingType : ConstantClass {
    public static ScalingType UNIFORM_SCALING;
    public ScalingType(string value);
    private static ScalingType();
    public static ScalingType FindValue(string value);
    public static ScalingType op_Implicit(string value);
}
public class Amazon.Kinesis.ShardFilterType : ConstantClass {
    public static ShardFilterType AFTER_SHARD_ID;
    public static ShardFilterType AT_LATEST;
    public static ShardFilterType AT_TIMESTAMP;
    public static ShardFilterType AT_TRIM_HORIZON;
    public static ShardFilterType FROM_TIMESTAMP;
    public static ShardFilterType FROM_TRIM_HORIZON;
    public ShardFilterType(string value);
    private static ShardFilterType();
    public static ShardFilterType FindValue(string value);
    public static ShardFilterType op_Implicit(string value);
}
public class Amazon.Kinesis.ShardIteratorType : ConstantClass {
    public static ShardIteratorType AFTER_SEQUENCE_NUMBER;
    public static ShardIteratorType AT_SEQUENCE_NUMBER;
    public static ShardIteratorType AT_TIMESTAMP;
    public static ShardIteratorType LATEST;
    public static ShardIteratorType TRIM_HORIZON;
    public ShardIteratorType(string value);
    private static ShardIteratorType();
    public static ShardIteratorType FindValue(string value);
    public static ShardIteratorType op_Implicit(string value);
}
public class Amazon.Kinesis.StreamMode : ConstantClass {
    public static StreamMode ON_DEMAND;
    public static StreamMode PROVISIONED;
    public StreamMode(string value);
    private static StreamMode();
    public static StreamMode FindValue(string value);
    public static StreamMode op_Implicit(string value);
}
public class Amazon.Kinesis.StreamStatus : ConstantClass {
    public static StreamStatus ACTIVE;
    public static StreamStatus CREATING;
    public static StreamStatus DELETING;
    public static StreamStatus UPDATING;
    public StreamStatus(string value);
    private static StreamStatus();
    public static StreamStatus FindValue(string value);
    public static StreamStatus op_Implicit(string value);
}
