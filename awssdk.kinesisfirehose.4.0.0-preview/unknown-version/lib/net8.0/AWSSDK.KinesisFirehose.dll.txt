public class Amazon.KinesisFirehose.AmazonKinesisFirehoseClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonKinesisFirehoseClient(RegionEndpoint region);
    public AmazonKinesisFirehoseClient(AmazonKinesisFirehoseConfig config);
    public AmazonKinesisFirehoseClient(AWSCredentials credentials);
    public AmazonKinesisFirehoseClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonKinesisFirehoseClient(AWSCredentials credentials, AmazonKinesisFirehoseConfig clientConfig);
    public AmazonKinesisFirehoseClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonKinesisFirehoseClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonKinesisFirehoseClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonKinesisFirehoseConfig clientConfig);
    public AmazonKinesisFirehoseClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonKinesisFirehoseClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonKinesisFirehoseClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonKinesisFirehoseConfig clientConfig);
    private static AmazonKinesisFirehoseClient();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual CreateDeliveryStreamResponse CreateDeliveryStream(CreateDeliveryStreamRequest request);
    public virtual Task`1<CreateDeliveryStreamResponse> CreateDeliveryStreamAsync(CreateDeliveryStreamRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDeliveryStreamResponse DeleteDeliveryStream(DeleteDeliveryStreamRequest request);
    public virtual Task`1<DeleteDeliveryStreamResponse> DeleteDeliveryStreamAsync(string deliveryStreamName, CancellationToken cancellationToken);
    public virtual Task`1<DeleteDeliveryStreamResponse> DeleteDeliveryStreamAsync(DeleteDeliveryStreamRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDeliveryStreamResponse DescribeDeliveryStream(DescribeDeliveryStreamRequest request);
    public virtual Task`1<DescribeDeliveryStreamResponse> DescribeDeliveryStreamAsync(DescribeDeliveryStreamRequest request, CancellationToken cancellationToken);
    internal virtual ListDeliveryStreamsResponse ListDeliveryStreams();
    internal virtual ListDeliveryStreamsResponse ListDeliveryStreams(ListDeliveryStreamsRequest request);
    public virtual Task`1<ListDeliveryStreamsResponse> ListDeliveryStreamsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListDeliveryStreamsResponse> ListDeliveryStreamsAsync(ListDeliveryStreamsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForDeliveryStreamResponse ListTagsForDeliveryStream(ListTagsForDeliveryStreamRequest request);
    public virtual Task`1<ListTagsForDeliveryStreamResponse> ListTagsForDeliveryStreamAsync(ListTagsForDeliveryStreamRequest request, CancellationToken cancellationToken);
    internal virtual PutRecordResponse PutRecord(PutRecordRequest request);
    public virtual Task`1<PutRecordResponse> PutRecordAsync(string deliveryStreamName, Record record, CancellationToken cancellationToken);
    public virtual Task`1<PutRecordResponse> PutRecordAsync(PutRecordRequest request, CancellationToken cancellationToken);
    internal virtual PutRecordBatchResponse PutRecordBatch(PutRecordBatchRequest request);
    public virtual Task`1<PutRecordBatchResponse> PutRecordBatchAsync(string deliveryStreamName, List`1<Record> records, CancellationToken cancellationToken);
    public virtual Task`1<PutRecordBatchResponse> PutRecordBatchAsync(PutRecordBatchRequest request, CancellationToken cancellationToken);
    internal virtual StartDeliveryStreamEncryptionResponse StartDeliveryStreamEncryption(StartDeliveryStreamEncryptionRequest request);
    public virtual Task`1<StartDeliveryStreamEncryptionResponse> StartDeliveryStreamEncryptionAsync(StartDeliveryStreamEncryptionRequest request, CancellationToken cancellationToken);
    internal virtual StopDeliveryStreamEncryptionResponse StopDeliveryStreamEncryption(StopDeliveryStreamEncryptionRequest request);
    public virtual Task`1<StopDeliveryStreamEncryptionResponse> StopDeliveryStreamEncryptionAsync(StopDeliveryStreamEncryptionRequest request, CancellationToken cancellationToken);
    internal virtual TagDeliveryStreamResponse TagDeliveryStream(TagDeliveryStreamRequest request);
    public virtual Task`1<TagDeliveryStreamResponse> TagDeliveryStreamAsync(TagDeliveryStreamRequest request, CancellationToken cancellationToken);
    internal virtual UntagDeliveryStreamResponse UntagDeliveryStream(UntagDeliveryStreamRequest request);
    public virtual Task`1<UntagDeliveryStreamResponse> UntagDeliveryStreamAsync(UntagDeliveryStreamRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDestinationResponse UpdateDestination(UpdateDestinationRequest request);
    public virtual Task`1<UpdateDestinationResponse> UpdateDestinationAsync(UpdateDestinationRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonKinesisFirehoseEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonKinesisFirehoseConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.KinesisFirehose.AmazonKinesisFirehoseDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonKinesisFirehoseDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.KinesisFirehose.AmazonKinesisFirehoseException : AmazonServiceException {
    public AmazonKinesisFirehoseException(string message);
    public AmazonKinesisFirehoseException(string message, Exception innerException);
    public AmazonKinesisFirehoseException(Exception innerException);
    public AmazonKinesisFirehoseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonKinesisFirehoseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KinesisFirehose.AmazonKinesisFirehoseRequest : AmazonWebServiceRequest {
}
public class Amazon.KinesisFirehose.AmazonOpenSearchServerlessS3BackupMode : ConstantClass {
    public static AmazonOpenSearchServerlessS3BackupMode AllDocuments;
    public static AmazonOpenSearchServerlessS3BackupMode FailedDocumentsOnly;
    public AmazonOpenSearchServerlessS3BackupMode(string value);
    private static AmazonOpenSearchServerlessS3BackupMode();
    public static AmazonOpenSearchServerlessS3BackupMode FindValue(string value);
    public static AmazonOpenSearchServerlessS3BackupMode op_Implicit(string value);
}
public class Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod : ConstantClass {
    public static AmazonopensearchserviceIndexRotationPeriod NoRotation;
    public static AmazonopensearchserviceIndexRotationPeriod OneDay;
    public static AmazonopensearchserviceIndexRotationPeriod OneHour;
    public static AmazonopensearchserviceIndexRotationPeriod OneMonth;
    public static AmazonopensearchserviceIndexRotationPeriod OneWeek;
    public AmazonopensearchserviceIndexRotationPeriod(string value);
    private static AmazonopensearchserviceIndexRotationPeriod();
    public static AmazonopensearchserviceIndexRotationPeriod FindValue(string value);
    public static AmazonopensearchserviceIndexRotationPeriod op_Implicit(string value);
}
public class Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode : ConstantClass {
    public static AmazonopensearchserviceS3BackupMode AllDocuments;
    public static AmazonopensearchserviceS3BackupMode FailedDocumentsOnly;
    public AmazonopensearchserviceS3BackupMode(string value);
    private static AmazonopensearchserviceS3BackupMode();
    public static AmazonopensearchserviceS3BackupMode FindValue(string value);
    public static AmazonopensearchserviceS3BackupMode op_Implicit(string value);
}
public class Amazon.KinesisFirehose.CompressionFormat : ConstantClass {
    public static CompressionFormat GZIP;
    public static CompressionFormat HADOOP_SNAPPY;
    public static CompressionFormat Snappy;
    public static CompressionFormat UNCOMPRESSED;
    public static CompressionFormat ZIP;
    public CompressionFormat(string value);
    private static CompressionFormat();
    public static CompressionFormat FindValue(string value);
    public static CompressionFormat op_Implicit(string value);
}
public class Amazon.KinesisFirehose.Connectivity : ConstantClass {
    public static Connectivity PRIVATE;
    public static Connectivity PUBLIC;
    public Connectivity(string value);
    private static Connectivity();
    public static Connectivity FindValue(string value);
    public static Connectivity op_Implicit(string value);
}
public class Amazon.KinesisFirehose.ContentEncoding : ConstantClass {
    public static ContentEncoding GZIP;
    public static ContentEncoding NONE;
    public ContentEncoding(string value);
    private static ContentEncoding();
    public static ContentEncoding FindValue(string value);
    public static ContentEncoding op_Implicit(string value);
}
public class Amazon.KinesisFirehose.DefaultDocumentIdFormat : ConstantClass {
    public static DefaultDocumentIdFormat FIREHOSE_DEFAULT;
    public static DefaultDocumentIdFormat NO_DOCUMENT_ID;
    public DefaultDocumentIdFormat(string value);
    private static DefaultDocumentIdFormat();
    public static DefaultDocumentIdFormat FindValue(string value);
    public static DefaultDocumentIdFormat op_Implicit(string value);
}
public class Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus : ConstantClass {
    public static DeliveryStreamEncryptionStatus DISABLED;
    public static DeliveryStreamEncryptionStatus DISABLING;
    public static DeliveryStreamEncryptionStatus DISABLING_FAILED;
    public static DeliveryStreamEncryptionStatus ENABLED;
    public static DeliveryStreamEncryptionStatus ENABLING;
    public static DeliveryStreamEncryptionStatus ENABLING_FAILED;
    public DeliveryStreamEncryptionStatus(string value);
    private static DeliveryStreamEncryptionStatus();
    public static DeliveryStreamEncryptionStatus FindValue(string value);
    public static DeliveryStreamEncryptionStatus op_Implicit(string value);
}
public class Amazon.KinesisFirehose.DeliveryStreamFailureType : ConstantClass {
    public static DeliveryStreamFailureType CREATE_ENI_FAILED;
    public static DeliveryStreamFailureType CREATE_KMS_GRANT_FAILED;
    public static DeliveryStreamFailureType DELETE_ENI_FAILED;
    public static DeliveryStreamFailureType DISABLED_KMS_KEY;
    public static DeliveryStreamFailureType ENI_ACCESS_DENIED;
    public static DeliveryStreamFailureType INVALID_KMS_KEY;
    public static DeliveryStreamFailureType KMS_ACCESS_DENIED;
    public static DeliveryStreamFailureType KMS_KEY_NOT_FOUND;
    public static DeliveryStreamFailureType KMS_OPT_IN_REQUIRED;
    public static DeliveryStreamFailureType RETIRE_KMS_GRANT_FAILED;
    public static DeliveryStreamFailureType SECURITY_GROUP_ACCESS_DENIED;
    public static DeliveryStreamFailureType SECURITY_GROUP_NOT_FOUND;
    public static DeliveryStreamFailureType SUBNET_ACCESS_DENIED;
    public static DeliveryStreamFailureType SUBNET_NOT_FOUND;
    public static DeliveryStreamFailureType UNKNOWN_ERROR;
    public DeliveryStreamFailureType(string value);
    private static DeliveryStreamFailureType();
    public static DeliveryStreamFailureType FindValue(string value);
    public static DeliveryStreamFailureType op_Implicit(string value);
}
public class Amazon.KinesisFirehose.DeliveryStreamStatus : ConstantClass {
    public static DeliveryStreamStatus ACTIVE;
    public static DeliveryStreamStatus CREATING;
    public static DeliveryStreamStatus CREATING_FAILED;
    public static DeliveryStreamStatus DELETING;
    public static DeliveryStreamStatus DELETING_FAILED;
    public DeliveryStreamStatus(string value);
    private static DeliveryStreamStatus();
    public static DeliveryStreamStatus FindValue(string value);
    public static DeliveryStreamStatus op_Implicit(string value);
}
public class Amazon.KinesisFirehose.DeliveryStreamType : ConstantClass {
    public static DeliveryStreamType DirectPut;
    public static DeliveryStreamType KinesisStreamAsSource;
    public static DeliveryStreamType MSKAsSource;
    public DeliveryStreamType(string value);
    private static DeliveryStreamType();
    public static DeliveryStreamType FindValue(string value);
    public static DeliveryStreamType op_Implicit(string value);
}
public class Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod : ConstantClass {
    public static ElasticsearchIndexRotationPeriod NoRotation;
    public static ElasticsearchIndexRotationPeriod OneDay;
    public static ElasticsearchIndexRotationPeriod OneHour;
    public static ElasticsearchIndexRotationPeriod OneMonth;
    public static ElasticsearchIndexRotationPeriod OneWeek;
    public ElasticsearchIndexRotationPeriod(string value);
    private static ElasticsearchIndexRotationPeriod();
    public static ElasticsearchIndexRotationPeriod FindValue(string value);
    public static ElasticsearchIndexRotationPeriod op_Implicit(string value);
}
public class Amazon.KinesisFirehose.ElasticsearchS3BackupMode : ConstantClass {
    public static ElasticsearchS3BackupMode AllDocuments;
    public static ElasticsearchS3BackupMode FailedDocumentsOnly;
    public ElasticsearchS3BackupMode(string value);
    private static ElasticsearchS3BackupMode();
    public static ElasticsearchS3BackupMode FindValue(string value);
    public static ElasticsearchS3BackupMode op_Implicit(string value);
}
public class Amazon.KinesisFirehose.Endpoints.KinesisFirehoseEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.KinesisFirehose.HECEndpointType : ConstantClass {
    public static HECEndpointType Event;
    public static HECEndpointType Raw;
    public HECEndpointType(string value);
    private static HECEndpointType();
    public static HECEndpointType FindValue(string value);
    public static HECEndpointType op_Implicit(string value);
}
public class Amazon.KinesisFirehose.HttpEndpointS3BackupMode : ConstantClass {
    public static HttpEndpointS3BackupMode AllData;
    public static HttpEndpointS3BackupMode FailedDataOnly;
    public HttpEndpointS3BackupMode(string value);
    private static HttpEndpointS3BackupMode();
    public static HttpEndpointS3BackupMode FindValue(string value);
    public static HttpEndpointS3BackupMode op_Implicit(string value);
}
public interface Amazon.KinesisFirehose.IAmazonKinesisFirehose {
    public abstract virtual Task`1<CreateDeliveryStreamResponse> CreateDeliveryStreamAsync(CreateDeliveryStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDeliveryStreamResponse> DeleteDeliveryStreamAsync(string deliveryStreamName, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDeliveryStreamResponse> DeleteDeliveryStreamAsync(DeleteDeliveryStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDeliveryStreamResponse> DescribeDeliveryStreamAsync(DescribeDeliveryStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDeliveryStreamsResponse> ListDeliveryStreamsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDeliveryStreamsResponse> ListDeliveryStreamsAsync(ListDeliveryStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForDeliveryStreamResponse> ListTagsForDeliveryStreamAsync(ListTagsForDeliveryStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordResponse> PutRecordAsync(string deliveryStreamName, Record record, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordResponse> PutRecordAsync(PutRecordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordBatchResponse> PutRecordBatchAsync(string deliveryStreamName, List`1<Record> records, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordBatchResponse> PutRecordBatchAsync(PutRecordBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartDeliveryStreamEncryptionResponse> StartDeliveryStreamEncryptionAsync(StartDeliveryStreamEncryptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopDeliveryStreamEncryptionResponse> StopDeliveryStreamEncryptionAsync(StopDeliveryStreamEncryptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagDeliveryStreamResponse> TagDeliveryStreamAsync(TagDeliveryStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagDeliveryStreamResponse> UntagDeliveryStreamAsync(UntagDeliveryStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDestinationResponse> UpdateDestinationAsync(UpdateDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.KinesisFirehose.IcebergS3BackupMode : ConstantClass {
    public static IcebergS3BackupMode AllData;
    public static IcebergS3BackupMode FailedDataOnly;
    public IcebergS3BackupMode(string value);
    private static IcebergS3BackupMode();
    public static IcebergS3BackupMode FindValue(string value);
    public static IcebergS3BackupMode op_Implicit(string value);
}
public class Amazon.KinesisFirehose.Internal.AmazonKinesisFirehoseEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.KinesisFirehose.Internal.AmazonKinesisFirehoseEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.KinesisFirehose.Internal.AmazonKinesisFirehoseMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.KinesisFirehose.KeyType : ConstantClass {
    public static KeyType AWS_OWNED_CMK;
    public static KeyType CUSTOMER_MANAGED_CMK;
    public KeyType(string value);
    private static KeyType();
    public static KeyType FindValue(string value);
    public static KeyType op_Implicit(string value);
}
public class Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessBufferingHints : object {
    private Nullable`1<int> _intervalInSeconds;
    private Nullable`1<int> _sizeInMBs;
    [AWSPropertyAttribute]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SizeInMBs { get; public set; }
    public Nullable`1<int> get_IntervalInSeconds();
    public void set_IntervalInSeconds(Nullable`1<int> value);
    internal bool IsSetIntervalInSeconds();
    public Nullable`1<int> get_SizeInMBs();
    public void set_SizeInMBs(Nullable`1<int> value);
    internal bool IsSetSizeInMBs();
}
public class Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessDestinationConfiguration : object {
    private AmazonOpenSearchServerlessBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _collectionEndpoint;
    private string _indexName;
    private ProcessingConfiguration _processingConfiguration;
    private AmazonOpenSearchServerlessRetryOptions _retryOptions;
    private string _roleARN;
    private AmazonOpenSearchServerlessS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    private VpcConfiguration _vpcConfiguration;
    public AmazonOpenSearchServerlessBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string CollectionEndpoint { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public AmazonOpenSearchServerlessRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public AmazonOpenSearchServerlessS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    public VpcConfiguration VpcConfiguration { get; public set; }
    public AmazonOpenSearchServerlessBufferingHints get_BufferingHints();
    public void set_BufferingHints(AmazonOpenSearchServerlessBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_CollectionEndpoint();
    public void set_CollectionEndpoint(string value);
    internal bool IsSetCollectionEndpoint();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public AmazonOpenSearchServerlessRetryOptions get_RetryOptions();
    public void set_RetryOptions(AmazonOpenSearchServerlessRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public AmazonOpenSearchServerlessS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(AmazonOpenSearchServerlessS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
    public VpcConfiguration get_VpcConfiguration();
    public void set_VpcConfiguration(VpcConfiguration value);
    internal bool IsSetVpcConfiguration();
}
public class Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessDestinationDescription : object {
    private AmazonOpenSearchServerlessBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _collectionEndpoint;
    private string _indexName;
    private ProcessingConfiguration _processingConfiguration;
    private AmazonOpenSearchServerlessRetryOptions _retryOptions;
    private string _roleARN;
    private AmazonOpenSearchServerlessS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    private VpcConfigurationDescription _vpcConfigurationDescription;
    public AmazonOpenSearchServerlessBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string CollectionEndpoint { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public AmazonOpenSearchServerlessRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public AmazonOpenSearchServerlessS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    public VpcConfigurationDescription VpcConfigurationDescription { get; public set; }
    public AmazonOpenSearchServerlessBufferingHints get_BufferingHints();
    public void set_BufferingHints(AmazonOpenSearchServerlessBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_CollectionEndpoint();
    public void set_CollectionEndpoint(string value);
    internal bool IsSetCollectionEndpoint();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public AmazonOpenSearchServerlessRetryOptions get_RetryOptions();
    public void set_RetryOptions(AmazonOpenSearchServerlessRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public AmazonOpenSearchServerlessS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(AmazonOpenSearchServerlessS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public VpcConfigurationDescription get_VpcConfigurationDescription();
    public void set_VpcConfigurationDescription(VpcConfigurationDescription value);
    internal bool IsSetVpcConfigurationDescription();
}
public class Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessDestinationUpdate : object {
    private AmazonOpenSearchServerlessBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _collectionEndpoint;
    private string _indexName;
    private ProcessingConfiguration _processingConfiguration;
    private AmazonOpenSearchServerlessRetryOptions _retryOptions;
    private string _roleARN;
    private S3DestinationUpdate _s3Update;
    public AmazonOpenSearchServerlessBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string CollectionEndpoint { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public AmazonOpenSearchServerlessRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3DestinationUpdate S3Update { get; public set; }
    public AmazonOpenSearchServerlessBufferingHints get_BufferingHints();
    public void set_BufferingHints(AmazonOpenSearchServerlessBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_CollectionEndpoint();
    public void set_CollectionEndpoint(string value);
    internal bool IsSetCollectionEndpoint();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public AmazonOpenSearchServerlessRetryOptions get_RetryOptions();
    public void set_RetryOptions(AmazonOpenSearchServerlessRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3DestinationUpdate get_S3Update();
    public void set_S3Update(S3DestinationUpdate value);
    internal bool IsSetS3Update();
}
public class Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessRetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.AmazonopensearchserviceBufferingHints : object {
    private Nullable`1<int> _intervalInSeconds;
    private Nullable`1<int> _sizeInMBs;
    [AWSPropertyAttribute]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SizeInMBs { get; public set; }
    public Nullable`1<int> get_IntervalInSeconds();
    public void set_IntervalInSeconds(Nullable`1<int> value);
    internal bool IsSetIntervalInSeconds();
    public Nullable`1<int> get_SizeInMBs();
    public void set_SizeInMBs(Nullable`1<int> value);
    internal bool IsSetSizeInMBs();
}
public class Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration : object {
    private AmazonopensearchserviceBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterEndpoint;
    private DocumentIdOptions _documentIdOptions;
    private string _domainARN;
    private string _indexName;
    private AmazonopensearchserviceIndexRotationPeriod _indexRotationPeriod;
    private ProcessingConfiguration _processingConfiguration;
    private AmazonopensearchserviceRetryOptions _retryOptions;
    private string _roleARN;
    private AmazonopensearchserviceS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    private string _typeName;
    private VpcConfiguration _vpcConfiguration;
    public AmazonopensearchserviceBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterEndpoint { get; public set; }
    public DocumentIdOptions DocumentIdOptions { get; public set; }
    [AWSPropertyAttribute]
public string DomainARN { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public AmazonopensearchserviceIndexRotationPeriod IndexRotationPeriod { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public AmazonopensearchserviceRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public AmazonopensearchserviceS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public VpcConfiguration VpcConfiguration { get; public set; }
    public AmazonopensearchserviceBufferingHints get_BufferingHints();
    public void set_BufferingHints(AmazonopensearchserviceBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterEndpoint();
    public void set_ClusterEndpoint(string value);
    internal bool IsSetClusterEndpoint();
    public DocumentIdOptions get_DocumentIdOptions();
    public void set_DocumentIdOptions(DocumentIdOptions value);
    internal bool IsSetDocumentIdOptions();
    public string get_DomainARN();
    public void set_DomainARN(string value);
    internal bool IsSetDomainARN();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public AmazonopensearchserviceIndexRotationPeriod get_IndexRotationPeriod();
    public void set_IndexRotationPeriod(AmazonopensearchserviceIndexRotationPeriod value);
    internal bool IsSetIndexRotationPeriod();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public AmazonopensearchserviceRetryOptions get_RetryOptions();
    public void set_RetryOptions(AmazonopensearchserviceRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public AmazonopensearchserviceS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(AmazonopensearchserviceS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
    public VpcConfiguration get_VpcConfiguration();
    public void set_VpcConfiguration(VpcConfiguration value);
    internal bool IsSetVpcConfiguration();
}
public class Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription : object {
    private AmazonopensearchserviceBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterEndpoint;
    private DocumentIdOptions _documentIdOptions;
    private string _domainARN;
    private string _indexName;
    private AmazonopensearchserviceIndexRotationPeriod _indexRotationPeriod;
    private ProcessingConfiguration _processingConfiguration;
    private AmazonopensearchserviceRetryOptions _retryOptions;
    private string _roleARN;
    private AmazonopensearchserviceS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    private string _typeName;
    private VpcConfigurationDescription _vpcConfigurationDescription;
    public AmazonopensearchserviceBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterEndpoint { get; public set; }
    public DocumentIdOptions DocumentIdOptions { get; public set; }
    [AWSPropertyAttribute]
public string DomainARN { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public AmazonopensearchserviceIndexRotationPeriod IndexRotationPeriod { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public AmazonopensearchserviceRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public AmazonopensearchserviceS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public VpcConfigurationDescription VpcConfigurationDescription { get; public set; }
    public AmazonopensearchserviceBufferingHints get_BufferingHints();
    public void set_BufferingHints(AmazonopensearchserviceBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterEndpoint();
    public void set_ClusterEndpoint(string value);
    internal bool IsSetClusterEndpoint();
    public DocumentIdOptions get_DocumentIdOptions();
    public void set_DocumentIdOptions(DocumentIdOptions value);
    internal bool IsSetDocumentIdOptions();
    public string get_DomainARN();
    public void set_DomainARN(string value);
    internal bool IsSetDomainARN();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public AmazonopensearchserviceIndexRotationPeriod get_IndexRotationPeriod();
    public void set_IndexRotationPeriod(AmazonopensearchserviceIndexRotationPeriod value);
    internal bool IsSetIndexRotationPeriod();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public AmazonopensearchserviceRetryOptions get_RetryOptions();
    public void set_RetryOptions(AmazonopensearchserviceRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public AmazonopensearchserviceS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(AmazonopensearchserviceS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
    public VpcConfigurationDescription get_VpcConfigurationDescription();
    public void set_VpcConfigurationDescription(VpcConfigurationDescription value);
    internal bool IsSetVpcConfigurationDescription();
}
public class Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate : object {
    private AmazonopensearchserviceBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterEndpoint;
    private DocumentIdOptions _documentIdOptions;
    private string _domainARN;
    private string _indexName;
    private AmazonopensearchserviceIndexRotationPeriod _indexRotationPeriod;
    private ProcessingConfiguration _processingConfiguration;
    private AmazonopensearchserviceRetryOptions _retryOptions;
    private string _roleARN;
    private S3DestinationUpdate _s3Update;
    private string _typeName;
    public AmazonopensearchserviceBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterEndpoint { get; public set; }
    public DocumentIdOptions DocumentIdOptions { get; public set; }
    [AWSPropertyAttribute]
public string DomainARN { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public AmazonopensearchserviceIndexRotationPeriod IndexRotationPeriod { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public AmazonopensearchserviceRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3DestinationUpdate S3Update { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public AmazonopensearchserviceBufferingHints get_BufferingHints();
    public void set_BufferingHints(AmazonopensearchserviceBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterEndpoint();
    public void set_ClusterEndpoint(string value);
    internal bool IsSetClusterEndpoint();
    public DocumentIdOptions get_DocumentIdOptions();
    public void set_DocumentIdOptions(DocumentIdOptions value);
    internal bool IsSetDocumentIdOptions();
    public string get_DomainARN();
    public void set_DomainARN(string value);
    internal bool IsSetDomainARN();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public AmazonopensearchserviceIndexRotationPeriod get_IndexRotationPeriod();
    public void set_IndexRotationPeriod(AmazonopensearchserviceIndexRotationPeriod value);
    internal bool IsSetIndexRotationPeriod();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public AmazonopensearchserviceRetryOptions get_RetryOptions();
    public void set_RetryOptions(AmazonopensearchserviceRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3DestinationUpdate get_S3Update();
    public void set_S3Update(S3DestinationUpdate value);
    internal bool IsSetS3Update();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.KinesisFirehose.Model.AmazonopensearchserviceRetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.AuthenticationConfiguration : object {
    private Connectivity _connectivity;
    private string _roleARN;
    [AWSPropertyAttribute]
public Connectivity Connectivity { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public Connectivity get_Connectivity();
    public void set_Connectivity(Connectivity value);
    internal bool IsSetConnectivity();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.KinesisFirehose.Model.BufferingHints : object {
    private Nullable`1<int> _intervalInSeconds;
    private Nullable`1<int> _sizeInMBs;
    [AWSPropertyAttribute]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SizeInMBs { get; public set; }
    public Nullable`1<int> get_IntervalInSeconds();
    public void set_IntervalInSeconds(Nullable`1<int> value);
    internal bool IsSetIntervalInSeconds();
    public Nullable`1<int> get_SizeInMBs();
    public void set_SizeInMBs(Nullable`1<int> value);
    internal bool IsSetSizeInMBs();
}
public class Amazon.KinesisFirehose.Model.CatalogConfiguration : object {
    private string _catalogARN;
    [AWSPropertyAttribute]
public string CatalogARN { get; public set; }
    public string get_CatalogARN();
    public void set_CatalogARN(string value);
    internal bool IsSetCatalogARN();
}
public class Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions : object {
    private Nullable`1<bool> _enabled;
    private string _logGroupName;
    private string _logStreamName;
    public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
}
public class Amazon.KinesisFirehose.Model.ConcurrentModificationException : AmazonKinesisFirehoseException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KinesisFirehose.Model.CopyCommand : object {
    private string _copyOptions;
    private string _dataTableColumns;
    private string _dataTableName;
    [AWSPropertyAttribute]
public string CopyOptions { get; public set; }
    [AWSPropertyAttribute]
public string DataTableColumns { get; public set; }
    [AWSPropertyAttribute]
public string DataTableName { get; public set; }
    public string get_CopyOptions();
    public void set_CopyOptions(string value);
    internal bool IsSetCopyOptions();
    public string get_DataTableColumns();
    public void set_DataTableColumns(string value);
    internal bool IsSetDataTableColumns();
    public string get_DataTableName();
    public void set_DataTableName(string value);
    internal bool IsSetDataTableName();
}
public class Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest : AmazonKinesisFirehoseRequest {
    private AmazonOpenSearchServerlessDestinationConfiguration _amazonOpenSearchServerlessDestinationConfiguration;
    private AmazonopensearchserviceDestinationConfiguration _amazonopensearchserviceDestinationConfiguration;
    private DeliveryStreamEncryptionConfigurationInput _deliveryStreamEncryptionConfigurationInput;
    private string _deliveryStreamName;
    private DeliveryStreamType _deliveryStreamType;
    private ElasticsearchDestinationConfiguration _elasticsearchDestinationConfiguration;
    private ExtendedS3DestinationConfiguration _extendedS3DestinationConfiguration;
    private HttpEndpointDestinationConfiguration _httpEndpointDestinationConfiguration;
    private IcebergDestinationConfiguration _icebergDestinationConfiguration;
    private KinesisStreamSourceConfiguration _kinesisStreamSourceConfiguration;
    private MSKSourceConfiguration _mskSourceConfiguration;
    private RedshiftDestinationConfiguration _redshiftDestinationConfiguration;
    private S3DestinationConfiguration _s3DestinationConfiguration;
    private SnowflakeDestinationConfiguration _snowflakeDestinationConfiguration;
    private SplunkDestinationConfiguration _splunkDestinationConfiguration;
    private List`1<Tag> _tags;
    public AmazonOpenSearchServerlessDestinationConfiguration AmazonOpenSearchServerlessDestinationConfiguration { get; public set; }
    public AmazonopensearchserviceDestinationConfiguration AmazonopensearchserviceDestinationConfiguration { get; public set; }
    public DeliveryStreamEncryptionConfigurationInput DeliveryStreamEncryptionConfigurationInput { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    public DeliveryStreamType DeliveryStreamType { get; public set; }
    public ElasticsearchDestinationConfiguration ElasticsearchDestinationConfiguration { get; public set; }
    public ExtendedS3DestinationConfiguration ExtendedS3DestinationConfiguration { get; public set; }
    public HttpEndpointDestinationConfiguration HttpEndpointDestinationConfiguration { get; public set; }
    public IcebergDestinationConfiguration IcebergDestinationConfiguration { get; public set; }
    public KinesisStreamSourceConfiguration KinesisStreamSourceConfiguration { get; public set; }
    public MSKSourceConfiguration MSKSourceConfiguration { get; public set; }
    public RedshiftDestinationConfiguration RedshiftDestinationConfiguration { get; public set; }
    [ObsoleteAttribute("This property is deprecated. Use ExtendedS3DestinationConfiguration instead.")]
public S3DestinationConfiguration S3DestinationConfiguration { get; public set; }
    public SnowflakeDestinationConfiguration SnowflakeDestinationConfiguration { get; public set; }
    public SplunkDestinationConfiguration SplunkDestinationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public AmazonOpenSearchServerlessDestinationConfiguration get_AmazonOpenSearchServerlessDestinationConfiguration();
    public void set_AmazonOpenSearchServerlessDestinationConfiguration(AmazonOpenSearchServerlessDestinationConfiguration value);
    internal bool IsSetAmazonOpenSearchServerlessDestinationConfiguration();
    public AmazonopensearchserviceDestinationConfiguration get_AmazonopensearchserviceDestinationConfiguration();
    public void set_AmazonopensearchserviceDestinationConfiguration(AmazonopensearchserviceDestinationConfiguration value);
    internal bool IsSetAmazonopensearchserviceDestinationConfiguration();
    public DeliveryStreamEncryptionConfigurationInput get_DeliveryStreamEncryptionConfigurationInput();
    public void set_DeliveryStreamEncryptionConfigurationInput(DeliveryStreamEncryptionConfigurationInput value);
    internal bool IsSetDeliveryStreamEncryptionConfigurationInput();
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public DeliveryStreamType get_DeliveryStreamType();
    public void set_DeliveryStreamType(DeliveryStreamType value);
    internal bool IsSetDeliveryStreamType();
    public ElasticsearchDestinationConfiguration get_ElasticsearchDestinationConfiguration();
    public void set_ElasticsearchDestinationConfiguration(ElasticsearchDestinationConfiguration value);
    internal bool IsSetElasticsearchDestinationConfiguration();
    public ExtendedS3DestinationConfiguration get_ExtendedS3DestinationConfiguration();
    public void set_ExtendedS3DestinationConfiguration(ExtendedS3DestinationConfiguration value);
    internal bool IsSetExtendedS3DestinationConfiguration();
    public HttpEndpointDestinationConfiguration get_HttpEndpointDestinationConfiguration();
    public void set_HttpEndpointDestinationConfiguration(HttpEndpointDestinationConfiguration value);
    internal bool IsSetHttpEndpointDestinationConfiguration();
    public IcebergDestinationConfiguration get_IcebergDestinationConfiguration();
    public void set_IcebergDestinationConfiguration(IcebergDestinationConfiguration value);
    internal bool IsSetIcebergDestinationConfiguration();
    public KinesisStreamSourceConfiguration get_KinesisStreamSourceConfiguration();
    public void set_KinesisStreamSourceConfiguration(KinesisStreamSourceConfiguration value);
    internal bool IsSetKinesisStreamSourceConfiguration();
    public MSKSourceConfiguration get_MSKSourceConfiguration();
    public void set_MSKSourceConfiguration(MSKSourceConfiguration value);
    internal bool IsSetMSKSourceConfiguration();
    public RedshiftDestinationConfiguration get_RedshiftDestinationConfiguration();
    public void set_RedshiftDestinationConfiguration(RedshiftDestinationConfiguration value);
    internal bool IsSetRedshiftDestinationConfiguration();
    public S3DestinationConfiguration get_S3DestinationConfiguration();
    public void set_S3DestinationConfiguration(S3DestinationConfiguration value);
    internal bool IsSetS3DestinationConfiguration();
    public SnowflakeDestinationConfiguration get_SnowflakeDestinationConfiguration();
    public void set_SnowflakeDestinationConfiguration(SnowflakeDestinationConfiguration value);
    internal bool IsSetSnowflakeDestinationConfiguration();
    public SplunkDestinationConfiguration get_SplunkDestinationConfiguration();
    public void set_SplunkDestinationConfiguration(SplunkDestinationConfiguration value);
    internal bool IsSetSplunkDestinationConfiguration();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.KinesisFirehose.Model.CreateDeliveryStreamResponse : AmazonWebServiceResponse {
    private string _deliveryStreamARN;
    [AWSPropertyAttribute]
public string DeliveryStreamARN { get; public set; }
    public string get_DeliveryStreamARN();
    public void set_DeliveryStreamARN(string value);
    internal bool IsSetDeliveryStreamARN();
}
public class Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration : object {
    private Nullable`1<bool> _enabled;
    private InputFormatConfiguration _inputFormatConfiguration;
    private OutputFormatConfiguration _outputFormatConfiguration;
    private SchemaConfiguration _schemaConfiguration;
    public Nullable`1<bool> Enabled { get; public set; }
    public InputFormatConfiguration InputFormatConfiguration { get; public set; }
    public OutputFormatConfiguration OutputFormatConfiguration { get; public set; }
    public SchemaConfiguration SchemaConfiguration { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public InputFormatConfiguration get_InputFormatConfiguration();
    public void set_InputFormatConfiguration(InputFormatConfiguration value);
    internal bool IsSetInputFormatConfiguration();
    public OutputFormatConfiguration get_OutputFormatConfiguration();
    public void set_OutputFormatConfiguration(OutputFormatConfiguration value);
    internal bool IsSetOutputFormatConfiguration();
    public SchemaConfiguration get_SchemaConfiguration();
    public void set_SchemaConfiguration(SchemaConfiguration value);
    internal bool IsSetSchemaConfiguration();
}
public class Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest : AmazonKinesisFirehoseRequest {
    private Nullable`1<bool> _allowForceDelete;
    private string _deliveryStreamName;
    public Nullable`1<bool> AllowForceDelete { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    public Nullable`1<bool> get_AllowForceDelete();
    public void set_AllowForceDelete(Nullable`1<bool> value);
    internal bool IsSetAllowForceDelete();
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
}
public class Amazon.KinesisFirehose.Model.DeleteDeliveryStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.KinesisFirehose.Model.DeliveryStreamDescription : object {
    private Nullable`1<DateTime> _createTimestamp;
    private string _deliveryStreamARN;
    private DeliveryStreamEncryptionConfiguration _deliveryStreamEncryptionConfiguration;
    private string _deliveryStreamName;
    private DeliveryStreamStatus _deliveryStreamStatus;
    private DeliveryStreamType _deliveryStreamType;
    private List`1<DestinationDescription> _destinations;
    private FailureDescription _failureDescription;
    private Nullable`1<bool> _hasMoreDestinations;
    private Nullable`1<DateTime> _lastUpdateTimestamp;
    private SourceDescription _source;
    private string _versionId;
    public Nullable`1<DateTime> CreateTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryStreamARN { get; public set; }
    public DeliveryStreamEncryptionConfiguration DeliveryStreamEncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public DeliveryStreamStatus DeliveryStreamStatus { get; public set; }
    [AWSPropertyAttribute]
public DeliveryStreamType DeliveryStreamType { get; public set; }
    [AWSPropertyAttribute]
public List`1<DestinationDescription> Destinations { get; public set; }
    public FailureDescription FailureDescription { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> HasMoreDestinations { get; public set; }
    public Nullable`1<DateTime> LastUpdateTimestamp { get; public set; }
    public SourceDescription Source { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public Nullable`1<DateTime> get_CreateTimestamp();
    public void set_CreateTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreateTimestamp();
    public string get_DeliveryStreamARN();
    public void set_DeliveryStreamARN(string value);
    internal bool IsSetDeliveryStreamARN();
    public DeliveryStreamEncryptionConfiguration get_DeliveryStreamEncryptionConfiguration();
    public void set_DeliveryStreamEncryptionConfiguration(DeliveryStreamEncryptionConfiguration value);
    internal bool IsSetDeliveryStreamEncryptionConfiguration();
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public DeliveryStreamStatus get_DeliveryStreamStatus();
    public void set_DeliveryStreamStatus(DeliveryStreamStatus value);
    internal bool IsSetDeliveryStreamStatus();
    public DeliveryStreamType get_DeliveryStreamType();
    public void set_DeliveryStreamType(DeliveryStreamType value);
    internal bool IsSetDeliveryStreamType();
    public List`1<DestinationDescription> get_Destinations();
    public void set_Destinations(List`1<DestinationDescription> value);
    internal bool IsSetDestinations();
    public FailureDescription get_FailureDescription();
    public void set_FailureDescription(FailureDescription value);
    internal bool IsSetFailureDescription();
    public Nullable`1<bool> get_HasMoreDestinations();
    public void set_HasMoreDestinations(Nullable`1<bool> value);
    internal bool IsSetHasMoreDestinations();
    public Nullable`1<DateTime> get_LastUpdateTimestamp();
    public void set_LastUpdateTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateTimestamp();
    public SourceDescription get_Source();
    public void set_Source(SourceDescription value);
    internal bool IsSetSource();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfiguration : object {
    private FailureDescription _failureDescription;
    private string _keyARN;
    private KeyType _keyType;
    private DeliveryStreamEncryptionStatus _status;
    public FailureDescription FailureDescription { get; public set; }
    [AWSPropertyAttribute]
public string KeyARN { get; public set; }
    public KeyType KeyType { get; public set; }
    public DeliveryStreamEncryptionStatus Status { get; public set; }
    public FailureDescription get_FailureDescription();
    public void set_FailureDescription(FailureDescription value);
    internal bool IsSetFailureDescription();
    public string get_KeyARN();
    public void set_KeyARN(string value);
    internal bool IsSetKeyARN();
    public KeyType get_KeyType();
    public void set_KeyType(KeyType value);
    internal bool IsSetKeyType();
    public DeliveryStreamEncryptionStatus get_Status();
    public void set_Status(DeliveryStreamEncryptionStatus value);
    internal bool IsSetStatus();
}
public class Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfigurationInput : object {
    private string _keyARN;
    private KeyType _keyType;
    [AWSPropertyAttribute]
public string KeyARN { get; public set; }
    [AWSPropertyAttribute]
public KeyType KeyType { get; public set; }
    public string get_KeyARN();
    public void set_KeyARN(string value);
    internal bool IsSetKeyARN();
    public KeyType get_KeyType();
    public void set_KeyType(KeyType value);
    internal bool IsSetKeyType();
}
public class Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest : AmazonKinesisFirehoseRequest {
    private string _deliveryStreamName;
    private string _exclusiveStartDestinationId;
    private Nullable`1<int> _limit;
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public string ExclusiveStartDestinationId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public string get_ExclusiveStartDestinationId();
    public void set_ExclusiveStartDestinationId(string value);
    internal bool IsSetExclusiveStartDestinationId();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
}
public class Amazon.KinesisFirehose.Model.DescribeDeliveryStreamResponse : AmazonWebServiceResponse {
    private DeliveryStreamDescription _deliveryStreamDescription;
    [AWSPropertyAttribute]
public DeliveryStreamDescription DeliveryStreamDescription { get; public set; }
    public DeliveryStreamDescription get_DeliveryStreamDescription();
    public void set_DeliveryStreamDescription(DeliveryStreamDescription value);
    internal bool IsSetDeliveryStreamDescription();
}
public class Amazon.KinesisFirehose.Model.Deserializer : object {
    private HiveJsonSerDe _hiveJsonSerDe;
    private OpenXJsonSerDe _openXJsonSerDe;
    public HiveJsonSerDe HiveJsonSerDe { get; public set; }
    public OpenXJsonSerDe OpenXJsonSerDe { get; public set; }
    public HiveJsonSerDe get_HiveJsonSerDe();
    public void set_HiveJsonSerDe(HiveJsonSerDe value);
    internal bool IsSetHiveJsonSerDe();
    public OpenXJsonSerDe get_OpenXJsonSerDe();
    public void set_OpenXJsonSerDe(OpenXJsonSerDe value);
    internal bool IsSetOpenXJsonSerDe();
}
public class Amazon.KinesisFirehose.Model.DestinationDescription : object {
    private AmazonOpenSearchServerlessDestinationDescription _amazonOpenSearchServerlessDestinationDescription;
    private AmazonopensearchserviceDestinationDescription _amazonopensearchserviceDestinationDescription;
    private string _destinationId;
    private ElasticsearchDestinationDescription _elasticsearchDestinationDescription;
    private ExtendedS3DestinationDescription _extendedS3DestinationDescription;
    private HttpEndpointDestinationDescription _httpEndpointDestinationDescription;
    private IcebergDestinationDescription _icebergDestinationDescription;
    private RedshiftDestinationDescription _redshiftDestinationDescription;
    private S3DestinationDescription _s3DestinationDescription;
    private SnowflakeDestinationDescription _snowflakeDestinationDescription;
    private SplunkDestinationDescription _splunkDestinationDescription;
    public AmazonOpenSearchServerlessDestinationDescription AmazonOpenSearchServerlessDestinationDescription { get; public set; }
    public AmazonopensearchserviceDestinationDescription AmazonopensearchserviceDestinationDescription { get; public set; }
    [AWSPropertyAttribute]
public string DestinationId { get; public set; }
    public ElasticsearchDestinationDescription ElasticsearchDestinationDescription { get; public set; }
    public ExtendedS3DestinationDescription ExtendedS3DestinationDescription { get; public set; }
    public HttpEndpointDestinationDescription HttpEndpointDestinationDescription { get; public set; }
    public IcebergDestinationDescription IcebergDestinationDescription { get; public set; }
    public RedshiftDestinationDescription RedshiftDestinationDescription { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    public SnowflakeDestinationDescription SnowflakeDestinationDescription { get; public set; }
    public SplunkDestinationDescription SplunkDestinationDescription { get; public set; }
    public AmazonOpenSearchServerlessDestinationDescription get_AmazonOpenSearchServerlessDestinationDescription();
    public void set_AmazonOpenSearchServerlessDestinationDescription(AmazonOpenSearchServerlessDestinationDescription value);
    internal bool IsSetAmazonOpenSearchServerlessDestinationDescription();
    public AmazonopensearchserviceDestinationDescription get_AmazonopensearchserviceDestinationDescription();
    public void set_AmazonopensearchserviceDestinationDescription(AmazonopensearchserviceDestinationDescription value);
    internal bool IsSetAmazonopensearchserviceDestinationDescription();
    public string get_DestinationId();
    public void set_DestinationId(string value);
    internal bool IsSetDestinationId();
    public ElasticsearchDestinationDescription get_ElasticsearchDestinationDescription();
    public void set_ElasticsearchDestinationDescription(ElasticsearchDestinationDescription value);
    internal bool IsSetElasticsearchDestinationDescription();
    public ExtendedS3DestinationDescription get_ExtendedS3DestinationDescription();
    public void set_ExtendedS3DestinationDescription(ExtendedS3DestinationDescription value);
    internal bool IsSetExtendedS3DestinationDescription();
    public HttpEndpointDestinationDescription get_HttpEndpointDestinationDescription();
    public void set_HttpEndpointDestinationDescription(HttpEndpointDestinationDescription value);
    internal bool IsSetHttpEndpointDestinationDescription();
    public IcebergDestinationDescription get_IcebergDestinationDescription();
    public void set_IcebergDestinationDescription(IcebergDestinationDescription value);
    internal bool IsSetIcebergDestinationDescription();
    public RedshiftDestinationDescription get_RedshiftDestinationDescription();
    public void set_RedshiftDestinationDescription(RedshiftDestinationDescription value);
    internal bool IsSetRedshiftDestinationDescription();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public SnowflakeDestinationDescription get_SnowflakeDestinationDescription();
    public void set_SnowflakeDestinationDescription(SnowflakeDestinationDescription value);
    internal bool IsSetSnowflakeDestinationDescription();
    public SplunkDestinationDescription get_SplunkDestinationDescription();
    public void set_SplunkDestinationDescription(SplunkDestinationDescription value);
    internal bool IsSetSplunkDestinationDescription();
}
public class Amazon.KinesisFirehose.Model.DestinationTableConfiguration : object {
    private string _destinationDatabaseName;
    private string _destinationTableName;
    private string _s3ErrorOutputPrefix;
    private List`1<string> _uniqueKeys;
    [AWSPropertyAttribute]
public string DestinationDatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string DestinationTableName { get; public set; }
    [AWSPropertyAttribute]
public string S3ErrorOutputPrefix { get; public set; }
    public List`1<string> UniqueKeys { get; public set; }
    public string get_DestinationDatabaseName();
    public void set_DestinationDatabaseName(string value);
    internal bool IsSetDestinationDatabaseName();
    public string get_DestinationTableName();
    public void set_DestinationTableName(string value);
    internal bool IsSetDestinationTableName();
    public string get_S3ErrorOutputPrefix();
    public void set_S3ErrorOutputPrefix(string value);
    internal bool IsSetS3ErrorOutputPrefix();
    public List`1<string> get_UniqueKeys();
    public void set_UniqueKeys(List`1<string> value);
    internal bool IsSetUniqueKeys();
}
public class Amazon.KinesisFirehose.Model.DocumentIdOptions : object {
    private DefaultDocumentIdFormat _defaultDocumentIdFormat;
    [AWSPropertyAttribute]
public DefaultDocumentIdFormat DefaultDocumentIdFormat { get; public set; }
    public DefaultDocumentIdFormat get_DefaultDocumentIdFormat();
    public void set_DefaultDocumentIdFormat(DefaultDocumentIdFormat value);
    internal bool IsSetDefaultDocumentIdFormat();
}
public class Amazon.KinesisFirehose.Model.DynamicPartitioningConfiguration : object {
    private Nullable`1<bool> _enabled;
    private RetryOptions _retryOptions;
    public Nullable`1<bool> Enabled { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public RetryOptions get_RetryOptions();
    public void set_RetryOptions(RetryOptions value);
    internal bool IsSetRetryOptions();
}
public class Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints : object {
    private Nullable`1<int> _intervalInSeconds;
    private Nullable`1<int> _sizeInMBs;
    [AWSPropertyAttribute]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SizeInMBs { get; public set; }
    public Nullable`1<int> get_IntervalInSeconds();
    public void set_IntervalInSeconds(Nullable`1<int> value);
    internal bool IsSetIntervalInSeconds();
    public Nullable`1<int> get_SizeInMBs();
    public void set_SizeInMBs(Nullable`1<int> value);
    internal bool IsSetSizeInMBs();
}
public class Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration : object {
    private ElasticsearchBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterEndpoint;
    private DocumentIdOptions _documentIdOptions;
    private string _domainARN;
    private string _indexName;
    private ElasticsearchIndexRotationPeriod _indexRotationPeriod;
    private ProcessingConfiguration _processingConfiguration;
    private ElasticsearchRetryOptions _retryOptions;
    private string _roleARN;
    private ElasticsearchS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    private string _typeName;
    private VpcConfiguration _vpcConfiguration;
    public ElasticsearchBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterEndpoint { get; public set; }
    public DocumentIdOptions DocumentIdOptions { get; public set; }
    [AWSPropertyAttribute]
public string DomainARN { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public ElasticsearchIndexRotationPeriod IndexRotationPeriod { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public ElasticsearchRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public ElasticsearchS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public VpcConfiguration VpcConfiguration { get; public set; }
    public ElasticsearchBufferingHints get_BufferingHints();
    public void set_BufferingHints(ElasticsearchBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterEndpoint();
    public void set_ClusterEndpoint(string value);
    internal bool IsSetClusterEndpoint();
    public DocumentIdOptions get_DocumentIdOptions();
    public void set_DocumentIdOptions(DocumentIdOptions value);
    internal bool IsSetDocumentIdOptions();
    public string get_DomainARN();
    public void set_DomainARN(string value);
    internal bool IsSetDomainARN();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public ElasticsearchIndexRotationPeriod get_IndexRotationPeriod();
    public void set_IndexRotationPeriod(ElasticsearchIndexRotationPeriod value);
    internal bool IsSetIndexRotationPeriod();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public ElasticsearchRetryOptions get_RetryOptions();
    public void set_RetryOptions(ElasticsearchRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public ElasticsearchS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(ElasticsearchS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
    public VpcConfiguration get_VpcConfiguration();
    public void set_VpcConfiguration(VpcConfiguration value);
    internal bool IsSetVpcConfiguration();
}
public class Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription : object {
    private ElasticsearchBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterEndpoint;
    private DocumentIdOptions _documentIdOptions;
    private string _domainARN;
    private string _indexName;
    private ElasticsearchIndexRotationPeriod _indexRotationPeriod;
    private ProcessingConfiguration _processingConfiguration;
    private ElasticsearchRetryOptions _retryOptions;
    private string _roleARN;
    private ElasticsearchS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    private string _typeName;
    private VpcConfigurationDescription _vpcConfigurationDescription;
    public ElasticsearchBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterEndpoint { get; public set; }
    public DocumentIdOptions DocumentIdOptions { get; public set; }
    [AWSPropertyAttribute]
public string DomainARN { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public ElasticsearchIndexRotationPeriod IndexRotationPeriod { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public ElasticsearchRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public ElasticsearchS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public VpcConfigurationDescription VpcConfigurationDescription { get; public set; }
    public ElasticsearchBufferingHints get_BufferingHints();
    public void set_BufferingHints(ElasticsearchBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterEndpoint();
    public void set_ClusterEndpoint(string value);
    internal bool IsSetClusterEndpoint();
    public DocumentIdOptions get_DocumentIdOptions();
    public void set_DocumentIdOptions(DocumentIdOptions value);
    internal bool IsSetDocumentIdOptions();
    public string get_DomainARN();
    public void set_DomainARN(string value);
    internal bool IsSetDomainARN();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public ElasticsearchIndexRotationPeriod get_IndexRotationPeriod();
    public void set_IndexRotationPeriod(ElasticsearchIndexRotationPeriod value);
    internal bool IsSetIndexRotationPeriod();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public ElasticsearchRetryOptions get_RetryOptions();
    public void set_RetryOptions(ElasticsearchRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public ElasticsearchS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(ElasticsearchS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
    public VpcConfigurationDescription get_VpcConfigurationDescription();
    public void set_VpcConfigurationDescription(VpcConfigurationDescription value);
    internal bool IsSetVpcConfigurationDescription();
}
public class Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate : object {
    private ElasticsearchBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterEndpoint;
    private DocumentIdOptions _documentIdOptions;
    private string _domainARN;
    private string _indexName;
    private ElasticsearchIndexRotationPeriod _indexRotationPeriod;
    private ProcessingConfiguration _processingConfiguration;
    private ElasticsearchRetryOptions _retryOptions;
    private string _roleARN;
    private S3DestinationUpdate _s3Update;
    private string _typeName;
    public ElasticsearchBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterEndpoint { get; public set; }
    public DocumentIdOptions DocumentIdOptions { get; public set; }
    [AWSPropertyAttribute]
public string DomainARN { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public ElasticsearchIndexRotationPeriod IndexRotationPeriod { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public ElasticsearchRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3DestinationUpdate S3Update { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public ElasticsearchBufferingHints get_BufferingHints();
    public void set_BufferingHints(ElasticsearchBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterEndpoint();
    public void set_ClusterEndpoint(string value);
    internal bool IsSetClusterEndpoint();
    public DocumentIdOptions get_DocumentIdOptions();
    public void set_DocumentIdOptions(DocumentIdOptions value);
    internal bool IsSetDocumentIdOptions();
    public string get_DomainARN();
    public void set_DomainARN(string value);
    internal bool IsSetDomainARN();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public ElasticsearchIndexRotationPeriod get_IndexRotationPeriod();
    public void set_IndexRotationPeriod(ElasticsearchIndexRotationPeriod value);
    internal bool IsSetIndexRotationPeriod();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public ElasticsearchRetryOptions get_RetryOptions();
    public void set_RetryOptions(ElasticsearchRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3DestinationUpdate get_S3Update();
    public void set_S3Update(S3DestinationUpdate value);
    internal bool IsSetS3Update();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.EncryptionConfiguration : object {
    private KMSEncryptionConfig _kmsEncryptionConfig;
    private NoEncryptionConfig _noEncryptionConfig;
    public KMSEncryptionConfig KMSEncryptionConfig { get; public set; }
    public NoEncryptionConfig NoEncryptionConfig { get; public set; }
    public KMSEncryptionConfig get_KMSEncryptionConfig();
    public void set_KMSEncryptionConfig(KMSEncryptionConfig value);
    internal bool IsSetKMSEncryptionConfig();
    public NoEncryptionConfig get_NoEncryptionConfig();
    public void set_NoEncryptionConfig(NoEncryptionConfig value);
    internal bool IsSetNoEncryptionConfig();
}
public class Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration : object {
    private string _bucketARN;
    private BufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private CompressionFormat _compressionFormat;
    private string _customTimeZone;
    private DataFormatConversionConfiguration _dataFormatConversionConfiguration;
    private DynamicPartitioningConfiguration _dynamicPartitioningConfiguration;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _errorOutputPrefix;
    private string _fileExtension;
    private string _prefix;
    private ProcessingConfiguration _processingConfiguration;
    private string _roleARN;
    private S3DestinationConfiguration _s3BackupConfiguration;
    private S3BackupMode _s3BackupMode;
    [AWSPropertyAttribute]
public string BucketARN { get; public set; }
    public BufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public CompressionFormat CompressionFormat { get; public set; }
    [AWSPropertyAttribute]
public string CustomTimeZone { get; public set; }
    public DataFormatConversionConfiguration DataFormatConversionConfiguration { get; public set; }
    public DynamicPartitioningConfiguration DynamicPartitioningConfiguration { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ErrorOutputPrefix { get; public set; }
    [AWSPropertyAttribute]
public string FileExtension { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3DestinationConfiguration S3BackupConfiguration { get; public set; }
    public S3BackupMode S3BackupMode { get; public set; }
    public string get_BucketARN();
    public void set_BucketARN(string value);
    internal bool IsSetBucketARN();
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public CompressionFormat get_CompressionFormat();
    public void set_CompressionFormat(CompressionFormat value);
    internal bool IsSetCompressionFormat();
    public string get_CustomTimeZone();
    public void set_CustomTimeZone(string value);
    internal bool IsSetCustomTimeZone();
    public DataFormatConversionConfiguration get_DataFormatConversionConfiguration();
    public void set_DataFormatConversionConfiguration(DataFormatConversionConfiguration value);
    internal bool IsSetDataFormatConversionConfiguration();
    public DynamicPartitioningConfiguration get_DynamicPartitioningConfiguration();
    public void set_DynamicPartitioningConfiguration(DynamicPartitioningConfiguration value);
    internal bool IsSetDynamicPartitioningConfiguration();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_ErrorOutputPrefix();
    public void set_ErrorOutputPrefix(string value);
    internal bool IsSetErrorOutputPrefix();
    public string get_FileExtension();
    public void set_FileExtension(string value);
    internal bool IsSetFileExtension();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3DestinationConfiguration get_S3BackupConfiguration();
    public void set_S3BackupConfiguration(S3DestinationConfiguration value);
    internal bool IsSetS3BackupConfiguration();
    public S3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(S3BackupMode value);
    internal bool IsSetS3BackupMode();
}
public class Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription : object {
    private string _bucketARN;
    private BufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private CompressionFormat _compressionFormat;
    private string _customTimeZone;
    private DataFormatConversionConfiguration _dataFormatConversionConfiguration;
    private DynamicPartitioningConfiguration _dynamicPartitioningConfiguration;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _errorOutputPrefix;
    private string _fileExtension;
    private string _prefix;
    private ProcessingConfiguration _processingConfiguration;
    private string _roleARN;
    private S3DestinationDescription _s3BackupDescription;
    private S3BackupMode _s3BackupMode;
    [AWSPropertyAttribute]
public string BucketARN { get; public set; }
    [AWSPropertyAttribute]
public BufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public CompressionFormat CompressionFormat { get; public set; }
    [AWSPropertyAttribute]
public string CustomTimeZone { get; public set; }
    public DataFormatConversionConfiguration DataFormatConversionConfiguration { get; public set; }
    public DynamicPartitioningConfiguration DynamicPartitioningConfiguration { get; public set; }
    [AWSPropertyAttribute]
public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ErrorOutputPrefix { get; public set; }
    [AWSPropertyAttribute]
public string FileExtension { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3DestinationDescription S3BackupDescription { get; public set; }
    public S3BackupMode S3BackupMode { get; public set; }
    public string get_BucketARN();
    public void set_BucketARN(string value);
    internal bool IsSetBucketARN();
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public CompressionFormat get_CompressionFormat();
    public void set_CompressionFormat(CompressionFormat value);
    internal bool IsSetCompressionFormat();
    public string get_CustomTimeZone();
    public void set_CustomTimeZone(string value);
    internal bool IsSetCustomTimeZone();
    public DataFormatConversionConfiguration get_DataFormatConversionConfiguration();
    public void set_DataFormatConversionConfiguration(DataFormatConversionConfiguration value);
    internal bool IsSetDataFormatConversionConfiguration();
    public DynamicPartitioningConfiguration get_DynamicPartitioningConfiguration();
    public void set_DynamicPartitioningConfiguration(DynamicPartitioningConfiguration value);
    internal bool IsSetDynamicPartitioningConfiguration();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_ErrorOutputPrefix();
    public void set_ErrorOutputPrefix(string value);
    internal bool IsSetErrorOutputPrefix();
    public string get_FileExtension();
    public void set_FileExtension(string value);
    internal bool IsSetFileExtension();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3DestinationDescription get_S3BackupDescription();
    public void set_S3BackupDescription(S3DestinationDescription value);
    internal bool IsSetS3BackupDescription();
    public S3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(S3BackupMode value);
    internal bool IsSetS3BackupMode();
}
public class Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate : object {
    private string _bucketARN;
    private BufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private CompressionFormat _compressionFormat;
    private string _customTimeZone;
    private DataFormatConversionConfiguration _dataFormatConversionConfiguration;
    private DynamicPartitioningConfiguration _dynamicPartitioningConfiguration;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _errorOutputPrefix;
    private string _fileExtension;
    private string _prefix;
    private ProcessingConfiguration _processingConfiguration;
    private string _roleARN;
    private S3BackupMode _s3BackupMode;
    private S3DestinationUpdate _s3BackupUpdate;
    [AWSPropertyAttribute]
public string BucketARN { get; public set; }
    public BufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public CompressionFormat CompressionFormat { get; public set; }
    [AWSPropertyAttribute]
public string CustomTimeZone { get; public set; }
    public DataFormatConversionConfiguration DataFormatConversionConfiguration { get; public set; }
    public DynamicPartitioningConfiguration DynamicPartitioningConfiguration { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ErrorOutputPrefix { get; public set; }
    [AWSPropertyAttribute]
public string FileExtension { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3BackupMode S3BackupMode { get; public set; }
    public S3DestinationUpdate S3BackupUpdate { get; public set; }
    public string get_BucketARN();
    public void set_BucketARN(string value);
    internal bool IsSetBucketARN();
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public CompressionFormat get_CompressionFormat();
    public void set_CompressionFormat(CompressionFormat value);
    internal bool IsSetCompressionFormat();
    public string get_CustomTimeZone();
    public void set_CustomTimeZone(string value);
    internal bool IsSetCustomTimeZone();
    public DataFormatConversionConfiguration get_DataFormatConversionConfiguration();
    public void set_DataFormatConversionConfiguration(DataFormatConversionConfiguration value);
    internal bool IsSetDataFormatConversionConfiguration();
    public DynamicPartitioningConfiguration get_DynamicPartitioningConfiguration();
    public void set_DynamicPartitioningConfiguration(DynamicPartitioningConfiguration value);
    internal bool IsSetDynamicPartitioningConfiguration();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_ErrorOutputPrefix();
    public void set_ErrorOutputPrefix(string value);
    internal bool IsSetErrorOutputPrefix();
    public string get_FileExtension();
    public void set_FileExtension(string value);
    internal bool IsSetFileExtension();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(S3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationUpdate get_S3BackupUpdate();
    public void set_S3BackupUpdate(S3DestinationUpdate value);
    internal bool IsSetS3BackupUpdate();
}
public class Amazon.KinesisFirehose.Model.FailureDescription : object {
    private string _details;
    private DeliveryStreamFailureType _type;
    [AWSPropertyAttribute]
public string Details { get; public set; }
    [AWSPropertyAttribute]
public DeliveryStreamFailureType Type { get; public set; }
    public string get_Details();
    public void set_Details(string value);
    internal bool IsSetDetails();
    public DeliveryStreamFailureType get_Type();
    public void set_Type(DeliveryStreamFailureType value);
    internal bool IsSetType();
}
public class Amazon.KinesisFirehose.Model.HiveJsonSerDe : object {
    private List`1<string> _timestampFormats;
    public List`1<string> TimestampFormats { get; public set; }
    public List`1<string> get_TimestampFormats();
    public void set_TimestampFormats(List`1<string> value);
    internal bool IsSetTimestampFormats();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointBufferingHints : object {
    private Nullable`1<int> _intervalInSeconds;
    private Nullable`1<int> _sizeInMBs;
    [AWSPropertyAttribute]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SizeInMBs { get; public set; }
    public Nullable`1<int> get_IntervalInSeconds();
    public void set_IntervalInSeconds(Nullable`1<int> value);
    internal bool IsSetIntervalInSeconds();
    public Nullable`1<int> get_SizeInMBs();
    public void set_SizeInMBs(Nullable`1<int> value);
    internal bool IsSetSizeInMBs();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointCommonAttribute : object {
    private string _attributeName;
    private string _attributeValue;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public string AttributeValue { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointConfiguration : object {
    private string _accessKey;
    private string _name;
    private string _url;
    [AWSPropertyAttribute]
public string AccessKey { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Url { get; public set; }
    public string get_AccessKey();
    public void set_AccessKey(string value);
    internal bool IsSetAccessKey();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointDescription : object {
    private string _name;
    private string _url;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Url { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration : object {
    private HttpEndpointBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private HttpEndpointConfiguration _endpointConfiguration;
    private ProcessingConfiguration _processingConfiguration;
    private HttpEndpointRequestConfiguration _requestConfiguration;
    private HttpEndpointRetryOptions _retryOptions;
    private string _roleARN;
    private HttpEndpointS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    public HttpEndpointBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public HttpEndpointConfiguration EndpointConfiguration { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public HttpEndpointRequestConfiguration RequestConfiguration { get; public set; }
    public HttpEndpointRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public HttpEndpointS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public HttpEndpointBufferingHints get_BufferingHints();
    public void set_BufferingHints(HttpEndpointBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public HttpEndpointConfiguration get_EndpointConfiguration();
    public void set_EndpointConfiguration(HttpEndpointConfiguration value);
    internal bool IsSetEndpointConfiguration();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public HttpEndpointRequestConfiguration get_RequestConfiguration();
    public void set_RequestConfiguration(HttpEndpointRequestConfiguration value);
    internal bool IsSetRequestConfiguration();
    public HttpEndpointRetryOptions get_RetryOptions();
    public void set_RetryOptions(HttpEndpointRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public HttpEndpointS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(HttpEndpointS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription : object {
    private HttpEndpointBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private HttpEndpointDescription _endpointConfiguration;
    private ProcessingConfiguration _processingConfiguration;
    private HttpEndpointRequestConfiguration _requestConfiguration;
    private HttpEndpointRetryOptions _retryOptions;
    private string _roleARN;
    private HttpEndpointS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    public HttpEndpointBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public HttpEndpointDescription EndpointConfiguration { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public HttpEndpointRequestConfiguration RequestConfiguration { get; public set; }
    public HttpEndpointRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public HttpEndpointS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public HttpEndpointBufferingHints get_BufferingHints();
    public void set_BufferingHints(HttpEndpointBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public HttpEndpointDescription get_EndpointConfiguration();
    public void set_EndpointConfiguration(HttpEndpointDescription value);
    internal bool IsSetEndpointConfiguration();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public HttpEndpointRequestConfiguration get_RequestConfiguration();
    public void set_RequestConfiguration(HttpEndpointRequestConfiguration value);
    internal bool IsSetRequestConfiguration();
    public HttpEndpointRetryOptions get_RetryOptions();
    public void set_RetryOptions(HttpEndpointRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public HttpEndpointS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(HttpEndpointS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate : object {
    private HttpEndpointBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private HttpEndpointConfiguration _endpointConfiguration;
    private ProcessingConfiguration _processingConfiguration;
    private HttpEndpointRequestConfiguration _requestConfiguration;
    private HttpEndpointRetryOptions _retryOptions;
    private string _roleARN;
    private HttpEndpointS3BackupMode _s3BackupMode;
    private S3DestinationUpdate _s3Update;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    public HttpEndpointBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public HttpEndpointConfiguration EndpointConfiguration { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public HttpEndpointRequestConfiguration RequestConfiguration { get; public set; }
    public HttpEndpointRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public HttpEndpointS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationUpdate S3Update { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public HttpEndpointBufferingHints get_BufferingHints();
    public void set_BufferingHints(HttpEndpointBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public HttpEndpointConfiguration get_EndpointConfiguration();
    public void set_EndpointConfiguration(HttpEndpointConfiguration value);
    internal bool IsSetEndpointConfiguration();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public HttpEndpointRequestConfiguration get_RequestConfiguration();
    public void set_RequestConfiguration(HttpEndpointRequestConfiguration value);
    internal bool IsSetRequestConfiguration();
    public HttpEndpointRetryOptions get_RetryOptions();
    public void set_RetryOptions(HttpEndpointRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public HttpEndpointS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(HttpEndpointS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationUpdate get_S3Update();
    public void set_S3Update(S3DestinationUpdate value);
    internal bool IsSetS3Update();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointRequestConfiguration : object {
    private List`1<HttpEndpointCommonAttribute> _commonAttributes;
    private ContentEncoding _contentEncoding;
    [AWSPropertyAttribute]
public List`1<HttpEndpointCommonAttribute> CommonAttributes { get; public set; }
    public ContentEncoding ContentEncoding { get; public set; }
    public List`1<HttpEndpointCommonAttribute> get_CommonAttributes();
    public void set_CommonAttributes(List`1<HttpEndpointCommonAttribute> value);
    internal bool IsSetCommonAttributes();
    public ContentEncoding get_ContentEncoding();
    public void set_ContentEncoding(ContentEncoding value);
    internal bool IsSetContentEncoding();
}
public class Amazon.KinesisFirehose.Model.HttpEndpointRetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.IcebergDestinationConfiguration : object {
    private BufferingHints _bufferingHints;
    private CatalogConfiguration _catalogConfiguration;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private List`1<DestinationTableConfiguration> _destinationTableConfigurationList;
    private ProcessingConfiguration _processingConfiguration;
    private RetryOptions _retryOptions;
    private string _roleARN;
    private IcebergS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    public BufferingHints BufferingHints { get; public set; }
    [AWSPropertyAttribute]
public CatalogConfiguration CatalogConfiguration { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public List`1<DestinationTableConfiguration> DestinationTableConfigurationList { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public IcebergS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CatalogConfiguration get_CatalogConfiguration();
    public void set_CatalogConfiguration(CatalogConfiguration value);
    internal bool IsSetCatalogConfiguration();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public List`1<DestinationTableConfiguration> get_DestinationTableConfigurationList();
    public void set_DestinationTableConfigurationList(List`1<DestinationTableConfiguration> value);
    internal bool IsSetDestinationTableConfigurationList();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public RetryOptions get_RetryOptions();
    public void set_RetryOptions(RetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public IcebergS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(IcebergS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
}
public class Amazon.KinesisFirehose.Model.IcebergDestinationDescription : object {
    private BufferingHints _bufferingHints;
    private CatalogConfiguration _catalogConfiguration;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private List`1<DestinationTableConfiguration> _destinationTableConfigurationList;
    private ProcessingConfiguration _processingConfiguration;
    private RetryOptions _retryOptions;
    private string _roleARN;
    private IcebergS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    public BufferingHints BufferingHints { get; public set; }
    public CatalogConfiguration CatalogConfiguration { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public List`1<DestinationTableConfiguration> DestinationTableConfigurationList { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public IcebergS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CatalogConfiguration get_CatalogConfiguration();
    public void set_CatalogConfiguration(CatalogConfiguration value);
    internal bool IsSetCatalogConfiguration();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public List`1<DestinationTableConfiguration> get_DestinationTableConfigurationList();
    public void set_DestinationTableConfigurationList(List`1<DestinationTableConfiguration> value);
    internal bool IsSetDestinationTableConfigurationList();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public RetryOptions get_RetryOptions();
    public void set_RetryOptions(RetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public IcebergS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(IcebergS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
}
public class Amazon.KinesisFirehose.Model.IcebergDestinationUpdate : object {
    private BufferingHints _bufferingHints;
    private CatalogConfiguration _catalogConfiguration;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private List`1<DestinationTableConfiguration> _destinationTableConfigurationList;
    private ProcessingConfiguration _processingConfiguration;
    private RetryOptions _retryOptions;
    private string _roleARN;
    private IcebergS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    public BufferingHints BufferingHints { get; public set; }
    public CatalogConfiguration CatalogConfiguration { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public List`1<DestinationTableConfiguration> DestinationTableConfigurationList { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public IcebergS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationConfiguration S3Configuration { get; public set; }
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CatalogConfiguration get_CatalogConfiguration();
    public void set_CatalogConfiguration(CatalogConfiguration value);
    internal bool IsSetCatalogConfiguration();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public List`1<DestinationTableConfiguration> get_DestinationTableConfigurationList();
    public void set_DestinationTableConfigurationList(List`1<DestinationTableConfiguration> value);
    internal bool IsSetDestinationTableConfigurationList();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public RetryOptions get_RetryOptions();
    public void set_RetryOptions(RetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public IcebergS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(IcebergS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
}
public class Amazon.KinesisFirehose.Model.InputFormatConfiguration : object {
    private Deserializer _deserializer;
    public Deserializer Deserializer { get; public set; }
    public Deserializer get_Deserializer();
    public void set_Deserializer(Deserializer value);
    internal bool IsSetDeserializer();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonOpenSearchServerlessBufferingHintsMarshaller : object {
    public static AmazonOpenSearchServerlessBufferingHintsMarshaller Instance;
    private static AmazonOpenSearchServerlessBufferingHintsMarshaller();
    public sealed virtual void Marshall(AmazonOpenSearchServerlessBufferingHints requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonOpenSearchServerlessBufferingHintsUnmarshaller : object {
    private static AmazonOpenSearchServerlessBufferingHintsUnmarshaller _instance;
    public static AmazonOpenSearchServerlessBufferingHintsUnmarshaller Instance { get; }
    private static AmazonOpenSearchServerlessBufferingHintsUnmarshaller();
    private sealed virtual override AmazonOpenSearchServerlessBufferingHints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessBufferingHints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonOpenSearchServerlessBufferingHints Unmarshall(JsonUnmarshallerContext context);
    public static AmazonOpenSearchServerlessBufferingHintsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonOpenSearchServerlessDestinationConfigurationMarshaller : object {
    public static AmazonOpenSearchServerlessDestinationConfigurationMarshaller Instance;
    private static AmazonOpenSearchServerlessDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(AmazonOpenSearchServerlessDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonOpenSearchServerlessDestinationDescriptionUnmarshaller : object {
    private static AmazonOpenSearchServerlessDestinationDescriptionUnmarshaller _instance;
    public static AmazonOpenSearchServerlessDestinationDescriptionUnmarshaller Instance { get; }
    private static AmazonOpenSearchServerlessDestinationDescriptionUnmarshaller();
    private sealed virtual override AmazonOpenSearchServerlessDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonOpenSearchServerlessDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static AmazonOpenSearchServerlessDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonOpenSearchServerlessDestinationUpdateMarshaller : object {
    public static AmazonOpenSearchServerlessDestinationUpdateMarshaller Instance;
    private static AmazonOpenSearchServerlessDestinationUpdateMarshaller();
    public sealed virtual void Marshall(AmazonOpenSearchServerlessDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonOpenSearchServerlessRetryOptionsMarshaller : object {
    public static AmazonOpenSearchServerlessRetryOptionsMarshaller Instance;
    private static AmazonOpenSearchServerlessRetryOptionsMarshaller();
    public sealed virtual void Marshall(AmazonOpenSearchServerlessRetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonOpenSearchServerlessRetryOptionsUnmarshaller : object {
    private static AmazonOpenSearchServerlessRetryOptionsUnmarshaller _instance;
    public static AmazonOpenSearchServerlessRetryOptionsUnmarshaller Instance { get; }
    private static AmazonOpenSearchServerlessRetryOptionsUnmarshaller();
    private sealed virtual override AmazonOpenSearchServerlessRetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.AmazonOpenSearchServerlessRetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonOpenSearchServerlessRetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static AmazonOpenSearchServerlessRetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsMarshaller : object {
    public static AmazonopensearchserviceBufferingHintsMarshaller Instance;
    private static AmazonopensearchserviceBufferingHintsMarshaller();
    public sealed virtual void Marshall(AmazonopensearchserviceBufferingHints requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsUnmarshaller : object {
    private static AmazonopensearchserviceBufferingHintsUnmarshaller _instance;
    public static AmazonopensearchserviceBufferingHintsUnmarshaller Instance { get; }
    private static AmazonopensearchserviceBufferingHintsUnmarshaller();
    private sealed virtual override AmazonopensearchserviceBufferingHints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.AmazonopensearchserviceBufferingHints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonopensearchserviceBufferingHints Unmarshall(JsonUnmarshallerContext context);
    public static AmazonopensearchserviceBufferingHintsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationConfigurationMarshaller : object {
    public static AmazonopensearchserviceDestinationConfigurationMarshaller Instance;
    private static AmazonopensearchserviceDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(AmazonopensearchserviceDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationDescriptionUnmarshaller : object {
    private static AmazonopensearchserviceDestinationDescriptionUnmarshaller _instance;
    public static AmazonopensearchserviceDestinationDescriptionUnmarshaller Instance { get; }
    private static AmazonopensearchserviceDestinationDescriptionUnmarshaller();
    private sealed virtual override AmazonopensearchserviceDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonopensearchserviceDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static AmazonopensearchserviceDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationUpdateMarshaller : object {
    public static AmazonopensearchserviceDestinationUpdateMarshaller Instance;
    private static AmazonopensearchserviceDestinationUpdateMarshaller();
    public sealed virtual void Marshall(AmazonopensearchserviceDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsMarshaller : object {
    public static AmazonopensearchserviceRetryOptionsMarshaller Instance;
    private static AmazonopensearchserviceRetryOptionsMarshaller();
    public sealed virtual void Marshall(AmazonopensearchserviceRetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsUnmarshaller : object {
    private static AmazonopensearchserviceRetryOptionsUnmarshaller _instance;
    public static AmazonopensearchserviceRetryOptionsUnmarshaller Instance { get; }
    private static AmazonopensearchserviceRetryOptionsUnmarshaller();
    private sealed virtual override AmazonopensearchserviceRetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.AmazonopensearchserviceRetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonopensearchserviceRetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static AmazonopensearchserviceRetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AuthenticationConfigurationMarshaller : object {
    public static AuthenticationConfigurationMarshaller Instance;
    private static AuthenticationConfigurationMarshaller();
    public sealed virtual void Marshall(AuthenticationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AuthenticationConfigurationUnmarshaller : object {
    private static AuthenticationConfigurationUnmarshaller _instance;
    public static AuthenticationConfigurationUnmarshaller Instance { get; }
    private static AuthenticationConfigurationUnmarshaller();
    private sealed virtual override AuthenticationConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.AuthenticationConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthenticationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AuthenticationConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsMarshaller : object {
    public static BufferingHintsMarshaller Instance;
    private static BufferingHintsMarshaller();
    public sealed virtual void Marshall(BufferingHints requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller : object {
    private static BufferingHintsUnmarshaller _instance;
    public static BufferingHintsUnmarshaller Instance { get; }
    private static BufferingHintsUnmarshaller();
    private sealed virtual override BufferingHints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.BufferingHints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BufferingHints Unmarshall(JsonUnmarshallerContext context);
    public static BufferingHintsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CatalogConfigurationMarshaller : object {
    public static CatalogConfigurationMarshaller Instance;
    private static CatalogConfigurationMarshaller();
    public sealed virtual void Marshall(CatalogConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CatalogConfigurationUnmarshaller : object {
    private static CatalogConfigurationUnmarshaller _instance;
    public static CatalogConfigurationUnmarshaller Instance { get; }
    private static CatalogConfigurationUnmarshaller();
    private sealed virtual override CatalogConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.CatalogConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CatalogConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static CatalogConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsMarshaller : object {
    public static CloudWatchLoggingOptionsMarshaller Instance;
    private static CloudWatchLoggingOptionsMarshaller();
    public sealed virtual void Marshall(CloudWatchLoggingOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller : object {
    private static CloudWatchLoggingOptionsUnmarshaller _instance;
    public static CloudWatchLoggingOptionsUnmarshaller Instance { get; }
    private static CloudWatchLoggingOptionsUnmarshaller();
    private sealed virtual override CloudWatchLoggingOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchLoggingOptions Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchLoggingOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandMarshaller : object {
    public static CopyCommandMarshaller Instance;
    private static CopyCommandMarshaller();
    public sealed virtual void Marshall(CopyCommand requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller : object {
    private static CopyCommandUnmarshaller _instance;
    public static CopyCommandUnmarshaller Instance { get; }
    private static CopyCommandUnmarshaller();
    private sealed virtual override CopyCommand Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.CopyCommand,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CopyCommand Unmarshall(JsonUnmarshallerContext context);
    public static CopyCommandUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller : object {
    private static CreateDeliveryStreamRequestMarshaller _instance;
    public static CreateDeliveryStreamRequestMarshaller Instance { get; }
    private static CreateDeliveryStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDeliveryStreamRequest publicRequest);
    internal static CreateDeliveryStreamRequestMarshaller GetInstance();
    public static CreateDeliveryStreamRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDeliveryStreamResponseUnmarshaller _instance;
    public static CreateDeliveryStreamResponseUnmarshaller Instance { get; }
    private static CreateDeliveryStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDeliveryStreamResponseUnmarshaller GetInstance();
    public static CreateDeliveryStreamResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationMarshaller : object {
    public static DataFormatConversionConfigurationMarshaller Instance;
    private static DataFormatConversionConfigurationMarshaller();
    public sealed virtual void Marshall(DataFormatConversionConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationUnmarshaller : object {
    private static DataFormatConversionConfigurationUnmarshaller _instance;
    public static DataFormatConversionConfigurationUnmarshaller Instance { get; }
    private static DataFormatConversionConfigurationUnmarshaller();
    private sealed virtual override DataFormatConversionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataFormatConversionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DataFormatConversionConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller : object {
    private static DeleteDeliveryStreamRequestMarshaller _instance;
    public static DeleteDeliveryStreamRequestMarshaller Instance { get; }
    private static DeleteDeliveryStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDeliveryStreamRequest publicRequest);
    internal static DeleteDeliveryStreamRequestMarshaller GetInstance();
    public static DeleteDeliveryStreamRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDeliveryStreamResponseUnmarshaller _instance;
    public static DeleteDeliveryStreamResponseUnmarshaller Instance { get; }
    private static DeleteDeliveryStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDeliveryStreamResponseUnmarshaller GetInstance();
    public static DeleteDeliveryStreamResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller : object {
    private static DeliveryStreamDescriptionUnmarshaller _instance;
    public static DeliveryStreamDescriptionUnmarshaller Instance { get; }
    private static DeliveryStreamDescriptionUnmarshaller();
    private sealed virtual override DeliveryStreamDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.DeliveryStreamDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeliveryStreamDescription Unmarshall(JsonUnmarshallerContext context);
    public static DeliveryStreamDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationInputMarshaller : object {
    public static DeliveryStreamEncryptionConfigurationInputMarshaller Instance;
    private static DeliveryStreamEncryptionConfigurationInputMarshaller();
    public sealed virtual void Marshall(DeliveryStreamEncryptionConfigurationInput requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationUnmarshaller : object {
    private static DeliveryStreamEncryptionConfigurationUnmarshaller _instance;
    public static DeliveryStreamEncryptionConfigurationUnmarshaller Instance { get; }
    private static DeliveryStreamEncryptionConfigurationUnmarshaller();
    private sealed virtual override DeliveryStreamEncryptionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeliveryStreamEncryptionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DeliveryStreamEncryptionConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller : object {
    private static DescribeDeliveryStreamRequestMarshaller _instance;
    public static DescribeDeliveryStreamRequestMarshaller Instance { get; }
    private static DescribeDeliveryStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDeliveryStreamRequest publicRequest);
    internal static DescribeDeliveryStreamRequestMarshaller GetInstance();
    public static DescribeDeliveryStreamRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDeliveryStreamResponseUnmarshaller _instance;
    public static DescribeDeliveryStreamResponseUnmarshaller Instance { get; }
    private static DescribeDeliveryStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDeliveryStreamResponseUnmarshaller GetInstance();
    public static DescribeDeliveryStreamResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerMarshaller : object {
    public static DeserializerMarshaller Instance;
    private static DeserializerMarshaller();
    public sealed virtual void Marshall(Deserializer requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerUnmarshaller : object {
    private static DeserializerUnmarshaller _instance;
    public static DeserializerUnmarshaller Instance { get; }
    private static DeserializerUnmarshaller();
    private sealed virtual override Deserializer Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.Deserializer,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Deserializer Unmarshall(JsonUnmarshallerContext context);
    public static DeserializerUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller : object {
    private static DestinationDescriptionUnmarshaller _instance;
    public static DestinationDescriptionUnmarshaller Instance { get; }
    private static DestinationDescriptionUnmarshaller();
    private sealed virtual override DestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.DestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static DestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationTableConfigurationMarshaller : object {
    public static DestinationTableConfigurationMarshaller Instance;
    private static DestinationTableConfigurationMarshaller();
    public sealed virtual void Marshall(DestinationTableConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationTableConfigurationUnmarshaller : object {
    private static DestinationTableConfigurationUnmarshaller _instance;
    public static DestinationTableConfigurationUnmarshaller Instance { get; }
    private static DestinationTableConfigurationUnmarshaller();
    private sealed virtual override DestinationTableConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.DestinationTableConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DestinationTableConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DestinationTableConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DocumentIdOptionsMarshaller : object {
    public static DocumentIdOptionsMarshaller Instance;
    private static DocumentIdOptionsMarshaller();
    public sealed virtual void Marshall(DocumentIdOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DocumentIdOptionsUnmarshaller : object {
    private static DocumentIdOptionsUnmarshaller _instance;
    public static DocumentIdOptionsUnmarshaller Instance { get; }
    private static DocumentIdOptionsUnmarshaller();
    private sealed virtual override DocumentIdOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.DocumentIdOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentIdOptions Unmarshall(JsonUnmarshallerContext context);
    public static DocumentIdOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationMarshaller : object {
    public static DynamicPartitioningConfigurationMarshaller Instance;
    private static DynamicPartitioningConfigurationMarshaller();
    public sealed virtual void Marshall(DynamicPartitioningConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationUnmarshaller : object {
    private static DynamicPartitioningConfigurationUnmarshaller _instance;
    public static DynamicPartitioningConfigurationUnmarshaller Instance { get; }
    private static DynamicPartitioningConfigurationUnmarshaller();
    private sealed virtual override DynamicPartitioningConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.DynamicPartitioningConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DynamicPartitioningConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DynamicPartitioningConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsMarshaller : object {
    public static ElasticsearchBufferingHintsMarshaller Instance;
    private static ElasticsearchBufferingHintsMarshaller();
    public sealed virtual void Marshall(ElasticsearchBufferingHints requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller : object {
    private static ElasticsearchBufferingHintsUnmarshaller _instance;
    public static ElasticsearchBufferingHintsUnmarshaller Instance { get; }
    private static ElasticsearchBufferingHintsUnmarshaller();
    private sealed virtual override ElasticsearchBufferingHints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticsearchBufferingHints Unmarshall(JsonUnmarshallerContext context);
    public static ElasticsearchBufferingHintsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationConfigurationMarshaller : object {
    public static ElasticsearchDestinationConfigurationMarshaller Instance;
    private static ElasticsearchDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(ElasticsearchDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller : object {
    private static ElasticsearchDestinationDescriptionUnmarshaller _instance;
    public static ElasticsearchDestinationDescriptionUnmarshaller Instance { get; }
    private static ElasticsearchDestinationDescriptionUnmarshaller();
    private sealed virtual override ElasticsearchDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticsearchDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static ElasticsearchDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationUpdateMarshaller : object {
    public static ElasticsearchDestinationUpdateMarshaller Instance;
    private static ElasticsearchDestinationUpdateMarshaller();
    public sealed virtual void Marshall(ElasticsearchDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsMarshaller : object {
    public static ElasticsearchRetryOptionsMarshaller Instance;
    private static ElasticsearchRetryOptionsMarshaller();
    public sealed virtual void Marshall(ElasticsearchRetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller : object {
    private static ElasticsearchRetryOptionsUnmarshaller _instance;
    public static ElasticsearchRetryOptionsUnmarshaller Instance { get; }
    private static ElasticsearchRetryOptionsUnmarshaller();
    private sealed virtual override ElasticsearchRetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticsearchRetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static ElasticsearchRetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller : object {
    public static EncryptionConfigurationMarshaller Instance;
    private static EncryptionConfigurationMarshaller();
    public sealed virtual void Marshall(EncryptionConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller : object {
    private static EncryptionConfigurationUnmarshaller _instance;
    public static EncryptionConfigurationUnmarshaller Instance { get; }
    private static EncryptionConfigurationUnmarshaller();
    private sealed virtual override EncryptionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.EncryptionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationConfigurationMarshaller : object {
    public static ExtendedS3DestinationConfigurationMarshaller Instance;
    private static ExtendedS3DestinationConfigurationMarshaller();
    public sealed virtual void Marshall(ExtendedS3DestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller : object {
    private static ExtendedS3DestinationDescriptionUnmarshaller _instance;
    public static ExtendedS3DestinationDescriptionUnmarshaller Instance { get; }
    private static ExtendedS3DestinationDescriptionUnmarshaller();
    private sealed virtual override ExtendedS3DestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExtendedS3DestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static ExtendedS3DestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationUpdateMarshaller : object {
    public static ExtendedS3DestinationUpdateMarshaller Instance;
    private static ExtendedS3DestinationUpdateMarshaller();
    public sealed virtual void Marshall(ExtendedS3DestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.FailureDescriptionUnmarshaller : object {
    private static FailureDescriptionUnmarshaller _instance;
    public static FailureDescriptionUnmarshaller Instance { get; }
    private static FailureDescriptionUnmarshaller();
    private sealed virtual override FailureDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.FailureDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FailureDescription Unmarshall(JsonUnmarshallerContext context);
    public static FailureDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeMarshaller : object {
    public static HiveJsonSerDeMarshaller Instance;
    private static HiveJsonSerDeMarshaller();
    public sealed virtual void Marshall(HiveJsonSerDe requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeUnmarshaller : object {
    private static HiveJsonSerDeUnmarshaller _instance;
    public static HiveJsonSerDeUnmarshaller Instance { get; }
    private static HiveJsonSerDeUnmarshaller();
    private sealed virtual override HiveJsonSerDe Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.HiveJsonSerDe,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HiveJsonSerDe Unmarshall(JsonUnmarshallerContext context);
    public static HiveJsonSerDeUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsMarshaller : object {
    public static HttpEndpointBufferingHintsMarshaller Instance;
    private static HttpEndpointBufferingHintsMarshaller();
    public sealed virtual void Marshall(HttpEndpointBufferingHints requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsUnmarshaller : object {
    private static HttpEndpointBufferingHintsUnmarshaller _instance;
    public static HttpEndpointBufferingHintsUnmarshaller Instance { get; }
    private static HttpEndpointBufferingHintsUnmarshaller();
    private sealed virtual override HttpEndpointBufferingHints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.HttpEndpointBufferingHints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpEndpointBufferingHints Unmarshall(JsonUnmarshallerContext context);
    public static HttpEndpointBufferingHintsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeMarshaller : object {
    public static HttpEndpointCommonAttributeMarshaller Instance;
    private static HttpEndpointCommonAttributeMarshaller();
    public sealed virtual void Marshall(HttpEndpointCommonAttribute requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeUnmarshaller : object {
    private static HttpEndpointCommonAttributeUnmarshaller _instance;
    public static HttpEndpointCommonAttributeUnmarshaller Instance { get; }
    private static HttpEndpointCommonAttributeUnmarshaller();
    private sealed virtual override HttpEndpointCommonAttribute Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.HttpEndpointCommonAttribute,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpEndpointCommonAttribute Unmarshall(JsonUnmarshallerContext context);
    public static HttpEndpointCommonAttributeUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointConfigurationMarshaller : object {
    public static HttpEndpointConfigurationMarshaller Instance;
    private static HttpEndpointConfigurationMarshaller();
    public sealed virtual void Marshall(HttpEndpointConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDescriptionUnmarshaller : object {
    private static HttpEndpointDescriptionUnmarshaller _instance;
    public static HttpEndpointDescriptionUnmarshaller Instance { get; }
    private static HttpEndpointDescriptionUnmarshaller();
    private sealed virtual override HttpEndpointDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.HttpEndpointDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpEndpointDescription Unmarshall(JsonUnmarshallerContext context);
    public static HttpEndpointDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationConfigurationMarshaller : object {
    public static HttpEndpointDestinationConfigurationMarshaller Instance;
    private static HttpEndpointDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(HttpEndpointDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationDescriptionUnmarshaller : object {
    private static HttpEndpointDestinationDescriptionUnmarshaller _instance;
    public static HttpEndpointDestinationDescriptionUnmarshaller Instance { get; }
    private static HttpEndpointDestinationDescriptionUnmarshaller();
    private sealed virtual override HttpEndpointDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpEndpointDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static HttpEndpointDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationUpdateMarshaller : object {
    public static HttpEndpointDestinationUpdateMarshaller Instance;
    private static HttpEndpointDestinationUpdateMarshaller();
    public sealed virtual void Marshall(HttpEndpointDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationMarshaller : object {
    public static HttpEndpointRequestConfigurationMarshaller Instance;
    private static HttpEndpointRequestConfigurationMarshaller();
    public sealed virtual void Marshall(HttpEndpointRequestConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationUnmarshaller : object {
    private static HttpEndpointRequestConfigurationUnmarshaller _instance;
    public static HttpEndpointRequestConfigurationUnmarshaller Instance { get; }
    private static HttpEndpointRequestConfigurationUnmarshaller();
    private sealed virtual override HttpEndpointRequestConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.HttpEndpointRequestConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpEndpointRequestConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static HttpEndpointRequestConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsMarshaller : object {
    public static HttpEndpointRetryOptionsMarshaller Instance;
    private static HttpEndpointRetryOptionsMarshaller();
    public sealed virtual void Marshall(HttpEndpointRetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsUnmarshaller : object {
    private static HttpEndpointRetryOptionsUnmarshaller _instance;
    public static HttpEndpointRetryOptionsUnmarshaller Instance { get; }
    private static HttpEndpointRetryOptionsUnmarshaller();
    private sealed virtual override HttpEndpointRetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.HttpEndpointRetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HttpEndpointRetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static HttpEndpointRetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.IcebergDestinationConfigurationMarshaller : object {
    public static IcebergDestinationConfigurationMarshaller Instance;
    private static IcebergDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(IcebergDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.IcebergDestinationDescriptionUnmarshaller : object {
    private static IcebergDestinationDescriptionUnmarshaller _instance;
    public static IcebergDestinationDescriptionUnmarshaller Instance { get; }
    private static IcebergDestinationDescriptionUnmarshaller();
    private sealed virtual override IcebergDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.IcebergDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IcebergDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static IcebergDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.IcebergDestinationUpdateMarshaller : object {
    public static IcebergDestinationUpdateMarshaller Instance;
    private static IcebergDestinationUpdateMarshaller();
    public sealed virtual void Marshall(IcebergDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationMarshaller : object {
    public static InputFormatConfigurationMarshaller Instance;
    private static InputFormatConfigurationMarshaller();
    public sealed virtual void Marshall(InputFormatConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationUnmarshaller : object {
    private static InputFormatConfigurationUnmarshaller _instance;
    public static InputFormatConfigurationUnmarshaller Instance { get; }
    private static InputFormatConfigurationUnmarshaller();
    private sealed virtual override InputFormatConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.InputFormatConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InputFormatConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static InputFormatConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller : object {
    private static InvalidArgumentExceptionUnmarshaller _instance;
    public static InvalidArgumentExceptionUnmarshaller Instance { get; }
    private static InvalidArgumentExceptionUnmarshaller();
    public sealed virtual InvalidArgumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidArgumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidArgumentExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidKMSResourceExceptionUnmarshaller : object {
    private static InvalidKMSResourceExceptionUnmarshaller _instance;
    public static InvalidKMSResourceExceptionUnmarshaller Instance { get; }
    private static InvalidKMSResourceExceptionUnmarshaller();
    public sealed virtual InvalidKMSResourceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidKMSResourceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidKMSResourceExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidSourceExceptionUnmarshaller : object {
    private static InvalidSourceExceptionUnmarshaller _instance;
    public static InvalidSourceExceptionUnmarshaller Instance { get; }
    private static InvalidSourceExceptionUnmarshaller();
    public sealed virtual InvalidSourceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSourceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSourceExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceConfigurationMarshaller : object {
    public static KinesisStreamSourceConfigurationMarshaller Instance;
    private static KinesisStreamSourceConfigurationMarshaller();
    public sealed virtual void Marshall(KinesisStreamSourceConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceDescriptionUnmarshaller : object {
    private static KinesisStreamSourceDescriptionUnmarshaller _instance;
    public static KinesisStreamSourceDescriptionUnmarshaller Instance { get; }
    private static KinesisStreamSourceDescriptionUnmarshaller();
    private sealed virtual override KinesisStreamSourceDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.KinesisStreamSourceDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KinesisStreamSourceDescription Unmarshall(JsonUnmarshallerContext context);
    public static KinesisStreamSourceDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigMarshaller : object {
    public static KMSEncryptionConfigMarshaller Instance;
    private static KMSEncryptionConfigMarshaller();
    public sealed virtual void Marshall(KMSEncryptionConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller : object {
    private static KMSEncryptionConfigUnmarshaller _instance;
    public static KMSEncryptionConfigUnmarshaller Instance { get; }
    private static KMSEncryptionConfigUnmarshaller();
    private sealed virtual override KMSEncryptionConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.KMSEncryptionConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KMSEncryptionConfig Unmarshall(JsonUnmarshallerContext context);
    public static KMSEncryptionConfigUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller : object {
    private static ListDeliveryStreamsRequestMarshaller _instance;
    public static ListDeliveryStreamsRequestMarshaller Instance { get; }
    private static ListDeliveryStreamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDeliveryStreamsRequest publicRequest);
    internal static ListDeliveryStreamsRequestMarshaller GetInstance();
    public static ListDeliveryStreamsRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDeliveryStreamsResponseUnmarshaller _instance;
    public static ListDeliveryStreamsResponseUnmarshaller Instance { get; }
    private static ListDeliveryStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDeliveryStreamsResponseUnmarshaller GetInstance();
    public static ListDeliveryStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamRequestMarshaller : object {
    private static ListTagsForDeliveryStreamRequestMarshaller _instance;
    public static ListTagsForDeliveryStreamRequestMarshaller Instance { get; }
    private static ListTagsForDeliveryStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForDeliveryStreamRequest publicRequest);
    internal static ListTagsForDeliveryStreamRequestMarshaller GetInstance();
    public static ListTagsForDeliveryStreamRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForDeliveryStreamResponseUnmarshaller _instance;
    public static ListTagsForDeliveryStreamResponseUnmarshaller Instance { get; }
    private static ListTagsForDeliveryStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForDeliveryStreamResponseUnmarshaller GetInstance();
    public static ListTagsForDeliveryStreamResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.MSKSourceConfigurationMarshaller : object {
    public static MSKSourceConfigurationMarshaller Instance;
    private static MSKSourceConfigurationMarshaller();
    public sealed virtual void Marshall(MSKSourceConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.MSKSourceDescriptionUnmarshaller : object {
    private static MSKSourceDescriptionUnmarshaller _instance;
    public static MSKSourceDescriptionUnmarshaller Instance { get; }
    private static MSKSourceDescriptionUnmarshaller();
    private sealed virtual override MSKSourceDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.MSKSourceDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MSKSourceDescription Unmarshall(JsonUnmarshallerContext context);
    public static MSKSourceDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeMarshaller : object {
    public static OpenXJsonSerDeMarshaller Instance;
    private static OpenXJsonSerDeMarshaller();
    public sealed virtual void Marshall(OpenXJsonSerDe requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeUnmarshaller : object {
    private static OpenXJsonSerDeUnmarshaller _instance;
    public static OpenXJsonSerDeUnmarshaller Instance { get; }
    private static OpenXJsonSerDeUnmarshaller();
    private sealed virtual override OpenXJsonSerDe Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.OpenXJsonSerDe,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpenXJsonSerDe Unmarshall(JsonUnmarshallerContext context);
    public static OpenXJsonSerDeUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeMarshaller : object {
    public static OrcSerDeMarshaller Instance;
    private static OrcSerDeMarshaller();
    public sealed virtual void Marshall(OrcSerDe requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeUnmarshaller : object {
    private static OrcSerDeUnmarshaller _instance;
    public static OrcSerDeUnmarshaller Instance { get; }
    private static OrcSerDeUnmarshaller();
    private sealed virtual override OrcSerDe Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.OrcSerDe,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OrcSerDe Unmarshall(JsonUnmarshallerContext context);
    public static OrcSerDeUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationMarshaller : object {
    public static OutputFormatConfigurationMarshaller Instance;
    private static OutputFormatConfigurationMarshaller();
    public sealed virtual void Marshall(OutputFormatConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationUnmarshaller : object {
    private static OutputFormatConfigurationUnmarshaller _instance;
    public static OutputFormatConfigurationUnmarshaller Instance { get; }
    private static OutputFormatConfigurationUnmarshaller();
    private sealed virtual override OutputFormatConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.OutputFormatConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OutputFormatConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static OutputFormatConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeMarshaller : object {
    public static ParquetSerDeMarshaller Instance;
    private static ParquetSerDeMarshaller();
    public sealed virtual void Marshall(ParquetSerDe requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeUnmarshaller : object {
    private static ParquetSerDeUnmarshaller _instance;
    public static ParquetSerDeUnmarshaller Instance { get; }
    private static ParquetSerDeUnmarshaller();
    private sealed virtual override ParquetSerDe Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.ParquetSerDe,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParquetSerDe Unmarshall(JsonUnmarshallerContext context);
    public static ParquetSerDeUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationMarshaller : object {
    public static ProcessingConfigurationMarshaller Instance;
    private static ProcessingConfigurationMarshaller();
    public sealed virtual void Marshall(ProcessingConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller : object {
    private static ProcessingConfigurationUnmarshaller _instance;
    public static ProcessingConfigurationUnmarshaller Instance { get; }
    private static ProcessingConfigurationUnmarshaller();
    private sealed virtual override ProcessingConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.ProcessingConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProcessingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ProcessingConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorMarshaller : object {
    public static ProcessorMarshaller Instance;
    private static ProcessorMarshaller();
    public sealed virtual void Marshall(Processor requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterMarshaller : object {
    public static ProcessorParameterMarshaller Instance;
    private static ProcessorParameterMarshaller();
    public sealed virtual void Marshall(ProcessorParameter requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller : object {
    private static ProcessorParameterUnmarshaller _instance;
    public static ProcessorParameterUnmarshaller Instance { get; }
    private static ProcessorParameterUnmarshaller();
    private sealed virtual override ProcessorParameter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.ProcessorParameter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProcessorParameter Unmarshall(JsonUnmarshallerContext context);
    public static ProcessorParameterUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller : object {
    private static ProcessorUnmarshaller _instance;
    public static ProcessorUnmarshaller Instance { get; }
    private static ProcessorUnmarshaller();
    private sealed virtual override Processor Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.Processor,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Processor Unmarshall(JsonUnmarshallerContext context);
    public static ProcessorUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller : object {
    private static PutRecordBatchRequestMarshaller _instance;
    public static PutRecordBatchRequestMarshaller Instance { get; }
    private static PutRecordBatchRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRecordBatchRequest publicRequest);
    internal static PutRecordBatchRequestMarshaller GetInstance();
    public static PutRecordBatchRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller : object {
    private static PutRecordBatchResponseEntryUnmarshaller _instance;
    public static PutRecordBatchResponseEntryUnmarshaller Instance { get; }
    private static PutRecordBatchResponseEntryUnmarshaller();
    private sealed virtual override PutRecordBatchResponseEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PutRecordBatchResponseEntry Unmarshall(JsonUnmarshallerContext context);
    public static PutRecordBatchResponseEntryUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRecordBatchResponseUnmarshaller _instance;
    public static PutRecordBatchResponseUnmarshaller Instance { get; }
    private static PutRecordBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRecordBatchResponseUnmarshaller GetInstance();
    public static PutRecordBatchResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller : object {
    private static PutRecordRequestMarshaller _instance;
    public static PutRecordRequestMarshaller Instance { get; }
    private static PutRecordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRecordRequest publicRequest);
    internal static PutRecordRequestMarshaller GetInstance();
    public static PutRecordRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRecordResponseUnmarshaller _instance;
    public static PutRecordResponseUnmarshaller Instance { get; }
    private static PutRecordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRecordResponseUnmarshaller GetInstance();
    public static PutRecordResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RecordMarshaller : object {
    public static RecordMarshaller Instance;
    private static RecordMarshaller();
    public sealed virtual void Marshall(Record requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationConfigurationMarshaller : object {
    public static RedshiftDestinationConfigurationMarshaller Instance;
    private static RedshiftDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(RedshiftDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller : object {
    private static RedshiftDestinationDescriptionUnmarshaller _instance;
    public static RedshiftDestinationDescriptionUnmarshaller Instance { get; }
    private static RedshiftDestinationDescriptionUnmarshaller();
    private sealed virtual override RedshiftDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.RedshiftDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedshiftDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static RedshiftDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationUpdateMarshaller : object {
    public static RedshiftDestinationUpdateMarshaller Instance;
    private static RedshiftDestinationUpdateMarshaller();
    public sealed virtual void Marshall(RedshiftDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsMarshaller : object {
    public static RedshiftRetryOptionsMarshaller Instance;
    private static RedshiftRetryOptionsMarshaller();
    public sealed virtual void Marshall(RedshiftRetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller : object {
    private static RedshiftRetryOptionsUnmarshaller _instance;
    public static RedshiftRetryOptionsUnmarshaller Instance { get; }
    private static RedshiftRetryOptionsUnmarshaller();
    private sealed virtual override RedshiftRetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.RedshiftRetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedshiftRetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static RedshiftRetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller : object {
    private static ResourceInUseExceptionUnmarshaller _instance;
    public static ResourceInUseExceptionUnmarshaller Instance { get; }
    private static ResourceInUseExceptionUnmarshaller();
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsMarshaller : object {
    public static RetryOptionsMarshaller Instance;
    private static RetryOptionsMarshaller();
    public sealed virtual void Marshall(RetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsUnmarshaller : object {
    private static RetryOptionsUnmarshaller _instance;
    public static RetryOptionsUnmarshaller Instance { get; }
    private static RetryOptionsUnmarshaller();
    private sealed virtual override RetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.RetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static RetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller : object {
    public static S3DestinationConfigurationMarshaller Instance;
    private static S3DestinationConfigurationMarshaller();
    public sealed virtual void Marshall(S3DestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller : object {
    private static S3DestinationDescriptionUnmarshaller _instance;
    public static S3DestinationDescriptionUnmarshaller Instance { get; }
    private static S3DestinationDescriptionUnmarshaller();
    private sealed virtual override S3DestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.S3DestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3DestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static S3DestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationUpdateMarshaller : object {
    public static S3DestinationUpdateMarshaller Instance;
    private static S3DestinationUpdateMarshaller();
    public sealed virtual void Marshall(S3DestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationMarshaller : object {
    public static SchemaConfigurationMarshaller Instance;
    private static SchemaConfigurationMarshaller();
    public sealed virtual void Marshall(SchemaConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationUnmarshaller : object {
    private static SchemaConfigurationUnmarshaller _instance;
    public static SchemaConfigurationUnmarshaller Instance { get; }
    private static SchemaConfigurationUnmarshaller();
    private sealed virtual override SchemaConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SchemaConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SchemaConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SecretsManagerConfigurationMarshaller : object {
    public static SecretsManagerConfigurationMarshaller Instance;
    private static SecretsManagerConfigurationMarshaller();
    public sealed virtual void Marshall(SecretsManagerConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SecretsManagerConfigurationUnmarshaller : object {
    private static SecretsManagerConfigurationUnmarshaller _instance;
    public static SecretsManagerConfigurationUnmarshaller Instance { get; }
    private static SecretsManagerConfigurationUnmarshaller();
    private sealed virtual override SecretsManagerConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SecretsManagerConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecretsManagerConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SecretsManagerConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerMarshaller : object {
    public static SerializerMarshaller Instance;
    private static SerializerMarshaller();
    public sealed virtual void Marshall(Serializer requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerUnmarshaller : object {
    private static SerializerUnmarshaller _instance;
    public static SerializerUnmarshaller Instance { get; }
    private static SerializerUnmarshaller();
    private sealed virtual override Serializer Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.Serializer,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Serializer Unmarshall(JsonUnmarshallerContext context);
    public static SerializerUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller : object {
    private static ServiceUnavailableExceptionUnmarshaller _instance;
    public static ServiceUnavailableExceptionUnmarshaller Instance { get; }
    private static ServiceUnavailableExceptionUnmarshaller();
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeBufferingHintsMarshaller : object {
    public static SnowflakeBufferingHintsMarshaller Instance;
    private static SnowflakeBufferingHintsMarshaller();
    public sealed virtual void Marshall(SnowflakeBufferingHints requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeBufferingHintsUnmarshaller : object {
    private static SnowflakeBufferingHintsUnmarshaller _instance;
    public static SnowflakeBufferingHintsUnmarshaller Instance { get; }
    private static SnowflakeBufferingHintsUnmarshaller();
    private sealed virtual override SnowflakeBufferingHints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SnowflakeBufferingHints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeBufferingHints Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeBufferingHintsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeDestinationConfigurationMarshaller : object {
    public static SnowflakeDestinationConfigurationMarshaller Instance;
    private static SnowflakeDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(SnowflakeDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeDestinationDescriptionUnmarshaller : object {
    private static SnowflakeDestinationDescriptionUnmarshaller _instance;
    public static SnowflakeDestinationDescriptionUnmarshaller Instance { get; }
    private static SnowflakeDestinationDescriptionUnmarshaller();
    private sealed virtual override SnowflakeDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SnowflakeDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeDestinationUpdateMarshaller : object {
    public static SnowflakeDestinationUpdateMarshaller Instance;
    private static SnowflakeDestinationUpdateMarshaller();
    public sealed virtual void Marshall(SnowflakeDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeRetryOptionsMarshaller : object {
    public static SnowflakeRetryOptionsMarshaller Instance;
    private static SnowflakeRetryOptionsMarshaller();
    public sealed virtual void Marshall(SnowflakeRetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeRetryOptionsUnmarshaller : object {
    private static SnowflakeRetryOptionsUnmarshaller _instance;
    public static SnowflakeRetryOptionsUnmarshaller Instance { get; }
    private static SnowflakeRetryOptionsUnmarshaller();
    private sealed virtual override SnowflakeRetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SnowflakeRetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeRetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeRetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeRoleConfigurationMarshaller : object {
    public static SnowflakeRoleConfigurationMarshaller Instance;
    private static SnowflakeRoleConfigurationMarshaller();
    public sealed virtual void Marshall(SnowflakeRoleConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeRoleConfigurationUnmarshaller : object {
    private static SnowflakeRoleConfigurationUnmarshaller _instance;
    public static SnowflakeRoleConfigurationUnmarshaller Instance { get; }
    private static SnowflakeRoleConfigurationUnmarshaller();
    private sealed virtual override SnowflakeRoleConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SnowflakeRoleConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeRoleConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeRoleConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeVpcConfigurationMarshaller : object {
    public static SnowflakeVpcConfigurationMarshaller Instance;
    private static SnowflakeVpcConfigurationMarshaller();
    public sealed virtual void Marshall(SnowflakeVpcConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SnowflakeVpcConfigurationUnmarshaller : object {
    private static SnowflakeVpcConfigurationUnmarshaller _instance;
    public static SnowflakeVpcConfigurationUnmarshaller Instance { get; }
    private static SnowflakeVpcConfigurationUnmarshaller();
    private sealed virtual override SnowflakeVpcConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SnowflakeVpcConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnowflakeVpcConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SnowflakeVpcConfigurationUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SourceDescriptionUnmarshaller : object {
    private static SourceDescriptionUnmarshaller _instance;
    public static SourceDescriptionUnmarshaller Instance { get; }
    private static SourceDescriptionUnmarshaller();
    private sealed virtual override SourceDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SourceDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceDescription Unmarshall(JsonUnmarshallerContext context);
    public static SourceDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkBufferingHintsMarshaller : object {
    public static SplunkBufferingHintsMarshaller Instance;
    private static SplunkBufferingHintsMarshaller();
    public sealed virtual void Marshall(SplunkBufferingHints requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkBufferingHintsUnmarshaller : object {
    private static SplunkBufferingHintsUnmarshaller _instance;
    public static SplunkBufferingHintsUnmarshaller Instance { get; }
    private static SplunkBufferingHintsUnmarshaller();
    private sealed virtual override SplunkBufferingHints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SplunkBufferingHints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SplunkBufferingHints Unmarshall(JsonUnmarshallerContext context);
    public static SplunkBufferingHintsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationConfigurationMarshaller : object {
    public static SplunkDestinationConfigurationMarshaller Instance;
    private static SplunkDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(SplunkDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationDescriptionUnmarshaller : object {
    private static SplunkDestinationDescriptionUnmarshaller _instance;
    public static SplunkDestinationDescriptionUnmarshaller Instance { get; }
    private static SplunkDestinationDescriptionUnmarshaller();
    private sealed virtual override SplunkDestinationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SplunkDestinationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SplunkDestinationDescription Unmarshall(JsonUnmarshallerContext context);
    public static SplunkDestinationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationUpdateMarshaller : object {
    public static SplunkDestinationUpdateMarshaller Instance;
    private static SplunkDestinationUpdateMarshaller();
    public sealed virtual void Marshall(SplunkDestinationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsMarshaller : object {
    public static SplunkRetryOptionsMarshaller Instance;
    private static SplunkRetryOptionsMarshaller();
    public sealed virtual void Marshall(SplunkRetryOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsUnmarshaller : object {
    private static SplunkRetryOptionsUnmarshaller _instance;
    public static SplunkRetryOptionsUnmarshaller Instance { get; }
    private static SplunkRetryOptionsUnmarshaller();
    private sealed virtual override SplunkRetryOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.SplunkRetryOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SplunkRetryOptions Unmarshall(JsonUnmarshallerContext context);
    public static SplunkRetryOptionsUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionRequestMarshaller : object {
    private static StartDeliveryStreamEncryptionRequestMarshaller _instance;
    public static StartDeliveryStreamEncryptionRequestMarshaller Instance { get; }
    private static StartDeliveryStreamEncryptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartDeliveryStreamEncryptionRequest publicRequest);
    internal static StartDeliveryStreamEncryptionRequestMarshaller GetInstance();
    public static StartDeliveryStreamEncryptionRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartDeliveryStreamEncryptionResponseUnmarshaller _instance;
    public static StartDeliveryStreamEncryptionResponseUnmarshaller Instance { get; }
    private static StartDeliveryStreamEncryptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartDeliveryStreamEncryptionResponseUnmarshaller GetInstance();
    public static StartDeliveryStreamEncryptionResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionRequestMarshaller : object {
    private static StopDeliveryStreamEncryptionRequestMarshaller _instance;
    public static StopDeliveryStreamEncryptionRequestMarshaller Instance { get; }
    private static StopDeliveryStreamEncryptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopDeliveryStreamEncryptionRequest publicRequest);
    internal static StopDeliveryStreamEncryptionRequestMarshaller GetInstance();
    public static StopDeliveryStreamEncryptionRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopDeliveryStreamEncryptionResponseUnmarshaller _instance;
    public static StopDeliveryStreamEncryptionResponseUnmarshaller Instance { get; }
    private static StopDeliveryStreamEncryptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopDeliveryStreamEncryptionResponseUnmarshaller GetInstance();
    public static StopDeliveryStreamEncryptionResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamRequestMarshaller : object {
    private static TagDeliveryStreamRequestMarshaller _instance;
    public static TagDeliveryStreamRequestMarshaller Instance { get; }
    private static TagDeliveryStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagDeliveryStreamRequest publicRequest);
    internal static TagDeliveryStreamRequestMarshaller GetInstance();
    public static TagDeliveryStreamRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagDeliveryStreamResponseUnmarshaller _instance;
    public static TagDeliveryStreamResponseUnmarshaller Instance { get; }
    private static TagDeliveryStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagDeliveryStreamResponseUnmarshaller GetInstance();
    public static TagDeliveryStreamResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamRequestMarshaller : object {
    private static UntagDeliveryStreamRequestMarshaller _instance;
    public static UntagDeliveryStreamRequestMarshaller Instance { get; }
    private static UntagDeliveryStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagDeliveryStreamRequest publicRequest);
    internal static UntagDeliveryStreamRequestMarshaller GetInstance();
    public static UntagDeliveryStreamRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagDeliveryStreamResponseUnmarshaller _instance;
    public static UntagDeliveryStreamResponseUnmarshaller Instance { get; }
    private static UntagDeliveryStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagDeliveryStreamResponseUnmarshaller GetInstance();
    public static UntagDeliveryStreamResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller : object {
    private static UpdateDestinationRequestMarshaller _instance;
    public static UpdateDestinationRequestMarshaller Instance { get; }
    private static UpdateDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDestinationRequest publicRequest);
    internal static UpdateDestinationRequestMarshaller GetInstance();
    public static UpdateDestinationRequestMarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDestinationResponseUnmarshaller _instance;
    public static UpdateDestinationResponseUnmarshaller Instance { get; }
    private static UpdateDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDestinationResponseUnmarshaller GetInstance();
    public static UpdateDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationDescriptionUnmarshaller : object {
    private static VpcConfigurationDescriptionUnmarshaller _instance;
    public static VpcConfigurationDescriptionUnmarshaller Instance { get; }
    private static VpcConfigurationDescriptionUnmarshaller();
    private sealed virtual override VpcConfigurationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KinesisFirehose.Model.VpcConfigurationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConfigurationDescription Unmarshall(JsonUnmarshallerContext context);
    public static VpcConfigurationDescriptionUnmarshaller get_Instance();
}
public class Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationMarshaller : object {
    public static VpcConfigurationMarshaller Instance;
    private static VpcConfigurationMarshaller();
    public sealed virtual void Marshall(VpcConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.KinesisFirehose.Model.InvalidArgumentException : AmazonKinesisFirehoseException {
    public InvalidArgumentException(string message);
    public InvalidArgumentException(string message, Exception innerException);
    public InvalidArgumentException(Exception innerException);
    public InvalidArgumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidArgumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KinesisFirehose.Model.InvalidKMSResourceException : AmazonKinesisFirehoseException {
    private string _code;
    public string Code { get; public set; }
    public InvalidKMSResourceException(string message);
    public InvalidKMSResourceException(string message, Exception innerException);
    public InvalidKMSResourceException(Exception innerException);
    public InvalidKMSResourceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidKMSResourceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
}
public class Amazon.KinesisFirehose.Model.InvalidSourceException : AmazonKinesisFirehoseException {
    private string _code;
    public string Code { get; public set; }
    public InvalidSourceException(string message);
    public InvalidSourceException(string message, Exception innerException);
    public InvalidSourceException(Exception innerException);
    public InvalidSourceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSourceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
}
public class Amazon.KinesisFirehose.Model.KinesisStreamSourceConfiguration : object {
    private string _kinesisStreamARN;
    private string _roleARN;
    [AWSPropertyAttribute]
public string KinesisStreamARN { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public string get_KinesisStreamARN();
    public void set_KinesisStreamARN(string value);
    internal bool IsSetKinesisStreamARN();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.KinesisFirehose.Model.KinesisStreamSourceDescription : object {
    private Nullable`1<DateTime> _deliveryStartTimestamp;
    private string _kinesisStreamARN;
    private string _roleARN;
    public Nullable`1<DateTime> DeliveryStartTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string KinesisStreamARN { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public Nullable`1<DateTime> get_DeliveryStartTimestamp();
    public void set_DeliveryStartTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetDeliveryStartTimestamp();
    public string get_KinesisStreamARN();
    public void set_KinesisStreamARN(string value);
    internal bool IsSetKinesisStreamARN();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.KinesisFirehose.Model.KMSEncryptionConfig : object {
    private string _awskmsKeyARN;
    [AWSPropertyAttribute]
public string AWSKMSKeyARN { get; public set; }
    public string get_AWSKMSKeyARN();
    public void set_AWSKMSKeyARN(string value);
    internal bool IsSetAWSKMSKeyARN();
}
public class Amazon.KinesisFirehose.Model.LimitExceededException : AmazonKinesisFirehoseException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest : AmazonKinesisFirehoseRequest {
    private DeliveryStreamType _deliveryStreamType;
    private string _exclusiveStartDeliveryStreamName;
    private Nullable`1<int> _limit;
    public DeliveryStreamType DeliveryStreamType { get; public set; }
    [AWSPropertyAttribute]
public string ExclusiveStartDeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public DeliveryStreamType get_DeliveryStreamType();
    public void set_DeliveryStreamType(DeliveryStreamType value);
    internal bool IsSetDeliveryStreamType();
    public string get_ExclusiveStartDeliveryStreamName();
    public void set_ExclusiveStartDeliveryStreamName(string value);
    internal bool IsSetExclusiveStartDeliveryStreamName();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
}
public class Amazon.KinesisFirehose.Model.ListDeliveryStreamsResponse : AmazonWebServiceResponse {
    private List`1<string> _deliveryStreamNames;
    private Nullable`1<bool> _hasMoreDeliveryStreams;
    [AWSPropertyAttribute]
public List`1<string> DeliveryStreamNames { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> HasMoreDeliveryStreams { get; public set; }
    public List`1<string> get_DeliveryStreamNames();
    public void set_DeliveryStreamNames(List`1<string> value);
    internal bool IsSetDeliveryStreamNames();
    public Nullable`1<bool> get_HasMoreDeliveryStreams();
    public void set_HasMoreDeliveryStreams(Nullable`1<bool> value);
    internal bool IsSetHasMoreDeliveryStreams();
}
public class Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest : AmazonKinesisFirehoseRequest {
    private string _deliveryStreamName;
    private string _exclusiveStartTagKey;
    private Nullable`1<int> _limit;
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public string ExclusiveStartTagKey { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public string get_ExclusiveStartTagKey();
    public void set_ExclusiveStartTagKey(string value);
    internal bool IsSetExclusiveStartTagKey();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
}
public class Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _hasMoreTags;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public Nullable`1<bool> HasMoreTags { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_HasMoreTags();
    public void set_HasMoreTags(Nullable`1<bool> value);
    internal bool IsSetHasMoreTags();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.KinesisFirehose.Model.MSKSourceConfiguration : object {
    private AuthenticationConfiguration _authenticationConfiguration;
    private string _mskClusterARN;
    private Nullable`1<DateTime> _readFromTimestamp;
    private string _topicName;
    [AWSPropertyAttribute]
public AuthenticationConfiguration AuthenticationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string MSKClusterARN { get; public set; }
    public Nullable`1<DateTime> ReadFromTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string TopicName { get; public set; }
    public AuthenticationConfiguration get_AuthenticationConfiguration();
    public void set_AuthenticationConfiguration(AuthenticationConfiguration value);
    internal bool IsSetAuthenticationConfiguration();
    public string get_MSKClusterARN();
    public void set_MSKClusterARN(string value);
    internal bool IsSetMSKClusterARN();
    public Nullable`1<DateTime> get_ReadFromTimestamp();
    public void set_ReadFromTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetReadFromTimestamp();
    public string get_TopicName();
    public void set_TopicName(string value);
    internal bool IsSetTopicName();
}
public class Amazon.KinesisFirehose.Model.MSKSourceDescription : object {
    private AuthenticationConfiguration _authenticationConfiguration;
    private Nullable`1<DateTime> _deliveryStartTimestamp;
    private string _mskClusterARN;
    private Nullable`1<DateTime> _readFromTimestamp;
    private string _topicName;
    public AuthenticationConfiguration AuthenticationConfiguration { get; public set; }
    public Nullable`1<DateTime> DeliveryStartTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string MSKClusterARN { get; public set; }
    public Nullable`1<DateTime> ReadFromTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string TopicName { get; public set; }
    public AuthenticationConfiguration get_AuthenticationConfiguration();
    public void set_AuthenticationConfiguration(AuthenticationConfiguration value);
    internal bool IsSetAuthenticationConfiguration();
    public Nullable`1<DateTime> get_DeliveryStartTimestamp();
    public void set_DeliveryStartTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetDeliveryStartTimestamp();
    public string get_MSKClusterARN();
    public void set_MSKClusterARN(string value);
    internal bool IsSetMSKClusterARN();
    public Nullable`1<DateTime> get_ReadFromTimestamp();
    public void set_ReadFromTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetReadFromTimestamp();
    public string get_TopicName();
    public void set_TopicName(string value);
    internal bool IsSetTopicName();
}
public class Amazon.KinesisFirehose.Model.OpenXJsonSerDe : object {
    private Nullable`1<bool> _caseInsensitive;
    private Dictionary`2<string, string> _columnToJsonKeyMappings;
    private Nullable`1<bool> _convertDotsInJsonKeysToUnderscores;
    public Nullable`1<bool> CaseInsensitive { get; public set; }
    public Dictionary`2<string, string> ColumnToJsonKeyMappings { get; public set; }
    public Nullable`1<bool> ConvertDotsInJsonKeysToUnderscores { get; public set; }
    public Nullable`1<bool> get_CaseInsensitive();
    public void set_CaseInsensitive(Nullable`1<bool> value);
    internal bool IsSetCaseInsensitive();
    public Dictionary`2<string, string> get_ColumnToJsonKeyMappings();
    public void set_ColumnToJsonKeyMappings(Dictionary`2<string, string> value);
    internal bool IsSetColumnToJsonKeyMappings();
    public Nullable`1<bool> get_ConvertDotsInJsonKeysToUnderscores();
    public void set_ConvertDotsInJsonKeysToUnderscores(Nullable`1<bool> value);
    internal bool IsSetConvertDotsInJsonKeysToUnderscores();
}
public class Amazon.KinesisFirehose.Model.OrcSerDe : object {
    private Nullable`1<int> _blockSizeBytes;
    private List`1<string> _bloomFilterColumns;
    private Nullable`1<double> _bloomFilterFalsePositiveProbability;
    private OrcCompression _compression;
    private Nullable`1<double> _dictionaryKeyThreshold;
    private Nullable`1<bool> _enablePadding;
    private OrcFormatVersion _formatVersion;
    private Nullable`1<double> _paddingTolerance;
    private Nullable`1<int> _rowIndexStride;
    private Nullable`1<int> _stripeSizeBytes;
    [AWSPropertyAttribute]
public Nullable`1<int> BlockSizeBytes { get; public set; }
    public List`1<string> BloomFilterColumns { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> BloomFilterFalsePositiveProbability { get; public set; }
    public OrcCompression Compression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> DictionaryKeyThreshold { get; public set; }
    public Nullable`1<bool> EnablePadding { get; public set; }
    public OrcFormatVersion FormatVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> PaddingTolerance { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RowIndexStride { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StripeSizeBytes { get; public set; }
    public Nullable`1<int> get_BlockSizeBytes();
    public void set_BlockSizeBytes(Nullable`1<int> value);
    internal bool IsSetBlockSizeBytes();
    public List`1<string> get_BloomFilterColumns();
    public void set_BloomFilterColumns(List`1<string> value);
    internal bool IsSetBloomFilterColumns();
    public Nullable`1<double> get_BloomFilterFalsePositiveProbability();
    public void set_BloomFilterFalsePositiveProbability(Nullable`1<double> value);
    internal bool IsSetBloomFilterFalsePositiveProbability();
    public OrcCompression get_Compression();
    public void set_Compression(OrcCompression value);
    internal bool IsSetCompression();
    public Nullable`1<double> get_DictionaryKeyThreshold();
    public void set_DictionaryKeyThreshold(Nullable`1<double> value);
    internal bool IsSetDictionaryKeyThreshold();
    public Nullable`1<bool> get_EnablePadding();
    public void set_EnablePadding(Nullable`1<bool> value);
    internal bool IsSetEnablePadding();
    public OrcFormatVersion get_FormatVersion();
    public void set_FormatVersion(OrcFormatVersion value);
    internal bool IsSetFormatVersion();
    public Nullable`1<double> get_PaddingTolerance();
    public void set_PaddingTolerance(Nullable`1<double> value);
    internal bool IsSetPaddingTolerance();
    public Nullable`1<int> get_RowIndexStride();
    public void set_RowIndexStride(Nullable`1<int> value);
    internal bool IsSetRowIndexStride();
    public Nullable`1<int> get_StripeSizeBytes();
    public void set_StripeSizeBytes(Nullable`1<int> value);
    internal bool IsSetStripeSizeBytes();
}
public class Amazon.KinesisFirehose.Model.OutputFormatConfiguration : object {
    private Serializer _serializer;
    public Serializer Serializer { get; public set; }
    public Serializer get_Serializer();
    public void set_Serializer(Serializer value);
    internal bool IsSetSerializer();
}
public class Amazon.KinesisFirehose.Model.ParquetSerDe : object {
    private Nullable`1<int> _blockSizeBytes;
    private ParquetCompression _compression;
    private Nullable`1<bool> _enableDictionaryCompression;
    private Nullable`1<int> _maxPaddingBytes;
    private Nullable`1<int> _pageSizeBytes;
    private ParquetWriterVersion _writerVersion;
    [AWSPropertyAttribute]
public Nullable`1<int> BlockSizeBytes { get; public set; }
    public ParquetCompression Compression { get; public set; }
    public Nullable`1<bool> EnableDictionaryCompression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxPaddingBytes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSizeBytes { get; public set; }
    public ParquetWriterVersion WriterVersion { get; public set; }
    public Nullable`1<int> get_BlockSizeBytes();
    public void set_BlockSizeBytes(Nullable`1<int> value);
    internal bool IsSetBlockSizeBytes();
    public ParquetCompression get_Compression();
    public void set_Compression(ParquetCompression value);
    internal bool IsSetCompression();
    public Nullable`1<bool> get_EnableDictionaryCompression();
    public void set_EnableDictionaryCompression(Nullable`1<bool> value);
    internal bool IsSetEnableDictionaryCompression();
    public Nullable`1<int> get_MaxPaddingBytes();
    public void set_MaxPaddingBytes(Nullable`1<int> value);
    internal bool IsSetMaxPaddingBytes();
    public Nullable`1<int> get_PageSizeBytes();
    public void set_PageSizeBytes(Nullable`1<int> value);
    internal bool IsSetPageSizeBytes();
    public ParquetWriterVersion get_WriterVersion();
    public void set_WriterVersion(ParquetWriterVersion value);
    internal bool IsSetWriterVersion();
}
public class Amazon.KinesisFirehose.Model.ProcessingConfiguration : object {
    private Nullable`1<bool> _enabled;
    private List`1<Processor> _processors;
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<Processor> Processors { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<Processor> get_Processors();
    public void set_Processors(List`1<Processor> value);
    internal bool IsSetProcessors();
}
public class Amazon.KinesisFirehose.Model.Processor : object {
    private List`1<ProcessorParameter> _parameters;
    private ProcessorType _type;
    public List`1<ProcessorParameter> Parameters { get; public set; }
    [AWSPropertyAttribute]
public ProcessorType Type { get; public set; }
    public List`1<ProcessorParameter> get_Parameters();
    public void set_Parameters(List`1<ProcessorParameter> value);
    internal bool IsSetParameters();
    public ProcessorType get_Type();
    public void set_Type(ProcessorType value);
    internal bool IsSetType();
}
public class Amazon.KinesisFirehose.Model.ProcessorParameter : object {
    private ProcessorParameterName _parameterName;
    private string _parameterValue;
    [AWSPropertyAttribute]
public ProcessorParameterName ParameterName { get; public set; }
    [AWSPropertyAttribute]
public string ParameterValue { get; public set; }
    public ProcessorParameterName get_ParameterName();
    public void set_ParameterName(ProcessorParameterName value);
    internal bool IsSetParameterName();
    public string get_ParameterValue();
    public void set_ParameterValue(string value);
    internal bool IsSetParameterValue();
}
public class Amazon.KinesisFirehose.Model.PutRecordBatchRequest : AmazonKinesisFirehoseRequest {
    private string _deliveryStreamName;
    private List`1<Record> _records;
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Record> Records { get; public set; }
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public List`1<Record> get_Records();
    public void set_Records(List`1<Record> value);
    internal bool IsSetRecords();
}
public class Amazon.KinesisFirehose.Model.PutRecordBatchResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _failedPutCount;
    private List`1<PutRecordBatchResponseEntry> _requestResponses;
    public Nullable`1<bool> Encrypted { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> FailedPutCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<PutRecordBatchResponseEntry> RequestResponses { get; public set; }
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public Nullable`1<int> get_FailedPutCount();
    public void set_FailedPutCount(Nullable`1<int> value);
    internal bool IsSetFailedPutCount();
    public List`1<PutRecordBatchResponseEntry> get_RequestResponses();
    public void set_RequestResponses(List`1<PutRecordBatchResponseEntry> value);
    internal bool IsSetRequestResponses();
}
public class Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry : object {
    private string _errorCode;
    private string _errorMessage;
    private string _recordId;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string RecordId { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_RecordId();
    public void set_RecordId(string value);
    internal bool IsSetRecordId();
}
public class Amazon.KinesisFirehose.Model.PutRecordRequest : AmazonKinesisFirehoseRequest {
    private string _deliveryStreamName;
    private Record _record;
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public Record Record { get; public set; }
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public Record get_Record();
    public void set_Record(Record value);
    internal bool IsSetRecord();
}
public class Amazon.KinesisFirehose.Model.PutRecordResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _encrypted;
    private string _recordId;
    public Nullable`1<bool> Encrypted { get; public set; }
    [AWSPropertyAttribute]
public string RecordId { get; public set; }
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_RecordId();
    public void set_RecordId(string value);
    internal bool IsSetRecordId();
}
public class Amazon.KinesisFirehose.Model.Record : object {
    private MemoryStream _data;
    [AWSPropertyAttribute]
public MemoryStream Data { get; public set; }
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
}
public class Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration : object {
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterJDBCURL;
    private CopyCommand _copyCommand;
    private string _password;
    private ProcessingConfiguration _processingConfiguration;
    private RedshiftRetryOptions _retryOptions;
    private string _roleARN;
    private S3DestinationConfiguration _s3BackupConfiguration;
    private RedshiftS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    private string _username;
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterJDBCURL { get; public set; }
    [AWSPropertyAttribute]
public CopyCommand CopyCommand { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public RedshiftRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3DestinationConfiguration S3BackupConfiguration { get; public set; }
    public RedshiftS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterJDBCURL();
    public void set_ClusterJDBCURL(string value);
    internal bool IsSetClusterJDBCURL();
    public CopyCommand get_CopyCommand();
    public void set_CopyCommand(CopyCommand value);
    internal bool IsSetCopyCommand();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public RedshiftRetryOptions get_RetryOptions();
    public void set_RetryOptions(RedshiftRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3DestinationConfiguration get_S3BackupConfiguration();
    public void set_S3BackupConfiguration(S3DestinationConfiguration value);
    internal bool IsSetS3BackupConfiguration();
    public RedshiftS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(RedshiftS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.KinesisFirehose.Model.RedshiftDestinationDescription : object {
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterJDBCURL;
    private CopyCommand _copyCommand;
    private ProcessingConfiguration _processingConfiguration;
    private RedshiftRetryOptions _retryOptions;
    private string _roleARN;
    private S3DestinationDescription _s3BackupDescription;
    private RedshiftS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    private string _username;
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterJDBCURL { get; public set; }
    [AWSPropertyAttribute]
public CopyCommand CopyCommand { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public RedshiftRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public S3DestinationDescription S3BackupDescription { get; public set; }
    public RedshiftS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationDescription S3DestinationDescription { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterJDBCURL();
    public void set_ClusterJDBCURL(string value);
    internal bool IsSetClusterJDBCURL();
    public CopyCommand get_CopyCommand();
    public void set_CopyCommand(CopyCommand value);
    internal bool IsSetCopyCommand();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public RedshiftRetryOptions get_RetryOptions();
    public void set_RetryOptions(RedshiftRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public S3DestinationDescription get_S3BackupDescription();
    public void set_S3BackupDescription(S3DestinationDescription value);
    internal bool IsSetS3BackupDescription();
    public RedshiftS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(RedshiftS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate : object {
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _clusterJDBCURL;
    private CopyCommand _copyCommand;
    private string _password;
    private ProcessingConfiguration _processingConfiguration;
    private RedshiftRetryOptions _retryOptions;
    private string _roleARN;
    private RedshiftS3BackupMode _s3BackupMode;
    private S3DestinationUpdate _s3BackupUpdate;
    private S3DestinationUpdate _s3Update;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    private string _username;
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ClusterJDBCURL { get; public set; }
    public CopyCommand CopyCommand { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public RedshiftRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public RedshiftS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationUpdate S3BackupUpdate { get; public set; }
    public S3DestinationUpdate S3Update { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ClusterJDBCURL();
    public void set_ClusterJDBCURL(string value);
    internal bool IsSetClusterJDBCURL();
    public CopyCommand get_CopyCommand();
    public void set_CopyCommand(CopyCommand value);
    internal bool IsSetCopyCommand();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public RedshiftRetryOptions get_RetryOptions();
    public void set_RetryOptions(RedshiftRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public RedshiftS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(RedshiftS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationUpdate get_S3BackupUpdate();
    public void set_S3BackupUpdate(S3DestinationUpdate value);
    internal bool IsSetS3BackupUpdate();
    public S3DestinationUpdate get_S3Update();
    public void set_S3Update(S3DestinationUpdate value);
    internal bool IsSetS3Update();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.KinesisFirehose.Model.RedshiftRetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.ResourceInUseException : AmazonKinesisFirehoseException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KinesisFirehose.Model.ResourceNotFoundException : AmazonKinesisFirehoseException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KinesisFirehose.Model.RetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.S3DestinationConfiguration : object {
    private string _bucketARN;
    private BufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private CompressionFormat _compressionFormat;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _errorOutputPrefix;
    private string _prefix;
    private string _roleARN;
    [AWSPropertyAttribute]
public string BucketARN { get; public set; }
    public BufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public CompressionFormat CompressionFormat { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ErrorOutputPrefix { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public string get_BucketARN();
    public void set_BucketARN(string value);
    internal bool IsSetBucketARN();
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public CompressionFormat get_CompressionFormat();
    public void set_CompressionFormat(CompressionFormat value);
    internal bool IsSetCompressionFormat();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_ErrorOutputPrefix();
    public void set_ErrorOutputPrefix(string value);
    internal bool IsSetErrorOutputPrefix();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.KinesisFirehose.Model.S3DestinationDescription : object {
    private string _bucketARN;
    private BufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private CompressionFormat _compressionFormat;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _errorOutputPrefix;
    private string _prefix;
    private string _roleARN;
    [AWSPropertyAttribute]
public string BucketARN { get; public set; }
    [AWSPropertyAttribute]
public BufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public CompressionFormat CompressionFormat { get; public set; }
    [AWSPropertyAttribute]
public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ErrorOutputPrefix { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public string get_BucketARN();
    public void set_BucketARN(string value);
    internal bool IsSetBucketARN();
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public CompressionFormat get_CompressionFormat();
    public void set_CompressionFormat(CompressionFormat value);
    internal bool IsSetCompressionFormat();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_ErrorOutputPrefix();
    public void set_ErrorOutputPrefix(string value);
    internal bool IsSetErrorOutputPrefix();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.KinesisFirehose.Model.S3DestinationUpdate : object {
    private string _bucketARN;
    private BufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private CompressionFormat _compressionFormat;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _errorOutputPrefix;
    private string _prefix;
    private string _roleARN;
    [AWSPropertyAttribute]
public string BucketARN { get; public set; }
    public BufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    public CompressionFormat CompressionFormat { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ErrorOutputPrefix { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public string get_BucketARN();
    public void set_BucketARN(string value);
    internal bool IsSetBucketARN();
    public BufferingHints get_BufferingHints();
    public void set_BufferingHints(BufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public CompressionFormat get_CompressionFormat();
    public void set_CompressionFormat(CompressionFormat value);
    internal bool IsSetCompressionFormat();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_ErrorOutputPrefix();
    public void set_ErrorOutputPrefix(string value);
    internal bool IsSetErrorOutputPrefix();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.KinesisFirehose.Model.SchemaConfiguration : object {
    private string _catalogId;
    private string _databaseName;
    private string _region;
    private string _roleARN;
    private string _tableName;
    private string _versionId;
    [AWSPropertyAttribute]
public string CatalogId { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public string get_CatalogId();
    public void set_CatalogId(string value);
    internal bool IsSetCatalogId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.KinesisFirehose.Model.SecretsManagerConfiguration : object {
    private Nullable`1<bool> _enabled;
    private string _roleARN;
    private string _secretARN;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    [AWSPropertyAttribute]
public string SecretARN { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public string get_SecretARN();
    public void set_SecretARN(string value);
    internal bool IsSetSecretARN();
}
public class Amazon.KinesisFirehose.Model.Serializer : object {
    private OrcSerDe _orcSerDe;
    private ParquetSerDe _parquetSerDe;
    public OrcSerDe OrcSerDe { get; public set; }
    public ParquetSerDe ParquetSerDe { get; public set; }
    public OrcSerDe get_OrcSerDe();
    public void set_OrcSerDe(OrcSerDe value);
    internal bool IsSetOrcSerDe();
    public ParquetSerDe get_ParquetSerDe();
    public void set_ParquetSerDe(ParquetSerDe value);
    internal bool IsSetParquetSerDe();
}
public class Amazon.KinesisFirehose.Model.ServiceUnavailableException : AmazonKinesisFirehoseException {
    public ServiceUnavailableException(string message);
    public ServiceUnavailableException(string message, Exception innerException);
    public ServiceUnavailableException(Exception innerException);
    public ServiceUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KinesisFirehose.Model.SnowflakeBufferingHints : object {
    private Nullable`1<int> _intervalInSeconds;
    private Nullable`1<int> _sizeInMBs;
    [AWSPropertyAttribute]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SizeInMBs { get; public set; }
    public Nullable`1<int> get_IntervalInSeconds();
    public void set_IntervalInSeconds(Nullable`1<int> value);
    internal bool IsSetIntervalInSeconds();
    public Nullable`1<int> get_SizeInMBs();
    public void set_SizeInMBs(Nullable`1<int> value);
    internal bool IsSetSizeInMBs();
}
public class Amazon.KinesisFirehose.Model.SnowflakeDestinationConfiguration : object {
    private string _accountUrl;
    private SnowflakeBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _contentColumnName;
    private string _database;
    private SnowflakeDataLoadingOption _dataLoadingOption;
    private string _keyPassphrase;
    private string _metaDataColumnName;
    private string _privateKey;
    private ProcessingConfiguration _processingConfiguration;
    private SnowflakeRetryOptions _retryOptions;
    private string _roleARN;
    private SnowflakeS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    private string _schema;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    private SnowflakeRoleConfiguration _snowflakeRoleConfiguration;
    private SnowflakeVpcConfiguration _snowflakeVpcConfiguration;
    private string _table;
    private string _user;
    [AWSPropertyAttribute]
public string AccountUrl { get; public set; }
    public SnowflakeBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ContentColumnName { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    public SnowflakeDataLoadingOption DataLoadingOption { get; public set; }
    [AWSPropertyAttribute]
public string KeyPassphrase { get; public set; }
    [AWSPropertyAttribute]
public string MetaDataColumnName { get; public set; }
    [AWSPropertyAttribute]
public string PrivateKey { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public SnowflakeRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public SnowflakeS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    [AWSPropertyAttribute]
public string Schema { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public SnowflakeRoleConfiguration SnowflakeRoleConfiguration { get; public set; }
    public SnowflakeVpcConfiguration SnowflakeVpcConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    [AWSPropertyAttribute]
public string User { get; public set; }
    public string get_AccountUrl();
    public void set_AccountUrl(string value);
    internal bool IsSetAccountUrl();
    public SnowflakeBufferingHints get_BufferingHints();
    public void set_BufferingHints(SnowflakeBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ContentColumnName();
    public void set_ContentColumnName(string value);
    internal bool IsSetContentColumnName();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public SnowflakeDataLoadingOption get_DataLoadingOption();
    public void set_DataLoadingOption(SnowflakeDataLoadingOption value);
    internal bool IsSetDataLoadingOption();
    public string get_KeyPassphrase();
    public void set_KeyPassphrase(string value);
    internal bool IsSetKeyPassphrase();
    public string get_MetaDataColumnName();
    public void set_MetaDataColumnName(string value);
    internal bool IsSetMetaDataColumnName();
    public string get_PrivateKey();
    public void set_PrivateKey(string value);
    internal bool IsSetPrivateKey();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public SnowflakeRetryOptions get_RetryOptions();
    public void set_RetryOptions(SnowflakeRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public SnowflakeS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(SnowflakeS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
    public SnowflakeRoleConfiguration get_SnowflakeRoleConfiguration();
    public void set_SnowflakeRoleConfiguration(SnowflakeRoleConfiguration value);
    internal bool IsSetSnowflakeRoleConfiguration();
    public SnowflakeVpcConfiguration get_SnowflakeVpcConfiguration();
    public void set_SnowflakeVpcConfiguration(SnowflakeVpcConfiguration value);
    internal bool IsSetSnowflakeVpcConfiguration();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public string get_User();
    public void set_User(string value);
    internal bool IsSetUser();
}
public class Amazon.KinesisFirehose.Model.SnowflakeDestinationDescription : object {
    private string _accountUrl;
    private SnowflakeBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _contentColumnName;
    private string _database;
    private SnowflakeDataLoadingOption _dataLoadingOption;
    private string _metaDataColumnName;
    private ProcessingConfiguration _processingConfiguration;
    private SnowflakeRetryOptions _retryOptions;
    private string _roleARN;
    private SnowflakeS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    private string _schema;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    private SnowflakeRoleConfiguration _snowflakeRoleConfiguration;
    private SnowflakeVpcConfiguration _snowflakeVpcConfiguration;
    private string _table;
    private string _user;
    [AWSPropertyAttribute]
public string AccountUrl { get; public set; }
    public SnowflakeBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ContentColumnName { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    public SnowflakeDataLoadingOption DataLoadingOption { get; public set; }
    [AWSPropertyAttribute]
public string MetaDataColumnName { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public SnowflakeRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public SnowflakeS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    [AWSPropertyAttribute]
public string Schema { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public SnowflakeRoleConfiguration SnowflakeRoleConfiguration { get; public set; }
    public SnowflakeVpcConfiguration SnowflakeVpcConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    [AWSPropertyAttribute]
public string User { get; public set; }
    public string get_AccountUrl();
    public void set_AccountUrl(string value);
    internal bool IsSetAccountUrl();
    public SnowflakeBufferingHints get_BufferingHints();
    public void set_BufferingHints(SnowflakeBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ContentColumnName();
    public void set_ContentColumnName(string value);
    internal bool IsSetContentColumnName();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public SnowflakeDataLoadingOption get_DataLoadingOption();
    public void set_DataLoadingOption(SnowflakeDataLoadingOption value);
    internal bool IsSetDataLoadingOption();
    public string get_MetaDataColumnName();
    public void set_MetaDataColumnName(string value);
    internal bool IsSetMetaDataColumnName();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public SnowflakeRetryOptions get_RetryOptions();
    public void set_RetryOptions(SnowflakeRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public SnowflakeS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(SnowflakeS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
    public SnowflakeRoleConfiguration get_SnowflakeRoleConfiguration();
    public void set_SnowflakeRoleConfiguration(SnowflakeRoleConfiguration value);
    internal bool IsSetSnowflakeRoleConfiguration();
    public SnowflakeVpcConfiguration get_SnowflakeVpcConfiguration();
    public void set_SnowflakeVpcConfiguration(SnowflakeVpcConfiguration value);
    internal bool IsSetSnowflakeVpcConfiguration();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public string get_User();
    public void set_User(string value);
    internal bool IsSetUser();
}
public class Amazon.KinesisFirehose.Model.SnowflakeDestinationUpdate : object {
    private string _accountUrl;
    private SnowflakeBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private string _contentColumnName;
    private string _database;
    private SnowflakeDataLoadingOption _dataLoadingOption;
    private string _keyPassphrase;
    private string _metaDataColumnName;
    private string _privateKey;
    private ProcessingConfiguration _processingConfiguration;
    private SnowflakeRetryOptions _retryOptions;
    private string _roleARN;
    private SnowflakeS3BackupMode _s3BackupMode;
    private S3DestinationUpdate _s3Update;
    private string _schema;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    private SnowflakeRoleConfiguration _snowflakeRoleConfiguration;
    private string _table;
    private string _user;
    [AWSPropertyAttribute]
public string AccountUrl { get; public set; }
    public SnowflakeBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public string ContentColumnName { get; public set; }
    [AWSPropertyAttribute]
public string Database { get; public set; }
    public SnowflakeDataLoadingOption DataLoadingOption { get; public set; }
    [AWSPropertyAttribute]
public string KeyPassphrase { get; public set; }
    [AWSPropertyAttribute]
public string MetaDataColumnName { get; public set; }
    [AWSPropertyAttribute]
public string PrivateKey { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public SnowflakeRetryOptions RetryOptions { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    public SnowflakeS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationUpdate S3Update { get; public set; }
    [AWSPropertyAttribute]
public string Schema { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public SnowflakeRoleConfiguration SnowflakeRoleConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Table { get; public set; }
    [AWSPropertyAttribute]
public string User { get; public set; }
    public string get_AccountUrl();
    public void set_AccountUrl(string value);
    internal bool IsSetAccountUrl();
    public SnowflakeBufferingHints get_BufferingHints();
    public void set_BufferingHints(SnowflakeBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public string get_ContentColumnName();
    public void set_ContentColumnName(string value);
    internal bool IsSetContentColumnName();
    public string get_Database();
    public void set_Database(string value);
    internal bool IsSetDatabase();
    public SnowflakeDataLoadingOption get_DataLoadingOption();
    public void set_DataLoadingOption(SnowflakeDataLoadingOption value);
    internal bool IsSetDataLoadingOption();
    public string get_KeyPassphrase();
    public void set_KeyPassphrase(string value);
    internal bool IsSetKeyPassphrase();
    public string get_MetaDataColumnName();
    public void set_MetaDataColumnName(string value);
    internal bool IsSetMetaDataColumnName();
    public string get_PrivateKey();
    public void set_PrivateKey(string value);
    internal bool IsSetPrivateKey();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public SnowflakeRetryOptions get_RetryOptions();
    public void set_RetryOptions(SnowflakeRetryOptions value);
    internal bool IsSetRetryOptions();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public SnowflakeS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(SnowflakeS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationUpdate get_S3Update();
    public void set_S3Update(S3DestinationUpdate value);
    internal bool IsSetS3Update();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
    public SnowflakeRoleConfiguration get_SnowflakeRoleConfiguration();
    public void set_SnowflakeRoleConfiguration(SnowflakeRoleConfiguration value);
    internal bool IsSetSnowflakeRoleConfiguration();
    public string get_Table();
    public void set_Table(string value);
    internal bool IsSetTable();
    public string get_User();
    public void set_User(string value);
    internal bool IsSetUser();
}
public class Amazon.KinesisFirehose.Model.SnowflakeRetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.SnowflakeRoleConfiguration : object {
    private Nullable`1<bool> _enabled;
    private string _snowflakeRole;
    public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string SnowflakeRole { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_SnowflakeRole();
    public void set_SnowflakeRole(string value);
    internal bool IsSetSnowflakeRole();
}
public class Amazon.KinesisFirehose.Model.SnowflakeVpcConfiguration : object {
    private string _privateLinkVpceId;
    [AWSPropertyAttribute]
public string PrivateLinkVpceId { get; public set; }
    public string get_PrivateLinkVpceId();
    public void set_PrivateLinkVpceId(string value);
    internal bool IsSetPrivateLinkVpceId();
}
public class Amazon.KinesisFirehose.Model.SourceDescription : object {
    private KinesisStreamSourceDescription _kinesisStreamSourceDescription;
    private MSKSourceDescription _mskSourceDescription;
    public KinesisStreamSourceDescription KinesisStreamSourceDescription { get; public set; }
    public MSKSourceDescription MSKSourceDescription { get; public set; }
    public KinesisStreamSourceDescription get_KinesisStreamSourceDescription();
    public void set_KinesisStreamSourceDescription(KinesisStreamSourceDescription value);
    internal bool IsSetKinesisStreamSourceDescription();
    public MSKSourceDescription get_MSKSourceDescription();
    public void set_MSKSourceDescription(MSKSourceDescription value);
    internal bool IsSetMSKSourceDescription();
}
public class Amazon.KinesisFirehose.Model.SplunkBufferingHints : object {
    private Nullable`1<int> _intervalInSeconds;
    private Nullable`1<int> _sizeInMBs;
    [AWSPropertyAttribute]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SizeInMBs { get; public set; }
    public Nullable`1<int> get_IntervalInSeconds();
    public void set_IntervalInSeconds(Nullable`1<int> value);
    internal bool IsSetIntervalInSeconds();
    public Nullable`1<int> get_SizeInMBs();
    public void set_SizeInMBs(Nullable`1<int> value);
    internal bool IsSetSizeInMBs();
}
public class Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration : object {
    private SplunkBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private Nullable`1<int> _hecAcknowledgmentTimeoutInSeconds;
    private string _hecEndpoint;
    private HECEndpointType _hecEndpointType;
    private string _hecToken;
    private ProcessingConfiguration _processingConfiguration;
    private SplunkRetryOptions _retryOptions;
    private SplunkS3BackupMode _s3BackupMode;
    private S3DestinationConfiguration _s3Configuration;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    public SplunkBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HECAcknowledgmentTimeoutInSeconds { get; public set; }
    [AWSPropertyAttribute]
public string HECEndpoint { get; public set; }
    [AWSPropertyAttribute]
public HECEndpointType HECEndpointType { get; public set; }
    [AWSPropertyAttribute]
public string HECToken { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public SplunkRetryOptions RetryOptions { get; public set; }
    public SplunkS3BackupMode S3BackupMode { get; public set; }
    [AWSPropertyAttribute]
public S3DestinationConfiguration S3Configuration { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public SplunkBufferingHints get_BufferingHints();
    public void set_BufferingHints(SplunkBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public Nullable`1<int> get_HECAcknowledgmentTimeoutInSeconds();
    public void set_HECAcknowledgmentTimeoutInSeconds(Nullable`1<int> value);
    internal bool IsSetHECAcknowledgmentTimeoutInSeconds();
    public string get_HECEndpoint();
    public void set_HECEndpoint(string value);
    internal bool IsSetHECEndpoint();
    public HECEndpointType get_HECEndpointType();
    public void set_HECEndpointType(HECEndpointType value);
    internal bool IsSetHECEndpointType();
    public string get_HECToken();
    public void set_HECToken(string value);
    internal bool IsSetHECToken();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public SplunkRetryOptions get_RetryOptions();
    public void set_RetryOptions(SplunkRetryOptions value);
    internal bool IsSetRetryOptions();
    public SplunkS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(SplunkS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationConfiguration get_S3Configuration();
    public void set_S3Configuration(S3DestinationConfiguration value);
    internal bool IsSetS3Configuration();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
}
public class Amazon.KinesisFirehose.Model.SplunkDestinationDescription : object {
    private SplunkBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private Nullable`1<int> _hecAcknowledgmentTimeoutInSeconds;
    private string _hecEndpoint;
    private HECEndpointType _hecEndpointType;
    private string _hecToken;
    private ProcessingConfiguration _processingConfiguration;
    private SplunkRetryOptions _retryOptions;
    private SplunkS3BackupMode _s3BackupMode;
    private S3DestinationDescription _s3DestinationDescription;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    public SplunkBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HECAcknowledgmentTimeoutInSeconds { get; public set; }
    [AWSPropertyAttribute]
public string HECEndpoint { get; public set; }
    public HECEndpointType HECEndpointType { get; public set; }
    [AWSPropertyAttribute]
public string HECToken { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public SplunkRetryOptions RetryOptions { get; public set; }
    public SplunkS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationDescription S3DestinationDescription { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public SplunkBufferingHints get_BufferingHints();
    public void set_BufferingHints(SplunkBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public Nullable`1<int> get_HECAcknowledgmentTimeoutInSeconds();
    public void set_HECAcknowledgmentTimeoutInSeconds(Nullable`1<int> value);
    internal bool IsSetHECAcknowledgmentTimeoutInSeconds();
    public string get_HECEndpoint();
    public void set_HECEndpoint(string value);
    internal bool IsSetHECEndpoint();
    public HECEndpointType get_HECEndpointType();
    public void set_HECEndpointType(HECEndpointType value);
    internal bool IsSetHECEndpointType();
    public string get_HECToken();
    public void set_HECToken(string value);
    internal bool IsSetHECToken();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public SplunkRetryOptions get_RetryOptions();
    public void set_RetryOptions(SplunkRetryOptions value);
    internal bool IsSetRetryOptions();
    public SplunkS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(SplunkS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationDescription get_S3DestinationDescription();
    public void set_S3DestinationDescription(S3DestinationDescription value);
    internal bool IsSetS3DestinationDescription();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
}
public class Amazon.KinesisFirehose.Model.SplunkDestinationUpdate : object {
    private SplunkBufferingHints _bufferingHints;
    private CloudWatchLoggingOptions _cloudWatchLoggingOptions;
    private Nullable`1<int> _hecAcknowledgmentTimeoutInSeconds;
    private string _hecEndpoint;
    private HECEndpointType _hecEndpointType;
    private string _hecToken;
    private ProcessingConfiguration _processingConfiguration;
    private SplunkRetryOptions _retryOptions;
    private SplunkS3BackupMode _s3BackupMode;
    private S3DestinationUpdate _s3Update;
    private SecretsManagerConfiguration _secretsManagerConfiguration;
    public SplunkBufferingHints BufferingHints { get; public set; }
    public CloudWatchLoggingOptions CloudWatchLoggingOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HECAcknowledgmentTimeoutInSeconds { get; public set; }
    [AWSPropertyAttribute]
public string HECEndpoint { get; public set; }
    public HECEndpointType HECEndpointType { get; public set; }
    [AWSPropertyAttribute]
public string HECToken { get; public set; }
    public ProcessingConfiguration ProcessingConfiguration { get; public set; }
    public SplunkRetryOptions RetryOptions { get; public set; }
    public SplunkS3BackupMode S3BackupMode { get; public set; }
    public S3DestinationUpdate S3Update { get; public set; }
    public SecretsManagerConfiguration SecretsManagerConfiguration { get; public set; }
    public SplunkBufferingHints get_BufferingHints();
    public void set_BufferingHints(SplunkBufferingHints value);
    internal bool IsSetBufferingHints();
    public CloudWatchLoggingOptions get_CloudWatchLoggingOptions();
    public void set_CloudWatchLoggingOptions(CloudWatchLoggingOptions value);
    internal bool IsSetCloudWatchLoggingOptions();
    public Nullable`1<int> get_HECAcknowledgmentTimeoutInSeconds();
    public void set_HECAcknowledgmentTimeoutInSeconds(Nullable`1<int> value);
    internal bool IsSetHECAcknowledgmentTimeoutInSeconds();
    public string get_HECEndpoint();
    public void set_HECEndpoint(string value);
    internal bool IsSetHECEndpoint();
    public HECEndpointType get_HECEndpointType();
    public void set_HECEndpointType(HECEndpointType value);
    internal bool IsSetHECEndpointType();
    public string get_HECToken();
    public void set_HECToken(string value);
    internal bool IsSetHECToken();
    public ProcessingConfiguration get_ProcessingConfiguration();
    public void set_ProcessingConfiguration(ProcessingConfiguration value);
    internal bool IsSetProcessingConfiguration();
    public SplunkRetryOptions get_RetryOptions();
    public void set_RetryOptions(SplunkRetryOptions value);
    internal bool IsSetRetryOptions();
    public SplunkS3BackupMode get_S3BackupMode();
    public void set_S3BackupMode(SplunkS3BackupMode value);
    internal bool IsSetS3BackupMode();
    public S3DestinationUpdate get_S3Update();
    public void set_S3Update(S3DestinationUpdate value);
    internal bool IsSetS3Update();
    public SecretsManagerConfiguration get_SecretsManagerConfiguration();
    public void set_SecretsManagerConfiguration(SecretsManagerConfiguration value);
    internal bool IsSetSecretsManagerConfiguration();
}
public class Amazon.KinesisFirehose.Model.SplunkRetryOptions : object {
    private Nullable`1<int> _durationInSeconds;
    [AWSPropertyAttribute]
public Nullable`1<int> DurationInSeconds { get; public set; }
    public Nullable`1<int> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<int> value);
    internal bool IsSetDurationInSeconds();
}
public class Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest : AmazonKinesisFirehoseRequest {
    private DeliveryStreamEncryptionConfigurationInput _deliveryStreamEncryptionConfigurationInput;
    private string _deliveryStreamName;
    public DeliveryStreamEncryptionConfigurationInput DeliveryStreamEncryptionConfigurationInput { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    public DeliveryStreamEncryptionConfigurationInput get_DeliveryStreamEncryptionConfigurationInput();
    public void set_DeliveryStreamEncryptionConfigurationInput(DeliveryStreamEncryptionConfigurationInput value);
    internal bool IsSetDeliveryStreamEncryptionConfigurationInput();
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
}
public class Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionResponse : AmazonWebServiceResponse {
}
public class Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest : AmazonKinesisFirehoseRequest {
    private string _deliveryStreamName;
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
}
public class Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionResponse : AmazonWebServiceResponse {
}
public class Amazon.KinesisFirehose.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest : AmazonKinesisFirehoseRequest {
    private string _deliveryStreamName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.KinesisFirehose.Model.TagDeliveryStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest : AmazonKinesisFirehoseRequest {
    private string _deliveryStreamName;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.KinesisFirehose.Model.UntagDeliveryStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.KinesisFirehose.Model.UpdateDestinationRequest : AmazonKinesisFirehoseRequest {
    private AmazonOpenSearchServerlessDestinationUpdate _amazonOpenSearchServerlessDestinationUpdate;
    private AmazonopensearchserviceDestinationUpdate _amazonopensearchserviceDestinationUpdate;
    private string _currentDeliveryStreamVersionId;
    private string _deliveryStreamName;
    private string _destinationId;
    private ElasticsearchDestinationUpdate _elasticsearchDestinationUpdate;
    private ExtendedS3DestinationUpdate _extendedS3DestinationUpdate;
    private HttpEndpointDestinationUpdate _httpEndpointDestinationUpdate;
    private IcebergDestinationUpdate _icebergDestinationUpdate;
    private RedshiftDestinationUpdate _redshiftDestinationUpdate;
    private S3DestinationUpdate _s3DestinationUpdate;
    private SnowflakeDestinationUpdate _snowflakeDestinationUpdate;
    private SplunkDestinationUpdate _splunkDestinationUpdate;
    public AmazonOpenSearchServerlessDestinationUpdate AmazonOpenSearchServerlessDestinationUpdate { get; public set; }
    public AmazonopensearchserviceDestinationUpdate AmazonopensearchserviceDestinationUpdate { get; public set; }
    [AWSPropertyAttribute]
public string CurrentDeliveryStreamVersionId { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryStreamName { get; public set; }
    [AWSPropertyAttribute]
public string DestinationId { get; public set; }
    public ElasticsearchDestinationUpdate ElasticsearchDestinationUpdate { get; public set; }
    public ExtendedS3DestinationUpdate ExtendedS3DestinationUpdate { get; public set; }
    public HttpEndpointDestinationUpdate HttpEndpointDestinationUpdate { get; public set; }
    public IcebergDestinationUpdate IcebergDestinationUpdate { get; public set; }
    public RedshiftDestinationUpdate RedshiftDestinationUpdate { get; public set; }
    [ObsoleteAttribute("This property is deprecated. Use ExtendedS3DestinationUpdate instead.")]
public S3DestinationUpdate S3DestinationUpdate { get; public set; }
    public SnowflakeDestinationUpdate SnowflakeDestinationUpdate { get; public set; }
    public SplunkDestinationUpdate SplunkDestinationUpdate { get; public set; }
    public AmazonOpenSearchServerlessDestinationUpdate get_AmazonOpenSearchServerlessDestinationUpdate();
    public void set_AmazonOpenSearchServerlessDestinationUpdate(AmazonOpenSearchServerlessDestinationUpdate value);
    internal bool IsSetAmazonOpenSearchServerlessDestinationUpdate();
    public AmazonopensearchserviceDestinationUpdate get_AmazonopensearchserviceDestinationUpdate();
    public void set_AmazonopensearchserviceDestinationUpdate(AmazonopensearchserviceDestinationUpdate value);
    internal bool IsSetAmazonopensearchserviceDestinationUpdate();
    public string get_CurrentDeliveryStreamVersionId();
    public void set_CurrentDeliveryStreamVersionId(string value);
    internal bool IsSetCurrentDeliveryStreamVersionId();
    public string get_DeliveryStreamName();
    public void set_DeliveryStreamName(string value);
    internal bool IsSetDeliveryStreamName();
    public string get_DestinationId();
    public void set_DestinationId(string value);
    internal bool IsSetDestinationId();
    public ElasticsearchDestinationUpdate get_ElasticsearchDestinationUpdate();
    public void set_ElasticsearchDestinationUpdate(ElasticsearchDestinationUpdate value);
    internal bool IsSetElasticsearchDestinationUpdate();
    public ExtendedS3DestinationUpdate get_ExtendedS3DestinationUpdate();
    public void set_ExtendedS3DestinationUpdate(ExtendedS3DestinationUpdate value);
    internal bool IsSetExtendedS3DestinationUpdate();
    public HttpEndpointDestinationUpdate get_HttpEndpointDestinationUpdate();
    public void set_HttpEndpointDestinationUpdate(HttpEndpointDestinationUpdate value);
    internal bool IsSetHttpEndpointDestinationUpdate();
    public IcebergDestinationUpdate get_IcebergDestinationUpdate();
    public void set_IcebergDestinationUpdate(IcebergDestinationUpdate value);
    internal bool IsSetIcebergDestinationUpdate();
    public RedshiftDestinationUpdate get_RedshiftDestinationUpdate();
    public void set_RedshiftDestinationUpdate(RedshiftDestinationUpdate value);
    internal bool IsSetRedshiftDestinationUpdate();
    public S3DestinationUpdate get_S3DestinationUpdate();
    public void set_S3DestinationUpdate(S3DestinationUpdate value);
    internal bool IsSetS3DestinationUpdate();
    public SnowflakeDestinationUpdate get_SnowflakeDestinationUpdate();
    public void set_SnowflakeDestinationUpdate(SnowflakeDestinationUpdate value);
    internal bool IsSetSnowflakeDestinationUpdate();
    public SplunkDestinationUpdate get_SplunkDestinationUpdate();
    public void set_SplunkDestinationUpdate(SplunkDestinationUpdate value);
    internal bool IsSetSplunkDestinationUpdate();
}
public class Amazon.KinesisFirehose.Model.UpdateDestinationResponse : AmazonWebServiceResponse {
}
public class Amazon.KinesisFirehose.Model.VpcConfiguration : object {
    private string _roleARN;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.KinesisFirehose.Model.VpcConfigurationDescription : object {
    private string _roleARN;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private string _vpcId;
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.KinesisFirehose.NoEncryptionConfig : ConstantClass {
    public static NoEncryptionConfig NoEncryption;
    public NoEncryptionConfig(string value);
    private static NoEncryptionConfig();
    public static NoEncryptionConfig FindValue(string value);
    public static NoEncryptionConfig op_Implicit(string value);
}
public class Amazon.KinesisFirehose.OrcCompression : ConstantClass {
    public static OrcCompression NONE;
    public static OrcCompression SNAPPY;
    public static OrcCompression ZLIB;
    public OrcCompression(string value);
    private static OrcCompression();
    public static OrcCompression FindValue(string value);
    public static OrcCompression op_Implicit(string value);
}
public class Amazon.KinesisFirehose.OrcFormatVersion : ConstantClass {
    public static OrcFormatVersion V0_11;
    public static OrcFormatVersion V0_12;
    public OrcFormatVersion(string value);
    private static OrcFormatVersion();
    public static OrcFormatVersion FindValue(string value);
    public static OrcFormatVersion op_Implicit(string value);
}
public class Amazon.KinesisFirehose.ParquetCompression : ConstantClass {
    public static ParquetCompression GZIP;
    public static ParquetCompression SNAPPY;
    public static ParquetCompression UNCOMPRESSED;
    public ParquetCompression(string value);
    private static ParquetCompression();
    public static ParquetCompression FindValue(string value);
    public static ParquetCompression op_Implicit(string value);
}
public class Amazon.KinesisFirehose.ParquetWriterVersion : ConstantClass {
    public static ParquetWriterVersion V1;
    public static ParquetWriterVersion V2;
    public ParquetWriterVersion(string value);
    private static ParquetWriterVersion();
    public static ParquetWriterVersion FindValue(string value);
    public static ParquetWriterVersion op_Implicit(string value);
}
public class Amazon.KinesisFirehose.ProcessorParameterName : ConstantClass {
    public static ProcessorParameterName BufferIntervalInSeconds;
    public static ProcessorParameterName BufferSizeInMBs;
    public static ProcessorParameterName CompressionFormat;
    public static ProcessorParameterName DataMessageExtraction;
    public static ProcessorParameterName Delimiter;
    public static ProcessorParameterName JsonParsingEngine;
    public static ProcessorParameterName LambdaArn;
    public static ProcessorParameterName MetadataExtractionQuery;
    public static ProcessorParameterName NumberOfRetries;
    public static ProcessorParameterName RoleArn;
    public static ProcessorParameterName SubRecordType;
    public ProcessorParameterName(string value);
    private static ProcessorParameterName();
    public static ProcessorParameterName FindValue(string value);
    public static ProcessorParameterName op_Implicit(string value);
}
public class Amazon.KinesisFirehose.ProcessorType : ConstantClass {
    public static ProcessorType AppendDelimiterToRecord;
    public static ProcessorType CloudWatchLogProcessing;
    public static ProcessorType Decompression;
    public static ProcessorType Lambda;
    public static ProcessorType MetadataExtraction;
    public static ProcessorType RecordDeAggregation;
    public ProcessorType(string value);
    private static ProcessorType();
    public static ProcessorType FindValue(string value);
    public static ProcessorType op_Implicit(string value);
}
public class Amazon.KinesisFirehose.RedshiftS3BackupMode : ConstantClass {
    public static RedshiftS3BackupMode Disabled;
    public static RedshiftS3BackupMode Enabled;
    public RedshiftS3BackupMode(string value);
    private static RedshiftS3BackupMode();
    public static RedshiftS3BackupMode FindValue(string value);
    public static RedshiftS3BackupMode op_Implicit(string value);
}
public class Amazon.KinesisFirehose.S3BackupMode : ConstantClass {
    public static S3BackupMode Disabled;
    public static S3BackupMode Enabled;
    public S3BackupMode(string value);
    private static S3BackupMode();
    public static S3BackupMode FindValue(string value);
    public static S3BackupMode op_Implicit(string value);
}
public class Amazon.KinesisFirehose.SnowflakeDataLoadingOption : ConstantClass {
    public static SnowflakeDataLoadingOption JSON_MAPPING;
    public static SnowflakeDataLoadingOption VARIANT_CONTENT_AND_METADATA_MAPPING;
    public static SnowflakeDataLoadingOption VARIANT_CONTENT_MAPPING;
    public SnowflakeDataLoadingOption(string value);
    private static SnowflakeDataLoadingOption();
    public static SnowflakeDataLoadingOption FindValue(string value);
    public static SnowflakeDataLoadingOption op_Implicit(string value);
}
public class Amazon.KinesisFirehose.SnowflakeS3BackupMode : ConstantClass {
    public static SnowflakeS3BackupMode AllData;
    public static SnowflakeS3BackupMode FailedDataOnly;
    public SnowflakeS3BackupMode(string value);
    private static SnowflakeS3BackupMode();
    public static SnowflakeS3BackupMode FindValue(string value);
    public static SnowflakeS3BackupMode op_Implicit(string value);
}
public class Amazon.KinesisFirehose.SplunkS3BackupMode : ConstantClass {
    public static SplunkS3BackupMode AllEvents;
    public static SplunkS3BackupMode FailedEventsOnly;
    public SplunkS3BackupMode(string value);
    private static SplunkS3BackupMode();
    public static SplunkS3BackupMode FindValue(string value);
    public static SplunkS3BackupMode op_Implicit(string value);
}
