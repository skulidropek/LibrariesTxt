public class Amazon.Lambda.AmazonLambdaClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ILambdaPaginatorFactory _paginators;
    public ILambdaPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonLambdaClient(RegionEndpoint region);
    public AmazonLambdaClient(AmazonLambdaConfig config);
    public AmazonLambdaClient(AWSCredentials credentials);
    public AmazonLambdaClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonLambdaClient(AWSCredentials credentials, AmazonLambdaConfig clientConfig);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonLambdaConfig clientConfig);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonLambdaConfig clientConfig);
    private static AmazonLambdaClient();
    public sealed virtual ILambdaPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddLayerVersionPermissionResponse AddLayerVersionPermission(AddLayerVersionPermissionRequest request);
    public virtual Task`1<AddLayerVersionPermissionResponse> AddLayerVersionPermissionAsync(AddLayerVersionPermissionRequest request, CancellationToken cancellationToken);
    internal virtual AddPermissionResponse AddPermission(AddPermissionRequest request);
    public virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    internal virtual CreateAliasResponse CreateAlias(CreateAliasRequest request);
    public virtual Task`1<CreateAliasResponse> CreateAliasAsync(CreateAliasRequest request, CancellationToken cancellationToken);
    internal virtual CreateCodeSigningConfigResponse CreateCodeSigningConfig(CreateCodeSigningConfigRequest request);
    public virtual Task`1<CreateCodeSigningConfigResponse> CreateCodeSigningConfigAsync(CreateCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual CreateEventSourceMappingResponse CreateEventSourceMapping(CreateEventSourceMappingRequest request);
    public virtual Task`1<CreateEventSourceMappingResponse> CreateEventSourceMappingAsync(CreateEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal virtual CreateFunctionResponse CreateFunction(CreateFunctionRequest request);
    public virtual Task`1<CreateFunctionResponse> CreateFunctionAsync(CreateFunctionRequest request, CancellationToken cancellationToken);
    internal virtual CreateFunctionUrlConfigResponse CreateFunctionUrlConfig(CreateFunctionUrlConfigRequest request);
    public virtual Task`1<CreateFunctionUrlConfigResponse> CreateFunctionUrlConfigAsync(CreateFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAliasResponse DeleteAlias(DeleteAliasRequest request);
    public virtual Task`1<DeleteAliasResponse> DeleteAliasAsync(DeleteAliasRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCodeSigningConfigResponse DeleteCodeSigningConfig(DeleteCodeSigningConfigRequest request);
    public virtual Task`1<DeleteCodeSigningConfigResponse> DeleteCodeSigningConfigAsync(DeleteCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteEventSourceMappingResponse DeleteEventSourceMapping(DeleteEventSourceMappingRequest request);
    public virtual Task`1<DeleteEventSourceMappingResponse> DeleteEventSourceMappingAsync(DeleteEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFunctionResponse DeleteFunction(DeleteFunctionRequest request);
    public virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(string functionName, CancellationToken cancellationToken);
    public virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(DeleteFunctionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFunctionCodeSigningConfigResponse DeleteFunctionCodeSigningConfig(DeleteFunctionCodeSigningConfigRequest request);
    public virtual Task`1<DeleteFunctionCodeSigningConfigResponse> DeleteFunctionCodeSigningConfigAsync(DeleteFunctionCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFunctionConcurrencyResponse DeleteFunctionConcurrency(DeleteFunctionConcurrencyRequest request);
    public virtual Task`1<DeleteFunctionConcurrencyResponse> DeleteFunctionConcurrencyAsync(DeleteFunctionConcurrencyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFunctionEventInvokeConfigResponse DeleteFunctionEventInvokeConfig(DeleteFunctionEventInvokeConfigRequest request);
    public virtual Task`1<DeleteFunctionEventInvokeConfigResponse> DeleteFunctionEventInvokeConfigAsync(DeleteFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFunctionUrlConfigResponse DeleteFunctionUrlConfig(DeleteFunctionUrlConfigRequest request);
    public virtual Task`1<DeleteFunctionUrlConfigResponse> DeleteFunctionUrlConfigAsync(DeleteFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteLayerVersionResponse DeleteLayerVersion(DeleteLayerVersionRequest request);
    public virtual Task`1<DeleteLayerVersionResponse> DeleteLayerVersionAsync(DeleteLayerVersionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteProvisionedConcurrencyConfigResponse DeleteProvisionedConcurrencyConfig(DeleteProvisionedConcurrencyConfigRequest request);
    public virtual Task`1<DeleteProvisionedConcurrencyConfigResponse> DeleteProvisionedConcurrencyConfigAsync(DeleteProvisionedConcurrencyConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetAccountSettingsResponse GetAccountSettings(GetAccountSettingsRequest request);
    public virtual Task`1<GetAccountSettingsResponse> GetAccountSettingsAsync(GetAccountSettingsRequest request, CancellationToken cancellationToken);
    internal virtual GetAliasResponse GetAlias(GetAliasRequest request);
    public virtual Task`1<GetAliasResponse> GetAliasAsync(GetAliasRequest request, CancellationToken cancellationToken);
    internal virtual GetCodeSigningConfigResponse GetCodeSigningConfig(GetCodeSigningConfigRequest request);
    public virtual Task`1<GetCodeSigningConfigResponse> GetCodeSigningConfigAsync(GetCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetEventSourceMappingResponse GetEventSourceMapping(GetEventSourceMappingRequest request);
    public virtual Task`1<GetEventSourceMappingResponse> GetEventSourceMappingAsync(GetEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal virtual GetFunctionResponse GetFunction(GetFunctionRequest request);
    public virtual Task`1<GetFunctionResponse> GetFunctionAsync(string functionName, CancellationToken cancellationToken);
    public virtual Task`1<GetFunctionResponse> GetFunctionAsync(GetFunctionRequest request, CancellationToken cancellationToken);
    internal virtual GetFunctionCodeSigningConfigResponse GetFunctionCodeSigningConfig(GetFunctionCodeSigningConfigRequest request);
    public virtual Task`1<GetFunctionCodeSigningConfigResponse> GetFunctionCodeSigningConfigAsync(GetFunctionCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetFunctionConcurrencyResponse GetFunctionConcurrency(GetFunctionConcurrencyRequest request);
    public virtual Task`1<GetFunctionConcurrencyResponse> GetFunctionConcurrencyAsync(GetFunctionConcurrencyRequest request, CancellationToken cancellationToken);
    internal virtual GetFunctionConfigurationResponse GetFunctionConfiguration(GetFunctionConfigurationRequest request);
    public virtual Task`1<GetFunctionConfigurationResponse> GetFunctionConfigurationAsync(string functionName, CancellationToken cancellationToken);
    public virtual Task`1<GetFunctionConfigurationResponse> GetFunctionConfigurationAsync(GetFunctionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual GetFunctionEventInvokeConfigResponse GetFunctionEventInvokeConfig(GetFunctionEventInvokeConfigRequest request);
    public virtual Task`1<GetFunctionEventInvokeConfigResponse> GetFunctionEventInvokeConfigAsync(GetFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetFunctionUrlConfigResponse GetFunctionUrlConfig(GetFunctionUrlConfigRequest request);
    public virtual Task`1<GetFunctionUrlConfigResponse> GetFunctionUrlConfigAsync(GetFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetLayerVersionResponse GetLayerVersion(GetLayerVersionRequest request);
    public virtual Task`1<GetLayerVersionResponse> GetLayerVersionAsync(GetLayerVersionRequest request, CancellationToken cancellationToken);
    internal virtual GetLayerVersionByArnResponse GetLayerVersionByArn(GetLayerVersionByArnRequest request);
    public virtual Task`1<GetLayerVersionByArnResponse> GetLayerVersionByArnAsync(GetLayerVersionByArnRequest request, CancellationToken cancellationToken);
    internal virtual GetLayerVersionPolicyResponse GetLayerVersionPolicy(GetLayerVersionPolicyRequest request);
    public virtual Task`1<GetLayerVersionPolicyResponse> GetLayerVersionPolicyAsync(GetLayerVersionPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetPolicyResponse GetPolicy(GetPolicyRequest request);
    public virtual Task`1<GetPolicyResponse> GetPolicyAsync(GetPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetProvisionedConcurrencyConfigResponse GetProvisionedConcurrencyConfig(GetProvisionedConcurrencyConfigRequest request);
    public virtual Task`1<GetProvisionedConcurrencyConfigResponse> GetProvisionedConcurrencyConfigAsync(GetProvisionedConcurrencyConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetRuntimeManagementConfigResponse GetRuntimeManagementConfig(GetRuntimeManagementConfigRequest request);
    public virtual Task`1<GetRuntimeManagementConfigResponse> GetRuntimeManagementConfigAsync(GetRuntimeManagementConfigRequest request, CancellationToken cancellationToken);
    internal virtual InvokeResponse Invoke(InvokeRequest request);
    public virtual Task`1<InvokeResponse> InvokeAsync(InvokeRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("For .NET 3.5/4.5, API InvokeAsyncResponse InvokeAsync(InvokeAsyncRequest) is deprecated, use InvokeResponse Invoke(InvokeRequest), or Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead. For .NET Core, Task<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest, CancellationToken) is deprecated, use Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead.")]
internal virtual InvokeAsyncResponse InvokeAsync(InvokeAsyncRequest request);
    [ObsoleteAttribute("For .NET 3.5/4.5, API InvokeAsyncResponse InvokeAsync(InvokeAsyncRequest) is deprecated, use InvokeResponse Invoke(InvokeRequest), or Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead. For .NET Core, Task<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest, CancellationToken) is deprecated, use Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead.")]
public virtual Task`1<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest request, CancellationToken cancellationToken);
    internal virtual InvokeWithResponseStreamResponse InvokeWithResponseStream(InvokeWithResponseStreamRequest request);
    public virtual Task`1<InvokeWithResponseStreamResponse> InvokeWithResponseStreamAsync(InvokeWithResponseStreamRequest request, CancellationToken cancellationToken);
    internal virtual ListAliasesResponse ListAliases(ListAliasesRequest request);
    public virtual Task`1<ListAliasesResponse> ListAliasesAsync(ListAliasesRequest request, CancellationToken cancellationToken);
    internal virtual ListCodeSigningConfigsResponse ListCodeSigningConfigs(ListCodeSigningConfigsRequest request);
    public virtual Task`1<ListCodeSigningConfigsResponse> ListCodeSigningConfigsAsync(ListCodeSigningConfigsRequest request, CancellationToken cancellationToken);
    internal virtual ListEventSourceMappingsResponse ListEventSourceMappings(ListEventSourceMappingsRequest request);
    public virtual Task`1<ListEventSourceMappingsResponse> ListEventSourceMappingsAsync(ListEventSourceMappingsRequest request, CancellationToken cancellationToken);
    internal virtual ListFunctionEventInvokeConfigsResponse ListFunctionEventInvokeConfigs(ListFunctionEventInvokeConfigsRequest request);
    public virtual Task`1<ListFunctionEventInvokeConfigsResponse> ListFunctionEventInvokeConfigsAsync(ListFunctionEventInvokeConfigsRequest request, CancellationToken cancellationToken);
    internal virtual ListFunctionsResponse ListFunctions(ListFunctionsRequest request);
    public virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(ListFunctionsRequest request, CancellationToken cancellationToken);
    internal virtual ListFunctionsByCodeSigningConfigResponse ListFunctionsByCodeSigningConfig(ListFunctionsByCodeSigningConfigRequest request);
    public virtual Task`1<ListFunctionsByCodeSigningConfigResponse> ListFunctionsByCodeSigningConfigAsync(ListFunctionsByCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual ListFunctionUrlConfigsResponse ListFunctionUrlConfigs(ListFunctionUrlConfigsRequest request);
    public virtual Task`1<ListFunctionUrlConfigsResponse> ListFunctionUrlConfigsAsync(ListFunctionUrlConfigsRequest request, CancellationToken cancellationToken);
    internal virtual ListLayersResponse ListLayers(ListLayersRequest request);
    public virtual Task`1<ListLayersResponse> ListLayersAsync(ListLayersRequest request, CancellationToken cancellationToken);
    internal virtual ListLayerVersionsResponse ListLayerVersions(ListLayerVersionsRequest request);
    public virtual Task`1<ListLayerVersionsResponse> ListLayerVersionsAsync(ListLayerVersionsRequest request, CancellationToken cancellationToken);
    internal virtual ListProvisionedConcurrencyConfigsResponse ListProvisionedConcurrencyConfigs(ListProvisionedConcurrencyConfigsRequest request);
    public virtual Task`1<ListProvisionedConcurrencyConfigsResponse> ListProvisionedConcurrencyConfigsAsync(ListProvisionedConcurrencyConfigsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsResponse ListTags(ListTagsRequest request);
    public virtual Task`1<ListTagsResponse> ListTagsAsync(ListTagsRequest request, CancellationToken cancellationToken);
    internal virtual ListVersionsByFunctionResponse ListVersionsByFunction(ListVersionsByFunctionRequest request);
    public virtual Task`1<ListVersionsByFunctionResponse> ListVersionsByFunctionAsync(ListVersionsByFunctionRequest request, CancellationToken cancellationToken);
    internal virtual PublishLayerVersionResponse PublishLayerVersion(PublishLayerVersionRequest request);
    public virtual Task`1<PublishLayerVersionResponse> PublishLayerVersionAsync(PublishLayerVersionRequest request, CancellationToken cancellationToken);
    internal virtual PublishVersionResponse PublishVersion(PublishVersionRequest request);
    public virtual Task`1<PublishVersionResponse> PublishVersionAsync(PublishVersionRequest request, CancellationToken cancellationToken);
    internal virtual PutFunctionCodeSigningConfigResponse PutFunctionCodeSigningConfig(PutFunctionCodeSigningConfigRequest request);
    public virtual Task`1<PutFunctionCodeSigningConfigResponse> PutFunctionCodeSigningConfigAsync(PutFunctionCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual PutFunctionConcurrencyResponse PutFunctionConcurrency(PutFunctionConcurrencyRequest request);
    public virtual Task`1<PutFunctionConcurrencyResponse> PutFunctionConcurrencyAsync(PutFunctionConcurrencyRequest request, CancellationToken cancellationToken);
    internal virtual PutFunctionEventInvokeConfigResponse PutFunctionEventInvokeConfig(PutFunctionEventInvokeConfigRequest request);
    public virtual Task`1<PutFunctionEventInvokeConfigResponse> PutFunctionEventInvokeConfigAsync(PutFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    internal virtual PutProvisionedConcurrencyConfigResponse PutProvisionedConcurrencyConfig(PutProvisionedConcurrencyConfigRequest request);
    public virtual Task`1<PutProvisionedConcurrencyConfigResponse> PutProvisionedConcurrencyConfigAsync(PutProvisionedConcurrencyConfigRequest request, CancellationToken cancellationToken);
    internal virtual PutRuntimeManagementConfigResponse PutRuntimeManagementConfig(PutRuntimeManagementConfigRequest request);
    public virtual Task`1<PutRuntimeManagementConfigResponse> PutRuntimeManagementConfigAsync(PutRuntimeManagementConfigRequest request, CancellationToken cancellationToken);
    internal virtual RemoveLayerVersionPermissionResponse RemoveLayerVersionPermission(RemoveLayerVersionPermissionRequest request);
    public virtual Task`1<RemoveLayerVersionPermissionResponse> RemoveLayerVersionPermissionAsync(RemoveLayerVersionPermissionRequest request, CancellationToken cancellationToken);
    internal virtual RemovePermissionResponse RemovePermission(RemovePermissionRequest request);
    public virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateAliasResponse UpdateAlias(UpdateAliasRequest request);
    public virtual Task`1<UpdateAliasResponse> UpdateAliasAsync(UpdateAliasRequest request, CancellationToken cancellationToken);
    internal virtual UpdateCodeSigningConfigResponse UpdateCodeSigningConfig(UpdateCodeSigningConfigRequest request);
    public virtual Task`1<UpdateCodeSigningConfigResponse> UpdateCodeSigningConfigAsync(UpdateCodeSigningConfigRequest request, CancellationToken cancellationToken);
    internal virtual UpdateEventSourceMappingResponse UpdateEventSourceMapping(UpdateEventSourceMappingRequest request);
    public virtual Task`1<UpdateEventSourceMappingResponse> UpdateEventSourceMappingAsync(UpdateEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFunctionCodeResponse UpdateFunctionCode(UpdateFunctionCodeRequest request);
    public virtual Task`1<UpdateFunctionCodeResponse> UpdateFunctionCodeAsync(UpdateFunctionCodeRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFunctionConfigurationResponse UpdateFunctionConfiguration(UpdateFunctionConfigurationRequest request);
    public virtual Task`1<UpdateFunctionConfigurationResponse> UpdateFunctionConfigurationAsync(UpdateFunctionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFunctionEventInvokeConfigResponse UpdateFunctionEventInvokeConfig(UpdateFunctionEventInvokeConfigRequest request);
    public virtual Task`1<UpdateFunctionEventInvokeConfigResponse> UpdateFunctionEventInvokeConfigAsync(UpdateFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFunctionUrlConfigResponse UpdateFunctionUrlConfig(UpdateFunctionUrlConfigRequest request);
    public virtual Task`1<UpdateFunctionUrlConfigResponse> UpdateFunctionUrlConfigAsync(UpdateFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Lambda.AmazonLambdaConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonLambdaEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonLambdaConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.Lambda.AmazonLambdaDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonLambdaDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.Lambda.AmazonLambdaException : AmazonServiceException {
    public AmazonLambdaException(string message);
    public AmazonLambdaException(string message, Exception innerException);
    public AmazonLambdaException(Exception innerException);
    public AmazonLambdaException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonLambdaException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.AmazonLambdaRequest : AmazonWebServiceRequest {
}
public class Amazon.Lambda.ApplicationLogLevel : ConstantClass {
    public static ApplicationLogLevel DEBUG;
    public static ApplicationLogLevel ERROR;
    public static ApplicationLogLevel FATAL;
    public static ApplicationLogLevel INFO;
    public static ApplicationLogLevel TRACE;
    public static ApplicationLogLevel WARN;
    public ApplicationLogLevel(string value);
    private static ApplicationLogLevel();
    public static ApplicationLogLevel FindValue(string value);
    public static ApplicationLogLevel op_Implicit(string value);
}
public class Amazon.Lambda.Architecture : ConstantClass {
    public static Architecture Arm64;
    public static Architecture X86_64;
    public Architecture(string value);
    private static Architecture();
    public static Architecture FindValue(string value);
    public static Architecture op_Implicit(string value);
}
public class Amazon.Lambda.CodeSigningPolicy : ConstantClass {
    public static CodeSigningPolicy Enforce;
    public static CodeSigningPolicy Warn;
    public CodeSigningPolicy(string value);
    private static CodeSigningPolicy();
    public static CodeSigningPolicy FindValue(string value);
    public static CodeSigningPolicy op_Implicit(string value);
}
public class Amazon.Lambda.Endpoints.LambdaEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.Lambda.EndPointType : ConstantClass {
    public static EndPointType KAFKA_BOOTSTRAP_SERVERS;
    public EndPointType(string value);
    private static EndPointType();
    public static EndPointType FindValue(string value);
    public static EndPointType op_Implicit(string value);
}
public class Amazon.Lambda.EventSourcePosition : ConstantClass {
    public static EventSourcePosition AT_TIMESTAMP;
    public static EventSourcePosition LATEST;
    public static EventSourcePosition TRIM_HORIZON;
    public EventSourcePosition(string value);
    private static EventSourcePosition();
    public static EventSourcePosition FindValue(string value);
    public static EventSourcePosition op_Implicit(string value);
}
public class Amazon.Lambda.FullDocument : ConstantClass {
    public static FullDocument Default;
    public static FullDocument UpdateLookup;
    public FullDocument(string value);
    private static FullDocument();
    public static FullDocument FindValue(string value);
    public static FullDocument op_Implicit(string value);
}
public class Amazon.Lambda.FunctionResponseType : ConstantClass {
    public static FunctionResponseType ReportBatchItemFailures;
    public FunctionResponseType(string value);
    private static FunctionResponseType();
    public static FunctionResponseType FindValue(string value);
    public static FunctionResponseType op_Implicit(string value);
}
public class Amazon.Lambda.FunctionUrlAuthType : ConstantClass {
    public static FunctionUrlAuthType AWS_IAM;
    public static FunctionUrlAuthType NONE;
    public FunctionUrlAuthType(string value);
    private static FunctionUrlAuthType();
    public static FunctionUrlAuthType FindValue(string value);
    public static FunctionUrlAuthType op_Implicit(string value);
}
public class Amazon.Lambda.FunctionVersion : ConstantClass {
    public static FunctionVersion ALL;
    public FunctionVersion(string value);
    private static FunctionVersion();
    public static FunctionVersion FindValue(string value);
    public static FunctionVersion op_Implicit(string value);
}
public interface Amazon.Lambda.IAmazonLambda {
    public ILambdaPaginatorFactory Paginators { get; }
    public abstract virtual ILambdaPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddLayerVersionPermissionResponse> AddLayerVersionPermissionAsync(AddLayerVersionPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAliasResponse> CreateAliasAsync(CreateAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCodeSigningConfigResponse> CreateCodeSigningConfigAsync(CreateCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateEventSourceMappingResponse> CreateEventSourceMappingAsync(CreateEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFunctionResponse> CreateFunctionAsync(CreateFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFunctionUrlConfigResponse> CreateFunctionUrlConfigAsync(CreateFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAliasResponse> DeleteAliasAsync(DeleteAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCodeSigningConfigResponse> DeleteCodeSigningConfigAsync(DeleteCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEventSourceMappingResponse> DeleteEventSourceMappingAsync(DeleteEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(string functionName, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(DeleteFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionCodeSigningConfigResponse> DeleteFunctionCodeSigningConfigAsync(DeleteFunctionCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionConcurrencyResponse> DeleteFunctionConcurrencyAsync(DeleteFunctionConcurrencyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionEventInvokeConfigResponse> DeleteFunctionEventInvokeConfigAsync(DeleteFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionUrlConfigResponse> DeleteFunctionUrlConfigAsync(DeleteFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLayerVersionResponse> DeleteLayerVersionAsync(DeleteLayerVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteProvisionedConcurrencyConfigResponse> DeleteProvisionedConcurrencyConfigAsync(DeleteProvisionedConcurrencyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccountSettingsResponse> GetAccountSettingsAsync(GetAccountSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAliasResponse> GetAliasAsync(GetAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCodeSigningConfigResponse> GetCodeSigningConfigAsync(GetCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetEventSourceMappingResponse> GetEventSourceMappingAsync(GetEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionResponse> GetFunctionAsync(string functionName, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionResponse> GetFunctionAsync(GetFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionCodeSigningConfigResponse> GetFunctionCodeSigningConfigAsync(GetFunctionCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionConcurrencyResponse> GetFunctionConcurrencyAsync(GetFunctionConcurrencyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionConfigurationResponse> GetFunctionConfigurationAsync(string functionName, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionConfigurationResponse> GetFunctionConfigurationAsync(GetFunctionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionEventInvokeConfigResponse> GetFunctionEventInvokeConfigAsync(GetFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionUrlConfigResponse> GetFunctionUrlConfigAsync(GetFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetLayerVersionResponse> GetLayerVersionAsync(GetLayerVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetLayerVersionByArnResponse> GetLayerVersionByArnAsync(GetLayerVersionByArnRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetLayerVersionPolicyResponse> GetLayerVersionPolicyAsync(GetLayerVersionPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPolicyResponse> GetPolicyAsync(GetPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetProvisionedConcurrencyConfigResponse> GetProvisionedConcurrencyConfigAsync(GetProvisionedConcurrencyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRuntimeManagementConfigResponse> GetRuntimeManagementConfigAsync(GetRuntimeManagementConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InvokeResponse> InvokeAsync(InvokeRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("For .NET 3.5/4.5, API InvokeAsyncResponse InvokeAsync(InvokeAsyncRequest) is deprecated, use InvokeResponse Invoke(InvokeRequest), or Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead. For .NET Core, Task<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest, CancellationToken) is deprecated, use Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead.")]
public abstract virtual Task`1<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InvokeWithResponseStreamResponse> InvokeWithResponseStreamAsync(InvokeWithResponseStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAliasesResponse> ListAliasesAsync(ListAliasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCodeSigningConfigsResponse> ListCodeSigningConfigsAsync(ListCodeSigningConfigsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListEventSourceMappingsResponse> ListEventSourceMappingsAsync(ListEventSourceMappingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFunctionEventInvokeConfigsResponse> ListFunctionEventInvokeConfigsAsync(ListFunctionEventInvokeConfigsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(ListFunctionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFunctionsByCodeSigningConfigResponse> ListFunctionsByCodeSigningConfigAsync(ListFunctionsByCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFunctionUrlConfigsResponse> ListFunctionUrlConfigsAsync(ListFunctionUrlConfigsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListLayersResponse> ListLayersAsync(ListLayersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListLayerVersionsResponse> ListLayerVersionsAsync(ListLayerVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListProvisionedConcurrencyConfigsResponse> ListProvisionedConcurrencyConfigsAsync(ListProvisionedConcurrencyConfigsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsResponse> ListTagsAsync(ListTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVersionsByFunctionResponse> ListVersionsByFunctionAsync(ListVersionsByFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PublishLayerVersionResponse> PublishLayerVersionAsync(PublishLayerVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PublishVersionResponse> PublishVersionAsync(PublishVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutFunctionCodeSigningConfigResponse> PutFunctionCodeSigningConfigAsync(PutFunctionCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutFunctionConcurrencyResponse> PutFunctionConcurrencyAsync(PutFunctionConcurrencyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutFunctionEventInvokeConfigResponse> PutFunctionEventInvokeConfigAsync(PutFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutProvisionedConcurrencyConfigResponse> PutProvisionedConcurrencyConfigAsync(PutProvisionedConcurrencyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRuntimeManagementConfigResponse> PutRuntimeManagementConfigAsync(PutRuntimeManagementConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveLayerVersionPermissionResponse> RemoveLayerVersionPermissionAsync(RemoveLayerVersionPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAliasResponse> UpdateAliasAsync(UpdateAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateCodeSigningConfigResponse> UpdateCodeSigningConfigAsync(UpdateCodeSigningConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateEventSourceMappingResponse> UpdateEventSourceMappingAsync(UpdateEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFunctionCodeResponse> UpdateFunctionCodeAsync(UpdateFunctionCodeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFunctionConfigurationResponse> UpdateFunctionConfigurationAsync(UpdateFunctionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFunctionEventInvokeConfigResponse> UpdateFunctionEventInvokeConfigAsync(UpdateFunctionEventInvokeConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFunctionUrlConfigResponse> UpdateFunctionUrlConfigAsync(UpdateFunctionUrlConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.Lambda.AmazonLambdaConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.Lambda.Internal.AmazonLambdaEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Lambda.Internal.AmazonLambdaEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Lambda.Internal.AmazonLambdaMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Lambda.InvocationType : ConstantClass {
    public static InvocationType DryRun;
    public static InvocationType Event;
    public static InvocationType RequestResponse;
    public InvocationType(string value);
    private static InvocationType();
    public static InvocationType FindValue(string value);
    public static InvocationType op_Implicit(string value);
}
public class Amazon.Lambda.InvokeMode : ConstantClass {
    public static InvokeMode BUFFERED;
    public static InvokeMode RESPONSE_STREAM;
    public InvokeMode(string value);
    private static InvokeMode();
    public static InvokeMode FindValue(string value);
    public static InvokeMode op_Implicit(string value);
}
public class Amazon.Lambda.LambdaEventStreamException : EventStreamException {
    public LambdaEventStreamException(string message);
    public LambdaEventStreamException(string message, Exception innerException);
}
public class Amazon.Lambda.LastUpdateStatus : ConstantClass {
    public static LastUpdateStatus Failed;
    public static LastUpdateStatus InProgress;
    public static LastUpdateStatus Successful;
    public LastUpdateStatus(string value);
    private static LastUpdateStatus();
    public static LastUpdateStatus FindValue(string value);
    public static LastUpdateStatus op_Implicit(string value);
}
public class Amazon.Lambda.LastUpdateStatusReasonCode : ConstantClass {
    public static LastUpdateStatusReasonCode DisabledKMSKey;
    public static LastUpdateStatusReasonCode EFSIOError;
    public static LastUpdateStatusReasonCode EFSMountConnectivityError;
    public static LastUpdateStatusReasonCode EFSMountFailure;
    public static LastUpdateStatusReasonCode EFSMountTimeout;
    public static LastUpdateStatusReasonCode EniLimitExceeded;
    public static LastUpdateStatusReasonCode FunctionError;
    public static LastUpdateStatusReasonCode ImageAccessDenied;
    public static LastUpdateStatusReasonCode ImageDeleted;
    public static LastUpdateStatusReasonCode InsufficientRolePermissions;
    public static LastUpdateStatusReasonCode InternalError;
    public static LastUpdateStatusReasonCode InvalidConfiguration;
    public static LastUpdateStatusReasonCode InvalidImage;
    public static LastUpdateStatusReasonCode InvalidRuntime;
    public static LastUpdateStatusReasonCode InvalidSecurityGroup;
    public static LastUpdateStatusReasonCode InvalidStateKMSKey;
    public static LastUpdateStatusReasonCode InvalidSubnet;
    public static LastUpdateStatusReasonCode InvalidZipFileException;
    public static LastUpdateStatusReasonCode KMSKeyAccessDenied;
    public static LastUpdateStatusReasonCode KMSKeyNotFound;
    public static LastUpdateStatusReasonCode SubnetOutOfIPAddresses;
    public LastUpdateStatusReasonCode(string value);
    private static LastUpdateStatusReasonCode();
    public static LastUpdateStatusReasonCode FindValue(string value);
    public static LastUpdateStatusReasonCode op_Implicit(string value);
}
public class Amazon.Lambda.LogFormat : ConstantClass {
    public static LogFormat JSON;
    public static LogFormat Text;
    public LogFormat(string value);
    private static LogFormat();
    public static LogFormat FindValue(string value);
    public static LogFormat op_Implicit(string value);
}
public class Amazon.Lambda.LogType : ConstantClass {
    public static LogType None;
    public static LogType Tail;
    public LogType(string value);
    private static LogType();
    public static LogType FindValue(string value);
    public static LogType op_Implicit(string value);
}
public class Amazon.Lambda.Model.AccountLimit : object {
    private Nullable`1<long> _codeSizeUnzipped;
    private Nullable`1<long> _codeSizeZipped;
    private Nullable`1<int> _concurrentExecutions;
    private Nullable`1<long> _totalCodeSize;
    private Nullable`1<int> _unreservedConcurrentExecutions;
    public Nullable`1<long> CodeSizeUnzipped { get; public set; }
    public Nullable`1<long> CodeSizeZipped { get; public set; }
    public Nullable`1<int> ConcurrentExecutions { get; public set; }
    public Nullable`1<long> TotalCodeSize { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> UnreservedConcurrentExecutions { get; public set; }
    public Nullable`1<long> get_CodeSizeUnzipped();
    public void set_CodeSizeUnzipped(Nullable`1<long> value);
    internal bool IsSetCodeSizeUnzipped();
    public Nullable`1<long> get_CodeSizeZipped();
    public void set_CodeSizeZipped(Nullable`1<long> value);
    internal bool IsSetCodeSizeZipped();
    public Nullable`1<int> get_ConcurrentExecutions();
    public void set_ConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetConcurrentExecutions();
    public Nullable`1<long> get_TotalCodeSize();
    public void set_TotalCodeSize(Nullable`1<long> value);
    internal bool IsSetTotalCodeSize();
    public Nullable`1<int> get_UnreservedConcurrentExecutions();
    public void set_UnreservedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetUnreservedConcurrentExecutions();
}
public class Amazon.Lambda.Model.AccountUsage : object {
    private Nullable`1<long> _functionCount;
    private Nullable`1<long> _totalCodeSize;
    public Nullable`1<long> FunctionCount { get; public set; }
    public Nullable`1<long> TotalCodeSize { get; public set; }
    public Nullable`1<long> get_FunctionCount();
    public void set_FunctionCount(Nullable`1<long> value);
    internal bool IsSetFunctionCount();
    public Nullable`1<long> get_TotalCodeSize();
    public void set_TotalCodeSize(Nullable`1<long> value);
    internal bool IsSetTotalCodeSize();
}
public class Amazon.Lambda.Model.AddLayerVersionPermissionRequest : AmazonLambdaRequest {
    private string _action;
    private string _layerName;
    private string _organizationId;
    private string _principal;
    private string _revisionId;
    private string _statementId;
    private Nullable`1<long> _versionNumber;
    [AWSPropertyAttribute]
public string Action { get; public set; }
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    [AWSPropertyAttribute]
public string OrganizationId { get; public set; }
    [AWSPropertyAttribute]
public string Principal { get; public set; }
    public string RevisionId { get; public set; }
    [AWSPropertyAttribute]
public string StatementId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
    public string get_OrganizationId();
    public void set_OrganizationId(string value);
    internal bool IsSetOrganizationId();
    public string get_Principal();
    public void set_Principal(string value);
    internal bool IsSetPrincipal();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_StatementId();
    public void set_StatementId(string value);
    internal bool IsSetStatementId();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Lambda.Model.AddLayerVersionPermissionResponse : AmazonWebServiceResponse {
    private string _revisionId;
    private string _statement;
    public string RevisionId { get; public set; }
    public string Statement { get; public set; }
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Statement();
    public void set_Statement(string value);
    internal bool IsSetStatement();
}
public class Amazon.Lambda.Model.AddPermissionRequest : AmazonLambdaRequest {
    private string _action;
    private string _eventSourceToken;
    private string _functionName;
    private FunctionUrlAuthType _functionUrlAuthType;
    private string _principal;
    private string _principalOrgID;
    private string _qualifier;
    private string _revisionId;
    private string _sourceAccount;
    private string _sourceArn;
    private string _statementId;
    [AWSPropertyAttribute]
public string Action { get; public set; }
    [AWSPropertyAttribute]
public string EventSourceToken { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public FunctionUrlAuthType FunctionUrlAuthType { get; public set; }
    [AWSPropertyAttribute]
public string Principal { get; public set; }
    [AWSPropertyAttribute]
public string PrincipalOrgID { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string RevisionId { get; public set; }
    [AWSPropertyAttribute]
public string SourceAccount { get; public set; }
    public string SourceArn { get; public set; }
    [AWSPropertyAttribute]
public string StatementId { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public string get_EventSourceToken();
    public void set_EventSourceToken(string value);
    internal bool IsSetEventSourceToken();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public FunctionUrlAuthType get_FunctionUrlAuthType();
    public void set_FunctionUrlAuthType(FunctionUrlAuthType value);
    internal bool IsSetFunctionUrlAuthType();
    public string get_Principal();
    public void set_Principal(string value);
    internal bool IsSetPrincipal();
    public string get_PrincipalOrgID();
    public void set_PrincipalOrgID(string value);
    internal bool IsSetPrincipalOrgID();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_SourceAccount();
    public void set_SourceAccount(string value);
    internal bool IsSetSourceAccount();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public string get_StatementId();
    public void set_StatementId(string value);
    internal bool IsSetStatementId();
}
public class Amazon.Lambda.Model.AddPermissionResponse : AmazonWebServiceResponse {
    private string _statement;
    public string Statement { get; public set; }
    public string get_Statement();
    public void set_Statement(string value);
    internal bool IsSetStatement();
}
public class Amazon.Lambda.Model.AliasConfiguration : object {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    private string _revisionId;
    private AliasRoutingConfiguration _routingConfig;
    public string AliasArn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FunctionVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RevisionId { get; public set; }
    public AliasRoutingConfiguration RoutingConfig { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public AliasRoutingConfiguration get_RoutingConfig();
    public void set_RoutingConfig(AliasRoutingConfiguration value);
    internal bool IsSetRoutingConfig();
}
public class Amazon.Lambda.Model.AliasRoutingConfiguration : object {
    private Dictionary`2<string, double> _additionalVersionWeights;
    public Dictionary`2<string, double> AdditionalVersionWeights { get; public set; }
    public Dictionary`2<string, double> get_AdditionalVersionWeights();
    public void set_AdditionalVersionWeights(Dictionary`2<string, double> value);
    internal bool IsSetAdditionalVersionWeights();
}
public class Amazon.Lambda.Model.AllowedPublishers : object {
    private List`1<string> _signingProfileVersionArns;
    [AWSPropertyAttribute]
public List`1<string> SigningProfileVersionArns { get; public set; }
    public List`1<string> get_SigningProfileVersionArns();
    public void set_SigningProfileVersionArns(List`1<string> value);
    internal bool IsSetSigningProfileVersionArns();
}
public class Amazon.Lambda.Model.AmazonManagedKafkaEventSourceConfig : object {
    private string _consumerGroupId;
    [AWSPropertyAttribute]
public string ConsumerGroupId { get; public set; }
    public string get_ConsumerGroupId();
    public void set_ConsumerGroupId(string value);
    internal bool IsSetConsumerGroupId();
}
public class Amazon.Lambda.Model.CodeSigningConfig : object {
    private AllowedPublishers _allowedPublishers;
    private string _codeSigningConfigArn;
    private string _codeSigningConfigId;
    private CodeSigningPolicies _codeSigningPolicies;
    private string _description;
    private string _lastModified;
    [AWSPropertyAttribute]
public AllowedPublishers AllowedPublishers { get; public set; }
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    [AWSPropertyAttribute]
public string CodeSigningConfigId { get; public set; }
    [AWSPropertyAttribute]
public CodeSigningPolicies CodeSigningPolicies { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string LastModified { get; public set; }
    public AllowedPublishers get_AllowedPublishers();
    public void set_AllowedPublishers(AllowedPublishers value);
    internal bool IsSetAllowedPublishers();
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
    public string get_CodeSigningConfigId();
    public void set_CodeSigningConfigId(string value);
    internal bool IsSetCodeSigningConfigId();
    public CodeSigningPolicies get_CodeSigningPolicies();
    public void set_CodeSigningPolicies(CodeSigningPolicies value);
    internal bool IsSetCodeSigningPolicies();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
}
public class Amazon.Lambda.Model.CodeSigningConfigNotFoundException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public CodeSigningConfigNotFoundException(string message);
    public CodeSigningConfigNotFoundException(string message, Exception innerException);
    public CodeSigningConfigNotFoundException(Exception innerException);
    public CodeSigningConfigNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CodeSigningConfigNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.CodeSigningPolicies : object {
    private CodeSigningPolicy _untrustedArtifactOnDeployment;
    public CodeSigningPolicy UntrustedArtifactOnDeployment { get; public set; }
    public CodeSigningPolicy get_UntrustedArtifactOnDeployment();
    public void set_UntrustedArtifactOnDeployment(CodeSigningPolicy value);
    internal bool IsSetUntrustedArtifactOnDeployment();
}
public class Amazon.Lambda.Model.CodeStorageExceededException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public CodeStorageExceededException(string message);
    public CodeStorageExceededException(string message, Exception innerException);
    public CodeStorageExceededException(Exception innerException);
    public CodeStorageExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CodeStorageExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.CodeVerificationFailedException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public CodeVerificationFailedException(string message);
    public CodeVerificationFailedException(string message, Exception innerException);
    public CodeVerificationFailedException(Exception innerException);
    public CodeVerificationFailedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CodeVerificationFailedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.Concurrency : object {
    private Nullable`1<int> _reservedConcurrentExecutions;
    [AWSPropertyAttribute]
public Nullable`1<int> ReservedConcurrentExecutions { get; public set; }
    public Nullable`1<int> get_ReservedConcurrentExecutions();
    public void set_ReservedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetReservedConcurrentExecutions();
}
public class Amazon.Lambda.Model.Cors : object {
    private Nullable`1<bool> _allowCredentials;
    private List`1<string> _allowHeaders;
    private List`1<string> _allowMethods;
    private List`1<string> _allowOrigins;
    private List`1<string> _exposeHeaders;
    private Nullable`1<int> _maxAge;
    public Nullable`1<bool> AllowCredentials { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowHeaders { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowMethods { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowOrigins { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ExposeHeaders { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxAge { get; public set; }
    public Nullable`1<bool> get_AllowCredentials();
    public void set_AllowCredentials(Nullable`1<bool> value);
    internal bool IsSetAllowCredentials();
    public List`1<string> get_AllowHeaders();
    public void set_AllowHeaders(List`1<string> value);
    internal bool IsSetAllowHeaders();
    public List`1<string> get_AllowMethods();
    public void set_AllowMethods(List`1<string> value);
    internal bool IsSetAllowMethods();
    public List`1<string> get_AllowOrigins();
    public void set_AllowOrigins(List`1<string> value);
    internal bool IsSetAllowOrigins();
    public List`1<string> get_ExposeHeaders();
    public void set_ExposeHeaders(List`1<string> value);
    internal bool IsSetExposeHeaders();
    public Nullable`1<int> get_MaxAge();
    public void set_MaxAge(Nullable`1<int> value);
    internal bool IsSetMaxAge();
}
public class Amazon.Lambda.Model.CreateAliasRequest : AmazonLambdaRequest {
    private string _description;
    private string _functionName;
    private string _functionVersion;
    private string _name;
    private AliasRoutingConfiguration _routingConfig;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string FunctionVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public AliasRoutingConfiguration RoutingConfig { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public AliasRoutingConfiguration get_RoutingConfig();
    public void set_RoutingConfig(AliasRoutingConfiguration value);
    internal bool IsSetRoutingConfig();
}
public class Amazon.Lambda.Model.CreateAliasResponse : AmazonWebServiceResponse {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    private string _revisionId;
    private AliasRoutingConfiguration _routingConfig;
    public string AliasArn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FunctionVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RevisionId { get; public set; }
    public AliasRoutingConfiguration RoutingConfig { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public AliasRoutingConfiguration get_RoutingConfig();
    public void set_RoutingConfig(AliasRoutingConfiguration value);
    internal bool IsSetRoutingConfig();
}
public class Amazon.Lambda.Model.CreateCodeSigningConfigRequest : AmazonLambdaRequest {
    private AllowedPublishers _allowedPublishers;
    private CodeSigningPolicies _codeSigningPolicies;
    private string _description;
    [AWSPropertyAttribute]
public AllowedPublishers AllowedPublishers { get; public set; }
    public CodeSigningPolicies CodeSigningPolicies { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public AllowedPublishers get_AllowedPublishers();
    public void set_AllowedPublishers(AllowedPublishers value);
    internal bool IsSetAllowedPublishers();
    public CodeSigningPolicies get_CodeSigningPolicies();
    public void set_CodeSigningPolicies(CodeSigningPolicies value);
    internal bool IsSetCodeSigningPolicies();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.Lambda.Model.CreateCodeSigningConfigResponse : AmazonWebServiceResponse {
    private CodeSigningConfig _codeSigningConfig;
    [AWSPropertyAttribute]
public CodeSigningConfig CodeSigningConfig { get; public set; }
    public CodeSigningConfig get_CodeSigningConfig();
    public void set_CodeSigningConfig(CodeSigningConfig value);
    internal bool IsSetCodeSigningConfig();
}
public class Amazon.Lambda.Model.CreateEventSourceMappingRequest : AmazonLambdaRequest {
    private AmazonManagedKafkaEventSourceConfig _amazonManagedKafkaEventSourceConfig;
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _bisectBatchOnFunctionError;
    private DestinationConfig _destinationConfig;
    private DocumentDBEventSourceConfig _documentDBEventSourceConfig;
    private Nullable`1<bool> _enabled;
    private string _eventSourceArn;
    private FilterCriteria _filterCriteria;
    private string _functionName;
    private List`1<string> _functionResponseTypes;
    private Nullable`1<int> _maximumBatchingWindowInSeconds;
    private Nullable`1<int> _maximumRecordAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private Nullable`1<int> _parallelizationFactor;
    private List`1<string> _queues;
    private ScalingConfig _scalingConfig;
    private SelfManagedEventSource _selfManagedEventSource;
    private SelfManagedKafkaEventSourceConfig _selfManagedKafkaEventSourceConfig;
    private List`1<SourceAccessConfiguration> _sourceAccessConfigurations;
    private EventSourcePosition _startingPosition;
    private Nullable`1<DateTime> _startingPositionTimestamp;
    private List`1<string> _topics;
    private Nullable`1<int> _tumblingWindowInSeconds;
    public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<bool> BisectBatchOnFunctionError { get; public set; }
    public DestinationConfig DestinationConfig { get; public set; }
    public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string EventSourceArn { get; public set; }
    public FilterCriteria FilterCriteria { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionResponseTypes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumBatchingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRecordAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ParallelizationFactor { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Queues { get; public set; }
    public ScalingConfig ScalingConfig { get; public set; }
    public SelfManagedEventSource SelfManagedEventSource { get; public set; }
    public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<SourceAccessConfiguration> SourceAccessConfigurations { get; public set; }
    public EventSourcePosition StartingPosition { get; public set; }
    public Nullable`1<DateTime> StartingPositionTimestamp { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Topics { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TumblingWindowInSeconds { get; public set; }
    public AmazonManagedKafkaEventSourceConfig get_AmazonManagedKafkaEventSourceConfig();
    public void set_AmazonManagedKafkaEventSourceConfig(AmazonManagedKafkaEventSourceConfig value);
    internal bool IsSetAmazonManagedKafkaEventSourceConfig();
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<bool> get_BisectBatchOnFunctionError();
    public void set_BisectBatchOnFunctionError(Nullable`1<bool> value);
    internal bool IsSetBisectBatchOnFunctionError();
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public DocumentDBEventSourceConfig get_DocumentDBEventSourceConfig();
    public void set_DocumentDBEventSourceConfig(DocumentDBEventSourceConfig value);
    internal bool IsSetDocumentDBEventSourceConfig();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public FilterCriteria get_FilterCriteria();
    public void set_FilterCriteria(FilterCriteria value);
    internal bool IsSetFilterCriteria();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public List`1<string> get_FunctionResponseTypes();
    public void set_FunctionResponseTypes(List`1<string> value);
    internal bool IsSetFunctionResponseTypes();
    public Nullable`1<int> get_MaximumBatchingWindowInSeconds();
    public void set_MaximumBatchingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumBatchingWindowInSeconds();
    public Nullable`1<int> get_MaximumRecordAgeInSeconds();
    public void set_MaximumRecordAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumRecordAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public Nullable`1<int> get_ParallelizationFactor();
    public void set_ParallelizationFactor(Nullable`1<int> value);
    internal bool IsSetParallelizationFactor();
    public List`1<string> get_Queues();
    public void set_Queues(List`1<string> value);
    internal bool IsSetQueues();
    public ScalingConfig get_ScalingConfig();
    public void set_ScalingConfig(ScalingConfig value);
    internal bool IsSetScalingConfig();
    public SelfManagedEventSource get_SelfManagedEventSource();
    public void set_SelfManagedEventSource(SelfManagedEventSource value);
    internal bool IsSetSelfManagedEventSource();
    public SelfManagedKafkaEventSourceConfig get_SelfManagedKafkaEventSourceConfig();
    public void set_SelfManagedKafkaEventSourceConfig(SelfManagedKafkaEventSourceConfig value);
    internal bool IsSetSelfManagedKafkaEventSourceConfig();
    public List`1<SourceAccessConfiguration> get_SourceAccessConfigurations();
    public void set_SourceAccessConfigurations(List`1<SourceAccessConfiguration> value);
    internal bool IsSetSourceAccessConfigurations();
    public EventSourcePosition get_StartingPosition();
    public void set_StartingPosition(EventSourcePosition value);
    internal bool IsSetStartingPosition();
    public Nullable`1<DateTime> get_StartingPositionTimestamp();
    public void set_StartingPositionTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingPositionTimestamp();
    public List`1<string> get_Topics();
    public void set_Topics(List`1<string> value);
    internal bool IsSetTopics();
    public Nullable`1<int> get_TumblingWindowInSeconds();
    public void set_TumblingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetTumblingWindowInSeconds();
}
public class Amazon.Lambda.Model.CreateEventSourceMappingResponse : AmazonWebServiceResponse {
    private AmazonManagedKafkaEventSourceConfig _amazonManagedKafkaEventSourceConfig;
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _bisectBatchOnFunctionError;
    private DestinationConfig _destinationConfig;
    private DocumentDBEventSourceConfig _documentDBEventSourceConfig;
    private string _eventSourceArn;
    private FilterCriteria _filterCriteria;
    private string _functionArn;
    private List`1<string> _functionResponseTypes;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private Nullable`1<int> _maximumBatchingWindowInSeconds;
    private Nullable`1<int> _maximumRecordAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private Nullable`1<int> _parallelizationFactor;
    private List`1<string> _queues;
    private ScalingConfig _scalingConfig;
    private SelfManagedEventSource _selfManagedEventSource;
    private SelfManagedKafkaEventSourceConfig _selfManagedKafkaEventSourceConfig;
    private List`1<SourceAccessConfiguration> _sourceAccessConfigurations;
    private EventSourcePosition _startingPosition;
    private Nullable`1<DateTime> _startingPositionTimestamp;
    private string _state;
    private string _stateTransitionReason;
    private List`1<string> _topics;
    private Nullable`1<int> _tumblingWindowInSeconds;
    private string _uuid;
    public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<bool> BisectBatchOnFunctionError { get; public set; }
    public DestinationConfig DestinationConfig { get; public set; }
    public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; public set; }
    public string EventSourceArn { get; public set; }
    public FilterCriteria FilterCriteria { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionResponseTypes { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumBatchingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRecordAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ParallelizationFactor { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Queues { get; public set; }
    public ScalingConfig ScalingConfig { get; public set; }
    public SelfManagedEventSource SelfManagedEventSource { get; public set; }
    public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<SourceAccessConfiguration> SourceAccessConfigurations { get; public set; }
    public EventSourcePosition StartingPosition { get; public set; }
    public Nullable`1<DateTime> StartingPositionTimestamp { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Topics { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TumblingWindowInSeconds { get; public set; }
    public string UUID { get; public set; }
    public AmazonManagedKafkaEventSourceConfig get_AmazonManagedKafkaEventSourceConfig();
    public void set_AmazonManagedKafkaEventSourceConfig(AmazonManagedKafkaEventSourceConfig value);
    internal bool IsSetAmazonManagedKafkaEventSourceConfig();
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<bool> get_BisectBatchOnFunctionError();
    public void set_BisectBatchOnFunctionError(Nullable`1<bool> value);
    internal bool IsSetBisectBatchOnFunctionError();
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public DocumentDBEventSourceConfig get_DocumentDBEventSourceConfig();
    public void set_DocumentDBEventSourceConfig(DocumentDBEventSourceConfig value);
    internal bool IsSetDocumentDBEventSourceConfig();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public FilterCriteria get_FilterCriteria();
    public void set_FilterCriteria(FilterCriteria value);
    internal bool IsSetFilterCriteria();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public List`1<string> get_FunctionResponseTypes();
    public void set_FunctionResponseTypes(List`1<string> value);
    internal bool IsSetFunctionResponseTypes();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public Nullable`1<int> get_MaximumBatchingWindowInSeconds();
    public void set_MaximumBatchingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumBatchingWindowInSeconds();
    public Nullable`1<int> get_MaximumRecordAgeInSeconds();
    public void set_MaximumRecordAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumRecordAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public Nullable`1<int> get_ParallelizationFactor();
    public void set_ParallelizationFactor(Nullable`1<int> value);
    internal bool IsSetParallelizationFactor();
    public List`1<string> get_Queues();
    public void set_Queues(List`1<string> value);
    internal bool IsSetQueues();
    public ScalingConfig get_ScalingConfig();
    public void set_ScalingConfig(ScalingConfig value);
    internal bool IsSetScalingConfig();
    public SelfManagedEventSource get_SelfManagedEventSource();
    public void set_SelfManagedEventSource(SelfManagedEventSource value);
    internal bool IsSetSelfManagedEventSource();
    public SelfManagedKafkaEventSourceConfig get_SelfManagedKafkaEventSourceConfig();
    public void set_SelfManagedKafkaEventSourceConfig(SelfManagedKafkaEventSourceConfig value);
    internal bool IsSetSelfManagedKafkaEventSourceConfig();
    public List`1<SourceAccessConfiguration> get_SourceAccessConfigurations();
    public void set_SourceAccessConfigurations(List`1<SourceAccessConfiguration> value);
    internal bool IsSetSourceAccessConfigurations();
    public EventSourcePosition get_StartingPosition();
    public void set_StartingPosition(EventSourcePosition value);
    internal bool IsSetStartingPosition();
    public Nullable`1<DateTime> get_StartingPositionTimestamp();
    public void set_StartingPositionTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingPositionTimestamp();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public List`1<string> get_Topics();
    public void set_Topics(List`1<string> value);
    internal bool IsSetTopics();
    public Nullable`1<int> get_TumblingWindowInSeconds();
    public void set_TumblingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetTumblingWindowInSeconds();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.CreateFunctionRequest : AmazonLambdaRequest {
    private List`1<string> _architectures;
    private FunctionCode _code;
    private string _codeSigningConfigArn;
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private Environment _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionName;
    private string _handler;
    private ImageConfig _imageConfig;
    private string _kmsKeyArn;
    private List`1<string> _layers;
    private LoggingConfig _loggingConfig;
    private Nullable`1<int> _memorySize;
    private PackageType _packageType;
    private Nullable`1<bool> _publish;
    private string _role;
    private Runtime _runtime;
    private SnapStart _snapStart;
    private Dictionary`2<string, string> _tags;
    private Nullable`1<int> _timeout;
    private TracingConfig _tracingConfig;
    private VpcConfig _vpcConfig;
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    [AWSPropertyAttribute]
public FunctionCode Code { get; public set; }
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Environment Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfig ImageConfig { get; public set; }
    public string KMSKeyArn { get; public set; }
    public List`1<string> Layers { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public PackageType PackageType { get; public set; }
    public Nullable`1<bool> Publish { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public SnapStart SnapStart { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfig TracingConfig { get; public set; }
    public VpcConfig VpcConfig { get; public set; }
    public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public FunctionCode get_Code();
    public void set_Code(FunctionCode value);
    internal bool IsSetCode();
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Environment get_Environment();
    public void set_Environment(Environment value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfig get_ImageConfig();
    public void set_ImageConfig(ImageConfig value);
    internal bool IsSetImageConfig();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public List`1<string> get_Layers();
    public void set_Layers(List`1<string> value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public PackageType get_PackageType();
    public void set_PackageType(PackageType value);
    internal bool IsSetPackageType();
    public Nullable`1<bool> get_Publish();
    public void set_Publish(Nullable`1<bool> value);
    internal bool IsSetPublish();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public SnapStart get_SnapStart();
    public void set_SnapStart(SnapStart value);
    internal bool IsSetSnapStart();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfig get_TracingConfig();
    public void set_TracingConfig(TracingConfig value);
    internal bool IsSetTracingConfig();
    public VpcConfig get_VpcConfig();
    public void set_VpcConfig(VpcConfig value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.CreateFunctionResponse : AmazonWebServiceResponse {
    private List`1<string> _architectures;
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private EnvironmentResponse _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private ImageConfigResponse _imageConfigResponse;
    private string _kmsKeyArn;
    private string _lastModified;
    private LastUpdateStatus _lastUpdateStatus;
    private string _lastUpdateStatusReason;
    private LastUpdateStatusReasonCode _lastUpdateStatusReasonCode;
    private List`1<Layer> _layers;
    private LoggingConfig _loggingConfig;
    private string _masterArn;
    private Nullable`1<int> _memorySize;
    private PackageType _packageType;
    private string _revisionId;
    private string _role;
    private Runtime _runtime;
    private RuntimeVersionConfig _runtimeVersionConfig;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    private SnapStartResponse _snapStart;
    private State _state;
    private string _stateReason;
    private StateReasonCode _stateReasonCode;
    private Nullable`1<int> _timeout;
    private TracingConfigResponse _tracingConfig;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    public string CodeSha256 { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EnvironmentResponse Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfigResponse ImageConfigResponse { get; public set; }
    public string KMSKeyArn { get; public set; }
    public string LastModified { get; public set; }
    public LastUpdateStatus LastUpdateStatus { get; public set; }
    public string LastUpdateStatusReason { get; public set; }
    public LastUpdateStatusReasonCode LastUpdateStatusReasonCode { get; public set; }
    public List`1<Layer> Layers { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    public string MasterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public PackageType PackageType { get; public set; }
    public string RevisionId { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public RuntimeVersionConfig RuntimeVersionConfig { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public SnapStartResponse SnapStart { get; public set; }
    public State State { get; public set; }
    public string StateReason { get; public set; }
    public StateReasonCode StateReasonCode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfigResponse TracingConfig { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EnvironmentResponse get_Environment();
    public void set_Environment(EnvironmentResponse value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfigResponse get_ImageConfigResponse();
    public void set_ImageConfigResponse(ImageConfigResponse value);
    internal bool IsSetImageConfigResponse();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public LastUpdateStatus get_LastUpdateStatus();
    public void set_LastUpdateStatus(LastUpdateStatus value);
    internal bool IsSetLastUpdateStatus();
    public string get_LastUpdateStatusReason();
    public void set_LastUpdateStatusReason(string value);
    internal bool IsSetLastUpdateStatusReason();
    public LastUpdateStatusReasonCode get_LastUpdateStatusReasonCode();
    public void set_LastUpdateStatusReasonCode(LastUpdateStatusReasonCode value);
    internal bool IsSetLastUpdateStatusReasonCode();
    public List`1<Layer> get_Layers();
    public void set_Layers(List`1<Layer> value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public string get_MasterArn();
    public void set_MasterArn(string value);
    internal bool IsSetMasterArn();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public PackageType get_PackageType();
    public void set_PackageType(PackageType value);
    internal bool IsSetPackageType();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public RuntimeVersionConfig get_RuntimeVersionConfig();
    public void set_RuntimeVersionConfig(RuntimeVersionConfig value);
    internal bool IsSetRuntimeVersionConfig();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
    public SnapStartResponse get_SnapStart();
    public void set_SnapStart(SnapStartResponse value);
    internal bool IsSetSnapStart();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public StateReasonCode get_StateReasonCode();
    public void set_StateReasonCode(StateReasonCode value);
    internal bool IsSetStateReasonCode();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfigResponse get_TracingConfig();
    public void set_TracingConfig(TracingConfigResponse value);
    internal bool IsSetTracingConfig();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.CreateFunctionUrlConfigRequest : AmazonLambdaRequest {
    private FunctionUrlAuthType _authType;
    private Cors _cors;
    private string _functionName;
    private InvokeMode _invokeMode;
    private string _qualifier;
    [AWSPropertyAttribute]
public FunctionUrlAuthType AuthType { get; public set; }
    public Cors Cors { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public InvokeMode InvokeMode { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public FunctionUrlAuthType get_AuthType();
    public void set_AuthType(FunctionUrlAuthType value);
    internal bool IsSetAuthType();
    public Cors get_Cors();
    public void set_Cors(Cors value);
    internal bool IsSetCors();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public InvokeMode get_InvokeMode();
    public void set_InvokeMode(InvokeMode value);
    internal bool IsSetInvokeMode();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.CreateFunctionUrlConfigResponse : AmazonWebServiceResponse {
    private FunctionUrlAuthType _authType;
    private Cors _cors;
    private string _creationTime;
    private string _functionArn;
    private string _functionUrl;
    private InvokeMode _invokeMode;
    [AWSPropertyAttribute]
public FunctionUrlAuthType AuthType { get; public set; }
    public Cors Cors { get; public set; }
    [AWSPropertyAttribute]
public string CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionUrl { get; public set; }
    public InvokeMode InvokeMode { get; public set; }
    public FunctionUrlAuthType get_AuthType();
    public void set_AuthType(FunctionUrlAuthType value);
    internal bool IsSetAuthType();
    public Cors get_Cors();
    public void set_Cors(Cors value);
    internal bool IsSetCors();
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionUrl();
    public void set_FunctionUrl(string value);
    internal bool IsSetFunctionUrl();
    public InvokeMode get_InvokeMode();
    public void set_InvokeMode(InvokeMode value);
    internal bool IsSetInvokeMode();
}
public class Amazon.Lambda.Model.DeadLetterConfig : object {
    private string _targetArn;
    public string TargetArn { get; public set; }
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.Lambda.Model.DeleteAliasRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _name;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.DeleteAliasResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteCodeSigningConfigRequest : AmazonLambdaRequest {
    private string _codeSigningConfigArn;
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
}
public class Amazon.Lambda.Model.DeleteCodeSigningConfigResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteEventSourceMappingRequest : AmazonLambdaRequest {
    private string _uuid;
    [AWSPropertyAttribute]
public string UUID { get; public set; }
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.DeleteEventSourceMappingResponse : AmazonWebServiceResponse {
    private AmazonManagedKafkaEventSourceConfig _amazonManagedKafkaEventSourceConfig;
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _bisectBatchOnFunctionError;
    private DestinationConfig _destinationConfig;
    private DocumentDBEventSourceConfig _documentDBEventSourceConfig;
    private string _eventSourceArn;
    private FilterCriteria _filterCriteria;
    private string _functionArn;
    private List`1<string> _functionResponseTypes;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private Nullable`1<int> _maximumBatchingWindowInSeconds;
    private Nullable`1<int> _maximumRecordAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private Nullable`1<int> _parallelizationFactor;
    private List`1<string> _queues;
    private ScalingConfig _scalingConfig;
    private SelfManagedEventSource _selfManagedEventSource;
    private SelfManagedKafkaEventSourceConfig _selfManagedKafkaEventSourceConfig;
    private List`1<SourceAccessConfiguration> _sourceAccessConfigurations;
    private EventSourcePosition _startingPosition;
    private Nullable`1<DateTime> _startingPositionTimestamp;
    private string _state;
    private string _stateTransitionReason;
    private List`1<string> _topics;
    private Nullable`1<int> _tumblingWindowInSeconds;
    private string _uuid;
    public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<bool> BisectBatchOnFunctionError { get; public set; }
    public DestinationConfig DestinationConfig { get; public set; }
    public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; public set; }
    public string EventSourceArn { get; public set; }
    public FilterCriteria FilterCriteria { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionResponseTypes { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumBatchingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRecordAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ParallelizationFactor { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Queues { get; public set; }
    public ScalingConfig ScalingConfig { get; public set; }
    public SelfManagedEventSource SelfManagedEventSource { get; public set; }
    public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<SourceAccessConfiguration> SourceAccessConfigurations { get; public set; }
    public EventSourcePosition StartingPosition { get; public set; }
    public Nullable`1<DateTime> StartingPositionTimestamp { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Topics { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TumblingWindowInSeconds { get; public set; }
    public string UUID { get; public set; }
    public AmazonManagedKafkaEventSourceConfig get_AmazonManagedKafkaEventSourceConfig();
    public void set_AmazonManagedKafkaEventSourceConfig(AmazonManagedKafkaEventSourceConfig value);
    internal bool IsSetAmazonManagedKafkaEventSourceConfig();
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<bool> get_BisectBatchOnFunctionError();
    public void set_BisectBatchOnFunctionError(Nullable`1<bool> value);
    internal bool IsSetBisectBatchOnFunctionError();
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public DocumentDBEventSourceConfig get_DocumentDBEventSourceConfig();
    public void set_DocumentDBEventSourceConfig(DocumentDBEventSourceConfig value);
    internal bool IsSetDocumentDBEventSourceConfig();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public FilterCriteria get_FilterCriteria();
    public void set_FilterCriteria(FilterCriteria value);
    internal bool IsSetFilterCriteria();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public List`1<string> get_FunctionResponseTypes();
    public void set_FunctionResponseTypes(List`1<string> value);
    internal bool IsSetFunctionResponseTypes();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public Nullable`1<int> get_MaximumBatchingWindowInSeconds();
    public void set_MaximumBatchingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumBatchingWindowInSeconds();
    public Nullable`1<int> get_MaximumRecordAgeInSeconds();
    public void set_MaximumRecordAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumRecordAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public Nullable`1<int> get_ParallelizationFactor();
    public void set_ParallelizationFactor(Nullable`1<int> value);
    internal bool IsSetParallelizationFactor();
    public List`1<string> get_Queues();
    public void set_Queues(List`1<string> value);
    internal bool IsSetQueues();
    public ScalingConfig get_ScalingConfig();
    public void set_ScalingConfig(ScalingConfig value);
    internal bool IsSetScalingConfig();
    public SelfManagedEventSource get_SelfManagedEventSource();
    public void set_SelfManagedEventSource(SelfManagedEventSource value);
    internal bool IsSetSelfManagedEventSource();
    public SelfManagedKafkaEventSourceConfig get_SelfManagedKafkaEventSourceConfig();
    public void set_SelfManagedKafkaEventSourceConfig(SelfManagedKafkaEventSourceConfig value);
    internal bool IsSetSelfManagedKafkaEventSourceConfig();
    public List`1<SourceAccessConfiguration> get_SourceAccessConfigurations();
    public void set_SourceAccessConfigurations(List`1<SourceAccessConfiguration> value);
    internal bool IsSetSourceAccessConfigurations();
    public EventSourcePosition get_StartingPosition();
    public void set_StartingPosition(EventSourcePosition value);
    internal bool IsSetStartingPosition();
    public Nullable`1<DateTime> get_StartingPositionTimestamp();
    public void set_StartingPositionTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingPositionTimestamp();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public List`1<string> get_Topics();
    public void set_Topics(List`1<string> value);
    internal bool IsSetTopics();
    public Nullable`1<int> get_TumblingWindowInSeconds();
    public void set_TumblingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetTumblingWindowInSeconds();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.DeleteFunctionCodeSigningConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.DeleteFunctionCodeSigningConfigResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteFunctionConcurrencyRequest : AmazonLambdaRequest {
    private string _functionName;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.DeleteFunctionConcurrencyResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteFunctionEventInvokeConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.DeleteFunctionEventInvokeConfigResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteFunctionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.DeleteFunctionResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteFunctionUrlConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.DeleteFunctionUrlConfigResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteLayerVersionRequest : AmazonLambdaRequest {
    private string _layerName;
    private Nullable`1<long> _versionNumber;
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Lambda.Model.DeleteLayerVersionResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteProvisionedConcurrencyConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.DeleteProvisionedConcurrencyConfigResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DestinationConfig : object {
    private OnFailure _onFailure;
    private OnSuccess _onSuccess;
    public OnFailure OnFailure { get; public set; }
    public OnSuccess OnSuccess { get; public set; }
    public OnFailure get_OnFailure();
    public void set_OnFailure(OnFailure value);
    internal bool IsSetOnFailure();
    public OnSuccess get_OnSuccess();
    public void set_OnSuccess(OnSuccess value);
    internal bool IsSetOnSuccess();
}
public class Amazon.Lambda.Model.DocumentDBEventSourceConfig : object {
    private string _collectionName;
    private string _databaseName;
    private FullDocument _fullDocument;
    [AWSPropertyAttribute]
public string CollectionName { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public FullDocument FullDocument { get; public set; }
    public string get_CollectionName();
    public void set_CollectionName(string value);
    internal bool IsSetCollectionName();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public FullDocument get_FullDocument();
    public void set_FullDocument(FullDocument value);
    internal bool IsSetFullDocument();
}
public class Amazon.Lambda.Model.EC2AccessDeniedException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public EC2AccessDeniedException(string message);
    public EC2AccessDeniedException(string message, Exception innerException);
    public EC2AccessDeniedException(Exception innerException);
    public EC2AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EC2AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.EC2ThrottledException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public EC2ThrottledException(string message);
    public EC2ThrottledException(string message, Exception innerException);
    public EC2ThrottledException(Exception innerException);
    public EC2ThrottledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EC2ThrottledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.EC2UnexpectedException : AmazonLambdaException {
    private string _ec2ErrorCode;
    private string _type;
    public string EC2ErrorCode { get; public set; }
    public string Type { get; public set; }
    public EC2UnexpectedException(string message);
    public EC2UnexpectedException(string message, Exception innerException);
    public EC2UnexpectedException(Exception innerException);
    public EC2UnexpectedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EC2UnexpectedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_EC2ErrorCode();
    public void set_EC2ErrorCode(string value);
    internal bool IsSetEC2ErrorCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.EFSIOException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public EFSIOException(string message);
    public EFSIOException(string message, Exception innerException);
    public EFSIOException(Exception innerException);
    public EFSIOException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EFSIOException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.EFSMountConnectivityException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public EFSMountConnectivityException(string message);
    public EFSMountConnectivityException(string message, Exception innerException);
    public EFSMountConnectivityException(Exception innerException);
    public EFSMountConnectivityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EFSMountConnectivityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.EFSMountFailureException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public EFSMountFailureException(string message);
    public EFSMountFailureException(string message, Exception innerException);
    public EFSMountFailureException(Exception innerException);
    public EFSMountFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EFSMountFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.EFSMountTimeoutException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public EFSMountTimeoutException(string message);
    public EFSMountTimeoutException(string message, Exception innerException);
    public EFSMountTimeoutException(Exception innerException);
    public EFSMountTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EFSMountTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.ENILimitReachedException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public ENILimitReachedException(string message);
    public ENILimitReachedException(string message, Exception innerException);
    public ENILimitReachedException(Exception innerException);
    public ENILimitReachedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ENILimitReachedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.Environment : object {
    private Dictionary`2<string, string> _variables;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Variables { get; public set; }
    public bool IsVariablesSet { get; public set; }
    public Dictionary`2<string, string> get_Variables();
    public void set_Variables(Dictionary`2<string, string> value);
    public bool get_IsVariablesSet();
    public void set_IsVariablesSet(bool value);
    internal bool IsSetVariables();
}
public class Amazon.Lambda.Model.EnvironmentError : object {
    private string _errorCode;
    private string _message;
    public string ErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.Lambda.Model.EnvironmentResponse : object {
    private EnvironmentError _error;
    private Dictionary`2<string, string> _variables;
    public EnvironmentError Error { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Variables { get; public set; }
    public EnvironmentError get_Error();
    public void set_Error(EnvironmentError value);
    internal bool IsSetError();
    public Dictionary`2<string, string> get_Variables();
    public void set_Variables(Dictionary`2<string, string> value);
    internal bool IsSetVariables();
}
public class Amazon.Lambda.Model.EphemeralStorage : object {
    private Nullable`1<int> _size;
    [AWSPropertyAttribute]
public Nullable`1<int> Size { get; public set; }
    public Nullable`1<int> get_Size();
    public void set_Size(Nullable`1<int> value);
    internal bool IsSetSize();
}
public class Amazon.Lambda.Model.EventSourceMappingConfiguration : object {
    private AmazonManagedKafkaEventSourceConfig _amazonManagedKafkaEventSourceConfig;
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _bisectBatchOnFunctionError;
    private DestinationConfig _destinationConfig;
    private DocumentDBEventSourceConfig _documentDBEventSourceConfig;
    private string _eventSourceArn;
    private FilterCriteria _filterCriteria;
    private string _functionArn;
    private List`1<string> _functionResponseTypes;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private Nullable`1<int> _maximumBatchingWindowInSeconds;
    private Nullable`1<int> _maximumRecordAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private Nullable`1<int> _parallelizationFactor;
    private List`1<string> _queues;
    private ScalingConfig _scalingConfig;
    private SelfManagedEventSource _selfManagedEventSource;
    private SelfManagedKafkaEventSourceConfig _selfManagedKafkaEventSourceConfig;
    private List`1<SourceAccessConfiguration> _sourceAccessConfigurations;
    private EventSourcePosition _startingPosition;
    private Nullable`1<DateTime> _startingPositionTimestamp;
    private string _state;
    private string _stateTransitionReason;
    private List`1<string> _topics;
    private Nullable`1<int> _tumblingWindowInSeconds;
    private string _uuid;
    public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<bool> BisectBatchOnFunctionError { get; public set; }
    public DestinationConfig DestinationConfig { get; public set; }
    public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; public set; }
    public string EventSourceArn { get; public set; }
    public FilterCriteria FilterCriteria { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionResponseTypes { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumBatchingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRecordAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ParallelizationFactor { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Queues { get; public set; }
    public ScalingConfig ScalingConfig { get; public set; }
    public SelfManagedEventSource SelfManagedEventSource { get; public set; }
    public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<SourceAccessConfiguration> SourceAccessConfigurations { get; public set; }
    public EventSourcePosition StartingPosition { get; public set; }
    public Nullable`1<DateTime> StartingPositionTimestamp { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Topics { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TumblingWindowInSeconds { get; public set; }
    public string UUID { get; public set; }
    public AmazonManagedKafkaEventSourceConfig get_AmazonManagedKafkaEventSourceConfig();
    public void set_AmazonManagedKafkaEventSourceConfig(AmazonManagedKafkaEventSourceConfig value);
    internal bool IsSetAmazonManagedKafkaEventSourceConfig();
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<bool> get_BisectBatchOnFunctionError();
    public void set_BisectBatchOnFunctionError(Nullable`1<bool> value);
    internal bool IsSetBisectBatchOnFunctionError();
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public DocumentDBEventSourceConfig get_DocumentDBEventSourceConfig();
    public void set_DocumentDBEventSourceConfig(DocumentDBEventSourceConfig value);
    internal bool IsSetDocumentDBEventSourceConfig();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public FilterCriteria get_FilterCriteria();
    public void set_FilterCriteria(FilterCriteria value);
    internal bool IsSetFilterCriteria();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public List`1<string> get_FunctionResponseTypes();
    public void set_FunctionResponseTypes(List`1<string> value);
    internal bool IsSetFunctionResponseTypes();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public Nullable`1<int> get_MaximumBatchingWindowInSeconds();
    public void set_MaximumBatchingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumBatchingWindowInSeconds();
    public Nullable`1<int> get_MaximumRecordAgeInSeconds();
    public void set_MaximumRecordAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumRecordAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public Nullable`1<int> get_ParallelizationFactor();
    public void set_ParallelizationFactor(Nullable`1<int> value);
    internal bool IsSetParallelizationFactor();
    public List`1<string> get_Queues();
    public void set_Queues(List`1<string> value);
    internal bool IsSetQueues();
    public ScalingConfig get_ScalingConfig();
    public void set_ScalingConfig(ScalingConfig value);
    internal bool IsSetScalingConfig();
    public SelfManagedEventSource get_SelfManagedEventSource();
    public void set_SelfManagedEventSource(SelfManagedEventSource value);
    internal bool IsSetSelfManagedEventSource();
    public SelfManagedKafkaEventSourceConfig get_SelfManagedKafkaEventSourceConfig();
    public void set_SelfManagedKafkaEventSourceConfig(SelfManagedKafkaEventSourceConfig value);
    internal bool IsSetSelfManagedKafkaEventSourceConfig();
    public List`1<SourceAccessConfiguration> get_SourceAccessConfigurations();
    public void set_SourceAccessConfigurations(List`1<SourceAccessConfiguration> value);
    internal bool IsSetSourceAccessConfigurations();
    public EventSourcePosition get_StartingPosition();
    public void set_StartingPosition(EventSourcePosition value);
    internal bool IsSetStartingPosition();
    public Nullable`1<DateTime> get_StartingPositionTimestamp();
    public void set_StartingPositionTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingPositionTimestamp();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public List`1<string> get_Topics();
    public void set_Topics(List`1<string> value);
    internal bool IsSetTopics();
    public Nullable`1<int> get_TumblingWindowInSeconds();
    public void set_TumblingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetTumblingWindowInSeconds();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.FileSystemConfig : object {
    private string _arn;
    private string _localMountPath;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string LocalMountPath { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_LocalMountPath();
    public void set_LocalMountPath(string value);
    internal bool IsSetLocalMountPath();
}
public class Amazon.Lambda.Model.Filter : object {
    private string _pattern;
    [AWSPropertyAttribute]
public string Pattern { get; public set; }
    public string get_Pattern();
    public void set_Pattern(string value);
    internal bool IsSetPattern();
}
public class Amazon.Lambda.Model.FilterCriteria : object {
    private List`1<Filter> _filters;
    public List`1<Filter> Filters { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.Lambda.Model.FunctionCode : object {
    private string _imageUri;
    private string _s3Bucket;
    private string _s3Key;
    private string _s3ObjectVersion;
    private MemoryStream _zipFile;
    public string ImageUri { get; public set; }
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    [AWSPropertyAttribute]
public string S3Key { get; public set; }
    [AWSPropertyAttribute]
public string S3ObjectVersion { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream ZipFile { get; public set; }
    public string get_ImageUri();
    public void set_ImageUri(string value);
    internal bool IsSetImageUri();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
    public string get_S3ObjectVersion();
    public void set_S3ObjectVersion(string value);
    internal bool IsSetS3ObjectVersion();
    public MemoryStream get_ZipFile();
    public void set_ZipFile(MemoryStream value);
    internal bool IsSetZipFile();
}
public class Amazon.Lambda.Model.FunctionCodeLocation : object {
    private string _imageUri;
    private string _location;
    private string _repositoryType;
    private string _resolvedImageUri;
    public string ImageUri { get; public set; }
    public string Location { get; public set; }
    public string RepositoryType { get; public set; }
    public string ResolvedImageUri { get; public set; }
    public string get_ImageUri();
    public void set_ImageUri(string value);
    internal bool IsSetImageUri();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public string get_RepositoryType();
    public void set_RepositoryType(string value);
    internal bool IsSetRepositoryType();
    public string get_ResolvedImageUri();
    public void set_ResolvedImageUri(string value);
    internal bool IsSetResolvedImageUri();
}
public class Amazon.Lambda.Model.FunctionConfiguration : object {
    private List`1<string> _architectures;
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private EnvironmentResponse _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private ImageConfigResponse _imageConfigResponse;
    private string _kmsKeyArn;
    private string _lastModified;
    private LastUpdateStatus _lastUpdateStatus;
    private string _lastUpdateStatusReason;
    private LastUpdateStatusReasonCode _lastUpdateStatusReasonCode;
    private List`1<Layer> _layers;
    private LoggingConfig _loggingConfig;
    private string _masterArn;
    private Nullable`1<int> _memorySize;
    private PackageType _packageType;
    private string _revisionId;
    private string _role;
    private Runtime _runtime;
    private RuntimeVersionConfig _runtimeVersionConfig;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    private SnapStartResponse _snapStart;
    private State _state;
    private string _stateReason;
    private StateReasonCode _stateReasonCode;
    private Nullable`1<int> _timeout;
    private TracingConfigResponse _tracingConfig;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    public string CodeSha256 { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EnvironmentResponse Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfigResponse ImageConfigResponse { get; public set; }
    public string KMSKeyArn { get; public set; }
    public string LastModified { get; public set; }
    public LastUpdateStatus LastUpdateStatus { get; public set; }
    public string LastUpdateStatusReason { get; public set; }
    public LastUpdateStatusReasonCode LastUpdateStatusReasonCode { get; public set; }
    public List`1<Layer> Layers { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    public string MasterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public PackageType PackageType { get; public set; }
    public string RevisionId { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public RuntimeVersionConfig RuntimeVersionConfig { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public SnapStartResponse SnapStart { get; public set; }
    public State State { get; public set; }
    public string StateReason { get; public set; }
    public StateReasonCode StateReasonCode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfigResponse TracingConfig { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EnvironmentResponse get_Environment();
    public void set_Environment(EnvironmentResponse value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfigResponse get_ImageConfigResponse();
    public void set_ImageConfigResponse(ImageConfigResponse value);
    internal bool IsSetImageConfigResponse();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public LastUpdateStatus get_LastUpdateStatus();
    public void set_LastUpdateStatus(LastUpdateStatus value);
    internal bool IsSetLastUpdateStatus();
    public string get_LastUpdateStatusReason();
    public void set_LastUpdateStatusReason(string value);
    internal bool IsSetLastUpdateStatusReason();
    public LastUpdateStatusReasonCode get_LastUpdateStatusReasonCode();
    public void set_LastUpdateStatusReasonCode(LastUpdateStatusReasonCode value);
    internal bool IsSetLastUpdateStatusReasonCode();
    public List`1<Layer> get_Layers();
    public void set_Layers(List`1<Layer> value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public string get_MasterArn();
    public void set_MasterArn(string value);
    internal bool IsSetMasterArn();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public PackageType get_PackageType();
    public void set_PackageType(PackageType value);
    internal bool IsSetPackageType();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public RuntimeVersionConfig get_RuntimeVersionConfig();
    public void set_RuntimeVersionConfig(RuntimeVersionConfig value);
    internal bool IsSetRuntimeVersionConfig();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
    public SnapStartResponse get_SnapStart();
    public void set_SnapStart(SnapStartResponse value);
    internal bool IsSetSnapStart();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public StateReasonCode get_StateReasonCode();
    public void set_StateReasonCode(StateReasonCode value);
    internal bool IsSetStateReasonCode();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfigResponse get_TracingConfig();
    public void set_TracingConfig(TracingConfigResponse value);
    internal bool IsSetTracingConfig();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.FunctionEventInvokeConfig : object {
    private DestinationConfig _destinationConfig;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private Nullable`1<int> _maximumEventAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    public DestinationConfig DestinationConfig { get; public set; }
    public string FunctionArn { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumEventAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public Nullable`1<int> get_MaximumEventAgeInSeconds();
    public void set_MaximumEventAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumEventAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
}
public class Amazon.Lambda.Model.FunctionUrlConfig : object {
    private FunctionUrlAuthType _authType;
    private Cors _cors;
    private string _creationTime;
    private string _functionArn;
    private string _functionUrl;
    private InvokeMode _invokeMode;
    private string _lastModifiedTime;
    [AWSPropertyAttribute]
public FunctionUrlAuthType AuthType { get; public set; }
    public Cors Cors { get; public set; }
    [AWSPropertyAttribute]
public string CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionUrl { get; public set; }
    public InvokeMode InvokeMode { get; public set; }
    [AWSPropertyAttribute]
public string LastModifiedTime { get; public set; }
    public FunctionUrlAuthType get_AuthType();
    public void set_AuthType(FunctionUrlAuthType value);
    internal bool IsSetAuthType();
    public Cors get_Cors();
    public void set_Cors(Cors value);
    internal bool IsSetCors();
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionUrl();
    public void set_FunctionUrl(string value);
    internal bool IsSetFunctionUrl();
    public InvokeMode get_InvokeMode();
    public void set_InvokeMode(InvokeMode value);
    internal bool IsSetInvokeMode();
    public string get_LastModifiedTime();
    public void set_LastModifiedTime(string value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.Lambda.Model.GetAccountSettingsRequest : AmazonLambdaRequest {
}
public class Amazon.Lambda.Model.GetAccountSettingsResponse : AmazonWebServiceResponse {
    private AccountLimit _accountLimit;
    private AccountUsage _accountUsage;
    public AccountLimit AccountLimit { get; public set; }
    public AccountUsage AccountUsage { get; public set; }
    public AccountLimit get_AccountLimit();
    public void set_AccountLimit(AccountLimit value);
    internal bool IsSetAccountLimit();
    public AccountUsage get_AccountUsage();
    public void set_AccountUsage(AccountUsage value);
    internal bool IsSetAccountUsage();
}
public class Amazon.Lambda.Model.GetAliasRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _name;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.GetAliasResponse : AmazonWebServiceResponse {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    private string _revisionId;
    private AliasRoutingConfiguration _routingConfig;
    public string AliasArn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FunctionVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RevisionId { get; public set; }
    public AliasRoutingConfiguration RoutingConfig { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public AliasRoutingConfiguration get_RoutingConfig();
    public void set_RoutingConfig(AliasRoutingConfiguration value);
    internal bool IsSetRoutingConfig();
}
public class Amazon.Lambda.Model.GetCodeSigningConfigRequest : AmazonLambdaRequest {
    private string _codeSigningConfigArn;
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
}
public class Amazon.Lambda.Model.GetCodeSigningConfigResponse : AmazonWebServiceResponse {
    private CodeSigningConfig _codeSigningConfig;
    [AWSPropertyAttribute]
public CodeSigningConfig CodeSigningConfig { get; public set; }
    public CodeSigningConfig get_CodeSigningConfig();
    public void set_CodeSigningConfig(CodeSigningConfig value);
    internal bool IsSetCodeSigningConfig();
}
public class Amazon.Lambda.Model.GetEventSourceMappingRequest : AmazonLambdaRequest {
    private string _uuid;
    [AWSPropertyAttribute]
public string UUID { get; public set; }
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.GetEventSourceMappingResponse : AmazonWebServiceResponse {
    private AmazonManagedKafkaEventSourceConfig _amazonManagedKafkaEventSourceConfig;
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _bisectBatchOnFunctionError;
    private DestinationConfig _destinationConfig;
    private DocumentDBEventSourceConfig _documentDBEventSourceConfig;
    private string _eventSourceArn;
    private FilterCriteria _filterCriteria;
    private string _functionArn;
    private List`1<string> _functionResponseTypes;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private Nullable`1<int> _maximumBatchingWindowInSeconds;
    private Nullable`1<int> _maximumRecordAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private Nullable`1<int> _parallelizationFactor;
    private List`1<string> _queues;
    private ScalingConfig _scalingConfig;
    private SelfManagedEventSource _selfManagedEventSource;
    private SelfManagedKafkaEventSourceConfig _selfManagedKafkaEventSourceConfig;
    private List`1<SourceAccessConfiguration> _sourceAccessConfigurations;
    private EventSourcePosition _startingPosition;
    private Nullable`1<DateTime> _startingPositionTimestamp;
    private string _state;
    private string _stateTransitionReason;
    private List`1<string> _topics;
    private Nullable`1<int> _tumblingWindowInSeconds;
    private string _uuid;
    public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<bool> BisectBatchOnFunctionError { get; public set; }
    public DestinationConfig DestinationConfig { get; public set; }
    public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; public set; }
    public string EventSourceArn { get; public set; }
    public FilterCriteria FilterCriteria { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionResponseTypes { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumBatchingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRecordAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ParallelizationFactor { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Queues { get; public set; }
    public ScalingConfig ScalingConfig { get; public set; }
    public SelfManagedEventSource SelfManagedEventSource { get; public set; }
    public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<SourceAccessConfiguration> SourceAccessConfigurations { get; public set; }
    public EventSourcePosition StartingPosition { get; public set; }
    public Nullable`1<DateTime> StartingPositionTimestamp { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Topics { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TumblingWindowInSeconds { get; public set; }
    public string UUID { get; public set; }
    public AmazonManagedKafkaEventSourceConfig get_AmazonManagedKafkaEventSourceConfig();
    public void set_AmazonManagedKafkaEventSourceConfig(AmazonManagedKafkaEventSourceConfig value);
    internal bool IsSetAmazonManagedKafkaEventSourceConfig();
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<bool> get_BisectBatchOnFunctionError();
    public void set_BisectBatchOnFunctionError(Nullable`1<bool> value);
    internal bool IsSetBisectBatchOnFunctionError();
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public DocumentDBEventSourceConfig get_DocumentDBEventSourceConfig();
    public void set_DocumentDBEventSourceConfig(DocumentDBEventSourceConfig value);
    internal bool IsSetDocumentDBEventSourceConfig();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public FilterCriteria get_FilterCriteria();
    public void set_FilterCriteria(FilterCriteria value);
    internal bool IsSetFilterCriteria();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public List`1<string> get_FunctionResponseTypes();
    public void set_FunctionResponseTypes(List`1<string> value);
    internal bool IsSetFunctionResponseTypes();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public Nullable`1<int> get_MaximumBatchingWindowInSeconds();
    public void set_MaximumBatchingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumBatchingWindowInSeconds();
    public Nullable`1<int> get_MaximumRecordAgeInSeconds();
    public void set_MaximumRecordAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumRecordAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public Nullable`1<int> get_ParallelizationFactor();
    public void set_ParallelizationFactor(Nullable`1<int> value);
    internal bool IsSetParallelizationFactor();
    public List`1<string> get_Queues();
    public void set_Queues(List`1<string> value);
    internal bool IsSetQueues();
    public ScalingConfig get_ScalingConfig();
    public void set_ScalingConfig(ScalingConfig value);
    internal bool IsSetScalingConfig();
    public SelfManagedEventSource get_SelfManagedEventSource();
    public void set_SelfManagedEventSource(SelfManagedEventSource value);
    internal bool IsSetSelfManagedEventSource();
    public SelfManagedKafkaEventSourceConfig get_SelfManagedKafkaEventSourceConfig();
    public void set_SelfManagedKafkaEventSourceConfig(SelfManagedKafkaEventSourceConfig value);
    internal bool IsSetSelfManagedKafkaEventSourceConfig();
    public List`1<SourceAccessConfiguration> get_SourceAccessConfigurations();
    public void set_SourceAccessConfigurations(List`1<SourceAccessConfiguration> value);
    internal bool IsSetSourceAccessConfigurations();
    public EventSourcePosition get_StartingPosition();
    public void set_StartingPosition(EventSourcePosition value);
    internal bool IsSetStartingPosition();
    public Nullable`1<DateTime> get_StartingPositionTimestamp();
    public void set_StartingPositionTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingPositionTimestamp();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public List`1<string> get_Topics();
    public void set_Topics(List`1<string> value);
    internal bool IsSetTopics();
    public Nullable`1<int> get_TumblingWindowInSeconds();
    public void set_TumblingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetTumblingWindowInSeconds();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.GetFunctionCodeSigningConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.GetFunctionCodeSigningConfigResponse : AmazonWebServiceResponse {
    private string _codeSigningConfigArn;
    private string _functionName;
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.GetFunctionConcurrencyRequest : AmazonLambdaRequest {
    private string _functionName;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.GetFunctionConcurrencyResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _reservedConcurrentExecutions;
    [AWSPropertyAttribute]
public Nullable`1<int> ReservedConcurrentExecutions { get; public set; }
    public Nullable`1<int> get_ReservedConcurrentExecutions();
    public void set_ReservedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetReservedConcurrentExecutions();
}
public class Amazon.Lambda.Model.GetFunctionConfigurationRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetFunctionConfigurationResponse : AmazonWebServiceResponse {
    private List`1<string> _architectures;
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private EnvironmentResponse _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private ImageConfigResponse _imageConfigResponse;
    private string _kmsKeyArn;
    private string _lastModified;
    private LastUpdateStatus _lastUpdateStatus;
    private string _lastUpdateStatusReason;
    private LastUpdateStatusReasonCode _lastUpdateStatusReasonCode;
    private List`1<Layer> _layers;
    private LoggingConfig _loggingConfig;
    private string _masterArn;
    private Nullable`1<int> _memorySize;
    private PackageType _packageType;
    private string _revisionId;
    private string _role;
    private Runtime _runtime;
    private RuntimeVersionConfig _runtimeVersionConfig;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    private SnapStartResponse _snapStart;
    private State _state;
    private string _stateReason;
    private StateReasonCode _stateReasonCode;
    private Nullable`1<int> _timeout;
    private TracingConfigResponse _tracingConfig;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    public string CodeSha256 { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EnvironmentResponse Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfigResponse ImageConfigResponse { get; public set; }
    public string KMSKeyArn { get; public set; }
    public string LastModified { get; public set; }
    public LastUpdateStatus LastUpdateStatus { get; public set; }
    public string LastUpdateStatusReason { get; public set; }
    public LastUpdateStatusReasonCode LastUpdateStatusReasonCode { get; public set; }
    public List`1<Layer> Layers { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    public string MasterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public PackageType PackageType { get; public set; }
    public string RevisionId { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public RuntimeVersionConfig RuntimeVersionConfig { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public SnapStartResponse SnapStart { get; public set; }
    public State State { get; public set; }
    public string StateReason { get; public set; }
    public StateReasonCode StateReasonCode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfigResponse TracingConfig { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EnvironmentResponse get_Environment();
    public void set_Environment(EnvironmentResponse value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfigResponse get_ImageConfigResponse();
    public void set_ImageConfigResponse(ImageConfigResponse value);
    internal bool IsSetImageConfigResponse();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public LastUpdateStatus get_LastUpdateStatus();
    public void set_LastUpdateStatus(LastUpdateStatus value);
    internal bool IsSetLastUpdateStatus();
    public string get_LastUpdateStatusReason();
    public void set_LastUpdateStatusReason(string value);
    internal bool IsSetLastUpdateStatusReason();
    public LastUpdateStatusReasonCode get_LastUpdateStatusReasonCode();
    public void set_LastUpdateStatusReasonCode(LastUpdateStatusReasonCode value);
    internal bool IsSetLastUpdateStatusReasonCode();
    public List`1<Layer> get_Layers();
    public void set_Layers(List`1<Layer> value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public string get_MasterArn();
    public void set_MasterArn(string value);
    internal bool IsSetMasterArn();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public PackageType get_PackageType();
    public void set_PackageType(PackageType value);
    internal bool IsSetPackageType();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public RuntimeVersionConfig get_RuntimeVersionConfig();
    public void set_RuntimeVersionConfig(RuntimeVersionConfig value);
    internal bool IsSetRuntimeVersionConfig();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
    public SnapStartResponse get_SnapStart();
    public void set_SnapStart(SnapStartResponse value);
    internal bool IsSetSnapStart();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public StateReasonCode get_StateReasonCode();
    public void set_StateReasonCode(StateReasonCode value);
    internal bool IsSetStateReasonCode();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfigResponse get_TracingConfig();
    public void set_TracingConfig(TracingConfigResponse value);
    internal bool IsSetTracingConfig();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.GetFunctionEventInvokeConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetFunctionEventInvokeConfigResponse : AmazonWebServiceResponse {
    private DestinationConfig _destinationConfig;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private Nullable`1<int> _maximumEventAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    public DestinationConfig DestinationConfig { get; public set; }
    public string FunctionArn { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumEventAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public Nullable`1<int> get_MaximumEventAgeInSeconds();
    public void set_MaximumEventAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumEventAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
}
public class Amazon.Lambda.Model.GetFunctionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetFunctionResponse : AmazonWebServiceResponse {
    private FunctionCodeLocation _code;
    private Concurrency _concurrency;
    private FunctionConfiguration _configuration;
    private Dictionary`2<string, string> _tags;
    public FunctionCodeLocation Code { get; public set; }
    public Concurrency Concurrency { get; public set; }
    public FunctionConfiguration Configuration { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public FunctionCodeLocation get_Code();
    public void set_Code(FunctionCodeLocation value);
    internal bool IsSetCode();
    public Concurrency get_Concurrency();
    public void set_Concurrency(Concurrency value);
    internal bool IsSetConcurrency();
    public FunctionConfiguration get_Configuration();
    public void set_Configuration(FunctionConfiguration value);
    internal bool IsSetConfiguration();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Lambda.Model.GetFunctionUrlConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetFunctionUrlConfigResponse : AmazonWebServiceResponse {
    private FunctionUrlAuthType _authType;
    private Cors _cors;
    private string _creationTime;
    private string _functionArn;
    private string _functionUrl;
    private InvokeMode _invokeMode;
    private string _lastModifiedTime;
    [AWSPropertyAttribute]
public FunctionUrlAuthType AuthType { get; public set; }
    public Cors Cors { get; public set; }
    [AWSPropertyAttribute]
public string CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionUrl { get; public set; }
    public InvokeMode InvokeMode { get; public set; }
    [AWSPropertyAttribute]
public string LastModifiedTime { get; public set; }
    public FunctionUrlAuthType get_AuthType();
    public void set_AuthType(FunctionUrlAuthType value);
    internal bool IsSetAuthType();
    public Cors get_Cors();
    public void set_Cors(Cors value);
    internal bool IsSetCors();
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionUrl();
    public void set_FunctionUrl(string value);
    internal bool IsSetFunctionUrl();
    public InvokeMode get_InvokeMode();
    public void set_InvokeMode(InvokeMode value);
    internal bool IsSetInvokeMode();
    public string get_LastModifiedTime();
    public void set_LastModifiedTime(string value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.Lambda.Model.GetLayerVersionByArnRequest : AmazonLambdaRequest {
    private string _arn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.Lambda.Model.GetLayerVersionByArnResponse : AmazonWebServiceResponse {
    private List`1<string> _compatibleArchitectures;
    private List`1<string> _compatibleRuntimes;
    private LayerVersionContentOutput _content;
    private string _createdDate;
    private string _description;
    private string _layerArn;
    private string _layerVersionArn;
    private string _licenseInfo;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public List`1<string> CompatibleArchitectures { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CompatibleRuntimes { get; public set; }
    public LayerVersionContentOutput Content { get; public set; }
    public string CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string LayerArn { get; public set; }
    [AWSPropertyAttribute]
public string LayerVersionArn { get; public set; }
    [AWSPropertyAttribute]
public string LicenseInfo { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public List`1<string> get_CompatibleArchitectures();
    public void set_CompatibleArchitectures(List`1<string> value);
    internal bool IsSetCompatibleArchitectures();
    public List`1<string> get_CompatibleRuntimes();
    public void set_CompatibleRuntimes(List`1<string> value);
    internal bool IsSetCompatibleRuntimes();
    public LayerVersionContentOutput get_Content();
    public void set_Content(LayerVersionContentOutput value);
    internal bool IsSetContent();
    public string get_CreatedDate();
    public void set_CreatedDate(string value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LayerArn();
    public void set_LayerArn(string value);
    internal bool IsSetLayerArn();
    public string get_LayerVersionArn();
    public void set_LayerVersionArn(string value);
    internal bool IsSetLayerVersionArn();
    public string get_LicenseInfo();
    public void set_LicenseInfo(string value);
    internal bool IsSetLicenseInfo();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Lambda.Model.GetLayerVersionPolicyRequest : AmazonLambdaRequest {
    private string _layerName;
    private Nullable`1<long> _versionNumber;
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Lambda.Model.GetLayerVersionPolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    private string _revisionId;
    public string Policy { get; public set; }
    public string RevisionId { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
}
public class Amazon.Lambda.Model.GetLayerVersionRequest : AmazonLambdaRequest {
    private string _layerName;
    private Nullable`1<long> _versionNumber;
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Lambda.Model.GetLayerVersionResponse : AmazonWebServiceResponse {
    private List`1<string> _compatibleArchitectures;
    private List`1<string> _compatibleRuntimes;
    private LayerVersionContentOutput _content;
    private string _createdDate;
    private string _description;
    private string _layerArn;
    private string _layerVersionArn;
    private string _licenseInfo;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public List`1<string> CompatibleArchitectures { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CompatibleRuntimes { get; public set; }
    public LayerVersionContentOutput Content { get; public set; }
    public string CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string LayerArn { get; public set; }
    [AWSPropertyAttribute]
public string LayerVersionArn { get; public set; }
    [AWSPropertyAttribute]
public string LicenseInfo { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public List`1<string> get_CompatibleArchitectures();
    public void set_CompatibleArchitectures(List`1<string> value);
    internal bool IsSetCompatibleArchitectures();
    public List`1<string> get_CompatibleRuntimes();
    public void set_CompatibleRuntimes(List`1<string> value);
    internal bool IsSetCompatibleRuntimes();
    public LayerVersionContentOutput get_Content();
    public void set_Content(LayerVersionContentOutput value);
    internal bool IsSetContent();
    public string get_CreatedDate();
    public void set_CreatedDate(string value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LayerArn();
    public void set_LayerArn(string value);
    internal bool IsSetLayerArn();
    public string get_LayerVersionArn();
    public void set_LayerVersionArn(string value);
    internal bool IsSetLayerVersionArn();
    public string get_LicenseInfo();
    public void set_LicenseInfo(string value);
    internal bool IsSetLicenseInfo();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Lambda.Model.GetPolicyRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetPolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    private string _revisionId;
    public string Policy { get; public set; }
    public string RevisionId { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
}
public class Amazon.Lambda.Model.GetProvisionedConcurrencyConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetProvisionedConcurrencyConfigResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _allocatedProvisionedConcurrentExecutions;
    private Nullable`1<int> _availableProvisionedConcurrentExecutions;
    private string _lastModified;
    private Nullable`1<int> _requestedProvisionedConcurrentExecutions;
    private ProvisionedConcurrencyStatusEnum _status;
    private string _statusReason;
    [AWSPropertyAttribute]
public Nullable`1<int> AllocatedProvisionedConcurrentExecutions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AvailableProvisionedConcurrentExecutions { get; public set; }
    public string LastModified { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RequestedProvisionedConcurrentExecutions { get; public set; }
    public ProvisionedConcurrencyStatusEnum Status { get; public set; }
    public string StatusReason { get; public set; }
    public Nullable`1<int> get_AllocatedProvisionedConcurrentExecutions();
    public void set_AllocatedProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetAllocatedProvisionedConcurrentExecutions();
    public Nullable`1<int> get_AvailableProvisionedConcurrentExecutions();
    public void set_AvailableProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetAvailableProvisionedConcurrentExecutions();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public Nullable`1<int> get_RequestedProvisionedConcurrentExecutions();
    public void set_RequestedProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetRequestedProvisionedConcurrentExecutions();
    public ProvisionedConcurrencyStatusEnum get_Status();
    public void set_Status(ProvisionedConcurrencyStatusEnum value);
    internal bool IsSetStatus();
    public string get_StatusReason();
    public void set_StatusReason(string value);
    internal bool IsSetStatusReason();
}
public class Amazon.Lambda.Model.GetRuntimeManagementConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetRuntimeManagementConfigResponse : AmazonWebServiceResponse {
    private string _functionArn;
    private string _runtimeVersionArn;
    private UpdateRuntimeOn _updateRuntimeOn;
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string RuntimeVersionArn { get; public set; }
    public UpdateRuntimeOn UpdateRuntimeOn { get; public set; }
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_RuntimeVersionArn();
    public void set_RuntimeVersionArn(string value);
    internal bool IsSetRuntimeVersionArn();
    public UpdateRuntimeOn get_UpdateRuntimeOn();
    public void set_UpdateRuntimeOn(UpdateRuntimeOn value);
    internal bool IsSetUpdateRuntimeOn();
}
public interface Amazon.Lambda.Model.ILambdaPaginatorFactory {
    public abstract virtual IListAliasesPaginator ListAliases(ListAliasesRequest request);
    public abstract virtual IListCodeSigningConfigsPaginator ListCodeSigningConfigs(ListCodeSigningConfigsRequest request);
    public abstract virtual IListEventSourceMappingsPaginator ListEventSourceMappings(ListEventSourceMappingsRequest request);
    public abstract virtual IListFunctionEventInvokeConfigsPaginator ListFunctionEventInvokeConfigs(ListFunctionEventInvokeConfigsRequest request);
    public abstract virtual IListFunctionsPaginator ListFunctions(ListFunctionsRequest request);
    public abstract virtual IListFunctionsByCodeSigningConfigPaginator ListFunctionsByCodeSigningConfig(ListFunctionsByCodeSigningConfigRequest request);
    public abstract virtual IListFunctionUrlConfigsPaginator ListFunctionUrlConfigs(ListFunctionUrlConfigsRequest request);
    public abstract virtual IListLayersPaginator ListLayers(ListLayersRequest request);
    public abstract virtual IListLayerVersionsPaginator ListLayerVersions(ListLayerVersionsRequest request);
    public abstract virtual IListProvisionedConcurrencyConfigsPaginator ListProvisionedConcurrencyConfigs(ListProvisionedConcurrencyConfigsRequest request);
    public abstract virtual IListVersionsByFunctionPaginator ListVersionsByFunction(ListVersionsByFunctionRequest request);
}
public interface Amazon.Lambda.Model.IListAliasesPaginator {
    public IPaginatedEnumerable`1<ListAliasesResponse> Responses { get; }
    public IPaginatedEnumerable`1<AliasConfiguration> Aliases { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAliasesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AliasConfiguration> get_Aliases();
}
public interface Amazon.Lambda.Model.IListCodeSigningConfigsPaginator {
    public IPaginatedEnumerable`1<ListCodeSigningConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CodeSigningConfig> CodeSigningConfigs { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCodeSigningConfigsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CodeSigningConfig> get_CodeSigningConfigs();
}
public interface Amazon.Lambda.Model.IListEventSourceMappingsPaginator {
    public IPaginatedEnumerable`1<ListEventSourceMappingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<EventSourceMappingConfiguration> EventSourceMappings { get; }
    public abstract virtual IPaginatedEnumerable`1<ListEventSourceMappingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<EventSourceMappingConfiguration> get_EventSourceMappings();
}
public interface Amazon.Lambda.Model.IListFunctionEventInvokeConfigsPaginator {
    public IPaginatedEnumerable`1<ListFunctionEventInvokeConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionEventInvokeConfig> FunctionEventInvokeConfigs { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFunctionEventInvokeConfigsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FunctionEventInvokeConfig> get_FunctionEventInvokeConfigs();
}
public interface Amazon.Lambda.Model.IListFunctionsByCodeSigningConfigPaginator {
    public IPaginatedEnumerable`1<ListFunctionsByCodeSigningConfigResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> FunctionArns { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFunctionsByCodeSigningConfigResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_FunctionArns();
}
public interface Amazon.Lambda.Model.IListFunctionsPaginator {
    public IPaginatedEnumerable`1<ListFunctionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionConfiguration> Functions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFunctionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FunctionConfiguration> get_Functions();
}
public interface Amazon.Lambda.Model.IListFunctionUrlConfigsPaginator {
    public IPaginatedEnumerable`1<ListFunctionUrlConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionUrlConfig> FunctionUrlConfigs { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFunctionUrlConfigsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FunctionUrlConfig> get_FunctionUrlConfigs();
}
public interface Amazon.Lambda.Model.IListLayersPaginator {
    public IPaginatedEnumerable`1<ListLayersResponse> Responses { get; }
    public IPaginatedEnumerable`1<LayersListItem> Layers { get; }
    public abstract virtual IPaginatedEnumerable`1<ListLayersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LayersListItem> get_Layers();
}
public interface Amazon.Lambda.Model.IListLayerVersionsPaginator {
    public IPaginatedEnumerable`1<ListLayerVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LayerVersionsListItem> LayerVersions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListLayerVersionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LayerVersionsListItem> get_LayerVersions();
}
public interface Amazon.Lambda.Model.IListProvisionedConcurrencyConfigsPaginator {
    public IPaginatedEnumerable`1<ListProvisionedConcurrencyConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ProvisionedConcurrencyConfigListItem> ProvisionedConcurrencyConfigs { get; }
    public abstract virtual IPaginatedEnumerable`1<ListProvisionedConcurrencyConfigsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ProvisionedConcurrencyConfigListItem> get_ProvisionedConcurrencyConfigs();
}
public interface Amazon.Lambda.Model.IListVersionsByFunctionPaginator {
    public IPaginatedEnumerable`1<ListVersionsByFunctionResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionConfiguration> Versions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListVersionsByFunctionResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FunctionConfiguration> get_Versions();
}
public class Amazon.Lambda.Model.ImageConfig : object {
    private List`1<string> _command;
    private List`1<string> _entryPoint;
    private string _workingDirectory;
    [AWSPropertyAttribute]
public List`1<string> Command { get; public set; }
    public bool IsCommandSet { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> EntryPoint { get; public set; }
    public bool IsEntryPointSet { get; public set; }
    [AWSPropertyAttribute]
public string WorkingDirectory { get; public set; }
    public List`1<string> get_Command();
    public void set_Command(List`1<string> value);
    public bool get_IsCommandSet();
    public void set_IsCommandSet(bool value);
    internal bool IsSetCommand();
    public List`1<string> get_EntryPoint();
    public void set_EntryPoint(List`1<string> value);
    public bool get_IsEntryPointSet();
    public void set_IsEntryPointSet(bool value);
    internal bool IsSetEntryPoint();
    public string get_WorkingDirectory();
    public void set_WorkingDirectory(string value);
    internal bool IsSetWorkingDirectory();
}
public class Amazon.Lambda.Model.ImageConfigError : object {
    private string _errorCode;
    private string _message;
    public string ErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.Lambda.Model.ImageConfigResponse : object {
    private ImageConfigError _error;
    private ImageConfig _imageConfig;
    public ImageConfigError Error { get; public set; }
    public ImageConfig ImageConfig { get; public set; }
    public ImageConfigError get_Error();
    public void set_Error(ImageConfigError value);
    internal bool IsSetError();
    public ImageConfig get_ImageConfig();
    public void set_ImageConfig(ImageConfig value);
    internal bool IsSetImageConfig();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AccountLimitUnmarshaller : object {
    private static AccountLimitUnmarshaller _instance;
    public static AccountLimitUnmarshaller Instance { get; }
    private static AccountLimitUnmarshaller();
    private sealed virtual override AccountLimit Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.AccountLimit,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountLimit Unmarshall(JsonUnmarshallerContext context);
    public static AccountLimitUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AccountUsageUnmarshaller : object {
    private static AccountUsageUnmarshaller _instance;
    public static AccountUsageUnmarshaller Instance { get; }
    private static AccountUsageUnmarshaller();
    private sealed virtual override AccountUsage Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.AccountUsage,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountUsage Unmarshall(JsonUnmarshallerContext context);
    public static AccountUsageUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AddLayerVersionPermissionRequestMarshaller : object {
    private static AddLayerVersionPermissionRequestMarshaller _instance;
    public static AddLayerVersionPermissionRequestMarshaller Instance { get; }
    private static AddLayerVersionPermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddLayerVersionPermissionRequest publicRequest);
    internal static AddLayerVersionPermissionRequestMarshaller GetInstance();
    public static AddLayerVersionPermissionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AddLayerVersionPermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddLayerVersionPermissionResponseUnmarshaller _instance;
    public static AddLayerVersionPermissionResponseUnmarshaller Instance { get; }
    private static AddLayerVersionPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddLayerVersionPermissionResponseUnmarshaller GetInstance();
    public static AddLayerVersionPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller : object {
    private static AddPermissionRequestMarshaller _instance;
    public static AddPermissionRequestMarshaller Instance { get; }
    private static AddPermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddPermissionRequest publicRequest);
    internal static AddPermissionRequestMarshaller GetInstance();
    public static AddPermissionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddPermissionResponseUnmarshaller _instance;
    public static AddPermissionResponseUnmarshaller Instance { get; }
    private static AddPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddPermissionResponseUnmarshaller GetInstance();
    public static AddPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AliasConfigurationUnmarshaller : object {
    private static AliasConfigurationUnmarshaller _instance;
    public static AliasConfigurationUnmarshaller Instance { get; }
    private static AliasConfigurationUnmarshaller();
    private sealed virtual override AliasConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.AliasConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AliasConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AliasConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AliasRoutingConfigurationMarshaller : object {
    public static AliasRoutingConfigurationMarshaller Instance;
    private static AliasRoutingConfigurationMarshaller();
    public sealed virtual void Marshall(AliasRoutingConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AliasRoutingConfigurationUnmarshaller : object {
    private static AliasRoutingConfigurationUnmarshaller _instance;
    public static AliasRoutingConfigurationUnmarshaller Instance { get; }
    private static AliasRoutingConfigurationUnmarshaller();
    private sealed virtual override AliasRoutingConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.AliasRoutingConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AliasRoutingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AliasRoutingConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AllowedPublishersMarshaller : object {
    public static AllowedPublishersMarshaller Instance;
    private static AllowedPublishersMarshaller();
    public sealed virtual void Marshall(AllowedPublishers requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AllowedPublishersUnmarshaller : object {
    private static AllowedPublishersUnmarshaller _instance;
    public static AllowedPublishersUnmarshaller Instance { get; }
    private static AllowedPublishersUnmarshaller();
    private sealed virtual override AllowedPublishers Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.AllowedPublishers,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AllowedPublishers Unmarshall(JsonUnmarshallerContext context);
    public static AllowedPublishersUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AmazonManagedKafkaEventSourceConfigMarshaller : object {
    public static AmazonManagedKafkaEventSourceConfigMarshaller Instance;
    private static AmazonManagedKafkaEventSourceConfigMarshaller();
    public sealed virtual void Marshall(AmazonManagedKafkaEventSourceConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AmazonManagedKafkaEventSourceConfigUnmarshaller : object {
    private static AmazonManagedKafkaEventSourceConfigUnmarshaller _instance;
    public static AmazonManagedKafkaEventSourceConfigUnmarshaller Instance { get; }
    private static AmazonManagedKafkaEventSourceConfigUnmarshaller();
    private sealed virtual override AmazonManagedKafkaEventSourceConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.AmazonManagedKafkaEventSourceConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AmazonManagedKafkaEventSourceConfig Unmarshall(JsonUnmarshallerContext context);
    public static AmazonManagedKafkaEventSourceConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CodeSigningConfigNotFoundExceptionUnmarshaller : object {
    private static CodeSigningConfigNotFoundExceptionUnmarshaller _instance;
    public static CodeSigningConfigNotFoundExceptionUnmarshaller Instance { get; }
    private static CodeSigningConfigNotFoundExceptionUnmarshaller();
    public sealed virtual CodeSigningConfigNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CodeSigningConfigNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CodeSigningConfigNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CodeSigningConfigUnmarshaller : object {
    private static CodeSigningConfigUnmarshaller _instance;
    public static CodeSigningConfigUnmarshaller Instance { get; }
    private static CodeSigningConfigUnmarshaller();
    private sealed virtual override CodeSigningConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.CodeSigningConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CodeSigningConfig Unmarshall(JsonUnmarshallerContext context);
    public static CodeSigningConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CodeSigningPoliciesMarshaller : object {
    public static CodeSigningPoliciesMarshaller Instance;
    private static CodeSigningPoliciesMarshaller();
    public sealed virtual void Marshall(CodeSigningPolicies requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CodeSigningPoliciesUnmarshaller : object {
    private static CodeSigningPoliciesUnmarshaller _instance;
    public static CodeSigningPoliciesUnmarshaller Instance { get; }
    private static CodeSigningPoliciesUnmarshaller();
    private sealed virtual override CodeSigningPolicies Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.CodeSigningPolicies,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CodeSigningPolicies Unmarshall(JsonUnmarshallerContext context);
    public static CodeSigningPoliciesUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CodeStorageExceededExceptionUnmarshaller : object {
    private static CodeStorageExceededExceptionUnmarshaller _instance;
    public static CodeStorageExceededExceptionUnmarshaller Instance { get; }
    private static CodeStorageExceededExceptionUnmarshaller();
    public sealed virtual CodeStorageExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CodeStorageExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CodeStorageExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CodeVerificationFailedExceptionUnmarshaller : object {
    private static CodeVerificationFailedExceptionUnmarshaller _instance;
    public static CodeVerificationFailedExceptionUnmarshaller Instance { get; }
    private static CodeVerificationFailedExceptionUnmarshaller();
    public sealed virtual CodeVerificationFailedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CodeVerificationFailedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CodeVerificationFailedExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ConcurrencyUnmarshaller : object {
    private static ConcurrencyUnmarshaller _instance;
    public static ConcurrencyUnmarshaller Instance { get; }
    private static ConcurrencyUnmarshaller();
    private sealed virtual override Concurrency Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.Concurrency,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Concurrency Unmarshall(JsonUnmarshallerContext context);
    public static ConcurrencyUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CorsMarshaller : object {
    public static CorsMarshaller Instance;
    private static CorsMarshaller();
    public sealed virtual void Marshall(Cors requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CorsUnmarshaller : object {
    private static CorsUnmarshaller _instance;
    public static CorsUnmarshaller Instance { get; }
    private static CorsUnmarshaller();
    private sealed virtual override Cors Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.Cors,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Cors Unmarshall(JsonUnmarshallerContext context);
    public static CorsUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller : object {
    private static CreateAliasRequestMarshaller _instance;
    public static CreateAliasRequestMarshaller Instance { get; }
    private static CreateAliasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAliasRequest publicRequest);
    internal static CreateAliasRequestMarshaller GetInstance();
    public static CreateAliasRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAliasResponseUnmarshaller _instance;
    public static CreateAliasResponseUnmarshaller Instance { get; }
    private static CreateAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAliasResponseUnmarshaller GetInstance();
    public static CreateAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateCodeSigningConfigRequestMarshaller : object {
    private static CreateCodeSigningConfigRequestMarshaller _instance;
    public static CreateCodeSigningConfigRequestMarshaller Instance { get; }
    private static CreateCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCodeSigningConfigRequest publicRequest);
    internal static CreateCodeSigningConfigRequestMarshaller GetInstance();
    public static CreateCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateCodeSigningConfigResponseUnmarshaller _instance;
    public static CreateCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static CreateCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCodeSigningConfigResponseUnmarshaller GetInstance();
    public static CreateCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateEventSourceMappingRequestMarshaller : object {
    private static CreateEventSourceMappingRequestMarshaller _instance;
    public static CreateEventSourceMappingRequestMarshaller Instance { get; }
    private static CreateEventSourceMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateEventSourceMappingRequest publicRequest);
    internal static CreateEventSourceMappingRequestMarshaller GetInstance();
    public static CreateEventSourceMappingRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateEventSourceMappingResponseUnmarshaller _instance;
    public static CreateEventSourceMappingResponseUnmarshaller Instance { get; }
    private static CreateEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateEventSourceMappingResponseUnmarshaller GetInstance();
    public static CreateEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateFunctionRequestMarshaller : object {
    private static CreateFunctionRequestMarshaller _instance;
    public static CreateFunctionRequestMarshaller Instance { get; }
    private static CreateFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFunctionRequest publicRequest);
    internal static CreateFunctionRequestMarshaller GetInstance();
    public static CreateFunctionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateFunctionResponseUnmarshaller _instance;
    public static CreateFunctionResponseUnmarshaller Instance { get; }
    private static CreateFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFunctionResponseUnmarshaller GetInstance();
    public static CreateFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateFunctionUrlConfigRequestMarshaller : object {
    private static CreateFunctionUrlConfigRequestMarshaller _instance;
    public static CreateFunctionUrlConfigRequestMarshaller Instance { get; }
    private static CreateFunctionUrlConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFunctionUrlConfigRequest publicRequest);
    internal static CreateFunctionUrlConfigRequestMarshaller GetInstance();
    public static CreateFunctionUrlConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateFunctionUrlConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateFunctionUrlConfigResponseUnmarshaller _instance;
    public static CreateFunctionUrlConfigResponseUnmarshaller Instance { get; }
    private static CreateFunctionUrlConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFunctionUrlConfigResponseUnmarshaller GetInstance();
    public static CreateFunctionUrlConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeadLetterConfigMarshaller : object {
    public static DeadLetterConfigMarshaller Instance;
    private static DeadLetterConfigMarshaller();
    public sealed virtual void Marshall(DeadLetterConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeadLetterConfigUnmarshaller : object {
    private static DeadLetterConfigUnmarshaller _instance;
    public static DeadLetterConfigUnmarshaller Instance { get; }
    private static DeadLetterConfigUnmarshaller();
    private sealed virtual override DeadLetterConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.DeadLetterConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeadLetterConfig Unmarshall(JsonUnmarshallerContext context);
    public static DeadLetterConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteAliasRequestMarshaller : object {
    private static DeleteAliasRequestMarshaller _instance;
    public static DeleteAliasRequestMarshaller Instance { get; }
    private static DeleteAliasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAliasRequest publicRequest);
    internal static DeleteAliasRequestMarshaller GetInstance();
    public static DeleteAliasRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAliasResponseUnmarshaller _instance;
    public static DeleteAliasResponseUnmarshaller Instance { get; }
    private static DeleteAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAliasResponseUnmarshaller GetInstance();
    public static DeleteAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteCodeSigningConfigRequestMarshaller : object {
    private static DeleteCodeSigningConfigRequestMarshaller _instance;
    public static DeleteCodeSigningConfigRequestMarshaller Instance { get; }
    private static DeleteCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCodeSigningConfigRequest publicRequest);
    internal static DeleteCodeSigningConfigRequestMarshaller GetInstance();
    public static DeleteCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteCodeSigningConfigResponseUnmarshaller _instance;
    public static DeleteCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static DeleteCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCodeSigningConfigResponseUnmarshaller GetInstance();
    public static DeleteCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteEventSourceMappingRequestMarshaller : object {
    private static DeleteEventSourceMappingRequestMarshaller _instance;
    public static DeleteEventSourceMappingRequestMarshaller Instance { get; }
    private static DeleteEventSourceMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEventSourceMappingRequest publicRequest);
    internal static DeleteEventSourceMappingRequestMarshaller GetInstance();
    public static DeleteEventSourceMappingRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteEventSourceMappingResponseUnmarshaller _instance;
    public static DeleteEventSourceMappingResponseUnmarshaller Instance { get; }
    private static DeleteEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEventSourceMappingResponseUnmarshaller GetInstance();
    public static DeleteEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionCodeSigningConfigRequestMarshaller : object {
    private static DeleteFunctionCodeSigningConfigRequestMarshaller _instance;
    public static DeleteFunctionCodeSigningConfigRequestMarshaller Instance { get; }
    private static DeleteFunctionCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFunctionCodeSigningConfigRequest publicRequest);
    internal static DeleteFunctionCodeSigningConfigRequestMarshaller GetInstance();
    public static DeleteFunctionCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFunctionCodeSigningConfigResponseUnmarshaller _instance;
    public static DeleteFunctionCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static DeleteFunctionCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFunctionCodeSigningConfigResponseUnmarshaller GetInstance();
    public static DeleteFunctionCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionConcurrencyRequestMarshaller : object {
    private static DeleteFunctionConcurrencyRequestMarshaller _instance;
    public static DeleteFunctionConcurrencyRequestMarshaller Instance { get; }
    private static DeleteFunctionConcurrencyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFunctionConcurrencyRequest publicRequest);
    internal static DeleteFunctionConcurrencyRequestMarshaller GetInstance();
    public static DeleteFunctionConcurrencyRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionConcurrencyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFunctionConcurrencyResponseUnmarshaller _instance;
    public static DeleteFunctionConcurrencyResponseUnmarshaller Instance { get; }
    private static DeleteFunctionConcurrencyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFunctionConcurrencyResponseUnmarshaller GetInstance();
    public static DeleteFunctionConcurrencyResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionEventInvokeConfigRequestMarshaller : object {
    private static DeleteFunctionEventInvokeConfigRequestMarshaller _instance;
    public static DeleteFunctionEventInvokeConfigRequestMarshaller Instance { get; }
    private static DeleteFunctionEventInvokeConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFunctionEventInvokeConfigRequest publicRequest);
    internal static DeleteFunctionEventInvokeConfigRequestMarshaller GetInstance();
    public static DeleteFunctionEventInvokeConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionEventInvokeConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFunctionEventInvokeConfigResponseUnmarshaller _instance;
    public static DeleteFunctionEventInvokeConfigResponseUnmarshaller Instance { get; }
    private static DeleteFunctionEventInvokeConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFunctionEventInvokeConfigResponseUnmarshaller GetInstance();
    public static DeleteFunctionEventInvokeConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionRequestMarshaller : object {
    private static DeleteFunctionRequestMarshaller _instance;
    public static DeleteFunctionRequestMarshaller Instance { get; }
    private static DeleteFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFunctionRequest publicRequest);
    internal static DeleteFunctionRequestMarshaller GetInstance();
    public static DeleteFunctionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFunctionResponseUnmarshaller _instance;
    public static DeleteFunctionResponseUnmarshaller Instance { get; }
    private static DeleteFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFunctionResponseUnmarshaller GetInstance();
    public static DeleteFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionUrlConfigRequestMarshaller : object {
    private static DeleteFunctionUrlConfigRequestMarshaller _instance;
    public static DeleteFunctionUrlConfigRequestMarshaller Instance { get; }
    private static DeleteFunctionUrlConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFunctionUrlConfigRequest publicRequest);
    internal static DeleteFunctionUrlConfigRequestMarshaller GetInstance();
    public static DeleteFunctionUrlConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionUrlConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFunctionUrlConfigResponseUnmarshaller _instance;
    public static DeleteFunctionUrlConfigResponseUnmarshaller Instance { get; }
    private static DeleteFunctionUrlConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFunctionUrlConfigResponseUnmarshaller GetInstance();
    public static DeleteFunctionUrlConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteLayerVersionRequestMarshaller : object {
    private static DeleteLayerVersionRequestMarshaller _instance;
    public static DeleteLayerVersionRequestMarshaller Instance { get; }
    private static DeleteLayerVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLayerVersionRequest publicRequest);
    internal static DeleteLayerVersionRequestMarshaller GetInstance();
    public static DeleteLayerVersionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteLayerVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteLayerVersionResponseUnmarshaller _instance;
    public static DeleteLayerVersionResponseUnmarshaller Instance { get; }
    private static DeleteLayerVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLayerVersionResponseUnmarshaller GetInstance();
    public static DeleteLayerVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteProvisionedConcurrencyConfigRequestMarshaller : object {
    private static DeleteProvisionedConcurrencyConfigRequestMarshaller _instance;
    public static DeleteProvisionedConcurrencyConfigRequestMarshaller Instance { get; }
    private static DeleteProvisionedConcurrencyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteProvisionedConcurrencyConfigRequest publicRequest);
    internal static DeleteProvisionedConcurrencyConfigRequestMarshaller GetInstance();
    public static DeleteProvisionedConcurrencyConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteProvisionedConcurrencyConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteProvisionedConcurrencyConfigResponseUnmarshaller _instance;
    public static DeleteProvisionedConcurrencyConfigResponseUnmarshaller Instance { get; }
    private static DeleteProvisionedConcurrencyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteProvisionedConcurrencyConfigResponseUnmarshaller GetInstance();
    public static DeleteProvisionedConcurrencyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DestinationConfigMarshaller : object {
    public static DestinationConfigMarshaller Instance;
    private static DestinationConfigMarshaller();
    public sealed virtual void Marshall(DestinationConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DestinationConfigUnmarshaller : object {
    private static DestinationConfigUnmarshaller _instance;
    public static DestinationConfigUnmarshaller Instance { get; }
    private static DestinationConfigUnmarshaller();
    private sealed virtual override DestinationConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.DestinationConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DestinationConfig Unmarshall(JsonUnmarshallerContext context);
    public static DestinationConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DocumentDBEventSourceConfigMarshaller : object {
    public static DocumentDBEventSourceConfigMarshaller Instance;
    private static DocumentDBEventSourceConfigMarshaller();
    public sealed virtual void Marshall(DocumentDBEventSourceConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DocumentDBEventSourceConfigUnmarshaller : object {
    private static DocumentDBEventSourceConfigUnmarshaller _instance;
    public static DocumentDBEventSourceConfigUnmarshaller Instance { get; }
    private static DocumentDBEventSourceConfigUnmarshaller();
    private sealed virtual override DocumentDBEventSourceConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.DocumentDBEventSourceConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentDBEventSourceConfig Unmarshall(JsonUnmarshallerContext context);
    public static DocumentDBEventSourceConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EC2AccessDeniedExceptionUnmarshaller : object {
    private static EC2AccessDeniedExceptionUnmarshaller _instance;
    public static EC2AccessDeniedExceptionUnmarshaller Instance { get; }
    private static EC2AccessDeniedExceptionUnmarshaller();
    public sealed virtual EC2AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EC2AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EC2AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EC2ThrottledExceptionUnmarshaller : object {
    private static EC2ThrottledExceptionUnmarshaller _instance;
    public static EC2ThrottledExceptionUnmarshaller Instance { get; }
    private static EC2ThrottledExceptionUnmarshaller();
    public sealed virtual EC2ThrottledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EC2ThrottledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EC2ThrottledExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EC2UnexpectedExceptionUnmarshaller : object {
    private static EC2UnexpectedExceptionUnmarshaller _instance;
    public static EC2UnexpectedExceptionUnmarshaller Instance { get; }
    private static EC2UnexpectedExceptionUnmarshaller();
    public sealed virtual EC2UnexpectedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EC2UnexpectedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EC2UnexpectedExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EFSIOExceptionUnmarshaller : object {
    private static EFSIOExceptionUnmarshaller _instance;
    public static EFSIOExceptionUnmarshaller Instance { get; }
    private static EFSIOExceptionUnmarshaller();
    public sealed virtual EFSIOException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EFSIOException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EFSIOExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EFSMountConnectivityExceptionUnmarshaller : object {
    private static EFSMountConnectivityExceptionUnmarshaller _instance;
    public static EFSMountConnectivityExceptionUnmarshaller Instance { get; }
    private static EFSMountConnectivityExceptionUnmarshaller();
    public sealed virtual EFSMountConnectivityException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EFSMountConnectivityException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EFSMountConnectivityExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EFSMountFailureExceptionUnmarshaller : object {
    private static EFSMountFailureExceptionUnmarshaller _instance;
    public static EFSMountFailureExceptionUnmarshaller Instance { get; }
    private static EFSMountFailureExceptionUnmarshaller();
    public sealed virtual EFSMountFailureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EFSMountFailureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EFSMountFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EFSMountTimeoutExceptionUnmarshaller : object {
    private static EFSMountTimeoutExceptionUnmarshaller _instance;
    public static EFSMountTimeoutExceptionUnmarshaller Instance { get; }
    private static EFSMountTimeoutExceptionUnmarshaller();
    public sealed virtual EFSMountTimeoutException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EFSMountTimeoutException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EFSMountTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ENILimitReachedExceptionUnmarshaller : object {
    private static ENILimitReachedExceptionUnmarshaller _instance;
    public static ENILimitReachedExceptionUnmarshaller Instance { get; }
    private static ENILimitReachedExceptionUnmarshaller();
    public sealed virtual ENILimitReachedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ENILimitReachedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ENILimitReachedExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EnvironmentErrorUnmarshaller : object {
    private static EnvironmentErrorUnmarshaller _instance;
    public static EnvironmentErrorUnmarshaller Instance { get; }
    private static EnvironmentErrorUnmarshaller();
    private sealed virtual override EnvironmentError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.EnvironmentError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnvironmentError Unmarshall(JsonUnmarshallerContext context);
    public static EnvironmentErrorUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EnvironmentMarshaller : object {
    public static EnvironmentMarshaller Instance;
    private static EnvironmentMarshaller();
    public sealed virtual void Marshall(Environment requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EnvironmentResponseUnmarshaller : object {
    private static EnvironmentResponseUnmarshaller _instance;
    public static EnvironmentResponseUnmarshaller Instance { get; }
    private static EnvironmentResponseUnmarshaller();
    private sealed virtual override EnvironmentResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.EnvironmentResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnvironmentResponse Unmarshall(JsonUnmarshallerContext context);
    public static EnvironmentResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller : object {
    public static EphemeralStorageMarshaller Instance;
    private static EphemeralStorageMarshaller();
    public sealed virtual void Marshall(EphemeralStorage requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller : object {
    private static EphemeralStorageUnmarshaller _instance;
    public static EphemeralStorageUnmarshaller Instance { get; }
    private static EphemeralStorageUnmarshaller();
    private sealed virtual override EphemeralStorage Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.EphemeralStorage,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EphemeralStorage Unmarshall(JsonUnmarshallerContext context);
    public static EphemeralStorageUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EventSourceMappingConfigurationUnmarshaller : object {
    private static EventSourceMappingConfigurationUnmarshaller _instance;
    public static EventSourceMappingConfigurationUnmarshaller Instance { get; }
    private static EventSourceMappingConfigurationUnmarshaller();
    private sealed virtual override EventSourceMappingConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.EventSourceMappingConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventSourceMappingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EventSourceMappingConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FileSystemConfigMarshaller : object {
    public static FileSystemConfigMarshaller Instance;
    private static FileSystemConfigMarshaller();
    public sealed virtual void Marshall(FileSystemConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FileSystemConfigUnmarshaller : object {
    private static FileSystemConfigUnmarshaller _instance;
    public static FileSystemConfigUnmarshaller Instance { get; }
    private static FileSystemConfigUnmarshaller();
    private sealed virtual override FileSystemConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FileSystemConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileSystemConfig Unmarshall(JsonUnmarshallerContext context);
    public static FileSystemConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FilterCriteriaMarshaller : object {
    public static FilterCriteriaMarshaller Instance;
    private static FilterCriteriaMarshaller();
    public sealed virtual void Marshall(FilterCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FilterCriteriaUnmarshaller : object {
    private static FilterCriteriaUnmarshaller _instance;
    public static FilterCriteriaUnmarshaller Instance { get; }
    private static FilterCriteriaUnmarshaller();
    private sealed virtual override FilterCriteria Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FilterCriteria,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FilterCriteria Unmarshall(JsonUnmarshallerContext context);
    public static FilterCriteriaUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FilterMarshaller : object {
    public static FilterMarshaller Instance;
    private static FilterMarshaller();
    public sealed virtual void Marshall(Filter requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FilterUnmarshaller : object {
    private static FilterUnmarshaller _instance;
    public static FilterUnmarshaller Instance { get; }
    private static FilterUnmarshaller();
    private sealed virtual override Filter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.Filter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Filter Unmarshall(JsonUnmarshallerContext context);
    public static FilterUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionCodeLocationUnmarshaller : object {
    private static FunctionCodeLocationUnmarshaller _instance;
    public static FunctionCodeLocationUnmarshaller Instance { get; }
    private static FunctionCodeLocationUnmarshaller();
    private sealed virtual override FunctionCodeLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FunctionCodeLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionCodeLocation Unmarshall(JsonUnmarshallerContext context);
    public static FunctionCodeLocationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionCodeMarshaller : object {
    public static FunctionCodeMarshaller Instance;
    private static FunctionCodeMarshaller();
    public sealed virtual void Marshall(FunctionCode requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionConfigurationUnmarshaller : object {
    private static FunctionConfigurationUnmarshaller _instance;
    public static FunctionConfigurationUnmarshaller Instance { get; }
    private static FunctionConfigurationUnmarshaller();
    private sealed virtual override FunctionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FunctionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static FunctionConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionEventInvokeConfigUnmarshaller : object {
    private static FunctionEventInvokeConfigUnmarshaller _instance;
    public static FunctionEventInvokeConfigUnmarshaller Instance { get; }
    private static FunctionEventInvokeConfigUnmarshaller();
    private sealed virtual override FunctionEventInvokeConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FunctionEventInvokeConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionEventInvokeConfig Unmarshall(JsonUnmarshallerContext context);
    public static FunctionEventInvokeConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionUrlConfigUnmarshaller : object {
    private static FunctionUrlConfigUnmarshaller _instance;
    public static FunctionUrlConfigUnmarshaller Instance { get; }
    private static FunctionUrlConfigUnmarshaller();
    private sealed virtual override FunctionUrlConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FunctionUrlConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionUrlConfig Unmarshall(JsonUnmarshallerContext context);
    public static FunctionUrlConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetAccountSettingsRequestMarshaller : object {
    private static GetAccountSettingsRequestMarshaller _instance;
    public static GetAccountSettingsRequestMarshaller Instance { get; }
    private static GetAccountSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccountSettingsRequest publicRequest);
    internal static GetAccountSettingsRequestMarshaller GetInstance();
    public static GetAccountSettingsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetAccountSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAccountSettingsResponseUnmarshaller _instance;
    public static GetAccountSettingsResponseUnmarshaller Instance { get; }
    private static GetAccountSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccountSettingsResponseUnmarshaller GetInstance();
    public static GetAccountSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetAliasRequestMarshaller : object {
    private static GetAliasRequestMarshaller _instance;
    public static GetAliasRequestMarshaller Instance { get; }
    private static GetAliasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAliasRequest publicRequest);
    internal static GetAliasRequestMarshaller GetInstance();
    public static GetAliasRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAliasResponseUnmarshaller _instance;
    public static GetAliasResponseUnmarshaller Instance { get; }
    private static GetAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAliasResponseUnmarshaller GetInstance();
    public static GetAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetCodeSigningConfigRequestMarshaller : object {
    private static GetCodeSigningConfigRequestMarshaller _instance;
    public static GetCodeSigningConfigRequestMarshaller Instance { get; }
    private static GetCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCodeSigningConfigRequest publicRequest);
    internal static GetCodeSigningConfigRequestMarshaller GetInstance();
    public static GetCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCodeSigningConfigResponseUnmarshaller _instance;
    public static GetCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static GetCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCodeSigningConfigResponseUnmarshaller GetInstance();
    public static GetCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetEventSourceMappingRequestMarshaller : object {
    private static GetEventSourceMappingRequestMarshaller _instance;
    public static GetEventSourceMappingRequestMarshaller Instance { get; }
    private static GetEventSourceMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEventSourceMappingRequest publicRequest);
    internal static GetEventSourceMappingRequestMarshaller GetInstance();
    public static GetEventSourceMappingRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetEventSourceMappingResponseUnmarshaller _instance;
    public static GetEventSourceMappingResponseUnmarshaller Instance { get; }
    private static GetEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEventSourceMappingResponseUnmarshaller GetInstance();
    public static GetEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionCodeSigningConfigRequestMarshaller : object {
    private static GetFunctionCodeSigningConfigRequestMarshaller _instance;
    public static GetFunctionCodeSigningConfigRequestMarshaller Instance { get; }
    private static GetFunctionCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionCodeSigningConfigRequest publicRequest);
    internal static GetFunctionCodeSigningConfigRequestMarshaller GetInstance();
    public static GetFunctionCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionCodeSigningConfigResponseUnmarshaller _instance;
    public static GetFunctionCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static GetFunctionCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionCodeSigningConfigResponseUnmarshaller GetInstance();
    public static GetFunctionCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionConcurrencyRequestMarshaller : object {
    private static GetFunctionConcurrencyRequestMarshaller _instance;
    public static GetFunctionConcurrencyRequestMarshaller Instance { get; }
    private static GetFunctionConcurrencyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionConcurrencyRequest publicRequest);
    internal static GetFunctionConcurrencyRequestMarshaller GetInstance();
    public static GetFunctionConcurrencyRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionConcurrencyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionConcurrencyResponseUnmarshaller _instance;
    public static GetFunctionConcurrencyResponseUnmarshaller Instance { get; }
    private static GetFunctionConcurrencyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionConcurrencyResponseUnmarshaller GetInstance();
    public static GetFunctionConcurrencyResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionConfigurationRequestMarshaller : object {
    private static GetFunctionConfigurationRequestMarshaller _instance;
    public static GetFunctionConfigurationRequestMarshaller Instance { get; }
    private static GetFunctionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionConfigurationRequest publicRequest);
    internal static GetFunctionConfigurationRequestMarshaller GetInstance();
    public static GetFunctionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionConfigurationResponseUnmarshaller _instance;
    public static GetFunctionConfigurationResponseUnmarshaller Instance { get; }
    private static GetFunctionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionConfigurationResponseUnmarshaller GetInstance();
    public static GetFunctionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionEventInvokeConfigRequestMarshaller : object {
    private static GetFunctionEventInvokeConfigRequestMarshaller _instance;
    public static GetFunctionEventInvokeConfigRequestMarshaller Instance { get; }
    private static GetFunctionEventInvokeConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionEventInvokeConfigRequest publicRequest);
    internal static GetFunctionEventInvokeConfigRequestMarshaller GetInstance();
    public static GetFunctionEventInvokeConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionEventInvokeConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionEventInvokeConfigResponseUnmarshaller _instance;
    public static GetFunctionEventInvokeConfigResponseUnmarshaller Instance { get; }
    private static GetFunctionEventInvokeConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionEventInvokeConfigResponseUnmarshaller GetInstance();
    public static GetFunctionEventInvokeConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionRequestMarshaller : object {
    private static GetFunctionRequestMarshaller _instance;
    public static GetFunctionRequestMarshaller Instance { get; }
    private static GetFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionRequest publicRequest);
    internal static GetFunctionRequestMarshaller GetInstance();
    public static GetFunctionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionResponseUnmarshaller _instance;
    public static GetFunctionResponseUnmarshaller Instance { get; }
    private static GetFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionResponseUnmarshaller GetInstance();
    public static GetFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionUrlConfigRequestMarshaller : object {
    private static GetFunctionUrlConfigRequestMarshaller _instance;
    public static GetFunctionUrlConfigRequestMarshaller Instance { get; }
    private static GetFunctionUrlConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionUrlConfigRequest publicRequest);
    internal static GetFunctionUrlConfigRequestMarshaller GetInstance();
    public static GetFunctionUrlConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionUrlConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionUrlConfigResponseUnmarshaller _instance;
    public static GetFunctionUrlConfigResponseUnmarshaller Instance { get; }
    private static GetFunctionUrlConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionUrlConfigResponseUnmarshaller GetInstance();
    public static GetFunctionUrlConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetLayerVersionByArnRequestMarshaller : object {
    private static GetLayerVersionByArnRequestMarshaller _instance;
    public static GetLayerVersionByArnRequestMarshaller Instance { get; }
    private static GetLayerVersionByArnRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLayerVersionByArnRequest publicRequest);
    internal static GetLayerVersionByArnRequestMarshaller GetInstance();
    public static GetLayerVersionByArnRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetLayerVersionByArnResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLayerVersionByArnResponseUnmarshaller _instance;
    public static GetLayerVersionByArnResponseUnmarshaller Instance { get; }
    private static GetLayerVersionByArnResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLayerVersionByArnResponseUnmarshaller GetInstance();
    public static GetLayerVersionByArnResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetLayerVersionPolicyRequestMarshaller : object {
    private static GetLayerVersionPolicyRequestMarshaller _instance;
    public static GetLayerVersionPolicyRequestMarshaller Instance { get; }
    private static GetLayerVersionPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLayerVersionPolicyRequest publicRequest);
    internal static GetLayerVersionPolicyRequestMarshaller GetInstance();
    public static GetLayerVersionPolicyRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetLayerVersionPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLayerVersionPolicyResponseUnmarshaller _instance;
    public static GetLayerVersionPolicyResponseUnmarshaller Instance { get; }
    private static GetLayerVersionPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLayerVersionPolicyResponseUnmarshaller GetInstance();
    public static GetLayerVersionPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetLayerVersionRequestMarshaller : object {
    private static GetLayerVersionRequestMarshaller _instance;
    public static GetLayerVersionRequestMarshaller Instance { get; }
    private static GetLayerVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLayerVersionRequest publicRequest);
    internal static GetLayerVersionRequestMarshaller GetInstance();
    public static GetLayerVersionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetLayerVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLayerVersionResponseUnmarshaller _instance;
    public static GetLayerVersionResponseUnmarshaller Instance { get; }
    private static GetLayerVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLayerVersionResponseUnmarshaller GetInstance();
    public static GetLayerVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller : object {
    private static GetPolicyRequestMarshaller _instance;
    public static GetPolicyRequestMarshaller Instance { get; }
    private static GetPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPolicyRequest publicRequest);
    internal static GetPolicyRequestMarshaller GetInstance();
    public static GetPolicyRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPolicyResponseUnmarshaller _instance;
    public static GetPolicyResponseUnmarshaller Instance { get; }
    private static GetPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPolicyResponseUnmarshaller GetInstance();
    public static GetPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetProvisionedConcurrencyConfigRequestMarshaller : object {
    private static GetProvisionedConcurrencyConfigRequestMarshaller _instance;
    public static GetProvisionedConcurrencyConfigRequestMarshaller Instance { get; }
    private static GetProvisionedConcurrencyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetProvisionedConcurrencyConfigRequest publicRequest);
    internal static GetProvisionedConcurrencyConfigRequestMarshaller GetInstance();
    public static GetProvisionedConcurrencyConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetProvisionedConcurrencyConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetProvisionedConcurrencyConfigResponseUnmarshaller _instance;
    public static GetProvisionedConcurrencyConfigResponseUnmarshaller Instance { get; }
    private static GetProvisionedConcurrencyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetProvisionedConcurrencyConfigResponseUnmarshaller GetInstance();
    public static GetProvisionedConcurrencyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetRuntimeManagementConfigRequestMarshaller : object {
    private static GetRuntimeManagementConfigRequestMarshaller _instance;
    public static GetRuntimeManagementConfigRequestMarshaller Instance { get; }
    private static GetRuntimeManagementConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRuntimeManagementConfigRequest publicRequest);
    internal static GetRuntimeManagementConfigRequestMarshaller GetInstance();
    public static GetRuntimeManagementConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetRuntimeManagementConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRuntimeManagementConfigResponseUnmarshaller _instance;
    public static GetRuntimeManagementConfigResponseUnmarshaller Instance { get; }
    private static GetRuntimeManagementConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRuntimeManagementConfigResponseUnmarshaller GetInstance();
    public static GetRuntimeManagementConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ImageConfigErrorUnmarshaller : object {
    private static ImageConfigErrorUnmarshaller _instance;
    public static ImageConfigErrorUnmarshaller Instance { get; }
    private static ImageConfigErrorUnmarshaller();
    private sealed virtual override ImageConfigError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.ImageConfigError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImageConfigError Unmarshall(JsonUnmarshallerContext context);
    public static ImageConfigErrorUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ImageConfigMarshaller : object {
    public static ImageConfigMarshaller Instance;
    private static ImageConfigMarshaller();
    public sealed virtual void Marshall(ImageConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ImageConfigResponseUnmarshaller : object {
    private static ImageConfigResponseUnmarshaller _instance;
    public static ImageConfigResponseUnmarshaller Instance { get; }
    private static ImageConfigResponseUnmarshaller();
    private sealed virtual override ImageConfigResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.ImageConfigResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImageConfigResponse Unmarshall(JsonUnmarshallerContext context);
    public static ImageConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ImageConfigUnmarshaller : object {
    private static ImageConfigUnmarshaller _instance;
    public static ImageConfigUnmarshaller Instance { get; }
    private static ImageConfigUnmarshaller();
    private sealed virtual override ImageConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.ImageConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImageConfig Unmarshall(JsonUnmarshallerContext context);
    public static ImageConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvalidCodeSignatureExceptionUnmarshaller : object {
    private static InvalidCodeSignatureExceptionUnmarshaller _instance;
    public static InvalidCodeSignatureExceptionUnmarshaller Instance { get; }
    private static InvalidCodeSignatureExceptionUnmarshaller();
    public sealed virtual InvalidCodeSignatureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidCodeSignatureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCodeSignatureExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller : object {
    private static InvalidParameterValueExceptionUnmarshaller _instance;
    public static InvalidParameterValueExceptionUnmarshaller Instance { get; }
    private static InvalidParameterValueExceptionUnmarshaller();
    public sealed virtual InvalidParameterValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvalidRequestContentExceptionUnmarshaller : object {
    private static InvalidRequestContentExceptionUnmarshaller _instance;
    public static InvalidRequestContentExceptionUnmarshaller Instance { get; }
    private static InvalidRequestContentExceptionUnmarshaller();
    public sealed virtual InvalidRequestContentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRequestContentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequestContentExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvalidRuntimeExceptionUnmarshaller : object {
    private static InvalidRuntimeExceptionUnmarshaller _instance;
    public static InvalidRuntimeExceptionUnmarshaller Instance { get; }
    private static InvalidRuntimeExceptionUnmarshaller();
    public sealed virtual InvalidRuntimeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRuntimeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRuntimeExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvalidSecurityGroupIDExceptionUnmarshaller : object {
    private static InvalidSecurityGroupIDExceptionUnmarshaller _instance;
    public static InvalidSecurityGroupIDExceptionUnmarshaller Instance { get; }
    private static InvalidSecurityGroupIDExceptionUnmarshaller();
    public sealed virtual InvalidSecurityGroupIDException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSecurityGroupIDException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSecurityGroupIDExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvalidSubnetIDExceptionUnmarshaller : object {
    private static InvalidSubnetIDExceptionUnmarshaller _instance;
    public static InvalidSubnetIDExceptionUnmarshaller Instance { get; }
    private static InvalidSubnetIDExceptionUnmarshaller();
    public sealed virtual InvalidSubnetIDException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSubnetIDException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSubnetIDExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvalidZipFileExceptionUnmarshaller : object {
    private static InvalidZipFileExceptionUnmarshaller _instance;
    public static InvalidZipFileExceptionUnmarshaller Instance { get; }
    private static InvalidZipFileExceptionUnmarshaller();
    public sealed virtual InvalidZipFileException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidZipFileException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidZipFileExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeAsyncRequestMarshaller : object {
    private static InvokeAsyncRequestMarshaller _instance;
    public static InvokeAsyncRequestMarshaller Instance { get; }
    private static InvokeAsyncRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InvokeAsyncRequest publicRequest);
    internal static InvokeAsyncRequestMarshaller GetInstance();
    public static InvokeAsyncRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeAsyncResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InvokeAsyncResponseUnmarshaller _instance;
    public static InvokeAsyncResponseUnmarshaller Instance { get; }
    private static InvokeAsyncResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InvokeAsyncResponseUnmarshaller GetInstance();
    public static InvokeAsyncResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeRequestMarshaller : object {
    private static InvokeRequestMarshaller _instance;
    public static InvokeRequestMarshaller Instance { get; }
    private static InvokeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InvokeRequest publicRequest);
    internal static InvokeRequestMarshaller GetInstance();
    public static InvokeRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeResponseStreamUpdateUnmarshaller : object {
    private static InvokeResponseStreamUpdateUnmarshaller _instance;
    public static InvokeResponseStreamUpdateUnmarshaller Instance { get; }
    private static InvokeResponseStreamUpdateUnmarshaller();
    private sealed virtual override InvokeResponseStreamUpdate Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.InvokeResponseStreamUpdate,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvokeResponseStreamUpdate Unmarshall(JsonUnmarshallerContext context);
    public static InvokeResponseStreamUpdateUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InvokeResponseUnmarshaller _instance;
    public static InvokeResponseUnmarshaller Instance { get; }
    private static InvokeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InvokeResponseUnmarshaller GetInstance();
    public static InvokeResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeWithResponseStreamCompleteEventUnmarshaller : object {
    private static InvokeWithResponseStreamCompleteEventUnmarshaller _instance;
    public static InvokeWithResponseStreamCompleteEventUnmarshaller Instance { get; }
    private static InvokeWithResponseStreamCompleteEventUnmarshaller();
    private sealed virtual override InvokeWithResponseStreamCompleteEvent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.InvokeWithResponseStreamCompleteEvent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvokeWithResponseStreamCompleteEvent Unmarshall(JsonUnmarshallerContext context);
    public static InvokeWithResponseStreamCompleteEventUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeWithResponseStreamRequestMarshaller : object {
    private static InvokeWithResponseStreamRequestMarshaller _instance;
    public static InvokeWithResponseStreamRequestMarshaller Instance { get; }
    private static InvokeWithResponseStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InvokeWithResponseStreamRequest publicRequest);
    internal static InvokeWithResponseStreamRequestMarshaller GetInstance();
    public static InvokeWithResponseStreamRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeWithResponseStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InvokeWithResponseStreamResponseUnmarshaller _instance;
    public static InvokeWithResponseStreamResponseUnmarshaller Instance { get; }
    public bool HasStreamingProperty { get; }
    private static InvokeWithResponseStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InvokeWithResponseStreamResponseUnmarshaller GetInstance();
    public static InvokeWithResponseStreamResponseUnmarshaller get_Instance();
    protected virtual bool ShouldReadEntireResponse(IWebResponseData response, bool readEntireResponse);
    public virtual bool get_HasStreamingProperty();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.KMSAccessDeniedExceptionUnmarshaller : object {
    private static KMSAccessDeniedExceptionUnmarshaller _instance;
    public static KMSAccessDeniedExceptionUnmarshaller Instance { get; }
    private static KMSAccessDeniedExceptionUnmarshaller();
    public sealed virtual KMSAccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSAccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSAccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.KMSDisabledExceptionUnmarshaller : object {
    private static KMSDisabledExceptionUnmarshaller _instance;
    public static KMSDisabledExceptionUnmarshaller Instance { get; }
    private static KMSDisabledExceptionUnmarshaller();
    public sealed virtual KMSDisabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSDisabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSDisabledExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.KMSInvalidStateExceptionUnmarshaller : object {
    private static KMSInvalidStateExceptionUnmarshaller _instance;
    public static KMSInvalidStateExceptionUnmarshaller Instance { get; }
    private static KMSInvalidStateExceptionUnmarshaller();
    public sealed virtual KMSInvalidStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSInvalidStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSInvalidStateExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.KMSNotFoundExceptionUnmarshaller : object {
    private static KMSNotFoundExceptionUnmarshaller _instance;
    public static KMSNotFoundExceptionUnmarshaller Instance { get; }
    private static KMSNotFoundExceptionUnmarshaller();
    public sealed virtual KMSNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.LayersListItemUnmarshaller : object {
    private static LayersListItemUnmarshaller _instance;
    public static LayersListItemUnmarshaller Instance { get; }
    private static LayersListItemUnmarshaller();
    private sealed virtual override LayersListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.LayersListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LayersListItem Unmarshall(JsonUnmarshallerContext context);
    public static LayersListItemUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.LayerUnmarshaller : object {
    private static LayerUnmarshaller _instance;
    public static LayerUnmarshaller Instance { get; }
    private static LayerUnmarshaller();
    private sealed virtual override Layer Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.Layer,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Layer Unmarshall(JsonUnmarshallerContext context);
    public static LayerUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.LayerVersionContentInputMarshaller : object {
    public static LayerVersionContentInputMarshaller Instance;
    private static LayerVersionContentInputMarshaller();
    public sealed virtual void Marshall(LayerVersionContentInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.LayerVersionContentOutputUnmarshaller : object {
    private static LayerVersionContentOutputUnmarshaller _instance;
    public static LayerVersionContentOutputUnmarshaller Instance { get; }
    private static LayerVersionContentOutputUnmarshaller();
    private sealed virtual override LayerVersionContentOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.LayerVersionContentOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LayerVersionContentOutput Unmarshall(JsonUnmarshallerContext context);
    public static LayerVersionContentOutputUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.LayerVersionsListItemUnmarshaller : object {
    private static LayerVersionsListItemUnmarshaller _instance;
    public static LayerVersionsListItemUnmarshaller Instance { get; }
    private static LayerVersionsListItemUnmarshaller();
    private sealed virtual override LayerVersionsListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.LayerVersionsListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LayerVersionsListItem Unmarshall(JsonUnmarshallerContext context);
    public static LayerVersionsListItemUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListAliasesRequestMarshaller : object {
    private static ListAliasesRequestMarshaller _instance;
    public static ListAliasesRequestMarshaller Instance { get; }
    private static ListAliasesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAliasesRequest publicRequest);
    internal static ListAliasesRequestMarshaller GetInstance();
    public static ListAliasesRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListAliasesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAliasesResponseUnmarshaller _instance;
    public static ListAliasesResponseUnmarshaller Instance { get; }
    private static ListAliasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAliasesResponseUnmarshaller GetInstance();
    public static ListAliasesResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListCodeSigningConfigsRequestMarshaller : object {
    private static ListCodeSigningConfigsRequestMarshaller _instance;
    public static ListCodeSigningConfigsRequestMarshaller Instance { get; }
    private static ListCodeSigningConfigsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCodeSigningConfigsRequest publicRequest);
    internal static ListCodeSigningConfigsRequestMarshaller GetInstance();
    public static ListCodeSigningConfigsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListCodeSigningConfigsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCodeSigningConfigsResponseUnmarshaller _instance;
    public static ListCodeSigningConfigsResponseUnmarshaller Instance { get; }
    private static ListCodeSigningConfigsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCodeSigningConfigsResponseUnmarshaller GetInstance();
    public static ListCodeSigningConfigsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListEventSourceMappingsRequestMarshaller : object {
    private static ListEventSourceMappingsRequestMarshaller _instance;
    public static ListEventSourceMappingsRequestMarshaller Instance { get; }
    private static ListEventSourceMappingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListEventSourceMappingsRequest publicRequest);
    internal static ListEventSourceMappingsRequestMarshaller GetInstance();
    public static ListEventSourceMappingsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListEventSourceMappingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListEventSourceMappingsResponseUnmarshaller _instance;
    public static ListEventSourceMappingsResponseUnmarshaller Instance { get; }
    private static ListEventSourceMappingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListEventSourceMappingsResponseUnmarshaller GetInstance();
    public static ListEventSourceMappingsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionEventInvokeConfigsRequestMarshaller : object {
    private static ListFunctionEventInvokeConfigsRequestMarshaller _instance;
    public static ListFunctionEventInvokeConfigsRequestMarshaller Instance { get; }
    private static ListFunctionEventInvokeConfigsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFunctionEventInvokeConfigsRequest publicRequest);
    internal static ListFunctionEventInvokeConfigsRequestMarshaller GetInstance();
    public static ListFunctionEventInvokeConfigsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionEventInvokeConfigsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFunctionEventInvokeConfigsResponseUnmarshaller _instance;
    public static ListFunctionEventInvokeConfigsResponseUnmarshaller Instance { get; }
    private static ListFunctionEventInvokeConfigsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFunctionEventInvokeConfigsResponseUnmarshaller GetInstance();
    public static ListFunctionEventInvokeConfigsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionsByCodeSigningConfigRequestMarshaller : object {
    private static ListFunctionsByCodeSigningConfigRequestMarshaller _instance;
    public static ListFunctionsByCodeSigningConfigRequestMarshaller Instance { get; }
    private static ListFunctionsByCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFunctionsByCodeSigningConfigRequest publicRequest);
    internal static ListFunctionsByCodeSigningConfigRequestMarshaller GetInstance();
    public static ListFunctionsByCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionsByCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFunctionsByCodeSigningConfigResponseUnmarshaller _instance;
    public static ListFunctionsByCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static ListFunctionsByCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFunctionsByCodeSigningConfigResponseUnmarshaller GetInstance();
    public static ListFunctionsByCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionsRequestMarshaller : object {
    private static ListFunctionsRequestMarshaller _instance;
    public static ListFunctionsRequestMarshaller Instance { get; }
    private static ListFunctionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFunctionsRequest publicRequest);
    internal static ListFunctionsRequestMarshaller GetInstance();
    public static ListFunctionsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFunctionsResponseUnmarshaller _instance;
    public static ListFunctionsResponseUnmarshaller Instance { get; }
    private static ListFunctionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFunctionsResponseUnmarshaller GetInstance();
    public static ListFunctionsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionUrlConfigsRequestMarshaller : object {
    private static ListFunctionUrlConfigsRequestMarshaller _instance;
    public static ListFunctionUrlConfigsRequestMarshaller Instance { get; }
    private static ListFunctionUrlConfigsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFunctionUrlConfigsRequest publicRequest);
    internal static ListFunctionUrlConfigsRequestMarshaller GetInstance();
    public static ListFunctionUrlConfigsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionUrlConfigsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFunctionUrlConfigsResponseUnmarshaller _instance;
    public static ListFunctionUrlConfigsResponseUnmarshaller Instance { get; }
    private static ListFunctionUrlConfigsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFunctionUrlConfigsResponseUnmarshaller GetInstance();
    public static ListFunctionUrlConfigsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListLayersRequestMarshaller : object {
    private static ListLayersRequestMarshaller _instance;
    public static ListLayersRequestMarshaller Instance { get; }
    private static ListLayersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListLayersRequest publicRequest);
    internal static ListLayersRequestMarshaller GetInstance();
    public static ListLayersRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListLayersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListLayersResponseUnmarshaller _instance;
    public static ListLayersResponseUnmarshaller Instance { get; }
    private static ListLayersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListLayersResponseUnmarshaller GetInstance();
    public static ListLayersResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListLayerVersionsRequestMarshaller : object {
    private static ListLayerVersionsRequestMarshaller _instance;
    public static ListLayerVersionsRequestMarshaller Instance { get; }
    private static ListLayerVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListLayerVersionsRequest publicRequest);
    internal static ListLayerVersionsRequestMarshaller GetInstance();
    public static ListLayerVersionsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListLayerVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListLayerVersionsResponseUnmarshaller _instance;
    public static ListLayerVersionsResponseUnmarshaller Instance { get; }
    private static ListLayerVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListLayerVersionsResponseUnmarshaller GetInstance();
    public static ListLayerVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListProvisionedConcurrencyConfigsRequestMarshaller : object {
    private static ListProvisionedConcurrencyConfigsRequestMarshaller _instance;
    public static ListProvisionedConcurrencyConfigsRequestMarshaller Instance { get; }
    private static ListProvisionedConcurrencyConfigsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListProvisionedConcurrencyConfigsRequest publicRequest);
    internal static ListProvisionedConcurrencyConfigsRequestMarshaller GetInstance();
    public static ListProvisionedConcurrencyConfigsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListProvisionedConcurrencyConfigsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListProvisionedConcurrencyConfigsResponseUnmarshaller _instance;
    public static ListProvisionedConcurrencyConfigsResponseUnmarshaller Instance { get; }
    private static ListProvisionedConcurrencyConfigsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListProvisionedConcurrencyConfigsResponseUnmarshaller GetInstance();
    public static ListProvisionedConcurrencyConfigsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller : object {
    private static ListTagsRequestMarshaller _instance;
    public static ListTagsRequestMarshaller Instance { get; }
    private static ListTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsRequest publicRequest);
    internal static ListTagsRequestMarshaller GetInstance();
    public static ListTagsRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsResponseUnmarshaller _instance;
    public static ListTagsResponseUnmarshaller Instance { get; }
    private static ListTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsResponseUnmarshaller GetInstance();
    public static ListTagsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListVersionsByFunctionRequestMarshaller : object {
    private static ListVersionsByFunctionRequestMarshaller _instance;
    public static ListVersionsByFunctionRequestMarshaller Instance { get; }
    private static ListVersionsByFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVersionsByFunctionRequest publicRequest);
    internal static ListVersionsByFunctionRequestMarshaller GetInstance();
    public static ListVersionsByFunctionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListVersionsByFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVersionsByFunctionResponseUnmarshaller _instance;
    public static ListVersionsByFunctionResponseUnmarshaller Instance { get; }
    private static ListVersionsByFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVersionsByFunctionResponseUnmarshaller GetInstance();
    public static ListVersionsByFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.LoggingConfigMarshaller : object {
    public static LoggingConfigMarshaller Instance;
    private static LoggingConfigMarshaller();
    public sealed virtual void Marshall(LoggingConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.LoggingConfigUnmarshaller : object {
    private static LoggingConfigUnmarshaller _instance;
    public static LoggingConfigUnmarshaller Instance { get; }
    private static LoggingConfigUnmarshaller();
    private sealed virtual override LoggingConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.LoggingConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoggingConfig Unmarshall(JsonUnmarshallerContext context);
    public static LoggingConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.OnFailureMarshaller : object {
    public static OnFailureMarshaller Instance;
    private static OnFailureMarshaller();
    public sealed virtual void Marshall(OnFailure requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.OnFailureUnmarshaller : object {
    private static OnFailureUnmarshaller _instance;
    public static OnFailureUnmarshaller Instance { get; }
    private static OnFailureUnmarshaller();
    private sealed virtual override OnFailure Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.OnFailure,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OnFailure Unmarshall(JsonUnmarshallerContext context);
    public static OnFailureUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.OnSuccessMarshaller : object {
    public static OnSuccessMarshaller Instance;
    private static OnSuccessMarshaller();
    public sealed virtual void Marshall(OnSuccess requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.OnSuccessUnmarshaller : object {
    private static OnSuccessUnmarshaller _instance;
    public static OnSuccessUnmarshaller Instance { get; }
    private static OnSuccessUnmarshaller();
    private sealed virtual override OnSuccess Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.OnSuccess,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OnSuccess Unmarshall(JsonUnmarshallerContext context);
    public static OnSuccessUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PolicyLengthExceededExceptionUnmarshaller : object {
    private static PolicyLengthExceededExceptionUnmarshaller _instance;
    public static PolicyLengthExceededExceptionUnmarshaller Instance { get; }
    private static PolicyLengthExceededExceptionUnmarshaller();
    public sealed virtual PolicyLengthExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyLengthExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyLengthExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PreconditionFailedExceptionUnmarshaller : object {
    private static PreconditionFailedExceptionUnmarshaller _instance;
    public static PreconditionFailedExceptionUnmarshaller Instance { get; }
    private static PreconditionFailedExceptionUnmarshaller();
    public sealed virtual PreconditionFailedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PreconditionFailedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PreconditionFailedExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ProvisionedConcurrencyConfigListItemUnmarshaller : object {
    private static ProvisionedConcurrencyConfigListItemUnmarshaller _instance;
    public static ProvisionedConcurrencyConfigListItemUnmarshaller Instance { get; }
    private static ProvisionedConcurrencyConfigListItemUnmarshaller();
    private sealed virtual override ProvisionedConcurrencyConfigListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.ProvisionedConcurrencyConfigListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedConcurrencyConfigListItem Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedConcurrencyConfigListItemUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ProvisionedConcurrencyConfigNotFoundExceptionUnmarshaller : object {
    private static ProvisionedConcurrencyConfigNotFoundExceptionUnmarshaller _instance;
    public static ProvisionedConcurrencyConfigNotFoundExceptionUnmarshaller Instance { get; }
    private static ProvisionedConcurrencyConfigNotFoundExceptionUnmarshaller();
    public sealed virtual ProvisionedConcurrencyConfigNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ProvisionedConcurrencyConfigNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ProvisionedConcurrencyConfigNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PublishLayerVersionRequestMarshaller : object {
    private static PublishLayerVersionRequestMarshaller _instance;
    public static PublishLayerVersionRequestMarshaller Instance { get; }
    private static PublishLayerVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PublishLayerVersionRequest publicRequest);
    internal static PublishLayerVersionRequestMarshaller GetInstance();
    public static PublishLayerVersionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PublishLayerVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PublishLayerVersionResponseUnmarshaller _instance;
    public static PublishLayerVersionResponseUnmarshaller Instance { get; }
    private static PublishLayerVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PublishLayerVersionResponseUnmarshaller GetInstance();
    public static PublishLayerVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PublishVersionRequestMarshaller : object {
    private static PublishVersionRequestMarshaller _instance;
    public static PublishVersionRequestMarshaller Instance { get; }
    private static PublishVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PublishVersionRequest publicRequest);
    internal static PublishVersionRequestMarshaller GetInstance();
    public static PublishVersionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PublishVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PublishVersionResponseUnmarshaller _instance;
    public static PublishVersionResponseUnmarshaller Instance { get; }
    private static PublishVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PublishVersionResponseUnmarshaller GetInstance();
    public static PublishVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutFunctionCodeSigningConfigRequestMarshaller : object {
    private static PutFunctionCodeSigningConfigRequestMarshaller _instance;
    public static PutFunctionCodeSigningConfigRequestMarshaller Instance { get; }
    private static PutFunctionCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutFunctionCodeSigningConfigRequest publicRequest);
    internal static PutFunctionCodeSigningConfigRequestMarshaller GetInstance();
    public static PutFunctionCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutFunctionCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutFunctionCodeSigningConfigResponseUnmarshaller _instance;
    public static PutFunctionCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static PutFunctionCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutFunctionCodeSigningConfigResponseUnmarshaller GetInstance();
    public static PutFunctionCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutFunctionConcurrencyRequestMarshaller : object {
    private static PutFunctionConcurrencyRequestMarshaller _instance;
    public static PutFunctionConcurrencyRequestMarshaller Instance { get; }
    private static PutFunctionConcurrencyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutFunctionConcurrencyRequest publicRequest);
    internal static PutFunctionConcurrencyRequestMarshaller GetInstance();
    public static PutFunctionConcurrencyRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutFunctionConcurrencyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutFunctionConcurrencyResponseUnmarshaller _instance;
    public static PutFunctionConcurrencyResponseUnmarshaller Instance { get; }
    private static PutFunctionConcurrencyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutFunctionConcurrencyResponseUnmarshaller GetInstance();
    public static PutFunctionConcurrencyResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutFunctionEventInvokeConfigRequestMarshaller : object {
    private static PutFunctionEventInvokeConfigRequestMarshaller _instance;
    public static PutFunctionEventInvokeConfigRequestMarshaller Instance { get; }
    private static PutFunctionEventInvokeConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutFunctionEventInvokeConfigRequest publicRequest);
    internal static PutFunctionEventInvokeConfigRequestMarshaller GetInstance();
    public static PutFunctionEventInvokeConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutFunctionEventInvokeConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutFunctionEventInvokeConfigResponseUnmarshaller _instance;
    public static PutFunctionEventInvokeConfigResponseUnmarshaller Instance { get; }
    private static PutFunctionEventInvokeConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutFunctionEventInvokeConfigResponseUnmarshaller GetInstance();
    public static PutFunctionEventInvokeConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutProvisionedConcurrencyConfigRequestMarshaller : object {
    private static PutProvisionedConcurrencyConfigRequestMarshaller _instance;
    public static PutProvisionedConcurrencyConfigRequestMarshaller Instance { get; }
    private static PutProvisionedConcurrencyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutProvisionedConcurrencyConfigRequest publicRequest);
    internal static PutProvisionedConcurrencyConfigRequestMarshaller GetInstance();
    public static PutProvisionedConcurrencyConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutProvisionedConcurrencyConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutProvisionedConcurrencyConfigResponseUnmarshaller _instance;
    public static PutProvisionedConcurrencyConfigResponseUnmarshaller Instance { get; }
    private static PutProvisionedConcurrencyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutProvisionedConcurrencyConfigResponseUnmarshaller GetInstance();
    public static PutProvisionedConcurrencyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutRuntimeManagementConfigRequestMarshaller : object {
    private static PutRuntimeManagementConfigRequestMarshaller _instance;
    public static PutRuntimeManagementConfigRequestMarshaller Instance { get; }
    private static PutRuntimeManagementConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRuntimeManagementConfigRequest publicRequest);
    internal static PutRuntimeManagementConfigRequestMarshaller GetInstance();
    public static PutRuntimeManagementConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PutRuntimeManagementConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRuntimeManagementConfigResponseUnmarshaller _instance;
    public static PutRuntimeManagementConfigResponseUnmarshaller Instance { get; }
    private static PutRuntimeManagementConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRuntimeManagementConfigResponseUnmarshaller GetInstance();
    public static PutRuntimeManagementConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RecursiveInvocationExceptionUnmarshaller : object {
    private static RecursiveInvocationExceptionUnmarshaller _instance;
    public static RecursiveInvocationExceptionUnmarshaller Instance { get; }
    private static RecursiveInvocationExceptionUnmarshaller();
    public sealed virtual RecursiveInvocationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual RecursiveInvocationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static RecursiveInvocationExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RemoveLayerVersionPermissionRequestMarshaller : object {
    private static RemoveLayerVersionPermissionRequestMarshaller _instance;
    public static RemoveLayerVersionPermissionRequestMarshaller Instance { get; }
    private static RemoveLayerVersionPermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveLayerVersionPermissionRequest publicRequest);
    internal static RemoveLayerVersionPermissionRequestMarshaller GetInstance();
    public static RemoveLayerVersionPermissionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RemoveLayerVersionPermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveLayerVersionPermissionResponseUnmarshaller _instance;
    public static RemoveLayerVersionPermissionResponseUnmarshaller Instance { get; }
    private static RemoveLayerVersionPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveLayerVersionPermissionResponseUnmarshaller GetInstance();
    public static RemoveLayerVersionPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller : object {
    private static RemovePermissionRequestMarshaller _instance;
    public static RemovePermissionRequestMarshaller Instance { get; }
    private static RemovePermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemovePermissionRequest publicRequest);
    internal static RemovePermissionRequestMarshaller GetInstance();
    public static RemovePermissionRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemovePermissionResponseUnmarshaller _instance;
    public static RemovePermissionResponseUnmarshaller Instance { get; }
    private static RemovePermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemovePermissionResponseUnmarshaller GetInstance();
    public static RemovePermissionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RequestTooLargeExceptionUnmarshaller : object {
    private static RequestTooLargeExceptionUnmarshaller _instance;
    public static RequestTooLargeExceptionUnmarshaller Instance { get; }
    private static RequestTooLargeExceptionUnmarshaller();
    public sealed virtual RequestTooLargeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual RequestTooLargeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static RequestTooLargeExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ResourceConflictExceptionUnmarshaller : object {
    private static ResourceConflictExceptionUnmarshaller _instance;
    public static ResourceConflictExceptionUnmarshaller Instance { get; }
    private static ResourceConflictExceptionUnmarshaller();
    public sealed virtual ResourceConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller : object {
    private static ResourceInUseExceptionUnmarshaller _instance;
    public static ResourceInUseExceptionUnmarshaller Instance { get; }
    private static ResourceInUseExceptionUnmarshaller();
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller : object {
    private static ResourceNotReadyExceptionUnmarshaller _instance;
    public static ResourceNotReadyExceptionUnmarshaller Instance { get; }
    private static ResourceNotReadyExceptionUnmarshaller();
    public sealed virtual ResourceNotReadyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotReadyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotReadyExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RuntimeVersionConfigUnmarshaller : object {
    private static RuntimeVersionConfigUnmarshaller _instance;
    public static RuntimeVersionConfigUnmarshaller Instance { get; }
    private static RuntimeVersionConfigUnmarshaller();
    private sealed virtual override RuntimeVersionConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.RuntimeVersionConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuntimeVersionConfig Unmarshall(JsonUnmarshallerContext context);
    public static RuntimeVersionConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RuntimeVersionErrorUnmarshaller : object {
    private static RuntimeVersionErrorUnmarshaller _instance;
    public static RuntimeVersionErrorUnmarshaller Instance { get; }
    private static RuntimeVersionErrorUnmarshaller();
    private sealed virtual override RuntimeVersionError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.RuntimeVersionError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuntimeVersionError Unmarshall(JsonUnmarshallerContext context);
    public static RuntimeVersionErrorUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ScalingConfigMarshaller : object {
    public static ScalingConfigMarshaller Instance;
    private static ScalingConfigMarshaller();
    public sealed virtual void Marshall(ScalingConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ScalingConfigUnmarshaller : object {
    private static ScalingConfigUnmarshaller _instance;
    public static ScalingConfigUnmarshaller Instance { get; }
    private static ScalingConfigUnmarshaller();
    private sealed virtual override ScalingConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.ScalingConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScalingConfig Unmarshall(JsonUnmarshallerContext context);
    public static ScalingConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SelfManagedEventSourceMarshaller : object {
    public static SelfManagedEventSourceMarshaller Instance;
    private static SelfManagedEventSourceMarshaller();
    public sealed virtual void Marshall(SelfManagedEventSource requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SelfManagedEventSourceUnmarshaller : object {
    private static SelfManagedEventSourceUnmarshaller _instance;
    public static SelfManagedEventSourceUnmarshaller Instance { get; }
    private static SelfManagedEventSourceUnmarshaller();
    private sealed virtual override SelfManagedEventSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.SelfManagedEventSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SelfManagedEventSource Unmarshall(JsonUnmarshallerContext context);
    public static SelfManagedEventSourceUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SelfManagedKafkaEventSourceConfigMarshaller : object {
    public static SelfManagedKafkaEventSourceConfigMarshaller Instance;
    private static SelfManagedKafkaEventSourceConfigMarshaller();
    public sealed virtual void Marshall(SelfManagedKafkaEventSourceConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SelfManagedKafkaEventSourceConfigUnmarshaller : object {
    private static SelfManagedKafkaEventSourceConfigUnmarshaller _instance;
    public static SelfManagedKafkaEventSourceConfigUnmarshaller Instance { get; }
    private static SelfManagedKafkaEventSourceConfigUnmarshaller();
    private sealed virtual override SelfManagedKafkaEventSourceConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.SelfManagedKafkaEventSourceConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SelfManagedKafkaEventSourceConfig Unmarshall(JsonUnmarshallerContext context);
    public static SelfManagedKafkaEventSourceConfigUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ServiceExceptionUnmarshaller : object {
    private static ServiceExceptionUnmarshaller _instance;
    public static ServiceExceptionUnmarshaller Instance { get; }
    private static ServiceExceptionUnmarshaller();
    public sealed virtual ServiceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SnapStartExceptionUnmarshaller : object {
    private static SnapStartExceptionUnmarshaller _instance;
    public static SnapStartExceptionUnmarshaller Instance { get; }
    private static SnapStartExceptionUnmarshaller();
    public sealed virtual SnapStartException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SnapStartException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SnapStartExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SnapStartMarshaller : object {
    public static SnapStartMarshaller Instance;
    private static SnapStartMarshaller();
    public sealed virtual void Marshall(SnapStart requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SnapStartNotReadyExceptionUnmarshaller : object {
    private static SnapStartNotReadyExceptionUnmarshaller _instance;
    public static SnapStartNotReadyExceptionUnmarshaller Instance { get; }
    private static SnapStartNotReadyExceptionUnmarshaller();
    public sealed virtual SnapStartNotReadyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SnapStartNotReadyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SnapStartNotReadyExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SnapStartResponseUnmarshaller : object {
    private static SnapStartResponseUnmarshaller _instance;
    public static SnapStartResponseUnmarshaller Instance { get; }
    private static SnapStartResponseUnmarshaller();
    private sealed virtual override SnapStartResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.SnapStartResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapStartResponse Unmarshall(JsonUnmarshallerContext context);
    public static SnapStartResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SnapStartTimeoutExceptionUnmarshaller : object {
    private static SnapStartTimeoutExceptionUnmarshaller _instance;
    public static SnapStartTimeoutExceptionUnmarshaller Instance { get; }
    private static SnapStartTimeoutExceptionUnmarshaller();
    public sealed virtual SnapStartTimeoutException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SnapStartTimeoutException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SnapStartTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SourceAccessConfigurationMarshaller : object {
    public static SourceAccessConfigurationMarshaller Instance;
    private static SourceAccessConfigurationMarshaller();
    public sealed virtual void Marshall(SourceAccessConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SourceAccessConfigurationUnmarshaller : object {
    private static SourceAccessConfigurationUnmarshaller _instance;
    public static SourceAccessConfigurationUnmarshaller Instance { get; }
    private static SourceAccessConfigurationUnmarshaller();
    private sealed virtual override SourceAccessConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.SourceAccessConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceAccessConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SourceAccessConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.SubnetIPAddressLimitReachedExceptionUnmarshaller : object {
    private static SubnetIPAddressLimitReachedExceptionUnmarshaller _instance;
    public static SubnetIPAddressLimitReachedExceptionUnmarshaller Instance { get; }
    private static SubnetIPAddressLimitReachedExceptionUnmarshaller();
    public sealed virtual SubnetIPAddressLimitReachedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SubnetIPAddressLimitReachedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubnetIPAddressLimitReachedExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.TracingConfigMarshaller : object {
    public static TracingConfigMarshaller Instance;
    private static TracingConfigMarshaller();
    public sealed virtual void Marshall(TracingConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.TracingConfigResponseUnmarshaller : object {
    private static TracingConfigResponseUnmarshaller _instance;
    public static TracingConfigResponseUnmarshaller Instance { get; }
    private static TracingConfigResponseUnmarshaller();
    private sealed virtual override TracingConfigResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.TracingConfigResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TracingConfigResponse Unmarshall(JsonUnmarshallerContext context);
    public static TracingConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UnsupportedMediaTypeExceptionUnmarshaller : object {
    private static UnsupportedMediaTypeExceptionUnmarshaller _instance;
    public static UnsupportedMediaTypeExceptionUnmarshaller Instance { get; }
    private static UnsupportedMediaTypeExceptionUnmarshaller();
    public sealed virtual UnsupportedMediaTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedMediaTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedMediaTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateAliasRequestMarshaller : object {
    private static UpdateAliasRequestMarshaller _instance;
    public static UpdateAliasRequestMarshaller Instance { get; }
    private static UpdateAliasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAliasRequest publicRequest);
    internal static UpdateAliasRequestMarshaller GetInstance();
    public static UpdateAliasRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAliasResponseUnmarshaller _instance;
    public static UpdateAliasResponseUnmarshaller Instance { get; }
    private static UpdateAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAliasResponseUnmarshaller GetInstance();
    public static UpdateAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateCodeSigningConfigRequestMarshaller : object {
    private static UpdateCodeSigningConfigRequestMarshaller _instance;
    public static UpdateCodeSigningConfigRequestMarshaller Instance { get; }
    private static UpdateCodeSigningConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateCodeSigningConfigRequest publicRequest);
    internal static UpdateCodeSigningConfigRequestMarshaller GetInstance();
    public static UpdateCodeSigningConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateCodeSigningConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateCodeSigningConfigResponseUnmarshaller _instance;
    public static UpdateCodeSigningConfigResponseUnmarshaller Instance { get; }
    private static UpdateCodeSigningConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateCodeSigningConfigResponseUnmarshaller GetInstance();
    public static UpdateCodeSigningConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateEventSourceMappingRequestMarshaller : object {
    private static UpdateEventSourceMappingRequestMarshaller _instance;
    public static UpdateEventSourceMappingRequestMarshaller Instance { get; }
    private static UpdateEventSourceMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateEventSourceMappingRequest publicRequest);
    internal static UpdateEventSourceMappingRequestMarshaller GetInstance();
    public static UpdateEventSourceMappingRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateEventSourceMappingResponseUnmarshaller _instance;
    public static UpdateEventSourceMappingResponseUnmarshaller Instance { get; }
    private static UpdateEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateEventSourceMappingResponseUnmarshaller GetInstance();
    public static UpdateEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionCodeRequestMarshaller : object {
    private static UpdateFunctionCodeRequestMarshaller _instance;
    public static UpdateFunctionCodeRequestMarshaller Instance { get; }
    private static UpdateFunctionCodeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFunctionCodeRequest publicRequest);
    internal static UpdateFunctionCodeRequestMarshaller GetInstance();
    public static UpdateFunctionCodeRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionCodeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFunctionCodeResponseUnmarshaller _instance;
    public static UpdateFunctionCodeResponseUnmarshaller Instance { get; }
    private static UpdateFunctionCodeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFunctionCodeResponseUnmarshaller GetInstance();
    public static UpdateFunctionCodeResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionConfigurationRequestMarshaller : object {
    private static UpdateFunctionConfigurationRequestMarshaller _instance;
    public static UpdateFunctionConfigurationRequestMarshaller Instance { get; }
    private static UpdateFunctionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFunctionConfigurationRequest publicRequest);
    internal static UpdateFunctionConfigurationRequestMarshaller GetInstance();
    public static UpdateFunctionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFunctionConfigurationResponseUnmarshaller _instance;
    public static UpdateFunctionConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateFunctionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFunctionConfigurationResponseUnmarshaller GetInstance();
    public static UpdateFunctionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionEventInvokeConfigRequestMarshaller : object {
    private static UpdateFunctionEventInvokeConfigRequestMarshaller _instance;
    public static UpdateFunctionEventInvokeConfigRequestMarshaller Instance { get; }
    private static UpdateFunctionEventInvokeConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFunctionEventInvokeConfigRequest publicRequest);
    internal static UpdateFunctionEventInvokeConfigRequestMarshaller GetInstance();
    public static UpdateFunctionEventInvokeConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionEventInvokeConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFunctionEventInvokeConfigResponseUnmarshaller _instance;
    public static UpdateFunctionEventInvokeConfigResponseUnmarshaller Instance { get; }
    private static UpdateFunctionEventInvokeConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFunctionEventInvokeConfigResponseUnmarshaller GetInstance();
    public static UpdateFunctionEventInvokeConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionUrlConfigRequestMarshaller : object {
    private static UpdateFunctionUrlConfigRequestMarshaller _instance;
    public static UpdateFunctionUrlConfigRequestMarshaller Instance { get; }
    private static UpdateFunctionUrlConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFunctionUrlConfigRequest publicRequest);
    internal static UpdateFunctionUrlConfigRequestMarshaller GetInstance();
    public static UpdateFunctionUrlConfigRequestMarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionUrlConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFunctionUrlConfigResponseUnmarshaller _instance;
    public static UpdateFunctionUrlConfigResponseUnmarshaller Instance { get; }
    private static UpdateFunctionUrlConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFunctionUrlConfigResponseUnmarshaller GetInstance();
    public static UpdateFunctionUrlConfigResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.VpcConfigDetailUnmarshaller : object {
    private static VpcConfigDetailUnmarshaller _instance;
    public static VpcConfigDetailUnmarshaller Instance { get; }
    private static VpcConfigDetailUnmarshaller();
    private sealed virtual override VpcConfigDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.VpcConfigDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConfigDetail Unmarshall(JsonUnmarshallerContext context);
    public static VpcConfigDetailUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.VpcConfigMarshaller : object {
    public static VpcConfigMarshaller Instance;
    private static VpcConfigMarshaller();
    public sealed virtual void Marshall(VpcConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.InvalidCodeSignatureException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public InvalidCodeSignatureException(string message);
    public InvalidCodeSignatureException(string message, Exception innerException);
    public InvalidCodeSignatureException(Exception innerException);
    public InvalidCodeSignatureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCodeSignatureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.InvalidParameterValueException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.InvalidRequestContentException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public InvalidRequestContentException(string message);
    public InvalidRequestContentException(string message, Exception innerException);
    public InvalidRequestContentException(Exception innerException);
    public InvalidRequestContentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequestContentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.InvalidRuntimeException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public InvalidRuntimeException(string message);
    public InvalidRuntimeException(string message, Exception innerException);
    public InvalidRuntimeException(Exception innerException);
    public InvalidRuntimeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRuntimeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.InvalidSecurityGroupIDException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public InvalidSecurityGroupIDException(string message);
    public InvalidSecurityGroupIDException(string message, Exception innerException);
    public InvalidSecurityGroupIDException(Exception innerException);
    public InvalidSecurityGroupIDException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSecurityGroupIDException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.InvalidSubnetIDException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public InvalidSubnetIDException(string message);
    public InvalidSubnetIDException(string message, Exception innerException);
    public InvalidSubnetIDException(Exception innerException);
    public InvalidSubnetIDException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSubnetIDException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.InvalidZipFileException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public InvalidZipFileException(string message);
    public InvalidZipFileException(string message, Exception innerException);
    public InvalidZipFileException(Exception innerException);
    public InvalidZipFileException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidZipFileException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
[ObsoleteAttribute("For .NET 3.5/4.5, API InvokeAsyncResponse InvokeAsync(InvokeAsyncRequest) is deprecated, use InvokeResponse Invoke(InvokeRequest), or Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead. For .NET Core, Task<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest, CancellationToken) is deprecated, use Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead.")]
public class Amazon.Lambda.Model.InvokeAsyncRequest : AmazonLambdaRequest {
    private string _functionName;
    private Stream _invokeArgsStream;
    public string InvokeArgs { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public Stream InvokeArgsStream { get; public set; }
    public string get_InvokeArgs();
    public void set_InvokeArgs(string value);
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public Stream get_InvokeArgsStream();
    public void set_InvokeArgsStream(Stream value);
    internal bool IsSetInvokeArgsStream();
}
[ObsoleteAttribute("For .NET 3.5/4.5, API InvokeAsyncResponse InvokeAsync(InvokeAsyncRequest) is deprecated, use InvokeResponse Invoke(InvokeRequest), or Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead. For .NET Core, Task<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest, CancellationToken) is deprecated, use Task<InvokeResponse> InvokeAsync(InvokeRequest, CancellationToken) instead.")]
public class Amazon.Lambda.Model.InvokeAsyncResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _status;
    public Nullable`1<int> Status { get; public set; }
    public Nullable`1<int> get_Status();
    public void set_Status(Nullable`1<int> value);
    internal bool IsSetStatus();
}
public class Amazon.Lambda.Model.InvokeRequest : AmazonLambdaRequest {
    private string _clientContextBase64;
    private string _functionName;
    private InvocationType _invocationType;
    private LogType _logType;
    private MemoryStream _payloadStream;
    private string _qualifier;
    public string Payload { get; public set; }
    public string ClientContext { get; public set; }
    public string ClientContextBase64 { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public InvocationType InvocationType { get; public set; }
    public LogType LogType { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream PayloadStream { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_Payload();
    public void set_Payload(string value);
    public string get_ClientContext();
    public void set_ClientContext(string value);
    public string get_ClientContextBase64();
    public void set_ClientContextBase64(string value);
    internal bool IsSetClientContextBase64();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public InvocationType get_InvocationType();
    public void set_InvocationType(InvocationType value);
    internal bool IsSetInvocationType();
    public LogType get_LogType();
    public void set_LogType(LogType value);
    internal bool IsSetLogType();
    public MemoryStream get_PayloadStream();
    public void set_PayloadStream(MemoryStream value);
    internal bool IsSetPayloadStream();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.InvokeResponse : AmazonWebServiceResponse {
    private string _executedVersion;
    private string _functionError;
    private string _logResult;
    private MemoryStream _payload;
    private Nullable`1<int> _statusCode;
    [AWSPropertyAttribute]
public string ExecutedVersion { get; public set; }
    public string FunctionError { get; public set; }
    public string LogResult { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream Payload { get; public set; }
    public Nullable`1<int> StatusCode { get; public set; }
    public string get_ExecutedVersion();
    public void set_ExecutedVersion(string value);
    internal bool IsSetExecutedVersion();
    public string get_FunctionError();
    public void set_FunctionError(string value);
    internal bool IsSetFunctionError();
    public string get_LogResult();
    public void set_LogResult(string value);
    internal bool IsSetLogResult();
    public MemoryStream get_Payload();
    public void set_Payload(MemoryStream value);
    internal bool IsSetPayload();
    public Nullable`1<int> get_StatusCode();
    public void set_StatusCode(Nullable`1<int> value);
    internal bool IsSetStatusCode();
}
public class Amazon.Lambda.Model.InvokeResponseStreamUpdate : object {
    private MemoryStream _payload;
    [AWSPropertyAttribute]
public MemoryStream Payload { get; public set; }
    [ObsoleteAttribute("The version of InvokeResponseStreamUpdate that accepts an IEventStreamMessage is no longer used in the SDK.")]
public InvokeResponseStreamUpdate(IEventStreamMessage message);
    public MemoryStream get_Payload();
    public void set_Payload(MemoryStream value);
    internal bool IsSetPayload();
}
public class Amazon.Lambda.Model.InvokeWithResponseStreamCompleteEvent : object {
    private string _errorCode;
    private string _errorDetails;
    private string _logResult;
    public string ErrorCode { get; public set; }
    public string ErrorDetails { get; public set; }
    public string LogResult { get; public set; }
    [ObsoleteAttribute("The constructor for InvokeWithResponseStreamCompleteEvent that takes in IEventStreamMessage is deprecated and no longer used throughout the SDK ")]
public InvokeWithResponseStreamCompleteEvent(IEventStreamMessage message);
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorDetails();
    public void set_ErrorDetails(string value);
    internal bool IsSetErrorDetails();
    public string get_LogResult();
    public void set_LogResult(string value);
    internal bool IsSetLogResult();
}
public class Amazon.Lambda.Model.InvokeWithResponseStreamRequest : AmazonLambdaRequest {
    private string _clientContext;
    private string _functionName;
    private ResponseStreamingInvocationType _invocationType;
    private LogType _logType;
    private MemoryStream _payload;
    private string _qualifier;
    public string ClientContext { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public ResponseStreamingInvocationType InvocationType { get; public set; }
    public LogType LogType { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream Payload { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_ClientContext();
    public void set_ClientContext(string value);
    internal bool IsSetClientContext();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public ResponseStreamingInvocationType get_InvocationType();
    public void set_InvocationType(ResponseStreamingInvocationType value);
    internal bool IsSetInvocationType();
    public LogType get_LogType();
    public void set_LogType(LogType value);
    internal bool IsSetLogType();
    public MemoryStream get_Payload();
    public void set_Payload(MemoryStream value);
    internal bool IsSetPayload();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.InvokeWithResponseStreamResponse : AmazonWebServiceResponse {
    private InvokeWithResponseStreamResponseEvent _eventStream;
    private string _executedVersion;
    private string _responseStreamContentType;
    private Nullable`1<int> _statusCode;
    public InvokeWithResponseStreamResponseEvent EventStream { get; public set; }
    [AWSPropertyAttribute]
public string ExecutedVersion { get; public set; }
    public string ResponseStreamContentType { get; public set; }
    public Nullable`1<int> StatusCode { get; public set; }
    public InvokeWithResponseStreamResponseEvent get_EventStream();
    public void set_EventStream(InvokeWithResponseStreamResponseEvent value);
    internal bool IsSetEventStream();
    public string get_ExecutedVersion();
    public void set_ExecutedVersion(string value);
    internal bool IsSetExecutedVersion();
    public string get_ResponseStreamContentType();
    public void set_ResponseStreamContentType(string value);
    internal bool IsSetResponseStreamContentType();
    public Nullable`1<int> get_StatusCode();
    public void set_StatusCode(Nullable`1<int> value);
    internal bool IsSetStatusCode();
}
public class Amazon.Lambda.Model.InvokeWithResponseStreamResponseEvent : EnumerableEventStream`2<IEventStreamEvent, LambdaEventStreamException> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Func`2<IEventStreamMessage, IEventStreamEvent>> <EventMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Func`2<IEventStreamMessage, LambdaEventStreamException>> <ExceptionMapping>k__BackingField;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isProcessing;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<IEventStreamEvent>> EventReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamExceptionReceivedArgs`1<LambdaEventStreamException>> ExceptionReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<InitialResponseEvent>> InitialResponseReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<InvokeWithResponseStreamCompleteEvent>> InvokeCompleteReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<InvokeResponseStreamUpdate>> PayloadChunkReceived;
    protected IDictionary`2<string, Func`2<IEventStreamMessage, IEventStreamEvent>> EventMapping { get; }
    protected IDictionary`2<string, Func`2<IEventStreamMessage, LambdaEventStreamException>> ExceptionMapping { get; }
    protected bool IsProcessing { get; protected set; }
    public InvokeWithResponseStreamResponseEvent(Stream stream);
    public InvokeWithResponseStreamResponseEvent(Stream stream, IEventStreamDecoder eventStreamDecoder);
    [CompilerGeneratedAttribute]
protected virtual IDictionary`2<string, Func`2<IEventStreamMessage, IEventStreamEvent>> get_EventMapping();
    [CompilerGeneratedAttribute]
protected virtual IDictionary`2<string, Func`2<IEventStreamMessage, LambdaEventStreamException>> get_ExceptionMapping();
    protected virtual bool get_IsProcessing();
    protected virtual void set_IsProcessing(bool value);
    [CompilerGeneratedAttribute]
public virtual void add_EventReceived(EventHandler`1<EventStreamEventReceivedArgs`1<IEventStreamEvent>> value);
    [CompilerGeneratedAttribute]
public virtual void remove_EventReceived(EventHandler`1<EventStreamEventReceivedArgs`1<IEventStreamEvent>> value);
    [CompilerGeneratedAttribute]
public virtual void add_ExceptionReceived(EventHandler`1<EventStreamExceptionReceivedArgs`1<LambdaEventStreamException>> value);
    [CompilerGeneratedAttribute]
public virtual void remove_ExceptionReceived(EventHandler`1<EventStreamExceptionReceivedArgs`1<LambdaEventStreamException>> value);
    [CompilerGeneratedAttribute]
public void add_InitialResponseReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InitialResponseEvent>> value);
    [CompilerGeneratedAttribute]
public void remove_InitialResponseReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InitialResponseEvent>> value);
    [CompilerGeneratedAttribute]
public void add_InvokeCompleteReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InvokeWithResponseStreamCompleteEvent>> value);
    [CompilerGeneratedAttribute]
public void remove_InvokeCompleteReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InvokeWithResponseStreamCompleteEvent>> value);
    [CompilerGeneratedAttribute]
public void add_PayloadChunkReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InvokeResponseStreamUpdate>> value);
    [CompilerGeneratedAttribute]
public void remove_PayloadChunkReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InvokeResponseStreamUpdate>> value);
    private bool RaiseEvent(EventHandler`1<EventStreamEventReceivedArgs`1<T>> eventHandler, IEventStreamEvent ev);
    [CompilerGeneratedAttribute]
private void <.ctor>b__26_0(object sender, EventStreamEventReceivedArgs`1<IEventStreamEvent> args);
    [CompilerGeneratedAttribute]
private void <.ctor>b__26_1(object sender, EventStreamExceptionReceivedArgs`1<LambdaEventStreamException> args);
    [CompilerGeneratedAttribute]
private void <.ctor>b__26_2(object sender, EventStreamMessageReceivedEventArgs args);
}
public class Amazon.Lambda.Model.KMSAccessDeniedException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public KMSAccessDeniedException(string message);
    public KMSAccessDeniedException(string message, Exception innerException);
    public KMSAccessDeniedException(Exception innerException);
    public KMSAccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSAccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.KMSDisabledException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public KMSDisabledException(string message);
    public KMSDisabledException(string message, Exception innerException);
    public KMSDisabledException(Exception innerException);
    public KMSDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSDisabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.KMSInvalidStateException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public KMSInvalidStateException(string message);
    public KMSInvalidStateException(string message, Exception innerException);
    public KMSInvalidStateException(Exception innerException);
    public KMSInvalidStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSInvalidStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.KMSNotFoundException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public KMSNotFoundException(string message);
    public KMSNotFoundException(string message, Exception innerException);
    public KMSNotFoundException(Exception innerException);
    public KMSNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.LambdaPaginatorFactory : object {
    private IAmazonLambda client;
    internal LambdaPaginatorFactory(IAmazonLambda client);
    public sealed virtual IListAliasesPaginator ListAliases(ListAliasesRequest request);
    public sealed virtual IListCodeSigningConfigsPaginator ListCodeSigningConfigs(ListCodeSigningConfigsRequest request);
    public sealed virtual IListEventSourceMappingsPaginator ListEventSourceMappings(ListEventSourceMappingsRequest request);
    public sealed virtual IListFunctionEventInvokeConfigsPaginator ListFunctionEventInvokeConfigs(ListFunctionEventInvokeConfigsRequest request);
    public sealed virtual IListFunctionsPaginator ListFunctions(ListFunctionsRequest request);
    public sealed virtual IListFunctionsByCodeSigningConfigPaginator ListFunctionsByCodeSigningConfig(ListFunctionsByCodeSigningConfigRequest request);
    public sealed virtual IListFunctionUrlConfigsPaginator ListFunctionUrlConfigs(ListFunctionUrlConfigsRequest request);
    public sealed virtual IListLayersPaginator ListLayers(ListLayersRequest request);
    public sealed virtual IListLayerVersionsPaginator ListLayerVersions(ListLayerVersionsRequest request);
    public sealed virtual IListProvisionedConcurrencyConfigsPaginator ListProvisionedConcurrencyConfigs(ListProvisionedConcurrencyConfigsRequest request);
    public sealed virtual IListVersionsByFunctionPaginator ListVersionsByFunction(ListVersionsByFunctionRequest request);
}
public class Amazon.Lambda.Model.Layer : object {
    private string _arn;
    private Nullable`1<long> _codeSize;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
}
public class Amazon.Lambda.Model.LayersListItem : object {
    private LayerVersionsListItem _latestMatchingVersion;
    private string _layerArn;
    private string _layerName;
    public LayerVersionsListItem LatestMatchingVersion { get; public set; }
    [AWSPropertyAttribute]
public string LayerArn { get; public set; }
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    public LayerVersionsListItem get_LatestMatchingVersion();
    public void set_LatestMatchingVersion(LayerVersionsListItem value);
    internal bool IsSetLatestMatchingVersion();
    public string get_LayerArn();
    public void set_LayerArn(string value);
    internal bool IsSetLayerArn();
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
}
public class Amazon.Lambda.Model.LayerVersionContentInput : object {
    private string _s3Bucket;
    private string _s3Key;
    private string _s3ObjectVersion;
    private MemoryStream _zipFile;
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    [AWSPropertyAttribute]
public string S3Key { get; public set; }
    [AWSPropertyAttribute]
public string S3ObjectVersion { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream ZipFile { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
    public string get_S3ObjectVersion();
    public void set_S3ObjectVersion(string value);
    internal bool IsSetS3ObjectVersion();
    public MemoryStream get_ZipFile();
    public void set_ZipFile(MemoryStream value);
    internal bool IsSetZipFile();
}
public class Amazon.Lambda.Model.LayerVersionContentOutput : object {
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private string _location;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    public string CodeSha256 { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public string Location { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
}
public class Amazon.Lambda.Model.LayerVersionsListItem : object {
    private List`1<string> _compatibleArchitectures;
    private List`1<string> _compatibleRuntimes;
    private string _createdDate;
    private string _description;
    private string _layerVersionArn;
    private string _licenseInfo;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public List`1<string> CompatibleArchitectures { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CompatibleRuntimes { get; public set; }
    public string CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string LayerVersionArn { get; public set; }
    [AWSPropertyAttribute]
public string LicenseInfo { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public List`1<string> get_CompatibleArchitectures();
    public void set_CompatibleArchitectures(List`1<string> value);
    internal bool IsSetCompatibleArchitectures();
    public List`1<string> get_CompatibleRuntimes();
    public void set_CompatibleRuntimes(List`1<string> value);
    internal bool IsSetCompatibleRuntimes();
    public string get_CreatedDate();
    public void set_CreatedDate(string value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LayerVersionArn();
    public void set_LayerVersionArn(string value);
    internal bool IsSetLayerVersionArn();
    public string get_LicenseInfo();
    public void set_LicenseInfo(string value);
    internal bool IsSetLicenseInfo();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
internal class Amazon.Lambda.Model.ListAliasesPaginator : object {
    private IAmazonLambda _client;
    private ListAliasesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAliasesResponse> Responses { get; }
    public IPaginatedEnumerable`1<AliasConfiguration> Aliases { get; }
    internal ListAliasesPaginator(IAmazonLambda client, ListAliasesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAliasesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AliasConfiguration> get_Aliases();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListAliasesPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListAliasesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAliasesResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListAliasesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListAliasesRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _functionVersion;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string FunctionVersion { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListAliasesResponse : AmazonWebServiceResponse {
    private List`1<AliasConfiguration> _aliases;
    private string _nextMarker;
    public List`1<AliasConfiguration> Aliases { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<AliasConfiguration> get_Aliases();
    public void set_Aliases(List`1<AliasConfiguration> value);
    internal bool IsSetAliases();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListCodeSigningConfigsPaginator : object {
    private IAmazonLambda _client;
    private ListCodeSigningConfigsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCodeSigningConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CodeSigningConfig> CodeSigningConfigs { get; }
    internal ListCodeSigningConfigsPaginator(IAmazonLambda client, ListCodeSigningConfigsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCodeSigningConfigsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CodeSigningConfig> get_CodeSigningConfigs();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListCodeSigningConfigsPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListCodeSigningConfigsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListCodeSigningConfigsResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListCodeSigningConfigsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListCodeSigningConfigsRequest : AmazonLambdaRequest {
    private string _marker;
    private Nullable`1<int> _maxItems;
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListCodeSigningConfigsResponse : AmazonWebServiceResponse {
    private List`1<CodeSigningConfig> _codeSigningConfigs;
    private string _nextMarker;
    public List`1<CodeSigningConfig> CodeSigningConfigs { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<CodeSigningConfig> get_CodeSigningConfigs();
    public void set_CodeSigningConfigs(List`1<CodeSigningConfig> value);
    internal bool IsSetCodeSigningConfigs();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListEventSourceMappingsPaginator : object {
    private IAmazonLambda _client;
    private ListEventSourceMappingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListEventSourceMappingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<EventSourceMappingConfiguration> EventSourceMappings { get; }
    internal ListEventSourceMappingsPaginator(IAmazonLambda client, ListEventSourceMappingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListEventSourceMappingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<EventSourceMappingConfiguration> get_EventSourceMappings();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListEventSourceMappingsPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListEventSourceMappingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListEventSourceMappingsResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListEventSourceMappingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListEventSourceMappingsRequest : AmazonLambdaRequest {
    private string _eventSourceArn;
    private string _functionName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    public string EventSourceArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListEventSourceMappingsResponse : AmazonWebServiceResponse {
    private List`1<EventSourceMappingConfiguration> _eventSourceMappings;
    private string _nextMarker;
    public List`1<EventSourceMappingConfiguration> EventSourceMappings { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<EventSourceMappingConfiguration> get_EventSourceMappings();
    public void set_EventSourceMappings(List`1<EventSourceMappingConfiguration> value);
    internal bool IsSetEventSourceMappings();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListFunctionEventInvokeConfigsPaginator : object {
    private IAmazonLambda _client;
    private ListFunctionEventInvokeConfigsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFunctionEventInvokeConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionEventInvokeConfig> FunctionEventInvokeConfigs { get; }
    internal ListFunctionEventInvokeConfigsPaginator(IAmazonLambda client, ListFunctionEventInvokeConfigsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFunctionEventInvokeConfigsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FunctionEventInvokeConfig> get_FunctionEventInvokeConfigs();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListFunctionEventInvokeConfigsPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListFunctionEventInvokeConfigsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFunctionEventInvokeConfigsResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListFunctionEventInvokeConfigsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListFunctionEventInvokeConfigsRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListFunctionEventInvokeConfigsResponse : AmazonWebServiceResponse {
    private List`1<FunctionEventInvokeConfig> _functionEventInvokeConfigs;
    private string _nextMarker;
    public List`1<FunctionEventInvokeConfig> FunctionEventInvokeConfigs { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<FunctionEventInvokeConfig> get_FunctionEventInvokeConfigs();
    public void set_FunctionEventInvokeConfigs(List`1<FunctionEventInvokeConfig> value);
    internal bool IsSetFunctionEventInvokeConfigs();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListFunctionsByCodeSigningConfigPaginator : object {
    private IAmazonLambda _client;
    private ListFunctionsByCodeSigningConfigRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFunctionsByCodeSigningConfigResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> FunctionArns { get; }
    internal ListFunctionsByCodeSigningConfigPaginator(IAmazonLambda client, ListFunctionsByCodeSigningConfigRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFunctionsByCodeSigningConfigResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_FunctionArns();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListFunctionsByCodeSigningConfigPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListFunctionsByCodeSigningConfigResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFunctionsByCodeSigningConfigResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListFunctionsByCodeSigningConfigResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListFunctionsByCodeSigningConfigRequest : AmazonLambdaRequest {
    private string _codeSigningConfigArn;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListFunctionsByCodeSigningConfigResponse : AmazonWebServiceResponse {
    private List`1<string> _functionArns;
    private string _nextMarker;
    public List`1<string> FunctionArns { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<string> get_FunctionArns();
    public void set_FunctionArns(List`1<string> value);
    internal bool IsSetFunctionArns();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListFunctionsPaginator : object {
    private IAmazonLambda _client;
    private ListFunctionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFunctionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionConfiguration> Functions { get; }
    internal ListFunctionsPaginator(IAmazonLambda client, ListFunctionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFunctionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FunctionConfiguration> get_Functions();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListFunctionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListFunctionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFunctionsResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListFunctionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListFunctionsRequest : AmazonLambdaRequest {
    private FunctionVersion _functionVersion;
    private string _marker;
    private string _masterRegion;
    private Nullable`1<int> _maxItems;
    public FunctionVersion FunctionVersion { get; public set; }
    public string Marker { get; public set; }
    public string MasterRegion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public FunctionVersion get_FunctionVersion();
    public void set_FunctionVersion(FunctionVersion value);
    internal bool IsSetFunctionVersion();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MasterRegion();
    public void set_MasterRegion(string value);
    internal bool IsSetMasterRegion();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListFunctionsResponse : AmazonWebServiceResponse {
    private List`1<FunctionConfiguration> _functions;
    private string _nextMarker;
    public List`1<FunctionConfiguration> Functions { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<FunctionConfiguration> get_Functions();
    public void set_Functions(List`1<FunctionConfiguration> value);
    internal bool IsSetFunctions();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListFunctionUrlConfigsPaginator : object {
    private IAmazonLambda _client;
    private ListFunctionUrlConfigsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFunctionUrlConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionUrlConfig> FunctionUrlConfigs { get; }
    internal ListFunctionUrlConfigsPaginator(IAmazonLambda client, ListFunctionUrlConfigsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFunctionUrlConfigsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FunctionUrlConfig> get_FunctionUrlConfigs();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListFunctionUrlConfigsPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListFunctionUrlConfigsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFunctionUrlConfigsResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListFunctionUrlConfigsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListFunctionUrlConfigsRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListFunctionUrlConfigsResponse : AmazonWebServiceResponse {
    private List`1<FunctionUrlConfig> _functionUrlConfigs;
    private string _nextMarker;
    [AWSPropertyAttribute]
public List`1<FunctionUrlConfig> FunctionUrlConfigs { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<FunctionUrlConfig> get_FunctionUrlConfigs();
    public void set_FunctionUrlConfigs(List`1<FunctionUrlConfig> value);
    internal bool IsSetFunctionUrlConfigs();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListLayersPaginator : object {
    private IAmazonLambda _client;
    private ListLayersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListLayersResponse> Responses { get; }
    public IPaginatedEnumerable`1<LayersListItem> Layers { get; }
    internal ListLayersPaginator(IAmazonLambda client, ListLayersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListLayersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LayersListItem> get_Layers();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListLayersPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListLayersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListLayersResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListLayersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListLayersRequest : AmazonLambdaRequest {
    private Architecture _compatibleArchitecture;
    private Runtime _compatibleRuntime;
    private string _marker;
    private Nullable`1<int> _maxItems;
    public Architecture CompatibleArchitecture { get; public set; }
    public Runtime CompatibleRuntime { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public Architecture get_CompatibleArchitecture();
    public void set_CompatibleArchitecture(Architecture value);
    internal bool IsSetCompatibleArchitecture();
    public Runtime get_CompatibleRuntime();
    public void set_CompatibleRuntime(Runtime value);
    internal bool IsSetCompatibleRuntime();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListLayersResponse : AmazonWebServiceResponse {
    private List`1<LayersListItem> _layers;
    private string _nextMarker;
    public List`1<LayersListItem> Layers { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<LayersListItem> get_Layers();
    public void set_Layers(List`1<LayersListItem> value);
    internal bool IsSetLayers();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListLayerVersionsPaginator : object {
    private IAmazonLambda _client;
    private ListLayerVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListLayerVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LayerVersionsListItem> LayerVersions { get; }
    internal ListLayerVersionsPaginator(IAmazonLambda client, ListLayerVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListLayerVersionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LayerVersionsListItem> get_LayerVersions();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListLayerVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListLayerVersionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListLayerVersionsResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListLayerVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListLayerVersionsRequest : AmazonLambdaRequest {
    private Architecture _compatibleArchitecture;
    private Runtime _compatibleRuntime;
    private string _layerName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    public Architecture CompatibleArchitecture { get; public set; }
    public Runtime CompatibleRuntime { get; public set; }
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public Architecture get_CompatibleArchitecture();
    public void set_CompatibleArchitecture(Architecture value);
    internal bool IsSetCompatibleArchitecture();
    public Runtime get_CompatibleRuntime();
    public void set_CompatibleRuntime(Runtime value);
    internal bool IsSetCompatibleRuntime();
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListLayerVersionsResponse : AmazonWebServiceResponse {
    private List`1<LayerVersionsListItem> _layerVersions;
    private string _nextMarker;
    public List`1<LayerVersionsListItem> LayerVersions { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<LayerVersionsListItem> get_LayerVersions();
    public void set_LayerVersions(List`1<LayerVersionsListItem> value);
    internal bool IsSetLayerVersions();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsPaginator : object {
    private IAmazonLambda _client;
    private ListProvisionedConcurrencyConfigsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListProvisionedConcurrencyConfigsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ProvisionedConcurrencyConfigListItem> ProvisionedConcurrencyConfigs { get; }
    internal ListProvisionedConcurrencyConfigsPaginator(IAmazonLambda client, ListProvisionedConcurrencyConfigsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListProvisionedConcurrencyConfigsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ProvisionedConcurrencyConfigListItem> get_ProvisionedConcurrencyConfigs();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListProvisionedConcurrencyConfigsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListProvisionedConcurrencyConfigsResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<ProvisionedConcurrencyConfigListItem> _provisionedConcurrencyConfigs;
    public string NextMarker { get; public set; }
    public List`1<ProvisionedConcurrencyConfigListItem> ProvisionedConcurrencyConfigs { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<ProvisionedConcurrencyConfigListItem> get_ProvisionedConcurrencyConfigs();
    public void set_ProvisionedConcurrencyConfigs(List`1<ProvisionedConcurrencyConfigListItem> value);
    internal bool IsSetProvisionedConcurrencyConfigs();
}
public class Amazon.Lambda.Model.ListTagsRequest : AmazonLambdaRequest {
    private string _resource;
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
}
public class Amazon.Lambda.Model.ListTagsResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
internal class Amazon.Lambda.Model.ListVersionsByFunctionPaginator : object {
    private IAmazonLambda _client;
    private ListVersionsByFunctionRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListVersionsByFunctionResponse> Responses { get; }
    public IPaginatedEnumerable`1<FunctionConfiguration> Versions { get; }
    internal ListVersionsByFunctionPaginator(IAmazonLambda client, ListVersionsByFunctionRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListVersionsByFunctionResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FunctionConfiguration> get_Versions();
    [AsyncIteratorStateMachineAttribute("Amazon.Lambda.Model.ListVersionsByFunctionPaginator/<Amazon-Runtime-IPaginator<Amazon-Lambda-Model-ListVersionsByFunctionResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListVersionsByFunctionResponse> Amazon.Runtime.IPaginator<Amazon.Lambda.Model.ListVersionsByFunctionResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Lambda.Model.ListVersionsByFunctionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListVersionsByFunctionResponse : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<FunctionConfiguration> _versions;
    public string NextMarker { get; public set; }
    public List`1<FunctionConfiguration> Versions { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<FunctionConfiguration> get_Versions();
    public void set_Versions(List`1<FunctionConfiguration> value);
    internal bool IsSetVersions();
}
public class Amazon.Lambda.Model.LoggingConfig : object {
    private ApplicationLogLevel _applicationLogLevel;
    private LogFormat _logFormat;
    private string _logGroup;
    private SystemLogLevel _systemLogLevel;
    public ApplicationLogLevel ApplicationLogLevel { get; public set; }
    public LogFormat LogFormat { get; public set; }
    [AWSPropertyAttribute]
public string LogGroup { get; public set; }
    public SystemLogLevel SystemLogLevel { get; public set; }
    public ApplicationLogLevel get_ApplicationLogLevel();
    public void set_ApplicationLogLevel(ApplicationLogLevel value);
    internal bool IsSetApplicationLogLevel();
    public LogFormat get_LogFormat();
    public void set_LogFormat(LogFormat value);
    internal bool IsSetLogFormat();
    public string get_LogGroup();
    public void set_LogGroup(string value);
    internal bool IsSetLogGroup();
    public SystemLogLevel get_SystemLogLevel();
    public void set_SystemLogLevel(SystemLogLevel value);
    internal bool IsSetSystemLogLevel();
}
public class Amazon.Lambda.Model.OnFailure : object {
    private string _destination;
    [AWSPropertyAttribute]
public string Destination { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
}
public class Amazon.Lambda.Model.OnSuccess : object {
    private string _destination;
    [AWSPropertyAttribute]
public string Destination { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
}
public class Amazon.Lambda.Model.PolicyLengthExceededException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public PolicyLengthExceededException(string message);
    public PolicyLengthExceededException(string message, Exception innerException);
    public PolicyLengthExceededException(Exception innerException);
    public PolicyLengthExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyLengthExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.PreconditionFailedException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public PreconditionFailedException(string message);
    public PreconditionFailedException(string message, Exception innerException);
    public PreconditionFailedException(Exception innerException);
    public PreconditionFailedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PreconditionFailedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.ProvisionedConcurrencyConfigListItem : object {
    private Nullable`1<int> _allocatedProvisionedConcurrentExecutions;
    private Nullable`1<int> _availableProvisionedConcurrentExecutions;
    private string _functionArn;
    private string _lastModified;
    private Nullable`1<int> _requestedProvisionedConcurrentExecutions;
    private ProvisionedConcurrencyStatusEnum _status;
    private string _statusReason;
    [AWSPropertyAttribute]
public Nullable`1<int> AllocatedProvisionedConcurrentExecutions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AvailableProvisionedConcurrentExecutions { get; public set; }
    public string FunctionArn { get; public set; }
    public string LastModified { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RequestedProvisionedConcurrentExecutions { get; public set; }
    public ProvisionedConcurrencyStatusEnum Status { get; public set; }
    public string StatusReason { get; public set; }
    public Nullable`1<int> get_AllocatedProvisionedConcurrentExecutions();
    public void set_AllocatedProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetAllocatedProvisionedConcurrentExecutions();
    public Nullable`1<int> get_AvailableProvisionedConcurrentExecutions();
    public void set_AvailableProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetAvailableProvisionedConcurrentExecutions();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public Nullable`1<int> get_RequestedProvisionedConcurrentExecutions();
    public void set_RequestedProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetRequestedProvisionedConcurrentExecutions();
    public ProvisionedConcurrencyStatusEnum get_Status();
    public void set_Status(ProvisionedConcurrencyStatusEnum value);
    internal bool IsSetStatus();
    public string get_StatusReason();
    public void set_StatusReason(string value);
    internal bool IsSetStatusReason();
}
public class Amazon.Lambda.Model.ProvisionedConcurrencyConfigNotFoundException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public ProvisionedConcurrencyConfigNotFoundException(string message);
    public ProvisionedConcurrencyConfigNotFoundException(string message, Exception innerException);
    public ProvisionedConcurrencyConfigNotFoundException(Exception innerException);
    public ProvisionedConcurrencyConfigNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ProvisionedConcurrencyConfigNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.PublishLayerVersionRequest : AmazonLambdaRequest {
    private List`1<string> _compatibleArchitectures;
    private List`1<string> _compatibleRuntimes;
    private LayerVersionContentInput _content;
    private string _description;
    private string _layerName;
    private string _licenseInfo;
    [AWSPropertyAttribute]
public List`1<string> CompatibleArchitectures { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CompatibleRuntimes { get; public set; }
    [AWSPropertyAttribute]
public LayerVersionContentInput Content { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    [AWSPropertyAttribute]
public string LicenseInfo { get; public set; }
    public List`1<string> get_CompatibleArchitectures();
    public void set_CompatibleArchitectures(List`1<string> value);
    internal bool IsSetCompatibleArchitectures();
    public List`1<string> get_CompatibleRuntimes();
    public void set_CompatibleRuntimes(List`1<string> value);
    internal bool IsSetCompatibleRuntimes();
    public LayerVersionContentInput get_Content();
    public void set_Content(LayerVersionContentInput value);
    internal bool IsSetContent();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
    public string get_LicenseInfo();
    public void set_LicenseInfo(string value);
    internal bool IsSetLicenseInfo();
}
public class Amazon.Lambda.Model.PublishLayerVersionResponse : AmazonWebServiceResponse {
    private List`1<string> _compatibleArchitectures;
    private List`1<string> _compatibleRuntimes;
    private LayerVersionContentOutput _content;
    private string _createdDate;
    private string _description;
    private string _layerArn;
    private string _layerVersionArn;
    private string _licenseInfo;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public List`1<string> CompatibleArchitectures { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CompatibleRuntimes { get; public set; }
    public LayerVersionContentOutput Content { get; public set; }
    public string CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string LayerArn { get; public set; }
    [AWSPropertyAttribute]
public string LayerVersionArn { get; public set; }
    [AWSPropertyAttribute]
public string LicenseInfo { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public List`1<string> get_CompatibleArchitectures();
    public void set_CompatibleArchitectures(List`1<string> value);
    internal bool IsSetCompatibleArchitectures();
    public List`1<string> get_CompatibleRuntimes();
    public void set_CompatibleRuntimes(List`1<string> value);
    internal bool IsSetCompatibleRuntimes();
    public LayerVersionContentOutput get_Content();
    public void set_Content(LayerVersionContentOutput value);
    internal bool IsSetContent();
    public string get_CreatedDate();
    public void set_CreatedDate(string value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LayerArn();
    public void set_LayerArn(string value);
    internal bool IsSetLayerArn();
    public string get_LayerVersionArn();
    public void set_LayerVersionArn(string value);
    internal bool IsSetLayerVersionArn();
    public string get_LicenseInfo();
    public void set_LicenseInfo(string value);
    internal bool IsSetLicenseInfo();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.Lambda.Model.PublishVersionRequest : AmazonLambdaRequest {
    private string _codeSha256;
    private string _description;
    private string _functionName;
    private string _revisionId;
    public string CodeSha256 { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string RevisionId { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
}
public class Amazon.Lambda.Model.PublishVersionResponse : AmazonWebServiceResponse {
    private List`1<string> _architectures;
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private EnvironmentResponse _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private ImageConfigResponse _imageConfigResponse;
    private string _kmsKeyArn;
    private string _lastModified;
    private LastUpdateStatus _lastUpdateStatus;
    private string _lastUpdateStatusReason;
    private LastUpdateStatusReasonCode _lastUpdateStatusReasonCode;
    private List`1<Layer> _layers;
    private LoggingConfig _loggingConfig;
    private string _masterArn;
    private Nullable`1<int> _memorySize;
    private PackageType _packageType;
    private string _revisionId;
    private string _role;
    private Runtime _runtime;
    private RuntimeVersionConfig _runtimeVersionConfig;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    private SnapStartResponse _snapStart;
    private State _state;
    private string _stateReason;
    private StateReasonCode _stateReasonCode;
    private Nullable`1<int> _timeout;
    private TracingConfigResponse _tracingConfig;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    public string CodeSha256 { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EnvironmentResponse Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfigResponse ImageConfigResponse { get; public set; }
    public string KMSKeyArn { get; public set; }
    public string LastModified { get; public set; }
    public LastUpdateStatus LastUpdateStatus { get; public set; }
    public string LastUpdateStatusReason { get; public set; }
    public LastUpdateStatusReasonCode LastUpdateStatusReasonCode { get; public set; }
    public List`1<Layer> Layers { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    public string MasterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public PackageType PackageType { get; public set; }
    public string RevisionId { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public RuntimeVersionConfig RuntimeVersionConfig { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public SnapStartResponse SnapStart { get; public set; }
    public State State { get; public set; }
    public string StateReason { get; public set; }
    public StateReasonCode StateReasonCode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfigResponse TracingConfig { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EnvironmentResponse get_Environment();
    public void set_Environment(EnvironmentResponse value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfigResponse get_ImageConfigResponse();
    public void set_ImageConfigResponse(ImageConfigResponse value);
    internal bool IsSetImageConfigResponse();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public LastUpdateStatus get_LastUpdateStatus();
    public void set_LastUpdateStatus(LastUpdateStatus value);
    internal bool IsSetLastUpdateStatus();
    public string get_LastUpdateStatusReason();
    public void set_LastUpdateStatusReason(string value);
    internal bool IsSetLastUpdateStatusReason();
    public LastUpdateStatusReasonCode get_LastUpdateStatusReasonCode();
    public void set_LastUpdateStatusReasonCode(LastUpdateStatusReasonCode value);
    internal bool IsSetLastUpdateStatusReasonCode();
    public List`1<Layer> get_Layers();
    public void set_Layers(List`1<Layer> value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public string get_MasterArn();
    public void set_MasterArn(string value);
    internal bool IsSetMasterArn();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public PackageType get_PackageType();
    public void set_PackageType(PackageType value);
    internal bool IsSetPackageType();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public RuntimeVersionConfig get_RuntimeVersionConfig();
    public void set_RuntimeVersionConfig(RuntimeVersionConfig value);
    internal bool IsSetRuntimeVersionConfig();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
    public SnapStartResponse get_SnapStart();
    public void set_SnapStart(SnapStartResponse value);
    internal bool IsSetSnapStart();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public StateReasonCode get_StateReasonCode();
    public void set_StateReasonCode(StateReasonCode value);
    internal bool IsSetStateReasonCode();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfigResponse get_TracingConfig();
    public void set_TracingConfig(TracingConfigResponse value);
    internal bool IsSetTracingConfig();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.PutFunctionCodeSigningConfigRequest : AmazonLambdaRequest {
    private string _codeSigningConfigArn;
    private string _functionName;
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.PutFunctionCodeSigningConfigResponse : AmazonWebServiceResponse {
    private string _codeSigningConfigArn;
    private string _functionName;
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.PutFunctionConcurrencyRequest : AmazonLambdaRequest {
    private string _functionName;
    private Nullable`1<int> _reservedConcurrentExecutions;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ReservedConcurrentExecutions { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public Nullable`1<int> get_ReservedConcurrentExecutions();
    public void set_ReservedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetReservedConcurrentExecutions();
}
public class Amazon.Lambda.Model.PutFunctionConcurrencyResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _reservedConcurrentExecutions;
    [AWSPropertyAttribute]
public Nullable`1<int> ReservedConcurrentExecutions { get; public set; }
    public Nullable`1<int> get_ReservedConcurrentExecutions();
    public void set_ReservedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetReservedConcurrentExecutions();
}
public class Amazon.Lambda.Model.PutFunctionEventInvokeConfigRequest : AmazonLambdaRequest {
    private DestinationConfig _destinationConfig;
    private string _functionName;
    private Nullable`1<int> _maximumEventAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private string _qualifier;
    public DestinationConfig DestinationConfig { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumEventAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public Nullable`1<int> get_MaximumEventAgeInSeconds();
    public void set_MaximumEventAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumEventAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.PutFunctionEventInvokeConfigResponse : AmazonWebServiceResponse {
    private DestinationConfig _destinationConfig;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private Nullable`1<int> _maximumEventAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    public DestinationConfig DestinationConfig { get; public set; }
    public string FunctionArn { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumEventAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public Nullable`1<int> get_MaximumEventAgeInSeconds();
    public void set_MaximumEventAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumEventAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
}
public class Amazon.Lambda.Model.PutProvisionedConcurrencyConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private Nullable`1<int> _provisionedConcurrentExecutions;
    private string _qualifier;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ProvisionedConcurrentExecutions { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public Nullable`1<int> get_ProvisionedConcurrentExecutions();
    public void set_ProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetProvisionedConcurrentExecutions();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.PutProvisionedConcurrencyConfigResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _allocatedProvisionedConcurrentExecutions;
    private Nullable`1<int> _availableProvisionedConcurrentExecutions;
    private string _lastModified;
    private Nullable`1<int> _requestedProvisionedConcurrentExecutions;
    private ProvisionedConcurrencyStatusEnum _status;
    private string _statusReason;
    [AWSPropertyAttribute]
public Nullable`1<int> AllocatedProvisionedConcurrentExecutions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AvailableProvisionedConcurrentExecutions { get; public set; }
    public string LastModified { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RequestedProvisionedConcurrentExecutions { get; public set; }
    public ProvisionedConcurrencyStatusEnum Status { get; public set; }
    public string StatusReason { get; public set; }
    public Nullable`1<int> get_AllocatedProvisionedConcurrentExecutions();
    public void set_AllocatedProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetAllocatedProvisionedConcurrentExecutions();
    public Nullable`1<int> get_AvailableProvisionedConcurrentExecutions();
    public void set_AvailableProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetAvailableProvisionedConcurrentExecutions();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public Nullable`1<int> get_RequestedProvisionedConcurrentExecutions();
    public void set_RequestedProvisionedConcurrentExecutions(Nullable`1<int> value);
    internal bool IsSetRequestedProvisionedConcurrentExecutions();
    public ProvisionedConcurrencyStatusEnum get_Status();
    public void set_Status(ProvisionedConcurrencyStatusEnum value);
    internal bool IsSetStatus();
    public string get_StatusReason();
    public void set_StatusReason(string value);
    internal bool IsSetStatusReason();
}
public class Amazon.Lambda.Model.PutRuntimeManagementConfigRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    private string _runtimeVersionArn;
    private UpdateRuntimeOn _updateRuntimeOn;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    [AWSPropertyAttribute]
public string RuntimeVersionArn { get; public set; }
    [AWSPropertyAttribute]
public UpdateRuntimeOn UpdateRuntimeOn { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
    public string get_RuntimeVersionArn();
    public void set_RuntimeVersionArn(string value);
    internal bool IsSetRuntimeVersionArn();
    public UpdateRuntimeOn get_UpdateRuntimeOn();
    public void set_UpdateRuntimeOn(UpdateRuntimeOn value);
    internal bool IsSetUpdateRuntimeOn();
}
public class Amazon.Lambda.Model.PutRuntimeManagementConfigResponse : AmazonWebServiceResponse {
    private string _functionArn;
    private string _runtimeVersionArn;
    private UpdateRuntimeOn _updateRuntimeOn;
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string RuntimeVersionArn { get; public set; }
    [AWSPropertyAttribute]
public UpdateRuntimeOn UpdateRuntimeOn { get; public set; }
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_RuntimeVersionArn();
    public void set_RuntimeVersionArn(string value);
    internal bool IsSetRuntimeVersionArn();
    public UpdateRuntimeOn get_UpdateRuntimeOn();
    public void set_UpdateRuntimeOn(UpdateRuntimeOn value);
    internal bool IsSetUpdateRuntimeOn();
}
public class Amazon.Lambda.Model.RecursiveInvocationException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public RecursiveInvocationException(string message);
    public RecursiveInvocationException(string message, Exception innerException);
    public RecursiveInvocationException(Exception innerException);
    public RecursiveInvocationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RecursiveInvocationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.RemoveLayerVersionPermissionRequest : AmazonLambdaRequest {
    private string _layerName;
    private string _revisionId;
    private string _statementId;
    private Nullable`1<long> _versionNumber;
    [AWSPropertyAttribute]
public string LayerName { get; public set; }
    public string RevisionId { get; public set; }
    [AWSPropertyAttribute]
public string StatementId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VersionNumber { get; public set; }
    public string get_LayerName();
    public void set_LayerName(string value);
    internal bool IsSetLayerName();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_StatementId();
    public void set_StatementId(string value);
    internal bool IsSetStatementId();
    public Nullable`1<long> get_VersionNumber();
    public void set_VersionNumber(Nullable`1<long> value);
    internal bool IsSetVersionNumber();
}
public class Amazon.Lambda.Model.RemoveLayerVersionPermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.RemovePermissionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    private string _revisionId;
    private string _statementId;
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string RevisionId { get; public set; }
    [AWSPropertyAttribute]
public string StatementId { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_StatementId();
    public void set_StatementId(string value);
    internal bool IsSetStatementId();
}
public class Amazon.Lambda.Model.RemovePermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.RequestTooLargeException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public RequestTooLargeException(string message);
    public RequestTooLargeException(string message, Exception innerException);
    public RequestTooLargeException(Exception innerException);
    public RequestTooLargeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RequestTooLargeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.ResourceConflictException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public ResourceConflictException(string message);
    public ResourceConflictException(string message, Exception innerException);
    public ResourceConflictException(Exception innerException);
    public ResourceConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.ResourceInUseException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.ResourceNotFoundException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.ResourceNotReadyException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public ResourceNotReadyException(string message);
    public ResourceNotReadyException(string message, Exception innerException);
    public ResourceNotReadyException(Exception innerException);
    public ResourceNotReadyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotReadyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.RuntimeVersionConfig : object {
    private RuntimeVersionError _error;
    private string _runtimeVersionArn;
    public RuntimeVersionError Error { get; public set; }
    [AWSPropertyAttribute]
public string RuntimeVersionArn { get; public set; }
    public RuntimeVersionError get_Error();
    public void set_Error(RuntimeVersionError value);
    internal bool IsSetError();
    public string get_RuntimeVersionArn();
    public void set_RuntimeVersionArn(string value);
    internal bool IsSetRuntimeVersionArn();
}
public class Amazon.Lambda.Model.RuntimeVersionError : object {
    private string _errorCode;
    private string _message;
    public string ErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.Lambda.Model.ScalingConfig : object {
    private Nullable`1<int> _maximumConcurrency;
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumConcurrency { get; public set; }
    public Nullable`1<int> get_MaximumConcurrency();
    public void set_MaximumConcurrency(Nullable`1<int> value);
    internal bool IsSetMaximumConcurrency();
}
public class Amazon.Lambda.Model.SelfManagedEventSource : object {
    private Dictionary`2<string, List`1<string>> _endpoints;
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Endpoints { get; public set; }
    public Dictionary`2<string, List`1<string>> get_Endpoints();
    public void set_Endpoints(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetEndpoints();
}
public class Amazon.Lambda.Model.SelfManagedKafkaEventSourceConfig : object {
    private string _consumerGroupId;
    [AWSPropertyAttribute]
public string ConsumerGroupId { get; public set; }
    public string get_ConsumerGroupId();
    public void set_ConsumerGroupId(string value);
    internal bool IsSetConsumerGroupId();
}
public class Amazon.Lambda.Model.ServiceException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public ServiceException(string message);
    public ServiceException(string message, Exception innerException);
    public ServiceException(Exception innerException);
    public ServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.SnapStart : object {
    private SnapStartApplyOn _applyOn;
    public SnapStartApplyOn ApplyOn { get; public set; }
    public SnapStartApplyOn get_ApplyOn();
    public void set_ApplyOn(SnapStartApplyOn value);
    internal bool IsSetApplyOn();
}
public class Amazon.Lambda.Model.SnapStartException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public SnapStartException(string message);
    public SnapStartException(string message, Exception innerException);
    public SnapStartException(Exception innerException);
    public SnapStartException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SnapStartException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.SnapStartNotReadyException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public SnapStartNotReadyException(string message);
    public SnapStartNotReadyException(string message, Exception innerException);
    public SnapStartNotReadyException(Exception innerException);
    public SnapStartNotReadyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SnapStartNotReadyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.SnapStartResponse : object {
    private SnapStartApplyOn _applyOn;
    private SnapStartOptimizationStatus _optimizationStatus;
    public SnapStartApplyOn ApplyOn { get; public set; }
    public SnapStartOptimizationStatus OptimizationStatus { get; public set; }
    public SnapStartApplyOn get_ApplyOn();
    public void set_ApplyOn(SnapStartApplyOn value);
    internal bool IsSetApplyOn();
    public SnapStartOptimizationStatus get_OptimizationStatus();
    public void set_OptimizationStatus(SnapStartOptimizationStatus value);
    internal bool IsSetOptimizationStatus();
}
public class Amazon.Lambda.Model.SnapStartTimeoutException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public SnapStartTimeoutException(string message);
    public SnapStartTimeoutException(string message, Exception innerException);
    public SnapStartTimeoutException(Exception innerException);
    public SnapStartTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SnapStartTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.SourceAccessConfiguration : object {
    private SourceAccessType _type;
    private string _uri;
    public SourceAccessType Type { get; public set; }
    [AWSPropertyAttribute]
public string URI { get; public set; }
    public SourceAccessType get_Type();
    public void set_Type(SourceAccessType value);
    internal bool IsSetType();
    public string get_URI();
    public void set_URI(string value);
    internal bool IsSetURI();
}
public class Amazon.Lambda.Model.SubnetIPAddressLimitReachedException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public SubnetIPAddressLimitReachedException(string message);
    public SubnetIPAddressLimitReachedException(string message, Exception innerException);
    public SubnetIPAddressLimitReachedException(Exception innerException);
    public SubnetIPAddressLimitReachedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubnetIPAddressLimitReachedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.TagResourceRequest : AmazonLambdaRequest {
    private string _resource;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Lambda.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.TooManyRequestsException : AmazonLambdaException {
    private ThrottleReason _reason;
    private string _retryAfterSeconds;
    private string _type;
    public ThrottleReason Reason { get; public set; }
    public string RetryAfterSeconds { get; public set; }
    public string Type { get; public set; }
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottleReason get_Reason();
    public void set_Reason(ThrottleReason value);
    internal bool IsSetReason();
    public string get_RetryAfterSeconds();
    public void set_RetryAfterSeconds(string value);
    internal bool IsSetRetryAfterSeconds();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.TracingConfig : object {
    private TracingMode _mode;
    public TracingMode Mode { get; public set; }
    public TracingMode get_Mode();
    public void set_Mode(TracingMode value);
    internal bool IsSetMode();
}
public class Amazon.Lambda.Model.TracingConfigResponse : object {
    private TracingMode _mode;
    public TracingMode Mode { get; public set; }
    public TracingMode get_Mode();
    public void set_Mode(TracingMode value);
    internal bool IsSetMode();
}
public class Amazon.Lambda.Model.UnsupportedMediaTypeException : AmazonLambdaException {
    private string _type;
    public string Type { get; public set; }
    public UnsupportedMediaTypeException(string message);
    public UnsupportedMediaTypeException(string message, Exception innerException);
    public UnsupportedMediaTypeException(Exception innerException);
    public UnsupportedMediaTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedMediaTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Lambda.Model.UntagResourceRequest : AmazonLambdaRequest {
    private string _resource;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.Lambda.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.UpdateAliasRequest : AmazonLambdaRequest {
    private string _description;
    private string _functionName;
    private string _functionVersion;
    private string _name;
    private string _revisionId;
    private AliasRoutingConfiguration _routingConfig;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string FunctionVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RevisionId { get; public set; }
    public AliasRoutingConfiguration RoutingConfig { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public AliasRoutingConfiguration get_RoutingConfig();
    public void set_RoutingConfig(AliasRoutingConfiguration value);
    internal bool IsSetRoutingConfig();
}
public class Amazon.Lambda.Model.UpdateAliasResponse : AmazonWebServiceResponse {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    private string _revisionId;
    private AliasRoutingConfiguration _routingConfig;
    public string AliasArn { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FunctionVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RevisionId { get; public set; }
    public AliasRoutingConfiguration RoutingConfig { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public AliasRoutingConfiguration get_RoutingConfig();
    public void set_RoutingConfig(AliasRoutingConfiguration value);
    internal bool IsSetRoutingConfig();
}
public class Amazon.Lambda.Model.UpdateCodeSigningConfigRequest : AmazonLambdaRequest {
    private AllowedPublishers _allowedPublishers;
    private string _codeSigningConfigArn;
    private CodeSigningPolicies _codeSigningPolicies;
    private string _description;
    public AllowedPublishers AllowedPublishers { get; public set; }
    [AWSPropertyAttribute]
public string CodeSigningConfigArn { get; public set; }
    public CodeSigningPolicies CodeSigningPolicies { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public AllowedPublishers get_AllowedPublishers();
    public void set_AllowedPublishers(AllowedPublishers value);
    internal bool IsSetAllowedPublishers();
    public string get_CodeSigningConfigArn();
    public void set_CodeSigningConfigArn(string value);
    internal bool IsSetCodeSigningConfigArn();
    public CodeSigningPolicies get_CodeSigningPolicies();
    public void set_CodeSigningPolicies(CodeSigningPolicies value);
    internal bool IsSetCodeSigningPolicies();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.Lambda.Model.UpdateCodeSigningConfigResponse : AmazonWebServiceResponse {
    private CodeSigningConfig _codeSigningConfig;
    [AWSPropertyAttribute]
public CodeSigningConfig CodeSigningConfig { get; public set; }
    public CodeSigningConfig get_CodeSigningConfig();
    public void set_CodeSigningConfig(CodeSigningConfig value);
    internal bool IsSetCodeSigningConfig();
}
public class Amazon.Lambda.Model.UpdateEventSourceMappingRequest : AmazonLambdaRequest {
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _bisectBatchOnFunctionError;
    private DestinationConfig _destinationConfig;
    private DocumentDBEventSourceConfig _documentDBEventSourceConfig;
    private Nullable`1<bool> _enabled;
    private FilterCriteria _filterCriteria;
    private string _functionName;
    private List`1<string> _functionResponseTypes;
    private Nullable`1<int> _maximumBatchingWindowInSeconds;
    private Nullable`1<int> _maximumRecordAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private Nullable`1<int> _parallelizationFactor;
    private ScalingConfig _scalingConfig;
    private List`1<SourceAccessConfiguration> _sourceAccessConfigurations;
    private Nullable`1<int> _tumblingWindowInSeconds;
    private string _uuid;
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<bool> BisectBatchOnFunctionError { get; public set; }
    public DestinationConfig DestinationConfig { get; public set; }
    public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public FilterCriteria FilterCriteria { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionResponseTypes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumBatchingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRecordAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ParallelizationFactor { get; public set; }
    public ScalingConfig ScalingConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<SourceAccessConfiguration> SourceAccessConfigurations { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TumblingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public string UUID { get; public set; }
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<bool> get_BisectBatchOnFunctionError();
    public void set_BisectBatchOnFunctionError(Nullable`1<bool> value);
    internal bool IsSetBisectBatchOnFunctionError();
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public DocumentDBEventSourceConfig get_DocumentDBEventSourceConfig();
    public void set_DocumentDBEventSourceConfig(DocumentDBEventSourceConfig value);
    internal bool IsSetDocumentDBEventSourceConfig();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public FilterCriteria get_FilterCriteria();
    public void set_FilterCriteria(FilterCriteria value);
    internal bool IsSetFilterCriteria();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public List`1<string> get_FunctionResponseTypes();
    public void set_FunctionResponseTypes(List`1<string> value);
    internal bool IsSetFunctionResponseTypes();
    public Nullable`1<int> get_MaximumBatchingWindowInSeconds();
    public void set_MaximumBatchingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumBatchingWindowInSeconds();
    public Nullable`1<int> get_MaximumRecordAgeInSeconds();
    public void set_MaximumRecordAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumRecordAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public Nullable`1<int> get_ParallelizationFactor();
    public void set_ParallelizationFactor(Nullable`1<int> value);
    internal bool IsSetParallelizationFactor();
    public ScalingConfig get_ScalingConfig();
    public void set_ScalingConfig(ScalingConfig value);
    internal bool IsSetScalingConfig();
    public List`1<SourceAccessConfiguration> get_SourceAccessConfigurations();
    public void set_SourceAccessConfigurations(List`1<SourceAccessConfiguration> value);
    internal bool IsSetSourceAccessConfigurations();
    public Nullable`1<int> get_TumblingWindowInSeconds();
    public void set_TumblingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetTumblingWindowInSeconds();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.UpdateEventSourceMappingResponse : AmazonWebServiceResponse {
    private AmazonManagedKafkaEventSourceConfig _amazonManagedKafkaEventSourceConfig;
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _bisectBatchOnFunctionError;
    private DestinationConfig _destinationConfig;
    private DocumentDBEventSourceConfig _documentDBEventSourceConfig;
    private string _eventSourceArn;
    private FilterCriteria _filterCriteria;
    private string _functionArn;
    private List`1<string> _functionResponseTypes;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private Nullable`1<int> _maximumBatchingWindowInSeconds;
    private Nullable`1<int> _maximumRecordAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private Nullable`1<int> _parallelizationFactor;
    private List`1<string> _queues;
    private ScalingConfig _scalingConfig;
    private SelfManagedEventSource _selfManagedEventSource;
    private SelfManagedKafkaEventSourceConfig _selfManagedKafkaEventSourceConfig;
    private List`1<SourceAccessConfiguration> _sourceAccessConfigurations;
    private EventSourcePosition _startingPosition;
    private Nullable`1<DateTime> _startingPositionTimestamp;
    private string _state;
    private string _stateTransitionReason;
    private List`1<string> _topics;
    private Nullable`1<int> _tumblingWindowInSeconds;
    private string _uuid;
    public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> BatchSize { get; public set; }
    public Nullable`1<bool> BisectBatchOnFunctionError { get; public set; }
    public DestinationConfig DestinationConfig { get; public set; }
    public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; public set; }
    public string EventSourceArn { get; public set; }
    public FilterCriteria FilterCriteria { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionResponseTypes { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumBatchingWindowInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRecordAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ParallelizationFactor { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Queues { get; public set; }
    public ScalingConfig ScalingConfig { get; public set; }
    public SelfManagedEventSource SelfManagedEventSource { get; public set; }
    public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<SourceAccessConfiguration> SourceAccessConfigurations { get; public set; }
    public EventSourcePosition StartingPosition { get; public set; }
    public Nullable`1<DateTime> StartingPositionTimestamp { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Topics { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TumblingWindowInSeconds { get; public set; }
    public string UUID { get; public set; }
    public AmazonManagedKafkaEventSourceConfig get_AmazonManagedKafkaEventSourceConfig();
    public void set_AmazonManagedKafkaEventSourceConfig(AmazonManagedKafkaEventSourceConfig value);
    internal bool IsSetAmazonManagedKafkaEventSourceConfig();
    public Nullable`1<int> get_BatchSize();
    public void set_BatchSize(Nullable`1<int> value);
    internal bool IsSetBatchSize();
    public Nullable`1<bool> get_BisectBatchOnFunctionError();
    public void set_BisectBatchOnFunctionError(Nullable`1<bool> value);
    internal bool IsSetBisectBatchOnFunctionError();
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public DocumentDBEventSourceConfig get_DocumentDBEventSourceConfig();
    public void set_DocumentDBEventSourceConfig(DocumentDBEventSourceConfig value);
    internal bool IsSetDocumentDBEventSourceConfig();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public FilterCriteria get_FilterCriteria();
    public void set_FilterCriteria(FilterCriteria value);
    internal bool IsSetFilterCriteria();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public List`1<string> get_FunctionResponseTypes();
    public void set_FunctionResponseTypes(List`1<string> value);
    internal bool IsSetFunctionResponseTypes();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public Nullable`1<int> get_MaximumBatchingWindowInSeconds();
    public void set_MaximumBatchingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumBatchingWindowInSeconds();
    public Nullable`1<int> get_MaximumRecordAgeInSeconds();
    public void set_MaximumRecordAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumRecordAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public Nullable`1<int> get_ParallelizationFactor();
    public void set_ParallelizationFactor(Nullable`1<int> value);
    internal bool IsSetParallelizationFactor();
    public List`1<string> get_Queues();
    public void set_Queues(List`1<string> value);
    internal bool IsSetQueues();
    public ScalingConfig get_ScalingConfig();
    public void set_ScalingConfig(ScalingConfig value);
    internal bool IsSetScalingConfig();
    public SelfManagedEventSource get_SelfManagedEventSource();
    public void set_SelfManagedEventSource(SelfManagedEventSource value);
    internal bool IsSetSelfManagedEventSource();
    public SelfManagedKafkaEventSourceConfig get_SelfManagedKafkaEventSourceConfig();
    public void set_SelfManagedKafkaEventSourceConfig(SelfManagedKafkaEventSourceConfig value);
    internal bool IsSetSelfManagedKafkaEventSourceConfig();
    public List`1<SourceAccessConfiguration> get_SourceAccessConfigurations();
    public void set_SourceAccessConfigurations(List`1<SourceAccessConfiguration> value);
    internal bool IsSetSourceAccessConfigurations();
    public EventSourcePosition get_StartingPosition();
    public void set_StartingPosition(EventSourcePosition value);
    internal bool IsSetStartingPosition();
    public Nullable`1<DateTime> get_StartingPositionTimestamp();
    public void set_StartingPositionTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStartingPositionTimestamp();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public List`1<string> get_Topics();
    public void set_Topics(List`1<string> value);
    internal bool IsSetTopics();
    public Nullable`1<int> get_TumblingWindowInSeconds();
    public void set_TumblingWindowInSeconds(Nullable`1<int> value);
    internal bool IsSetTumblingWindowInSeconds();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.UpdateFunctionCodeRequest : AmazonLambdaRequest {
    private List`1<string> _architectures;
    private Nullable`1<bool> _dryRun;
    private string _functionName;
    private string _imageUri;
    private Nullable`1<bool> _publish;
    private string _revisionId;
    private string _s3Bucket;
    private string _s3Key;
    private string _s3ObjectVersion;
    private MemoryStream _zipFile;
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    public Nullable`1<bool> DryRun { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public string ImageUri { get; public set; }
    public Nullable`1<bool> Publish { get; public set; }
    public string RevisionId { get; public set; }
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    [AWSPropertyAttribute]
public string S3Key { get; public set; }
    [AWSPropertyAttribute]
public string S3ObjectVersion { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream ZipFile { get; public set; }
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    internal bool IsSetDryRun();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_ImageUri();
    public void set_ImageUri(string value);
    internal bool IsSetImageUri();
    public Nullable`1<bool> get_Publish();
    public void set_Publish(Nullable`1<bool> value);
    internal bool IsSetPublish();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
    public string get_S3ObjectVersion();
    public void set_S3ObjectVersion(string value);
    internal bool IsSetS3ObjectVersion();
    public MemoryStream get_ZipFile();
    public void set_ZipFile(MemoryStream value);
    internal bool IsSetZipFile();
}
public class Amazon.Lambda.Model.UpdateFunctionCodeResponse : AmazonWebServiceResponse {
    private List`1<string> _architectures;
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private EnvironmentResponse _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private ImageConfigResponse _imageConfigResponse;
    private string _kmsKeyArn;
    private string _lastModified;
    private LastUpdateStatus _lastUpdateStatus;
    private string _lastUpdateStatusReason;
    private LastUpdateStatusReasonCode _lastUpdateStatusReasonCode;
    private List`1<Layer> _layers;
    private LoggingConfig _loggingConfig;
    private string _masterArn;
    private Nullable`1<int> _memorySize;
    private PackageType _packageType;
    private string _revisionId;
    private string _role;
    private Runtime _runtime;
    private RuntimeVersionConfig _runtimeVersionConfig;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    private SnapStartResponse _snapStart;
    private State _state;
    private string _stateReason;
    private StateReasonCode _stateReasonCode;
    private Nullable`1<int> _timeout;
    private TracingConfigResponse _tracingConfig;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    public string CodeSha256 { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EnvironmentResponse Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfigResponse ImageConfigResponse { get; public set; }
    public string KMSKeyArn { get; public set; }
    public string LastModified { get; public set; }
    public LastUpdateStatus LastUpdateStatus { get; public set; }
    public string LastUpdateStatusReason { get; public set; }
    public LastUpdateStatusReasonCode LastUpdateStatusReasonCode { get; public set; }
    public List`1<Layer> Layers { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    public string MasterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public PackageType PackageType { get; public set; }
    public string RevisionId { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public RuntimeVersionConfig RuntimeVersionConfig { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public SnapStartResponse SnapStart { get; public set; }
    public State State { get; public set; }
    public string StateReason { get; public set; }
    public StateReasonCode StateReasonCode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfigResponse TracingConfig { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EnvironmentResponse get_Environment();
    public void set_Environment(EnvironmentResponse value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfigResponse get_ImageConfigResponse();
    public void set_ImageConfigResponse(ImageConfigResponse value);
    internal bool IsSetImageConfigResponse();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public LastUpdateStatus get_LastUpdateStatus();
    public void set_LastUpdateStatus(LastUpdateStatus value);
    internal bool IsSetLastUpdateStatus();
    public string get_LastUpdateStatusReason();
    public void set_LastUpdateStatusReason(string value);
    internal bool IsSetLastUpdateStatusReason();
    public LastUpdateStatusReasonCode get_LastUpdateStatusReasonCode();
    public void set_LastUpdateStatusReasonCode(LastUpdateStatusReasonCode value);
    internal bool IsSetLastUpdateStatusReasonCode();
    public List`1<Layer> get_Layers();
    public void set_Layers(List`1<Layer> value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public string get_MasterArn();
    public void set_MasterArn(string value);
    internal bool IsSetMasterArn();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public PackageType get_PackageType();
    public void set_PackageType(PackageType value);
    internal bool IsSetPackageType();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public RuntimeVersionConfig get_RuntimeVersionConfig();
    public void set_RuntimeVersionConfig(RuntimeVersionConfig value);
    internal bool IsSetRuntimeVersionConfig();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
    public SnapStartResponse get_SnapStart();
    public void set_SnapStart(SnapStartResponse value);
    internal bool IsSetSnapStart();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public StateReasonCode get_StateReasonCode();
    public void set_StateReasonCode(StateReasonCode value);
    internal bool IsSetStateReasonCode();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfigResponse get_TracingConfig();
    public void set_TracingConfig(TracingConfigResponse value);
    internal bool IsSetTracingConfig();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.UpdateFunctionConfigurationRequest : AmazonLambdaRequest {
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private Environment _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionName;
    private string _handler;
    private ImageConfig _imageConfig;
    private string _kmsKeyArn;
    private List`1<string> _layers;
    private LoggingConfig _loggingConfig;
    private Nullable`1<int> _memorySize;
    private string _revisionId;
    private string _role;
    private Runtime _runtime;
    private SnapStart _snapStart;
    private Nullable`1<int> _timeout;
    private TracingConfig _tracingConfig;
    private VpcConfig _vpcConfig;
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Environment Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    public bool IsFileSystemConfigsSet { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfig ImageConfig { get; public set; }
    public string KMSKeyArn { get; public set; }
    public List`1<string> Layers { get; public set; }
    public bool IsLayersSet { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public string RevisionId { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public SnapStart SnapStart { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfig TracingConfig { get; public set; }
    public VpcConfig VpcConfig { get; public set; }
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Environment get_Environment();
    public void set_Environment(Environment value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    public bool get_IsFileSystemConfigsSet();
    public void set_IsFileSystemConfigsSet(bool value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfig get_ImageConfig();
    public void set_ImageConfig(ImageConfig value);
    internal bool IsSetImageConfig();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public List`1<string> get_Layers();
    public void set_Layers(List`1<string> value);
    public bool get_IsLayersSet();
    public void set_IsLayersSet(bool value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public SnapStart get_SnapStart();
    public void set_SnapStart(SnapStart value);
    internal bool IsSetSnapStart();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfig get_TracingConfig();
    public void set_TracingConfig(TracingConfig value);
    internal bool IsSetTracingConfig();
    public VpcConfig get_VpcConfig();
    public void set_VpcConfig(VpcConfig value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.UpdateFunctionConfigurationResponse : AmazonWebServiceResponse {
    private List`1<string> _architectures;
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private DeadLetterConfig _deadLetterConfig;
    private string _description;
    private EnvironmentResponse _environment;
    private EphemeralStorage _ephemeralStorage;
    private List`1<FileSystemConfig> _fileSystemConfigs;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private ImageConfigResponse _imageConfigResponse;
    private string _kmsKeyArn;
    private string _lastModified;
    private LastUpdateStatus _lastUpdateStatus;
    private string _lastUpdateStatusReason;
    private LastUpdateStatusReasonCode _lastUpdateStatusReasonCode;
    private List`1<Layer> _layers;
    private LoggingConfig _loggingConfig;
    private string _masterArn;
    private Nullable`1<int> _memorySize;
    private PackageType _packageType;
    private string _revisionId;
    private string _role;
    private Runtime _runtime;
    private RuntimeVersionConfig _runtimeVersionConfig;
    private string _signingJobArn;
    private string _signingProfileVersionArn;
    private SnapStartResponse _snapStart;
    private State _state;
    private string _stateReason;
    private StateReasonCode _stateReasonCode;
    private Nullable`1<int> _timeout;
    private TracingConfigResponse _tracingConfig;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    [AWSPropertyAttribute]
public List`1<string> Architectures { get; public set; }
    public string CodeSha256 { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public DeadLetterConfig DeadLetterConfig { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EnvironmentResponse Environment { get; public set; }
    public EphemeralStorage EphemeralStorage { get; public set; }
    [AWSPropertyAttribute]
public List`1<FileSystemConfig> FileSystemConfigs { get; public set; }
    public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public string Handler { get; public set; }
    public ImageConfigResponse ImageConfigResponse { get; public set; }
    public string KMSKeyArn { get; public set; }
    public string LastModified { get; public set; }
    public LastUpdateStatus LastUpdateStatus { get; public set; }
    public string LastUpdateStatusReason { get; public set; }
    public LastUpdateStatusReasonCode LastUpdateStatusReasonCode { get; public set; }
    public List`1<Layer> Layers { get; public set; }
    public LoggingConfig LoggingConfig { get; public set; }
    public string MasterArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemorySize { get; public set; }
    public PackageType PackageType { get; public set; }
    public string RevisionId { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public RuntimeVersionConfig RuntimeVersionConfig { get; public set; }
    public string SigningJobArn { get; public set; }
    public string SigningProfileVersionArn { get; public set; }
    public SnapStartResponse SnapStart { get; public set; }
    public State State { get; public set; }
    public string StateReason { get; public set; }
    public StateReasonCode StateReasonCode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Timeout { get; public set; }
    public TracingConfigResponse TracingConfig { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public List`1<string> get_Architectures();
    public void set_Architectures(List`1<string> value);
    internal bool IsSetArchitectures();
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public DeadLetterConfig get_DeadLetterConfig();
    public void set_DeadLetterConfig(DeadLetterConfig value);
    internal bool IsSetDeadLetterConfig();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EnvironmentResponse get_Environment();
    public void set_Environment(EnvironmentResponse value);
    internal bool IsSetEnvironment();
    public EphemeralStorage get_EphemeralStorage();
    public void set_EphemeralStorage(EphemeralStorage value);
    internal bool IsSetEphemeralStorage();
    public List`1<FileSystemConfig> get_FileSystemConfigs();
    public void set_FileSystemConfigs(List`1<FileSystemConfig> value);
    internal bool IsSetFileSystemConfigs();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public ImageConfigResponse get_ImageConfigResponse();
    public void set_ImageConfigResponse(ImageConfigResponse value);
    internal bool IsSetImageConfigResponse();
    public string get_KMSKeyArn();
    public void set_KMSKeyArn(string value);
    internal bool IsSetKMSKeyArn();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public LastUpdateStatus get_LastUpdateStatus();
    public void set_LastUpdateStatus(LastUpdateStatus value);
    internal bool IsSetLastUpdateStatus();
    public string get_LastUpdateStatusReason();
    public void set_LastUpdateStatusReason(string value);
    internal bool IsSetLastUpdateStatusReason();
    public LastUpdateStatusReasonCode get_LastUpdateStatusReasonCode();
    public void set_LastUpdateStatusReasonCode(LastUpdateStatusReasonCode value);
    internal bool IsSetLastUpdateStatusReasonCode();
    public List`1<Layer> get_Layers();
    public void set_Layers(List`1<Layer> value);
    internal bool IsSetLayers();
    public LoggingConfig get_LoggingConfig();
    public void set_LoggingConfig(LoggingConfig value);
    internal bool IsSetLoggingConfig();
    public string get_MasterArn();
    public void set_MasterArn(string value);
    internal bool IsSetMasterArn();
    public Nullable`1<int> get_MemorySize();
    public void set_MemorySize(Nullable`1<int> value);
    internal bool IsSetMemorySize();
    public PackageType get_PackageType();
    public void set_PackageType(PackageType value);
    internal bool IsSetPackageType();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public RuntimeVersionConfig get_RuntimeVersionConfig();
    public void set_RuntimeVersionConfig(RuntimeVersionConfig value);
    internal bool IsSetRuntimeVersionConfig();
    public string get_SigningJobArn();
    public void set_SigningJobArn(string value);
    internal bool IsSetSigningJobArn();
    public string get_SigningProfileVersionArn();
    public void set_SigningProfileVersionArn(string value);
    internal bool IsSetSigningProfileVersionArn();
    public SnapStartResponse get_SnapStart();
    public void set_SnapStart(SnapStartResponse value);
    internal bool IsSetSnapStart();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public StateReasonCode get_StateReasonCode();
    public void set_StateReasonCode(StateReasonCode value);
    internal bool IsSetStateReasonCode();
    public Nullable`1<int> get_Timeout();
    public void set_Timeout(Nullable`1<int> value);
    internal bool IsSetTimeout();
    public TracingConfigResponse get_TracingConfig();
    public void set_TracingConfig(TracingConfigResponse value);
    internal bool IsSetTracingConfig();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.UpdateFunctionEventInvokeConfigRequest : AmazonLambdaRequest {
    private DestinationConfig _destinationConfig;
    private string _functionName;
    private Nullable`1<int> _maximumEventAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    private string _qualifier;
    public DestinationConfig DestinationConfig { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumEventAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public Nullable`1<int> get_MaximumEventAgeInSeconds();
    public void set_MaximumEventAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumEventAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.UpdateFunctionEventInvokeConfigResponse : AmazonWebServiceResponse {
    private DestinationConfig _destinationConfig;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private Nullable`1<int> _maximumEventAgeInSeconds;
    private Nullable`1<int> _maximumRetryAttempts;
    public DestinationConfig DestinationConfig { get; public set; }
    public string FunctionArn { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumEventAgeInSeconds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumRetryAttempts { get; public set; }
    public DestinationConfig get_DestinationConfig();
    public void set_DestinationConfig(DestinationConfig value);
    internal bool IsSetDestinationConfig();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public Nullable`1<int> get_MaximumEventAgeInSeconds();
    public void set_MaximumEventAgeInSeconds(Nullable`1<int> value);
    internal bool IsSetMaximumEventAgeInSeconds();
    public Nullable`1<int> get_MaximumRetryAttempts();
    public void set_MaximumRetryAttempts(Nullable`1<int> value);
    internal bool IsSetMaximumRetryAttempts();
}
public class Amazon.Lambda.Model.UpdateFunctionUrlConfigRequest : AmazonLambdaRequest {
    private FunctionUrlAuthType _authType;
    private Cors _cors;
    private string _functionName;
    private InvokeMode _invokeMode;
    private string _qualifier;
    public FunctionUrlAuthType AuthType { get; public set; }
    public Cors Cors { get; public set; }
    [AWSPropertyAttribute]
public string FunctionName { get; public set; }
    public InvokeMode InvokeMode { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public FunctionUrlAuthType get_AuthType();
    public void set_AuthType(FunctionUrlAuthType value);
    internal bool IsSetAuthType();
    public Cors get_Cors();
    public void set_Cors(Cors value);
    internal bool IsSetCors();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public InvokeMode get_InvokeMode();
    public void set_InvokeMode(InvokeMode value);
    internal bool IsSetInvokeMode();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.UpdateFunctionUrlConfigResponse : AmazonWebServiceResponse {
    private FunctionUrlAuthType _authType;
    private Cors _cors;
    private string _creationTime;
    private string _functionArn;
    private string _functionUrl;
    private InvokeMode _invokeMode;
    private string _lastModifiedTime;
    [AWSPropertyAttribute]
public FunctionUrlAuthType AuthType { get; public set; }
    public Cors Cors { get; public set; }
    [AWSPropertyAttribute]
public string CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string FunctionUrl { get; public set; }
    public InvokeMode InvokeMode { get; public set; }
    [AWSPropertyAttribute]
public string LastModifiedTime { get; public set; }
    public FunctionUrlAuthType get_AuthType();
    public void set_AuthType(FunctionUrlAuthType value);
    internal bool IsSetAuthType();
    public Cors get_Cors();
    public void set_Cors(Cors value);
    internal bool IsSetCors();
    public string get_CreationTime();
    public void set_CreationTime(string value);
    internal bool IsSetCreationTime();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionUrl();
    public void set_FunctionUrl(string value);
    internal bool IsSetFunctionUrl();
    public InvokeMode get_InvokeMode();
    public void set_InvokeMode(InvokeMode value);
    internal bool IsSetInvokeMode();
    public string get_LastModifiedTime();
    public void set_LastModifiedTime(string value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.Lambda.Model.VpcConfig : object {
    private Nullable`1<bool> _ipv6AllowedForDualStack;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    public Nullable`1<bool> Ipv6AllowedForDualStack { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIds { get; public set; }
    public bool IsSecurityGroupIdsSet { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public bool IsSubnetIdsSet { get; public set; }
    public Nullable`1<bool> get_Ipv6AllowedForDualStack();
    public void set_Ipv6AllowedForDualStack(Nullable`1<bool> value);
    internal bool IsSetIpv6AllowedForDualStack();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    public bool get_IsSecurityGroupIdsSet();
    public void set_IsSecurityGroupIdsSet(bool value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    public bool get_IsSubnetIdsSet();
    public void set_IsSubnetIdsSet(bool value);
    internal bool IsSetSubnetIds();
}
public class Amazon.Lambda.Model.VpcConfigDetail : object {
    private Nullable`1<bool> _ipv6AllowedForDualStack;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private string _vpcId;
    public Nullable`1<bool> Ipv6AllowedForDualStack { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_Ipv6AllowedForDualStack();
    public void set_Ipv6AllowedForDualStack(Nullable`1<bool> value);
    internal bool IsSetIpv6AllowedForDualStack();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.Lambda.PackageType : ConstantClass {
    public static PackageType Image;
    public static PackageType Zip;
    public PackageType(string value);
    private static PackageType();
    public static PackageType FindValue(string value);
    public static PackageType op_Implicit(string value);
}
public class Amazon.Lambda.ProvisionedConcurrencyStatusEnum : ConstantClass {
    public static ProvisionedConcurrencyStatusEnum FAILED;
    public static ProvisionedConcurrencyStatusEnum IN_PROGRESS;
    public static ProvisionedConcurrencyStatusEnum READY;
    public ProvisionedConcurrencyStatusEnum(string value);
    private static ProvisionedConcurrencyStatusEnum();
    public static ProvisionedConcurrencyStatusEnum FindValue(string value);
    public static ProvisionedConcurrencyStatusEnum op_Implicit(string value);
}
public class Amazon.Lambda.ResponseStreamingInvocationType : ConstantClass {
    public static ResponseStreamingInvocationType DryRun;
    public static ResponseStreamingInvocationType RequestResponse;
    public ResponseStreamingInvocationType(string value);
    private static ResponseStreamingInvocationType();
    public static ResponseStreamingInvocationType FindValue(string value);
    public static ResponseStreamingInvocationType op_Implicit(string value);
}
public class Amazon.Lambda.Runtime : ConstantClass {
    public static Runtime Dotnet6;
    public static Runtime Dotnet8;
    public static Runtime Dotnetcore10;
    public static Runtime Dotnetcore20;
    public static Runtime Dotnetcore21;
    public static Runtime Dotnetcore31;
    public static Runtime Go1X;
    public static Runtime Java11;
    public static Runtime Java17;
    public static Runtime Java21;
    public static Runtime Java8;
    public static Runtime Java8Al2;
    public static Runtime Nodejs;
    public static Runtime Nodejs10X;
    public static Runtime Nodejs12X;
    public static Runtime Nodejs14X;
    public static Runtime Nodejs16X;
    public static Runtime Nodejs18X;
    public static Runtime Nodejs20X;
    public static Runtime Nodejs43;
    public static Runtime Nodejs43Edge;
    public static Runtime Nodejs610;
    public static Runtime Nodejs810;
    public static Runtime Provided;
    public static Runtime ProvidedAl2;
    public static Runtime ProvidedAl2023;
    public static Runtime Python27;
    public static Runtime Python310;
    public static Runtime Python311;
    public static Runtime Python312;
    public static Runtime Python36;
    public static Runtime Python37;
    public static Runtime Python38;
    public static Runtime Python39;
    public static Runtime Ruby25;
    public static Runtime Ruby27;
    public static Runtime Ruby32;
    public static Runtime Ruby33;
    public Runtime(string value);
    private static Runtime();
    public static Runtime FindValue(string value);
    public static Runtime op_Implicit(string value);
}
public class Amazon.Lambda.SnapStartApplyOn : ConstantClass {
    public static SnapStartApplyOn None;
    public static SnapStartApplyOn PublishedVersions;
    public SnapStartApplyOn(string value);
    private static SnapStartApplyOn();
    public static SnapStartApplyOn FindValue(string value);
    public static SnapStartApplyOn op_Implicit(string value);
}
public class Amazon.Lambda.SnapStartOptimizationStatus : ConstantClass {
    public static SnapStartOptimizationStatus Off;
    public static SnapStartOptimizationStatus On;
    public SnapStartOptimizationStatus(string value);
    private static SnapStartOptimizationStatus();
    public static SnapStartOptimizationStatus FindValue(string value);
    public static SnapStartOptimizationStatus op_Implicit(string value);
}
public class Amazon.Lambda.SourceAccessType : ConstantClass {
    public static SourceAccessType BASIC_AUTH;
    public static SourceAccessType CLIENT_CERTIFICATE_TLS_AUTH;
    public static SourceAccessType SASL_SCRAM_256_AUTH;
    public static SourceAccessType SASL_SCRAM_512_AUTH;
    public static SourceAccessType SERVER_ROOT_CA_CERTIFICATE;
    public static SourceAccessType VIRTUAL_HOST;
    public static SourceAccessType VPC_SECURITY_GROUP;
    public static SourceAccessType VPC_SUBNET;
    public SourceAccessType(string value);
    private static SourceAccessType();
    public static SourceAccessType FindValue(string value);
    public static SourceAccessType op_Implicit(string value);
}
public class Amazon.Lambda.State : ConstantClass {
    public static State Active;
    public static State Failed;
    public static State Inactive;
    public static State Pending;
    public State(string value);
    private static State();
    public static State FindValue(string value);
    public static State op_Implicit(string value);
}
public class Amazon.Lambda.StateReasonCode : ConstantClass {
    public static StateReasonCode Creating;
    public static StateReasonCode DisabledKMSKey;
    public static StateReasonCode EFSIOError;
    public static StateReasonCode EFSMountConnectivityError;
    public static StateReasonCode EFSMountFailure;
    public static StateReasonCode EFSMountTimeout;
    public static StateReasonCode EniLimitExceeded;
    public static StateReasonCode FunctionError;
    public static StateReasonCode Idle;
    public static StateReasonCode ImageAccessDenied;
    public static StateReasonCode ImageDeleted;
    public static StateReasonCode InsufficientRolePermissions;
    public static StateReasonCode InternalError;
    public static StateReasonCode InvalidConfiguration;
    public static StateReasonCode InvalidImage;
    public static StateReasonCode InvalidRuntime;
    public static StateReasonCode InvalidSecurityGroup;
    public static StateReasonCode InvalidStateKMSKey;
    public static StateReasonCode InvalidSubnet;
    public static StateReasonCode InvalidZipFileException;
    public static StateReasonCode KMSKeyAccessDenied;
    public static StateReasonCode KMSKeyNotFound;
    public static StateReasonCode Restoring;
    public static StateReasonCode SubnetOutOfIPAddresses;
    public StateReasonCode(string value);
    private static StateReasonCode();
    public static StateReasonCode FindValue(string value);
    public static StateReasonCode op_Implicit(string value);
}
public class Amazon.Lambda.SystemLogLevel : ConstantClass {
    public static SystemLogLevel DEBUG;
    public static SystemLogLevel INFO;
    public static SystemLogLevel WARN;
    public SystemLogLevel(string value);
    private static SystemLogLevel();
    public static SystemLogLevel FindValue(string value);
    public static SystemLogLevel op_Implicit(string value);
}
public class Amazon.Lambda.ThrottleReason : ConstantClass {
    public static ThrottleReason CallerRateLimitExceeded;
    public static ThrottleReason ConcurrentInvocationLimitExceeded;
    public static ThrottleReason ConcurrentSnapshotCreateLimitExceeded;
    public static ThrottleReason FunctionInvocationRateLimitExceeded;
    public static ThrottleReason ReservedFunctionConcurrentInvocationLimitExceeded;
    public static ThrottleReason ReservedFunctionInvocationRateLimitExceeded;
    public ThrottleReason(string value);
    private static ThrottleReason();
    public static ThrottleReason FindValue(string value);
    public static ThrottleReason op_Implicit(string value);
}
public class Amazon.Lambda.TracingMode : ConstantClass {
    public static TracingMode Active;
    public static TracingMode PassThrough;
    public TracingMode(string value);
    private static TracingMode();
    public static TracingMode FindValue(string value);
    public static TracingMode op_Implicit(string value);
}
public class Amazon.Lambda.UpdateRuntimeOn : ConstantClass {
    public static UpdateRuntimeOn Auto;
    public static UpdateRuntimeOn FunctionUpdate;
    public static UpdateRuntimeOn Manual;
    public UpdateRuntimeOn(string value);
    private static UpdateRuntimeOn();
    public static UpdateRuntimeOn FindValue(string value);
    public static UpdateRuntimeOn op_Implicit(string value);
}
