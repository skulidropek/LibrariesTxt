public class Amazon.MarketplaceEntitlementService.AmazonMarketplaceEntitlementServiceClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IMarketplaceEntitlementServicePaginatorFactory _paginators;
    public IMarketplaceEntitlementServicePaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonMarketplaceEntitlementServiceClient(RegionEndpoint region);
    public AmazonMarketplaceEntitlementServiceClient(AmazonMarketplaceEntitlementServiceConfig config);
    public AmazonMarketplaceEntitlementServiceClient(AWSCredentials credentials);
    public AmazonMarketplaceEntitlementServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonMarketplaceEntitlementServiceClient(AWSCredentials credentials, AmazonMarketplaceEntitlementServiceConfig clientConfig);
    public AmazonMarketplaceEntitlementServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonMarketplaceEntitlementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonMarketplaceEntitlementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonMarketplaceEntitlementServiceConfig clientConfig);
    public AmazonMarketplaceEntitlementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonMarketplaceEntitlementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonMarketplaceEntitlementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonMarketplaceEntitlementServiceConfig clientConfig);
    private static AmazonMarketplaceEntitlementServiceClient();
    public sealed virtual IMarketplaceEntitlementServicePaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual GetEntitlementsResponse GetEntitlements(GetEntitlementsRequest request);
    public virtual Task`1<GetEntitlementsResponse> GetEntitlementsAsync(GetEntitlementsRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.MarketplaceEntitlementService.AmazonMarketplaceEntitlementServiceConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonMarketplaceEntitlementServiceEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonMarketplaceEntitlementServiceConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.MarketplaceEntitlementService.AmazonMarketplaceEntitlementServiceDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonMarketplaceEntitlementServiceDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.MarketplaceEntitlementService.AmazonMarketplaceEntitlementServiceException : AmazonServiceException {
    public AmazonMarketplaceEntitlementServiceException(string message);
    public AmazonMarketplaceEntitlementServiceException(string message, Exception innerException);
    public AmazonMarketplaceEntitlementServiceException(Exception innerException);
    public AmazonMarketplaceEntitlementServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonMarketplaceEntitlementServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonMarketplaceEntitlementServiceException(SerializationInfo info, StreamingContext context);
}
public class Amazon.MarketplaceEntitlementService.AmazonMarketplaceEntitlementServiceRequest : AmazonWebServiceRequest {
}
public class Amazon.MarketplaceEntitlementService.Endpoints.MarketplaceEntitlementServiceEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.MarketplaceEntitlementService.GetEntitlementFilterName : ConstantClass {
    public static GetEntitlementFilterName CUSTOMER_IDENTIFIER;
    public static GetEntitlementFilterName DIMENSION;
    public GetEntitlementFilterName(string value);
    private static GetEntitlementFilterName();
    public static GetEntitlementFilterName FindValue(string value);
    public static GetEntitlementFilterName op_Implicit(string value);
}
public interface Amazon.MarketplaceEntitlementService.IAmazonMarketplaceEntitlementService {
    public IMarketplaceEntitlementServicePaginatorFactory Paginators { get; }
    public abstract virtual IMarketplaceEntitlementServicePaginatorFactory get_Paginators();
    public abstract virtual GetEntitlementsResponse GetEntitlements(GetEntitlementsRequest request);
    public abstract virtual Task`1<GetEntitlementsResponse> GetEntitlementsAsync(GetEntitlementsRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.MarketplaceEntitlementService.Internal.AmazonMarketplaceEntitlementServiceEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.MarketplaceEntitlementService.Internal.AmazonMarketplaceEntitlementServiceEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.MarketplaceEntitlementService.Internal.AmazonMarketplaceEntitlementServiceMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.MarketplaceEntitlementService.Model.Entitlement : object {
    private string _customerIdentifier;
    private string _dimension;
    private Nullable`1<DateTime> _expirationDate;
    private string _productCode;
    private EntitlementValue _value;
    public string CustomerIdentifier { get; public set; }
    public string Dimension { get; public set; }
    public Nullable`1<DateTime> ExpirationDate { get; public set; }
    [AWSPropertyAttribute]
public string ProductCode { get; public set; }
    public EntitlementValue Value { get; public set; }
    public string get_CustomerIdentifier();
    public void set_CustomerIdentifier(string value);
    internal bool IsSetCustomerIdentifier();
    public string get_Dimension();
    public void set_Dimension(string value);
    internal bool IsSetDimension();
    public Nullable`1<DateTime> get_ExpirationDate();
    public void set_ExpirationDate(Nullable`1<DateTime> value);
    internal bool IsSetExpirationDate();
    public string get_ProductCode();
    public void set_ProductCode(string value);
    internal bool IsSetProductCode();
    public EntitlementValue get_Value();
    public void set_Value(EntitlementValue value);
    internal bool IsSetValue();
}
public class Amazon.MarketplaceEntitlementService.Model.EntitlementValue : object {
    private Nullable`1<bool> _booleanValue;
    private Nullable`1<double> _doubleValue;
    private Nullable`1<int> _integerValue;
    private string _stringValue;
    public Nullable`1<bool> BooleanValue { get; public set; }
    public Nullable`1<double> DoubleValue { get; public set; }
    public Nullable`1<int> IntegerValue { get; public set; }
    public string StringValue { get; public set; }
    public Nullable`1<bool> get_BooleanValue();
    public void set_BooleanValue(Nullable`1<bool> value);
    internal bool IsSetBooleanValue();
    public Nullable`1<double> get_DoubleValue();
    public void set_DoubleValue(Nullable`1<double> value);
    internal bool IsSetDoubleValue();
    public Nullable`1<int> get_IntegerValue();
    public void set_IntegerValue(Nullable`1<int> value);
    internal bool IsSetIntegerValue();
    public string get_StringValue();
    public void set_StringValue(string value);
    internal bool IsSetStringValue();
}
internal class Amazon.MarketplaceEntitlementService.Model.GetEntitlementsPaginator : object {
    private IAmazonMarketplaceEntitlementService _client;
    private GetEntitlementsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetEntitlementsResponse> Responses { get; }
    internal GetEntitlementsPaginator(IAmazonMarketplaceEntitlementService client, GetEntitlementsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetEntitlementsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.MarketplaceEntitlementService.Model.GetEntitlementsPaginator/<Amazon-Runtime-IPaginator<Amazon-MarketplaceEntitlementService-Model-GetEntitlementsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<GetEntitlementsResponse> Amazon.Runtime.IPaginator<Amazon.MarketplaceEntitlementService.Model.GetEntitlementsResponse>.Paginate();
}
public class Amazon.MarketplaceEntitlementService.Model.GetEntitlementsRequest : AmazonMarketplaceEntitlementServiceRequest {
    private Dictionary`2<string, List`1<string>> _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _productCode;
    public Dictionary`2<string, List`1<string>> Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ProductCode { get; public set; }
    public Dictionary`2<string, List`1<string>> get_Filter();
    public void set_Filter(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ProductCode();
    public void set_ProductCode(string value);
    internal bool IsSetProductCode();
}
public class Amazon.MarketplaceEntitlementService.Model.GetEntitlementsResponse : AmazonWebServiceResponse {
    private List`1<Entitlement> _entitlements;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<Entitlement> Entitlements { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Entitlement> get_Entitlements();
    public void set_Entitlements(List`1<Entitlement> value);
    internal bool IsSetEntitlements();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public interface Amazon.MarketplaceEntitlementService.Model.IGetEntitlementsPaginator {
    public IPaginatedEnumerable`1<GetEntitlementsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetEntitlementsResponse> get_Responses();
}
public interface Amazon.MarketplaceEntitlementService.Model.IMarketplaceEntitlementServicePaginatorFactory {
    public abstract virtual IGetEntitlementsPaginator GetEntitlements(GetEntitlementsRequest request);
}
public class Amazon.MarketplaceEntitlementService.Model.Internal.MarshallTransformations.EntitlementUnmarshaller : object {
    private static EntitlementUnmarshaller _instance;
    public static EntitlementUnmarshaller Instance { get; }
    private static EntitlementUnmarshaller();
    private sealed virtual override Entitlement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MarketplaceEntitlementService.Model.Entitlement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Entitlement Unmarshall(JsonUnmarshallerContext context);
    public static EntitlementUnmarshaller get_Instance();
}
public class Amazon.MarketplaceEntitlementService.Model.Internal.MarshallTransformations.EntitlementValueUnmarshaller : object {
    private static EntitlementValueUnmarshaller _instance;
    public static EntitlementValueUnmarshaller Instance { get; }
    private static EntitlementValueUnmarshaller();
    private sealed virtual override EntitlementValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MarketplaceEntitlementService.Model.EntitlementValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EntitlementValue Unmarshall(JsonUnmarshallerContext context);
    public static EntitlementValueUnmarshaller get_Instance();
}
public class Amazon.MarketplaceEntitlementService.Model.Internal.MarshallTransformations.GetEntitlementsRequestMarshaller : object {
    private static GetEntitlementsRequestMarshaller _instance;
    public static GetEntitlementsRequestMarshaller Instance { get; }
    private static GetEntitlementsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEntitlementsRequest publicRequest);
    internal static GetEntitlementsRequestMarshaller GetInstance();
    public static GetEntitlementsRequestMarshaller get_Instance();
}
public class Amazon.MarketplaceEntitlementService.Model.Internal.MarshallTransformations.GetEntitlementsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetEntitlementsResponseUnmarshaller _instance;
    public static GetEntitlementsResponseUnmarshaller Instance { get; }
    private static GetEntitlementsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEntitlementsResponseUnmarshaller GetInstance();
    public static GetEntitlementsResponseUnmarshaller get_Instance();
}
public class Amazon.MarketplaceEntitlementService.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller : object {
    private static InternalServiceErrorExceptionUnmarshaller _instance;
    public static InternalServiceErrorExceptionUnmarshaller Instance { get; }
    private static InternalServiceErrorExceptionUnmarshaller();
    public sealed virtual InternalServiceErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServiceErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServiceErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.MarketplaceEntitlementService.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller : object {
    private static InvalidParameterExceptionUnmarshaller _instance;
    public static InvalidParameterExceptionUnmarshaller Instance { get; }
    private static InvalidParameterExceptionUnmarshaller();
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.MarketplaceEntitlementService.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller : object {
    private static ThrottlingExceptionUnmarshaller _instance;
    public static ThrottlingExceptionUnmarshaller Instance { get; }
    private static ThrottlingExceptionUnmarshaller();
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.MarketplaceEntitlementService.Model.InternalServiceErrorException : AmazonMarketplaceEntitlementServiceException {
    public InternalServiceErrorException(string message);
    public InternalServiceErrorException(string message, Exception innerException);
    public InternalServiceErrorException(Exception innerException);
    public InternalServiceErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServiceErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InternalServiceErrorException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.MarketplaceEntitlementService.Model.InvalidParameterException : AmazonMarketplaceEntitlementServiceException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidParameterException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.MarketplaceEntitlementService.Model.MarketplaceEntitlementServicePaginatorFactory : object {
    private IAmazonMarketplaceEntitlementService client;
    internal MarketplaceEntitlementServicePaginatorFactory(IAmazonMarketplaceEntitlementService client);
    public sealed virtual IGetEntitlementsPaginator GetEntitlements(GetEntitlementsRequest request);
}
public class Amazon.MarketplaceEntitlementService.Model.ThrottlingException : AmazonMarketplaceEntitlementServiceException {
    public ThrottlingException(string message);
    public ThrottlingException(string message, Exception innerException);
    public ThrottlingException(Exception innerException);
    public ThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ThrottlingException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
