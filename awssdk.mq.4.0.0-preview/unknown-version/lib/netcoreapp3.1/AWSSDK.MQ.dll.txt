public class Amazon.MQ.AmazonMQClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IMQPaginatorFactory _paginators;
    public IMQPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonMQClient(RegionEndpoint region);
    public AmazonMQClient(AmazonMQConfig config);
    public AmazonMQClient(AWSCredentials credentials);
    public AmazonMQClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonMQClient(AWSCredentials credentials, AmazonMQConfig clientConfig);
    public AmazonMQClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonMQClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonMQClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonMQConfig clientConfig);
    public AmazonMQClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonMQClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonMQClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonMQConfig clientConfig);
    private static AmazonMQClient();
    public sealed virtual IMQPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual CreateBrokerResponse CreateBroker(CreateBrokerRequest request);
    public virtual Task`1<CreateBrokerResponse> CreateBrokerAsync(CreateBrokerRequest request, CancellationToken cancellationToken);
    internal virtual CreateConfigurationResponse CreateConfiguration(CreateConfigurationRequest request);
    public virtual Task`1<CreateConfigurationResponse> CreateConfigurationAsync(CreateConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual CreateTagsResponse CreateTags(CreateTagsRequest request);
    public virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    internal virtual CreateUserResponse CreateUser(CreateUserRequest request);
    public virtual Task`1<CreateUserResponse> CreateUserAsync(CreateUserRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBrokerResponse DeleteBroker(DeleteBrokerRequest request);
    public virtual Task`1<DeleteBrokerResponse> DeleteBrokerAsync(DeleteBrokerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTagsResponse DeleteTags(DeleteTagsRequest request);
    public virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUserResponse DeleteUser(DeleteUserRequest request);
    public virtual Task`1<DeleteUserResponse> DeleteUserAsync(DeleteUserRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBrokerResponse DescribeBroker(DescribeBrokerRequest request);
    public virtual Task`1<DescribeBrokerResponse> DescribeBrokerAsync(DescribeBrokerRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBrokerEngineTypesResponse DescribeBrokerEngineTypes(DescribeBrokerEngineTypesRequest request);
    public virtual Task`1<DescribeBrokerEngineTypesResponse> DescribeBrokerEngineTypesAsync(DescribeBrokerEngineTypesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBrokerInstanceOptionsResponse DescribeBrokerInstanceOptions(DescribeBrokerInstanceOptionsRequest request);
    public virtual Task`1<DescribeBrokerInstanceOptionsResponse> DescribeBrokerInstanceOptionsAsync(DescribeBrokerInstanceOptionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeConfigurationResponse DescribeConfiguration(DescribeConfigurationRequest request);
    public virtual Task`1<DescribeConfigurationResponse> DescribeConfigurationAsync(DescribeConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeConfigurationRevisionResponse DescribeConfigurationRevision(DescribeConfigurationRevisionRequest request);
    public virtual Task`1<DescribeConfigurationRevisionResponse> DescribeConfigurationRevisionAsync(DescribeConfigurationRevisionRequest request, CancellationToken cancellationToken);
    internal virtual DescribeUserResponse DescribeUser(DescribeUserRequest request);
    public virtual Task`1<DescribeUserResponse> DescribeUserAsync(DescribeUserRequest request, CancellationToken cancellationToken);
    internal virtual ListBrokersResponse ListBrokers(ListBrokersRequest request);
    public virtual Task`1<ListBrokersResponse> ListBrokersAsync(ListBrokersRequest request, CancellationToken cancellationToken);
    internal virtual ListConfigurationRevisionsResponse ListConfigurationRevisions(ListConfigurationRevisionsRequest request);
    public virtual Task`1<ListConfigurationRevisionsResponse> ListConfigurationRevisionsAsync(ListConfigurationRevisionsRequest request, CancellationToken cancellationToken);
    internal virtual ListConfigurationsResponse ListConfigurations(ListConfigurationsRequest request);
    public virtual Task`1<ListConfigurationsResponse> ListConfigurationsAsync(ListConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsResponse ListTags(ListTagsRequest request);
    public virtual Task`1<ListTagsResponse> ListTagsAsync(ListTagsRequest request, CancellationToken cancellationToken);
    internal virtual ListUsersResponse ListUsers(ListUsersRequest request);
    public virtual Task`1<ListUsersResponse> ListUsersAsync(ListUsersRequest request, CancellationToken cancellationToken);
    internal virtual PromoteResponse Promote(PromoteRequest request);
    public virtual Task`1<PromoteResponse> PromoteAsync(PromoteRequest request, CancellationToken cancellationToken);
    internal virtual RebootBrokerResponse RebootBroker(RebootBrokerRequest request);
    public virtual Task`1<RebootBrokerResponse> RebootBrokerAsync(RebootBrokerRequest request, CancellationToken cancellationToken);
    internal virtual UpdateBrokerResponse UpdateBroker(UpdateBrokerRequest request);
    public virtual Task`1<UpdateBrokerResponse> UpdateBrokerAsync(UpdateBrokerRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConfigurationResponse UpdateConfiguration(UpdateConfigurationRequest request);
    public virtual Task`1<UpdateConfigurationResponse> UpdateConfigurationAsync(UpdateConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateUserResponse UpdateUser(UpdateUserRequest request);
    public virtual Task`1<UpdateUserResponse> UpdateUserAsync(UpdateUserRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.MQ.AmazonMQConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonMQEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonMQConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.MQ.AmazonMQDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonMQDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.MQ.AmazonMQException : AmazonServiceException {
    public AmazonMQException(string message);
    public AmazonMQException(string message, Exception innerException);
    public AmazonMQException(Exception innerException);
    public AmazonMQException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonMQException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.MQ.AmazonMQRequest : AmazonWebServiceRequest {
}
public class Amazon.MQ.AuthenticationStrategy : ConstantClass {
    public static AuthenticationStrategy LDAP;
    public static AuthenticationStrategy SIMPLE;
    public AuthenticationStrategy(string value);
    private static AuthenticationStrategy();
    public static AuthenticationStrategy FindValue(string value);
    public static AuthenticationStrategy op_Implicit(string value);
}
public class Amazon.MQ.BrokerState : ConstantClass {
    public static BrokerState CREATION_FAILED;
    public static BrokerState CREATION_IN_PROGRESS;
    public static BrokerState CRITICAL_ACTION_REQUIRED;
    public static BrokerState DELETION_IN_PROGRESS;
    public static BrokerState REBOOT_IN_PROGRESS;
    public static BrokerState REPLICA;
    public static BrokerState RUNNING;
    public BrokerState(string value);
    private static BrokerState();
    public static BrokerState FindValue(string value);
    public static BrokerState op_Implicit(string value);
}
public class Amazon.MQ.BrokerStorageType : ConstantClass {
    public static BrokerStorageType EBS;
    public static BrokerStorageType EFS;
    public BrokerStorageType(string value);
    private static BrokerStorageType();
    public static BrokerStorageType FindValue(string value);
    public static BrokerStorageType op_Implicit(string value);
}
public class Amazon.MQ.ChangeType : ConstantClass {
    public static ChangeType CREATE;
    public static ChangeType DELETE;
    public static ChangeType UPDATE;
    public ChangeType(string value);
    private static ChangeType();
    public static ChangeType FindValue(string value);
    public static ChangeType op_Implicit(string value);
}
public class Amazon.MQ.DataReplicationMode : ConstantClass {
    public static DataReplicationMode CRDR;
    public static DataReplicationMode NONE;
    public DataReplicationMode(string value);
    private static DataReplicationMode();
    public static DataReplicationMode FindValue(string value);
    public static DataReplicationMode op_Implicit(string value);
}
public class Amazon.MQ.DayOfWeek : ConstantClass {
    public static DayOfWeek FRIDAY;
    public static DayOfWeek MONDAY;
    public static DayOfWeek SATURDAY;
    public static DayOfWeek SUNDAY;
    public static DayOfWeek THURSDAY;
    public static DayOfWeek TUESDAY;
    public static DayOfWeek WEDNESDAY;
    public DayOfWeek(string value);
    private static DayOfWeek();
    public static DayOfWeek FindValue(string value);
    public static DayOfWeek op_Implicit(string value);
}
public class Amazon.MQ.DeploymentMode : ConstantClass {
    public static DeploymentMode ACTIVE_STANDBY_MULTI_AZ;
    public static DeploymentMode CLUSTER_MULTI_AZ;
    public static DeploymentMode SINGLE_INSTANCE;
    public DeploymentMode(string value);
    private static DeploymentMode();
    public static DeploymentMode FindValue(string value);
    public static DeploymentMode op_Implicit(string value);
}
public class Amazon.MQ.Endpoints.MQEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.MQ.EngineType : ConstantClass {
    public static EngineType ACTIVEMQ;
    public static EngineType RABBITMQ;
    public EngineType(string value);
    private static EngineType();
    public static EngineType FindValue(string value);
    public static EngineType op_Implicit(string value);
}
public interface Amazon.MQ.IAmazonMQ {
    public IMQPaginatorFactory Paginators { get; }
    public abstract virtual IMQPaginatorFactory get_Paginators();
    public abstract virtual Task`1<CreateBrokerResponse> CreateBrokerAsync(CreateBrokerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateConfigurationResponse> CreateConfigurationAsync(CreateConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateUserResponse> CreateUserAsync(CreateUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBrokerResponse> DeleteBrokerAsync(DeleteBrokerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUserResponse> DeleteUserAsync(DeleteUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBrokerResponse> DescribeBrokerAsync(DescribeBrokerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBrokerEngineTypesResponse> DescribeBrokerEngineTypesAsync(DescribeBrokerEngineTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBrokerInstanceOptionsResponse> DescribeBrokerInstanceOptionsAsync(DescribeBrokerInstanceOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConfigurationResponse> DescribeConfigurationAsync(DescribeConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConfigurationRevisionResponse> DescribeConfigurationRevisionAsync(DescribeConfigurationRevisionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeUserResponse> DescribeUserAsync(DescribeUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListBrokersResponse> ListBrokersAsync(ListBrokersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListConfigurationRevisionsResponse> ListConfigurationRevisionsAsync(ListConfigurationRevisionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListConfigurationsResponse> ListConfigurationsAsync(ListConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsResponse> ListTagsAsync(ListTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListUsersResponse> ListUsersAsync(ListUsersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PromoteResponse> PromoteAsync(PromoteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootBrokerResponse> RebootBrokerAsync(RebootBrokerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateBrokerResponse> UpdateBrokerAsync(UpdateBrokerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConfigurationResponse> UpdateConfigurationAsync(UpdateConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateUserResponse> UpdateUserAsync(UpdateUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.MQ.Internal.AmazonMQEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.MQ.Internal.AmazonMQEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.MQ.Internal.AmazonMQMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.MQ.Model.ActionRequired : object {
    private string _actionRequiredCode;
    private string _actionRequiredInfo;
    public string ActionRequiredCode { get; public set; }
    public string ActionRequiredInfo { get; public set; }
    public string get_ActionRequiredCode();
    public void set_ActionRequiredCode(string value);
    internal bool IsSetActionRequiredCode();
    public string get_ActionRequiredInfo();
    public void set_ActionRequiredInfo(string value);
    internal bool IsSetActionRequiredInfo();
}
public class Amazon.MQ.Model.AvailabilityZone : object {
    private string _name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.MQ.Model.BadRequestException : AmazonMQException {
    private string _errorAttribute;
    public string ErrorAttribute { get; public set; }
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
    public BadRequestException(Exception innerException);
    public BadRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BadRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ErrorAttribute();
    public void set_ErrorAttribute(string value);
    internal bool IsSetErrorAttribute();
}
public class Amazon.MQ.Model.BrokerEngineType : object {
    private EngineType _engineType;
    private List`1<EngineVersion> _engineVersions;
    public EngineType EngineType { get; public set; }
    public List`1<EngineVersion> EngineVersions { get; public set; }
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public List`1<EngineVersion> get_EngineVersions();
    public void set_EngineVersions(List`1<EngineVersion> value);
    internal bool IsSetEngineVersions();
}
public class Amazon.MQ.Model.BrokerInstance : object {
    private string _consoleURL;
    private List`1<string> _endpoints;
    private string _ipAddress;
    public string ConsoleURL { get; public set; }
    public List`1<string> Endpoints { get; public set; }
    public string IpAddress { get; public set; }
    public string get_ConsoleURL();
    public void set_ConsoleURL(string value);
    internal bool IsSetConsoleURL();
    public List`1<string> get_Endpoints();
    public void set_Endpoints(List`1<string> value);
    internal bool IsSetEndpoints();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
}
public class Amazon.MQ.Model.BrokerInstanceOption : object {
    private List`1<AvailabilityZone> _availabilityZones;
    private EngineType _engineType;
    private string _hostInstanceType;
    private BrokerStorageType _storageType;
    private List`1<string> _supportedDeploymentModes;
    private List`1<string> _supportedEngineVersions;
    public List`1<AvailabilityZone> AvailabilityZones { get; public set; }
    public EngineType EngineType { get; public set; }
    public string HostInstanceType { get; public set; }
    public BrokerStorageType StorageType { get; public set; }
    public List`1<string> SupportedDeploymentModes { get; public set; }
    public List`1<string> SupportedEngineVersions { get; public set; }
    public List`1<AvailabilityZone> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<AvailabilityZone> value);
    internal bool IsSetAvailabilityZones();
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public string get_HostInstanceType();
    public void set_HostInstanceType(string value);
    internal bool IsSetHostInstanceType();
    public BrokerStorageType get_StorageType();
    public void set_StorageType(BrokerStorageType value);
    internal bool IsSetStorageType();
    public List`1<string> get_SupportedDeploymentModes();
    public void set_SupportedDeploymentModes(List`1<string> value);
    internal bool IsSetSupportedDeploymentModes();
    public List`1<string> get_SupportedEngineVersions();
    public void set_SupportedEngineVersions(List`1<string> value);
    internal bool IsSetSupportedEngineVersions();
}
public class Amazon.MQ.Model.BrokerSummary : object {
    private string _brokerArn;
    private string _brokerId;
    private string _brokerName;
    private BrokerState _brokerState;
    private Nullable`1<DateTime> _created;
    private DeploymentMode _deploymentMode;
    private EngineType _engineType;
    private string _hostInstanceType;
    public string BrokerArn { get; public set; }
    public string BrokerId { get; public set; }
    public string BrokerName { get; public set; }
    public BrokerState BrokerState { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    [AWSPropertyAttribute]
public DeploymentMode DeploymentMode { get; public set; }
    [AWSPropertyAttribute]
public EngineType EngineType { get; public set; }
    public string HostInstanceType { get; public set; }
    public string get_BrokerArn();
    public void set_BrokerArn(string value);
    internal bool IsSetBrokerArn();
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public string get_BrokerName();
    public void set_BrokerName(string value);
    internal bool IsSetBrokerName();
    public BrokerState get_BrokerState();
    public void set_BrokerState(BrokerState value);
    internal bool IsSetBrokerState();
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public DeploymentMode get_DeploymentMode();
    public void set_DeploymentMode(DeploymentMode value);
    internal bool IsSetDeploymentMode();
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public string get_HostInstanceType();
    public void set_HostInstanceType(string value);
    internal bool IsSetHostInstanceType();
}
public class Amazon.MQ.Model.Configuration : object {
    private string _arn;
    private AuthenticationStrategy _authenticationStrategy;
    private Nullable`1<DateTime> _created;
    private string _description;
    private EngineType _engineType;
    private string _engineVersion;
    private string _id;
    private ConfigurationRevision _latestRevision;
    private string _name;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Created { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public EngineType EngineType { get; public set; }
    [AWSPropertyAttribute]
public string EngineVersion { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public ConfigurationRevision LatestRevision { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.MQ.Model.ConfigurationId : object {
    private string _id;
    private Nullable`1<int> _revision;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<int> Revision { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_Revision();
    public void set_Revision(Nullable`1<int> value);
    internal bool IsSetRevision();
}
public class Amazon.MQ.Model.ConfigurationRevision : object {
    private Nullable`1<DateTime> _created;
    private string _description;
    private Nullable`1<int> _revision;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Created { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Revision { get; public set; }
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_Revision();
    public void set_Revision(Nullable`1<int> value);
    internal bool IsSetRevision();
}
public class Amazon.MQ.Model.Configurations : object {
    private ConfigurationId _current;
    private List`1<ConfigurationId> _history;
    private ConfigurationId _pending;
    public ConfigurationId Current { get; public set; }
    public List`1<ConfigurationId> History { get; public set; }
    public ConfigurationId Pending { get; public set; }
    public ConfigurationId get_Current();
    public void set_Current(ConfigurationId value);
    internal bool IsSetCurrent();
    public List`1<ConfigurationId> get_History();
    public void set_History(List`1<ConfigurationId> value);
    internal bool IsSetHistory();
    public ConfigurationId get_Pending();
    public void set_Pending(ConfigurationId value);
    internal bool IsSetPending();
}
public class Amazon.MQ.Model.ConflictException : AmazonMQException {
    private string _errorAttribute;
    public string ErrorAttribute { get; public set; }
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ErrorAttribute();
    public void set_ErrorAttribute(string value);
    internal bool IsSetErrorAttribute();
}
public class Amazon.MQ.Model.CreateBrokerRequest : AmazonMQRequest {
    private AuthenticationStrategy _authenticationStrategy;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _brokerName;
    private ConfigurationId _configuration;
    private string _creatorRequestId;
    private DataReplicationMode _dataReplicationMode;
    private string _dataReplicationPrimaryBrokerArn;
    private DeploymentMode _deploymentMode;
    private EncryptionOptions _encryptionOptions;
    private EngineType _engineType;
    private string _engineVersion;
    private string _hostInstanceType;
    private LdapServerMetadataInput _ldapServerMetadata;
    private Logs _logs;
    private WeeklyStartTime _maintenanceWindowStartTime;
    private Nullable`1<bool> _publiclyAccessible;
    private List`1<string> _securityGroups;
    private BrokerStorageType _storageType;
    private List`1<string> _subnetIds;
    private Dictionary`2<string, string> _tags;
    private List`1<User> _users;
    public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    [AWSPropertyAttribute]
public string BrokerName { get; public set; }
    public ConfigurationId Configuration { get; public set; }
    public string CreatorRequestId { get; public set; }
    public DataReplicationMode DataReplicationMode { get; public set; }
    public string DataReplicationPrimaryBrokerArn { get; public set; }
    [AWSPropertyAttribute]
public DeploymentMode DeploymentMode { get; public set; }
    public EncryptionOptions EncryptionOptions { get; public set; }
    [AWSPropertyAttribute]
public EngineType EngineType { get; public set; }
    public string EngineVersion { get; public set; }
    [AWSPropertyAttribute]
public string HostInstanceType { get; public set; }
    public LdapServerMetadataInput LdapServerMetadata { get; public set; }
    public Logs Logs { get; public set; }
    public WeeklyStartTime MaintenanceWindowStartTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public BrokerStorageType StorageType { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<User> Users { get; public set; }
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_BrokerName();
    public void set_BrokerName(string value);
    internal bool IsSetBrokerName();
    public ConfigurationId get_Configuration();
    public void set_Configuration(ConfigurationId value);
    internal bool IsSetConfiguration();
    public string get_CreatorRequestId();
    public void set_CreatorRequestId(string value);
    internal bool IsSetCreatorRequestId();
    public DataReplicationMode get_DataReplicationMode();
    public void set_DataReplicationMode(DataReplicationMode value);
    internal bool IsSetDataReplicationMode();
    public string get_DataReplicationPrimaryBrokerArn();
    public void set_DataReplicationPrimaryBrokerArn(string value);
    internal bool IsSetDataReplicationPrimaryBrokerArn();
    public DeploymentMode get_DeploymentMode();
    public void set_DeploymentMode(DeploymentMode value);
    internal bool IsSetDeploymentMode();
    public EncryptionOptions get_EncryptionOptions();
    public void set_EncryptionOptions(EncryptionOptions value);
    internal bool IsSetEncryptionOptions();
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_HostInstanceType();
    public void set_HostInstanceType(string value);
    internal bool IsSetHostInstanceType();
    public LdapServerMetadataInput get_LdapServerMetadata();
    public void set_LdapServerMetadata(LdapServerMetadataInput value);
    internal bool IsSetLdapServerMetadata();
    public Logs get_Logs();
    public void set_Logs(Logs value);
    internal bool IsSetLogs();
    public WeeklyStartTime get_MaintenanceWindowStartTime();
    public void set_MaintenanceWindowStartTime(WeeklyStartTime value);
    internal bool IsSetMaintenanceWindowStartTime();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public BrokerStorageType get_StorageType();
    public void set_StorageType(BrokerStorageType value);
    internal bool IsSetStorageType();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public List`1<User> get_Users();
    public void set_Users(List`1<User> value);
    internal bool IsSetUsers();
}
public class Amazon.MQ.Model.CreateBrokerResponse : AmazonWebServiceResponse {
    private string _brokerArn;
    private string _brokerId;
    public string BrokerArn { get; public set; }
    public string BrokerId { get; public set; }
    public string get_BrokerArn();
    public void set_BrokerArn(string value);
    internal bool IsSetBrokerArn();
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
}
public class Amazon.MQ.Model.CreateConfigurationRequest : AmazonMQRequest {
    private AuthenticationStrategy _authenticationStrategy;
    private EngineType _engineType;
    private string _engineVersion;
    private string _name;
    private Dictionary`2<string, string> _tags;
    public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    [AWSPropertyAttribute]
public EngineType EngineType { get; public set; }
    public string EngineVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.MQ.Model.CreateConfigurationResponse : AmazonWebServiceResponse {
    private string _arn;
    private AuthenticationStrategy _authenticationStrategy;
    private Nullable`1<DateTime> _created;
    private string _id;
    private ConfigurationRevision _latestRevision;
    private string _name;
    public string Arn { get; public set; }
    public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    public string Id { get; public set; }
    public ConfigurationRevision LatestRevision { get; public set; }
    public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.MQ.Model.CreateTagsRequest : AmazonMQRequest {
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.MQ.Model.CreateTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.MQ.Model.CreateUserRequest : AmazonMQRequest {
    private string _brokerId;
    private Nullable`1<bool> _consoleAccess;
    private List`1<string> _groups;
    private string _password;
    private Nullable`1<bool> _replicationUser;
    private string _username;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    public Nullable`1<bool> ConsoleAccess { get; public set; }
    public List`1<string> Groups { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<bool> ReplicationUser { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public Nullable`1<bool> get_ConsoleAccess();
    public void set_ConsoleAccess(Nullable`1<bool> value);
    internal bool IsSetConsoleAccess();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<bool> get_ReplicationUser();
    public void set_ReplicationUser(Nullable`1<bool> value);
    internal bool IsSetReplicationUser();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.MQ.Model.CreateUserResponse : AmazonWebServiceResponse {
}
public class Amazon.MQ.Model.DataReplicationCounterpart : object {
    private string _brokerId;
    private string _region;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
}
public class Amazon.MQ.Model.DataReplicationMetadataOutput : object {
    private DataReplicationCounterpart _dataReplicationCounterpart;
    private string _dataReplicationRole;
    public DataReplicationCounterpart DataReplicationCounterpart { get; public set; }
    [AWSPropertyAttribute]
public string DataReplicationRole { get; public set; }
    public DataReplicationCounterpart get_DataReplicationCounterpart();
    public void set_DataReplicationCounterpart(DataReplicationCounterpart value);
    internal bool IsSetDataReplicationCounterpart();
    public string get_DataReplicationRole();
    public void set_DataReplicationRole(string value);
    internal bool IsSetDataReplicationRole();
}
public class Amazon.MQ.Model.DeleteBrokerRequest : AmazonMQRequest {
    private string _brokerId;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
}
public class Amazon.MQ.Model.DeleteBrokerResponse : AmazonWebServiceResponse {
    private string _brokerId;
    public string BrokerId { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
}
public class Amazon.MQ.Model.DeleteTagsRequest : AmazonMQRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.MQ.Model.DeleteTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.MQ.Model.DeleteUserRequest : AmazonMQRequest {
    private string _brokerId;
    private string _username;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.MQ.Model.DeleteUserResponse : AmazonWebServiceResponse {
}
public class Amazon.MQ.Model.DescribeBrokerEngineTypesRequest : AmazonMQRequest {
    private string _engineType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public string EngineType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_EngineType();
    public void set_EngineType(string value);
    internal bool IsSetEngineType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.DescribeBrokerEngineTypesResponse : AmazonWebServiceResponse {
    private List`1<BrokerEngineType> _brokerEngineTypes;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<BrokerEngineType> BrokerEngineTypes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<BrokerEngineType> get_BrokerEngineTypes();
    public void set_BrokerEngineTypes(List`1<BrokerEngineType> value);
    internal bool IsSetBrokerEngineTypes();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest : AmazonMQRequest {
    private string _engineType;
    private string _hostInstanceType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _storageType;
    public string EngineType { get; public set; }
    public string HostInstanceType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string StorageType { get; public set; }
    public string get_EngineType();
    public void set_EngineType(string value);
    internal bool IsSetEngineType();
    public string get_HostInstanceType();
    public void set_HostInstanceType(string value);
    internal bool IsSetHostInstanceType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
}
public class Amazon.MQ.Model.DescribeBrokerInstanceOptionsResponse : AmazonWebServiceResponse {
    private List`1<BrokerInstanceOption> _brokerInstanceOptions;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<BrokerInstanceOption> BrokerInstanceOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<BrokerInstanceOption> get_BrokerInstanceOptions();
    public void set_BrokerInstanceOptions(List`1<BrokerInstanceOption> value);
    internal bool IsSetBrokerInstanceOptions();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.DescribeBrokerRequest : AmazonMQRequest {
    private string _brokerId;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
}
public class Amazon.MQ.Model.DescribeBrokerResponse : AmazonWebServiceResponse {
    private List`1<ActionRequired> _actionsRequired;
    private AuthenticationStrategy _authenticationStrategy;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _brokerArn;
    private string _brokerId;
    private List`1<BrokerInstance> _brokerInstances;
    private string _brokerName;
    private BrokerState _brokerState;
    private Configurations _configurations;
    private Nullable`1<DateTime> _created;
    private DataReplicationMetadataOutput _dataReplicationMetadata;
    private DataReplicationMode _dataReplicationMode;
    private DeploymentMode _deploymentMode;
    private EncryptionOptions _encryptionOptions;
    private EngineType _engineType;
    private string _engineVersion;
    private string _hostInstanceType;
    private LdapServerMetadataOutput _ldapServerMetadata;
    private LogsSummary _logs;
    private WeeklyStartTime _maintenanceWindowStartTime;
    private AuthenticationStrategy _pendingAuthenticationStrategy;
    private DataReplicationMetadataOutput _pendingDataReplicationMetadata;
    private DataReplicationMode _pendingDataReplicationMode;
    private string _pendingEngineVersion;
    private string _pendingHostInstanceType;
    private LdapServerMetadataOutput _pendingLdapServerMetadata;
    private List`1<string> _pendingSecurityGroups;
    private Nullable`1<bool> _publiclyAccessible;
    private List`1<string> _securityGroups;
    private BrokerStorageType _storageType;
    private List`1<string> _subnetIds;
    private Dictionary`2<string, string> _tags;
    private List`1<UserSummary> _users;
    public List`1<ActionRequired> ActionsRequired { get; public set; }
    public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string BrokerArn { get; public set; }
    public string BrokerId { get; public set; }
    public List`1<BrokerInstance> BrokerInstances { get; public set; }
    public string BrokerName { get; public set; }
    public BrokerState BrokerState { get; public set; }
    public Configurations Configurations { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    public DataReplicationMetadataOutput DataReplicationMetadata { get; public set; }
    public DataReplicationMode DataReplicationMode { get; public set; }
    public DeploymentMode DeploymentMode { get; public set; }
    public EncryptionOptions EncryptionOptions { get; public set; }
    public EngineType EngineType { get; public set; }
    public string EngineVersion { get; public set; }
    public string HostInstanceType { get; public set; }
    public LdapServerMetadataOutput LdapServerMetadata { get; public set; }
    public LogsSummary Logs { get; public set; }
    public WeeklyStartTime MaintenanceWindowStartTime { get; public set; }
    public AuthenticationStrategy PendingAuthenticationStrategy { get; public set; }
    public DataReplicationMetadataOutput PendingDataReplicationMetadata { get; public set; }
    public DataReplicationMode PendingDataReplicationMode { get; public set; }
    public string PendingEngineVersion { get; public set; }
    public string PendingHostInstanceType { get; public set; }
    public LdapServerMetadataOutput PendingLdapServerMetadata { get; public set; }
    public List`1<string> PendingSecurityGroups { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public BrokerStorageType StorageType { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public List`1<UserSummary> Users { get; public set; }
    public List`1<ActionRequired> get_ActionsRequired();
    public void set_ActionsRequired(List`1<ActionRequired> value);
    internal bool IsSetActionsRequired();
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_BrokerArn();
    public void set_BrokerArn(string value);
    internal bool IsSetBrokerArn();
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public List`1<BrokerInstance> get_BrokerInstances();
    public void set_BrokerInstances(List`1<BrokerInstance> value);
    internal bool IsSetBrokerInstances();
    public string get_BrokerName();
    public void set_BrokerName(string value);
    internal bool IsSetBrokerName();
    public BrokerState get_BrokerState();
    public void set_BrokerState(BrokerState value);
    internal bool IsSetBrokerState();
    public Configurations get_Configurations();
    public void set_Configurations(Configurations value);
    internal bool IsSetConfigurations();
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public DataReplicationMetadataOutput get_DataReplicationMetadata();
    public void set_DataReplicationMetadata(DataReplicationMetadataOutput value);
    internal bool IsSetDataReplicationMetadata();
    public DataReplicationMode get_DataReplicationMode();
    public void set_DataReplicationMode(DataReplicationMode value);
    internal bool IsSetDataReplicationMode();
    public DeploymentMode get_DeploymentMode();
    public void set_DeploymentMode(DeploymentMode value);
    internal bool IsSetDeploymentMode();
    public EncryptionOptions get_EncryptionOptions();
    public void set_EncryptionOptions(EncryptionOptions value);
    internal bool IsSetEncryptionOptions();
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_HostInstanceType();
    public void set_HostInstanceType(string value);
    internal bool IsSetHostInstanceType();
    public LdapServerMetadataOutput get_LdapServerMetadata();
    public void set_LdapServerMetadata(LdapServerMetadataOutput value);
    internal bool IsSetLdapServerMetadata();
    public LogsSummary get_Logs();
    public void set_Logs(LogsSummary value);
    internal bool IsSetLogs();
    public WeeklyStartTime get_MaintenanceWindowStartTime();
    public void set_MaintenanceWindowStartTime(WeeklyStartTime value);
    internal bool IsSetMaintenanceWindowStartTime();
    public AuthenticationStrategy get_PendingAuthenticationStrategy();
    public void set_PendingAuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetPendingAuthenticationStrategy();
    public DataReplicationMetadataOutput get_PendingDataReplicationMetadata();
    public void set_PendingDataReplicationMetadata(DataReplicationMetadataOutput value);
    internal bool IsSetPendingDataReplicationMetadata();
    public DataReplicationMode get_PendingDataReplicationMode();
    public void set_PendingDataReplicationMode(DataReplicationMode value);
    internal bool IsSetPendingDataReplicationMode();
    public string get_PendingEngineVersion();
    public void set_PendingEngineVersion(string value);
    internal bool IsSetPendingEngineVersion();
    public string get_PendingHostInstanceType();
    public void set_PendingHostInstanceType(string value);
    internal bool IsSetPendingHostInstanceType();
    public LdapServerMetadataOutput get_PendingLdapServerMetadata();
    public void set_PendingLdapServerMetadata(LdapServerMetadataOutput value);
    internal bool IsSetPendingLdapServerMetadata();
    public List`1<string> get_PendingSecurityGroups();
    public void set_PendingSecurityGroups(List`1<string> value);
    internal bool IsSetPendingSecurityGroups();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public BrokerStorageType get_StorageType();
    public void set_StorageType(BrokerStorageType value);
    internal bool IsSetStorageType();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public List`1<UserSummary> get_Users();
    public void set_Users(List`1<UserSummary> value);
    internal bool IsSetUsers();
}
public class Amazon.MQ.Model.DescribeConfigurationRequest : AmazonMQRequest {
    private string _configurationId;
    [AWSPropertyAttribute]
public string ConfigurationId { get; public set; }
    public string get_ConfigurationId();
    public void set_ConfigurationId(string value);
    internal bool IsSetConfigurationId();
}
public class Amazon.MQ.Model.DescribeConfigurationResponse : AmazonWebServiceResponse {
    private string _arn;
    private AuthenticationStrategy _authenticationStrategy;
    private Nullable`1<DateTime> _created;
    private string _description;
    private EngineType _engineType;
    private string _engineVersion;
    private string _id;
    private ConfigurationRevision _latestRevision;
    private string _name;
    private Dictionary`2<string, string> _tags;
    public string Arn { get; public set; }
    public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    public string Description { get; public set; }
    public EngineType EngineType { get; public set; }
    public string EngineVersion { get; public set; }
    public string Id { get; public set; }
    public ConfigurationRevision LatestRevision { get; public set; }
    public string Name { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EngineType get_EngineType();
    public void set_EngineType(EngineType value);
    internal bool IsSetEngineType();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.MQ.Model.DescribeConfigurationRevisionRequest : AmazonMQRequest {
    private string _configurationId;
    private string _configurationRevision;
    [AWSPropertyAttribute]
public string ConfigurationId { get; public set; }
    [AWSPropertyAttribute]
public string ConfigurationRevision { get; public set; }
    public string get_ConfigurationId();
    public void set_ConfigurationId(string value);
    internal bool IsSetConfigurationId();
    public string get_ConfigurationRevision();
    public void set_ConfigurationRevision(string value);
    internal bool IsSetConfigurationRevision();
}
public class Amazon.MQ.Model.DescribeConfigurationRevisionResponse : AmazonWebServiceResponse {
    private string _configurationId;
    private Nullable`1<DateTime> _created;
    private string _data;
    private string _description;
    public string ConfigurationId { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    public string Data { get; public set; }
    public string Description { get; public set; }
    public string get_ConfigurationId();
    public void set_ConfigurationId(string value);
    internal bool IsSetConfigurationId();
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public string get_Data();
    public void set_Data(string value);
    internal bool IsSetData();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.MQ.Model.DescribeUserRequest : AmazonMQRequest {
    private string _brokerId;
    private string _username;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.MQ.Model.DescribeUserResponse : AmazonWebServiceResponse {
    private string _brokerId;
    private Nullable`1<bool> _consoleAccess;
    private List`1<string> _groups;
    private UserPendingChanges _pending;
    private Nullable`1<bool> _replicationUser;
    private string _username;
    public string BrokerId { get; public set; }
    public Nullable`1<bool> ConsoleAccess { get; public set; }
    public List`1<string> Groups { get; public set; }
    public UserPendingChanges Pending { get; public set; }
    public Nullable`1<bool> ReplicationUser { get; public set; }
    public string Username { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public Nullable`1<bool> get_ConsoleAccess();
    public void set_ConsoleAccess(Nullable`1<bool> value);
    internal bool IsSetConsoleAccess();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public UserPendingChanges get_Pending();
    public void set_Pending(UserPendingChanges value);
    internal bool IsSetPending();
    public Nullable`1<bool> get_ReplicationUser();
    public void set_ReplicationUser(Nullable`1<bool> value);
    internal bool IsSetReplicationUser();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.MQ.Model.EncryptionOptions : object {
    private string _kmsKeyId;
    private Nullable`1<bool> _useAwsOwnedKey;
    public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> UseAwsOwnedKey { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_UseAwsOwnedKey();
    public void set_UseAwsOwnedKey(Nullable`1<bool> value);
    internal bool IsSetUseAwsOwnedKey();
}
public class Amazon.MQ.Model.EngineVersion : object {
    private string _name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.MQ.Model.ForbiddenException : AmazonMQException {
    private string _errorAttribute;
    public string ErrorAttribute { get; public set; }
    public ForbiddenException(string message);
    public ForbiddenException(string message, Exception innerException);
    public ForbiddenException(Exception innerException);
    public ForbiddenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ForbiddenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ErrorAttribute();
    public void set_ErrorAttribute(string value);
    internal bool IsSetErrorAttribute();
}
public interface Amazon.MQ.Model.IListBrokersPaginator {
    public IPaginatedEnumerable`1<ListBrokersResponse> Responses { get; }
    public IPaginatedEnumerable`1<BrokerSummary> BrokerSummaries { get; }
    public abstract virtual IPaginatedEnumerable`1<ListBrokersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<BrokerSummary> get_BrokerSummaries();
}
public interface Amazon.MQ.Model.IMQPaginatorFactory {
    public abstract virtual IListBrokersPaginator ListBrokers(ListBrokersRequest request);
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ActionRequiredUnmarshaller : object {
    private static ActionRequiredUnmarshaller _instance;
    public static ActionRequiredUnmarshaller Instance { get; }
    private static ActionRequiredUnmarshaller();
    private sealed virtual override ActionRequired Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.ActionRequired,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ActionRequired Unmarshall(JsonUnmarshallerContext context);
    public static ActionRequiredUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller : object {
    private static AvailabilityZoneUnmarshaller _instance;
    public static AvailabilityZoneUnmarshaller Instance { get; }
    private static AvailabilityZoneUnmarshaller();
    private sealed virtual override AvailabilityZone Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.AvailabilityZone,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZone Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller : object {
    private static BadRequestExceptionUnmarshaller _instance;
    public static BadRequestExceptionUnmarshaller Instance { get; }
    private static BadRequestExceptionUnmarshaller();
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BadRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.BrokerEngineTypeUnmarshaller : object {
    private static BrokerEngineTypeUnmarshaller _instance;
    public static BrokerEngineTypeUnmarshaller Instance { get; }
    private static BrokerEngineTypeUnmarshaller();
    private sealed virtual override BrokerEngineType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.BrokerEngineType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerEngineType Unmarshall(JsonUnmarshallerContext context);
    public static BrokerEngineTypeUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceOptionUnmarshaller : object {
    private static BrokerInstanceOptionUnmarshaller _instance;
    public static BrokerInstanceOptionUnmarshaller Instance { get; }
    private static BrokerInstanceOptionUnmarshaller();
    private sealed virtual override BrokerInstanceOption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.BrokerInstanceOption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerInstanceOption Unmarshall(JsonUnmarshallerContext context);
    public static BrokerInstanceOptionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceUnmarshaller : object {
    private static BrokerInstanceUnmarshaller _instance;
    public static BrokerInstanceUnmarshaller Instance { get; }
    private static BrokerInstanceUnmarshaller();
    private sealed virtual override BrokerInstance Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.BrokerInstance,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerInstance Unmarshall(JsonUnmarshallerContext context);
    public static BrokerInstanceUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.BrokerSummaryUnmarshaller : object {
    private static BrokerSummaryUnmarshaller _instance;
    public static BrokerSummaryUnmarshaller Instance { get; }
    private static BrokerSummaryUnmarshaller();
    private sealed virtual override BrokerSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.BrokerSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BrokerSummary Unmarshall(JsonUnmarshallerContext context);
    public static BrokerSummaryUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdMarshaller : object {
    public static ConfigurationIdMarshaller Instance;
    private static ConfigurationIdMarshaller();
    public sealed virtual void Marshall(ConfigurationId requestObject, JsonMarshallerContext context);
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdUnmarshaller : object {
    private static ConfigurationIdUnmarshaller _instance;
    public static ConfigurationIdUnmarshaller Instance { get; }
    private static ConfigurationIdUnmarshaller();
    private sealed virtual override ConfigurationId Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.ConfigurationId,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationId Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationIdUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationRevisionUnmarshaller : object {
    private static ConfigurationRevisionUnmarshaller _instance;
    public static ConfigurationRevisionUnmarshaller Instance { get; }
    private static ConfigurationRevisionUnmarshaller();
    private sealed virtual override ConfigurationRevision Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.ConfigurationRevision,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationRevision Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationRevisionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationsUnmarshaller : object {
    private static ConfigurationsUnmarshaller _instance;
    public static ConfigurationsUnmarshaller Instance { get; }
    private static ConfigurationsUnmarshaller();
    private sealed virtual override Configurations Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.Configurations,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Configurations Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationsUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationUnmarshaller : object {
    private static ConfigurationUnmarshaller _instance;
    public static ConfigurationUnmarshaller Instance { get; }
    private static ConfigurationUnmarshaller();
    private sealed virtual override Configuration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.Configuration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Configuration Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerRequestMarshaller : object {
    private static CreateBrokerRequestMarshaller _instance;
    public static CreateBrokerRequestMarshaller Instance { get; }
    private static CreateBrokerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateBrokerRequest publicRequest);
    internal static CreateBrokerRequestMarshaller GetInstance();
    public static CreateBrokerRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateBrokerResponseUnmarshaller _instance;
    public static CreateBrokerResponseUnmarshaller Instance { get; }
    private static CreateBrokerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateBrokerResponseUnmarshaller GetInstance();
    public static CreateBrokerResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationRequestMarshaller : object {
    private static CreateConfigurationRequestMarshaller _instance;
    public static CreateConfigurationRequestMarshaller Instance { get; }
    private static CreateConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateConfigurationRequest publicRequest);
    internal static CreateConfigurationRequestMarshaller GetInstance();
    public static CreateConfigurationRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateConfigurationResponseUnmarshaller _instance;
    public static CreateConfigurationResponseUnmarshaller Instance { get; }
    private static CreateConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateConfigurationResponseUnmarshaller GetInstance();
    public static CreateConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller : object {
    private static CreateTagsRequestMarshaller _instance;
    public static CreateTagsRequestMarshaller Instance { get; }
    private static CreateTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTagsRequest publicRequest);
    internal static CreateTagsRequestMarshaller GetInstance();
    public static CreateTagsRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTagsResponseUnmarshaller _instance;
    public static CreateTagsResponseUnmarshaller Instance { get; }
    private static CreateTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTagsResponseUnmarshaller GetInstance();
    public static CreateTagsResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller : object {
    private static CreateUserRequestMarshaller _instance;
    public static CreateUserRequestMarshaller Instance { get; }
    private static CreateUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateUserRequest publicRequest);
    internal static CreateUserRequestMarshaller GetInstance();
    public static CreateUserRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateUserResponseUnmarshaller _instance;
    public static CreateUserResponseUnmarshaller Instance { get; }
    private static CreateUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateUserResponseUnmarshaller GetInstance();
    public static CreateUserResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationCounterpartUnmarshaller : object {
    private static DataReplicationCounterpartUnmarshaller _instance;
    public static DataReplicationCounterpartUnmarshaller Instance { get; }
    private static DataReplicationCounterpartUnmarshaller();
    private sealed virtual override DataReplicationCounterpart Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.DataReplicationCounterpart,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataReplicationCounterpart Unmarshall(JsonUnmarshallerContext context);
    public static DataReplicationCounterpartUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationMetadataOutputUnmarshaller : object {
    private static DataReplicationMetadataOutputUnmarshaller _instance;
    public static DataReplicationMetadataOutputUnmarshaller Instance { get; }
    private static DataReplicationMetadataOutputUnmarshaller();
    private sealed virtual override DataReplicationMetadataOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.DataReplicationMetadataOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataReplicationMetadataOutput Unmarshall(JsonUnmarshallerContext context);
    public static DataReplicationMetadataOutputUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerRequestMarshaller : object {
    private static DeleteBrokerRequestMarshaller _instance;
    public static DeleteBrokerRequestMarshaller Instance { get; }
    private static DeleteBrokerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBrokerRequest publicRequest);
    internal static DeleteBrokerRequestMarshaller GetInstance();
    public static DeleteBrokerRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteBrokerResponseUnmarshaller _instance;
    public static DeleteBrokerResponseUnmarshaller Instance { get; }
    private static DeleteBrokerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBrokerResponseUnmarshaller GetInstance();
    public static DeleteBrokerResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller : object {
    private static DeleteTagsRequestMarshaller _instance;
    public static DeleteTagsRequestMarshaller Instance { get; }
    private static DeleteTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTagsRequest publicRequest);
    internal static DeleteTagsRequestMarshaller GetInstance();
    public static DeleteTagsRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTagsResponseUnmarshaller _instance;
    public static DeleteTagsResponseUnmarshaller Instance { get; }
    private static DeleteTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTagsResponseUnmarshaller GetInstance();
    public static DeleteTagsResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller : object {
    private static DeleteUserRequestMarshaller _instance;
    public static DeleteUserRequestMarshaller Instance { get; }
    private static DeleteUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUserRequest publicRequest);
    internal static DeleteUserRequestMarshaller GetInstance();
    public static DeleteUserRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUserResponseUnmarshaller _instance;
    public static DeleteUserResponseUnmarshaller Instance { get; }
    private static DeleteUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUserResponseUnmarshaller GetInstance();
    public static DeleteUserResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesRequestMarshaller : object {
    private static DescribeBrokerEngineTypesRequestMarshaller _instance;
    public static DescribeBrokerEngineTypesRequestMarshaller Instance { get; }
    private static DescribeBrokerEngineTypesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBrokerEngineTypesRequest publicRequest);
    internal static DescribeBrokerEngineTypesRequestMarshaller GetInstance();
    public static DescribeBrokerEngineTypesRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeBrokerEngineTypesResponseUnmarshaller _instance;
    public static DescribeBrokerEngineTypesResponseUnmarshaller Instance { get; }
    private static DescribeBrokerEngineTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBrokerEngineTypesResponseUnmarshaller GetInstance();
    public static DescribeBrokerEngineTypesResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsRequestMarshaller : object {
    private static DescribeBrokerInstanceOptionsRequestMarshaller _instance;
    public static DescribeBrokerInstanceOptionsRequestMarshaller Instance { get; }
    private static DescribeBrokerInstanceOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBrokerInstanceOptionsRequest publicRequest);
    internal static DescribeBrokerInstanceOptionsRequestMarshaller GetInstance();
    public static DescribeBrokerInstanceOptionsRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeBrokerInstanceOptionsResponseUnmarshaller _instance;
    public static DescribeBrokerInstanceOptionsResponseUnmarshaller Instance { get; }
    private static DescribeBrokerInstanceOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBrokerInstanceOptionsResponseUnmarshaller GetInstance();
    public static DescribeBrokerInstanceOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerRequestMarshaller : object {
    private static DescribeBrokerRequestMarshaller _instance;
    public static DescribeBrokerRequestMarshaller Instance { get; }
    private static DescribeBrokerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBrokerRequest publicRequest);
    internal static DescribeBrokerRequestMarshaller GetInstance();
    public static DescribeBrokerRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeBrokerResponseUnmarshaller _instance;
    public static DescribeBrokerResponseUnmarshaller Instance { get; }
    private static DescribeBrokerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBrokerResponseUnmarshaller GetInstance();
    public static DescribeBrokerResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRequestMarshaller : object {
    private static DescribeConfigurationRequestMarshaller _instance;
    public static DescribeConfigurationRequestMarshaller Instance { get; }
    private static DescribeConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConfigurationRequest publicRequest);
    internal static DescribeConfigurationRequestMarshaller GetInstance();
    public static DescribeConfigurationRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeConfigurationResponseUnmarshaller _instance;
    public static DescribeConfigurationResponseUnmarshaller Instance { get; }
    private static DescribeConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConfigurationResponseUnmarshaller GetInstance();
    public static DescribeConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionRequestMarshaller : object {
    private static DescribeConfigurationRevisionRequestMarshaller _instance;
    public static DescribeConfigurationRevisionRequestMarshaller Instance { get; }
    private static DescribeConfigurationRevisionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConfigurationRevisionRequest publicRequest);
    internal static DescribeConfigurationRevisionRequestMarshaller GetInstance();
    public static DescribeConfigurationRevisionRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeConfigurationRevisionResponseUnmarshaller _instance;
    public static DescribeConfigurationRevisionResponseUnmarshaller Instance { get; }
    private static DescribeConfigurationRevisionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConfigurationRevisionResponseUnmarshaller GetInstance();
    public static DescribeConfigurationRevisionResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller : object {
    private static DescribeUserRequestMarshaller _instance;
    public static DescribeUserRequestMarshaller Instance { get; }
    private static DescribeUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeUserRequest publicRequest);
    internal static DescribeUserRequestMarshaller GetInstance();
    public static DescribeUserRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeUserResponseUnmarshaller _instance;
    public static DescribeUserResponseUnmarshaller Instance { get; }
    private static DescribeUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeUserResponseUnmarshaller GetInstance();
    public static DescribeUserResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsMarshaller : object {
    public static EncryptionOptionsMarshaller Instance;
    private static EncryptionOptionsMarshaller();
    public sealed virtual void Marshall(EncryptionOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsUnmarshaller : object {
    private static EncryptionOptionsUnmarshaller _instance;
    public static EncryptionOptionsUnmarshaller Instance { get; }
    private static EncryptionOptionsUnmarshaller();
    private sealed virtual override EncryptionOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.EncryptionOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionOptions Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionOptionsUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.EngineVersionUnmarshaller : object {
    private static EngineVersionUnmarshaller _instance;
    public static EngineVersionUnmarshaller Instance { get; }
    private static EngineVersionUnmarshaller();
    private sealed virtual override EngineVersion Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.EngineVersion,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EngineVersion Unmarshall(JsonUnmarshallerContext context);
    public static EngineVersionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller : object {
    private static ForbiddenExceptionUnmarshaller _instance;
    public static ForbiddenExceptionUnmarshaller Instance { get; }
    private static ForbiddenExceptionUnmarshaller();
    public sealed virtual ForbiddenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ForbiddenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ForbiddenExceptionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller : object {
    private static InternalServerErrorExceptionUnmarshaller _instance;
    public static InternalServerErrorExceptionUnmarshaller Instance { get; }
    private static InternalServerErrorExceptionUnmarshaller();
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataInputMarshaller : object {
    public static LdapServerMetadataInputMarshaller Instance;
    private static LdapServerMetadataInputMarshaller();
    public sealed virtual void Marshall(LdapServerMetadataInput requestObject, JsonMarshallerContext context);
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataOutputUnmarshaller : object {
    private static LdapServerMetadataOutputUnmarshaller _instance;
    public static LdapServerMetadataOutputUnmarshaller Instance { get; }
    private static LdapServerMetadataOutputUnmarshaller();
    private sealed virtual override LdapServerMetadataOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.LdapServerMetadataOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LdapServerMetadataOutput Unmarshall(JsonUnmarshallerContext context);
    public static LdapServerMetadataOutputUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersRequestMarshaller : object {
    private static ListBrokersRequestMarshaller _instance;
    public static ListBrokersRequestMarshaller Instance { get; }
    private static ListBrokersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListBrokersRequest publicRequest);
    internal static ListBrokersRequestMarshaller GetInstance();
    public static ListBrokersRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListBrokersResponseUnmarshaller _instance;
    public static ListBrokersResponseUnmarshaller Instance { get; }
    private static ListBrokersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListBrokersResponseUnmarshaller GetInstance();
    public static ListBrokersResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsRequestMarshaller : object {
    private static ListConfigurationRevisionsRequestMarshaller _instance;
    public static ListConfigurationRevisionsRequestMarshaller Instance { get; }
    private static ListConfigurationRevisionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListConfigurationRevisionsRequest publicRequest);
    internal static ListConfigurationRevisionsRequestMarshaller GetInstance();
    public static ListConfigurationRevisionsRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListConfigurationRevisionsResponseUnmarshaller _instance;
    public static ListConfigurationRevisionsResponseUnmarshaller Instance { get; }
    private static ListConfigurationRevisionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListConfigurationRevisionsResponseUnmarshaller GetInstance();
    public static ListConfigurationRevisionsResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsRequestMarshaller : object {
    private static ListConfigurationsRequestMarshaller _instance;
    public static ListConfigurationsRequestMarshaller Instance { get; }
    private static ListConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListConfigurationsRequest publicRequest);
    internal static ListConfigurationsRequestMarshaller GetInstance();
    public static ListConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListConfigurationsResponseUnmarshaller _instance;
    public static ListConfigurationsResponseUnmarshaller Instance { get; }
    private static ListConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListConfigurationsResponseUnmarshaller GetInstance();
    public static ListConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller : object {
    private static ListTagsRequestMarshaller _instance;
    public static ListTagsRequestMarshaller Instance { get; }
    private static ListTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsRequest publicRequest);
    internal static ListTagsRequestMarshaller GetInstance();
    public static ListTagsRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsResponseUnmarshaller _instance;
    public static ListTagsResponseUnmarshaller Instance { get; }
    private static ListTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsResponseUnmarshaller GetInstance();
    public static ListTagsResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller : object {
    private static ListUsersRequestMarshaller _instance;
    public static ListUsersRequestMarshaller Instance { get; }
    private static ListUsersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListUsersRequest publicRequest);
    internal static ListUsersRequestMarshaller GetInstance();
    public static ListUsersRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListUsersResponseUnmarshaller _instance;
    public static ListUsersResponseUnmarshaller Instance { get; }
    private static ListUsersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListUsersResponseUnmarshaller GetInstance();
    public static ListUsersResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.LogsMarshaller : object {
    public static LogsMarshaller Instance;
    private static LogsMarshaller();
    public sealed virtual void Marshall(Logs requestObject, JsonMarshallerContext context);
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.LogsSummaryUnmarshaller : object {
    private static LogsSummaryUnmarshaller _instance;
    public static LogsSummaryUnmarshaller Instance { get; }
    private static LogsSummaryUnmarshaller();
    private sealed virtual override LogsSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.LogsSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogsSummary Unmarshall(JsonUnmarshallerContext context);
    public static LogsSummaryUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.LogsUnmarshaller : object {
    private static LogsUnmarshaller _instance;
    public static LogsUnmarshaller Instance { get; }
    private static LogsUnmarshaller();
    private sealed virtual override Logs Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.Logs,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Logs Unmarshall(JsonUnmarshallerContext context);
    public static LogsUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller : object {
    private static NotFoundExceptionUnmarshaller _instance;
    public static NotFoundExceptionUnmarshaller Instance { get; }
    private static NotFoundExceptionUnmarshaller();
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.PendingLogsUnmarshaller : object {
    private static PendingLogsUnmarshaller _instance;
    public static PendingLogsUnmarshaller Instance { get; }
    private static PendingLogsUnmarshaller();
    private sealed virtual override PendingLogs Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.PendingLogs,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PendingLogs Unmarshall(JsonUnmarshallerContext context);
    public static PendingLogsUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.PromoteRequestMarshaller : object {
    private static PromoteRequestMarshaller _instance;
    public static PromoteRequestMarshaller Instance { get; }
    private static PromoteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PromoteRequest publicRequest);
    internal static PromoteRequestMarshaller GetInstance();
    public static PromoteRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.PromoteResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PromoteResponseUnmarshaller _instance;
    public static PromoteResponseUnmarshaller Instance { get; }
    private static PromoteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PromoteResponseUnmarshaller GetInstance();
    public static PromoteResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerRequestMarshaller : object {
    private static RebootBrokerRequestMarshaller _instance;
    public static RebootBrokerRequestMarshaller Instance { get; }
    private static RebootBrokerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootBrokerRequest publicRequest);
    internal static RebootBrokerRequestMarshaller GetInstance();
    public static RebootBrokerRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RebootBrokerResponseUnmarshaller _instance;
    public static RebootBrokerResponseUnmarshaller Instance { get; }
    private static RebootBrokerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootBrokerResponseUnmarshaller GetInstance();
    public static RebootBrokerResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.SanitizationWarningUnmarshaller : object {
    private static SanitizationWarningUnmarshaller _instance;
    public static SanitizationWarningUnmarshaller Instance { get; }
    private static SanitizationWarningUnmarshaller();
    private sealed virtual override SanitizationWarning Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.SanitizationWarning,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SanitizationWarning Unmarshall(JsonUnmarshallerContext context);
    public static SanitizationWarningUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller : object {
    private static UnauthorizedExceptionUnmarshaller _instance;
    public static UnauthorizedExceptionUnmarshaller Instance { get; }
    private static UnauthorizedExceptionUnmarshaller();
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnauthorizedExceptionUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerRequestMarshaller : object {
    private static UpdateBrokerRequestMarshaller _instance;
    public static UpdateBrokerRequestMarshaller Instance { get; }
    private static UpdateBrokerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateBrokerRequest publicRequest);
    internal static UpdateBrokerRequestMarshaller GetInstance();
    public static UpdateBrokerRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateBrokerResponseUnmarshaller _instance;
    public static UpdateBrokerResponseUnmarshaller Instance { get; }
    private static UpdateBrokerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateBrokerResponseUnmarshaller GetInstance();
    public static UpdateBrokerResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationRequestMarshaller : object {
    private static UpdateConfigurationRequestMarshaller _instance;
    public static UpdateConfigurationRequestMarshaller Instance { get; }
    private static UpdateConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConfigurationRequest publicRequest);
    internal static UpdateConfigurationRequestMarshaller GetInstance();
    public static UpdateConfigurationRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateConfigurationResponseUnmarshaller _instance;
    public static UpdateConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConfigurationResponseUnmarshaller GetInstance();
    public static UpdateConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller : object {
    private static UpdateUserRequestMarshaller _instance;
    public static UpdateUserRequestMarshaller Instance { get; }
    private static UpdateUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateUserRequest publicRequest);
    internal static UpdateUserRequestMarshaller GetInstance();
    public static UpdateUserRequestMarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateUserResponseUnmarshaller _instance;
    public static UpdateUserResponseUnmarshaller Instance { get; }
    private static UpdateUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateUserResponseUnmarshaller GetInstance();
    public static UpdateUserResponseUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UserMarshaller : object {
    public static UserMarshaller Instance;
    private static UserMarshaller();
    public sealed virtual void Marshall(User requestObject, JsonMarshallerContext context);
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UserPendingChangesUnmarshaller : object {
    private static UserPendingChangesUnmarshaller _instance;
    public static UserPendingChangesUnmarshaller Instance { get; }
    private static UserPendingChangesUnmarshaller();
    private sealed virtual override UserPendingChanges Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.UserPendingChanges,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserPendingChanges Unmarshall(JsonUnmarshallerContext context);
    public static UserPendingChangesUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.UserSummaryUnmarshaller : object {
    private static UserSummaryUnmarshaller _instance;
    public static UserSummaryUnmarshaller Instance { get; }
    private static UserSummaryUnmarshaller();
    private sealed virtual override UserSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.UserSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserSummary Unmarshall(JsonUnmarshallerContext context);
    public static UserSummaryUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeMarshaller : object {
    public static WeeklyStartTimeMarshaller Instance;
    private static WeeklyStartTimeMarshaller();
    public sealed virtual void Marshall(WeeklyStartTime requestObject, JsonMarshallerContext context);
}
public class Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeUnmarshaller : object {
    private static WeeklyStartTimeUnmarshaller _instance;
    public static WeeklyStartTimeUnmarshaller Instance { get; }
    private static WeeklyStartTimeUnmarshaller();
    private sealed virtual override WeeklyStartTime Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.MQ.Model.WeeklyStartTime,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WeeklyStartTime Unmarshall(JsonUnmarshallerContext context);
    public static WeeklyStartTimeUnmarshaller get_Instance();
}
public class Amazon.MQ.Model.InternalServerErrorException : AmazonMQException {
    private string _errorAttribute;
    public string ErrorAttribute { get; public set; }
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ErrorAttribute();
    public void set_ErrorAttribute(string value);
    internal bool IsSetErrorAttribute();
}
public class Amazon.MQ.Model.LdapServerMetadataInput : object {
    private List`1<string> _hosts;
    private string _roleBase;
    private string _roleName;
    private string _roleSearchMatching;
    private Nullable`1<bool> _roleSearchSubtree;
    private string _serviceAccountPassword;
    private string _serviceAccountUsername;
    private string _userBase;
    private string _userRoleName;
    private string _userSearchMatching;
    private Nullable`1<bool> _userSearchSubtree;
    [AWSPropertyAttribute]
public List`1<string> Hosts { get; public set; }
    [AWSPropertyAttribute]
public string RoleBase { get; public set; }
    public string RoleName { get; public set; }
    [AWSPropertyAttribute]
public string RoleSearchMatching { get; public set; }
    public Nullable`1<bool> RoleSearchSubtree { get; public set; }
    [AWSPropertyAttribute]
public string ServiceAccountPassword { get; public set; }
    [AWSPropertyAttribute]
public string ServiceAccountUsername { get; public set; }
    [AWSPropertyAttribute]
public string UserBase { get; public set; }
    public string UserRoleName { get; public set; }
    [AWSPropertyAttribute]
public string UserSearchMatching { get; public set; }
    public Nullable`1<bool> UserSearchSubtree { get; public set; }
    public List`1<string> get_Hosts();
    public void set_Hosts(List`1<string> value);
    internal bool IsSetHosts();
    public string get_RoleBase();
    public void set_RoleBase(string value);
    internal bool IsSetRoleBase();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public string get_RoleSearchMatching();
    public void set_RoleSearchMatching(string value);
    internal bool IsSetRoleSearchMatching();
    public Nullable`1<bool> get_RoleSearchSubtree();
    public void set_RoleSearchSubtree(Nullable`1<bool> value);
    internal bool IsSetRoleSearchSubtree();
    public string get_ServiceAccountPassword();
    public void set_ServiceAccountPassword(string value);
    internal bool IsSetServiceAccountPassword();
    public string get_ServiceAccountUsername();
    public void set_ServiceAccountUsername(string value);
    internal bool IsSetServiceAccountUsername();
    public string get_UserBase();
    public void set_UserBase(string value);
    internal bool IsSetUserBase();
    public string get_UserRoleName();
    public void set_UserRoleName(string value);
    internal bool IsSetUserRoleName();
    public string get_UserSearchMatching();
    public void set_UserSearchMatching(string value);
    internal bool IsSetUserSearchMatching();
    public Nullable`1<bool> get_UserSearchSubtree();
    public void set_UserSearchSubtree(Nullable`1<bool> value);
    internal bool IsSetUserSearchSubtree();
}
public class Amazon.MQ.Model.LdapServerMetadataOutput : object {
    private List`1<string> _hosts;
    private string _roleBase;
    private string _roleName;
    private string _roleSearchMatching;
    private Nullable`1<bool> _roleSearchSubtree;
    private string _serviceAccountUsername;
    private string _userBase;
    private string _userRoleName;
    private string _userSearchMatching;
    private Nullable`1<bool> _userSearchSubtree;
    [AWSPropertyAttribute]
public List`1<string> Hosts { get; public set; }
    [AWSPropertyAttribute]
public string RoleBase { get; public set; }
    public string RoleName { get; public set; }
    [AWSPropertyAttribute]
public string RoleSearchMatching { get; public set; }
    public Nullable`1<bool> RoleSearchSubtree { get; public set; }
    [AWSPropertyAttribute]
public string ServiceAccountUsername { get; public set; }
    [AWSPropertyAttribute]
public string UserBase { get; public set; }
    public string UserRoleName { get; public set; }
    [AWSPropertyAttribute]
public string UserSearchMatching { get; public set; }
    public Nullable`1<bool> UserSearchSubtree { get; public set; }
    public List`1<string> get_Hosts();
    public void set_Hosts(List`1<string> value);
    internal bool IsSetHosts();
    public string get_RoleBase();
    public void set_RoleBase(string value);
    internal bool IsSetRoleBase();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public string get_RoleSearchMatching();
    public void set_RoleSearchMatching(string value);
    internal bool IsSetRoleSearchMatching();
    public Nullable`1<bool> get_RoleSearchSubtree();
    public void set_RoleSearchSubtree(Nullable`1<bool> value);
    internal bool IsSetRoleSearchSubtree();
    public string get_ServiceAccountUsername();
    public void set_ServiceAccountUsername(string value);
    internal bool IsSetServiceAccountUsername();
    public string get_UserBase();
    public void set_UserBase(string value);
    internal bool IsSetUserBase();
    public string get_UserRoleName();
    public void set_UserRoleName(string value);
    internal bool IsSetUserRoleName();
    public string get_UserSearchMatching();
    public void set_UserSearchMatching(string value);
    internal bool IsSetUserSearchMatching();
    public Nullable`1<bool> get_UserSearchSubtree();
    public void set_UserSearchSubtree(Nullable`1<bool> value);
    internal bool IsSetUserSearchSubtree();
}
internal class Amazon.MQ.Model.ListBrokersPaginator : object {
    private IAmazonMQ _client;
    private ListBrokersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListBrokersResponse> Responses { get; }
    public IPaginatedEnumerable`1<BrokerSummary> BrokerSummaries { get; }
    internal ListBrokersPaginator(IAmazonMQ client, ListBrokersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListBrokersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<BrokerSummary> get_BrokerSummaries();
    [AsyncIteratorStateMachineAttribute("Amazon.MQ.Model.ListBrokersPaginator/<Amazon-Runtime-IPaginator<Amazon-MQ-Model-ListBrokersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListBrokersResponse> Amazon.Runtime.IPaginator<Amazon.MQ.Model.ListBrokersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.MQ.Model.ListBrokersRequest : AmazonMQRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.ListBrokersResponse : AmazonWebServiceResponse {
    private List`1<BrokerSummary> _brokerSummaries;
    private string _nextToken;
    public List`1<BrokerSummary> BrokerSummaries { get; public set; }
    public string NextToken { get; public set; }
    public List`1<BrokerSummary> get_BrokerSummaries();
    public void set_BrokerSummaries(List`1<BrokerSummary> value);
    internal bool IsSetBrokerSummaries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.ListConfigurationRevisionsRequest : AmazonMQRequest {
    private string _configurationId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ConfigurationId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ConfigurationId();
    public void set_ConfigurationId(string value);
    internal bool IsSetConfigurationId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.ListConfigurationRevisionsResponse : AmazonWebServiceResponse {
    private string _configurationId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<ConfigurationRevision> _revisions;
    public string ConfigurationId { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ConfigurationRevision> Revisions { get; public set; }
    public string get_ConfigurationId();
    public void set_ConfigurationId(string value);
    internal bool IsSetConfigurationId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ConfigurationRevision> get_Revisions();
    public void set_Revisions(List`1<ConfigurationRevision> value);
    internal bool IsSetRevisions();
}
public class Amazon.MQ.Model.ListConfigurationsRequest : AmazonMQRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.ListConfigurationsResponse : AmazonWebServiceResponse {
    private List`1<Configuration> _configurations;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Configuration> Configurations { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Configuration> get_Configurations();
    public void set_Configurations(List`1<Configuration> value);
    internal bool IsSetConfigurations();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.ListTagsRequest : AmazonMQRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.MQ.Model.ListTagsResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.MQ.Model.ListUsersRequest : AmazonMQRequest {
    private string _brokerId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.MQ.Model.ListUsersResponse : AmazonWebServiceResponse {
    private string _brokerId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<UserSummary> _users;
    public string BrokerId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<UserSummary> Users { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<UserSummary> get_Users();
    public void set_Users(List`1<UserSummary> value);
    internal bool IsSetUsers();
}
public class Amazon.MQ.Model.Logs : object {
    private Nullable`1<bool> _audit;
    private Nullable`1<bool> _general;
    public Nullable`1<bool> Audit { get; public set; }
    public Nullable`1<bool> General { get; public set; }
    public Nullable`1<bool> get_Audit();
    public void set_Audit(Nullable`1<bool> value);
    internal bool IsSetAudit();
    public Nullable`1<bool> get_General();
    public void set_General(Nullable`1<bool> value);
    internal bool IsSetGeneral();
}
public class Amazon.MQ.Model.LogsSummary : object {
    private Nullable`1<bool> _audit;
    private string _auditLogGroup;
    private Nullable`1<bool> _general;
    private string _generalLogGroup;
    private PendingLogs _pending;
    public Nullable`1<bool> Audit { get; public set; }
    public string AuditLogGroup { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> General { get; public set; }
    [AWSPropertyAttribute]
public string GeneralLogGroup { get; public set; }
    public PendingLogs Pending { get; public set; }
    public Nullable`1<bool> get_Audit();
    public void set_Audit(Nullable`1<bool> value);
    internal bool IsSetAudit();
    public string get_AuditLogGroup();
    public void set_AuditLogGroup(string value);
    internal bool IsSetAuditLogGroup();
    public Nullable`1<bool> get_General();
    public void set_General(Nullable`1<bool> value);
    internal bool IsSetGeneral();
    public string get_GeneralLogGroup();
    public void set_GeneralLogGroup(string value);
    internal bool IsSetGeneralLogGroup();
    public PendingLogs get_Pending();
    public void set_Pending(PendingLogs value);
    internal bool IsSetPending();
}
public class Amazon.MQ.Model.MQPaginatorFactory : object {
    private IAmazonMQ client;
    internal MQPaginatorFactory(IAmazonMQ client);
    public sealed virtual IListBrokersPaginator ListBrokers(ListBrokersRequest request);
}
public class Amazon.MQ.Model.NotFoundException : AmazonMQException {
    private string _errorAttribute;
    public string ErrorAttribute { get; public set; }
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
    public NotFoundException(Exception innerException);
    public NotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ErrorAttribute();
    public void set_ErrorAttribute(string value);
    internal bool IsSetErrorAttribute();
}
public class Amazon.MQ.Model.PendingLogs : object {
    private Nullable`1<bool> _audit;
    private Nullable`1<bool> _general;
    public Nullable`1<bool> Audit { get; public set; }
    public Nullable`1<bool> General { get; public set; }
    public Nullable`1<bool> get_Audit();
    public void set_Audit(Nullable`1<bool> value);
    internal bool IsSetAudit();
    public Nullable`1<bool> get_General();
    public void set_General(Nullable`1<bool> value);
    internal bool IsSetGeneral();
}
public class Amazon.MQ.Model.PromoteRequest : AmazonMQRequest {
    private string _brokerId;
    private PromoteMode _mode;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    [AWSPropertyAttribute]
public PromoteMode Mode { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public PromoteMode get_Mode();
    public void set_Mode(PromoteMode value);
    internal bool IsSetMode();
}
public class Amazon.MQ.Model.PromoteResponse : AmazonWebServiceResponse {
    private string _brokerId;
    public string BrokerId { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
}
public class Amazon.MQ.Model.RebootBrokerRequest : AmazonMQRequest {
    private string _brokerId;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
}
public class Amazon.MQ.Model.RebootBrokerResponse : AmazonWebServiceResponse {
}
public class Amazon.MQ.Model.SanitizationWarning : object {
    private string _attributeName;
    private string _elementName;
    private SanitizationWarningReason _reason;
    public string AttributeName { get; public set; }
    public string ElementName { get; public set; }
    [AWSPropertyAttribute]
public SanitizationWarningReason Reason { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_ElementName();
    public void set_ElementName(string value);
    internal bool IsSetElementName();
    public SanitizationWarningReason get_Reason();
    public void set_Reason(SanitizationWarningReason value);
    internal bool IsSetReason();
}
public class Amazon.MQ.Model.UnauthorizedException : AmazonMQException {
    private string _errorAttribute;
    public string ErrorAttribute { get; public set; }
    public UnauthorizedException(string message);
    public UnauthorizedException(string message, Exception innerException);
    public UnauthorizedException(Exception innerException);
    public UnauthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnauthorizedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ErrorAttribute();
    public void set_ErrorAttribute(string value);
    internal bool IsSetErrorAttribute();
}
public class Amazon.MQ.Model.UpdateBrokerRequest : AmazonMQRequest {
    private AuthenticationStrategy _authenticationStrategy;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _brokerId;
    private ConfigurationId _configuration;
    private DataReplicationMode _dataReplicationMode;
    private string _engineVersion;
    private string _hostInstanceType;
    private LdapServerMetadataInput _ldapServerMetadata;
    private Logs _logs;
    private WeeklyStartTime _maintenanceWindowStartTime;
    private List`1<string> _securityGroups;
    public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    public ConfigurationId Configuration { get; public set; }
    public DataReplicationMode DataReplicationMode { get; public set; }
    public string EngineVersion { get; public set; }
    public string HostInstanceType { get; public set; }
    public LdapServerMetadataInput LdapServerMetadata { get; public set; }
    public Logs Logs { get; public set; }
    public WeeklyStartTime MaintenanceWindowStartTime { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public ConfigurationId get_Configuration();
    public void set_Configuration(ConfigurationId value);
    internal bool IsSetConfiguration();
    public DataReplicationMode get_DataReplicationMode();
    public void set_DataReplicationMode(DataReplicationMode value);
    internal bool IsSetDataReplicationMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_HostInstanceType();
    public void set_HostInstanceType(string value);
    internal bool IsSetHostInstanceType();
    public LdapServerMetadataInput get_LdapServerMetadata();
    public void set_LdapServerMetadata(LdapServerMetadataInput value);
    internal bool IsSetLdapServerMetadata();
    public Logs get_Logs();
    public void set_Logs(Logs value);
    internal bool IsSetLogs();
    public WeeklyStartTime get_MaintenanceWindowStartTime();
    public void set_MaintenanceWindowStartTime(WeeklyStartTime value);
    internal bool IsSetMaintenanceWindowStartTime();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.MQ.Model.UpdateBrokerResponse : AmazonWebServiceResponse {
    private AuthenticationStrategy _authenticationStrategy;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _brokerId;
    private ConfigurationId _configuration;
    private DataReplicationMetadataOutput _dataReplicationMetadata;
    private DataReplicationMode _dataReplicationMode;
    private string _engineVersion;
    private string _hostInstanceType;
    private LdapServerMetadataOutput _ldapServerMetadata;
    private Logs _logs;
    private WeeklyStartTime _maintenanceWindowStartTime;
    private DataReplicationMetadataOutput _pendingDataReplicationMetadata;
    private DataReplicationMode _pendingDataReplicationMode;
    private List`1<string> _securityGroups;
    public AuthenticationStrategy AuthenticationStrategy { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string BrokerId { get; public set; }
    public ConfigurationId Configuration { get; public set; }
    public DataReplicationMetadataOutput DataReplicationMetadata { get; public set; }
    public DataReplicationMode DataReplicationMode { get; public set; }
    public string EngineVersion { get; public set; }
    public string HostInstanceType { get; public set; }
    public LdapServerMetadataOutput LdapServerMetadata { get; public set; }
    public Logs Logs { get; public set; }
    public WeeklyStartTime MaintenanceWindowStartTime { get; public set; }
    public DataReplicationMetadataOutput PendingDataReplicationMetadata { get; public set; }
    public DataReplicationMode PendingDataReplicationMode { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public AuthenticationStrategy get_AuthenticationStrategy();
    public void set_AuthenticationStrategy(AuthenticationStrategy value);
    internal bool IsSetAuthenticationStrategy();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public ConfigurationId get_Configuration();
    public void set_Configuration(ConfigurationId value);
    internal bool IsSetConfiguration();
    public DataReplicationMetadataOutput get_DataReplicationMetadata();
    public void set_DataReplicationMetadata(DataReplicationMetadataOutput value);
    internal bool IsSetDataReplicationMetadata();
    public DataReplicationMode get_DataReplicationMode();
    public void set_DataReplicationMode(DataReplicationMode value);
    internal bool IsSetDataReplicationMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_HostInstanceType();
    public void set_HostInstanceType(string value);
    internal bool IsSetHostInstanceType();
    public LdapServerMetadataOutput get_LdapServerMetadata();
    public void set_LdapServerMetadata(LdapServerMetadataOutput value);
    internal bool IsSetLdapServerMetadata();
    public Logs get_Logs();
    public void set_Logs(Logs value);
    internal bool IsSetLogs();
    public WeeklyStartTime get_MaintenanceWindowStartTime();
    public void set_MaintenanceWindowStartTime(WeeklyStartTime value);
    internal bool IsSetMaintenanceWindowStartTime();
    public DataReplicationMetadataOutput get_PendingDataReplicationMetadata();
    public void set_PendingDataReplicationMetadata(DataReplicationMetadataOutput value);
    internal bool IsSetPendingDataReplicationMetadata();
    public DataReplicationMode get_PendingDataReplicationMode();
    public void set_PendingDataReplicationMode(DataReplicationMode value);
    internal bool IsSetPendingDataReplicationMode();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.MQ.Model.UpdateConfigurationRequest : AmazonMQRequest {
    private string _configurationId;
    private string _data;
    private string _description;
    [AWSPropertyAttribute]
public string ConfigurationId { get; public set; }
    [AWSPropertyAttribute]
public string Data { get; public set; }
    public string Description { get; public set; }
    public string get_ConfigurationId();
    public void set_ConfigurationId(string value);
    internal bool IsSetConfigurationId();
    public string get_Data();
    public void set_Data(string value);
    internal bool IsSetData();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.MQ.Model.UpdateConfigurationResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _created;
    private string _id;
    private ConfigurationRevision _latestRevision;
    private string _name;
    private List`1<SanitizationWarning> _warnings;
    public string Arn { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    public string Id { get; public set; }
    public ConfigurationRevision LatestRevision { get; public set; }
    public string Name { get; public set; }
    public List`1<SanitizationWarning> Warnings { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    internal bool IsSetCreated();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public ConfigurationRevision get_LatestRevision();
    public void set_LatestRevision(ConfigurationRevision value);
    internal bool IsSetLatestRevision();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<SanitizationWarning> get_Warnings();
    public void set_Warnings(List`1<SanitizationWarning> value);
    internal bool IsSetWarnings();
}
public class Amazon.MQ.Model.UpdateUserRequest : AmazonMQRequest {
    private string _brokerId;
    private Nullable`1<bool> _consoleAccess;
    private List`1<string> _groups;
    private string _password;
    private Nullable`1<bool> _replicationUser;
    private string _username;
    [AWSPropertyAttribute]
public string BrokerId { get; public set; }
    public Nullable`1<bool> ConsoleAccess { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string Password { get; public set; }
    public Nullable`1<bool> ReplicationUser { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public string get_BrokerId();
    public void set_BrokerId(string value);
    internal bool IsSetBrokerId();
    public Nullable`1<bool> get_ConsoleAccess();
    public void set_ConsoleAccess(Nullable`1<bool> value);
    internal bool IsSetConsoleAccess();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<bool> get_ReplicationUser();
    public void set_ReplicationUser(Nullable`1<bool> value);
    internal bool IsSetReplicationUser();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.MQ.Model.UpdateUserResponse : AmazonWebServiceResponse {
}
public class Amazon.MQ.Model.User : object {
    private Nullable`1<bool> _consoleAccess;
    private List`1<string> _groups;
    private string _password;
    private Nullable`1<bool> _replicationUser;
    private string _username;
    public Nullable`1<bool> ConsoleAccess { get; public set; }
    public List`1<string> Groups { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<bool> ReplicationUser { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public Nullable`1<bool> get_ConsoleAccess();
    public void set_ConsoleAccess(Nullable`1<bool> value);
    internal bool IsSetConsoleAccess();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<bool> get_ReplicationUser();
    public void set_ReplicationUser(Nullable`1<bool> value);
    internal bool IsSetReplicationUser();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.MQ.Model.UserPendingChanges : object {
    private Nullable`1<bool> _consoleAccess;
    private List`1<string> _groups;
    private ChangeType _pendingChange;
    public Nullable`1<bool> ConsoleAccess { get; public set; }
    public List`1<string> Groups { get; public set; }
    [AWSPropertyAttribute]
public ChangeType PendingChange { get; public set; }
    public Nullable`1<bool> get_ConsoleAccess();
    public void set_ConsoleAccess(Nullable`1<bool> value);
    internal bool IsSetConsoleAccess();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public ChangeType get_PendingChange();
    public void set_PendingChange(ChangeType value);
    internal bool IsSetPendingChange();
}
public class Amazon.MQ.Model.UserSummary : object {
    private ChangeType _pendingChange;
    private string _username;
    public ChangeType PendingChange { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public ChangeType get_PendingChange();
    public void set_PendingChange(ChangeType value);
    internal bool IsSetPendingChange();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.MQ.Model.WeeklyStartTime : object {
    private DayOfWeek _dayOfWeek;
    private string _timeOfDay;
    private string _timeZone;
    [AWSPropertyAttribute]
public DayOfWeek DayOfWeek { get; public set; }
    [AWSPropertyAttribute]
public string TimeOfDay { get; public set; }
    public string TimeZone { get; public set; }
    public DayOfWeek get_DayOfWeek();
    public void set_DayOfWeek(DayOfWeek value);
    internal bool IsSetDayOfWeek();
    public string get_TimeOfDay();
    public void set_TimeOfDay(string value);
    internal bool IsSetTimeOfDay();
    public string get_TimeZone();
    public void set_TimeZone(string value);
    internal bool IsSetTimeZone();
}
public class Amazon.MQ.PromoteMode : ConstantClass {
    public static PromoteMode FAILOVER;
    public static PromoteMode SWITCHOVER;
    public PromoteMode(string value);
    private static PromoteMode();
    public static PromoteMode FindValue(string value);
    public static PromoteMode op_Implicit(string value);
}
public class Amazon.MQ.SanitizationWarningReason : ConstantClass {
    public static SanitizationWarningReason DISALLOWED_ATTRIBUTE_REMOVED;
    public static SanitizationWarningReason DISALLOWED_ELEMENT_REMOVED;
    public static SanitizationWarningReason INVALID_ATTRIBUTE_VALUE_REMOVED;
    public SanitizationWarningReason(string value);
    private static SanitizationWarningReason();
    public static SanitizationWarningReason FindValue(string value);
    public static SanitizationWarningReason op_Implicit(string value);
}
