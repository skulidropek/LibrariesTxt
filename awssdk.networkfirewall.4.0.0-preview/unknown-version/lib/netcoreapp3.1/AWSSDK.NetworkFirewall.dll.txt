public class Amazon.NetworkFirewall.AmazonNetworkFirewallClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private INetworkFirewallPaginatorFactory _paginators;
    public INetworkFirewallPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonNetworkFirewallClient(RegionEndpoint region);
    public AmazonNetworkFirewallClient(AmazonNetworkFirewallConfig config);
    public AmazonNetworkFirewallClient(AWSCredentials credentials);
    public AmazonNetworkFirewallClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonNetworkFirewallClient(AWSCredentials credentials, AmazonNetworkFirewallConfig clientConfig);
    public AmazonNetworkFirewallClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonNetworkFirewallClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonNetworkFirewallClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonNetworkFirewallConfig clientConfig);
    public AmazonNetworkFirewallClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonNetworkFirewallClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonNetworkFirewallClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonNetworkFirewallConfig clientConfig);
    private static AmazonNetworkFirewallClient();
    public sealed virtual INetworkFirewallPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AssociateFirewallPolicyResponse AssociateFirewallPolicy(AssociateFirewallPolicyRequest request);
    public virtual Task`1<AssociateFirewallPolicyResponse> AssociateFirewallPolicyAsync(AssociateFirewallPolicyRequest request, CancellationToken cancellationToken);
    internal virtual AssociateSubnetsResponse AssociateSubnets(AssociateSubnetsRequest request);
    public virtual Task`1<AssociateSubnetsResponse> AssociateSubnetsAsync(AssociateSubnetsRequest request, CancellationToken cancellationToken);
    internal virtual CreateFirewallResponse CreateFirewall(CreateFirewallRequest request);
    public virtual Task`1<CreateFirewallResponse> CreateFirewallAsync(CreateFirewallRequest request, CancellationToken cancellationToken);
    internal virtual CreateFirewallPolicyResponse CreateFirewallPolicy(CreateFirewallPolicyRequest request);
    public virtual Task`1<CreateFirewallPolicyResponse> CreateFirewallPolicyAsync(CreateFirewallPolicyRequest request, CancellationToken cancellationToken);
    internal virtual CreateRuleGroupResponse CreateRuleGroup(CreateRuleGroupRequest request);
    public virtual Task`1<CreateRuleGroupResponse> CreateRuleGroupAsync(CreateRuleGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateTLSInspectionConfigurationResponse CreateTLSInspectionConfiguration(CreateTLSInspectionConfigurationRequest request);
    public virtual Task`1<CreateTLSInspectionConfigurationResponse> CreateTLSInspectionConfigurationAsync(CreateTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFirewallResponse DeleteFirewall(DeleteFirewallRequest request);
    public virtual Task`1<DeleteFirewallResponse> DeleteFirewallAsync(DeleteFirewallRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFirewallPolicyResponse DeleteFirewallPolicy(DeleteFirewallPolicyRequest request);
    public virtual Task`1<DeleteFirewallPolicyResponse> DeleteFirewallPolicyAsync(DeleteFirewallPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteRuleGroupResponse DeleteRuleGroup(DeleteRuleGroupRequest request);
    public virtual Task`1<DeleteRuleGroupResponse> DeleteRuleGroupAsync(DeleteRuleGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTLSInspectionConfigurationResponse DeleteTLSInspectionConfiguration(DeleteTLSInspectionConfigurationRequest request);
    public virtual Task`1<DeleteTLSInspectionConfigurationResponse> DeleteTLSInspectionConfigurationAsync(DeleteTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFirewallResponse DescribeFirewall(DescribeFirewallRequest request);
    public virtual Task`1<DescribeFirewallResponse> DescribeFirewallAsync(DescribeFirewallRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFirewallPolicyResponse DescribeFirewallPolicy(DescribeFirewallPolicyRequest request);
    public virtual Task`1<DescribeFirewallPolicyResponse> DescribeFirewallPolicyAsync(DescribeFirewallPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLoggingConfigurationResponse DescribeLoggingConfiguration(DescribeLoggingConfigurationRequest request);
    public virtual Task`1<DescribeLoggingConfigurationResponse> DescribeLoggingConfigurationAsync(DescribeLoggingConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeResourcePolicyResponse DescribeResourcePolicy(DescribeResourcePolicyRequest request);
    public virtual Task`1<DescribeResourcePolicyResponse> DescribeResourcePolicyAsync(DescribeResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRuleGroupResponse DescribeRuleGroup(DescribeRuleGroupRequest request);
    public virtual Task`1<DescribeRuleGroupResponse> DescribeRuleGroupAsync(DescribeRuleGroupRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRuleGroupMetadataResponse DescribeRuleGroupMetadata(DescribeRuleGroupMetadataRequest request);
    public virtual Task`1<DescribeRuleGroupMetadataResponse> DescribeRuleGroupMetadataAsync(DescribeRuleGroupMetadataRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTLSInspectionConfigurationResponse DescribeTLSInspectionConfiguration(DescribeTLSInspectionConfigurationRequest request);
    public virtual Task`1<DescribeTLSInspectionConfigurationResponse> DescribeTLSInspectionConfigurationAsync(DescribeTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateSubnetsResponse DisassociateSubnets(DisassociateSubnetsRequest request);
    public virtual Task`1<DisassociateSubnetsResponse> DisassociateSubnetsAsync(DisassociateSubnetsRequest request, CancellationToken cancellationToken);
    internal virtual ListFirewallPoliciesResponse ListFirewallPolicies(ListFirewallPoliciesRequest request);
    public virtual Task`1<ListFirewallPoliciesResponse> ListFirewallPoliciesAsync(ListFirewallPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListFirewallsResponse ListFirewalls(ListFirewallsRequest request);
    public virtual Task`1<ListFirewallsResponse> ListFirewallsAsync(ListFirewallsRequest request, CancellationToken cancellationToken);
    internal virtual ListRuleGroupsResponse ListRuleGroups(ListRuleGroupsRequest request);
    public virtual Task`1<ListRuleGroupsResponse> ListRuleGroupsAsync(ListRuleGroupsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ListTLSInspectionConfigurationsResponse ListTLSInspectionConfigurations(ListTLSInspectionConfigurationsRequest request);
    public virtual Task`1<ListTLSInspectionConfigurationsResponse> ListTLSInspectionConfigurationsAsync(ListTLSInspectionConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFirewallDeleteProtectionResponse UpdateFirewallDeleteProtection(UpdateFirewallDeleteProtectionRequest request);
    public virtual Task`1<UpdateFirewallDeleteProtectionResponse> UpdateFirewallDeleteProtectionAsync(UpdateFirewallDeleteProtectionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFirewallDescriptionResponse UpdateFirewallDescription(UpdateFirewallDescriptionRequest request);
    public virtual Task`1<UpdateFirewallDescriptionResponse> UpdateFirewallDescriptionAsync(UpdateFirewallDescriptionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFirewallEncryptionConfigurationResponse UpdateFirewallEncryptionConfiguration(UpdateFirewallEncryptionConfigurationRequest request);
    public virtual Task`1<UpdateFirewallEncryptionConfigurationResponse> UpdateFirewallEncryptionConfigurationAsync(UpdateFirewallEncryptionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFirewallPolicyResponse UpdateFirewallPolicy(UpdateFirewallPolicyRequest request);
    public virtual Task`1<UpdateFirewallPolicyResponse> UpdateFirewallPolicyAsync(UpdateFirewallPolicyRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFirewallPolicyChangeProtectionResponse UpdateFirewallPolicyChangeProtection(UpdateFirewallPolicyChangeProtectionRequest request);
    public virtual Task`1<UpdateFirewallPolicyChangeProtectionResponse> UpdateFirewallPolicyChangeProtectionAsync(UpdateFirewallPolicyChangeProtectionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateLoggingConfigurationResponse UpdateLoggingConfiguration(UpdateLoggingConfigurationRequest request);
    public virtual Task`1<UpdateLoggingConfigurationResponse> UpdateLoggingConfigurationAsync(UpdateLoggingConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateRuleGroupResponse UpdateRuleGroup(UpdateRuleGroupRequest request);
    public virtual Task`1<UpdateRuleGroupResponse> UpdateRuleGroupAsync(UpdateRuleGroupRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSubnetChangeProtectionResponse UpdateSubnetChangeProtection(UpdateSubnetChangeProtectionRequest request);
    public virtual Task`1<UpdateSubnetChangeProtectionResponse> UpdateSubnetChangeProtectionAsync(UpdateSubnetChangeProtectionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTLSInspectionConfigurationResponse UpdateTLSInspectionConfiguration(UpdateTLSInspectionConfigurationRequest request);
    public virtual Task`1<UpdateTLSInspectionConfigurationResponse> UpdateTLSInspectionConfigurationAsync(UpdateTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.NetworkFirewall.AmazonNetworkFirewallConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonNetworkFirewallEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonNetworkFirewallConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.NetworkFirewall.AmazonNetworkFirewallDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonNetworkFirewallDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.NetworkFirewall.AmazonNetworkFirewallException : AmazonServiceException {
    public AmazonNetworkFirewallException(string message);
    public AmazonNetworkFirewallException(string message, Exception innerException);
    public AmazonNetworkFirewallException(Exception innerException);
    public AmazonNetworkFirewallException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonNetworkFirewallException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.AmazonNetworkFirewallRequest : AmazonWebServiceRequest {
}
public class Amazon.NetworkFirewall.AttachmentStatus : ConstantClass {
    public static AttachmentStatus CREATING;
    public static AttachmentStatus DELETING;
    public static AttachmentStatus ERROR;
    public static AttachmentStatus FAILED;
    public static AttachmentStatus READY;
    public static AttachmentStatus SCALING;
    public AttachmentStatus(string value);
    private static AttachmentStatus();
    public static AttachmentStatus FindValue(string value);
    public static AttachmentStatus op_Implicit(string value);
}
public class Amazon.NetworkFirewall.ConfigurationSyncState : ConstantClass {
    public static ConfigurationSyncState CAPACITY_CONSTRAINED;
    public static ConfigurationSyncState IN_SYNC;
    public static ConfigurationSyncState PENDING;
    public ConfigurationSyncState(string value);
    private static ConfigurationSyncState();
    public static ConfigurationSyncState FindValue(string value);
    public static ConfigurationSyncState op_Implicit(string value);
}
public class Amazon.NetworkFirewall.EncryptionType : ConstantClass {
    public static EncryptionType AWS_OWNED_KMS_KEY;
    public static EncryptionType CUSTOMER_KMS;
    public EncryptionType(string value);
    private static EncryptionType();
    public static EncryptionType FindValue(string value);
    public static EncryptionType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.Endpoints.NetworkFirewallEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.NetworkFirewall.FirewallStatusValue : ConstantClass {
    public static FirewallStatusValue DELETING;
    public static FirewallStatusValue PROVISIONING;
    public static FirewallStatusValue READY;
    public FirewallStatusValue(string value);
    private static FirewallStatusValue();
    public static FirewallStatusValue FindValue(string value);
    public static FirewallStatusValue op_Implicit(string value);
}
public class Amazon.NetworkFirewall.GeneratedRulesType : ConstantClass {
    public static GeneratedRulesType ALLOWLIST;
    public static GeneratedRulesType DENYLIST;
    public GeneratedRulesType(string value);
    private static GeneratedRulesType();
    public static GeneratedRulesType FindValue(string value);
    public static GeneratedRulesType op_Implicit(string value);
}
public interface Amazon.NetworkFirewall.IAmazonNetworkFirewall {
    public INetworkFirewallPaginatorFactory Paginators { get; }
    public abstract virtual INetworkFirewallPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AssociateFirewallPolicyResponse> AssociateFirewallPolicyAsync(AssociateFirewallPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateSubnetsResponse> AssociateSubnetsAsync(AssociateSubnetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFirewallResponse> CreateFirewallAsync(CreateFirewallRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFirewallPolicyResponse> CreateFirewallPolicyAsync(CreateFirewallPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRuleGroupResponse> CreateRuleGroupAsync(CreateRuleGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTLSInspectionConfigurationResponse> CreateTLSInspectionConfigurationAsync(CreateTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFirewallResponse> DeleteFirewallAsync(DeleteFirewallRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFirewallPolicyResponse> DeleteFirewallPolicyAsync(DeleteFirewallPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRuleGroupResponse> DeleteRuleGroupAsync(DeleteRuleGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTLSInspectionConfigurationResponse> DeleteTLSInspectionConfigurationAsync(DeleteTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFirewallResponse> DescribeFirewallAsync(DescribeFirewallRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFirewallPolicyResponse> DescribeFirewallPolicyAsync(DescribeFirewallPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoggingConfigurationResponse> DescribeLoggingConfigurationAsync(DescribeLoggingConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeResourcePolicyResponse> DescribeResourcePolicyAsync(DescribeResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRuleGroupResponse> DescribeRuleGroupAsync(DescribeRuleGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRuleGroupMetadataResponse> DescribeRuleGroupMetadataAsync(DescribeRuleGroupMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTLSInspectionConfigurationResponse> DescribeTLSInspectionConfigurationAsync(DescribeTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateSubnetsResponse> DisassociateSubnetsAsync(DisassociateSubnetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFirewallPoliciesResponse> ListFirewallPoliciesAsync(ListFirewallPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFirewallsResponse> ListFirewallsAsync(ListFirewallsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRuleGroupsResponse> ListRuleGroupsAsync(ListRuleGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTLSInspectionConfigurationsResponse> ListTLSInspectionConfigurationsAsync(ListTLSInspectionConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFirewallDeleteProtectionResponse> UpdateFirewallDeleteProtectionAsync(UpdateFirewallDeleteProtectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFirewallDescriptionResponse> UpdateFirewallDescriptionAsync(UpdateFirewallDescriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFirewallEncryptionConfigurationResponse> UpdateFirewallEncryptionConfigurationAsync(UpdateFirewallEncryptionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFirewallPolicyResponse> UpdateFirewallPolicyAsync(UpdateFirewallPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFirewallPolicyChangeProtectionResponse> UpdateFirewallPolicyChangeProtectionAsync(UpdateFirewallPolicyChangeProtectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateLoggingConfigurationResponse> UpdateLoggingConfigurationAsync(UpdateLoggingConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateRuleGroupResponse> UpdateRuleGroupAsync(UpdateRuleGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSubnetChangeProtectionResponse> UpdateSubnetChangeProtectionAsync(UpdateSubnetChangeProtectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTLSInspectionConfigurationResponse> UpdateTLSInspectionConfigurationAsync(UpdateTLSInspectionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.NetworkFirewall.IdentifiedType : ConstantClass {
    public static IdentifiedType STATELESS_RULE_CONTAINS_TCP_FLAGS;
    public static IdentifiedType STATELESS_RULE_FORWARDING_ASYMMETRICALLY;
    public IdentifiedType(string value);
    private static IdentifiedType();
    public static IdentifiedType FindValue(string value);
    public static IdentifiedType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.Internal.AmazonNetworkFirewallEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.NetworkFirewall.Internal.AmazonNetworkFirewallEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.NetworkFirewall.Internal.AmazonNetworkFirewallMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.NetworkFirewall.IPAddressType : ConstantClass {
    public static IPAddressType DUALSTACK;
    public static IPAddressType IPV4;
    public static IPAddressType IPV6;
    public IPAddressType(string value);
    private static IPAddressType();
    public static IPAddressType FindValue(string value);
    public static IPAddressType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.LogDestinationType : ConstantClass {
    public static LogDestinationType CloudWatchLogs;
    public static LogDestinationType KinesisDataFirehose;
    public static LogDestinationType S3;
    public LogDestinationType(string value);
    private static LogDestinationType();
    public static LogDestinationType FindValue(string value);
    public static LogDestinationType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.LogType : ConstantClass {
    public static LogType ALERT;
    public static LogType FLOW;
    public static LogType TLS;
    public LogType(string value);
    private static LogType();
    public static LogType FindValue(string value);
    public static LogType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.Model.ActionDefinition : object {
    private PublishMetricAction _publishMetricAction;
    public PublishMetricAction PublishMetricAction { get; public set; }
    public PublishMetricAction get_PublishMetricAction();
    public void set_PublishMetricAction(PublishMetricAction value);
    internal bool IsSetPublishMetricAction();
}
public class Amazon.NetworkFirewall.Model.Address : object {
    private string _addressDefinition;
    [AWSPropertyAttribute]
public string AddressDefinition { get; public set; }
    public string get_AddressDefinition();
    public void set_AddressDefinition(string value);
    internal bool IsSetAddressDefinition();
}
public class Amazon.NetworkFirewall.Model.AnalysisResult : object {
    private string _analysisDetail;
    private List`1<string> _identifiedRuleIds;
    private IdentifiedType _identifiedType;
    public string AnalysisDetail { get; public set; }
    public List`1<string> IdentifiedRuleIds { get; public set; }
    public IdentifiedType IdentifiedType { get; public set; }
    public string get_AnalysisDetail();
    public void set_AnalysisDetail(string value);
    internal bool IsSetAnalysisDetail();
    public List`1<string> get_IdentifiedRuleIds();
    public void set_IdentifiedRuleIds(List`1<string> value);
    internal bool IsSetIdentifiedRuleIds();
    public IdentifiedType get_IdentifiedType();
    public void set_IdentifiedType(IdentifiedType value);
    internal bool IsSetIdentifiedType();
}
public class Amazon.NetworkFirewall.Model.AssociateFirewallPolicyRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    private string _firewallPolicyArn;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.AssociateFirewallPolicyResponse : AmazonWebServiceResponse {
    private string _firewallArn;
    private string _firewallName;
    private string _firewallPolicyArn;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.AssociateSubnetsRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    private List`1<SubnetMapping> _subnetMappings;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public List`1<SubnetMapping> SubnetMappings { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public List`1<SubnetMapping> get_SubnetMappings();
    public void set_SubnetMappings(List`1<SubnetMapping> value);
    internal bool IsSetSubnetMappings();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.AssociateSubnetsResponse : AmazonWebServiceResponse {
    private string _firewallArn;
    private string _firewallName;
    private List`1<SubnetMapping> _subnetMappings;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public List`1<SubnetMapping> SubnetMappings { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public List`1<SubnetMapping> get_SubnetMappings();
    public void set_SubnetMappings(List`1<SubnetMapping> value);
    internal bool IsSetSubnetMappings();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.Attachment : object {
    private string _endpointId;
    private AttachmentStatus _status;
    private string _statusMessage;
    private string _subnetId;
    public string EndpointId { get; public set; }
    public AttachmentStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public string get_EndpointId();
    public void set_EndpointId(string value);
    internal bool IsSetEndpointId();
    public AttachmentStatus get_Status();
    public void set_Status(AttachmentStatus value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.NetworkFirewall.Model.CapacityUsageSummary : object {
    private CIDRSummary _cidRs;
    public CIDRSummary CIDRs { get; public set; }
    public CIDRSummary get_CIDRs();
    public void set_CIDRs(CIDRSummary value);
    internal bool IsSetCIDRs();
}
public class Amazon.NetworkFirewall.Model.CheckCertificateRevocationStatusActions : object {
    private RevocationCheckAction _revokedStatusAction;
    private RevocationCheckAction _unknownStatusAction;
    public RevocationCheckAction RevokedStatusAction { get; public set; }
    public RevocationCheckAction UnknownStatusAction { get; public set; }
    public RevocationCheckAction get_RevokedStatusAction();
    public void set_RevokedStatusAction(RevocationCheckAction value);
    internal bool IsSetRevokedStatusAction();
    public RevocationCheckAction get_UnknownStatusAction();
    public void set_UnknownStatusAction(RevocationCheckAction value);
    internal bool IsSetUnknownStatusAction();
}
public class Amazon.NetworkFirewall.Model.CIDRSummary : object {
    private Nullable`1<int> _availableCIDRCount;
    private Dictionary`2<string, IPSetMetadata> _ipSetReferences;
    private Nullable`1<int> _utilizedCIDRCount;
    [AWSPropertyAttribute]
public Nullable`1<int> AvailableCIDRCount { get; public set; }
    public Dictionary`2<string, IPSetMetadata> IPSetReferences { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> UtilizedCIDRCount { get; public set; }
    public Nullable`1<int> get_AvailableCIDRCount();
    public void set_AvailableCIDRCount(Nullable`1<int> value);
    internal bool IsSetAvailableCIDRCount();
    public Dictionary`2<string, IPSetMetadata> get_IPSetReferences();
    public void set_IPSetReferences(Dictionary`2<string, IPSetMetadata> value);
    internal bool IsSetIPSetReferences();
    public Nullable`1<int> get_UtilizedCIDRCount();
    public void set_UtilizedCIDRCount(Nullable`1<int> value);
    internal bool IsSetUtilizedCIDRCount();
}
public class Amazon.NetworkFirewall.Model.CreateFirewallPolicyRequest : AmazonNetworkFirewallRequest {
    private string _description;
    private Nullable`1<bool> _dryRun;
    private EncryptionConfiguration _encryptionConfiguration;
    private FirewallPolicy _firewallPolicy;
    private string _firewallPolicyName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<bool> DryRun { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public FirewallPolicy FirewallPolicy { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    internal bool IsSetDryRun();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public FirewallPolicy get_FirewallPolicy();
    public void set_FirewallPolicy(FirewallPolicy value);
    internal bool IsSetFirewallPolicy();
    public string get_FirewallPolicyName();
    public void set_FirewallPolicyName(string value);
    internal bool IsSetFirewallPolicyName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.NetworkFirewall.Model.CreateFirewallPolicyResponse : AmazonWebServiceResponse {
    private FirewallPolicyResponse _firewallPolicyResponse;
    private string _updateToken;
    [AWSPropertyAttribute]
public FirewallPolicyResponse FirewallPolicyResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public FirewallPolicyResponse get_FirewallPolicyResponse();
    public void set_FirewallPolicyResponse(FirewallPolicyResponse value);
    internal bool IsSetFirewallPolicyResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.CreateFirewallRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<bool> _deleteProtection;
    private string _description;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _firewallName;
    private string _firewallPolicyArn;
    private Nullable`1<bool> _firewallPolicyChangeProtection;
    private Nullable`1<bool> _subnetChangeProtection;
    private List`1<SubnetMapping> _subnetMappings;
    private List`1<Tag> _tags;
    private string _vpcId;
    public Nullable`1<bool> DeleteProtection { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    public Nullable`1<bool> FirewallPolicyChangeProtection { get; public set; }
    public Nullable`1<bool> SubnetChangeProtection { get; public set; }
    [AWSPropertyAttribute]
public List`1<SubnetMapping> SubnetMappings { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public Nullable`1<bool> get_DeleteProtection();
    public void set_DeleteProtection(Nullable`1<bool> value);
    internal bool IsSetDeleteProtection();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public Nullable`1<bool> get_FirewallPolicyChangeProtection();
    public void set_FirewallPolicyChangeProtection(Nullable`1<bool> value);
    internal bool IsSetFirewallPolicyChangeProtection();
    public Nullable`1<bool> get_SubnetChangeProtection();
    public void set_SubnetChangeProtection(Nullable`1<bool> value);
    internal bool IsSetSubnetChangeProtection();
    public List`1<SubnetMapping> get_SubnetMappings();
    public void set_SubnetMappings(List`1<SubnetMapping> value);
    internal bool IsSetSubnetMappings();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.NetworkFirewall.Model.CreateFirewallResponse : AmazonWebServiceResponse {
    private Firewall _firewall;
    private FirewallStatus _firewallStatus;
    public Firewall Firewall { get; public set; }
    public FirewallStatus FirewallStatus { get; public set; }
    public Firewall get_Firewall();
    public void set_Firewall(Firewall value);
    internal bool IsSetFirewall();
    public FirewallStatus get_FirewallStatus();
    public void set_FirewallStatus(FirewallStatus value);
    internal bool IsSetFirewallStatus();
}
public class Amazon.NetworkFirewall.Model.CreateRuleGroupRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<bool> _analyzeRuleGroup;
    private Nullable`1<int> _capacity;
    private string _description;
    private Nullable`1<bool> _dryRun;
    private EncryptionConfiguration _encryptionConfiguration;
    private RuleGroup _ruleGroup;
    private string _ruleGroupName;
    private string _rules;
    private SourceMetadata _sourceMetadata;
    private List`1<Tag> _tags;
    private RuleGroupType _type;
    public Nullable`1<bool> AnalyzeRuleGroup { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Capacity { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<bool> DryRun { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    public RuleGroup RuleGroup { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupName { get; public set; }
    [AWSPropertyAttribute]
public string Rules { get; public set; }
    public SourceMetadata SourceMetadata { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public RuleGroupType Type { get; public set; }
    public Nullable`1<bool> get_AnalyzeRuleGroup();
    public void set_AnalyzeRuleGroup(Nullable`1<bool> value);
    internal bool IsSetAnalyzeRuleGroup();
    public Nullable`1<int> get_Capacity();
    public void set_Capacity(Nullable`1<int> value);
    internal bool IsSetCapacity();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    internal bool IsSetDryRun();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public RuleGroup get_RuleGroup();
    public void set_RuleGroup(RuleGroup value);
    internal bool IsSetRuleGroup();
    public string get_RuleGroupName();
    public void set_RuleGroupName(string value);
    internal bool IsSetRuleGroupName();
    public string get_Rules();
    public void set_Rules(string value);
    internal bool IsSetRules();
    public SourceMetadata get_SourceMetadata();
    public void set_SourceMetadata(SourceMetadata value);
    internal bool IsSetSourceMetadata();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.CreateRuleGroupResponse : AmazonWebServiceResponse {
    private RuleGroupResponse _ruleGroupResponse;
    private string _updateToken;
    [AWSPropertyAttribute]
public RuleGroupResponse RuleGroupResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public RuleGroupResponse get_RuleGroupResponse();
    public void set_RuleGroupResponse(RuleGroupResponse value);
    internal bool IsSetRuleGroupResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.CreateTLSInspectionConfigurationRequest : AmazonNetworkFirewallRequest {
    private string _description;
    private EncryptionConfiguration _encryptionConfiguration;
    private List`1<Tag> _tags;
    private TLSInspectionConfiguration _tlsInspectionConfiguration;
    private string _tlsInspectionConfigurationName;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public TLSInspectionConfiguration TLSInspectionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationName { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TLSInspectionConfiguration get_TLSInspectionConfiguration();
    public void set_TLSInspectionConfiguration(TLSInspectionConfiguration value);
    internal bool IsSetTLSInspectionConfiguration();
    public string get_TLSInspectionConfigurationName();
    public void set_TLSInspectionConfigurationName(string value);
    internal bool IsSetTLSInspectionConfigurationName();
}
public class Amazon.NetworkFirewall.Model.CreateTLSInspectionConfigurationResponse : AmazonWebServiceResponse {
    private TLSInspectionConfigurationResponse _tlsInspectionConfigurationResponse;
    private string _updateToken;
    [AWSPropertyAttribute]
public TLSInspectionConfigurationResponse TLSInspectionConfigurationResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public TLSInspectionConfigurationResponse get_TLSInspectionConfigurationResponse();
    public void set_TLSInspectionConfigurationResponse(TLSInspectionConfigurationResponse value);
    internal bool IsSetTLSInspectionConfigurationResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.CustomAction : object {
    private ActionDefinition _actionDefinition;
    private string _actionName;
    [AWSPropertyAttribute]
public ActionDefinition ActionDefinition { get; public set; }
    [AWSPropertyAttribute]
public string ActionName { get; public set; }
    public ActionDefinition get_ActionDefinition();
    public void set_ActionDefinition(ActionDefinition value);
    internal bool IsSetActionDefinition();
    public string get_ActionName();
    public void set_ActionName(string value);
    internal bool IsSetActionName();
}
public class Amazon.NetworkFirewall.Model.DeleteFirewallPolicyRequest : AmazonNetworkFirewallRequest {
    private string _firewallPolicyArn;
    private string _firewallPolicyName;
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyName { get; public set; }
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public string get_FirewallPolicyName();
    public void set_FirewallPolicyName(string value);
    internal bool IsSetFirewallPolicyName();
}
public class Amazon.NetworkFirewall.Model.DeleteFirewallPolicyResponse : AmazonWebServiceResponse {
    private FirewallPolicyResponse _firewallPolicyResponse;
    [AWSPropertyAttribute]
public FirewallPolicyResponse FirewallPolicyResponse { get; public set; }
    public FirewallPolicyResponse get_FirewallPolicyResponse();
    public void set_FirewallPolicyResponse(FirewallPolicyResponse value);
    internal bool IsSetFirewallPolicyResponse();
}
public class Amazon.NetworkFirewall.Model.DeleteFirewallRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
}
public class Amazon.NetworkFirewall.Model.DeleteFirewallResponse : AmazonWebServiceResponse {
    private Firewall _firewall;
    private FirewallStatus _firewallStatus;
    public Firewall Firewall { get; public set; }
    public FirewallStatus FirewallStatus { get; public set; }
    public Firewall get_Firewall();
    public void set_Firewall(Firewall value);
    internal bool IsSetFirewall();
    public FirewallStatus get_FirewallStatus();
    public void set_FirewallStatus(FirewallStatus value);
    internal bool IsSetFirewallStatus();
}
public class Amazon.NetworkFirewall.Model.DeleteResourcePolicyRequest : AmazonNetworkFirewallRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.NetworkFirewall.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.NetworkFirewall.Model.DeleteRuleGroupRequest : AmazonNetworkFirewallRequest {
    private string _ruleGroupArn;
    private string _ruleGroupName;
    private RuleGroupType _type;
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupName { get; public set; }
    public RuleGroupType Type { get; public set; }
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public string get_RuleGroupName();
    public void set_RuleGroupName(string value);
    internal bool IsSetRuleGroupName();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.DeleteRuleGroupResponse : AmazonWebServiceResponse {
    private RuleGroupResponse _ruleGroupResponse;
    [AWSPropertyAttribute]
public RuleGroupResponse RuleGroupResponse { get; public set; }
    public RuleGroupResponse get_RuleGroupResponse();
    public void set_RuleGroupResponse(RuleGroupResponse value);
    internal bool IsSetRuleGroupResponse();
}
public class Amazon.NetworkFirewall.Model.DeleteTLSInspectionConfigurationRequest : AmazonNetworkFirewallRequest {
    private string _tlsInspectionConfigurationArn;
    private string _tlsInspectionConfigurationName;
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationArn { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationName { get; public set; }
    public string get_TLSInspectionConfigurationArn();
    public void set_TLSInspectionConfigurationArn(string value);
    internal bool IsSetTLSInspectionConfigurationArn();
    public string get_TLSInspectionConfigurationName();
    public void set_TLSInspectionConfigurationName(string value);
    internal bool IsSetTLSInspectionConfigurationName();
}
public class Amazon.NetworkFirewall.Model.DeleteTLSInspectionConfigurationResponse : AmazonWebServiceResponse {
    private TLSInspectionConfigurationResponse _tlsInspectionConfigurationResponse;
    [AWSPropertyAttribute]
public TLSInspectionConfigurationResponse TLSInspectionConfigurationResponse { get; public set; }
    public TLSInspectionConfigurationResponse get_TLSInspectionConfigurationResponse();
    public void set_TLSInspectionConfigurationResponse(TLSInspectionConfigurationResponse value);
    internal bool IsSetTLSInspectionConfigurationResponse();
}
public class Amazon.NetworkFirewall.Model.DescribeFirewallPolicyRequest : AmazonNetworkFirewallRequest {
    private string _firewallPolicyArn;
    private string _firewallPolicyName;
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyName { get; public set; }
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public string get_FirewallPolicyName();
    public void set_FirewallPolicyName(string value);
    internal bool IsSetFirewallPolicyName();
}
public class Amazon.NetworkFirewall.Model.DescribeFirewallPolicyResponse : AmazonWebServiceResponse {
    private FirewallPolicy _firewallPolicy;
    private FirewallPolicyResponse _firewallPolicyResponse;
    private string _updateToken;
    public FirewallPolicy FirewallPolicy { get; public set; }
    [AWSPropertyAttribute]
public FirewallPolicyResponse FirewallPolicyResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public FirewallPolicy get_FirewallPolicy();
    public void set_FirewallPolicy(FirewallPolicy value);
    internal bool IsSetFirewallPolicy();
    public FirewallPolicyResponse get_FirewallPolicyResponse();
    public void set_FirewallPolicyResponse(FirewallPolicyResponse value);
    internal bool IsSetFirewallPolicyResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.DescribeFirewallRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
}
public class Amazon.NetworkFirewall.Model.DescribeFirewallResponse : AmazonWebServiceResponse {
    private Firewall _firewall;
    private FirewallStatus _firewallStatus;
    private string _updateToken;
    public Firewall Firewall { get; public set; }
    public FirewallStatus FirewallStatus { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public Firewall get_Firewall();
    public void set_Firewall(Firewall value);
    internal bool IsSetFirewall();
    public FirewallStatus get_FirewallStatus();
    public void set_FirewallStatus(FirewallStatus value);
    internal bool IsSetFirewallStatus();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.DescribeLoggingConfigurationRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
}
public class Amazon.NetworkFirewall.Model.DescribeLoggingConfigurationResponse : AmazonWebServiceResponse {
    private string _firewallArn;
    private LoggingConfiguration _loggingConfiguration;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    public LoggingConfiguration LoggingConfiguration { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public LoggingConfiguration get_LoggingConfiguration();
    public void set_LoggingConfiguration(LoggingConfiguration value);
    internal bool IsSetLoggingConfiguration();
}
public class Amazon.NetworkFirewall.Model.DescribeResourcePolicyRequest : AmazonNetworkFirewallRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.NetworkFirewall.Model.DescribeResourcePolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.NetworkFirewall.Model.DescribeRuleGroupMetadataRequest : AmazonNetworkFirewallRequest {
    private string _ruleGroupArn;
    private string _ruleGroupName;
    private RuleGroupType _type;
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupName { get; public set; }
    public RuleGroupType Type { get; public set; }
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public string get_RuleGroupName();
    public void set_RuleGroupName(string value);
    internal bool IsSetRuleGroupName();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.DescribeRuleGroupMetadataResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _capacity;
    private string _description;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _ruleGroupArn;
    private string _ruleGroupName;
    private StatefulRuleOptions _statefulRuleOptions;
    private RuleGroupType _type;
    public Nullable`1<int> Capacity { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupName { get; public set; }
    public StatefulRuleOptions StatefulRuleOptions { get; public set; }
    public RuleGroupType Type { get; public set; }
    public Nullable`1<int> get_Capacity();
    public void set_Capacity(Nullable`1<int> value);
    internal bool IsSetCapacity();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public string get_RuleGroupName();
    public void set_RuleGroupName(string value);
    internal bool IsSetRuleGroupName();
    public StatefulRuleOptions get_StatefulRuleOptions();
    public void set_StatefulRuleOptions(StatefulRuleOptions value);
    internal bool IsSetStatefulRuleOptions();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.DescribeRuleGroupRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<bool> _analyzeRuleGroup;
    private string _ruleGroupArn;
    private string _ruleGroupName;
    private RuleGroupType _type;
    public Nullable`1<bool> AnalyzeRuleGroup { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupName { get; public set; }
    public RuleGroupType Type { get; public set; }
    public Nullable`1<bool> get_AnalyzeRuleGroup();
    public void set_AnalyzeRuleGroup(Nullable`1<bool> value);
    internal bool IsSetAnalyzeRuleGroup();
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public string get_RuleGroupName();
    public void set_RuleGroupName(string value);
    internal bool IsSetRuleGroupName();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.DescribeRuleGroupResponse : AmazonWebServiceResponse {
    private RuleGroup _ruleGroup;
    private RuleGroupResponse _ruleGroupResponse;
    private string _updateToken;
    public RuleGroup RuleGroup { get; public set; }
    [AWSPropertyAttribute]
public RuleGroupResponse RuleGroupResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public RuleGroup get_RuleGroup();
    public void set_RuleGroup(RuleGroup value);
    internal bool IsSetRuleGroup();
    public RuleGroupResponse get_RuleGroupResponse();
    public void set_RuleGroupResponse(RuleGroupResponse value);
    internal bool IsSetRuleGroupResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.DescribeTLSInspectionConfigurationRequest : AmazonNetworkFirewallRequest {
    private string _tlsInspectionConfigurationArn;
    private string _tlsInspectionConfigurationName;
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationArn { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationName { get; public set; }
    public string get_TLSInspectionConfigurationArn();
    public void set_TLSInspectionConfigurationArn(string value);
    internal bool IsSetTLSInspectionConfigurationArn();
    public string get_TLSInspectionConfigurationName();
    public void set_TLSInspectionConfigurationName(string value);
    internal bool IsSetTLSInspectionConfigurationName();
}
public class Amazon.NetworkFirewall.Model.DescribeTLSInspectionConfigurationResponse : AmazonWebServiceResponse {
    private TLSInspectionConfiguration _tlsInspectionConfiguration;
    private TLSInspectionConfigurationResponse _tlsInspectionConfigurationResponse;
    private string _updateToken;
    public TLSInspectionConfiguration TLSInspectionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public TLSInspectionConfigurationResponse TLSInspectionConfigurationResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public TLSInspectionConfiguration get_TLSInspectionConfiguration();
    public void set_TLSInspectionConfiguration(TLSInspectionConfiguration value);
    internal bool IsSetTLSInspectionConfiguration();
    public TLSInspectionConfigurationResponse get_TLSInspectionConfigurationResponse();
    public void set_TLSInspectionConfigurationResponse(TLSInspectionConfigurationResponse value);
    internal bool IsSetTLSInspectionConfigurationResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.Dimension : object {
    private string _value;
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.NetworkFirewall.Model.DisassociateSubnetsRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    private List`1<string> _subnetIds;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.DisassociateSubnetsResponse : AmazonWebServiceResponse {
    private string _firewallArn;
    private string _firewallName;
    private List`1<SubnetMapping> _subnetMappings;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public List`1<SubnetMapping> SubnetMappings { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public List`1<SubnetMapping> get_SubnetMappings();
    public void set_SubnetMappings(List`1<SubnetMapping> value);
    internal bool IsSetSubnetMappings();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.EncryptionConfiguration : object {
    private string _keyId;
    private EncryptionType _type;
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public EncryptionType Type { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public EncryptionType get_Type();
    public void set_Type(EncryptionType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.Firewall : object {
    private Nullable`1<bool> _deleteProtection;
    private string _description;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _firewallArn;
    private string _firewallId;
    private string _firewallName;
    private string _firewallPolicyArn;
    private Nullable`1<bool> _firewallPolicyChangeProtection;
    private Nullable`1<bool> _subnetChangeProtection;
    private List`1<SubnetMapping> _subnetMappings;
    private List`1<Tag> _tags;
    private string _vpcId;
    public Nullable`1<bool> DeleteProtection { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallId { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    public Nullable`1<bool> FirewallPolicyChangeProtection { get; public set; }
    public Nullable`1<bool> SubnetChangeProtection { get; public set; }
    [AWSPropertyAttribute]
public List`1<SubnetMapping> SubnetMappings { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public Nullable`1<bool> get_DeleteProtection();
    public void set_DeleteProtection(Nullable`1<bool> value);
    internal bool IsSetDeleteProtection();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallId();
    public void set_FirewallId(string value);
    internal bool IsSetFirewallId();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public Nullable`1<bool> get_FirewallPolicyChangeProtection();
    public void set_FirewallPolicyChangeProtection(Nullable`1<bool> value);
    internal bool IsSetFirewallPolicyChangeProtection();
    public Nullable`1<bool> get_SubnetChangeProtection();
    public void set_SubnetChangeProtection(Nullable`1<bool> value);
    internal bool IsSetSubnetChangeProtection();
    public List`1<SubnetMapping> get_SubnetMappings();
    public void set_SubnetMappings(List`1<SubnetMapping> value);
    internal bool IsSetSubnetMappings();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.NetworkFirewall.Model.FirewallMetadata : object {
    private string _firewallArn;
    private string _firewallName;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
}
public class Amazon.NetworkFirewall.Model.FirewallPolicy : object {
    private PolicyVariables _policyVariables;
    private List`1<string> _statefulDefaultActions;
    private StatefulEngineOptions _statefulEngineOptions;
    private List`1<StatefulRuleGroupReference> _statefulRuleGroupReferences;
    private List`1<CustomAction> _statelessCustomActions;
    private List`1<string> _statelessDefaultActions;
    private List`1<string> _statelessFragmentDefaultActions;
    private List`1<StatelessRuleGroupReference> _statelessRuleGroupReferences;
    private string _tlsInspectionConfigurationArn;
    public PolicyVariables PolicyVariables { get; public set; }
    public List`1<string> StatefulDefaultActions { get; public set; }
    public StatefulEngineOptions StatefulEngineOptions { get; public set; }
    public List`1<StatefulRuleGroupReference> StatefulRuleGroupReferences { get; public set; }
    public List`1<CustomAction> StatelessCustomActions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> StatelessDefaultActions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> StatelessFragmentDefaultActions { get; public set; }
    public List`1<StatelessRuleGroupReference> StatelessRuleGroupReferences { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationArn { get; public set; }
    public PolicyVariables get_PolicyVariables();
    public void set_PolicyVariables(PolicyVariables value);
    internal bool IsSetPolicyVariables();
    public List`1<string> get_StatefulDefaultActions();
    public void set_StatefulDefaultActions(List`1<string> value);
    internal bool IsSetStatefulDefaultActions();
    public StatefulEngineOptions get_StatefulEngineOptions();
    public void set_StatefulEngineOptions(StatefulEngineOptions value);
    internal bool IsSetStatefulEngineOptions();
    public List`1<StatefulRuleGroupReference> get_StatefulRuleGroupReferences();
    public void set_StatefulRuleGroupReferences(List`1<StatefulRuleGroupReference> value);
    internal bool IsSetStatefulRuleGroupReferences();
    public List`1<CustomAction> get_StatelessCustomActions();
    public void set_StatelessCustomActions(List`1<CustomAction> value);
    internal bool IsSetStatelessCustomActions();
    public List`1<string> get_StatelessDefaultActions();
    public void set_StatelessDefaultActions(List`1<string> value);
    internal bool IsSetStatelessDefaultActions();
    public List`1<string> get_StatelessFragmentDefaultActions();
    public void set_StatelessFragmentDefaultActions(List`1<string> value);
    internal bool IsSetStatelessFragmentDefaultActions();
    public List`1<StatelessRuleGroupReference> get_StatelessRuleGroupReferences();
    public void set_StatelessRuleGroupReferences(List`1<StatelessRuleGroupReference> value);
    internal bool IsSetStatelessRuleGroupReferences();
    public string get_TLSInspectionConfigurationArn();
    public void set_TLSInspectionConfigurationArn(string value);
    internal bool IsSetTLSInspectionConfigurationArn();
}
public class Amazon.NetworkFirewall.Model.FirewallPolicyMetadata : object {
    private string _arn;
    private string _name;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.NetworkFirewall.Model.FirewallPolicyResponse : object {
    private Nullable`1<int> _consumedStatefulRuleCapacity;
    private Nullable`1<int> _consumedStatelessRuleCapacity;
    private string _description;
    private EncryptionConfiguration _encryptionConfiguration;
    private string _firewallPolicyArn;
    private string _firewallPolicyId;
    private string _firewallPolicyName;
    private ResourceStatus _firewallPolicyStatus;
    private Nullable`1<DateTime> _lastModifiedTime;
    private Nullable`1<int> _numberOfAssociations;
    private List`1<Tag> _tags;
    public Nullable`1<int> ConsumedStatefulRuleCapacity { get; public set; }
    public Nullable`1<int> ConsumedStatelessRuleCapacity { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyId { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyName { get; public set; }
    public ResourceStatus FirewallPolicyStatus { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public Nullable`1<int> NumberOfAssociations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public Nullable`1<int> get_ConsumedStatefulRuleCapacity();
    public void set_ConsumedStatefulRuleCapacity(Nullable`1<int> value);
    internal bool IsSetConsumedStatefulRuleCapacity();
    public Nullable`1<int> get_ConsumedStatelessRuleCapacity();
    public void set_ConsumedStatelessRuleCapacity(Nullable`1<int> value);
    internal bool IsSetConsumedStatelessRuleCapacity();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public string get_FirewallPolicyId();
    public void set_FirewallPolicyId(string value);
    internal bool IsSetFirewallPolicyId();
    public string get_FirewallPolicyName();
    public void set_FirewallPolicyName(string value);
    internal bool IsSetFirewallPolicyName();
    public ResourceStatus get_FirewallPolicyStatus();
    public void set_FirewallPolicyStatus(ResourceStatus value);
    internal bool IsSetFirewallPolicyStatus();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public Nullable`1<int> get_NumberOfAssociations();
    public void set_NumberOfAssociations(Nullable`1<int> value);
    internal bool IsSetNumberOfAssociations();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.NetworkFirewall.Model.FirewallStatus : object {
    private CapacityUsageSummary _capacityUsageSummary;
    private ConfigurationSyncState _configurationSyncStateSummary;
    private FirewallStatusValue _status;
    private Dictionary`2<string, SyncState> _syncStates;
    public CapacityUsageSummary CapacityUsageSummary { get; public set; }
    [AWSPropertyAttribute]
public ConfigurationSyncState ConfigurationSyncStateSummary { get; public set; }
    [AWSPropertyAttribute]
public FirewallStatusValue Status { get; public set; }
    public Dictionary`2<string, SyncState> SyncStates { get; public set; }
    public CapacityUsageSummary get_CapacityUsageSummary();
    public void set_CapacityUsageSummary(CapacityUsageSummary value);
    internal bool IsSetCapacityUsageSummary();
    public ConfigurationSyncState get_ConfigurationSyncStateSummary();
    public void set_ConfigurationSyncStateSummary(ConfigurationSyncState value);
    internal bool IsSetConfigurationSyncStateSummary();
    public FirewallStatusValue get_Status();
    public void set_Status(FirewallStatusValue value);
    internal bool IsSetStatus();
    public Dictionary`2<string, SyncState> get_SyncStates();
    public void set_SyncStates(Dictionary`2<string, SyncState> value);
    internal bool IsSetSyncStates();
}
public class Amazon.NetworkFirewall.Model.Header : object {
    private string _destination;
    private string _destinationPort;
    private StatefulRuleDirection _direction;
    private StatefulRuleProtocol _protocol;
    private string _source;
    private string _sourcePort;
    [AWSPropertyAttribute]
public string Destination { get; public set; }
    [AWSPropertyAttribute]
public string DestinationPort { get; public set; }
    [AWSPropertyAttribute]
public StatefulRuleDirection Direction { get; public set; }
    [AWSPropertyAttribute]
public StatefulRuleProtocol Protocol { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    [AWSPropertyAttribute]
public string SourcePort { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public string get_DestinationPort();
    public void set_DestinationPort(string value);
    internal bool IsSetDestinationPort();
    public StatefulRuleDirection get_Direction();
    public void set_Direction(StatefulRuleDirection value);
    internal bool IsSetDirection();
    public StatefulRuleProtocol get_Protocol();
    public void set_Protocol(StatefulRuleProtocol value);
    internal bool IsSetProtocol();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourcePort();
    public void set_SourcePort(string value);
    internal bool IsSetSourcePort();
}
public interface Amazon.NetworkFirewall.Model.IListFirewallPoliciesPaginator {
    public IPaginatedEnumerable`1<ListFirewallPoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<FirewallPolicyMetadata> FirewallPolicies { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFirewallPoliciesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FirewallPolicyMetadata> get_FirewallPolicies();
}
public interface Amazon.NetworkFirewall.Model.IListFirewallsPaginator {
    public IPaginatedEnumerable`1<ListFirewallsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FirewallMetadata> Firewalls { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFirewallsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FirewallMetadata> get_Firewalls();
}
public interface Amazon.NetworkFirewall.Model.IListRuleGroupsPaginator {
    public IPaginatedEnumerable`1<ListRuleGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<RuleGroupMetadata> RuleGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<ListRuleGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<RuleGroupMetadata> get_RuleGroups();
}
public interface Amazon.NetworkFirewall.Model.IListTagsForResourcePaginator {
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Tag> get_Tags();
}
public interface Amazon.NetworkFirewall.Model.IListTLSInspectionConfigurationsPaginator {
    public IPaginatedEnumerable`1<ListTLSInspectionConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TLSInspectionConfigurationMetadata> TLSInspectionConfigurations { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTLSInspectionConfigurationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TLSInspectionConfigurationMetadata> get_TLSInspectionConfigurations();
}
public interface Amazon.NetworkFirewall.Model.INetworkFirewallPaginatorFactory {
    public abstract virtual IListFirewallPoliciesPaginator ListFirewallPolicies(ListFirewallPoliciesRequest request);
    public abstract virtual IListFirewallsPaginator ListFirewalls(ListFirewallsRequest request);
    public abstract virtual IListRuleGroupsPaginator ListRuleGroups(ListRuleGroupsRequest request);
    public abstract virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual IListTLSInspectionConfigurationsPaginator ListTLSInspectionConfigurations(ListTLSInspectionConfigurationsRequest request);
}
public class Amazon.NetworkFirewall.Model.InsufficientCapacityException : AmazonNetworkFirewallException {
    public InsufficientCapacityException(string message);
    public InsufficientCapacityException(string message, Exception innerException);
    public InsufficientCapacityException(Exception innerException);
    public InsufficientCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ActionDefinitionMarshaller : object {
    public static ActionDefinitionMarshaller Instance;
    private static ActionDefinitionMarshaller();
    public sealed virtual void Marshall(ActionDefinition requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ActionDefinitionUnmarshaller : object {
    private static ActionDefinitionUnmarshaller _instance;
    public static ActionDefinitionUnmarshaller Instance { get; }
    private static ActionDefinitionUnmarshaller();
    private sealed virtual override ActionDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.ActionDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ActionDefinition Unmarshall(JsonUnmarshallerContext context);
    public static ActionDefinitionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AddressMarshaller : object {
    public static AddressMarshaller Instance;
    private static AddressMarshaller();
    public sealed virtual void Marshall(Address requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AddressUnmarshaller : object {
    private static AddressUnmarshaller _instance;
    public static AddressUnmarshaller Instance { get; }
    private static AddressUnmarshaller();
    private sealed virtual override Address Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.Address,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Address Unmarshall(JsonUnmarshallerContext context);
    public static AddressUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AnalysisResultUnmarshaller : object {
    private static AnalysisResultUnmarshaller _instance;
    public static AnalysisResultUnmarshaller Instance { get; }
    private static AnalysisResultUnmarshaller();
    private sealed virtual override AnalysisResult Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.AnalysisResult,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalysisResult Unmarshall(JsonUnmarshallerContext context);
    public static AnalysisResultUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AssociateFirewallPolicyRequestMarshaller : object {
    private static AssociateFirewallPolicyRequestMarshaller _instance;
    public static AssociateFirewallPolicyRequestMarshaller Instance { get; }
    private static AssociateFirewallPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateFirewallPolicyRequest publicRequest);
    internal static AssociateFirewallPolicyRequestMarshaller GetInstance();
    public static AssociateFirewallPolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AssociateFirewallPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AssociateFirewallPolicyResponseUnmarshaller _instance;
    public static AssociateFirewallPolicyResponseUnmarshaller Instance { get; }
    private static AssociateFirewallPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateFirewallPolicyResponseUnmarshaller GetInstance();
    public static AssociateFirewallPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AssociateSubnetsRequestMarshaller : object {
    private static AssociateSubnetsRequestMarshaller _instance;
    public static AssociateSubnetsRequestMarshaller Instance { get; }
    private static AssociateSubnetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateSubnetsRequest publicRequest);
    internal static AssociateSubnetsRequestMarshaller GetInstance();
    public static AssociateSubnetsRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AssociateSubnetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AssociateSubnetsResponseUnmarshaller _instance;
    public static AssociateSubnetsResponseUnmarshaller Instance { get; }
    private static AssociateSubnetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateSubnetsResponseUnmarshaller GetInstance();
    public static AssociateSubnetsResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.AttachmentUnmarshaller : object {
    private static AttachmentUnmarshaller _instance;
    public static AttachmentUnmarshaller Instance { get; }
    private static AttachmentUnmarshaller();
    private sealed virtual override Attachment Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.Attachment,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Attachment Unmarshall(JsonUnmarshallerContext context);
    public static AttachmentUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CapacityUsageSummaryUnmarshaller : object {
    private static CapacityUsageSummaryUnmarshaller _instance;
    public static CapacityUsageSummaryUnmarshaller Instance { get; }
    private static CapacityUsageSummaryUnmarshaller();
    private sealed virtual override CapacityUsageSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.CapacityUsageSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CapacityUsageSummary Unmarshall(JsonUnmarshallerContext context);
    public static CapacityUsageSummaryUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CheckCertificateRevocationStatusActionsMarshaller : object {
    public static CheckCertificateRevocationStatusActionsMarshaller Instance;
    private static CheckCertificateRevocationStatusActionsMarshaller();
    public sealed virtual void Marshall(CheckCertificateRevocationStatusActions requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CheckCertificateRevocationStatusActionsUnmarshaller : object {
    private static CheckCertificateRevocationStatusActionsUnmarshaller _instance;
    public static CheckCertificateRevocationStatusActionsUnmarshaller Instance { get; }
    private static CheckCertificateRevocationStatusActionsUnmarshaller();
    private sealed virtual override CheckCertificateRevocationStatusActions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.CheckCertificateRevocationStatusActions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CheckCertificateRevocationStatusActions Unmarshall(JsonUnmarshallerContext context);
    public static CheckCertificateRevocationStatusActionsUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CIDRSummaryUnmarshaller : object {
    private static CIDRSummaryUnmarshaller _instance;
    public static CIDRSummaryUnmarshaller Instance { get; }
    private static CIDRSummaryUnmarshaller();
    private sealed virtual override CIDRSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.CIDRSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CIDRSummary Unmarshall(JsonUnmarshallerContext context);
    public static CIDRSummaryUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateFirewallPolicyRequestMarshaller : object {
    private static CreateFirewallPolicyRequestMarshaller _instance;
    public static CreateFirewallPolicyRequestMarshaller Instance { get; }
    private static CreateFirewallPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFirewallPolicyRequest publicRequest);
    internal static CreateFirewallPolicyRequestMarshaller GetInstance();
    public static CreateFirewallPolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateFirewallPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateFirewallPolicyResponseUnmarshaller _instance;
    public static CreateFirewallPolicyResponseUnmarshaller Instance { get; }
    private static CreateFirewallPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFirewallPolicyResponseUnmarshaller GetInstance();
    public static CreateFirewallPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateFirewallRequestMarshaller : object {
    private static CreateFirewallRequestMarshaller _instance;
    public static CreateFirewallRequestMarshaller Instance { get; }
    private static CreateFirewallRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFirewallRequest publicRequest);
    internal static CreateFirewallRequestMarshaller GetInstance();
    public static CreateFirewallRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateFirewallResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateFirewallResponseUnmarshaller _instance;
    public static CreateFirewallResponseUnmarshaller Instance { get; }
    private static CreateFirewallResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFirewallResponseUnmarshaller GetInstance();
    public static CreateFirewallResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateRuleGroupRequestMarshaller : object {
    private static CreateRuleGroupRequestMarshaller _instance;
    public static CreateRuleGroupRequestMarshaller Instance { get; }
    private static CreateRuleGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRuleGroupRequest publicRequest);
    internal static CreateRuleGroupRequestMarshaller GetInstance();
    public static CreateRuleGroupRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateRuleGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateRuleGroupResponseUnmarshaller _instance;
    public static CreateRuleGroupResponseUnmarshaller Instance { get; }
    private static CreateRuleGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRuleGroupResponseUnmarshaller GetInstance();
    public static CreateRuleGroupResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateTLSInspectionConfigurationRequestMarshaller : object {
    private static CreateTLSInspectionConfigurationRequestMarshaller _instance;
    public static CreateTLSInspectionConfigurationRequestMarshaller Instance { get; }
    private static CreateTLSInspectionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTLSInspectionConfigurationRequest publicRequest);
    internal static CreateTLSInspectionConfigurationRequestMarshaller GetInstance();
    public static CreateTLSInspectionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CreateTLSInspectionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTLSInspectionConfigurationResponseUnmarshaller _instance;
    public static CreateTLSInspectionConfigurationResponseUnmarshaller Instance { get; }
    private static CreateTLSInspectionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTLSInspectionConfigurationResponseUnmarshaller GetInstance();
    public static CreateTLSInspectionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CustomActionMarshaller : object {
    public static CustomActionMarshaller Instance;
    private static CustomActionMarshaller();
    public sealed virtual void Marshall(CustomAction requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.CustomActionUnmarshaller : object {
    private static CustomActionUnmarshaller _instance;
    public static CustomActionUnmarshaller Instance { get; }
    private static CustomActionUnmarshaller();
    private sealed virtual override CustomAction Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.CustomAction,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomAction Unmarshall(JsonUnmarshallerContext context);
    public static CustomActionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteFirewallPolicyRequestMarshaller : object {
    private static DeleteFirewallPolicyRequestMarshaller _instance;
    public static DeleteFirewallPolicyRequestMarshaller Instance { get; }
    private static DeleteFirewallPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFirewallPolicyRequest publicRequest);
    internal static DeleteFirewallPolicyRequestMarshaller GetInstance();
    public static DeleteFirewallPolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteFirewallPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFirewallPolicyResponseUnmarshaller _instance;
    public static DeleteFirewallPolicyResponseUnmarshaller Instance { get; }
    private static DeleteFirewallPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFirewallPolicyResponseUnmarshaller GetInstance();
    public static DeleteFirewallPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteFirewallRequestMarshaller : object {
    private static DeleteFirewallRequestMarshaller _instance;
    public static DeleteFirewallRequestMarshaller Instance { get; }
    private static DeleteFirewallRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFirewallRequest publicRequest);
    internal static DeleteFirewallRequestMarshaller GetInstance();
    public static DeleteFirewallRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteFirewallResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFirewallResponseUnmarshaller _instance;
    public static DeleteFirewallResponseUnmarshaller Instance { get; }
    private static DeleteFirewallResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFirewallResponseUnmarshaller GetInstance();
    public static DeleteFirewallResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteRuleGroupRequestMarshaller : object {
    private static DeleteRuleGroupRequestMarshaller _instance;
    public static DeleteRuleGroupRequestMarshaller Instance { get; }
    private static DeleteRuleGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRuleGroupRequest publicRequest);
    internal static DeleteRuleGroupRequestMarshaller GetInstance();
    public static DeleteRuleGroupRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteRuleGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteRuleGroupResponseUnmarshaller _instance;
    public static DeleteRuleGroupResponseUnmarshaller Instance { get; }
    private static DeleteRuleGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRuleGroupResponseUnmarshaller GetInstance();
    public static DeleteRuleGroupResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteTLSInspectionConfigurationRequestMarshaller : object {
    private static DeleteTLSInspectionConfigurationRequestMarshaller _instance;
    public static DeleteTLSInspectionConfigurationRequestMarshaller Instance { get; }
    private static DeleteTLSInspectionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTLSInspectionConfigurationRequest publicRequest);
    internal static DeleteTLSInspectionConfigurationRequestMarshaller GetInstance();
    public static DeleteTLSInspectionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DeleteTLSInspectionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTLSInspectionConfigurationResponseUnmarshaller _instance;
    public static DeleteTLSInspectionConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteTLSInspectionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTLSInspectionConfigurationResponseUnmarshaller GetInstance();
    public static DeleteTLSInspectionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeFirewallPolicyRequestMarshaller : object {
    private static DescribeFirewallPolicyRequestMarshaller _instance;
    public static DescribeFirewallPolicyRequestMarshaller Instance { get; }
    private static DescribeFirewallPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFirewallPolicyRequest publicRequest);
    internal static DescribeFirewallPolicyRequestMarshaller GetInstance();
    public static DescribeFirewallPolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeFirewallPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFirewallPolicyResponseUnmarshaller _instance;
    public static DescribeFirewallPolicyResponseUnmarshaller Instance { get; }
    private static DescribeFirewallPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFirewallPolicyResponseUnmarshaller GetInstance();
    public static DescribeFirewallPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeFirewallRequestMarshaller : object {
    private static DescribeFirewallRequestMarshaller _instance;
    public static DescribeFirewallRequestMarshaller Instance { get; }
    private static DescribeFirewallRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFirewallRequest publicRequest);
    internal static DescribeFirewallRequestMarshaller GetInstance();
    public static DescribeFirewallRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeFirewallResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFirewallResponseUnmarshaller _instance;
    public static DescribeFirewallResponseUnmarshaller Instance { get; }
    private static DescribeFirewallResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFirewallResponseUnmarshaller GetInstance();
    public static DescribeFirewallResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeLoggingConfigurationRequestMarshaller : object {
    private static DescribeLoggingConfigurationRequestMarshaller _instance;
    public static DescribeLoggingConfigurationRequestMarshaller Instance { get; }
    private static DescribeLoggingConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoggingConfigurationRequest publicRequest);
    internal static DescribeLoggingConfigurationRequestMarshaller GetInstance();
    public static DescribeLoggingConfigurationRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeLoggingConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLoggingConfigurationResponseUnmarshaller _instance;
    public static DescribeLoggingConfigurationResponseUnmarshaller Instance { get; }
    private static DescribeLoggingConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoggingConfigurationResponseUnmarshaller GetInstance();
    public static DescribeLoggingConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeResourcePolicyRequestMarshaller : object {
    private static DescribeResourcePolicyRequestMarshaller _instance;
    public static DescribeResourcePolicyRequestMarshaller Instance { get; }
    private static DescribeResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeResourcePolicyRequest publicRequest);
    internal static DescribeResourcePolicyRequestMarshaller GetInstance();
    public static DescribeResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeResourcePolicyResponseUnmarshaller _instance;
    public static DescribeResourcePolicyResponseUnmarshaller Instance { get; }
    private static DescribeResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeResourcePolicyResponseUnmarshaller GetInstance();
    public static DescribeResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeRuleGroupMetadataRequestMarshaller : object {
    private static DescribeRuleGroupMetadataRequestMarshaller _instance;
    public static DescribeRuleGroupMetadataRequestMarshaller Instance { get; }
    private static DescribeRuleGroupMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRuleGroupMetadataRequest publicRequest);
    internal static DescribeRuleGroupMetadataRequestMarshaller GetInstance();
    public static DescribeRuleGroupMetadataRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeRuleGroupMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeRuleGroupMetadataResponseUnmarshaller _instance;
    public static DescribeRuleGroupMetadataResponseUnmarshaller Instance { get; }
    private static DescribeRuleGroupMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRuleGroupMetadataResponseUnmarshaller GetInstance();
    public static DescribeRuleGroupMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeRuleGroupRequestMarshaller : object {
    private static DescribeRuleGroupRequestMarshaller _instance;
    public static DescribeRuleGroupRequestMarshaller Instance { get; }
    private static DescribeRuleGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRuleGroupRequest publicRequest);
    internal static DescribeRuleGroupRequestMarshaller GetInstance();
    public static DescribeRuleGroupRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeRuleGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeRuleGroupResponseUnmarshaller _instance;
    public static DescribeRuleGroupResponseUnmarshaller Instance { get; }
    private static DescribeRuleGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRuleGroupResponseUnmarshaller GetInstance();
    public static DescribeRuleGroupResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeTLSInspectionConfigurationRequestMarshaller : object {
    private static DescribeTLSInspectionConfigurationRequestMarshaller _instance;
    public static DescribeTLSInspectionConfigurationRequestMarshaller Instance { get; }
    private static DescribeTLSInspectionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTLSInspectionConfigurationRequest publicRequest);
    internal static DescribeTLSInspectionConfigurationRequestMarshaller GetInstance();
    public static DescribeTLSInspectionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DescribeTLSInspectionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTLSInspectionConfigurationResponseUnmarshaller _instance;
    public static DescribeTLSInspectionConfigurationResponseUnmarshaller Instance { get; }
    private static DescribeTLSInspectionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTLSInspectionConfigurationResponseUnmarshaller GetInstance();
    public static DescribeTLSInspectionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DimensionMarshaller : object {
    public static DimensionMarshaller Instance;
    private static DimensionMarshaller();
    public sealed virtual void Marshall(Dimension requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DimensionUnmarshaller : object {
    private static DimensionUnmarshaller _instance;
    public static DimensionUnmarshaller Instance { get; }
    private static DimensionUnmarshaller();
    private sealed virtual override Dimension Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.Dimension,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Dimension Unmarshall(JsonUnmarshallerContext context);
    public static DimensionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DisassociateSubnetsRequestMarshaller : object {
    private static DisassociateSubnetsRequestMarshaller _instance;
    public static DisassociateSubnetsRequestMarshaller Instance { get; }
    private static DisassociateSubnetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateSubnetsRequest publicRequest);
    internal static DisassociateSubnetsRequestMarshaller GetInstance();
    public static DisassociateSubnetsRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.DisassociateSubnetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisassociateSubnetsResponseUnmarshaller _instance;
    public static DisassociateSubnetsResponseUnmarshaller Instance { get; }
    private static DisassociateSubnetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateSubnetsResponseUnmarshaller GetInstance();
    public static DisassociateSubnetsResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller : object {
    public static EncryptionConfigurationMarshaller Instance;
    private static EncryptionConfigurationMarshaller();
    public sealed virtual void Marshall(EncryptionConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller : object {
    private static EncryptionConfigurationUnmarshaller _instance;
    public static EncryptionConfigurationUnmarshaller Instance { get; }
    private static EncryptionConfigurationUnmarshaller();
    private sealed virtual override EncryptionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.EncryptionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionConfigurationUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.FirewallMetadataUnmarshaller : object {
    private static FirewallMetadataUnmarshaller _instance;
    public static FirewallMetadataUnmarshaller Instance { get; }
    private static FirewallMetadataUnmarshaller();
    private sealed virtual override FirewallMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.FirewallMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FirewallMetadata Unmarshall(JsonUnmarshallerContext context);
    public static FirewallMetadataUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.FirewallPolicyMarshaller : object {
    public static FirewallPolicyMarshaller Instance;
    private static FirewallPolicyMarshaller();
    public sealed virtual void Marshall(FirewallPolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.FirewallPolicyMetadataUnmarshaller : object {
    private static FirewallPolicyMetadataUnmarshaller _instance;
    public static FirewallPolicyMetadataUnmarshaller Instance { get; }
    private static FirewallPolicyMetadataUnmarshaller();
    private sealed virtual override FirewallPolicyMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.FirewallPolicyMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FirewallPolicyMetadata Unmarshall(JsonUnmarshallerContext context);
    public static FirewallPolicyMetadataUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.FirewallPolicyResponseUnmarshaller : object {
    private static FirewallPolicyResponseUnmarshaller _instance;
    public static FirewallPolicyResponseUnmarshaller Instance { get; }
    private static FirewallPolicyResponseUnmarshaller();
    private sealed virtual override FirewallPolicyResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.FirewallPolicyResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FirewallPolicyResponse Unmarshall(JsonUnmarshallerContext context);
    public static FirewallPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.FirewallPolicyUnmarshaller : object {
    private static FirewallPolicyUnmarshaller _instance;
    public static FirewallPolicyUnmarshaller Instance { get; }
    private static FirewallPolicyUnmarshaller();
    private sealed virtual override FirewallPolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.FirewallPolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FirewallPolicy Unmarshall(JsonUnmarshallerContext context);
    public static FirewallPolicyUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.FirewallStatusUnmarshaller : object {
    private static FirewallStatusUnmarshaller _instance;
    public static FirewallStatusUnmarshaller Instance { get; }
    private static FirewallStatusUnmarshaller();
    private sealed virtual override FirewallStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.FirewallStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FirewallStatus Unmarshall(JsonUnmarshallerContext context);
    public static FirewallStatusUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.FirewallUnmarshaller : object {
    private static FirewallUnmarshaller _instance;
    public static FirewallUnmarshaller Instance { get; }
    private static FirewallUnmarshaller();
    private sealed virtual override Firewall Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.Firewall,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Firewall Unmarshall(JsonUnmarshallerContext context);
    public static FirewallUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.HeaderMarshaller : object {
    public static HeaderMarshaller Instance;
    private static HeaderMarshaller();
    public sealed virtual void Marshall(Header requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.HeaderUnmarshaller : object {
    private static HeaderUnmarshaller _instance;
    public static HeaderUnmarshaller Instance { get; }
    private static HeaderUnmarshaller();
    private sealed virtual override Header Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.Header,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Header Unmarshall(JsonUnmarshallerContext context);
    public static HeaderUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.InsufficientCapacityExceptionUnmarshaller : object {
    private static InsufficientCapacityExceptionUnmarshaller _instance;
    public static InsufficientCapacityExceptionUnmarshaller Instance { get; }
    private static InsufficientCapacityExceptionUnmarshaller();
    public sealed virtual InsufficientCapacityException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientCapacityException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller : object {
    private static InternalServerErrorExceptionUnmarshaller _instance;
    public static InternalServerErrorExceptionUnmarshaller Instance { get; }
    private static InternalServerErrorExceptionUnmarshaller();
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.InvalidOperationExceptionUnmarshaller : object {
    private static InvalidOperationExceptionUnmarshaller _instance;
    public static InvalidOperationExceptionUnmarshaller Instance { get; }
    private static InvalidOperationExceptionUnmarshaller();
    public sealed virtual InvalidOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller : object {
    private static InvalidRequestExceptionUnmarshaller _instance;
    public static InvalidRequestExceptionUnmarshaller Instance { get; }
    private static InvalidRequestExceptionUnmarshaller();
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.InvalidResourcePolicyExceptionUnmarshaller : object {
    private static InvalidResourcePolicyExceptionUnmarshaller _instance;
    public static InvalidResourcePolicyExceptionUnmarshaller Instance { get; }
    private static InvalidResourcePolicyExceptionUnmarshaller();
    public sealed virtual InvalidResourcePolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidResourcePolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidResourcePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.InvalidTokenExceptionUnmarshaller : object {
    private static InvalidTokenExceptionUnmarshaller _instance;
    public static InvalidTokenExceptionUnmarshaller Instance { get; }
    private static InvalidTokenExceptionUnmarshaller();
    public sealed virtual InvalidTokenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTokenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.IPSetMarshaller : object {
    public static IPSetMarshaller Instance;
    private static IPSetMarshaller();
    public sealed virtual void Marshall(IPSet requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.IPSetMetadataUnmarshaller : object {
    private static IPSetMetadataUnmarshaller _instance;
    public static IPSetMetadataUnmarshaller Instance { get; }
    private static IPSetMetadataUnmarshaller();
    private sealed virtual override IPSetMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.IPSetMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IPSetMetadata Unmarshall(JsonUnmarshallerContext context);
    public static IPSetMetadataUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.IPSetReferenceMarshaller : object {
    public static IPSetReferenceMarshaller Instance;
    private static IPSetReferenceMarshaller();
    public sealed virtual void Marshall(IPSetReference requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.IPSetReferenceUnmarshaller : object {
    private static IPSetReferenceUnmarshaller _instance;
    public static IPSetReferenceUnmarshaller Instance { get; }
    private static IPSetReferenceUnmarshaller();
    private sealed virtual override IPSetReference Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.IPSetReference,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IPSetReference Unmarshall(JsonUnmarshallerContext context);
    public static IPSetReferenceUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.IPSetUnmarshaller : object {
    private static IPSetUnmarshaller _instance;
    public static IPSetUnmarshaller Instance { get; }
    private static IPSetUnmarshaller();
    private sealed virtual override IPSet Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.IPSet,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IPSet Unmarshall(JsonUnmarshallerContext context);
    public static IPSetUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListFirewallPoliciesRequestMarshaller : object {
    private static ListFirewallPoliciesRequestMarshaller _instance;
    public static ListFirewallPoliciesRequestMarshaller Instance { get; }
    private static ListFirewallPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFirewallPoliciesRequest publicRequest);
    internal static ListFirewallPoliciesRequestMarshaller GetInstance();
    public static ListFirewallPoliciesRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListFirewallPoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFirewallPoliciesResponseUnmarshaller _instance;
    public static ListFirewallPoliciesResponseUnmarshaller Instance { get; }
    private static ListFirewallPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFirewallPoliciesResponseUnmarshaller GetInstance();
    public static ListFirewallPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListFirewallsRequestMarshaller : object {
    private static ListFirewallsRequestMarshaller _instance;
    public static ListFirewallsRequestMarshaller Instance { get; }
    private static ListFirewallsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFirewallsRequest publicRequest);
    internal static ListFirewallsRequestMarshaller GetInstance();
    public static ListFirewallsRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListFirewallsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFirewallsResponseUnmarshaller _instance;
    public static ListFirewallsResponseUnmarshaller Instance { get; }
    private static ListFirewallsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFirewallsResponseUnmarshaller GetInstance();
    public static ListFirewallsResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListRuleGroupsRequestMarshaller : object {
    private static ListRuleGroupsRequestMarshaller _instance;
    public static ListRuleGroupsRequestMarshaller Instance { get; }
    private static ListRuleGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRuleGroupsRequest publicRequest);
    internal static ListRuleGroupsRequestMarshaller GetInstance();
    public static ListRuleGroupsRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListRuleGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListRuleGroupsResponseUnmarshaller _instance;
    public static ListRuleGroupsResponseUnmarshaller Instance { get; }
    private static ListRuleGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRuleGroupsResponseUnmarshaller GetInstance();
    public static ListRuleGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListTLSInspectionConfigurationsRequestMarshaller : object {
    private static ListTLSInspectionConfigurationsRequestMarshaller _instance;
    public static ListTLSInspectionConfigurationsRequestMarshaller Instance { get; }
    private static ListTLSInspectionConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTLSInspectionConfigurationsRequest publicRequest);
    internal static ListTLSInspectionConfigurationsRequestMarshaller GetInstance();
    public static ListTLSInspectionConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ListTLSInspectionConfigurationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTLSInspectionConfigurationsResponseUnmarshaller _instance;
    public static ListTLSInspectionConfigurationsResponseUnmarshaller Instance { get; }
    private static ListTLSInspectionConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTLSInspectionConfigurationsResponseUnmarshaller GetInstance();
    public static ListTLSInspectionConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.LogDestinationConfigMarshaller : object {
    public static LogDestinationConfigMarshaller Instance;
    private static LogDestinationConfigMarshaller();
    public sealed virtual void Marshall(LogDestinationConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.LogDestinationConfigUnmarshaller : object {
    private static LogDestinationConfigUnmarshaller _instance;
    public static LogDestinationConfigUnmarshaller Instance { get; }
    private static LogDestinationConfigUnmarshaller();
    private sealed virtual override LogDestinationConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.LogDestinationConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogDestinationConfig Unmarshall(JsonUnmarshallerContext context);
    public static LogDestinationConfigUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.LogDestinationPermissionExceptionUnmarshaller : object {
    private static LogDestinationPermissionExceptionUnmarshaller _instance;
    public static LogDestinationPermissionExceptionUnmarshaller Instance { get; }
    private static LogDestinationPermissionExceptionUnmarshaller();
    public sealed virtual LogDestinationPermissionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LogDestinationPermissionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LogDestinationPermissionExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.LoggingConfigurationMarshaller : object {
    public static LoggingConfigurationMarshaller Instance;
    private static LoggingConfigurationMarshaller();
    public sealed virtual void Marshall(LoggingConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.LoggingConfigurationUnmarshaller : object {
    private static LoggingConfigurationUnmarshaller _instance;
    public static LoggingConfigurationUnmarshaller Instance { get; }
    private static LoggingConfigurationUnmarshaller();
    private sealed virtual override LoggingConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.LoggingConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoggingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static LoggingConfigurationUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.MatchAttributesMarshaller : object {
    public static MatchAttributesMarshaller Instance;
    private static MatchAttributesMarshaller();
    public sealed virtual void Marshall(MatchAttributes requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.MatchAttributesUnmarshaller : object {
    private static MatchAttributesUnmarshaller _instance;
    public static MatchAttributesUnmarshaller Instance { get; }
    private static MatchAttributesUnmarshaller();
    private sealed virtual override MatchAttributes Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.MatchAttributes,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MatchAttributes Unmarshall(JsonUnmarshallerContext context);
    public static MatchAttributesUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PerObjectStatusUnmarshaller : object {
    private static PerObjectStatusUnmarshaller _instance;
    public static PerObjectStatusUnmarshaller Instance { get; }
    private static PerObjectStatusUnmarshaller();
    private sealed virtual override PerObjectStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.PerObjectStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PerObjectStatus Unmarshall(JsonUnmarshallerContext context);
    public static PerObjectStatusUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PolicyVariablesMarshaller : object {
    public static PolicyVariablesMarshaller Instance;
    private static PolicyVariablesMarshaller();
    public sealed virtual void Marshall(PolicyVariables requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PolicyVariablesUnmarshaller : object {
    private static PolicyVariablesUnmarshaller _instance;
    public static PolicyVariablesUnmarshaller Instance { get; }
    private static PolicyVariablesUnmarshaller();
    private sealed virtual override PolicyVariables Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.PolicyVariables,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyVariables Unmarshall(JsonUnmarshallerContext context);
    public static PolicyVariablesUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PortRangeMarshaller : object {
    public static PortRangeMarshaller Instance;
    private static PortRangeMarshaller();
    public sealed virtual void Marshall(PortRange requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PortRangeUnmarshaller : object {
    private static PortRangeUnmarshaller _instance;
    public static PortRangeUnmarshaller Instance { get; }
    private static PortRangeUnmarshaller();
    private sealed virtual override PortRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.PortRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PortRange Unmarshall(JsonUnmarshallerContext context);
    public static PortRangeUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PortSetMarshaller : object {
    public static PortSetMarshaller Instance;
    private static PortSetMarshaller();
    public sealed virtual void Marshall(PortSet requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PortSetUnmarshaller : object {
    private static PortSetUnmarshaller _instance;
    public static PortSetUnmarshaller Instance { get; }
    private static PortSetUnmarshaller();
    private sealed virtual override PortSet Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.PortSet,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PortSet Unmarshall(JsonUnmarshallerContext context);
    public static PortSetUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PublishMetricActionMarshaller : object {
    public static PublishMetricActionMarshaller Instance;
    private static PublishMetricActionMarshaller();
    public sealed virtual void Marshall(PublishMetricAction requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PublishMetricActionUnmarshaller : object {
    private static PublishMetricActionUnmarshaller _instance;
    public static PublishMetricActionUnmarshaller Instance { get; }
    private static PublishMetricActionUnmarshaller();
    private sealed virtual override PublishMetricAction Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.PublishMetricAction,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublishMetricAction Unmarshall(JsonUnmarshallerContext context);
    public static PublishMetricActionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ReferenceSetsMarshaller : object {
    public static ReferenceSetsMarshaller Instance;
    private static ReferenceSetsMarshaller();
    public sealed virtual void Marshall(ReferenceSets requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ReferenceSetsUnmarshaller : object {
    private static ReferenceSetsUnmarshaller _instance;
    public static ReferenceSetsUnmarshaller Instance { get; }
    private static ReferenceSetsUnmarshaller();
    private sealed virtual override ReferenceSets Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.ReferenceSets,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReferenceSets Unmarshall(JsonUnmarshallerContext context);
    public static ReferenceSetsUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ResourceOwnerCheckExceptionUnmarshaller : object {
    private static ResourceOwnerCheckExceptionUnmarshaller _instance;
    public static ResourceOwnerCheckExceptionUnmarshaller Instance { get; }
    private static ResourceOwnerCheckExceptionUnmarshaller();
    public sealed virtual ResourceOwnerCheckException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceOwnerCheckException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceOwnerCheckExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleDefinitionMarshaller : object {
    public static RuleDefinitionMarshaller Instance;
    private static RuleDefinitionMarshaller();
    public sealed virtual void Marshall(RuleDefinition requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleDefinitionUnmarshaller : object {
    private static RuleDefinitionUnmarshaller _instance;
    public static RuleDefinitionUnmarshaller Instance { get; }
    private static RuleDefinitionUnmarshaller();
    private sealed virtual override RuleDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RuleDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleDefinition Unmarshall(JsonUnmarshallerContext context);
    public static RuleDefinitionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleGroupMarshaller : object {
    public static RuleGroupMarshaller Instance;
    private static RuleGroupMarshaller();
    public sealed virtual void Marshall(RuleGroup requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleGroupMetadataUnmarshaller : object {
    private static RuleGroupMetadataUnmarshaller _instance;
    public static RuleGroupMetadataUnmarshaller Instance { get; }
    private static RuleGroupMetadataUnmarshaller();
    private sealed virtual override RuleGroupMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RuleGroupMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleGroupMetadata Unmarshall(JsonUnmarshallerContext context);
    public static RuleGroupMetadataUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleGroupResponseUnmarshaller : object {
    private static RuleGroupResponseUnmarshaller _instance;
    public static RuleGroupResponseUnmarshaller Instance { get; }
    private static RuleGroupResponseUnmarshaller();
    private sealed virtual override RuleGroupResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RuleGroupResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleGroupResponse Unmarshall(JsonUnmarshallerContext context);
    public static RuleGroupResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleGroupUnmarshaller : object {
    private static RuleGroupUnmarshaller _instance;
    public static RuleGroupUnmarshaller Instance { get; }
    private static RuleGroupUnmarshaller();
    private sealed virtual override RuleGroup Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RuleGroup,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleGroup Unmarshall(JsonUnmarshallerContext context);
    public static RuleGroupUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleOptionMarshaller : object {
    public static RuleOptionMarshaller Instance;
    private static RuleOptionMarshaller();
    public sealed virtual void Marshall(RuleOption requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleOptionUnmarshaller : object {
    private static RuleOptionUnmarshaller _instance;
    public static RuleOptionUnmarshaller Instance { get; }
    private static RuleOptionUnmarshaller();
    private sealed virtual override RuleOption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RuleOption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleOption Unmarshall(JsonUnmarshallerContext context);
    public static RuleOptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RulesSourceListMarshaller : object {
    public static RulesSourceListMarshaller Instance;
    private static RulesSourceListMarshaller();
    public sealed virtual void Marshall(RulesSourceList requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RulesSourceListUnmarshaller : object {
    private static RulesSourceListUnmarshaller _instance;
    public static RulesSourceListUnmarshaller Instance { get; }
    private static RulesSourceListUnmarshaller();
    private sealed virtual override RulesSourceList Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RulesSourceList,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RulesSourceList Unmarshall(JsonUnmarshallerContext context);
    public static RulesSourceListUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RulesSourceMarshaller : object {
    public static RulesSourceMarshaller Instance;
    private static RulesSourceMarshaller();
    public sealed virtual void Marshall(RulesSource requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RulesSourceUnmarshaller : object {
    private static RulesSourceUnmarshaller _instance;
    public static RulesSourceUnmarshaller Instance { get; }
    private static RulesSourceUnmarshaller();
    private sealed virtual override RulesSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RulesSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RulesSource Unmarshall(JsonUnmarshallerContext context);
    public static RulesSourceUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleVariablesMarshaller : object {
    public static RuleVariablesMarshaller Instance;
    private static RuleVariablesMarshaller();
    public sealed virtual void Marshall(RuleVariables requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.RuleVariablesUnmarshaller : object {
    private static RuleVariablesUnmarshaller _instance;
    public static RuleVariablesUnmarshaller Instance { get; }
    private static RuleVariablesUnmarshaller();
    private sealed virtual override RuleVariables Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.RuleVariables,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleVariables Unmarshall(JsonUnmarshallerContext context);
    public static RuleVariablesUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ServerCertificateConfigurationMarshaller : object {
    public static ServerCertificateConfigurationMarshaller Instance;
    private static ServerCertificateConfigurationMarshaller();
    public sealed virtual void Marshall(ServerCertificateConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ServerCertificateConfigurationUnmarshaller : object {
    private static ServerCertificateConfigurationUnmarshaller _instance;
    public static ServerCertificateConfigurationUnmarshaller Instance { get; }
    private static ServerCertificateConfigurationUnmarshaller();
    private sealed virtual override ServerCertificateConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.ServerCertificateConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServerCertificateConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ServerCertificateConfigurationUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ServerCertificateMarshaller : object {
    public static ServerCertificateMarshaller Instance;
    private static ServerCertificateMarshaller();
    public sealed virtual void Marshall(ServerCertificate requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ServerCertificateScopeMarshaller : object {
    public static ServerCertificateScopeMarshaller Instance;
    private static ServerCertificateScopeMarshaller();
    public sealed virtual void Marshall(ServerCertificateScope requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ServerCertificateScopeUnmarshaller : object {
    private static ServerCertificateScopeUnmarshaller _instance;
    public static ServerCertificateScopeUnmarshaller Instance { get; }
    private static ServerCertificateScopeUnmarshaller();
    private sealed virtual override ServerCertificateScope Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.ServerCertificateScope,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServerCertificateScope Unmarshall(JsonUnmarshallerContext context);
    public static ServerCertificateScopeUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ServerCertificateUnmarshaller : object {
    private static ServerCertificateUnmarshaller _instance;
    public static ServerCertificateUnmarshaller Instance { get; }
    private static ServerCertificateUnmarshaller();
    private sealed virtual override ServerCertificate Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.ServerCertificate,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServerCertificate Unmarshall(JsonUnmarshallerContext context);
    public static ServerCertificateUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.SourceMetadataMarshaller : object {
    public static SourceMetadataMarshaller Instance;
    private static SourceMetadataMarshaller();
    public sealed virtual void Marshall(SourceMetadata requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.SourceMetadataUnmarshaller : object {
    private static SourceMetadataUnmarshaller _instance;
    public static SourceMetadataUnmarshaller Instance { get; }
    private static SourceMetadataUnmarshaller();
    private sealed virtual override SourceMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.SourceMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceMetadata Unmarshall(JsonUnmarshallerContext context);
    public static SourceMetadataUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulEngineOptionsMarshaller : object {
    public static StatefulEngineOptionsMarshaller Instance;
    private static StatefulEngineOptionsMarshaller();
    public sealed virtual void Marshall(StatefulEngineOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulEngineOptionsUnmarshaller : object {
    private static StatefulEngineOptionsUnmarshaller _instance;
    public static StatefulEngineOptionsUnmarshaller Instance { get; }
    private static StatefulEngineOptionsUnmarshaller();
    private sealed virtual override StatefulEngineOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatefulEngineOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatefulEngineOptions Unmarshall(JsonUnmarshallerContext context);
    public static StatefulEngineOptionsUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleGroupOverrideMarshaller : object {
    public static StatefulRuleGroupOverrideMarshaller Instance;
    private static StatefulRuleGroupOverrideMarshaller();
    public sealed virtual void Marshall(StatefulRuleGroupOverride requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleGroupOverrideUnmarshaller : object {
    private static StatefulRuleGroupOverrideUnmarshaller _instance;
    public static StatefulRuleGroupOverrideUnmarshaller Instance { get; }
    private static StatefulRuleGroupOverrideUnmarshaller();
    private sealed virtual override StatefulRuleGroupOverride Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatefulRuleGroupOverride,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatefulRuleGroupOverride Unmarshall(JsonUnmarshallerContext context);
    public static StatefulRuleGroupOverrideUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleGroupReferenceMarshaller : object {
    public static StatefulRuleGroupReferenceMarshaller Instance;
    private static StatefulRuleGroupReferenceMarshaller();
    public sealed virtual void Marshall(StatefulRuleGroupReference requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleGroupReferenceUnmarshaller : object {
    private static StatefulRuleGroupReferenceUnmarshaller _instance;
    public static StatefulRuleGroupReferenceUnmarshaller Instance { get; }
    private static StatefulRuleGroupReferenceUnmarshaller();
    private sealed virtual override StatefulRuleGroupReference Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatefulRuleGroupReference,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatefulRuleGroupReference Unmarshall(JsonUnmarshallerContext context);
    public static StatefulRuleGroupReferenceUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleMarshaller : object {
    public static StatefulRuleMarshaller Instance;
    private static StatefulRuleMarshaller();
    public sealed virtual void Marshall(StatefulRule requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleOptionsMarshaller : object {
    public static StatefulRuleOptionsMarshaller Instance;
    private static StatefulRuleOptionsMarshaller();
    public sealed virtual void Marshall(StatefulRuleOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleOptionsUnmarshaller : object {
    private static StatefulRuleOptionsUnmarshaller _instance;
    public static StatefulRuleOptionsUnmarshaller Instance { get; }
    private static StatefulRuleOptionsUnmarshaller();
    private sealed virtual override StatefulRuleOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatefulRuleOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatefulRuleOptions Unmarshall(JsonUnmarshallerContext context);
    public static StatefulRuleOptionsUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatefulRuleUnmarshaller : object {
    private static StatefulRuleUnmarshaller _instance;
    public static StatefulRuleUnmarshaller Instance { get; }
    private static StatefulRuleUnmarshaller();
    private sealed virtual override StatefulRule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatefulRule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatefulRule Unmarshall(JsonUnmarshallerContext context);
    public static StatefulRuleUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatelessRuleGroupReferenceMarshaller : object {
    public static StatelessRuleGroupReferenceMarshaller Instance;
    private static StatelessRuleGroupReferenceMarshaller();
    public sealed virtual void Marshall(StatelessRuleGroupReference requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatelessRuleGroupReferenceUnmarshaller : object {
    private static StatelessRuleGroupReferenceUnmarshaller _instance;
    public static StatelessRuleGroupReferenceUnmarshaller Instance { get; }
    private static StatelessRuleGroupReferenceUnmarshaller();
    private sealed virtual override StatelessRuleGroupReference Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatelessRuleGroupReference,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatelessRuleGroupReference Unmarshall(JsonUnmarshallerContext context);
    public static StatelessRuleGroupReferenceUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatelessRuleMarshaller : object {
    public static StatelessRuleMarshaller Instance;
    private static StatelessRuleMarshaller();
    public sealed virtual void Marshall(StatelessRule requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatelessRulesAndCustomActionsMarshaller : object {
    public static StatelessRulesAndCustomActionsMarshaller Instance;
    private static StatelessRulesAndCustomActionsMarshaller();
    public sealed virtual void Marshall(StatelessRulesAndCustomActions requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatelessRulesAndCustomActionsUnmarshaller : object {
    private static StatelessRulesAndCustomActionsUnmarshaller _instance;
    public static StatelessRulesAndCustomActionsUnmarshaller Instance { get; }
    private static StatelessRulesAndCustomActionsUnmarshaller();
    private sealed virtual override StatelessRulesAndCustomActions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatelessRulesAndCustomActions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatelessRulesAndCustomActions Unmarshall(JsonUnmarshallerContext context);
    public static StatelessRulesAndCustomActionsUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.StatelessRuleUnmarshaller : object {
    private static StatelessRuleUnmarshaller _instance;
    public static StatelessRuleUnmarshaller Instance { get; }
    private static StatelessRuleUnmarshaller();
    private sealed virtual override StatelessRule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.StatelessRule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatelessRule Unmarshall(JsonUnmarshallerContext context);
    public static StatelessRuleUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.SubnetMappingMarshaller : object {
    public static SubnetMappingMarshaller Instance;
    private static SubnetMappingMarshaller();
    public sealed virtual void Marshall(SubnetMapping requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.SubnetMappingUnmarshaller : object {
    private static SubnetMappingUnmarshaller _instance;
    public static SubnetMappingUnmarshaller Instance { get; }
    private static SubnetMappingUnmarshaller();
    private sealed virtual override SubnetMapping Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.SubnetMapping,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubnetMapping Unmarshall(JsonUnmarshallerContext context);
    public static SubnetMappingUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.SyncStateUnmarshaller : object {
    private static SyncStateUnmarshaller _instance;
    public static SyncStateUnmarshaller Instance { get; }
    private static SyncStateUnmarshaller();
    private sealed virtual override SyncState Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.SyncState,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SyncState Unmarshall(JsonUnmarshallerContext context);
    public static SyncStateUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TCPFlagFieldMarshaller : object {
    public static TCPFlagFieldMarshaller Instance;
    private static TCPFlagFieldMarshaller();
    public sealed virtual void Marshall(TCPFlagField requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TCPFlagFieldUnmarshaller : object {
    private static TCPFlagFieldUnmarshaller _instance;
    public static TCPFlagFieldUnmarshaller Instance { get; }
    private static TCPFlagFieldUnmarshaller();
    private sealed virtual override TCPFlagField Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.TCPFlagField,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TCPFlagField Unmarshall(JsonUnmarshallerContext context);
    public static TCPFlagFieldUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller : object {
    private static ThrottlingExceptionUnmarshaller _instance;
    public static ThrottlingExceptionUnmarshaller Instance { get; }
    private static ThrottlingExceptionUnmarshaller();
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TlsCertificateDataUnmarshaller : object {
    private static TlsCertificateDataUnmarshaller _instance;
    public static TlsCertificateDataUnmarshaller Instance { get; }
    private static TlsCertificateDataUnmarshaller();
    private sealed virtual override TlsCertificateData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.TlsCertificateData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TlsCertificateData Unmarshall(JsonUnmarshallerContext context);
    public static TlsCertificateDataUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TLSInspectionConfigurationMarshaller : object {
    public static TLSInspectionConfigurationMarshaller Instance;
    private static TLSInspectionConfigurationMarshaller();
    public sealed virtual void Marshall(TLSInspectionConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TLSInspectionConfigurationMetadataUnmarshaller : object {
    private static TLSInspectionConfigurationMetadataUnmarshaller _instance;
    public static TLSInspectionConfigurationMetadataUnmarshaller Instance { get; }
    private static TLSInspectionConfigurationMetadataUnmarshaller();
    private sealed virtual override TLSInspectionConfigurationMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.TLSInspectionConfigurationMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TLSInspectionConfigurationMetadata Unmarshall(JsonUnmarshallerContext context);
    public static TLSInspectionConfigurationMetadataUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TLSInspectionConfigurationResponseUnmarshaller : object {
    private static TLSInspectionConfigurationResponseUnmarshaller _instance;
    public static TLSInspectionConfigurationResponseUnmarshaller Instance { get; }
    private static TLSInspectionConfigurationResponseUnmarshaller();
    private sealed virtual override TLSInspectionConfigurationResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.TLSInspectionConfigurationResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TLSInspectionConfigurationResponse Unmarshall(JsonUnmarshallerContext context);
    public static TLSInspectionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.TLSInspectionConfigurationUnmarshaller : object {
    private static TLSInspectionConfigurationUnmarshaller _instance;
    public static TLSInspectionConfigurationUnmarshaller Instance { get; }
    private static TLSInspectionConfigurationUnmarshaller();
    private sealed virtual override TLSInspectionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.NetworkFirewall.Model.TLSInspectionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TLSInspectionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static TLSInspectionConfigurationUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller : object {
    private static UnsupportedOperationExceptionUnmarshaller _instance;
    public static UnsupportedOperationExceptionUnmarshaller Instance { get; }
    private static UnsupportedOperationExceptionUnmarshaller();
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallDeleteProtectionRequestMarshaller : object {
    private static UpdateFirewallDeleteProtectionRequestMarshaller _instance;
    public static UpdateFirewallDeleteProtectionRequestMarshaller Instance { get; }
    private static UpdateFirewallDeleteProtectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFirewallDeleteProtectionRequest publicRequest);
    internal static UpdateFirewallDeleteProtectionRequestMarshaller GetInstance();
    public static UpdateFirewallDeleteProtectionRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallDeleteProtectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFirewallDeleteProtectionResponseUnmarshaller _instance;
    public static UpdateFirewallDeleteProtectionResponseUnmarshaller Instance { get; }
    private static UpdateFirewallDeleteProtectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFirewallDeleteProtectionResponseUnmarshaller GetInstance();
    public static UpdateFirewallDeleteProtectionResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallDescriptionRequestMarshaller : object {
    private static UpdateFirewallDescriptionRequestMarshaller _instance;
    public static UpdateFirewallDescriptionRequestMarshaller Instance { get; }
    private static UpdateFirewallDescriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFirewallDescriptionRequest publicRequest);
    internal static UpdateFirewallDescriptionRequestMarshaller GetInstance();
    public static UpdateFirewallDescriptionRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallDescriptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFirewallDescriptionResponseUnmarshaller _instance;
    public static UpdateFirewallDescriptionResponseUnmarshaller Instance { get; }
    private static UpdateFirewallDescriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFirewallDescriptionResponseUnmarshaller GetInstance();
    public static UpdateFirewallDescriptionResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallEncryptionConfigurationRequestMarshaller : object {
    private static UpdateFirewallEncryptionConfigurationRequestMarshaller _instance;
    public static UpdateFirewallEncryptionConfigurationRequestMarshaller Instance { get; }
    private static UpdateFirewallEncryptionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFirewallEncryptionConfigurationRequest publicRequest);
    internal static UpdateFirewallEncryptionConfigurationRequestMarshaller GetInstance();
    public static UpdateFirewallEncryptionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallEncryptionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFirewallEncryptionConfigurationResponseUnmarshaller _instance;
    public static UpdateFirewallEncryptionConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateFirewallEncryptionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFirewallEncryptionConfigurationResponseUnmarshaller GetInstance();
    public static UpdateFirewallEncryptionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallPolicyChangeProtectionRequestMarshaller : object {
    private static UpdateFirewallPolicyChangeProtectionRequestMarshaller _instance;
    public static UpdateFirewallPolicyChangeProtectionRequestMarshaller Instance { get; }
    private static UpdateFirewallPolicyChangeProtectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFirewallPolicyChangeProtectionRequest publicRequest);
    internal static UpdateFirewallPolicyChangeProtectionRequestMarshaller GetInstance();
    public static UpdateFirewallPolicyChangeProtectionRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallPolicyChangeProtectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFirewallPolicyChangeProtectionResponseUnmarshaller _instance;
    public static UpdateFirewallPolicyChangeProtectionResponseUnmarshaller Instance { get; }
    private static UpdateFirewallPolicyChangeProtectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFirewallPolicyChangeProtectionResponseUnmarshaller GetInstance();
    public static UpdateFirewallPolicyChangeProtectionResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallPolicyRequestMarshaller : object {
    private static UpdateFirewallPolicyRequestMarshaller _instance;
    public static UpdateFirewallPolicyRequestMarshaller Instance { get; }
    private static UpdateFirewallPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFirewallPolicyRequest publicRequest);
    internal static UpdateFirewallPolicyRequestMarshaller GetInstance();
    public static UpdateFirewallPolicyRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateFirewallPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFirewallPolicyResponseUnmarshaller _instance;
    public static UpdateFirewallPolicyResponseUnmarshaller Instance { get; }
    private static UpdateFirewallPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFirewallPolicyResponseUnmarshaller GetInstance();
    public static UpdateFirewallPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationRequestMarshaller : object {
    private static UpdateLoggingConfigurationRequestMarshaller _instance;
    public static UpdateLoggingConfigurationRequestMarshaller Instance { get; }
    private static UpdateLoggingConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateLoggingConfigurationRequest publicRequest);
    internal static UpdateLoggingConfigurationRequestMarshaller GetInstance();
    public static UpdateLoggingConfigurationRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateLoggingConfigurationResponseUnmarshaller _instance;
    public static UpdateLoggingConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateLoggingConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateLoggingConfigurationResponseUnmarshaller GetInstance();
    public static UpdateLoggingConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateRuleGroupRequestMarshaller : object {
    private static UpdateRuleGroupRequestMarshaller _instance;
    public static UpdateRuleGroupRequestMarshaller Instance { get; }
    private static UpdateRuleGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateRuleGroupRequest publicRequest);
    internal static UpdateRuleGroupRequestMarshaller GetInstance();
    public static UpdateRuleGroupRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateRuleGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateRuleGroupResponseUnmarshaller _instance;
    public static UpdateRuleGroupResponseUnmarshaller Instance { get; }
    private static UpdateRuleGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateRuleGroupResponseUnmarshaller GetInstance();
    public static UpdateRuleGroupResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateSubnetChangeProtectionRequestMarshaller : object {
    private static UpdateSubnetChangeProtectionRequestMarshaller _instance;
    public static UpdateSubnetChangeProtectionRequestMarshaller Instance { get; }
    private static UpdateSubnetChangeProtectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSubnetChangeProtectionRequest publicRequest);
    internal static UpdateSubnetChangeProtectionRequestMarshaller GetInstance();
    public static UpdateSubnetChangeProtectionRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateSubnetChangeProtectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSubnetChangeProtectionResponseUnmarshaller _instance;
    public static UpdateSubnetChangeProtectionResponseUnmarshaller Instance { get; }
    private static UpdateSubnetChangeProtectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSubnetChangeProtectionResponseUnmarshaller GetInstance();
    public static UpdateSubnetChangeProtectionResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateTLSInspectionConfigurationRequestMarshaller : object {
    private static UpdateTLSInspectionConfigurationRequestMarshaller _instance;
    public static UpdateTLSInspectionConfigurationRequestMarshaller Instance { get; }
    private static UpdateTLSInspectionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTLSInspectionConfigurationRequest publicRequest);
    internal static UpdateTLSInspectionConfigurationRequestMarshaller GetInstance();
    public static UpdateTLSInspectionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.Internal.MarshallTransformations.UpdateTLSInspectionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTLSInspectionConfigurationResponseUnmarshaller _instance;
    public static UpdateTLSInspectionConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateTLSInspectionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTLSInspectionConfigurationResponseUnmarshaller GetInstance();
    public static UpdateTLSInspectionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.NetworkFirewall.Model.InternalServerErrorException : AmazonNetworkFirewallException {
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.InvalidOperationException : AmazonNetworkFirewallException {
    public InvalidOperationException(string message);
    public InvalidOperationException(string message, Exception innerException);
    public InvalidOperationException(Exception innerException);
    public InvalidOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.InvalidRequestException : AmazonNetworkFirewallException {
    public InvalidRequestException(string message);
    public InvalidRequestException(string message, Exception innerException);
    public InvalidRequestException(Exception innerException);
    public InvalidRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.InvalidResourcePolicyException : AmazonNetworkFirewallException {
    public InvalidResourcePolicyException(string message);
    public InvalidResourcePolicyException(string message, Exception innerException);
    public InvalidResourcePolicyException(Exception innerException);
    public InvalidResourcePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidResourcePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.InvalidTokenException : AmazonNetworkFirewallException {
    public InvalidTokenException(string message);
    public InvalidTokenException(string message, Exception innerException);
    public InvalidTokenException(Exception innerException);
    public InvalidTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.IPSet : object {
    private List`1<string> _definition;
    [AWSPropertyAttribute]
public List`1<string> Definition { get; public set; }
    public List`1<string> get_Definition();
    public void set_Definition(List`1<string> value);
    internal bool IsSetDefinition();
}
public class Amazon.NetworkFirewall.Model.IPSetMetadata : object {
    private Nullable`1<int> _resolvedCIDRCount;
    [AWSPropertyAttribute]
public Nullable`1<int> ResolvedCIDRCount { get; public set; }
    public Nullable`1<int> get_ResolvedCIDRCount();
    public void set_ResolvedCIDRCount(Nullable`1<int> value);
    internal bool IsSetResolvedCIDRCount();
}
public class Amazon.NetworkFirewall.Model.IPSetReference : object {
    private string _referenceArn;
    [AWSPropertyAttribute]
public string ReferenceArn { get; public set; }
    public string get_ReferenceArn();
    public void set_ReferenceArn(string value);
    internal bool IsSetReferenceArn();
}
public class Amazon.NetworkFirewall.Model.LimitExceededException : AmazonNetworkFirewallException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
internal class Amazon.NetworkFirewall.Model.ListFirewallPoliciesPaginator : object {
    private IAmazonNetworkFirewall _client;
    private ListFirewallPoliciesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFirewallPoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<FirewallPolicyMetadata> FirewallPolicies { get; }
    internal ListFirewallPoliciesPaginator(IAmazonNetworkFirewall client, ListFirewallPoliciesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFirewallPoliciesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FirewallPolicyMetadata> get_FirewallPolicies();
    [AsyncIteratorStateMachineAttribute("Amazon.NetworkFirewall.Model.ListFirewallPoliciesPaginator/<Amazon-Runtime-IPaginator<Amazon-NetworkFirewall-Model-ListFirewallPoliciesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFirewallPoliciesResponse> Amazon.Runtime.IPaginator<Amazon.NetworkFirewall.Model.ListFirewallPoliciesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.NetworkFirewall.Model.ListFirewallPoliciesRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.NetworkFirewall.Model.ListFirewallPoliciesResponse : AmazonWebServiceResponse {
    private List`1<FirewallPolicyMetadata> _firewallPolicies;
    private string _nextToken;
    public List`1<FirewallPolicyMetadata> FirewallPolicies { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<FirewallPolicyMetadata> get_FirewallPolicies();
    public void set_FirewallPolicies(List`1<FirewallPolicyMetadata> value);
    internal bool IsSetFirewallPolicies();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.NetworkFirewall.Model.ListFirewallsPaginator : object {
    private IAmazonNetworkFirewall _client;
    private ListFirewallsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFirewallsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FirewallMetadata> Firewalls { get; }
    internal ListFirewallsPaginator(IAmazonNetworkFirewall client, ListFirewallsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFirewallsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FirewallMetadata> get_Firewalls();
    [AsyncIteratorStateMachineAttribute("Amazon.NetworkFirewall.Model.ListFirewallsPaginator/<Amazon-Runtime-IPaginator<Amazon-NetworkFirewall-Model-ListFirewallsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFirewallsResponse> Amazon.Runtime.IPaginator<Amazon.NetworkFirewall.Model.ListFirewallsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.NetworkFirewall.Model.ListFirewallsRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _vpcIds;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<string> VpcIds { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VpcIds();
    public void set_VpcIds(List`1<string> value);
    internal bool IsSetVpcIds();
}
public class Amazon.NetworkFirewall.Model.ListFirewallsResponse : AmazonWebServiceResponse {
    private List`1<FirewallMetadata> _firewalls;
    private string _nextToken;
    public List`1<FirewallMetadata> Firewalls { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<FirewallMetadata> get_Firewalls();
    public void set_Firewalls(List`1<FirewallMetadata> value);
    internal bool IsSetFirewalls();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.NetworkFirewall.Model.ListRuleGroupsPaginator : object {
    private IAmazonNetworkFirewall _client;
    private ListRuleGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListRuleGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<RuleGroupMetadata> RuleGroups { get; }
    internal ListRuleGroupsPaginator(IAmazonNetworkFirewall client, ListRuleGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListRuleGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<RuleGroupMetadata> get_RuleGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.NetworkFirewall.Model.ListRuleGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-NetworkFirewall-Model-ListRuleGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListRuleGroupsResponse> Amazon.Runtime.IPaginator<Amazon.NetworkFirewall.Model.ListRuleGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.NetworkFirewall.Model.ListRuleGroupsRequest : AmazonNetworkFirewallRequest {
    private ResourceManagedType _managedType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private ResourceManagedStatus _scope;
    private RuleGroupType _type;
    public ResourceManagedType ManagedType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public ResourceManagedStatus Scope { get; public set; }
    public RuleGroupType Type { get; public set; }
    public ResourceManagedType get_ManagedType();
    public void set_ManagedType(ResourceManagedType value);
    internal bool IsSetManagedType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ResourceManagedStatus get_Scope();
    public void set_Scope(ResourceManagedStatus value);
    internal bool IsSetScope();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.ListRuleGroupsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<RuleGroupMetadata> _ruleGroups;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<RuleGroupMetadata> RuleGroups { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<RuleGroupMetadata> get_RuleGroups();
    public void set_RuleGroups(List`1<RuleGroupMetadata> value);
    internal bool IsSetRuleGroups();
}
internal class Amazon.NetworkFirewall.Model.ListTagsForResourcePaginator : object {
    private IAmazonNetworkFirewall _client;
    private ListTagsForResourceRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    internal ListTagsForResourcePaginator(IAmazonNetworkFirewall client, ListTagsForResourceRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Tag> get_Tags();
    [AsyncIteratorStateMachineAttribute("Amazon.NetworkFirewall.Model.ListTagsForResourcePaginator/<Amazon-Runtime-IPaginator<Amazon-NetworkFirewall-Model-ListTagsForResourceResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTagsForResourceResponse> Amazon.Runtime.IPaginator<Amazon.NetworkFirewall.Model.ListTagsForResourceResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.NetworkFirewall.Model.ListTagsForResourceRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _resourceArn;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.NetworkFirewall.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
internal class Amazon.NetworkFirewall.Model.ListTLSInspectionConfigurationsPaginator : object {
    private IAmazonNetworkFirewall _client;
    private ListTLSInspectionConfigurationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTLSInspectionConfigurationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TLSInspectionConfigurationMetadata> TLSInspectionConfigurations { get; }
    internal ListTLSInspectionConfigurationsPaginator(IAmazonNetworkFirewall client, ListTLSInspectionConfigurationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTLSInspectionConfigurationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TLSInspectionConfigurationMetadata> get_TLSInspectionConfigurations();
    [AsyncIteratorStateMachineAttribute("Amazon.NetworkFirewall.Model.ListTLSInspectionConfigurationsPaginator/<Amazon-Runtime-IPaginator<Amazon-NetworkFirewall-Model-ListTLSInspectionConfigurationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTLSInspectionConfigurationsResponse> Amazon.Runtime.IPaginator<Amazon.NetworkFirewall.Model.ListTLSInspectionConfigurationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.NetworkFirewall.Model.ListTLSInspectionConfigurationsRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.NetworkFirewall.Model.ListTLSInspectionConfigurationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TLSInspectionConfigurationMetadata> _tlsInspectionConfigurations;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<TLSInspectionConfigurationMetadata> TLSInspectionConfigurations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TLSInspectionConfigurationMetadata> get_TLSInspectionConfigurations();
    public void set_TLSInspectionConfigurations(List`1<TLSInspectionConfigurationMetadata> value);
    internal bool IsSetTLSInspectionConfigurations();
}
public class Amazon.NetworkFirewall.Model.LogDestinationConfig : object {
    private Dictionary`2<string, string> _logDestination;
    private LogDestinationType _logDestinationType;
    private LogType _logType;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> LogDestination { get; public set; }
    [AWSPropertyAttribute]
public LogDestinationType LogDestinationType { get; public set; }
    [AWSPropertyAttribute]
public LogType LogType { get; public set; }
    public Dictionary`2<string, string> get_LogDestination();
    public void set_LogDestination(Dictionary`2<string, string> value);
    internal bool IsSetLogDestination();
    public LogDestinationType get_LogDestinationType();
    public void set_LogDestinationType(LogDestinationType value);
    internal bool IsSetLogDestinationType();
    public LogType get_LogType();
    public void set_LogType(LogType value);
    internal bool IsSetLogType();
}
public class Amazon.NetworkFirewall.Model.LogDestinationPermissionException : AmazonNetworkFirewallException {
    public LogDestinationPermissionException(string message);
    public LogDestinationPermissionException(string message, Exception innerException);
    public LogDestinationPermissionException(Exception innerException);
    public LogDestinationPermissionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LogDestinationPermissionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.LoggingConfiguration : object {
    private List`1<LogDestinationConfig> _logDestinationConfigs;
    [AWSPropertyAttribute]
public List`1<LogDestinationConfig> LogDestinationConfigs { get; public set; }
    public List`1<LogDestinationConfig> get_LogDestinationConfigs();
    public void set_LogDestinationConfigs(List`1<LogDestinationConfig> value);
    internal bool IsSetLogDestinationConfigs();
}
public class Amazon.NetworkFirewall.Model.MatchAttributes : object {
    private List`1<PortRange> _destinationPorts;
    private List`1<Address> _destinations;
    private List`1<int> _protocols;
    private List`1<PortRange> _sourcePorts;
    private List`1<Address> _sources;
    private List`1<TCPFlagField> _tcpFlags;
    public List`1<PortRange> DestinationPorts { get; public set; }
    public List`1<Address> Destinations { get; public set; }
    public List`1<int> Protocols { get; public set; }
    public List`1<PortRange> SourcePorts { get; public set; }
    public List`1<Address> Sources { get; public set; }
    public List`1<TCPFlagField> TCPFlags { get; public set; }
    public List`1<PortRange> get_DestinationPorts();
    public void set_DestinationPorts(List`1<PortRange> value);
    internal bool IsSetDestinationPorts();
    public List`1<Address> get_Destinations();
    public void set_Destinations(List`1<Address> value);
    internal bool IsSetDestinations();
    public List`1<int> get_Protocols();
    public void set_Protocols(List`1<int> value);
    internal bool IsSetProtocols();
    public List`1<PortRange> get_SourcePorts();
    public void set_SourcePorts(List`1<PortRange> value);
    internal bool IsSetSourcePorts();
    public List`1<Address> get_Sources();
    public void set_Sources(List`1<Address> value);
    internal bool IsSetSources();
    public List`1<TCPFlagField> get_TCPFlags();
    public void set_TCPFlags(List`1<TCPFlagField> value);
    internal bool IsSetTCPFlags();
}
public class Amazon.NetworkFirewall.Model.NetworkFirewallPaginatorFactory : object {
    private IAmazonNetworkFirewall client;
    internal NetworkFirewallPaginatorFactory(IAmazonNetworkFirewall client);
    public sealed virtual IListFirewallPoliciesPaginator ListFirewallPolicies(ListFirewallPoliciesRequest request);
    public sealed virtual IListFirewallsPaginator ListFirewalls(ListFirewallsRequest request);
    public sealed virtual IListRuleGroupsPaginator ListRuleGroups(ListRuleGroupsRequest request);
    public sealed virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
    public sealed virtual IListTLSInspectionConfigurationsPaginator ListTLSInspectionConfigurations(ListTLSInspectionConfigurationsRequest request);
}
public class Amazon.NetworkFirewall.Model.PerObjectStatus : object {
    private PerObjectSyncStatus _syncStatus;
    private string _updateToken;
    public PerObjectSyncStatus SyncStatus { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public PerObjectSyncStatus get_SyncStatus();
    public void set_SyncStatus(PerObjectSyncStatus value);
    internal bool IsSetSyncStatus();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.PolicyVariables : object {
    private Dictionary`2<string, IPSet> _ruleVariables;
    public Dictionary`2<string, IPSet> RuleVariables { get; public set; }
    public Dictionary`2<string, IPSet> get_RuleVariables();
    public void set_RuleVariables(Dictionary`2<string, IPSet> value);
    internal bool IsSetRuleVariables();
}
public class Amazon.NetworkFirewall.Model.PortRange : object {
    private Nullable`1<int> _fromPort;
    private Nullable`1<int> _toPort;
    [AWSPropertyAttribute]
public Nullable`1<int> FromPort { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ToPort { get; public set; }
    public Nullable`1<int> get_FromPort();
    public void set_FromPort(Nullable`1<int> value);
    internal bool IsSetFromPort();
    public Nullable`1<int> get_ToPort();
    public void set_ToPort(Nullable`1<int> value);
    internal bool IsSetToPort();
}
public class Amazon.NetworkFirewall.Model.PortSet : object {
    private List`1<string> _definition;
    public List`1<string> Definition { get; public set; }
    public List`1<string> get_Definition();
    public void set_Definition(List`1<string> value);
    internal bool IsSetDefinition();
}
public class Amazon.NetworkFirewall.Model.PublishMetricAction : object {
    private List`1<Dimension> _dimensions;
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
}
public class Amazon.NetworkFirewall.Model.PutResourcePolicyRequest : AmazonNetworkFirewallRequest {
    private string _policy;
    private string _resourceArn;
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.NetworkFirewall.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.NetworkFirewall.Model.ReferenceSets : object {
    private Dictionary`2<string, IPSetReference> _ipSetReferences;
    public Dictionary`2<string, IPSetReference> IPSetReferences { get; public set; }
    public Dictionary`2<string, IPSetReference> get_IPSetReferences();
    public void set_IPSetReferences(Dictionary`2<string, IPSetReference> value);
    internal bool IsSetIPSetReferences();
}
public class Amazon.NetworkFirewall.Model.ResourceNotFoundException : AmazonNetworkFirewallException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.ResourceOwnerCheckException : AmazonNetworkFirewallException {
    public ResourceOwnerCheckException(string message);
    public ResourceOwnerCheckException(string message, Exception innerException);
    public ResourceOwnerCheckException(Exception innerException);
    public ResourceOwnerCheckException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceOwnerCheckException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.RuleDefinition : object {
    private List`1<string> _actions;
    private MatchAttributes _matchAttributes;
    [AWSPropertyAttribute]
public List`1<string> Actions { get; public set; }
    [AWSPropertyAttribute]
public MatchAttributes MatchAttributes { get; public set; }
    public List`1<string> get_Actions();
    public void set_Actions(List`1<string> value);
    internal bool IsSetActions();
    public MatchAttributes get_MatchAttributes();
    public void set_MatchAttributes(MatchAttributes value);
    internal bool IsSetMatchAttributes();
}
public class Amazon.NetworkFirewall.Model.RuleGroup : object {
    private ReferenceSets _referenceSets;
    private RulesSource _rulesSource;
    private RuleVariables _ruleVariables;
    private StatefulRuleOptions _statefulRuleOptions;
    public ReferenceSets ReferenceSets { get; public set; }
    [AWSPropertyAttribute]
public RulesSource RulesSource { get; public set; }
    public RuleVariables RuleVariables { get; public set; }
    public StatefulRuleOptions StatefulRuleOptions { get; public set; }
    public ReferenceSets get_ReferenceSets();
    public void set_ReferenceSets(ReferenceSets value);
    internal bool IsSetReferenceSets();
    public RulesSource get_RulesSource();
    public void set_RulesSource(RulesSource value);
    internal bool IsSetRulesSource();
    public RuleVariables get_RuleVariables();
    public void set_RuleVariables(RuleVariables value);
    internal bool IsSetRuleVariables();
    public StatefulRuleOptions get_StatefulRuleOptions();
    public void set_StatefulRuleOptions(StatefulRuleOptions value);
    internal bool IsSetStatefulRuleOptions();
}
public class Amazon.NetworkFirewall.Model.RuleGroupMetadata : object {
    private string _arn;
    private string _name;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.NetworkFirewall.Model.RuleGroupResponse : object {
    private List`1<AnalysisResult> _analysisResults;
    private Nullable`1<int> _capacity;
    private Nullable`1<int> _consumedCapacity;
    private string _description;
    private EncryptionConfiguration _encryptionConfiguration;
    private Nullable`1<DateTime> _lastModifiedTime;
    private Nullable`1<int> _numberOfAssociations;
    private string _ruleGroupArn;
    private string _ruleGroupId;
    private string _ruleGroupName;
    private ResourceStatus _ruleGroupStatus;
    private string _snsTopic;
    private SourceMetadata _sourceMetadata;
    private List`1<Tag> _tags;
    private RuleGroupType _type;
    public List`1<AnalysisResult> AnalysisResults { get; public set; }
    public Nullable`1<int> Capacity { get; public set; }
    public Nullable`1<int> ConsumedCapacity { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public Nullable`1<int> NumberOfAssociations { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupId { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupName { get; public set; }
    public ResourceStatus RuleGroupStatus { get; public set; }
    [AWSPropertyAttribute]
public string SnsTopic { get; public set; }
    public SourceMetadata SourceMetadata { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public RuleGroupType Type { get; public set; }
    public List`1<AnalysisResult> get_AnalysisResults();
    public void set_AnalysisResults(List`1<AnalysisResult> value);
    internal bool IsSetAnalysisResults();
    public Nullable`1<int> get_Capacity();
    public void set_Capacity(Nullable`1<int> value);
    internal bool IsSetCapacity();
    public Nullable`1<int> get_ConsumedCapacity();
    public void set_ConsumedCapacity(Nullable`1<int> value);
    internal bool IsSetConsumedCapacity();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public Nullable`1<int> get_NumberOfAssociations();
    public void set_NumberOfAssociations(Nullable`1<int> value);
    internal bool IsSetNumberOfAssociations();
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public string get_RuleGroupId();
    public void set_RuleGroupId(string value);
    internal bool IsSetRuleGroupId();
    public string get_RuleGroupName();
    public void set_RuleGroupName(string value);
    internal bool IsSetRuleGroupName();
    public ResourceStatus get_RuleGroupStatus();
    public void set_RuleGroupStatus(ResourceStatus value);
    internal bool IsSetRuleGroupStatus();
    public string get_SnsTopic();
    public void set_SnsTopic(string value);
    internal bool IsSetSnsTopic();
    public SourceMetadata get_SourceMetadata();
    public void set_SourceMetadata(SourceMetadata value);
    internal bool IsSetSourceMetadata();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
}
public class Amazon.NetworkFirewall.Model.RuleOption : object {
    private string _keyword;
    private List`1<string> _settings;
    [AWSPropertyAttribute]
public string Keyword { get; public set; }
    public List`1<string> Settings { get; public set; }
    public string get_Keyword();
    public void set_Keyword(string value);
    internal bool IsSetKeyword();
    public List`1<string> get_Settings();
    public void set_Settings(List`1<string> value);
    internal bool IsSetSettings();
}
public class Amazon.NetworkFirewall.Model.RulesSource : object {
    private RulesSourceList _rulesSourceList;
    private string _rulesString;
    private List`1<StatefulRule> _statefulRules;
    private StatelessRulesAndCustomActions _statelessRulesAndCustomActions;
    public RulesSourceList RulesSourceList { get; public set; }
    [AWSPropertyAttribute]
public string RulesString { get; public set; }
    public List`1<StatefulRule> StatefulRules { get; public set; }
    public StatelessRulesAndCustomActions StatelessRulesAndCustomActions { get; public set; }
    public RulesSourceList get_RulesSourceList();
    public void set_RulesSourceList(RulesSourceList value);
    internal bool IsSetRulesSourceList();
    public string get_RulesString();
    public void set_RulesString(string value);
    internal bool IsSetRulesString();
    public List`1<StatefulRule> get_StatefulRules();
    public void set_StatefulRules(List`1<StatefulRule> value);
    internal bool IsSetStatefulRules();
    public StatelessRulesAndCustomActions get_StatelessRulesAndCustomActions();
    public void set_StatelessRulesAndCustomActions(StatelessRulesAndCustomActions value);
    internal bool IsSetStatelessRulesAndCustomActions();
}
public class Amazon.NetworkFirewall.Model.RulesSourceList : object {
    private GeneratedRulesType _generatedRulesType;
    private List`1<string> _targets;
    private List`1<string> _targetTypes;
    [AWSPropertyAttribute]
public GeneratedRulesType GeneratedRulesType { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Targets { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TargetTypes { get; public set; }
    public GeneratedRulesType get_GeneratedRulesType();
    public void set_GeneratedRulesType(GeneratedRulesType value);
    internal bool IsSetGeneratedRulesType();
    public List`1<string> get_Targets();
    public void set_Targets(List`1<string> value);
    internal bool IsSetTargets();
    public List`1<string> get_TargetTypes();
    public void set_TargetTypes(List`1<string> value);
    internal bool IsSetTargetTypes();
}
public class Amazon.NetworkFirewall.Model.RuleVariables : object {
    private Dictionary`2<string, IPSet> _ipSets;
    private Dictionary`2<string, PortSet> _portSets;
    public Dictionary`2<string, IPSet> IPSets { get; public set; }
    public Dictionary`2<string, PortSet> PortSets { get; public set; }
    public Dictionary`2<string, IPSet> get_IPSets();
    public void set_IPSets(Dictionary`2<string, IPSet> value);
    internal bool IsSetIPSets();
    public Dictionary`2<string, PortSet> get_PortSets();
    public void set_PortSets(Dictionary`2<string, PortSet> value);
    internal bool IsSetPortSets();
}
public class Amazon.NetworkFirewall.Model.ServerCertificate : object {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.NetworkFirewall.Model.ServerCertificateConfiguration : object {
    private string _certificateAuthorityArn;
    private CheckCertificateRevocationStatusActions _checkCertificateRevocationStatus;
    private List`1<ServerCertificateScope> _scopes;
    private List`1<ServerCertificate> _serverCertificates;
    [AWSPropertyAttribute]
public string CertificateAuthorityArn { get; public set; }
    public CheckCertificateRevocationStatusActions CheckCertificateRevocationStatus { get; public set; }
    public List`1<ServerCertificateScope> Scopes { get; public set; }
    public List`1<ServerCertificate> ServerCertificates { get; public set; }
    public string get_CertificateAuthorityArn();
    public void set_CertificateAuthorityArn(string value);
    internal bool IsSetCertificateAuthorityArn();
    public CheckCertificateRevocationStatusActions get_CheckCertificateRevocationStatus();
    public void set_CheckCertificateRevocationStatus(CheckCertificateRevocationStatusActions value);
    internal bool IsSetCheckCertificateRevocationStatus();
    public List`1<ServerCertificateScope> get_Scopes();
    public void set_Scopes(List`1<ServerCertificateScope> value);
    internal bool IsSetScopes();
    public List`1<ServerCertificate> get_ServerCertificates();
    public void set_ServerCertificates(List`1<ServerCertificate> value);
    internal bool IsSetServerCertificates();
}
public class Amazon.NetworkFirewall.Model.ServerCertificateScope : object {
    private List`1<PortRange> _destinationPorts;
    private List`1<Address> _destinations;
    private List`1<int> _protocols;
    private List`1<PortRange> _sourcePorts;
    private List`1<Address> _sources;
    public List`1<PortRange> DestinationPorts { get; public set; }
    public List`1<Address> Destinations { get; public set; }
    public List`1<int> Protocols { get; public set; }
    public List`1<PortRange> SourcePorts { get; public set; }
    public List`1<Address> Sources { get; public set; }
    public List`1<PortRange> get_DestinationPorts();
    public void set_DestinationPorts(List`1<PortRange> value);
    internal bool IsSetDestinationPorts();
    public List`1<Address> get_Destinations();
    public void set_Destinations(List`1<Address> value);
    internal bool IsSetDestinations();
    public List`1<int> get_Protocols();
    public void set_Protocols(List`1<int> value);
    internal bool IsSetProtocols();
    public List`1<PortRange> get_SourcePorts();
    public void set_SourcePorts(List`1<PortRange> value);
    internal bool IsSetSourcePorts();
    public List`1<Address> get_Sources();
    public void set_Sources(List`1<Address> value);
    internal bool IsSetSources();
}
public class Amazon.NetworkFirewall.Model.SourceMetadata : object {
    private string _sourceArn;
    private string _sourceUpdateToken;
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceUpdateToken { get; public set; }
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public string get_SourceUpdateToken();
    public void set_SourceUpdateToken(string value);
    internal bool IsSetSourceUpdateToken();
}
public class Amazon.NetworkFirewall.Model.StatefulEngineOptions : object {
    private RuleOrder _ruleOrder;
    private StreamExceptionPolicy _streamExceptionPolicy;
    public RuleOrder RuleOrder { get; public set; }
    public StreamExceptionPolicy StreamExceptionPolicy { get; public set; }
    public RuleOrder get_RuleOrder();
    public void set_RuleOrder(RuleOrder value);
    internal bool IsSetRuleOrder();
    public StreamExceptionPolicy get_StreamExceptionPolicy();
    public void set_StreamExceptionPolicy(StreamExceptionPolicy value);
    internal bool IsSetStreamExceptionPolicy();
}
public class Amazon.NetworkFirewall.Model.StatefulRule : object {
    private StatefulAction _action;
    private Header _header;
    private List`1<RuleOption> _ruleOptions;
    [AWSPropertyAttribute]
public StatefulAction Action { get; public set; }
    [AWSPropertyAttribute]
public Header Header { get; public set; }
    [AWSPropertyAttribute]
public List`1<RuleOption> RuleOptions { get; public set; }
    public StatefulAction get_Action();
    public void set_Action(StatefulAction value);
    internal bool IsSetAction();
    public Header get_Header();
    public void set_Header(Header value);
    internal bool IsSetHeader();
    public List`1<RuleOption> get_RuleOptions();
    public void set_RuleOptions(List`1<RuleOption> value);
    internal bool IsSetRuleOptions();
}
public class Amazon.NetworkFirewall.Model.StatefulRuleGroupOverride : object {
    private OverrideAction _action;
    public OverrideAction Action { get; public set; }
    public OverrideAction get_Action();
    public void set_Action(OverrideAction value);
    internal bool IsSetAction();
}
public class Amazon.NetworkFirewall.Model.StatefulRuleGroupReference : object {
    private StatefulRuleGroupOverride _override;
    private Nullable`1<int> _priority;
    private string _resourceArn;
    public StatefulRuleGroupOverride Override { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public StatefulRuleGroupOverride get_Override();
    public void set_Override(StatefulRuleGroupOverride value);
    internal bool IsSetOverride();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.NetworkFirewall.Model.StatefulRuleOptions : object {
    private RuleOrder _ruleOrder;
    public RuleOrder RuleOrder { get; public set; }
    public RuleOrder get_RuleOrder();
    public void set_RuleOrder(RuleOrder value);
    internal bool IsSetRuleOrder();
}
public class Amazon.NetworkFirewall.Model.StatelessRule : object {
    private Nullable`1<int> _priority;
    private RuleDefinition _ruleDefinition;
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    [AWSPropertyAttribute]
public RuleDefinition RuleDefinition { get; public set; }
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public RuleDefinition get_RuleDefinition();
    public void set_RuleDefinition(RuleDefinition value);
    internal bool IsSetRuleDefinition();
}
public class Amazon.NetworkFirewall.Model.StatelessRuleGroupReference : object {
    private Nullable`1<int> _priority;
    private string _resourceArn;
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.NetworkFirewall.Model.StatelessRulesAndCustomActions : object {
    private List`1<CustomAction> _customActions;
    private List`1<StatelessRule> _statelessRules;
    public List`1<CustomAction> CustomActions { get; public set; }
    [AWSPropertyAttribute]
public List`1<StatelessRule> StatelessRules { get; public set; }
    public List`1<CustomAction> get_CustomActions();
    public void set_CustomActions(List`1<CustomAction> value);
    internal bool IsSetCustomActions();
    public List`1<StatelessRule> get_StatelessRules();
    public void set_StatelessRules(List`1<StatelessRule> value);
    internal bool IsSetStatelessRules();
}
public class Amazon.NetworkFirewall.Model.SubnetMapping : object {
    private IPAddressType _ipAddressType;
    private string _subnetId;
    public IPAddressType IPAddressType { get; public set; }
    [AWSPropertyAttribute]
public string SubnetId { get; public set; }
    public IPAddressType get_IPAddressType();
    public void set_IPAddressType(IPAddressType value);
    internal bool IsSetIPAddressType();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.NetworkFirewall.Model.SyncState : object {
    private Attachment _attachment;
    private Dictionary`2<string, PerObjectStatus> _config;
    public Attachment Attachment { get; public set; }
    public Dictionary`2<string, PerObjectStatus> Config { get; public set; }
    public Attachment get_Attachment();
    public void set_Attachment(Attachment value);
    internal bool IsSetAttachment();
    public Dictionary`2<string, PerObjectStatus> get_Config();
    public void set_Config(Dictionary`2<string, PerObjectStatus> value);
    internal bool IsSetConfig();
}
public class Amazon.NetworkFirewall.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.NetworkFirewall.Model.TagResourceRequest : AmazonNetworkFirewallRequest {
    private string _resourceArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.NetworkFirewall.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.NetworkFirewall.Model.TCPFlagField : object {
    private List`1<string> _flags;
    private List`1<string> _masks;
    [AWSPropertyAttribute]
public List`1<string> Flags { get; public set; }
    public List`1<string> Masks { get; public set; }
    public List`1<string> get_Flags();
    public void set_Flags(List`1<string> value);
    internal bool IsSetFlags();
    public List`1<string> get_Masks();
    public void set_Masks(List`1<string> value);
    internal bool IsSetMasks();
}
public class Amazon.NetworkFirewall.Model.ThrottlingException : AmazonNetworkFirewallException {
    public ThrottlingException(string message);
    public ThrottlingException(string message, Exception innerException);
    public ThrottlingException(Exception innerException);
    public ThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.TlsCertificateData : object {
    private string _certificateArn;
    private string _certificateSerial;
    private string _status;
    private string _statusMessage;
    [AWSPropertyAttribute]
public string CertificateArn { get; public set; }
    public string CertificateSerial { get; public set; }
    public string Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusMessage { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_CertificateSerial();
    public void set_CertificateSerial(string value);
    internal bool IsSetCertificateSerial();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.NetworkFirewall.Model.TLSInspectionConfiguration : object {
    private List`1<ServerCertificateConfiguration> _serverCertificateConfigurations;
    public List`1<ServerCertificateConfiguration> ServerCertificateConfigurations { get; public set; }
    public List`1<ServerCertificateConfiguration> get_ServerCertificateConfigurations();
    public void set_ServerCertificateConfigurations(List`1<ServerCertificateConfiguration> value);
    internal bool IsSetServerCertificateConfigurations();
}
public class Amazon.NetworkFirewall.Model.TLSInspectionConfigurationMetadata : object {
    private string _arn;
    private string _name;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.NetworkFirewall.Model.TLSInspectionConfigurationResponse : object {
    private TlsCertificateData _certificateAuthority;
    private List`1<TlsCertificateData> _certificates;
    private string _description;
    private EncryptionConfiguration _encryptionConfiguration;
    private Nullable`1<DateTime> _lastModifiedTime;
    private Nullable`1<int> _numberOfAssociations;
    private List`1<Tag> _tags;
    private string _tlsInspectionConfigurationArn;
    private string _tlsInspectionConfigurationId;
    private string _tlsInspectionConfigurationName;
    private ResourceStatus _tlsInspectionConfigurationStatus;
    public TlsCertificateData CertificateAuthority { get; public set; }
    public List`1<TlsCertificateData> Certificates { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public Nullable`1<int> NumberOfAssociations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationArn { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationId { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationName { get; public set; }
    public ResourceStatus TLSInspectionConfigurationStatus { get; public set; }
    public TlsCertificateData get_CertificateAuthority();
    public void set_CertificateAuthority(TlsCertificateData value);
    internal bool IsSetCertificateAuthority();
    public List`1<TlsCertificateData> get_Certificates();
    public void set_Certificates(List`1<TlsCertificateData> value);
    internal bool IsSetCertificates();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public Nullable`1<int> get_NumberOfAssociations();
    public void set_NumberOfAssociations(Nullable`1<int> value);
    internal bool IsSetNumberOfAssociations();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TLSInspectionConfigurationArn();
    public void set_TLSInspectionConfigurationArn(string value);
    internal bool IsSetTLSInspectionConfigurationArn();
    public string get_TLSInspectionConfigurationId();
    public void set_TLSInspectionConfigurationId(string value);
    internal bool IsSetTLSInspectionConfigurationId();
    public string get_TLSInspectionConfigurationName();
    public void set_TLSInspectionConfigurationName(string value);
    internal bool IsSetTLSInspectionConfigurationName();
    public ResourceStatus get_TLSInspectionConfigurationStatus();
    public void set_TLSInspectionConfigurationStatus(ResourceStatus value);
    internal bool IsSetTLSInspectionConfigurationStatus();
}
public class Amazon.NetworkFirewall.Model.UnsupportedOperationException : AmazonNetworkFirewallException {
    public UnsupportedOperationException(string message);
    public UnsupportedOperationException(string message, Exception innerException);
    public UnsupportedOperationException(Exception innerException);
    public UnsupportedOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.NetworkFirewall.Model.UntagResourceRequest : AmazonNetworkFirewallRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.NetworkFirewall.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallDeleteProtectionRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<bool> _deleteProtection;
    private string _firewallArn;
    private string _firewallName;
    private string _updateToken;
    [AWSPropertyAttribute]
public Nullable`1<bool> DeleteProtection { get; public set; }
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public Nullable`1<bool> get_DeleteProtection();
    public void set_DeleteProtection(Nullable`1<bool> value);
    internal bool IsSetDeleteProtection();
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallDeleteProtectionResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _deleteProtection;
    private string _firewallArn;
    private string _firewallName;
    private string _updateToken;
    public Nullable`1<bool> DeleteProtection { get; public set; }
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public Nullable`1<bool> get_DeleteProtection();
    public void set_DeleteProtection(Nullable`1<bool> value);
    internal bool IsSetDeleteProtection();
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallDescriptionRequest : AmazonNetworkFirewallRequest {
    private string _description;
    private string _firewallArn;
    private string _firewallName;
    private string _updateToken;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallDescriptionResponse : AmazonWebServiceResponse {
    private string _description;
    private string _firewallArn;
    private string _firewallName;
    private string _updateToken;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallEncryptionConfigurationRequest : AmazonNetworkFirewallRequest {
    private EncryptionConfiguration _encryptionConfiguration;
    private string _firewallArn;
    private string _firewallName;
    private string _updateToken;
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallEncryptionConfigurationResponse : AmazonWebServiceResponse {
    private EncryptionConfiguration _encryptionConfiguration;
    private string _firewallArn;
    private string _firewallName;
    private string _updateToken;
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallPolicyChangeProtectionRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    private Nullable`1<bool> _firewallPolicyChangeProtection;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> FirewallPolicyChangeProtection { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public Nullable`1<bool> get_FirewallPolicyChangeProtection();
    public void set_FirewallPolicyChangeProtection(Nullable`1<bool> value);
    internal bool IsSetFirewallPolicyChangeProtection();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallPolicyChangeProtectionResponse : AmazonWebServiceResponse {
    private string _firewallArn;
    private string _firewallName;
    private Nullable`1<bool> _firewallPolicyChangeProtection;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public Nullable`1<bool> FirewallPolicyChangeProtection { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public Nullable`1<bool> get_FirewallPolicyChangeProtection();
    public void set_FirewallPolicyChangeProtection(Nullable`1<bool> value);
    internal bool IsSetFirewallPolicyChangeProtection();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallPolicyRequest : AmazonNetworkFirewallRequest {
    private string _description;
    private Nullable`1<bool> _dryRun;
    private EncryptionConfiguration _encryptionConfiguration;
    private FirewallPolicy _firewallPolicy;
    private string _firewallPolicyArn;
    private string _firewallPolicyName;
    private string _updateToken;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<bool> DryRun { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public FirewallPolicy FirewallPolicy { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallPolicyName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    internal bool IsSetDryRun();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public FirewallPolicy get_FirewallPolicy();
    public void set_FirewallPolicy(FirewallPolicy value);
    internal bool IsSetFirewallPolicy();
    public string get_FirewallPolicyArn();
    public void set_FirewallPolicyArn(string value);
    internal bool IsSetFirewallPolicyArn();
    public string get_FirewallPolicyName();
    public void set_FirewallPolicyName(string value);
    internal bool IsSetFirewallPolicyName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateFirewallPolicyResponse : AmazonWebServiceResponse {
    private FirewallPolicyResponse _firewallPolicyResponse;
    private string _updateToken;
    [AWSPropertyAttribute]
public FirewallPolicyResponse FirewallPolicyResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public FirewallPolicyResponse get_FirewallPolicyResponse();
    public void set_FirewallPolicyResponse(FirewallPolicyResponse value);
    internal bool IsSetFirewallPolicyResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateLoggingConfigurationRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    private LoggingConfiguration _loggingConfiguration;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public LoggingConfiguration LoggingConfiguration { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public LoggingConfiguration get_LoggingConfiguration();
    public void set_LoggingConfiguration(LoggingConfiguration value);
    internal bool IsSetLoggingConfiguration();
}
public class Amazon.NetworkFirewall.Model.UpdateLoggingConfigurationResponse : AmazonWebServiceResponse {
    private string _firewallArn;
    private string _firewallName;
    private LoggingConfiguration _loggingConfiguration;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public LoggingConfiguration LoggingConfiguration { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public LoggingConfiguration get_LoggingConfiguration();
    public void set_LoggingConfiguration(LoggingConfiguration value);
    internal bool IsSetLoggingConfiguration();
}
public class Amazon.NetworkFirewall.Model.UpdateRuleGroupRequest : AmazonNetworkFirewallRequest {
    private Nullable`1<bool> _analyzeRuleGroup;
    private string _description;
    private Nullable`1<bool> _dryRun;
    private EncryptionConfiguration _encryptionConfiguration;
    private RuleGroup _ruleGroup;
    private string _ruleGroupArn;
    private string _ruleGroupName;
    private string _rules;
    private SourceMetadata _sourceMetadata;
    private RuleGroupType _type;
    private string _updateToken;
    public Nullable`1<bool> AnalyzeRuleGroup { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<bool> DryRun { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    public RuleGroup RuleGroup { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupArn { get; public set; }
    [AWSPropertyAttribute]
public string RuleGroupName { get; public set; }
    [AWSPropertyAttribute]
public string Rules { get; public set; }
    public SourceMetadata SourceMetadata { get; public set; }
    public RuleGroupType Type { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public Nullable`1<bool> get_AnalyzeRuleGroup();
    public void set_AnalyzeRuleGroup(Nullable`1<bool> value);
    internal bool IsSetAnalyzeRuleGroup();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    internal bool IsSetDryRun();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public RuleGroup get_RuleGroup();
    public void set_RuleGroup(RuleGroup value);
    internal bool IsSetRuleGroup();
    public string get_RuleGroupArn();
    public void set_RuleGroupArn(string value);
    internal bool IsSetRuleGroupArn();
    public string get_RuleGroupName();
    public void set_RuleGroupName(string value);
    internal bool IsSetRuleGroupName();
    public string get_Rules();
    public void set_Rules(string value);
    internal bool IsSetRules();
    public SourceMetadata get_SourceMetadata();
    public void set_SourceMetadata(SourceMetadata value);
    internal bool IsSetSourceMetadata();
    public RuleGroupType get_Type();
    public void set_Type(RuleGroupType value);
    internal bool IsSetType();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateRuleGroupResponse : AmazonWebServiceResponse {
    private RuleGroupResponse _ruleGroupResponse;
    private string _updateToken;
    [AWSPropertyAttribute]
public RuleGroupResponse RuleGroupResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public RuleGroupResponse get_RuleGroupResponse();
    public void set_RuleGroupResponse(RuleGroupResponse value);
    internal bool IsSetRuleGroupResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateSubnetChangeProtectionRequest : AmazonNetworkFirewallRequest {
    private string _firewallArn;
    private string _firewallName;
    private Nullable`1<bool> _subnetChangeProtection;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> SubnetChangeProtection { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public Nullable`1<bool> get_SubnetChangeProtection();
    public void set_SubnetChangeProtection(Nullable`1<bool> value);
    internal bool IsSetSubnetChangeProtection();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateSubnetChangeProtectionResponse : AmazonWebServiceResponse {
    private string _firewallArn;
    private string _firewallName;
    private Nullable`1<bool> _subnetChangeProtection;
    private string _updateToken;
    [AWSPropertyAttribute]
public string FirewallArn { get; public set; }
    [AWSPropertyAttribute]
public string FirewallName { get; public set; }
    public Nullable`1<bool> SubnetChangeProtection { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_FirewallArn();
    public void set_FirewallArn(string value);
    internal bool IsSetFirewallArn();
    public string get_FirewallName();
    public void set_FirewallName(string value);
    internal bool IsSetFirewallName();
    public Nullable`1<bool> get_SubnetChangeProtection();
    public void set_SubnetChangeProtection(Nullable`1<bool> value);
    internal bool IsSetSubnetChangeProtection();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateTLSInspectionConfigurationRequest : AmazonNetworkFirewallRequest {
    private string _description;
    private EncryptionConfiguration _encryptionConfiguration;
    private TLSInspectionConfiguration _tlsInspectionConfiguration;
    private string _tlsInspectionConfigurationArn;
    private string _tlsInspectionConfigurationName;
    private string _updateToken;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public TLSInspectionConfiguration TLSInspectionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationArn { get; public set; }
    [AWSPropertyAttribute]
public string TLSInspectionConfigurationName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public TLSInspectionConfiguration get_TLSInspectionConfiguration();
    public void set_TLSInspectionConfiguration(TLSInspectionConfiguration value);
    internal bool IsSetTLSInspectionConfiguration();
    public string get_TLSInspectionConfigurationArn();
    public void set_TLSInspectionConfigurationArn(string value);
    internal bool IsSetTLSInspectionConfigurationArn();
    public string get_TLSInspectionConfigurationName();
    public void set_TLSInspectionConfigurationName(string value);
    internal bool IsSetTLSInspectionConfigurationName();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.Model.UpdateTLSInspectionConfigurationResponse : AmazonWebServiceResponse {
    private TLSInspectionConfigurationResponse _tlsInspectionConfigurationResponse;
    private string _updateToken;
    [AWSPropertyAttribute]
public TLSInspectionConfigurationResponse TLSInspectionConfigurationResponse { get; public set; }
    [AWSPropertyAttribute]
public string UpdateToken { get; public set; }
    public TLSInspectionConfigurationResponse get_TLSInspectionConfigurationResponse();
    public void set_TLSInspectionConfigurationResponse(TLSInspectionConfigurationResponse value);
    internal bool IsSetTLSInspectionConfigurationResponse();
    public string get_UpdateToken();
    public void set_UpdateToken(string value);
    internal bool IsSetUpdateToken();
}
public class Amazon.NetworkFirewall.OverrideAction : ConstantClass {
    public static OverrideAction DROP_TO_ALERT;
    public OverrideAction(string value);
    private static OverrideAction();
    public static OverrideAction FindValue(string value);
    public static OverrideAction op_Implicit(string value);
}
public class Amazon.NetworkFirewall.PerObjectSyncStatus : ConstantClass {
    public static PerObjectSyncStatus CAPACITY_CONSTRAINED;
    public static PerObjectSyncStatus IN_SYNC;
    public static PerObjectSyncStatus PENDING;
    public PerObjectSyncStatus(string value);
    private static PerObjectSyncStatus();
    public static PerObjectSyncStatus FindValue(string value);
    public static PerObjectSyncStatus op_Implicit(string value);
}
public class Amazon.NetworkFirewall.ResourceManagedStatus : ConstantClass {
    public static ResourceManagedStatus ACCOUNT;
    public static ResourceManagedStatus MANAGED;
    public ResourceManagedStatus(string value);
    private static ResourceManagedStatus();
    public static ResourceManagedStatus FindValue(string value);
    public static ResourceManagedStatus op_Implicit(string value);
}
public class Amazon.NetworkFirewall.ResourceManagedType : ConstantClass {
    public static ResourceManagedType AWS_MANAGED_DOMAIN_LISTS;
    public static ResourceManagedType AWS_MANAGED_THREAT_SIGNATURES;
    public ResourceManagedType(string value);
    private static ResourceManagedType();
    public static ResourceManagedType FindValue(string value);
    public static ResourceManagedType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.ResourceStatus : ConstantClass {
    public static ResourceStatus ACTIVE;
    public static ResourceStatus DELETING;
    public static ResourceStatus ERROR;
    public ResourceStatus(string value);
    private static ResourceStatus();
    public static ResourceStatus FindValue(string value);
    public static ResourceStatus op_Implicit(string value);
}
public class Amazon.NetworkFirewall.RevocationCheckAction : ConstantClass {
    public static RevocationCheckAction DROP;
    public static RevocationCheckAction PASS;
    public static RevocationCheckAction REJECT;
    public RevocationCheckAction(string value);
    private static RevocationCheckAction();
    public static RevocationCheckAction FindValue(string value);
    public static RevocationCheckAction op_Implicit(string value);
}
public class Amazon.NetworkFirewall.RuleGroupType : ConstantClass {
    public static RuleGroupType STATEFUL;
    public static RuleGroupType STATELESS;
    public RuleGroupType(string value);
    private static RuleGroupType();
    public static RuleGroupType FindValue(string value);
    public static RuleGroupType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.RuleOrder : ConstantClass {
    public static RuleOrder DEFAULT_ACTION_ORDER;
    public static RuleOrder STRICT_ORDER;
    public RuleOrder(string value);
    private static RuleOrder();
    public static RuleOrder FindValue(string value);
    public static RuleOrder op_Implicit(string value);
}
public class Amazon.NetworkFirewall.StatefulAction : ConstantClass {
    public static StatefulAction ALERT;
    public static StatefulAction DROP;
    public static StatefulAction PASS;
    public static StatefulAction REJECT;
    public StatefulAction(string value);
    private static StatefulAction();
    public static StatefulAction FindValue(string value);
    public static StatefulAction op_Implicit(string value);
}
public class Amazon.NetworkFirewall.StatefulRuleDirection : ConstantClass {
    public static StatefulRuleDirection ANY;
    public static StatefulRuleDirection FORWARD;
    public StatefulRuleDirection(string value);
    private static StatefulRuleDirection();
    public static StatefulRuleDirection FindValue(string value);
    public static StatefulRuleDirection op_Implicit(string value);
}
public class Amazon.NetworkFirewall.StatefulRuleProtocol : ConstantClass {
    public static StatefulRuleProtocol DCERPC;
    public static StatefulRuleProtocol DHCP;
    public static StatefulRuleProtocol DNS;
    public static StatefulRuleProtocol FTP;
    public static StatefulRuleProtocol HTTP;
    public static StatefulRuleProtocol ICMP;
    public static StatefulRuleProtocol IKEV2;
    public static StatefulRuleProtocol IMAP;
    public static StatefulRuleProtocol IP;
    public static StatefulRuleProtocol KRB5;
    public static StatefulRuleProtocol MSN;
    public static StatefulRuleProtocol NTP;
    public static StatefulRuleProtocol SMB;
    public static StatefulRuleProtocol SMTP;
    public static StatefulRuleProtocol SSH;
    public static StatefulRuleProtocol TCP;
    public static StatefulRuleProtocol TFTP;
    public static StatefulRuleProtocol TLS;
    public static StatefulRuleProtocol UDP;
    public StatefulRuleProtocol(string value);
    private static StatefulRuleProtocol();
    public static StatefulRuleProtocol FindValue(string value);
    public static StatefulRuleProtocol op_Implicit(string value);
}
public class Amazon.NetworkFirewall.StreamExceptionPolicy : ConstantClass {
    public static StreamExceptionPolicy CONTINUE;
    public static StreamExceptionPolicy DROP;
    public static StreamExceptionPolicy REJECT;
    public StreamExceptionPolicy(string value);
    private static StreamExceptionPolicy();
    public static StreamExceptionPolicy FindValue(string value);
    public static StreamExceptionPolicy op_Implicit(string value);
}
public class Amazon.NetworkFirewall.TargetType : ConstantClass {
    public static TargetType HTTP_HOST;
    public static TargetType TLS_SNI;
    public TargetType(string value);
    private static TargetType();
    public static TargetType FindValue(string value);
    public static TargetType op_Implicit(string value);
}
public class Amazon.NetworkFirewall.TCPFlag : ConstantClass {
    public static TCPFlag ACK;
    public static TCPFlag CWR;
    public static TCPFlag ECE;
    public static TCPFlag FIN;
    public static TCPFlag PSH;
    public static TCPFlag RST;
    public static TCPFlag SYN;
    public static TCPFlag URG;
    public TCPFlag(string value);
    private static TCPFlag();
    public static TCPFlag FindValue(string value);
    public static TCPFlag op_Implicit(string value);
}
