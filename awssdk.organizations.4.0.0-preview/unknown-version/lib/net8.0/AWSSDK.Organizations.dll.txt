public class Amazon.Organizations.AccessDeniedForDependencyExceptionReason : ConstantClass {
    public static AccessDeniedForDependencyExceptionReason ACCESS_DENIED_DURING_CREATE_SERVICE_LINKED_ROLE;
    public AccessDeniedForDependencyExceptionReason(string value);
    private static AccessDeniedForDependencyExceptionReason();
    public static AccessDeniedForDependencyExceptionReason FindValue(string value);
    public static AccessDeniedForDependencyExceptionReason op_Implicit(string value);
}
public class Amazon.Organizations.AccountJoinedMethod : ConstantClass {
    public static AccountJoinedMethod CREATED;
    public static AccountJoinedMethod INVITED;
    public AccountJoinedMethod(string value);
    private static AccountJoinedMethod();
    public static AccountJoinedMethod FindValue(string value);
    public static AccountJoinedMethod op_Implicit(string value);
}
public class Amazon.Organizations.AccountStatus : ConstantClass {
    public static AccountStatus ACTIVE;
    public static AccountStatus PENDING_CLOSURE;
    public static AccountStatus SUSPENDED;
    public AccountStatus(string value);
    private static AccountStatus();
    public static AccountStatus FindValue(string value);
    public static AccountStatus op_Implicit(string value);
}
public class Amazon.Organizations.ActionType : ConstantClass {
    public static ActionType ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE;
    public static ActionType APPROVE_ALL_FEATURES;
    public static ActionType ENABLE_ALL_FEATURES;
    public static ActionType INVITE;
    public ActionType(string value);
    private static ActionType();
    public static ActionType FindValue(string value);
    public static ActionType op_Implicit(string value);
}
public class Amazon.Organizations.AmazonOrganizationsClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IOrganizationsPaginatorFactory _paginators;
    public IOrganizationsPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonOrganizationsClient(RegionEndpoint region);
    public AmazonOrganizationsClient(AmazonOrganizationsConfig config);
    public AmazonOrganizationsClient(AWSCredentials credentials);
    public AmazonOrganizationsClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonOrganizationsClient(AWSCredentials credentials, AmazonOrganizationsConfig clientConfig);
    public AmazonOrganizationsClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonOrganizationsClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonOrganizationsClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonOrganizationsConfig clientConfig);
    public AmazonOrganizationsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonOrganizationsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonOrganizationsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonOrganizationsConfig clientConfig);
    private static AmazonOrganizationsClient();
    public sealed virtual IOrganizationsPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AcceptHandshakeResponse AcceptHandshake(AcceptHandshakeRequest request);
    public virtual Task`1<AcceptHandshakeResponse> AcceptHandshakeAsync(AcceptHandshakeRequest request, CancellationToken cancellationToken);
    internal virtual AttachPolicyResponse AttachPolicy(AttachPolicyRequest request);
    public virtual Task`1<AttachPolicyResponse> AttachPolicyAsync(AttachPolicyRequest request, CancellationToken cancellationToken);
    internal virtual CancelHandshakeResponse CancelHandshake(CancelHandshakeRequest request);
    public virtual Task`1<CancelHandshakeResponse> CancelHandshakeAsync(CancelHandshakeRequest request, CancellationToken cancellationToken);
    internal virtual CloseAccountResponse CloseAccount(CloseAccountRequest request);
    public virtual Task`1<CloseAccountResponse> CloseAccountAsync(CloseAccountRequest request, CancellationToken cancellationToken);
    internal virtual CreateAccountResponse CreateAccount(CreateAccountRequest request);
    public virtual Task`1<CreateAccountResponse> CreateAccountAsync(CreateAccountRequest request, CancellationToken cancellationToken);
    internal virtual CreateGovCloudAccountResponse CreateGovCloudAccount(CreateGovCloudAccountRequest request);
    public virtual Task`1<CreateGovCloudAccountResponse> CreateGovCloudAccountAsync(CreateGovCloudAccountRequest request, CancellationToken cancellationToken);
    internal virtual CreateOrganizationResponse CreateOrganization(CreateOrganizationRequest request);
    public virtual Task`1<CreateOrganizationResponse> CreateOrganizationAsync(CreateOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual CreateOrganizationalUnitResponse CreateOrganizationalUnit(CreateOrganizationalUnitRequest request);
    public virtual Task`1<CreateOrganizationalUnitResponse> CreateOrganizationalUnitAsync(CreateOrganizationalUnitRequest request, CancellationToken cancellationToken);
    internal virtual CreatePolicyResponse CreatePolicy(CreatePolicyRequest request);
    public virtual Task`1<CreatePolicyResponse> CreatePolicyAsync(CreatePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeclineHandshakeResponse DeclineHandshake(DeclineHandshakeRequest request);
    public virtual Task`1<DeclineHandshakeResponse> DeclineHandshakeAsync(DeclineHandshakeRequest request, CancellationToken cancellationToken);
    internal virtual DeleteOrganizationResponse DeleteOrganization(DeleteOrganizationRequest request);
    public virtual Task`1<DeleteOrganizationResponse> DeleteOrganizationAsync(DeleteOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteOrganizationalUnitResponse DeleteOrganizationalUnit(DeleteOrganizationalUnitRequest request);
    public virtual Task`1<DeleteOrganizationalUnitResponse> DeleteOrganizationalUnitAsync(DeleteOrganizationalUnitRequest request, CancellationToken cancellationToken);
    internal virtual DeletePolicyResponse DeletePolicy(DeletePolicyRequest request);
    public virtual Task`1<DeletePolicyResponse> DeletePolicyAsync(DeletePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterDelegatedAdministratorResponse DeregisterDelegatedAdministrator(DeregisterDelegatedAdministratorRequest request);
    public virtual Task`1<DeregisterDelegatedAdministratorResponse> DeregisterDelegatedAdministratorAsync(DeregisterDelegatedAdministratorRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAccountResponse DescribeAccount(DescribeAccountRequest request);
    public virtual Task`1<DescribeAccountResponse> DescribeAccountAsync(DescribeAccountRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCreateAccountStatusResponse DescribeCreateAccountStatus(DescribeCreateAccountStatusRequest request);
    public virtual Task`1<DescribeCreateAccountStatusResponse> DescribeCreateAccountStatusAsync(DescribeCreateAccountStatusRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEffectivePolicyResponse DescribeEffectivePolicy(DescribeEffectivePolicyRequest request);
    public virtual Task`1<DescribeEffectivePolicyResponse> DescribeEffectivePolicyAsync(DescribeEffectivePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DescribeHandshakeResponse DescribeHandshake(DescribeHandshakeRequest request);
    public virtual Task`1<DescribeHandshakeResponse> DescribeHandshakeAsync(DescribeHandshakeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeOrganizationResponse DescribeOrganization(DescribeOrganizationRequest request);
    public virtual Task`1<DescribeOrganizationResponse> DescribeOrganizationAsync(DescribeOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeOrganizationalUnitResponse DescribeOrganizationalUnit(DescribeOrganizationalUnitRequest request);
    public virtual Task`1<DescribeOrganizationalUnitResponse> DescribeOrganizationalUnitAsync(DescribeOrganizationalUnitRequest request, CancellationToken cancellationToken);
    internal virtual DescribePolicyResponse DescribePolicy(DescribePolicyRequest request);
    public virtual Task`1<DescribePolicyResponse> DescribePolicyAsync(DescribePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DescribeResourcePolicyResponse DescribeResourcePolicy(DescribeResourcePolicyRequest request);
    public virtual Task`1<DescribeResourcePolicyResponse> DescribeResourcePolicyAsync(DescribeResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DetachPolicyResponse DetachPolicy(DetachPolicyRequest request);
    public virtual Task`1<DetachPolicyResponse> DetachPolicyAsync(DetachPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DisableAWSServiceAccessResponse DisableAWSServiceAccess(DisableAWSServiceAccessRequest request);
    public virtual Task`1<DisableAWSServiceAccessResponse> DisableAWSServiceAccessAsync(DisableAWSServiceAccessRequest request, CancellationToken cancellationToken);
    internal virtual DisablePolicyTypeResponse DisablePolicyType(DisablePolicyTypeRequest request);
    public virtual Task`1<DisablePolicyTypeResponse> DisablePolicyTypeAsync(DisablePolicyTypeRequest request, CancellationToken cancellationToken);
    internal virtual EnableAllFeaturesResponse EnableAllFeatures(EnableAllFeaturesRequest request);
    public virtual Task`1<EnableAllFeaturesResponse> EnableAllFeaturesAsync(EnableAllFeaturesRequest request, CancellationToken cancellationToken);
    internal virtual EnableAWSServiceAccessResponse EnableAWSServiceAccess(EnableAWSServiceAccessRequest request);
    public virtual Task`1<EnableAWSServiceAccessResponse> EnableAWSServiceAccessAsync(EnableAWSServiceAccessRequest request, CancellationToken cancellationToken);
    internal virtual EnablePolicyTypeResponse EnablePolicyType(EnablePolicyTypeRequest request);
    public virtual Task`1<EnablePolicyTypeResponse> EnablePolicyTypeAsync(EnablePolicyTypeRequest request, CancellationToken cancellationToken);
    internal virtual InviteAccountToOrganizationResponse InviteAccountToOrganization(InviteAccountToOrganizationRequest request);
    public virtual Task`1<InviteAccountToOrganizationResponse> InviteAccountToOrganizationAsync(InviteAccountToOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual LeaveOrganizationResponse LeaveOrganization(LeaveOrganizationRequest request);
    public virtual Task`1<LeaveOrganizationResponse> LeaveOrganizationAsync(LeaveOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual ListAccountsResponse ListAccounts(ListAccountsRequest request);
    public virtual Task`1<ListAccountsResponse> ListAccountsAsync(ListAccountsRequest request, CancellationToken cancellationToken);
    internal virtual ListAccountsForParentResponse ListAccountsForParent(ListAccountsForParentRequest request);
    public virtual Task`1<ListAccountsForParentResponse> ListAccountsForParentAsync(ListAccountsForParentRequest request, CancellationToken cancellationToken);
    internal virtual ListAWSServiceAccessForOrganizationResponse ListAWSServiceAccessForOrganization(ListAWSServiceAccessForOrganizationRequest request);
    public virtual Task`1<ListAWSServiceAccessForOrganizationResponse> ListAWSServiceAccessForOrganizationAsync(ListAWSServiceAccessForOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual ListChildrenResponse ListChildren(ListChildrenRequest request);
    public virtual Task`1<ListChildrenResponse> ListChildrenAsync(ListChildrenRequest request, CancellationToken cancellationToken);
    internal virtual ListCreateAccountStatusResponse ListCreateAccountStatus(ListCreateAccountStatusRequest request);
    public virtual Task`1<ListCreateAccountStatusResponse> ListCreateAccountStatusAsync(ListCreateAccountStatusRequest request, CancellationToken cancellationToken);
    internal virtual ListDelegatedAdministratorsResponse ListDelegatedAdministrators(ListDelegatedAdministratorsRequest request);
    public virtual Task`1<ListDelegatedAdministratorsResponse> ListDelegatedAdministratorsAsync(ListDelegatedAdministratorsRequest request, CancellationToken cancellationToken);
    internal virtual ListDelegatedServicesForAccountResponse ListDelegatedServicesForAccount(ListDelegatedServicesForAccountRequest request);
    public virtual Task`1<ListDelegatedServicesForAccountResponse> ListDelegatedServicesForAccountAsync(ListDelegatedServicesForAccountRequest request, CancellationToken cancellationToken);
    internal virtual ListHandshakesForAccountResponse ListHandshakesForAccount(ListHandshakesForAccountRequest request);
    public virtual Task`1<ListHandshakesForAccountResponse> ListHandshakesForAccountAsync(ListHandshakesForAccountRequest request, CancellationToken cancellationToken);
    internal virtual ListHandshakesForOrganizationResponse ListHandshakesForOrganization(ListHandshakesForOrganizationRequest request);
    public virtual Task`1<ListHandshakesForOrganizationResponse> ListHandshakesForOrganizationAsync(ListHandshakesForOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual ListOrganizationalUnitsForParentResponse ListOrganizationalUnitsForParent(ListOrganizationalUnitsForParentRequest request);
    public virtual Task`1<ListOrganizationalUnitsForParentResponse> ListOrganizationalUnitsForParentAsync(ListOrganizationalUnitsForParentRequest request, CancellationToken cancellationToken);
    internal virtual ListParentsResponse ListParents(ListParentsRequest request);
    public virtual Task`1<ListParentsResponse> ListParentsAsync(ListParentsRequest request, CancellationToken cancellationToken);
    internal virtual ListPoliciesResponse ListPolicies(ListPoliciesRequest request);
    public virtual Task`1<ListPoliciesResponse> ListPoliciesAsync(ListPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListPoliciesForTargetResponse ListPoliciesForTarget(ListPoliciesForTargetRequest request);
    public virtual Task`1<ListPoliciesForTargetResponse> ListPoliciesForTargetAsync(ListPoliciesForTargetRequest request, CancellationToken cancellationToken);
    internal virtual ListRootsResponse ListRoots(ListRootsRequest request);
    public virtual Task`1<ListRootsResponse> ListRootsAsync(ListRootsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ListTargetsForPolicyResponse ListTargetsForPolicy(ListTargetsForPolicyRequest request);
    public virtual Task`1<ListTargetsForPolicyResponse> ListTargetsForPolicyAsync(ListTargetsForPolicyRequest request, CancellationToken cancellationToken);
    internal virtual MoveAccountResponse MoveAccount(MoveAccountRequest request);
    public virtual Task`1<MoveAccountResponse> MoveAccountAsync(MoveAccountRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual RegisterDelegatedAdministratorResponse RegisterDelegatedAdministrator(RegisterDelegatedAdministratorRequest request);
    public virtual Task`1<RegisterDelegatedAdministratorResponse> RegisterDelegatedAdministratorAsync(RegisterDelegatedAdministratorRequest request, CancellationToken cancellationToken);
    internal virtual RemoveAccountFromOrganizationResponse RemoveAccountFromOrganization(RemoveAccountFromOrganizationRequest request);
    public virtual Task`1<RemoveAccountFromOrganizationResponse> RemoveAccountFromOrganizationAsync(RemoveAccountFromOrganizationRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateOrganizationalUnitResponse UpdateOrganizationalUnit(UpdateOrganizationalUnitRequest request);
    public virtual Task`1<UpdateOrganizationalUnitResponse> UpdateOrganizationalUnitAsync(UpdateOrganizationalUnitRequest request, CancellationToken cancellationToken);
    internal virtual UpdatePolicyResponse UpdatePolicy(UpdatePolicyRequest request);
    public virtual Task`1<UpdatePolicyResponse> UpdatePolicyAsync(UpdatePolicyRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Organizations.AmazonOrganizationsConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonOrganizationsEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonOrganizationsConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.Organizations.AmazonOrganizationsDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonOrganizationsDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.Organizations.AmazonOrganizationsException : AmazonServiceException {
    public AmazonOrganizationsException(string message);
    public AmazonOrganizationsException(string message, Exception innerException);
    public AmazonOrganizationsException(Exception innerException);
    public AmazonOrganizationsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonOrganizationsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.AmazonOrganizationsRequest : AmazonWebServiceRequest {
}
public class Amazon.Organizations.ChildType : ConstantClass {
    public static ChildType ACCOUNT;
    public static ChildType ORGANIZATIONAL_UNIT;
    public ChildType(string value);
    private static ChildType();
    public static ChildType FindValue(string value);
    public static ChildType op_Implicit(string value);
}
public class Amazon.Organizations.ConstraintViolationExceptionReason : ConstantClass {
    public static ConstraintViolationExceptionReason ACCOUNT_CANNOT_LEAVE_ORGANIZATION;
    public static ConstraintViolationExceptionReason ACCOUNT_CANNOT_LEAVE_WITHOUT_EULA;
    public static ConstraintViolationExceptionReason ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION;
    public static ConstraintViolationExceptionReason ACCOUNT_CREATION_NOT_COMPLETE;
    public static ConstraintViolationExceptionReason ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason ACCOUNT_NUMBER_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason CANNOT_CLOSE_MANAGEMENT_ACCOUNT;
    public static ConstraintViolationExceptionReason CANNOT_REGISTER_MASTER_AS_DELEGATED_ADMINISTRATOR;
    public static ConstraintViolationExceptionReason CANNOT_REGISTER_SUSPENDED_ACCOUNT_AS_DELEGATED_ADMINISTRATOR;
    public static ConstraintViolationExceptionReason CANNOT_REMOVE_DELEGATED_ADMINISTRATOR_FROM_ORG;
    public static ConstraintViolationExceptionReason CLOSE_ACCOUNT_QUOTA_EXCEEDED;
    public static ConstraintViolationExceptionReason CLOSE_ACCOUNT_REQUESTS_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason CREATE_ORGANIZATION_IN_BILLING_MODE_UNSUPPORTED_REGION;
    public static ConstraintViolationExceptionReason DELEGATED_ADMINISTRATOR_EXISTS_FOR_THIS_SERVICE;
    public static ConstraintViolationExceptionReason EMAIL_VERIFICATION_CODE_EXPIRED;
    public static ConstraintViolationExceptionReason HANDSHAKE_RATE_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason INVALID_PAYMENT_INSTRUMENT;
    public static ConstraintViolationExceptionReason MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE;
    public static ConstraintViolationExceptionReason MASTER_ACCOUNT_MISSING_BUSINESS_LICENSE;
    public static ConstraintViolationExceptionReason MASTER_ACCOUNT_MISSING_CONTACT_INFO;
    public static ConstraintViolationExceptionReason MASTER_ACCOUNT_NOT_GOVCLOUD_ENABLED;
    public static ConstraintViolationExceptionReason MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED;
    public static ConstraintViolationExceptionReason MAX_DELEGATED_ADMINISTRATORS_FOR_SERVICE_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason MAX_TAG_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED;
    public static ConstraintViolationExceptionReason MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason ORGANIZATION_NOT_IN_ALL_FEATURES_MODE;
    public static ConstraintViolationExceptionReason OU_DEPTH_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason OU_NUMBER_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason POLICY_CONTENT_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason POLICY_NUMBER_LIMIT_EXCEEDED;
    public static ConstraintViolationExceptionReason SERVICE_ACCESS_NOT_ENABLED;
    public static ConstraintViolationExceptionReason TAG_POLICY_VIOLATION;
    public static ConstraintViolationExceptionReason WAIT_PERIOD_ACTIVE;
    public ConstraintViolationExceptionReason(string value);
    private static ConstraintViolationExceptionReason();
    public static ConstraintViolationExceptionReason FindValue(string value);
    public static ConstraintViolationExceptionReason op_Implicit(string value);
}
public class Amazon.Organizations.CreateAccountFailureReason : ConstantClass {
    public static CreateAccountFailureReason ACCOUNT_LIMIT_EXCEEDED;
    public static CreateAccountFailureReason CONCURRENT_ACCOUNT_MODIFICATION;
    public static CreateAccountFailureReason EMAIL_ALREADY_EXISTS;
    public static CreateAccountFailureReason FAILED_BUSINESS_VALIDATION;
    public static CreateAccountFailureReason GOVCLOUD_ACCOUNT_ALREADY_EXISTS;
    public static CreateAccountFailureReason INTERNAL_FAILURE;
    public static CreateAccountFailureReason INVALID_ADDRESS;
    public static CreateAccountFailureReason INVALID_EMAIL;
    public static CreateAccountFailureReason INVALID_IDENTITY_FOR_BUSINESS_VALIDATION;
    public static CreateAccountFailureReason INVALID_PAYMENT_INSTRUMENT;
    public static CreateAccountFailureReason MISSING_BUSINESS_VALIDATION;
    public static CreateAccountFailureReason MISSING_PAYMENT_INSTRUMENT;
    public static CreateAccountFailureReason PENDING_BUSINESS_VALIDATION;
    public static CreateAccountFailureReason UNKNOWN_BUSINESS_VALIDATION;
    public static CreateAccountFailureReason UPDATE_EXISTING_RESOURCE_POLICY_WITH_TAGS_NOT_SUPPORTED;
    public CreateAccountFailureReason(string value);
    private static CreateAccountFailureReason();
    public static CreateAccountFailureReason FindValue(string value);
    public static CreateAccountFailureReason op_Implicit(string value);
}
public class Amazon.Organizations.CreateAccountState : ConstantClass {
    public static CreateAccountState FAILED;
    public static CreateAccountState IN_PROGRESS;
    public static CreateAccountState SUCCEEDED;
    public CreateAccountState(string value);
    private static CreateAccountState();
    public static CreateAccountState FindValue(string value);
    public static CreateAccountState op_Implicit(string value);
}
public class Amazon.Organizations.EffectivePolicyType : ConstantClass {
    public static EffectivePolicyType AISERVICES_OPT_OUT_POLICY;
    public static EffectivePolicyType BACKUP_POLICY;
    public static EffectivePolicyType TAG_POLICY;
    public EffectivePolicyType(string value);
    private static EffectivePolicyType();
    public static EffectivePolicyType FindValue(string value);
    public static EffectivePolicyType op_Implicit(string value);
}
public class Amazon.Organizations.Endpoints.OrganizationsEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.Organizations.HandshakeConstraintViolationExceptionReason : ConstantClass {
    public static HandshakeConstraintViolationExceptionReason ACCOUNT_NUMBER_LIMIT_EXCEEDED;
    public static HandshakeConstraintViolationExceptionReason ALREADY_IN_AN_ORGANIZATION;
    public static HandshakeConstraintViolationExceptionReason HANDSHAKE_RATE_LIMIT_EXCEEDED;
    public static HandshakeConstraintViolationExceptionReason INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES;
    public static HandshakeConstraintViolationExceptionReason MANAGEMENT_ACCOUNT_EMAIL_NOT_VERIFIED;
    public static HandshakeConstraintViolationExceptionReason ORGANIZATION_ALREADY_HAS_ALL_FEATURES;
    public static HandshakeConstraintViolationExceptionReason ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD;
    public static HandshakeConstraintViolationExceptionReason ORGANIZATION_IS_ALREADY_PENDING_ALL_FEATURES_MIGRATION;
    public static HandshakeConstraintViolationExceptionReason ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED;
    public static HandshakeConstraintViolationExceptionReason PAYMENT_INSTRUMENT_REQUIRED;
    public HandshakeConstraintViolationExceptionReason(string value);
    private static HandshakeConstraintViolationExceptionReason();
    public static HandshakeConstraintViolationExceptionReason FindValue(string value);
    public static HandshakeConstraintViolationExceptionReason op_Implicit(string value);
}
public class Amazon.Organizations.HandshakePartyType : ConstantClass {
    public static HandshakePartyType ACCOUNT;
    public static HandshakePartyType EMAIL;
    public static HandshakePartyType ORGANIZATION;
    public HandshakePartyType(string value);
    private static HandshakePartyType();
    public static HandshakePartyType FindValue(string value);
    public static HandshakePartyType op_Implicit(string value);
}
public class Amazon.Organizations.HandshakeResourceType : ConstantClass {
    public static HandshakeResourceType ACCOUNT;
    public static HandshakeResourceType EMAIL;
    public static HandshakeResourceType MASTER_EMAIL;
    public static HandshakeResourceType MASTER_NAME;
    public static HandshakeResourceType NOTES;
    public static HandshakeResourceType ORGANIZATION;
    public static HandshakeResourceType ORGANIZATION_FEATURE_SET;
    public static HandshakeResourceType PARENT_HANDSHAKE;
    public HandshakeResourceType(string value);
    private static HandshakeResourceType();
    public static HandshakeResourceType FindValue(string value);
    public static HandshakeResourceType op_Implicit(string value);
}
public class Amazon.Organizations.HandshakeState : ConstantClass {
    public static HandshakeState ACCEPTED;
    public static HandshakeState CANCELED;
    public static HandshakeState DECLINED;
    public static HandshakeState EXPIRED;
    public static HandshakeState OPEN;
    public static HandshakeState REQUESTED;
    public HandshakeState(string value);
    private static HandshakeState();
    public static HandshakeState FindValue(string value);
    public static HandshakeState op_Implicit(string value);
}
public interface Amazon.Organizations.IAmazonOrganizations {
    public IOrganizationsPaginatorFactory Paginators { get; }
    public abstract virtual IOrganizationsPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AcceptHandshakeResponse> AcceptHandshakeAsync(AcceptHandshakeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachPolicyResponse> AttachPolicyAsync(AttachPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelHandshakeResponse> CancelHandshakeAsync(CancelHandshakeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CloseAccountResponse> CloseAccountAsync(CloseAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAccountResponse> CreateAccountAsync(CreateAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateGovCloudAccountResponse> CreateGovCloudAccountAsync(CreateGovCloudAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOrganizationResponse> CreateOrganizationAsync(CreateOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOrganizationalUnitResponse> CreateOrganizationalUnitAsync(CreateOrganizationalUnitRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePolicyResponse> CreatePolicyAsync(CreatePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeclineHandshakeResponse> DeclineHandshakeAsync(DeclineHandshakeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteOrganizationResponse> DeleteOrganizationAsync(DeleteOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteOrganizationalUnitResponse> DeleteOrganizationalUnitAsync(DeleteOrganizationalUnitRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePolicyResponse> DeletePolicyAsync(DeletePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterDelegatedAdministratorResponse> DeregisterDelegatedAdministratorAsync(DeregisterDelegatedAdministratorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountResponse> DescribeAccountAsync(DescribeAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCreateAccountStatusResponse> DescribeCreateAccountStatusAsync(DescribeCreateAccountStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEffectivePolicyResponse> DescribeEffectivePolicyAsync(DescribeEffectivePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeHandshakeResponse> DescribeHandshakeAsync(DescribeHandshakeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOrganizationResponse> DescribeOrganizationAsync(DescribeOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOrganizationalUnitResponse> DescribeOrganizationalUnitAsync(DescribeOrganizationalUnitRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePolicyResponse> DescribePolicyAsync(DescribePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeResourcePolicyResponse> DescribeResourcePolicyAsync(DescribeResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachPolicyResponse> DetachPolicyAsync(DetachPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableAWSServiceAccessResponse> DisableAWSServiceAccessAsync(DisableAWSServiceAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisablePolicyTypeResponse> DisablePolicyTypeAsync(DisablePolicyTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableAllFeaturesResponse> EnableAllFeaturesAsync(EnableAllFeaturesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableAWSServiceAccessResponse> EnableAWSServiceAccessAsync(EnableAWSServiceAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnablePolicyTypeResponse> EnablePolicyTypeAsync(EnablePolicyTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InviteAccountToOrganizationResponse> InviteAccountToOrganizationAsync(InviteAccountToOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LeaveOrganizationResponse> LeaveOrganizationAsync(LeaveOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccountsResponse> ListAccountsAsync(ListAccountsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccountsForParentResponse> ListAccountsForParentAsync(ListAccountsForParentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAWSServiceAccessForOrganizationResponse> ListAWSServiceAccessForOrganizationAsync(ListAWSServiceAccessForOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListChildrenResponse> ListChildrenAsync(ListChildrenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCreateAccountStatusResponse> ListCreateAccountStatusAsync(ListCreateAccountStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDelegatedAdministratorsResponse> ListDelegatedAdministratorsAsync(ListDelegatedAdministratorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDelegatedServicesForAccountResponse> ListDelegatedServicesForAccountAsync(ListDelegatedServicesForAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListHandshakesForAccountResponse> ListHandshakesForAccountAsync(ListHandshakesForAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListHandshakesForOrganizationResponse> ListHandshakesForOrganizationAsync(ListHandshakesForOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListOrganizationalUnitsForParentResponse> ListOrganizationalUnitsForParentAsync(ListOrganizationalUnitsForParentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListParentsResponse> ListParentsAsync(ListParentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPoliciesResponse> ListPoliciesAsync(ListPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPoliciesForTargetResponse> ListPoliciesForTargetAsync(ListPoliciesForTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRootsResponse> ListRootsAsync(ListRootsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTargetsForPolicyResponse> ListTargetsForPolicyAsync(ListTargetsForPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MoveAccountResponse> MoveAccountAsync(MoveAccountRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterDelegatedAdministratorResponse> RegisterDelegatedAdministratorAsync(RegisterDelegatedAdministratorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveAccountFromOrganizationResponse> RemoveAccountFromOrganizationAsync(RemoveAccountFromOrganizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateOrganizationalUnitResponse> UpdateOrganizationalUnitAsync(UpdateOrganizationalUnitRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdatePolicyResponse> UpdatePolicyAsync(UpdatePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.Organizations.AmazonOrganizationsConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.Organizations.IAMUserAccessToBilling : ConstantClass {
    public static IAMUserAccessToBilling ALLOW;
    public static IAMUserAccessToBilling DENY;
    public IAMUserAccessToBilling(string value);
    private static IAMUserAccessToBilling();
    public static IAMUserAccessToBilling FindValue(string value);
    public static IAMUserAccessToBilling op_Implicit(string value);
}
public class Amazon.Organizations.Internal.AmazonOrganizationsEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Organizations.Internal.AmazonOrganizationsEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Organizations.Internal.AmazonOrganizationsMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Organizations.InvalidInputExceptionReason : ConstantClass {
    public static InvalidInputExceptionReason DUPLICATE_TAG_KEY;
    public static InvalidInputExceptionReason IMMUTABLE_POLICY;
    public static InvalidInputExceptionReason INPUT_REQUIRED;
    public static InvalidInputExceptionReason INVALID_EMAIL_ADDRESS_TARGET;
    public static InvalidInputExceptionReason INVALID_ENUM;
    public static InvalidInputExceptionReason INVALID_ENUM_POLICY_TYPE;
    public static InvalidInputExceptionReason INVALID_FULL_NAME_TARGET;
    public static InvalidInputExceptionReason INVALID_LIST_MEMBER;
    public static InvalidInputExceptionReason INVALID_NEXT_TOKEN;
    public static InvalidInputExceptionReason INVALID_PARTY_TYPE_TARGET;
    public static InvalidInputExceptionReason INVALID_PATTERN;
    public static InvalidInputExceptionReason INVALID_PATTERN_TARGET_ID;
    public static InvalidInputExceptionReason INVALID_RESOURCE_POLICY_JSON;
    public static InvalidInputExceptionReason INVALID_ROLE_NAME;
    public static InvalidInputExceptionReason INVALID_SYNTAX_ORGANIZATION_ARN;
    public static InvalidInputExceptionReason INVALID_SYNTAX_POLICY_ID;
    public static InvalidInputExceptionReason INVALID_SYSTEM_TAGS_PARAMETER;
    public static InvalidInputExceptionReason MAX_LENGTH_EXCEEDED;
    public static InvalidInputExceptionReason MAX_LIMIT_EXCEEDED_FILTER;
    public static InvalidInputExceptionReason MAX_VALUE_EXCEEDED;
    public static InvalidInputExceptionReason MIN_LENGTH_EXCEEDED;
    public static InvalidInputExceptionReason MIN_VALUE_EXCEEDED;
    public static InvalidInputExceptionReason MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS;
    public static InvalidInputExceptionReason TARGET_NOT_SUPPORTED;
    public static InvalidInputExceptionReason UNRECOGNIZED_SERVICE_PRINCIPAL;
    public static InvalidInputExceptionReason UNSUPPORTED_ACTION_IN_RESOURCE_POLICY;
    public static InvalidInputExceptionReason UNSUPPORTED_POLICY_TYPE_IN_RESOURCE_POLICY;
    public static InvalidInputExceptionReason UNSUPPORTED_RESOURCE_IN_RESOURCE_POLICY;
    public InvalidInputExceptionReason(string value);
    private static InvalidInputExceptionReason();
    public static InvalidInputExceptionReason FindValue(string value);
    public static InvalidInputExceptionReason op_Implicit(string value);
}
public class Amazon.Organizations.Model.AcceptHandshakeRequest : AmazonOrganizationsRequest {
    private string _handshakeId;
    [AWSPropertyAttribute]
public string HandshakeId { get; public set; }
    public string get_HandshakeId();
    public void set_HandshakeId(string value);
    internal bool IsSetHandshakeId();
}
public class Amazon.Organizations.Model.AcceptHandshakeResponse : AmazonWebServiceResponse {
    private Handshake _handshake;
    public Handshake Handshake { get; public set; }
    public Handshake get_Handshake();
    public void set_Handshake(Handshake value);
    internal bool IsSetHandshake();
}
public class Amazon.Organizations.Model.AccessDeniedException : AmazonOrganizationsException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.AccessDeniedForDependencyException : AmazonOrganizationsException {
    private AccessDeniedForDependencyExceptionReason _reason;
    public AccessDeniedForDependencyExceptionReason Reason { get; public set; }
    public AccessDeniedForDependencyException(string message);
    public AccessDeniedForDependencyException(string message, Exception innerException);
    public AccessDeniedForDependencyException(Exception innerException);
    public AccessDeniedForDependencyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedForDependencyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedForDependencyExceptionReason get_Reason();
    public void set_Reason(AccessDeniedForDependencyExceptionReason value);
    internal bool IsSetReason();
}
public class Amazon.Organizations.Model.Account : object {
    private string _arn;
    private string _email;
    private string _id;
    private AccountJoinedMethod _joinedMethod;
    private Nullable`1<DateTime> _joinedTimestamp;
    private string _name;
    private AccountStatus _status;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Email { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public AccountJoinedMethod JoinedMethod { get; public set; }
    public Nullable`1<DateTime> JoinedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public AccountStatus Status { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Email();
    public void set_Email(string value);
    internal bool IsSetEmail();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public AccountJoinedMethod get_JoinedMethod();
    public void set_JoinedMethod(AccountJoinedMethod value);
    internal bool IsSetJoinedMethod();
    public Nullable`1<DateTime> get_JoinedTimestamp();
    public void set_JoinedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetJoinedTimestamp();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public AccountStatus get_Status();
    public void set_Status(AccountStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Organizations.Model.AccountAlreadyClosedException : AmazonOrganizationsException {
    public AccountAlreadyClosedException(string message);
    public AccountAlreadyClosedException(string message, Exception innerException);
    public AccountAlreadyClosedException(Exception innerException);
    public AccountAlreadyClosedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountAlreadyClosedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.AccountAlreadyRegisteredException : AmazonOrganizationsException {
    public AccountAlreadyRegisteredException(string message);
    public AccountAlreadyRegisteredException(string message, Exception innerException);
    public AccountAlreadyRegisteredException(Exception innerException);
    public AccountAlreadyRegisteredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountAlreadyRegisteredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.AccountNotFoundException : AmazonOrganizationsException {
    public AccountNotFoundException(string message);
    public AccountNotFoundException(string message, Exception innerException);
    public AccountNotFoundException(Exception innerException);
    public AccountNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.AccountNotRegisteredException : AmazonOrganizationsException {
    public AccountNotRegisteredException(string message);
    public AccountNotRegisteredException(string message, Exception innerException);
    public AccountNotRegisteredException(Exception innerException);
    public AccountNotRegisteredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountNotRegisteredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.AccountOwnerNotVerifiedException : AmazonOrganizationsException {
    public AccountOwnerNotVerifiedException(string message);
    public AccountOwnerNotVerifiedException(string message, Exception innerException);
    public AccountOwnerNotVerifiedException(Exception innerException);
    public AccountOwnerNotVerifiedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountOwnerNotVerifiedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.AlreadyInOrganizationException : AmazonOrganizationsException {
    public AlreadyInOrganizationException(string message);
    public AlreadyInOrganizationException(string message, Exception innerException);
    public AlreadyInOrganizationException(Exception innerException);
    public AlreadyInOrganizationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AlreadyInOrganizationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.AttachPolicyRequest : AmazonOrganizationsRequest {
    private string _policyId;
    private string _targetId;
    [AWSPropertyAttribute]
public string PolicyId { get; public set; }
    [AWSPropertyAttribute]
public string TargetId { get; public set; }
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
    public string get_TargetId();
    public void set_TargetId(string value);
    internal bool IsSetTargetId();
}
public class Amazon.Organizations.Model.AttachPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.AWSOrganizationsNotInUseException : AmazonOrganizationsException {
    public AWSOrganizationsNotInUseException(string message);
    public AWSOrganizationsNotInUseException(string message, Exception innerException);
    public AWSOrganizationsNotInUseException(Exception innerException);
    public AWSOrganizationsNotInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AWSOrganizationsNotInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.CancelHandshakeRequest : AmazonOrganizationsRequest {
    private string _handshakeId;
    [AWSPropertyAttribute]
public string HandshakeId { get; public set; }
    public string get_HandshakeId();
    public void set_HandshakeId(string value);
    internal bool IsSetHandshakeId();
}
public class Amazon.Organizations.Model.CancelHandshakeResponse : AmazonWebServiceResponse {
    private Handshake _handshake;
    public Handshake Handshake { get; public set; }
    public Handshake get_Handshake();
    public void set_Handshake(Handshake value);
    internal bool IsSetHandshake();
}
public class Amazon.Organizations.Model.Child : object {
    private string _id;
    private ChildType _type;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public ChildType Type { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public ChildType get_Type();
    public void set_Type(ChildType value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.ChildNotFoundException : AmazonOrganizationsException {
    public ChildNotFoundException(string message);
    public ChildNotFoundException(string message, Exception innerException);
    public ChildNotFoundException(Exception innerException);
    public ChildNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ChildNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.CloseAccountRequest : AmazonOrganizationsRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Organizations.Model.CloseAccountResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.ConcurrentModificationException : AmazonOrganizationsException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.ConflictException : AmazonOrganizationsException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.ConstraintViolationException : AmazonOrganizationsException {
    private ConstraintViolationExceptionReason _reason;
    public ConstraintViolationExceptionReason Reason { get; public set; }
    public ConstraintViolationException(string message);
    public ConstraintViolationException(string message, Exception innerException);
    public ConstraintViolationException(Exception innerException);
    public ConstraintViolationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConstraintViolationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConstraintViolationExceptionReason get_Reason();
    public void set_Reason(ConstraintViolationExceptionReason value);
    internal bool IsSetReason();
}
public class Amazon.Organizations.Model.CreateAccountRequest : AmazonOrganizationsRequest {
    private string _accountName;
    private string _email;
    private IAMUserAccessToBilling _iamUserAccessToBilling;
    private string _roleName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccountName { get; public set; }
    [AWSPropertyAttribute]
public string Email { get; public set; }
    public IAMUserAccessToBilling IamUserAccessToBilling { get; public set; }
    [AWSPropertyAttribute]
public string RoleName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_AccountName();
    public void set_AccountName(string value);
    internal bool IsSetAccountName();
    public string get_Email();
    public void set_Email(string value);
    internal bool IsSetEmail();
    public IAMUserAccessToBilling get_IamUserAccessToBilling();
    public void set_IamUserAccessToBilling(IAMUserAccessToBilling value);
    internal bool IsSetIamUserAccessToBilling();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Organizations.Model.CreateAccountResponse : AmazonWebServiceResponse {
    private CreateAccountStatus _createAccountStatus;
    public CreateAccountStatus CreateAccountStatus { get; public set; }
    public CreateAccountStatus get_CreateAccountStatus();
    public void set_CreateAccountStatus(CreateAccountStatus value);
    internal bool IsSetCreateAccountStatus();
}
public class Amazon.Organizations.Model.CreateAccountStatus : object {
    private string _accountId;
    private string _accountName;
    private Nullable`1<DateTime> _completedTimestamp;
    private CreateAccountFailureReason _failureReason;
    private string _govCloudAccountId;
    private string _id;
    private Nullable`1<DateTime> _requestedTimestamp;
    private CreateAccountState _state;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string AccountName { get; public set; }
    public Nullable`1<DateTime> CompletedTimestamp { get; public set; }
    public CreateAccountFailureReason FailureReason { get; public set; }
    [AWSPropertyAttribute]
public string GovCloudAccountId { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<DateTime> RequestedTimestamp { get; public set; }
    public CreateAccountState State { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_AccountName();
    public void set_AccountName(string value);
    internal bool IsSetAccountName();
    public Nullable`1<DateTime> get_CompletedTimestamp();
    public void set_CompletedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCompletedTimestamp();
    public CreateAccountFailureReason get_FailureReason();
    public void set_FailureReason(CreateAccountFailureReason value);
    internal bool IsSetFailureReason();
    public string get_GovCloudAccountId();
    public void set_GovCloudAccountId(string value);
    internal bool IsSetGovCloudAccountId();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_RequestedTimestamp();
    public void set_RequestedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetRequestedTimestamp();
    public CreateAccountState get_State();
    public void set_State(CreateAccountState value);
    internal bool IsSetState();
}
public class Amazon.Organizations.Model.CreateAccountStatusNotFoundException : AmazonOrganizationsException {
    public CreateAccountStatusNotFoundException(string message);
    public CreateAccountStatusNotFoundException(string message, Exception innerException);
    public CreateAccountStatusNotFoundException(Exception innerException);
    public CreateAccountStatusNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CreateAccountStatusNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.CreateGovCloudAccountRequest : AmazonOrganizationsRequest {
    private string _accountName;
    private string _email;
    private IAMUserAccessToBilling _iamUserAccessToBilling;
    private string _roleName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccountName { get; public set; }
    [AWSPropertyAttribute]
public string Email { get; public set; }
    public IAMUserAccessToBilling IamUserAccessToBilling { get; public set; }
    [AWSPropertyAttribute]
public string RoleName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_AccountName();
    public void set_AccountName(string value);
    internal bool IsSetAccountName();
    public string get_Email();
    public void set_Email(string value);
    internal bool IsSetEmail();
    public IAMUserAccessToBilling get_IamUserAccessToBilling();
    public void set_IamUserAccessToBilling(IAMUserAccessToBilling value);
    internal bool IsSetIamUserAccessToBilling();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Organizations.Model.CreateGovCloudAccountResponse : AmazonWebServiceResponse {
    private CreateAccountStatus _createAccountStatus;
    public CreateAccountStatus CreateAccountStatus { get; public set; }
    public CreateAccountStatus get_CreateAccountStatus();
    public void set_CreateAccountStatus(CreateAccountStatus value);
    internal bool IsSetCreateAccountStatus();
}
public class Amazon.Organizations.Model.CreateOrganizationalUnitRequest : AmazonOrganizationsRequest {
    private string _name;
    private string _parentId;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string ParentId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_ParentId();
    public void set_ParentId(string value);
    internal bool IsSetParentId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Organizations.Model.CreateOrganizationalUnitResponse : AmazonWebServiceResponse {
    private OrganizationalUnit _organizationalUnit;
    public OrganizationalUnit OrganizationalUnit { get; public set; }
    public OrganizationalUnit get_OrganizationalUnit();
    public void set_OrganizationalUnit(OrganizationalUnit value);
    internal bool IsSetOrganizationalUnit();
}
public class Amazon.Organizations.Model.CreateOrganizationRequest : AmazonOrganizationsRequest {
    private OrganizationFeatureSet _featureSet;
    public OrganizationFeatureSet FeatureSet { get; public set; }
    public OrganizationFeatureSet get_FeatureSet();
    public void set_FeatureSet(OrganizationFeatureSet value);
    internal bool IsSetFeatureSet();
}
public class Amazon.Organizations.Model.CreateOrganizationResponse : AmazonWebServiceResponse {
    private Organization _organization;
    public Organization Organization { get; public set; }
    public Organization get_Organization();
    public void set_Organization(Organization value);
    internal bool IsSetOrganization();
}
public class Amazon.Organizations.Model.CreatePolicyRequest : AmazonOrganizationsRequest {
    private string _content;
    private string _description;
    private string _name;
    private List`1<Tag> _tags;
    private PolicyType _type;
    [AWSPropertyAttribute]
public string Content { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public PolicyType Type { get; public set; }
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public PolicyType get_Type();
    public void set_Type(PolicyType value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.CreatePolicyResponse : AmazonWebServiceResponse {
    private Policy _policy;
    public Policy Policy { get; public set; }
    public Policy get_Policy();
    public void set_Policy(Policy value);
    internal bool IsSetPolicy();
}
public class Amazon.Organizations.Model.DeclineHandshakeRequest : AmazonOrganizationsRequest {
    private string _handshakeId;
    [AWSPropertyAttribute]
public string HandshakeId { get; public set; }
    public string get_HandshakeId();
    public void set_HandshakeId(string value);
    internal bool IsSetHandshakeId();
}
public class Amazon.Organizations.Model.DeclineHandshakeResponse : AmazonWebServiceResponse {
    private Handshake _handshake;
    public Handshake Handshake { get; public set; }
    public Handshake get_Handshake();
    public void set_Handshake(Handshake value);
    internal bool IsSetHandshake();
}
public class Amazon.Organizations.Model.DelegatedAdministrator : object {
    private string _arn;
    private Nullable`1<DateTime> _delegationEnabledDate;
    private string _email;
    private string _id;
    private AccountJoinedMethod _joinedMethod;
    private Nullable`1<DateTime> _joinedTimestamp;
    private string _name;
    private AccountStatus _status;
    public string Arn { get; public set; }
    public Nullable`1<DateTime> DelegationEnabledDate { get; public set; }
    [AWSPropertyAttribute]
public string Email { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public AccountJoinedMethod JoinedMethod { get; public set; }
    public Nullable`1<DateTime> JoinedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public AccountStatus Status { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_DelegationEnabledDate();
    public void set_DelegationEnabledDate(Nullable`1<DateTime> value);
    internal bool IsSetDelegationEnabledDate();
    public string get_Email();
    public void set_Email(string value);
    internal bool IsSetEmail();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public AccountJoinedMethod get_JoinedMethod();
    public void set_JoinedMethod(AccountJoinedMethod value);
    internal bool IsSetJoinedMethod();
    public Nullable`1<DateTime> get_JoinedTimestamp();
    public void set_JoinedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetJoinedTimestamp();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public AccountStatus get_Status();
    public void set_Status(AccountStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Organizations.Model.DelegatedService : object {
    private Nullable`1<DateTime> _delegationEnabledDate;
    private string _servicePrincipal;
    public Nullable`1<DateTime> DelegationEnabledDate { get; public set; }
    [AWSPropertyAttribute]
public string ServicePrincipal { get; public set; }
    public Nullable`1<DateTime> get_DelegationEnabledDate();
    public void set_DelegationEnabledDate(Nullable`1<DateTime> value);
    internal bool IsSetDelegationEnabledDate();
    public string get_ServicePrincipal();
    public void set_ServicePrincipal(string value);
    internal bool IsSetServicePrincipal();
}
public class Amazon.Organizations.Model.DeleteOrganizationalUnitRequest : AmazonOrganizationsRequest {
    private string _organizationalUnitId;
    [AWSPropertyAttribute]
public string OrganizationalUnitId { get; public set; }
    public string get_OrganizationalUnitId();
    public void set_OrganizationalUnitId(string value);
    internal bool IsSetOrganizationalUnitId();
}
public class Amazon.Organizations.Model.DeleteOrganizationalUnitResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.DeleteOrganizationRequest : AmazonOrganizationsRequest {
}
public class Amazon.Organizations.Model.DeleteOrganizationResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.DeletePolicyRequest : AmazonOrganizationsRequest {
    private string _policyId;
    [AWSPropertyAttribute]
public string PolicyId { get; public set; }
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
}
public class Amazon.Organizations.Model.DeletePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.DeleteResourcePolicyRequest : AmazonOrganizationsRequest {
}
public class Amazon.Organizations.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.DeregisterDelegatedAdministratorRequest : AmazonOrganizationsRequest {
    private string _accountId;
    private string _servicePrincipal;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ServicePrincipal { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ServicePrincipal();
    public void set_ServicePrincipal(string value);
    internal bool IsSetServicePrincipal();
}
public class Amazon.Organizations.Model.DeregisterDelegatedAdministratorResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.DescribeAccountRequest : AmazonOrganizationsRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Organizations.Model.DescribeAccountResponse : AmazonWebServiceResponse {
    private Account _account;
    public Account Account { get; public set; }
    public Account get_Account();
    public void set_Account(Account value);
    internal bool IsSetAccount();
}
public class Amazon.Organizations.Model.DescribeCreateAccountStatusRequest : AmazonOrganizationsRequest {
    private string _createAccountRequestId;
    [AWSPropertyAttribute]
public string CreateAccountRequestId { get; public set; }
    public string get_CreateAccountRequestId();
    public void set_CreateAccountRequestId(string value);
    internal bool IsSetCreateAccountRequestId();
}
public class Amazon.Organizations.Model.DescribeCreateAccountStatusResponse : AmazonWebServiceResponse {
    private CreateAccountStatus _createAccountStatus;
    public CreateAccountStatus CreateAccountStatus { get; public set; }
    public CreateAccountStatus get_CreateAccountStatus();
    public void set_CreateAccountStatus(CreateAccountStatus value);
    internal bool IsSetCreateAccountStatus();
}
public class Amazon.Organizations.Model.DescribeEffectivePolicyRequest : AmazonOrganizationsRequest {
    private EffectivePolicyType _policyType;
    private string _targetId;
    [AWSPropertyAttribute]
public EffectivePolicyType PolicyType { get; public set; }
    [AWSPropertyAttribute]
public string TargetId { get; public set; }
    public EffectivePolicyType get_PolicyType();
    public void set_PolicyType(EffectivePolicyType value);
    internal bool IsSetPolicyType();
    public string get_TargetId();
    public void set_TargetId(string value);
    internal bool IsSetTargetId();
}
public class Amazon.Organizations.Model.DescribeEffectivePolicyResponse : AmazonWebServiceResponse {
    private EffectivePolicy _effectivePolicy;
    public EffectivePolicy EffectivePolicy { get; public set; }
    public EffectivePolicy get_EffectivePolicy();
    public void set_EffectivePolicy(EffectivePolicy value);
    internal bool IsSetEffectivePolicy();
}
public class Amazon.Organizations.Model.DescribeHandshakeRequest : AmazonOrganizationsRequest {
    private string _handshakeId;
    [AWSPropertyAttribute]
public string HandshakeId { get; public set; }
    public string get_HandshakeId();
    public void set_HandshakeId(string value);
    internal bool IsSetHandshakeId();
}
public class Amazon.Organizations.Model.DescribeHandshakeResponse : AmazonWebServiceResponse {
    private Handshake _handshake;
    public Handshake Handshake { get; public set; }
    public Handshake get_Handshake();
    public void set_Handshake(Handshake value);
    internal bool IsSetHandshake();
}
public class Amazon.Organizations.Model.DescribeOrganizationalUnitRequest : AmazonOrganizationsRequest {
    private string _organizationalUnitId;
    [AWSPropertyAttribute]
public string OrganizationalUnitId { get; public set; }
    public string get_OrganizationalUnitId();
    public void set_OrganizationalUnitId(string value);
    internal bool IsSetOrganizationalUnitId();
}
public class Amazon.Organizations.Model.DescribeOrganizationalUnitResponse : AmazonWebServiceResponse {
    private OrganizationalUnit _organizationalUnit;
    public OrganizationalUnit OrganizationalUnit { get; public set; }
    public OrganizationalUnit get_OrganizationalUnit();
    public void set_OrganizationalUnit(OrganizationalUnit value);
    internal bool IsSetOrganizationalUnit();
}
public class Amazon.Organizations.Model.DescribeOrganizationRequest : AmazonOrganizationsRequest {
}
public class Amazon.Organizations.Model.DescribeOrganizationResponse : AmazonWebServiceResponse {
    private Organization _organization;
    public Organization Organization { get; public set; }
    public Organization get_Organization();
    public void set_Organization(Organization value);
    internal bool IsSetOrganization();
}
public class Amazon.Organizations.Model.DescribePolicyRequest : AmazonOrganizationsRequest {
    private string _policyId;
    [AWSPropertyAttribute]
public string PolicyId { get; public set; }
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
}
public class Amazon.Organizations.Model.DescribePolicyResponse : AmazonWebServiceResponse {
    private Policy _policy;
    public Policy Policy { get; public set; }
    public Policy get_Policy();
    public void set_Policy(Policy value);
    internal bool IsSetPolicy();
}
public class Amazon.Organizations.Model.DescribeResourcePolicyRequest : AmazonOrganizationsRequest {
}
public class Amazon.Organizations.Model.DescribeResourcePolicyResponse : AmazonWebServiceResponse {
    private ResourcePolicy _resourcePolicy;
    public ResourcePolicy ResourcePolicy { get; public set; }
    public ResourcePolicy get_ResourcePolicy();
    public void set_ResourcePolicy(ResourcePolicy value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.Organizations.Model.DestinationParentNotFoundException : AmazonOrganizationsException {
    public DestinationParentNotFoundException(string message);
    public DestinationParentNotFoundException(string message, Exception innerException);
    public DestinationParentNotFoundException(Exception innerException);
    public DestinationParentNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DestinationParentNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.DetachPolicyRequest : AmazonOrganizationsRequest {
    private string _policyId;
    private string _targetId;
    [AWSPropertyAttribute]
public string PolicyId { get; public set; }
    [AWSPropertyAttribute]
public string TargetId { get; public set; }
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
    public string get_TargetId();
    public void set_TargetId(string value);
    internal bool IsSetTargetId();
}
public class Amazon.Organizations.Model.DetachPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.DisableAWSServiceAccessRequest : AmazonOrganizationsRequest {
    private string _servicePrincipal;
    [AWSPropertyAttribute]
public string ServicePrincipal { get; public set; }
    public string get_ServicePrincipal();
    public void set_ServicePrincipal(string value);
    internal bool IsSetServicePrincipal();
}
public class Amazon.Organizations.Model.DisableAWSServiceAccessResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.DisablePolicyTypeRequest : AmazonOrganizationsRequest {
    private PolicyType _policyType;
    private string _rootId;
    [AWSPropertyAttribute]
public PolicyType PolicyType { get; public set; }
    [AWSPropertyAttribute]
public string RootId { get; public set; }
    public PolicyType get_PolicyType();
    public void set_PolicyType(PolicyType value);
    internal bool IsSetPolicyType();
    public string get_RootId();
    public void set_RootId(string value);
    internal bool IsSetRootId();
}
public class Amazon.Organizations.Model.DisablePolicyTypeResponse : AmazonWebServiceResponse {
    private Root _root;
    public Root Root { get; public set; }
    public Root get_Root();
    public void set_Root(Root value);
    internal bool IsSetRoot();
}
public class Amazon.Organizations.Model.DuplicateAccountException : AmazonOrganizationsException {
    public DuplicateAccountException(string message);
    public DuplicateAccountException(string message, Exception innerException);
    public DuplicateAccountException(Exception innerException);
    public DuplicateAccountException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateAccountException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.DuplicateHandshakeException : AmazonOrganizationsException {
    public DuplicateHandshakeException(string message);
    public DuplicateHandshakeException(string message, Exception innerException);
    public DuplicateHandshakeException(Exception innerException);
    public DuplicateHandshakeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateHandshakeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.DuplicateOrganizationalUnitException : AmazonOrganizationsException {
    public DuplicateOrganizationalUnitException(string message);
    public DuplicateOrganizationalUnitException(string message, Exception innerException);
    public DuplicateOrganizationalUnitException(Exception innerException);
    public DuplicateOrganizationalUnitException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateOrganizationalUnitException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.DuplicatePolicyAttachmentException : AmazonOrganizationsException {
    public DuplicatePolicyAttachmentException(string message);
    public DuplicatePolicyAttachmentException(string message, Exception innerException);
    public DuplicatePolicyAttachmentException(Exception innerException);
    public DuplicatePolicyAttachmentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicatePolicyAttachmentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.DuplicatePolicyException : AmazonOrganizationsException {
    public DuplicatePolicyException(string message);
    public DuplicatePolicyException(string message, Exception innerException);
    public DuplicatePolicyException(Exception innerException);
    public DuplicatePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicatePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.EffectivePolicy : object {
    private Nullable`1<DateTime> _lastUpdatedTimestamp;
    private string _policyContent;
    private EffectivePolicyType _policyType;
    private string _targetId;
    public Nullable`1<DateTime> LastUpdatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string PolicyContent { get; public set; }
    public EffectivePolicyType PolicyType { get; public set; }
    [AWSPropertyAttribute]
public string TargetId { get; public set; }
    public Nullable`1<DateTime> get_LastUpdatedTimestamp();
    public void set_LastUpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedTimestamp();
    public string get_PolicyContent();
    public void set_PolicyContent(string value);
    internal bool IsSetPolicyContent();
    public EffectivePolicyType get_PolicyType();
    public void set_PolicyType(EffectivePolicyType value);
    internal bool IsSetPolicyType();
    public string get_TargetId();
    public void set_TargetId(string value);
    internal bool IsSetTargetId();
}
public class Amazon.Organizations.Model.EffectivePolicyNotFoundException : AmazonOrganizationsException {
    public EffectivePolicyNotFoundException(string message);
    public EffectivePolicyNotFoundException(string message, Exception innerException);
    public EffectivePolicyNotFoundException(Exception innerException);
    public EffectivePolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EffectivePolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.EnableAllFeaturesRequest : AmazonOrganizationsRequest {
}
public class Amazon.Organizations.Model.EnableAllFeaturesResponse : AmazonWebServiceResponse {
    private Handshake _handshake;
    public Handshake Handshake { get; public set; }
    public Handshake get_Handshake();
    public void set_Handshake(Handshake value);
    internal bool IsSetHandshake();
}
public class Amazon.Organizations.Model.EnableAWSServiceAccessRequest : AmazonOrganizationsRequest {
    private string _servicePrincipal;
    [AWSPropertyAttribute]
public string ServicePrincipal { get; public set; }
    public string get_ServicePrincipal();
    public void set_ServicePrincipal(string value);
    internal bool IsSetServicePrincipal();
}
public class Amazon.Organizations.Model.EnableAWSServiceAccessResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.EnabledServicePrincipal : object {
    private Nullable`1<DateTime> _dateEnabled;
    private string _servicePrincipal;
    public Nullable`1<DateTime> DateEnabled { get; public set; }
    [AWSPropertyAttribute]
public string ServicePrincipal { get; public set; }
    public Nullable`1<DateTime> get_DateEnabled();
    public void set_DateEnabled(Nullable`1<DateTime> value);
    internal bool IsSetDateEnabled();
    public string get_ServicePrincipal();
    public void set_ServicePrincipal(string value);
    internal bool IsSetServicePrincipal();
}
public class Amazon.Organizations.Model.EnablePolicyTypeRequest : AmazonOrganizationsRequest {
    private PolicyType _policyType;
    private string _rootId;
    [AWSPropertyAttribute]
public PolicyType PolicyType { get; public set; }
    [AWSPropertyAttribute]
public string RootId { get; public set; }
    public PolicyType get_PolicyType();
    public void set_PolicyType(PolicyType value);
    internal bool IsSetPolicyType();
    public string get_RootId();
    public void set_RootId(string value);
    internal bool IsSetRootId();
}
public class Amazon.Organizations.Model.EnablePolicyTypeResponse : AmazonWebServiceResponse {
    private Root _root;
    public Root Root { get; public set; }
    public Root get_Root();
    public void set_Root(Root value);
    internal bool IsSetRoot();
}
public class Amazon.Organizations.Model.FinalizingOrganizationException : AmazonOrganizationsException {
    public FinalizingOrganizationException(string message);
    public FinalizingOrganizationException(string message, Exception innerException);
    public FinalizingOrganizationException(Exception innerException);
    public FinalizingOrganizationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FinalizingOrganizationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.Handshake : object {
    private ActionType _action;
    private string _arn;
    private Nullable`1<DateTime> _expirationTimestamp;
    private string _id;
    private List`1<HandshakeParty> _parties;
    private Nullable`1<DateTime> _requestedTimestamp;
    private List`1<HandshakeResource> _resources;
    private HandshakeState _state;
    public ActionType Action { get; public set; }
    public string Arn { get; public set; }
    public Nullable`1<DateTime> ExpirationTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public List`1<HandshakeParty> Parties { get; public set; }
    public Nullable`1<DateTime> RequestedTimestamp { get; public set; }
    public List`1<HandshakeResource> Resources { get; public set; }
    public HandshakeState State { get; public set; }
    public ActionType get_Action();
    public void set_Action(ActionType value);
    internal bool IsSetAction();
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_ExpirationTimestamp();
    public void set_ExpirationTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetExpirationTimestamp();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public List`1<HandshakeParty> get_Parties();
    public void set_Parties(List`1<HandshakeParty> value);
    internal bool IsSetParties();
    public Nullable`1<DateTime> get_RequestedTimestamp();
    public void set_RequestedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetRequestedTimestamp();
    public List`1<HandshakeResource> get_Resources();
    public void set_Resources(List`1<HandshakeResource> value);
    internal bool IsSetResources();
    public HandshakeState get_State();
    public void set_State(HandshakeState value);
    internal bool IsSetState();
}
public class Amazon.Organizations.Model.HandshakeAlreadyInStateException : AmazonOrganizationsException {
    public HandshakeAlreadyInStateException(string message);
    public HandshakeAlreadyInStateException(string message, Exception innerException);
    public HandshakeAlreadyInStateException(Exception innerException);
    public HandshakeAlreadyInStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public HandshakeAlreadyInStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.HandshakeConstraintViolationException : AmazonOrganizationsException {
    private HandshakeConstraintViolationExceptionReason _reason;
    public HandshakeConstraintViolationExceptionReason Reason { get; public set; }
    public HandshakeConstraintViolationException(string message);
    public HandshakeConstraintViolationException(string message, Exception innerException);
    public HandshakeConstraintViolationException(Exception innerException);
    public HandshakeConstraintViolationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public HandshakeConstraintViolationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public HandshakeConstraintViolationExceptionReason get_Reason();
    public void set_Reason(HandshakeConstraintViolationExceptionReason value);
    internal bool IsSetReason();
}
public class Amazon.Organizations.Model.HandshakeFilter : object {
    private ActionType _actionType;
    private string _parentHandshakeId;
    public ActionType ActionType { get; public set; }
    [AWSPropertyAttribute]
public string ParentHandshakeId { get; public set; }
    public ActionType get_ActionType();
    public void set_ActionType(ActionType value);
    internal bool IsSetActionType();
    public string get_ParentHandshakeId();
    public void set_ParentHandshakeId(string value);
    internal bool IsSetParentHandshakeId();
}
public class Amazon.Organizations.Model.HandshakeNotFoundException : AmazonOrganizationsException {
    public HandshakeNotFoundException(string message);
    public HandshakeNotFoundException(string message, Exception innerException);
    public HandshakeNotFoundException(Exception innerException);
    public HandshakeNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public HandshakeNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.HandshakeParty : object {
    private string _id;
    private HandshakePartyType _type;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public HandshakePartyType Type { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public HandshakePartyType get_Type();
    public void set_Type(HandshakePartyType value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.HandshakeResource : object {
    private List`1<HandshakeResource> _resources;
    private HandshakeResourceType _type;
    private string _value;
    public List`1<HandshakeResource> Resources { get; public set; }
    public HandshakeResourceType Type { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public List`1<HandshakeResource> get_Resources();
    public void set_Resources(List`1<HandshakeResource> value);
    internal bool IsSetResources();
    public HandshakeResourceType get_Type();
    public void set_Type(HandshakeResourceType value);
    internal bool IsSetType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public interface Amazon.Organizations.Model.IListAccountsForParentPaginator {
    public IPaginatedEnumerable`1<ListAccountsForParentResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccountsForParentResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListAccountsPaginator {
    public IPaginatedEnumerable`1<ListAccountsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccountsResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListAWSServiceAccessForOrganizationPaginator {
    public IPaginatedEnumerable`1<ListAWSServiceAccessForOrganizationResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAWSServiceAccessForOrganizationResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListChildrenPaginator {
    public IPaginatedEnumerable`1<ListChildrenResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListChildrenResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListCreateAccountStatusPaginator {
    public IPaginatedEnumerable`1<ListCreateAccountStatusResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCreateAccountStatusResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListDelegatedAdministratorsPaginator {
    public IPaginatedEnumerable`1<ListDelegatedAdministratorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DelegatedAdministrator> DelegatedAdministrators { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDelegatedAdministratorsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DelegatedAdministrator> get_DelegatedAdministrators();
}
public interface Amazon.Organizations.Model.IListDelegatedServicesForAccountPaginator {
    public IPaginatedEnumerable`1<ListDelegatedServicesForAccountResponse> Responses { get; }
    public IPaginatedEnumerable`1<DelegatedService> DelegatedServices { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDelegatedServicesForAccountResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DelegatedService> get_DelegatedServices();
}
public interface Amazon.Organizations.Model.IListHandshakesForAccountPaginator {
    public IPaginatedEnumerable`1<ListHandshakesForAccountResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListHandshakesForAccountResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListHandshakesForOrganizationPaginator {
    public IPaginatedEnumerable`1<ListHandshakesForOrganizationResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListHandshakesForOrganizationResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListOrganizationalUnitsForParentPaginator {
    public IPaginatedEnumerable`1<ListOrganizationalUnitsForParentResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListOrganizationalUnitsForParentResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListParentsPaginator {
    public IPaginatedEnumerable`1<ListParentsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListParentsResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListPoliciesForTargetPaginator {
    public IPaginatedEnumerable`1<ListPoliciesForTargetResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListPoliciesForTargetResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListPoliciesPaginator {
    public IPaginatedEnumerable`1<ListPoliciesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListPoliciesResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListRootsPaginator {
    public IPaginatedEnumerable`1<ListRootsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListRootsResponse> get_Responses();
}
public interface Amazon.Organizations.Model.IListTagsForResourcePaginator {
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Tag> get_Tags();
}
public interface Amazon.Organizations.Model.IListTargetsForPolicyPaginator {
    public IPaginatedEnumerable`1<ListTargetsForPolicyResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTargetsForPolicyResponse> get_Responses();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AcceptHandshakeRequestMarshaller : object {
    private static AcceptHandshakeRequestMarshaller _instance;
    public static AcceptHandshakeRequestMarshaller Instance { get; }
    private static AcceptHandshakeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptHandshakeRequest publicRequest);
    internal static AcceptHandshakeRequestMarshaller GetInstance();
    public static AcceptHandshakeRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AcceptHandshakeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AcceptHandshakeResponseUnmarshaller _instance;
    public static AcceptHandshakeResponseUnmarshaller Instance { get; }
    private static AcceptHandshakeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptHandshakeResponseUnmarshaller GetInstance();
    public static AcceptHandshakeResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccessDeniedForDependencyExceptionUnmarshaller : object {
    private static AccessDeniedForDependencyExceptionUnmarshaller _instance;
    public static AccessDeniedForDependencyExceptionUnmarshaller Instance { get; }
    private static AccessDeniedForDependencyExceptionUnmarshaller();
    public sealed virtual AccessDeniedForDependencyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedForDependencyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedForDependencyExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccountAlreadyClosedExceptionUnmarshaller : object {
    private static AccountAlreadyClosedExceptionUnmarshaller _instance;
    public static AccountAlreadyClosedExceptionUnmarshaller Instance { get; }
    private static AccountAlreadyClosedExceptionUnmarshaller();
    public sealed virtual AccountAlreadyClosedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountAlreadyClosedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountAlreadyClosedExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccountAlreadyRegisteredExceptionUnmarshaller : object {
    private static AccountAlreadyRegisteredExceptionUnmarshaller _instance;
    public static AccountAlreadyRegisteredExceptionUnmarshaller Instance { get; }
    private static AccountAlreadyRegisteredExceptionUnmarshaller();
    public sealed virtual AccountAlreadyRegisteredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountAlreadyRegisteredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountAlreadyRegisteredExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccountNotFoundExceptionUnmarshaller : object {
    private static AccountNotFoundExceptionUnmarshaller _instance;
    public static AccountNotFoundExceptionUnmarshaller Instance { get; }
    private static AccountNotFoundExceptionUnmarshaller();
    public sealed virtual AccountNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccountNotRegisteredExceptionUnmarshaller : object {
    private static AccountNotRegisteredExceptionUnmarshaller _instance;
    public static AccountNotRegisteredExceptionUnmarshaller Instance { get; }
    private static AccountNotRegisteredExceptionUnmarshaller();
    public sealed virtual AccountNotRegisteredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountNotRegisteredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountNotRegisteredExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccountOwnerNotVerifiedExceptionUnmarshaller : object {
    private static AccountOwnerNotVerifiedExceptionUnmarshaller _instance;
    public static AccountOwnerNotVerifiedExceptionUnmarshaller Instance { get; }
    private static AccountOwnerNotVerifiedExceptionUnmarshaller();
    public sealed virtual AccountOwnerNotVerifiedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountOwnerNotVerifiedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountOwnerNotVerifiedExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AccountUnmarshaller : object {
    private static AccountUnmarshaller _instance;
    public static AccountUnmarshaller Instance { get; }
    private static AccountUnmarshaller();
    private sealed virtual override Account Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Account,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Account Unmarshall(JsonUnmarshallerContext context);
    public static AccountUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AlreadyInOrganizationExceptionUnmarshaller : object {
    private static AlreadyInOrganizationExceptionUnmarshaller _instance;
    public static AlreadyInOrganizationExceptionUnmarshaller Instance { get; }
    private static AlreadyInOrganizationExceptionUnmarshaller();
    public sealed virtual AlreadyInOrganizationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AlreadyInOrganizationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AlreadyInOrganizationExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AttachPolicyRequestMarshaller : object {
    private static AttachPolicyRequestMarshaller _instance;
    public static AttachPolicyRequestMarshaller Instance { get; }
    private static AttachPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachPolicyRequest publicRequest);
    internal static AttachPolicyRequestMarshaller GetInstance();
    public static AttachPolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AttachPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AttachPolicyResponseUnmarshaller _instance;
    public static AttachPolicyResponseUnmarshaller Instance { get; }
    private static AttachPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachPolicyResponseUnmarshaller GetInstance();
    public static AttachPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.AWSOrganizationsNotInUseExceptionUnmarshaller : object {
    private static AWSOrganizationsNotInUseExceptionUnmarshaller _instance;
    public static AWSOrganizationsNotInUseExceptionUnmarshaller Instance { get; }
    private static AWSOrganizationsNotInUseExceptionUnmarshaller();
    public sealed virtual AWSOrganizationsNotInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AWSOrganizationsNotInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AWSOrganizationsNotInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CancelHandshakeRequestMarshaller : object {
    private static CancelHandshakeRequestMarshaller _instance;
    public static CancelHandshakeRequestMarshaller Instance { get; }
    private static CancelHandshakeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelHandshakeRequest publicRequest);
    internal static CancelHandshakeRequestMarshaller GetInstance();
    public static CancelHandshakeRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CancelHandshakeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelHandshakeResponseUnmarshaller _instance;
    public static CancelHandshakeResponseUnmarshaller Instance { get; }
    private static CancelHandshakeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelHandshakeResponseUnmarshaller GetInstance();
    public static CancelHandshakeResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ChildNotFoundExceptionUnmarshaller : object {
    private static ChildNotFoundExceptionUnmarshaller _instance;
    public static ChildNotFoundExceptionUnmarshaller Instance { get; }
    private static ChildNotFoundExceptionUnmarshaller();
    public sealed virtual ChildNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ChildNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ChildNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ChildUnmarshaller : object {
    private static ChildUnmarshaller _instance;
    public static ChildUnmarshaller Instance { get; }
    private static ChildUnmarshaller();
    private sealed virtual override Child Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Child,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Child Unmarshall(JsonUnmarshallerContext context);
    public static ChildUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CloseAccountRequestMarshaller : object {
    private static CloseAccountRequestMarshaller _instance;
    public static CloseAccountRequestMarshaller Instance { get; }
    private static CloseAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CloseAccountRequest publicRequest);
    internal static CloseAccountRequestMarshaller GetInstance();
    public static CloseAccountRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CloseAccountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CloseAccountResponseUnmarshaller _instance;
    public static CloseAccountResponseUnmarshaller Instance { get; }
    private static CloseAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CloseAccountResponseUnmarshaller GetInstance();
    public static CloseAccountResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ConstraintViolationExceptionUnmarshaller : object {
    private static ConstraintViolationExceptionUnmarshaller _instance;
    public static ConstraintViolationExceptionUnmarshaller Instance { get; }
    private static ConstraintViolationExceptionUnmarshaller();
    public sealed virtual ConstraintViolationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConstraintViolationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConstraintViolationExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateAccountRequestMarshaller : object {
    private static CreateAccountRequestMarshaller _instance;
    public static CreateAccountRequestMarshaller Instance { get; }
    private static CreateAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccountRequest publicRequest);
    internal static CreateAccountRequestMarshaller GetInstance();
    public static CreateAccountRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateAccountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAccountResponseUnmarshaller _instance;
    public static CreateAccountResponseUnmarshaller Instance { get; }
    private static CreateAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccountResponseUnmarshaller GetInstance();
    public static CreateAccountResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateAccountStatusNotFoundExceptionUnmarshaller : object {
    private static CreateAccountStatusNotFoundExceptionUnmarshaller _instance;
    public static CreateAccountStatusNotFoundExceptionUnmarshaller Instance { get; }
    private static CreateAccountStatusNotFoundExceptionUnmarshaller();
    public sealed virtual CreateAccountStatusNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CreateAccountStatusNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CreateAccountStatusNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateAccountStatusUnmarshaller : object {
    private static CreateAccountStatusUnmarshaller _instance;
    public static CreateAccountStatusUnmarshaller Instance { get; }
    private static CreateAccountStatusUnmarshaller();
    private sealed virtual override CreateAccountStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.CreateAccountStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateAccountStatus Unmarshall(JsonUnmarshallerContext context);
    public static CreateAccountStatusUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateGovCloudAccountRequestMarshaller : object {
    private static CreateGovCloudAccountRequestMarshaller _instance;
    public static CreateGovCloudAccountRequestMarshaller Instance { get; }
    private static CreateGovCloudAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateGovCloudAccountRequest publicRequest);
    internal static CreateGovCloudAccountRequestMarshaller GetInstance();
    public static CreateGovCloudAccountRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateGovCloudAccountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateGovCloudAccountResponseUnmarshaller _instance;
    public static CreateGovCloudAccountResponseUnmarshaller Instance { get; }
    private static CreateGovCloudAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateGovCloudAccountResponseUnmarshaller GetInstance();
    public static CreateGovCloudAccountResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateOrganizationalUnitRequestMarshaller : object {
    private static CreateOrganizationalUnitRequestMarshaller _instance;
    public static CreateOrganizationalUnitRequestMarshaller Instance { get; }
    private static CreateOrganizationalUnitRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOrganizationalUnitRequest publicRequest);
    internal static CreateOrganizationalUnitRequestMarshaller GetInstance();
    public static CreateOrganizationalUnitRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateOrganizationalUnitResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateOrganizationalUnitResponseUnmarshaller _instance;
    public static CreateOrganizationalUnitResponseUnmarshaller Instance { get; }
    private static CreateOrganizationalUnitResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOrganizationalUnitResponseUnmarshaller GetInstance();
    public static CreateOrganizationalUnitResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateOrganizationRequestMarshaller : object {
    private static CreateOrganizationRequestMarshaller _instance;
    public static CreateOrganizationRequestMarshaller Instance { get; }
    private static CreateOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOrganizationRequest publicRequest);
    internal static CreateOrganizationRequestMarshaller GetInstance();
    public static CreateOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreateOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateOrganizationResponseUnmarshaller _instance;
    public static CreateOrganizationResponseUnmarshaller Instance { get; }
    private static CreateOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOrganizationResponseUnmarshaller GetInstance();
    public static CreateOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller : object {
    private static CreatePolicyRequestMarshaller _instance;
    public static CreatePolicyRequestMarshaller Instance { get; }
    private static CreatePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePolicyRequest publicRequest);
    internal static CreatePolicyRequestMarshaller GetInstance();
    public static CreatePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreatePolicyResponseUnmarshaller _instance;
    public static CreatePolicyResponseUnmarshaller Instance { get; }
    private static CreatePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePolicyResponseUnmarshaller GetInstance();
    public static CreatePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeclineHandshakeRequestMarshaller : object {
    private static DeclineHandshakeRequestMarshaller _instance;
    public static DeclineHandshakeRequestMarshaller Instance { get; }
    private static DeclineHandshakeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeclineHandshakeRequest publicRequest);
    internal static DeclineHandshakeRequestMarshaller GetInstance();
    public static DeclineHandshakeRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeclineHandshakeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeclineHandshakeResponseUnmarshaller _instance;
    public static DeclineHandshakeResponseUnmarshaller Instance { get; }
    private static DeclineHandshakeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeclineHandshakeResponseUnmarshaller GetInstance();
    public static DeclineHandshakeResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DelegatedAdministratorUnmarshaller : object {
    private static DelegatedAdministratorUnmarshaller _instance;
    public static DelegatedAdministratorUnmarshaller Instance { get; }
    private static DelegatedAdministratorUnmarshaller();
    private sealed virtual override DelegatedAdministrator Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.DelegatedAdministrator,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DelegatedAdministrator Unmarshall(JsonUnmarshallerContext context);
    public static DelegatedAdministratorUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DelegatedServiceUnmarshaller : object {
    private static DelegatedServiceUnmarshaller _instance;
    public static DelegatedServiceUnmarshaller Instance { get; }
    private static DelegatedServiceUnmarshaller();
    private sealed virtual override DelegatedService Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.DelegatedService,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DelegatedService Unmarshall(JsonUnmarshallerContext context);
    public static DelegatedServiceUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeleteOrganizationalUnitRequestMarshaller : object {
    private static DeleteOrganizationalUnitRequestMarshaller _instance;
    public static DeleteOrganizationalUnitRequestMarshaller Instance { get; }
    private static DeleteOrganizationalUnitRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteOrganizationalUnitRequest publicRequest);
    internal static DeleteOrganizationalUnitRequestMarshaller GetInstance();
    public static DeleteOrganizationalUnitRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeleteOrganizationalUnitResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteOrganizationalUnitResponseUnmarshaller _instance;
    public static DeleteOrganizationalUnitResponseUnmarshaller Instance { get; }
    private static DeleteOrganizationalUnitResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteOrganizationalUnitResponseUnmarshaller GetInstance();
    public static DeleteOrganizationalUnitResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeleteOrganizationRequestMarshaller : object {
    private static DeleteOrganizationRequestMarshaller _instance;
    public static DeleteOrganizationRequestMarshaller Instance { get; }
    private static DeleteOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteOrganizationRequest publicRequest);
    internal static DeleteOrganizationRequestMarshaller GetInstance();
    public static DeleteOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeleteOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteOrganizationResponseUnmarshaller _instance;
    public static DeleteOrganizationResponseUnmarshaller Instance { get; }
    private static DeleteOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteOrganizationResponseUnmarshaller GetInstance();
    public static DeleteOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller : object {
    private static DeletePolicyRequestMarshaller _instance;
    public static DeletePolicyRequestMarshaller Instance { get; }
    private static DeletePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePolicyRequest publicRequest);
    internal static DeletePolicyRequestMarshaller GetInstance();
    public static DeletePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeletePolicyResponseUnmarshaller _instance;
    public static DeletePolicyResponseUnmarshaller Instance { get; }
    private static DeletePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePolicyResponseUnmarshaller GetInstance();
    public static DeletePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeregisterDelegatedAdministratorRequestMarshaller : object {
    private static DeregisterDelegatedAdministratorRequestMarshaller _instance;
    public static DeregisterDelegatedAdministratorRequestMarshaller Instance { get; }
    private static DeregisterDelegatedAdministratorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterDelegatedAdministratorRequest publicRequest);
    internal static DeregisterDelegatedAdministratorRequestMarshaller GetInstance();
    public static DeregisterDelegatedAdministratorRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DeregisterDelegatedAdministratorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeregisterDelegatedAdministratorResponseUnmarshaller _instance;
    public static DeregisterDelegatedAdministratorResponseUnmarshaller Instance { get; }
    private static DeregisterDelegatedAdministratorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterDelegatedAdministratorResponseUnmarshaller GetInstance();
    public static DeregisterDelegatedAdministratorResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeAccountRequestMarshaller : object {
    private static DescribeAccountRequestMarshaller _instance;
    public static DescribeAccountRequestMarshaller Instance { get; }
    private static DescribeAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountRequest publicRequest);
    internal static DescribeAccountRequestMarshaller GetInstance();
    public static DescribeAccountRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeAccountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAccountResponseUnmarshaller _instance;
    public static DescribeAccountResponseUnmarshaller Instance { get; }
    private static DescribeAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountResponseUnmarshaller GetInstance();
    public static DescribeAccountResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeCreateAccountStatusRequestMarshaller : object {
    private static DescribeCreateAccountStatusRequestMarshaller _instance;
    public static DescribeCreateAccountStatusRequestMarshaller Instance { get; }
    private static DescribeCreateAccountStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCreateAccountStatusRequest publicRequest);
    internal static DescribeCreateAccountStatusRequestMarshaller GetInstance();
    public static DescribeCreateAccountStatusRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeCreateAccountStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeCreateAccountStatusResponseUnmarshaller _instance;
    public static DescribeCreateAccountStatusResponseUnmarshaller Instance { get; }
    private static DescribeCreateAccountStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCreateAccountStatusResponseUnmarshaller GetInstance();
    public static DescribeCreateAccountStatusResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeEffectivePolicyRequestMarshaller : object {
    private static DescribeEffectivePolicyRequestMarshaller _instance;
    public static DescribeEffectivePolicyRequestMarshaller Instance { get; }
    private static DescribeEffectivePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEffectivePolicyRequest publicRequest);
    internal static DescribeEffectivePolicyRequestMarshaller GetInstance();
    public static DescribeEffectivePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeEffectivePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEffectivePolicyResponseUnmarshaller _instance;
    public static DescribeEffectivePolicyResponseUnmarshaller Instance { get; }
    private static DescribeEffectivePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEffectivePolicyResponseUnmarshaller GetInstance();
    public static DescribeEffectivePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeHandshakeRequestMarshaller : object {
    private static DescribeHandshakeRequestMarshaller _instance;
    public static DescribeHandshakeRequestMarshaller Instance { get; }
    private static DescribeHandshakeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeHandshakeRequest publicRequest);
    internal static DescribeHandshakeRequestMarshaller GetInstance();
    public static DescribeHandshakeRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeHandshakeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeHandshakeResponseUnmarshaller _instance;
    public static DescribeHandshakeResponseUnmarshaller Instance { get; }
    private static DescribeHandshakeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeHandshakeResponseUnmarshaller GetInstance();
    public static DescribeHandshakeResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeOrganizationalUnitRequestMarshaller : object {
    private static DescribeOrganizationalUnitRequestMarshaller _instance;
    public static DescribeOrganizationalUnitRequestMarshaller Instance { get; }
    private static DescribeOrganizationalUnitRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeOrganizationalUnitRequest publicRequest);
    internal static DescribeOrganizationalUnitRequestMarshaller GetInstance();
    public static DescribeOrganizationalUnitRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeOrganizationalUnitResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeOrganizationalUnitResponseUnmarshaller _instance;
    public static DescribeOrganizationalUnitResponseUnmarshaller Instance { get; }
    private static DescribeOrganizationalUnitResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeOrganizationalUnitResponseUnmarshaller GetInstance();
    public static DescribeOrganizationalUnitResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeOrganizationRequestMarshaller : object {
    private static DescribeOrganizationRequestMarshaller _instance;
    public static DescribeOrganizationRequestMarshaller Instance { get; }
    private static DescribeOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeOrganizationRequest publicRequest);
    internal static DescribeOrganizationRequestMarshaller GetInstance();
    public static DescribeOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeOrganizationResponseUnmarshaller _instance;
    public static DescribeOrganizationResponseUnmarshaller Instance { get; }
    private static DescribeOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeOrganizationResponseUnmarshaller GetInstance();
    public static DescribeOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribePolicyRequestMarshaller : object {
    private static DescribePolicyRequestMarshaller _instance;
    public static DescribePolicyRequestMarshaller Instance { get; }
    private static DescribePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePolicyRequest publicRequest);
    internal static DescribePolicyRequestMarshaller GetInstance();
    public static DescribePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribePolicyResponseUnmarshaller _instance;
    public static DescribePolicyResponseUnmarshaller Instance { get; }
    private static DescribePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePolicyResponseUnmarshaller GetInstance();
    public static DescribePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeResourcePolicyRequestMarshaller : object {
    private static DescribeResourcePolicyRequestMarshaller _instance;
    public static DescribeResourcePolicyRequestMarshaller Instance { get; }
    private static DescribeResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeResourcePolicyRequest publicRequest);
    internal static DescribeResourcePolicyRequestMarshaller GetInstance();
    public static DescribeResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DescribeResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeResourcePolicyResponseUnmarshaller _instance;
    public static DescribeResourcePolicyResponseUnmarshaller Instance { get; }
    private static DescribeResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeResourcePolicyResponseUnmarshaller GetInstance();
    public static DescribeResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DestinationParentNotFoundExceptionUnmarshaller : object {
    private static DestinationParentNotFoundExceptionUnmarshaller _instance;
    public static DestinationParentNotFoundExceptionUnmarshaller Instance { get; }
    private static DestinationParentNotFoundExceptionUnmarshaller();
    public sealed virtual DestinationParentNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DestinationParentNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DestinationParentNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DetachPolicyRequestMarshaller : object {
    private static DetachPolicyRequestMarshaller _instance;
    public static DetachPolicyRequestMarshaller Instance { get; }
    private static DetachPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachPolicyRequest publicRequest);
    internal static DetachPolicyRequestMarshaller GetInstance();
    public static DetachPolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DetachPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DetachPolicyResponseUnmarshaller _instance;
    public static DetachPolicyResponseUnmarshaller Instance { get; }
    private static DetachPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachPolicyResponseUnmarshaller GetInstance();
    public static DetachPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DisableAWSServiceAccessRequestMarshaller : object {
    private static DisableAWSServiceAccessRequestMarshaller _instance;
    public static DisableAWSServiceAccessRequestMarshaller Instance { get; }
    private static DisableAWSServiceAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableAWSServiceAccessRequest publicRequest);
    internal static DisableAWSServiceAccessRequestMarshaller GetInstance();
    public static DisableAWSServiceAccessRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DisableAWSServiceAccessResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableAWSServiceAccessResponseUnmarshaller _instance;
    public static DisableAWSServiceAccessResponseUnmarshaller Instance { get; }
    private static DisableAWSServiceAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableAWSServiceAccessResponseUnmarshaller GetInstance();
    public static DisableAWSServiceAccessResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DisablePolicyTypeRequestMarshaller : object {
    private static DisablePolicyTypeRequestMarshaller _instance;
    public static DisablePolicyTypeRequestMarshaller Instance { get; }
    private static DisablePolicyTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisablePolicyTypeRequest publicRequest);
    internal static DisablePolicyTypeRequestMarshaller GetInstance();
    public static DisablePolicyTypeRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DisablePolicyTypeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisablePolicyTypeResponseUnmarshaller _instance;
    public static DisablePolicyTypeResponseUnmarshaller Instance { get; }
    private static DisablePolicyTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisablePolicyTypeResponseUnmarshaller GetInstance();
    public static DisablePolicyTypeResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DuplicateAccountExceptionUnmarshaller : object {
    private static DuplicateAccountExceptionUnmarshaller _instance;
    public static DuplicateAccountExceptionUnmarshaller Instance { get; }
    private static DuplicateAccountExceptionUnmarshaller();
    public sealed virtual DuplicateAccountException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateAccountException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateAccountExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DuplicateHandshakeExceptionUnmarshaller : object {
    private static DuplicateHandshakeExceptionUnmarshaller _instance;
    public static DuplicateHandshakeExceptionUnmarshaller Instance { get; }
    private static DuplicateHandshakeExceptionUnmarshaller();
    public sealed virtual DuplicateHandshakeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateHandshakeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateHandshakeExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DuplicateOrganizationalUnitExceptionUnmarshaller : object {
    private static DuplicateOrganizationalUnitExceptionUnmarshaller _instance;
    public static DuplicateOrganizationalUnitExceptionUnmarshaller Instance { get; }
    private static DuplicateOrganizationalUnitExceptionUnmarshaller();
    public sealed virtual DuplicateOrganizationalUnitException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateOrganizationalUnitException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateOrganizationalUnitExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DuplicatePolicyAttachmentExceptionUnmarshaller : object {
    private static DuplicatePolicyAttachmentExceptionUnmarshaller _instance;
    public static DuplicatePolicyAttachmentExceptionUnmarshaller Instance { get; }
    private static DuplicatePolicyAttachmentExceptionUnmarshaller();
    public sealed virtual DuplicatePolicyAttachmentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicatePolicyAttachmentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicatePolicyAttachmentExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.DuplicatePolicyExceptionUnmarshaller : object {
    private static DuplicatePolicyExceptionUnmarshaller _instance;
    public static DuplicatePolicyExceptionUnmarshaller Instance { get; }
    private static DuplicatePolicyExceptionUnmarshaller();
    public sealed virtual DuplicatePolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicatePolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicatePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EffectivePolicyNotFoundExceptionUnmarshaller : object {
    private static EffectivePolicyNotFoundExceptionUnmarshaller _instance;
    public static EffectivePolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static EffectivePolicyNotFoundExceptionUnmarshaller();
    public sealed virtual EffectivePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EffectivePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EffectivePolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EffectivePolicyUnmarshaller : object {
    private static EffectivePolicyUnmarshaller _instance;
    public static EffectivePolicyUnmarshaller Instance { get; }
    private static EffectivePolicyUnmarshaller();
    private sealed virtual override EffectivePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.EffectivePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EffectivePolicy Unmarshall(JsonUnmarshallerContext context);
    public static EffectivePolicyUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EnableAllFeaturesRequestMarshaller : object {
    private static EnableAllFeaturesRequestMarshaller _instance;
    public static EnableAllFeaturesRequestMarshaller Instance { get; }
    private static EnableAllFeaturesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableAllFeaturesRequest publicRequest);
    internal static EnableAllFeaturesRequestMarshaller GetInstance();
    public static EnableAllFeaturesRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EnableAllFeaturesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableAllFeaturesResponseUnmarshaller _instance;
    public static EnableAllFeaturesResponseUnmarshaller Instance { get; }
    private static EnableAllFeaturesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableAllFeaturesResponseUnmarshaller GetInstance();
    public static EnableAllFeaturesResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EnableAWSServiceAccessRequestMarshaller : object {
    private static EnableAWSServiceAccessRequestMarshaller _instance;
    public static EnableAWSServiceAccessRequestMarshaller Instance { get; }
    private static EnableAWSServiceAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableAWSServiceAccessRequest publicRequest);
    internal static EnableAWSServiceAccessRequestMarshaller GetInstance();
    public static EnableAWSServiceAccessRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EnableAWSServiceAccessResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableAWSServiceAccessResponseUnmarshaller _instance;
    public static EnableAWSServiceAccessResponseUnmarshaller Instance { get; }
    private static EnableAWSServiceAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableAWSServiceAccessResponseUnmarshaller GetInstance();
    public static EnableAWSServiceAccessResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EnabledServicePrincipalUnmarshaller : object {
    private static EnabledServicePrincipalUnmarshaller _instance;
    public static EnabledServicePrincipalUnmarshaller Instance { get; }
    private static EnabledServicePrincipalUnmarshaller();
    private sealed virtual override EnabledServicePrincipal Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.EnabledServicePrincipal,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnabledServicePrincipal Unmarshall(JsonUnmarshallerContext context);
    public static EnabledServicePrincipalUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EnablePolicyTypeRequestMarshaller : object {
    private static EnablePolicyTypeRequestMarshaller _instance;
    public static EnablePolicyTypeRequestMarshaller Instance { get; }
    private static EnablePolicyTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnablePolicyTypeRequest publicRequest);
    internal static EnablePolicyTypeRequestMarshaller GetInstance();
    public static EnablePolicyTypeRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.EnablePolicyTypeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnablePolicyTypeResponseUnmarshaller _instance;
    public static EnablePolicyTypeResponseUnmarshaller Instance { get; }
    private static EnablePolicyTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnablePolicyTypeResponseUnmarshaller GetInstance();
    public static EnablePolicyTypeResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.FinalizingOrganizationExceptionUnmarshaller : object {
    private static FinalizingOrganizationExceptionUnmarshaller _instance;
    public static FinalizingOrganizationExceptionUnmarshaller Instance { get; }
    private static FinalizingOrganizationExceptionUnmarshaller();
    public sealed virtual FinalizingOrganizationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FinalizingOrganizationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FinalizingOrganizationExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakeAlreadyInStateExceptionUnmarshaller : object {
    private static HandshakeAlreadyInStateExceptionUnmarshaller _instance;
    public static HandshakeAlreadyInStateExceptionUnmarshaller Instance { get; }
    private static HandshakeAlreadyInStateExceptionUnmarshaller();
    public sealed virtual HandshakeAlreadyInStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual HandshakeAlreadyInStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static HandshakeAlreadyInStateExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakeConstraintViolationExceptionUnmarshaller : object {
    private static HandshakeConstraintViolationExceptionUnmarshaller _instance;
    public static HandshakeConstraintViolationExceptionUnmarshaller Instance { get; }
    private static HandshakeConstraintViolationExceptionUnmarshaller();
    public sealed virtual HandshakeConstraintViolationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual HandshakeConstraintViolationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static HandshakeConstraintViolationExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakeFilterMarshaller : object {
    public static HandshakeFilterMarshaller Instance;
    private static HandshakeFilterMarshaller();
    public sealed virtual void Marshall(HandshakeFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakeNotFoundExceptionUnmarshaller : object {
    private static HandshakeNotFoundExceptionUnmarshaller _instance;
    public static HandshakeNotFoundExceptionUnmarshaller Instance { get; }
    private static HandshakeNotFoundExceptionUnmarshaller();
    public sealed virtual HandshakeNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual HandshakeNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static HandshakeNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakePartyMarshaller : object {
    public static HandshakePartyMarshaller Instance;
    private static HandshakePartyMarshaller();
    public sealed virtual void Marshall(HandshakeParty requestObject, JsonMarshallerContext context);
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakePartyUnmarshaller : object {
    private static HandshakePartyUnmarshaller _instance;
    public static HandshakePartyUnmarshaller Instance { get; }
    private static HandshakePartyUnmarshaller();
    private sealed virtual override HandshakeParty Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.HandshakeParty,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HandshakeParty Unmarshall(JsonUnmarshallerContext context);
    public static HandshakePartyUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakeResourceUnmarshaller : object {
    private static HandshakeResourceUnmarshaller _instance;
    public static HandshakeResourceUnmarshaller Instance { get; }
    private static HandshakeResourceUnmarshaller();
    private sealed virtual override HandshakeResource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.HandshakeResource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HandshakeResource Unmarshall(JsonUnmarshallerContext context);
    public static HandshakeResourceUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.HandshakeUnmarshaller : object {
    private static HandshakeUnmarshaller _instance;
    public static HandshakeUnmarshaller Instance { get; }
    private static HandshakeUnmarshaller();
    private sealed virtual override Handshake Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Handshake,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Handshake Unmarshall(JsonUnmarshallerContext context);
    public static HandshakeUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.InvalidHandshakeTransitionExceptionUnmarshaller : object {
    private static InvalidHandshakeTransitionExceptionUnmarshaller _instance;
    public static InvalidHandshakeTransitionExceptionUnmarshaller Instance { get; }
    private static InvalidHandshakeTransitionExceptionUnmarshaller();
    public sealed virtual InvalidHandshakeTransitionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidHandshakeTransitionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidHandshakeTransitionExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller : object {
    private static InvalidInputExceptionUnmarshaller _instance;
    public static InvalidInputExceptionUnmarshaller Instance { get; }
    private static InvalidInputExceptionUnmarshaller();
    public sealed virtual InvalidInputException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInputException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInputExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.InviteAccountToOrganizationRequestMarshaller : object {
    private static InviteAccountToOrganizationRequestMarshaller _instance;
    public static InviteAccountToOrganizationRequestMarshaller Instance { get; }
    private static InviteAccountToOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InviteAccountToOrganizationRequest publicRequest);
    internal static InviteAccountToOrganizationRequestMarshaller GetInstance();
    public static InviteAccountToOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.InviteAccountToOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InviteAccountToOrganizationResponseUnmarshaller _instance;
    public static InviteAccountToOrganizationResponseUnmarshaller Instance { get; }
    private static InviteAccountToOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InviteAccountToOrganizationResponseUnmarshaller GetInstance();
    public static InviteAccountToOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.LeaveOrganizationRequestMarshaller : object {
    private static LeaveOrganizationRequestMarshaller _instance;
    public static LeaveOrganizationRequestMarshaller Instance { get; }
    private static LeaveOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(LeaveOrganizationRequest publicRequest);
    internal static LeaveOrganizationRequestMarshaller GetInstance();
    public static LeaveOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.LeaveOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static LeaveOrganizationResponseUnmarshaller _instance;
    public static LeaveOrganizationResponseUnmarshaller Instance { get; }
    private static LeaveOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static LeaveOrganizationResponseUnmarshaller GetInstance();
    public static LeaveOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListAccountsForParentRequestMarshaller : object {
    private static ListAccountsForParentRequestMarshaller _instance;
    public static ListAccountsForParentRequestMarshaller Instance { get; }
    private static ListAccountsForParentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccountsForParentRequest publicRequest);
    internal static ListAccountsForParentRequestMarshaller GetInstance();
    public static ListAccountsForParentRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListAccountsForParentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAccountsForParentResponseUnmarshaller _instance;
    public static ListAccountsForParentResponseUnmarshaller Instance { get; }
    private static ListAccountsForParentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccountsForParentResponseUnmarshaller GetInstance();
    public static ListAccountsForParentResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListAccountsRequestMarshaller : object {
    private static ListAccountsRequestMarshaller _instance;
    public static ListAccountsRequestMarshaller Instance { get; }
    private static ListAccountsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccountsRequest publicRequest);
    internal static ListAccountsRequestMarshaller GetInstance();
    public static ListAccountsRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListAccountsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAccountsResponseUnmarshaller _instance;
    public static ListAccountsResponseUnmarshaller Instance { get; }
    private static ListAccountsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccountsResponseUnmarshaller GetInstance();
    public static ListAccountsResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListAWSServiceAccessForOrganizationRequestMarshaller : object {
    private static ListAWSServiceAccessForOrganizationRequestMarshaller _instance;
    public static ListAWSServiceAccessForOrganizationRequestMarshaller Instance { get; }
    private static ListAWSServiceAccessForOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAWSServiceAccessForOrganizationRequest publicRequest);
    internal static ListAWSServiceAccessForOrganizationRequestMarshaller GetInstance();
    public static ListAWSServiceAccessForOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListAWSServiceAccessForOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAWSServiceAccessForOrganizationResponseUnmarshaller _instance;
    public static ListAWSServiceAccessForOrganizationResponseUnmarshaller Instance { get; }
    private static ListAWSServiceAccessForOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAWSServiceAccessForOrganizationResponseUnmarshaller GetInstance();
    public static ListAWSServiceAccessForOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListChildrenRequestMarshaller : object {
    private static ListChildrenRequestMarshaller _instance;
    public static ListChildrenRequestMarshaller Instance { get; }
    private static ListChildrenRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListChildrenRequest publicRequest);
    internal static ListChildrenRequestMarshaller GetInstance();
    public static ListChildrenRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListChildrenResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListChildrenResponseUnmarshaller _instance;
    public static ListChildrenResponseUnmarshaller Instance { get; }
    private static ListChildrenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListChildrenResponseUnmarshaller GetInstance();
    public static ListChildrenResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListCreateAccountStatusRequestMarshaller : object {
    private static ListCreateAccountStatusRequestMarshaller _instance;
    public static ListCreateAccountStatusRequestMarshaller Instance { get; }
    private static ListCreateAccountStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCreateAccountStatusRequest publicRequest);
    internal static ListCreateAccountStatusRequestMarshaller GetInstance();
    public static ListCreateAccountStatusRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListCreateAccountStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCreateAccountStatusResponseUnmarshaller _instance;
    public static ListCreateAccountStatusResponseUnmarshaller Instance { get; }
    private static ListCreateAccountStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCreateAccountStatusResponseUnmarshaller GetInstance();
    public static ListCreateAccountStatusResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListDelegatedAdministratorsRequestMarshaller : object {
    private static ListDelegatedAdministratorsRequestMarshaller _instance;
    public static ListDelegatedAdministratorsRequestMarshaller Instance { get; }
    private static ListDelegatedAdministratorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDelegatedAdministratorsRequest publicRequest);
    internal static ListDelegatedAdministratorsRequestMarshaller GetInstance();
    public static ListDelegatedAdministratorsRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListDelegatedAdministratorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDelegatedAdministratorsResponseUnmarshaller _instance;
    public static ListDelegatedAdministratorsResponseUnmarshaller Instance { get; }
    private static ListDelegatedAdministratorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDelegatedAdministratorsResponseUnmarshaller GetInstance();
    public static ListDelegatedAdministratorsResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListDelegatedServicesForAccountRequestMarshaller : object {
    private static ListDelegatedServicesForAccountRequestMarshaller _instance;
    public static ListDelegatedServicesForAccountRequestMarshaller Instance { get; }
    private static ListDelegatedServicesForAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDelegatedServicesForAccountRequest publicRequest);
    internal static ListDelegatedServicesForAccountRequestMarshaller GetInstance();
    public static ListDelegatedServicesForAccountRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListDelegatedServicesForAccountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDelegatedServicesForAccountResponseUnmarshaller _instance;
    public static ListDelegatedServicesForAccountResponseUnmarshaller Instance { get; }
    private static ListDelegatedServicesForAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDelegatedServicesForAccountResponseUnmarshaller GetInstance();
    public static ListDelegatedServicesForAccountResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListHandshakesForAccountRequestMarshaller : object {
    private static ListHandshakesForAccountRequestMarshaller _instance;
    public static ListHandshakesForAccountRequestMarshaller Instance { get; }
    private static ListHandshakesForAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListHandshakesForAccountRequest publicRequest);
    internal static ListHandshakesForAccountRequestMarshaller GetInstance();
    public static ListHandshakesForAccountRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListHandshakesForAccountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListHandshakesForAccountResponseUnmarshaller _instance;
    public static ListHandshakesForAccountResponseUnmarshaller Instance { get; }
    private static ListHandshakesForAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListHandshakesForAccountResponseUnmarshaller GetInstance();
    public static ListHandshakesForAccountResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListHandshakesForOrganizationRequestMarshaller : object {
    private static ListHandshakesForOrganizationRequestMarshaller _instance;
    public static ListHandshakesForOrganizationRequestMarshaller Instance { get; }
    private static ListHandshakesForOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListHandshakesForOrganizationRequest publicRequest);
    internal static ListHandshakesForOrganizationRequestMarshaller GetInstance();
    public static ListHandshakesForOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListHandshakesForOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListHandshakesForOrganizationResponseUnmarshaller _instance;
    public static ListHandshakesForOrganizationResponseUnmarshaller Instance { get; }
    private static ListHandshakesForOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListHandshakesForOrganizationResponseUnmarshaller GetInstance();
    public static ListHandshakesForOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListOrganizationalUnitsForParentRequestMarshaller : object {
    private static ListOrganizationalUnitsForParentRequestMarshaller _instance;
    public static ListOrganizationalUnitsForParentRequestMarshaller Instance { get; }
    private static ListOrganizationalUnitsForParentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListOrganizationalUnitsForParentRequest publicRequest);
    internal static ListOrganizationalUnitsForParentRequestMarshaller GetInstance();
    public static ListOrganizationalUnitsForParentRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListOrganizationalUnitsForParentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListOrganizationalUnitsForParentResponseUnmarshaller _instance;
    public static ListOrganizationalUnitsForParentResponseUnmarshaller Instance { get; }
    private static ListOrganizationalUnitsForParentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListOrganizationalUnitsForParentResponseUnmarshaller GetInstance();
    public static ListOrganizationalUnitsForParentResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListParentsRequestMarshaller : object {
    private static ListParentsRequestMarshaller _instance;
    public static ListParentsRequestMarshaller Instance { get; }
    private static ListParentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListParentsRequest publicRequest);
    internal static ListParentsRequestMarshaller GetInstance();
    public static ListParentsRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListParentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListParentsResponseUnmarshaller _instance;
    public static ListParentsResponseUnmarshaller Instance { get; }
    private static ListParentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListParentsResponseUnmarshaller GetInstance();
    public static ListParentsResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListPoliciesForTargetRequestMarshaller : object {
    private static ListPoliciesForTargetRequestMarshaller _instance;
    public static ListPoliciesForTargetRequestMarshaller Instance { get; }
    private static ListPoliciesForTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPoliciesForTargetRequest publicRequest);
    internal static ListPoliciesForTargetRequestMarshaller GetInstance();
    public static ListPoliciesForTargetRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListPoliciesForTargetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListPoliciesForTargetResponseUnmarshaller _instance;
    public static ListPoliciesForTargetResponseUnmarshaller Instance { get; }
    private static ListPoliciesForTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListPoliciesForTargetResponseUnmarshaller GetInstance();
    public static ListPoliciesForTargetResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller : object {
    private static ListPoliciesRequestMarshaller _instance;
    public static ListPoliciesRequestMarshaller Instance { get; }
    private static ListPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPoliciesRequest publicRequest);
    internal static ListPoliciesRequestMarshaller GetInstance();
    public static ListPoliciesRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListPoliciesResponseUnmarshaller _instance;
    public static ListPoliciesResponseUnmarshaller Instance { get; }
    private static ListPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListPoliciesResponseUnmarshaller GetInstance();
    public static ListPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListRootsRequestMarshaller : object {
    private static ListRootsRequestMarshaller _instance;
    public static ListRootsRequestMarshaller Instance { get; }
    private static ListRootsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRootsRequest publicRequest);
    internal static ListRootsRequestMarshaller GetInstance();
    public static ListRootsRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListRootsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListRootsResponseUnmarshaller _instance;
    public static ListRootsResponseUnmarshaller Instance { get; }
    private static ListRootsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRootsResponseUnmarshaller GetInstance();
    public static ListRootsResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListTargetsForPolicyRequestMarshaller : object {
    private static ListTargetsForPolicyRequestMarshaller _instance;
    public static ListTargetsForPolicyRequestMarshaller Instance { get; }
    private static ListTargetsForPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTargetsForPolicyRequest publicRequest);
    internal static ListTargetsForPolicyRequestMarshaller GetInstance();
    public static ListTargetsForPolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ListTargetsForPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTargetsForPolicyResponseUnmarshaller _instance;
    public static ListTargetsForPolicyResponseUnmarshaller Instance { get; }
    private static ListTargetsForPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTargetsForPolicyResponseUnmarshaller GetInstance();
    public static ListTargetsForPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller : object {
    private static MalformedPolicyDocumentExceptionUnmarshaller _instance;
    public static MalformedPolicyDocumentExceptionUnmarshaller Instance { get; }
    private static MalformedPolicyDocumentExceptionUnmarshaller();
    public sealed virtual MalformedPolicyDocumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MalformedPolicyDocumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MalformedPolicyDocumentExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.MasterCannotLeaveOrganizationExceptionUnmarshaller : object {
    private static MasterCannotLeaveOrganizationExceptionUnmarshaller _instance;
    public static MasterCannotLeaveOrganizationExceptionUnmarshaller Instance { get; }
    private static MasterCannotLeaveOrganizationExceptionUnmarshaller();
    public sealed virtual MasterCannotLeaveOrganizationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MasterCannotLeaveOrganizationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MasterCannotLeaveOrganizationExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.MoveAccountRequestMarshaller : object {
    private static MoveAccountRequestMarshaller _instance;
    public static MoveAccountRequestMarshaller Instance { get; }
    private static MoveAccountRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MoveAccountRequest publicRequest);
    internal static MoveAccountRequestMarshaller GetInstance();
    public static MoveAccountRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.MoveAccountResponseUnmarshaller : JsonResponseUnmarshaller {
    private static MoveAccountResponseUnmarshaller _instance;
    public static MoveAccountResponseUnmarshaller Instance { get; }
    private static MoveAccountResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MoveAccountResponseUnmarshaller GetInstance();
    public static MoveAccountResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.OrganizationalUnitNotEmptyExceptionUnmarshaller : object {
    private static OrganizationalUnitNotEmptyExceptionUnmarshaller _instance;
    public static OrganizationalUnitNotEmptyExceptionUnmarshaller Instance { get; }
    private static OrganizationalUnitNotEmptyExceptionUnmarshaller();
    public sealed virtual OrganizationalUnitNotEmptyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OrganizationalUnitNotEmptyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OrganizationalUnitNotEmptyExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.OrganizationalUnitNotFoundExceptionUnmarshaller : object {
    private static OrganizationalUnitNotFoundExceptionUnmarshaller _instance;
    public static OrganizationalUnitNotFoundExceptionUnmarshaller Instance { get; }
    private static OrganizationalUnitNotFoundExceptionUnmarshaller();
    public sealed virtual OrganizationalUnitNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OrganizationalUnitNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OrganizationalUnitNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.OrganizationalUnitUnmarshaller : object {
    private static OrganizationalUnitUnmarshaller _instance;
    public static OrganizationalUnitUnmarshaller Instance { get; }
    private static OrganizationalUnitUnmarshaller();
    private sealed virtual override OrganizationalUnit Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.OrganizationalUnit,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OrganizationalUnit Unmarshall(JsonUnmarshallerContext context);
    public static OrganizationalUnitUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.OrganizationNotEmptyExceptionUnmarshaller : object {
    private static OrganizationNotEmptyExceptionUnmarshaller _instance;
    public static OrganizationNotEmptyExceptionUnmarshaller Instance { get; }
    private static OrganizationNotEmptyExceptionUnmarshaller();
    public sealed virtual OrganizationNotEmptyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OrganizationNotEmptyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OrganizationNotEmptyExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.OrganizationUnmarshaller : object {
    private static OrganizationUnmarshaller _instance;
    public static OrganizationUnmarshaller Instance { get; }
    private static OrganizationUnmarshaller();
    private sealed virtual override Organization Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Organization,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Organization Unmarshall(JsonUnmarshallerContext context);
    public static OrganizationUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ParentNotFoundExceptionUnmarshaller : object {
    private static ParentNotFoundExceptionUnmarshaller _instance;
    public static ParentNotFoundExceptionUnmarshaller Instance { get; }
    private static ParentNotFoundExceptionUnmarshaller();
    public sealed virtual ParentNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParentNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParentNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ParentUnmarshaller : object {
    private static ParentUnmarshaller _instance;
    public static ParentUnmarshaller Instance { get; }
    private static ParentUnmarshaller();
    private sealed virtual override Parent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Parent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Parent Unmarshall(JsonUnmarshallerContext context);
    public static ParentUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyChangesInProgressExceptionUnmarshaller : object {
    private static PolicyChangesInProgressExceptionUnmarshaller _instance;
    public static PolicyChangesInProgressExceptionUnmarshaller Instance { get; }
    private static PolicyChangesInProgressExceptionUnmarshaller();
    public sealed virtual PolicyChangesInProgressException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyChangesInProgressException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyChangesInProgressExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyInUseExceptionUnmarshaller : object {
    private static PolicyInUseExceptionUnmarshaller _instance;
    public static PolicyInUseExceptionUnmarshaller Instance { get; }
    private static PolicyInUseExceptionUnmarshaller();
    public sealed virtual PolicyInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyNotAttachedExceptionUnmarshaller : object {
    private static PolicyNotAttachedExceptionUnmarshaller _instance;
    public static PolicyNotAttachedExceptionUnmarshaller Instance { get; }
    private static PolicyNotAttachedExceptionUnmarshaller();
    public sealed virtual PolicyNotAttachedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyNotAttachedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyNotAttachedExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyNotFoundExceptionUnmarshaller : object {
    private static PolicyNotFoundExceptionUnmarshaller _instance;
    public static PolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static PolicyNotFoundExceptionUnmarshaller();
    public sealed virtual PolicyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicySummaryUnmarshaller : object {
    private static PolicySummaryUnmarshaller _instance;
    public static PolicySummaryUnmarshaller Instance { get; }
    private static PolicySummaryUnmarshaller();
    private sealed virtual override PolicySummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.PolicySummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicySummary Unmarshall(JsonUnmarshallerContext context);
    public static PolicySummaryUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyTargetSummaryUnmarshaller : object {
    private static PolicyTargetSummaryUnmarshaller _instance;
    public static PolicyTargetSummaryUnmarshaller Instance { get; }
    private static PolicyTargetSummaryUnmarshaller();
    private sealed virtual override PolicyTargetSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.PolicyTargetSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyTargetSummary Unmarshall(JsonUnmarshallerContext context);
    public static PolicyTargetSummaryUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyTypeAlreadyEnabledExceptionUnmarshaller : object {
    private static PolicyTypeAlreadyEnabledExceptionUnmarshaller _instance;
    public static PolicyTypeAlreadyEnabledExceptionUnmarshaller Instance { get; }
    private static PolicyTypeAlreadyEnabledExceptionUnmarshaller();
    public sealed virtual PolicyTypeAlreadyEnabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyTypeAlreadyEnabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyTypeAlreadyEnabledExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyTypeNotAvailableForOrganizationExceptionUnmarshaller : object {
    private static PolicyTypeNotAvailableForOrganizationExceptionUnmarshaller _instance;
    public static PolicyTypeNotAvailableForOrganizationExceptionUnmarshaller Instance { get; }
    private static PolicyTypeNotAvailableForOrganizationExceptionUnmarshaller();
    public sealed virtual PolicyTypeNotAvailableForOrganizationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyTypeNotAvailableForOrganizationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyTypeNotAvailableForOrganizationExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyTypeNotEnabledExceptionUnmarshaller : object {
    private static PolicyTypeNotEnabledExceptionUnmarshaller _instance;
    public static PolicyTypeNotEnabledExceptionUnmarshaller Instance { get; }
    private static PolicyTypeNotEnabledExceptionUnmarshaller();
    public sealed virtual PolicyTypeNotEnabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyTypeNotEnabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyTypeNotEnabledExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyTypeSummaryUnmarshaller : object {
    private static PolicyTypeSummaryUnmarshaller _instance;
    public static PolicyTypeSummaryUnmarshaller Instance { get; }
    private static PolicyTypeSummaryUnmarshaller();
    private sealed virtual override PolicyTypeSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.PolicyTypeSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyTypeSummary Unmarshall(JsonUnmarshallerContext context);
    public static PolicyTypeSummaryUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PolicyUnmarshaller : object {
    private static PolicyUnmarshaller _instance;
    public static PolicyUnmarshaller Instance { get; }
    private static PolicyUnmarshaller();
    private sealed virtual override Policy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Policy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Policy Unmarshall(JsonUnmarshallerContext context);
    public static PolicyUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.RegisterDelegatedAdministratorRequestMarshaller : object {
    private static RegisterDelegatedAdministratorRequestMarshaller _instance;
    public static RegisterDelegatedAdministratorRequestMarshaller Instance { get; }
    private static RegisterDelegatedAdministratorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterDelegatedAdministratorRequest publicRequest);
    internal static RegisterDelegatedAdministratorRequestMarshaller GetInstance();
    public static RegisterDelegatedAdministratorRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.RegisterDelegatedAdministratorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterDelegatedAdministratorResponseUnmarshaller _instance;
    public static RegisterDelegatedAdministratorResponseUnmarshaller Instance { get; }
    private static RegisterDelegatedAdministratorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterDelegatedAdministratorResponseUnmarshaller GetInstance();
    public static RegisterDelegatedAdministratorResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.RemoveAccountFromOrganizationRequestMarshaller : object {
    private static RemoveAccountFromOrganizationRequestMarshaller _instance;
    public static RemoveAccountFromOrganizationRequestMarshaller Instance { get; }
    private static RemoveAccountFromOrganizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveAccountFromOrganizationRequest publicRequest);
    internal static RemoveAccountFromOrganizationRequestMarshaller GetInstance();
    public static RemoveAccountFromOrganizationRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.RemoveAccountFromOrganizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveAccountFromOrganizationResponseUnmarshaller _instance;
    public static RemoveAccountFromOrganizationResponseUnmarshaller Instance { get; }
    private static RemoveAccountFromOrganizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveAccountFromOrganizationResponseUnmarshaller GetInstance();
    public static RemoveAccountFromOrganizationResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ResourcePolicyNotFoundExceptionUnmarshaller : object {
    private static ResourcePolicyNotFoundExceptionUnmarshaller _instance;
    public static ResourcePolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourcePolicyNotFoundExceptionUnmarshaller();
    public sealed virtual ResourcePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourcePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourcePolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ResourcePolicySummaryUnmarshaller : object {
    private static ResourcePolicySummaryUnmarshaller _instance;
    public static ResourcePolicySummaryUnmarshaller Instance { get; }
    private static ResourcePolicySummaryUnmarshaller();
    private sealed virtual override ResourcePolicySummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.ResourcePolicySummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourcePolicySummary Unmarshall(JsonUnmarshallerContext context);
    public static ResourcePolicySummaryUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller : object {
    private static ResourcePolicyUnmarshaller _instance;
    public static ResourcePolicyUnmarshaller Instance { get; }
    private static ResourcePolicyUnmarshaller();
    private sealed virtual override ResourcePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.ResourcePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourcePolicy Unmarshall(JsonUnmarshallerContext context);
    public static ResourcePolicyUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.RootNotFoundExceptionUnmarshaller : object {
    private static RootNotFoundExceptionUnmarshaller _instance;
    public static RootNotFoundExceptionUnmarshaller Instance { get; }
    private static RootNotFoundExceptionUnmarshaller();
    public sealed virtual RootNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual RootNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static RootNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.RootUnmarshaller : object {
    private static RootUnmarshaller _instance;
    public static RootUnmarshaller Instance { get; }
    private static RootUnmarshaller();
    private sealed virtual override Root Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Root,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Root Unmarshall(JsonUnmarshallerContext context);
    public static RootUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.ServiceExceptionUnmarshaller : object {
    private static ServiceExceptionUnmarshaller _instance;
    public static ServiceExceptionUnmarshaller Instance { get; }
    private static ServiceExceptionUnmarshaller();
    public sealed virtual ServiceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.SourceParentNotFoundExceptionUnmarshaller : object {
    private static SourceParentNotFoundExceptionUnmarshaller _instance;
    public static SourceParentNotFoundExceptionUnmarshaller Instance { get; }
    private static SourceParentNotFoundExceptionUnmarshaller();
    public sealed virtual SourceParentNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SourceParentNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SourceParentNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Organizations.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller : object {
    private static TargetNotFoundExceptionUnmarshaller _instance;
    public static TargetNotFoundExceptionUnmarshaller Instance { get; }
    private static TargetNotFoundExceptionUnmarshaller();
    public sealed virtual TargetNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TargetNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TargetNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.UnsupportedAPIEndpointExceptionUnmarshaller : object {
    private static UnsupportedAPIEndpointExceptionUnmarshaller _instance;
    public static UnsupportedAPIEndpointExceptionUnmarshaller Instance { get; }
    private static UnsupportedAPIEndpointExceptionUnmarshaller();
    public sealed virtual UnsupportedAPIEndpointException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedAPIEndpointException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedAPIEndpointExceptionUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.UpdateOrganizationalUnitRequestMarshaller : object {
    private static UpdateOrganizationalUnitRequestMarshaller _instance;
    public static UpdateOrganizationalUnitRequestMarshaller Instance { get; }
    private static UpdateOrganizationalUnitRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateOrganizationalUnitRequest publicRequest);
    internal static UpdateOrganizationalUnitRequestMarshaller GetInstance();
    public static UpdateOrganizationalUnitRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.UpdateOrganizationalUnitResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateOrganizationalUnitResponseUnmarshaller _instance;
    public static UpdateOrganizationalUnitResponseUnmarshaller Instance { get; }
    private static UpdateOrganizationalUnitResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateOrganizationalUnitResponseUnmarshaller GetInstance();
    public static UpdateOrganizationalUnitResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.UpdatePolicyRequestMarshaller : object {
    private static UpdatePolicyRequestMarshaller _instance;
    public static UpdatePolicyRequestMarshaller Instance { get; }
    private static UpdatePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdatePolicyRequest publicRequest);
    internal static UpdatePolicyRequestMarshaller GetInstance();
    public static UpdatePolicyRequestMarshaller get_Instance();
}
public class Amazon.Organizations.Model.Internal.MarshallTransformations.UpdatePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdatePolicyResponseUnmarshaller _instance;
    public static UpdatePolicyResponseUnmarshaller Instance { get; }
    private static UpdatePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdatePolicyResponseUnmarshaller GetInstance();
    public static UpdatePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Organizations.Model.InvalidHandshakeTransitionException : AmazonOrganizationsException {
    public InvalidHandshakeTransitionException(string message);
    public InvalidHandshakeTransitionException(string message, Exception innerException);
    public InvalidHandshakeTransitionException(Exception innerException);
    public InvalidHandshakeTransitionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidHandshakeTransitionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.InvalidInputException : AmazonOrganizationsException {
    private InvalidInputExceptionReason _reason;
    public InvalidInputExceptionReason Reason { get; public set; }
    public InvalidInputException(string message);
    public InvalidInputException(string message, Exception innerException);
    public InvalidInputException(Exception innerException);
    public InvalidInputException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInputException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInputExceptionReason get_Reason();
    public void set_Reason(InvalidInputExceptionReason value);
    internal bool IsSetReason();
}
public class Amazon.Organizations.Model.InviteAccountToOrganizationRequest : AmazonOrganizationsRequest {
    private string _notes;
    private List`1<Tag> _tags;
    private HandshakeParty _target;
    [AWSPropertyAttribute]
public string Notes { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public HandshakeParty Target { get; public set; }
    public string get_Notes();
    public void set_Notes(string value);
    internal bool IsSetNotes();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public HandshakeParty get_Target();
    public void set_Target(HandshakeParty value);
    internal bool IsSetTarget();
}
public class Amazon.Organizations.Model.InviteAccountToOrganizationResponse : AmazonWebServiceResponse {
    private Handshake _handshake;
    public Handshake Handshake { get; public set; }
    public Handshake get_Handshake();
    public void set_Handshake(Handshake value);
    internal bool IsSetHandshake();
}
public interface Amazon.Organizations.Model.IOrganizationsPaginatorFactory {
    public abstract virtual IListAccountsPaginator ListAccounts(ListAccountsRequest request);
    public abstract virtual IListAccountsForParentPaginator ListAccountsForParent(ListAccountsForParentRequest request);
    public abstract virtual IListAWSServiceAccessForOrganizationPaginator ListAWSServiceAccessForOrganization(ListAWSServiceAccessForOrganizationRequest request);
    public abstract virtual IListChildrenPaginator ListChildren(ListChildrenRequest request);
    public abstract virtual IListCreateAccountStatusPaginator ListCreateAccountStatus(ListCreateAccountStatusRequest request);
    public abstract virtual IListDelegatedAdministratorsPaginator ListDelegatedAdministrators(ListDelegatedAdministratorsRequest request);
    public abstract virtual IListDelegatedServicesForAccountPaginator ListDelegatedServicesForAccount(ListDelegatedServicesForAccountRequest request);
    public abstract virtual IListHandshakesForAccountPaginator ListHandshakesForAccount(ListHandshakesForAccountRequest request);
    public abstract virtual IListHandshakesForOrganizationPaginator ListHandshakesForOrganization(ListHandshakesForOrganizationRequest request);
    public abstract virtual IListOrganizationalUnitsForParentPaginator ListOrganizationalUnitsForParent(ListOrganizationalUnitsForParentRequest request);
    public abstract virtual IListParentsPaginator ListParents(ListParentsRequest request);
    public abstract virtual IListPoliciesPaginator ListPolicies(ListPoliciesRequest request);
    public abstract virtual IListPoliciesForTargetPaginator ListPoliciesForTarget(ListPoliciesForTargetRequest request);
    public abstract virtual IListRootsPaginator ListRoots(ListRootsRequest request);
    public abstract virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual IListTargetsForPolicyPaginator ListTargetsForPolicy(ListTargetsForPolicyRequest request);
}
public class Amazon.Organizations.Model.LeaveOrganizationRequest : AmazonOrganizationsRequest {
}
public class Amazon.Organizations.Model.LeaveOrganizationResponse : AmazonWebServiceResponse {
}
internal class Amazon.Organizations.Model.ListAccountsForParentPaginator : object {
    private IAmazonOrganizations _client;
    private ListAccountsForParentRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccountsForParentResponse> Responses { get; }
    internal ListAccountsForParentPaginator(IAmazonOrganizations client, ListAccountsForParentRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccountsForParentResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListAccountsForParentPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListAccountsForParentResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListAccountsForParentResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListAccountsForParentResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListAccountsForParentRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _parentId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ParentId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ParentId();
    public void set_ParentId(string value);
    internal bool IsSetParentId();
}
public class Amazon.Organizations.Model.ListAccountsForParentResponse : AmazonWebServiceResponse {
    private List`1<Account> _accounts;
    private string _nextToken;
    public List`1<Account> Accounts { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Account> get_Accounts();
    public void set_Accounts(List`1<Account> value);
    internal bool IsSetAccounts();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListAccountsPaginator : object {
    private IAmazonOrganizations _client;
    private ListAccountsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccountsResponse> Responses { get; }
    internal ListAccountsPaginator(IAmazonOrganizations client, ListAccountsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccountsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListAccountsPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListAccountsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListAccountsResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListAccountsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListAccountsRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListAccountsResponse : AmazonWebServiceResponse {
    private List`1<Account> _accounts;
    private string _nextToken;
    public List`1<Account> Accounts { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Account> get_Accounts();
    public void set_Accounts(List`1<Account> value);
    internal bool IsSetAccounts();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListAWSServiceAccessForOrganizationPaginator : object {
    private IAmazonOrganizations _client;
    private ListAWSServiceAccessForOrganizationRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAWSServiceAccessForOrganizationResponse> Responses { get; }
    internal ListAWSServiceAccessForOrganizationPaginator(IAmazonOrganizations client, ListAWSServiceAccessForOrganizationRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAWSServiceAccessForOrganizationResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListAWSServiceAccessForOrganizationPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListAWSServiceAccessForOrganizationResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListAWSServiceAccessForOrganizationResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListAWSServiceAccessForOrganizationResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListAWSServiceAccessForOrganizationRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListAWSServiceAccessForOrganizationResponse : AmazonWebServiceResponse {
    private List`1<EnabledServicePrincipal> _enabledServicePrincipals;
    private string _nextToken;
    public List`1<EnabledServicePrincipal> EnabledServicePrincipals { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<EnabledServicePrincipal> get_EnabledServicePrincipals();
    public void set_EnabledServicePrincipals(List`1<EnabledServicePrincipal> value);
    internal bool IsSetEnabledServicePrincipals();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListChildrenPaginator : object {
    private IAmazonOrganizations _client;
    private ListChildrenRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListChildrenResponse> Responses { get; }
    internal ListChildrenPaginator(IAmazonOrganizations client, ListChildrenRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListChildrenResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListChildrenPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListChildrenResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListChildrenResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListChildrenResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListChildrenRequest : AmazonOrganizationsRequest {
    private ChildType _childType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _parentId;
    [AWSPropertyAttribute]
public ChildType ChildType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ParentId { get; public set; }
    public ChildType get_ChildType();
    public void set_ChildType(ChildType value);
    internal bool IsSetChildType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ParentId();
    public void set_ParentId(string value);
    internal bool IsSetParentId();
}
public class Amazon.Organizations.Model.ListChildrenResponse : AmazonWebServiceResponse {
    private List`1<Child> _children;
    private string _nextToken;
    public List`1<Child> Children { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Child> get_Children();
    public void set_Children(List`1<Child> value);
    internal bool IsSetChildren();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListCreateAccountStatusPaginator : object {
    private IAmazonOrganizations _client;
    private ListCreateAccountStatusRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCreateAccountStatusResponse> Responses { get; }
    internal ListCreateAccountStatusPaginator(IAmazonOrganizations client, ListCreateAccountStatusRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCreateAccountStatusResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListCreateAccountStatusPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListCreateAccountStatusResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListCreateAccountStatusResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListCreateAccountStatusResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListCreateAccountStatusRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _states;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<string> States { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_States();
    public void set_States(List`1<string> value);
    internal bool IsSetStates();
}
public class Amazon.Organizations.Model.ListCreateAccountStatusResponse : AmazonWebServiceResponse {
    private List`1<CreateAccountStatus> _createAccountStatuses;
    private string _nextToken;
    public List`1<CreateAccountStatus> CreateAccountStatuses { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<CreateAccountStatus> get_CreateAccountStatuses();
    public void set_CreateAccountStatuses(List`1<CreateAccountStatus> value);
    internal bool IsSetCreateAccountStatuses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListDelegatedAdministratorsPaginator : object {
    private IAmazonOrganizations _client;
    private ListDelegatedAdministratorsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDelegatedAdministratorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DelegatedAdministrator> DelegatedAdministrators { get; }
    internal ListDelegatedAdministratorsPaginator(IAmazonOrganizations client, ListDelegatedAdministratorsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDelegatedAdministratorsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DelegatedAdministrator> get_DelegatedAdministrators();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListDelegatedAdministratorsPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListDelegatedAdministratorsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListDelegatedAdministratorsResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListDelegatedAdministratorsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListDelegatedAdministratorsRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _servicePrincipal;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ServicePrincipal { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ServicePrincipal();
    public void set_ServicePrincipal(string value);
    internal bool IsSetServicePrincipal();
}
public class Amazon.Organizations.Model.ListDelegatedAdministratorsResponse : AmazonWebServiceResponse {
    private List`1<DelegatedAdministrator> _delegatedAdministrators;
    private string _nextToken;
    public List`1<DelegatedAdministrator> DelegatedAdministrators { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<DelegatedAdministrator> get_DelegatedAdministrators();
    public void set_DelegatedAdministrators(List`1<DelegatedAdministrator> value);
    internal bool IsSetDelegatedAdministrators();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListDelegatedServicesForAccountPaginator : object {
    private IAmazonOrganizations _client;
    private ListDelegatedServicesForAccountRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDelegatedServicesForAccountResponse> Responses { get; }
    public IPaginatedEnumerable`1<DelegatedService> DelegatedServices { get; }
    internal ListDelegatedServicesForAccountPaginator(IAmazonOrganizations client, ListDelegatedServicesForAccountRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDelegatedServicesForAccountResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DelegatedService> get_DelegatedServices();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListDelegatedServicesForAccountPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListDelegatedServicesForAccountResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListDelegatedServicesForAccountResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListDelegatedServicesForAccountResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListDelegatedServicesForAccountRequest : AmazonOrganizationsRequest {
    private string _accountId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListDelegatedServicesForAccountResponse : AmazonWebServiceResponse {
    private List`1<DelegatedService> _delegatedServices;
    private string _nextToken;
    public List`1<DelegatedService> DelegatedServices { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<DelegatedService> get_DelegatedServices();
    public void set_DelegatedServices(List`1<DelegatedService> value);
    internal bool IsSetDelegatedServices();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListHandshakesForAccountPaginator : object {
    private IAmazonOrganizations _client;
    private ListHandshakesForAccountRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListHandshakesForAccountResponse> Responses { get; }
    internal ListHandshakesForAccountPaginator(IAmazonOrganizations client, ListHandshakesForAccountRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListHandshakesForAccountResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListHandshakesForAccountPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListHandshakesForAccountResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListHandshakesForAccountResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListHandshakesForAccountResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListHandshakesForAccountRequest : AmazonOrganizationsRequest {
    private HandshakeFilter _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public HandshakeFilter Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public HandshakeFilter get_Filter();
    public void set_Filter(HandshakeFilter value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListHandshakesForAccountResponse : AmazonWebServiceResponse {
    private List`1<Handshake> _handshakes;
    private string _nextToken;
    public List`1<Handshake> Handshakes { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Handshake> get_Handshakes();
    public void set_Handshakes(List`1<Handshake> value);
    internal bool IsSetHandshakes();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListHandshakesForOrganizationPaginator : object {
    private IAmazonOrganizations _client;
    private ListHandshakesForOrganizationRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListHandshakesForOrganizationResponse> Responses { get; }
    internal ListHandshakesForOrganizationPaginator(IAmazonOrganizations client, ListHandshakesForOrganizationRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListHandshakesForOrganizationResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListHandshakesForOrganizationPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListHandshakesForOrganizationResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListHandshakesForOrganizationResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListHandshakesForOrganizationResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListHandshakesForOrganizationRequest : AmazonOrganizationsRequest {
    private HandshakeFilter _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public HandshakeFilter Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public HandshakeFilter get_Filter();
    public void set_Filter(HandshakeFilter value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListHandshakesForOrganizationResponse : AmazonWebServiceResponse {
    private List`1<Handshake> _handshakes;
    private string _nextToken;
    public List`1<Handshake> Handshakes { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Handshake> get_Handshakes();
    public void set_Handshakes(List`1<Handshake> value);
    internal bool IsSetHandshakes();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Organizations.Model.ListOrganizationalUnitsForParentPaginator : object {
    private IAmazonOrganizations _client;
    private ListOrganizationalUnitsForParentRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListOrganizationalUnitsForParentResponse> Responses { get; }
    internal ListOrganizationalUnitsForParentPaginator(IAmazonOrganizations client, ListOrganizationalUnitsForParentRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListOrganizationalUnitsForParentResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListOrganizationalUnitsForParentPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListOrganizationalUnitsForParentResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListOrganizationalUnitsForParentResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListOrganizationalUnitsForParentResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListOrganizationalUnitsForParentRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _parentId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ParentId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ParentId();
    public void set_ParentId(string value);
    internal bool IsSetParentId();
}
public class Amazon.Organizations.Model.ListOrganizationalUnitsForParentResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<OrganizationalUnit> _organizationalUnits;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<OrganizationalUnit> OrganizationalUnits { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<OrganizationalUnit> get_OrganizationalUnits();
    public void set_OrganizationalUnits(List`1<OrganizationalUnit> value);
    internal bool IsSetOrganizationalUnits();
}
internal class Amazon.Organizations.Model.ListParentsPaginator : object {
    private IAmazonOrganizations _client;
    private ListParentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListParentsResponse> Responses { get; }
    internal ListParentsPaginator(IAmazonOrganizations client, ListParentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListParentsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListParentsPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListParentsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListParentsResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListParentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListParentsRequest : AmazonOrganizationsRequest {
    private string _childId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ChildId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_ChildId();
    public void set_ChildId(string value);
    internal bool IsSetChildId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListParentsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Parent> _parents;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Parent> Parents { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Parent> get_Parents();
    public void set_Parents(List`1<Parent> value);
    internal bool IsSetParents();
}
internal class Amazon.Organizations.Model.ListPoliciesForTargetPaginator : object {
    private IAmazonOrganizations _client;
    private ListPoliciesForTargetRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListPoliciesForTargetResponse> Responses { get; }
    internal ListPoliciesForTargetPaginator(IAmazonOrganizations client, ListPoliciesForTargetRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListPoliciesForTargetResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListPoliciesForTargetPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListPoliciesForTargetResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListPoliciesForTargetResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListPoliciesForTargetResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListPoliciesForTargetRequest : AmazonOrganizationsRequest {
    private PolicyType _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _targetId;
    [AWSPropertyAttribute]
public PolicyType Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TargetId { get; public set; }
    public PolicyType get_Filter();
    public void set_Filter(PolicyType value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TargetId();
    public void set_TargetId(string value);
    internal bool IsSetTargetId();
}
public class Amazon.Organizations.Model.ListPoliciesForTargetResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PolicySummary> _policies;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<PolicySummary> Policies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PolicySummary> get_Policies();
    public void set_Policies(List`1<PolicySummary> value);
    internal bool IsSetPolicies();
}
internal class Amazon.Organizations.Model.ListPoliciesPaginator : object {
    private IAmazonOrganizations _client;
    private ListPoliciesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListPoliciesResponse> Responses { get; }
    internal ListPoliciesPaginator(IAmazonOrganizations client, ListPoliciesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListPoliciesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListPoliciesPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListPoliciesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListPoliciesResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListPoliciesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListPoliciesRequest : AmazonOrganizationsRequest {
    private PolicyType _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public PolicyType Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public PolicyType get_Filter();
    public void set_Filter(PolicyType value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListPoliciesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PolicySummary> _policies;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<PolicySummary> Policies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PolicySummary> get_Policies();
    public void set_Policies(List`1<PolicySummary> value);
    internal bool IsSetPolicies();
}
internal class Amazon.Organizations.Model.ListRootsPaginator : object {
    private IAmazonOrganizations _client;
    private ListRootsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListRootsResponse> Responses { get; }
    internal ListRootsPaginator(IAmazonOrganizations client, ListRootsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListRootsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListRootsPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListRootsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListRootsResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListRootsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListRootsRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Organizations.Model.ListRootsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Root> _roots;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Root> Roots { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Root> get_Roots();
    public void set_Roots(List`1<Root> value);
    internal bool IsSetRoots();
}
internal class Amazon.Organizations.Model.ListTagsForResourcePaginator : object {
    private IAmazonOrganizations _client;
    private ListTagsForResourceRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    internal ListTagsForResourcePaginator(IAmazonOrganizations client, ListTagsForResourceRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Tag> get_Tags();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListTagsForResourcePaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListTagsForResourceResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTagsForResourceResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListTagsForResourceResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListTagsForResourceRequest : AmazonOrganizationsRequest {
    private string _nextToken;
    private string _resourceId;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
}
public class Amazon.Organizations.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
internal class Amazon.Organizations.Model.ListTargetsForPolicyPaginator : object {
    private IAmazonOrganizations _client;
    private ListTargetsForPolicyRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTargetsForPolicyResponse> Responses { get; }
    internal ListTargetsForPolicyPaginator(IAmazonOrganizations client, ListTargetsForPolicyRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTargetsForPolicyResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.Organizations.Model.ListTargetsForPolicyPaginator/<Amazon-Runtime-IPaginator<Amazon-Organizations-Model-ListTargetsForPolicyResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListTargetsForPolicyResponse> Amazon.Runtime.IPaginator<Amazon.Organizations.Model.ListTargetsForPolicyResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Organizations.Model.ListTargetsForPolicyRequest : AmazonOrganizationsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _policyId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string PolicyId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
}
public class Amazon.Organizations.Model.ListTargetsForPolicyResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PolicyTargetSummary> _targets;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<PolicyTargetSummary> Targets { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PolicyTargetSummary> get_Targets();
    public void set_Targets(List`1<PolicyTargetSummary> value);
    internal bool IsSetTargets();
}
public class Amazon.Organizations.Model.MalformedPolicyDocumentException : AmazonOrganizationsException {
    public MalformedPolicyDocumentException(string message);
    public MalformedPolicyDocumentException(string message, Exception innerException);
    public MalformedPolicyDocumentException(Exception innerException);
    public MalformedPolicyDocumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MalformedPolicyDocumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.MasterCannotLeaveOrganizationException : AmazonOrganizationsException {
    public MasterCannotLeaveOrganizationException(string message);
    public MasterCannotLeaveOrganizationException(string message, Exception innerException);
    public MasterCannotLeaveOrganizationException(Exception innerException);
    public MasterCannotLeaveOrganizationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MasterCannotLeaveOrganizationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.MoveAccountRequest : AmazonOrganizationsRequest {
    private string _accountId;
    private string _destinationParentId;
    private string _sourceParentId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string DestinationParentId { get; public set; }
    [AWSPropertyAttribute]
public string SourceParentId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_DestinationParentId();
    public void set_DestinationParentId(string value);
    internal bool IsSetDestinationParentId();
    public string get_SourceParentId();
    public void set_SourceParentId(string value);
    internal bool IsSetSourceParentId();
}
public class Amazon.Organizations.Model.MoveAccountResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.Organization : object {
    private string _arn;
    private List`1<PolicyTypeSummary> _availablePolicyTypes;
    private OrganizationFeatureSet _featureSet;
    private string _id;
    private string _masterAccountArn;
    private string _masterAccountEmail;
    private string _masterAccountId;
    public string Arn { get; public set; }
    public List`1<PolicyTypeSummary> AvailablePolicyTypes { get; public set; }
    public OrganizationFeatureSet FeatureSet { get; public set; }
    public string Id { get; public set; }
    public string MasterAccountArn { get; public set; }
    [AWSPropertyAttribute]
public string MasterAccountEmail { get; public set; }
    [AWSPropertyAttribute]
public string MasterAccountId { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public List`1<PolicyTypeSummary> get_AvailablePolicyTypes();
    public void set_AvailablePolicyTypes(List`1<PolicyTypeSummary> value);
    internal bool IsSetAvailablePolicyTypes();
    public OrganizationFeatureSet get_FeatureSet();
    public void set_FeatureSet(OrganizationFeatureSet value);
    internal bool IsSetFeatureSet();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_MasterAccountArn();
    public void set_MasterAccountArn(string value);
    internal bool IsSetMasterAccountArn();
    public string get_MasterAccountEmail();
    public void set_MasterAccountEmail(string value);
    internal bool IsSetMasterAccountEmail();
    public string get_MasterAccountId();
    public void set_MasterAccountId(string value);
    internal bool IsSetMasterAccountId();
}
public class Amazon.Organizations.Model.OrganizationalUnit : object {
    private string _arn;
    private string _id;
    private string _name;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Organizations.Model.OrganizationalUnitNotEmptyException : AmazonOrganizationsException {
    public OrganizationalUnitNotEmptyException(string message);
    public OrganizationalUnitNotEmptyException(string message, Exception innerException);
    public OrganizationalUnitNotEmptyException(Exception innerException);
    public OrganizationalUnitNotEmptyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OrganizationalUnitNotEmptyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.OrganizationalUnitNotFoundException : AmazonOrganizationsException {
    public OrganizationalUnitNotFoundException(string message);
    public OrganizationalUnitNotFoundException(string message, Exception innerException);
    public OrganizationalUnitNotFoundException(Exception innerException);
    public OrganizationalUnitNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OrganizationalUnitNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.OrganizationNotEmptyException : AmazonOrganizationsException {
    public OrganizationNotEmptyException(string message);
    public OrganizationNotEmptyException(string message, Exception innerException);
    public OrganizationNotEmptyException(Exception innerException);
    public OrganizationNotEmptyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OrganizationNotEmptyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.OrganizationsPaginatorFactory : object {
    private IAmazonOrganizations client;
    internal OrganizationsPaginatorFactory(IAmazonOrganizations client);
    public sealed virtual IListAccountsPaginator ListAccounts(ListAccountsRequest request);
    public sealed virtual IListAccountsForParentPaginator ListAccountsForParent(ListAccountsForParentRequest request);
    public sealed virtual IListAWSServiceAccessForOrganizationPaginator ListAWSServiceAccessForOrganization(ListAWSServiceAccessForOrganizationRequest request);
    public sealed virtual IListChildrenPaginator ListChildren(ListChildrenRequest request);
    public sealed virtual IListCreateAccountStatusPaginator ListCreateAccountStatus(ListCreateAccountStatusRequest request);
    public sealed virtual IListDelegatedAdministratorsPaginator ListDelegatedAdministrators(ListDelegatedAdministratorsRequest request);
    public sealed virtual IListDelegatedServicesForAccountPaginator ListDelegatedServicesForAccount(ListDelegatedServicesForAccountRequest request);
    public sealed virtual IListHandshakesForAccountPaginator ListHandshakesForAccount(ListHandshakesForAccountRequest request);
    public sealed virtual IListHandshakesForOrganizationPaginator ListHandshakesForOrganization(ListHandshakesForOrganizationRequest request);
    public sealed virtual IListOrganizationalUnitsForParentPaginator ListOrganizationalUnitsForParent(ListOrganizationalUnitsForParentRequest request);
    public sealed virtual IListParentsPaginator ListParents(ListParentsRequest request);
    public sealed virtual IListPoliciesPaginator ListPolicies(ListPoliciesRequest request);
    public sealed virtual IListPoliciesForTargetPaginator ListPoliciesForTarget(ListPoliciesForTargetRequest request);
    public sealed virtual IListRootsPaginator ListRoots(ListRootsRequest request);
    public sealed virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
    public sealed virtual IListTargetsForPolicyPaginator ListTargetsForPolicy(ListTargetsForPolicyRequest request);
}
public class Amazon.Organizations.Model.Parent : object {
    private string _id;
    private ParentType _type;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public ParentType Type { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public ParentType get_Type();
    public void set_Type(ParentType value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.ParentNotFoundException : AmazonOrganizationsException {
    public ParentNotFoundException(string message);
    public ParentNotFoundException(string message, Exception innerException);
    public ParentNotFoundException(Exception innerException);
    public ParentNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParentNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.Policy : object {
    private string _content;
    private PolicySummary _policySummary;
    [AWSPropertyAttribute]
public string Content { get; public set; }
    public PolicySummary PolicySummary { get; public set; }
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public PolicySummary get_PolicySummary();
    public void set_PolicySummary(PolicySummary value);
    internal bool IsSetPolicySummary();
}
public class Amazon.Organizations.Model.PolicyChangesInProgressException : AmazonOrganizationsException {
    public PolicyChangesInProgressException(string message);
    public PolicyChangesInProgressException(string message, Exception innerException);
    public PolicyChangesInProgressException(Exception innerException);
    public PolicyChangesInProgressException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyChangesInProgressException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.PolicyInUseException : AmazonOrganizationsException {
    public PolicyInUseException(string message);
    public PolicyInUseException(string message, Exception innerException);
    public PolicyInUseException(Exception innerException);
    public PolicyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.PolicyNotAttachedException : AmazonOrganizationsException {
    public PolicyNotAttachedException(string message);
    public PolicyNotAttachedException(string message, Exception innerException);
    public PolicyNotAttachedException(Exception innerException);
    public PolicyNotAttachedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyNotAttachedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.PolicyNotFoundException : AmazonOrganizationsException {
    public PolicyNotFoundException(string message);
    public PolicyNotFoundException(string message, Exception innerException);
    public PolicyNotFoundException(Exception innerException);
    public PolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.PolicySummary : object {
    private string _arn;
    private Nullable`1<bool> _awsManaged;
    private string _description;
    private string _id;
    private string _name;
    private PolicyType _type;
    public string Arn { get; public set; }
    public Nullable`1<bool> AwsManaged { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PolicyType Type { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<bool> get_AwsManaged();
    public void set_AwsManaged(Nullable`1<bool> value);
    internal bool IsSetAwsManaged();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PolicyType get_Type();
    public void set_Type(PolicyType value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.PolicyTargetSummary : object {
    private string _arn;
    private string _name;
    private string _targetId;
    private TargetType _type;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string TargetId { get; public set; }
    public TargetType Type { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_TargetId();
    public void set_TargetId(string value);
    internal bool IsSetTargetId();
    public TargetType get_Type();
    public void set_Type(TargetType value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.PolicyTypeAlreadyEnabledException : AmazonOrganizationsException {
    public PolicyTypeAlreadyEnabledException(string message);
    public PolicyTypeAlreadyEnabledException(string message, Exception innerException);
    public PolicyTypeAlreadyEnabledException(Exception innerException);
    public PolicyTypeAlreadyEnabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyTypeAlreadyEnabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.PolicyTypeNotAvailableForOrganizationException : AmazonOrganizationsException {
    public PolicyTypeNotAvailableForOrganizationException(string message);
    public PolicyTypeNotAvailableForOrganizationException(string message, Exception innerException);
    public PolicyTypeNotAvailableForOrganizationException(Exception innerException);
    public PolicyTypeNotAvailableForOrganizationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyTypeNotAvailableForOrganizationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.PolicyTypeNotEnabledException : AmazonOrganizationsException {
    public PolicyTypeNotEnabledException(string message);
    public PolicyTypeNotEnabledException(string message, Exception innerException);
    public PolicyTypeNotEnabledException(Exception innerException);
    public PolicyTypeNotEnabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyTypeNotEnabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.PolicyTypeSummary : object {
    private PolicyTypeStatus _status;
    private PolicyType _type;
    public PolicyTypeStatus Status { get; public set; }
    public PolicyType Type { get; public set; }
    public PolicyTypeStatus get_Status();
    public void set_Status(PolicyTypeStatus value);
    internal bool IsSetStatus();
    public PolicyType get_Type();
    public void set_Type(PolicyType value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.PutResourcePolicyRequest : AmazonOrganizationsRequest {
    private string _content;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string Content { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Organizations.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private ResourcePolicy _resourcePolicy;
    public ResourcePolicy ResourcePolicy { get; public set; }
    public ResourcePolicy get_ResourcePolicy();
    public void set_ResourcePolicy(ResourcePolicy value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.Organizations.Model.RegisterDelegatedAdministratorRequest : AmazonOrganizationsRequest {
    private string _accountId;
    private string _servicePrincipal;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ServicePrincipal { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ServicePrincipal();
    public void set_ServicePrincipal(string value);
    internal bool IsSetServicePrincipal();
}
public class Amazon.Organizations.Model.RegisterDelegatedAdministratorResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.RemoveAccountFromOrganizationRequest : AmazonOrganizationsRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Organizations.Model.RemoveAccountFromOrganizationResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.ResourcePolicy : object {
    private string _content;
    private ResourcePolicySummary _resourcePolicySummary;
    [AWSPropertyAttribute]
public string Content { get; public set; }
    public ResourcePolicySummary ResourcePolicySummary { get; public set; }
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public ResourcePolicySummary get_ResourcePolicySummary();
    public void set_ResourcePolicySummary(ResourcePolicySummary value);
    internal bool IsSetResourcePolicySummary();
}
public class Amazon.Organizations.Model.ResourcePolicyNotFoundException : AmazonOrganizationsException {
    public ResourcePolicyNotFoundException(string message);
    public ResourcePolicyNotFoundException(string message, Exception innerException);
    public ResourcePolicyNotFoundException(Exception innerException);
    public ResourcePolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourcePolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.ResourcePolicySummary : object {
    private string _arn;
    private string _id;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.Organizations.Model.Root : object {
    private string _arn;
    private string _id;
    private string _name;
    private List`1<PolicyTypeSummary> _policyTypes;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<PolicyTypeSummary> PolicyTypes { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<PolicyTypeSummary> get_PolicyTypes();
    public void set_PolicyTypes(List`1<PolicyTypeSummary> value);
    internal bool IsSetPolicyTypes();
}
public class Amazon.Organizations.Model.RootNotFoundException : AmazonOrganizationsException {
    public RootNotFoundException(string message);
    public RootNotFoundException(string message, Exception innerException);
    public RootNotFoundException(Exception innerException);
    public RootNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RootNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.ServiceException : AmazonOrganizationsException {
    public ServiceException(string message);
    public ServiceException(string message, Exception innerException);
    public ServiceException(Exception innerException);
    public ServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.SourceParentNotFoundException : AmazonOrganizationsException {
    public SourceParentNotFoundException(string message);
    public SourceParentNotFoundException(string message, Exception innerException);
    public SourceParentNotFoundException(Exception innerException);
    public SourceParentNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SourceParentNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Organizations.Model.TagResourceRequest : AmazonOrganizationsRequest {
    private string _resourceId;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Organizations.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.TargetNotFoundException : AmazonOrganizationsException {
    public TargetNotFoundException(string message);
    public TargetNotFoundException(string message, Exception innerException);
    public TargetNotFoundException(Exception innerException);
    public TargetNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TargetNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.TooManyRequestsException : AmazonOrganizationsException {
    private string _type;
    public string Type { get; public set; }
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Organizations.Model.UnsupportedAPIEndpointException : AmazonOrganizationsException {
    public UnsupportedAPIEndpointException(string message);
    public UnsupportedAPIEndpointException(string message, Exception innerException);
    public UnsupportedAPIEndpointException(Exception innerException);
    public UnsupportedAPIEndpointException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedAPIEndpointException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Organizations.Model.UntagResourceRequest : AmazonOrganizationsRequest {
    private string _resourceId;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.Organizations.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Organizations.Model.UpdateOrganizationalUnitRequest : AmazonOrganizationsRequest {
    private string _name;
    private string _organizationalUnitId;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string OrganizationalUnitId { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OrganizationalUnitId();
    public void set_OrganizationalUnitId(string value);
    internal bool IsSetOrganizationalUnitId();
}
public class Amazon.Organizations.Model.UpdateOrganizationalUnitResponse : AmazonWebServiceResponse {
    private OrganizationalUnit _organizationalUnit;
    public OrganizationalUnit OrganizationalUnit { get; public set; }
    public OrganizationalUnit get_OrganizationalUnit();
    public void set_OrganizationalUnit(OrganizationalUnit value);
    internal bool IsSetOrganizationalUnit();
}
public class Amazon.Organizations.Model.UpdatePolicyRequest : AmazonOrganizationsRequest {
    private string _content;
    private string _description;
    private string _name;
    private string _policyId;
    [AWSPropertyAttribute]
public string Content { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string PolicyId { get; public set; }
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
}
public class Amazon.Organizations.Model.UpdatePolicyResponse : AmazonWebServiceResponse {
    private Policy _policy;
    public Policy Policy { get; public set; }
    public Policy get_Policy();
    public void set_Policy(Policy value);
    internal bool IsSetPolicy();
}
public class Amazon.Organizations.OrganizationFeatureSet : ConstantClass {
    public static OrganizationFeatureSet ALL;
    public static OrganizationFeatureSet CONSOLIDATED_BILLING;
    public OrganizationFeatureSet(string value);
    private static OrganizationFeatureSet();
    public static OrganizationFeatureSet FindValue(string value);
    public static OrganizationFeatureSet op_Implicit(string value);
}
public class Amazon.Organizations.ParentType : ConstantClass {
    public static ParentType ORGANIZATIONAL_UNIT;
    public static ParentType ROOT;
    public ParentType(string value);
    private static ParentType();
    public static ParentType FindValue(string value);
    public static ParentType op_Implicit(string value);
}
public class Amazon.Organizations.PolicyType : ConstantClass {
    public static PolicyType AISERVICES_OPT_OUT_POLICY;
    public static PolicyType BACKUP_POLICY;
    public static PolicyType SERVICE_CONTROL_POLICY;
    public static PolicyType TAG_POLICY;
    public PolicyType(string value);
    private static PolicyType();
    public static PolicyType FindValue(string value);
    public static PolicyType op_Implicit(string value);
}
public class Amazon.Organizations.PolicyTypeStatus : ConstantClass {
    public static PolicyTypeStatus ENABLED;
    public static PolicyTypeStatus PENDING_DISABLE;
    public static PolicyTypeStatus PENDING_ENABLE;
    public PolicyTypeStatus(string value);
    private static PolicyTypeStatus();
    public static PolicyTypeStatus FindValue(string value);
    public static PolicyTypeStatus op_Implicit(string value);
}
public class Amazon.Organizations.TargetType : ConstantClass {
    public static TargetType ACCOUNT;
    public static TargetType ORGANIZATIONAL_UNIT;
    public static TargetType ROOT;
    public TargetType(string value);
    private static TargetType();
    public static TargetType FindValue(string value);
    public static TargetType op_Implicit(string value);
}
