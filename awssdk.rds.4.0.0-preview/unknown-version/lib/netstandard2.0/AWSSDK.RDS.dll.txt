public class Amazon.RDS.ActivityStreamMode : ConstantClass {
    public static ActivityStreamMode Async;
    public static ActivityStreamMode Sync;
    public ActivityStreamMode(string value);
    private static ActivityStreamMode();
    public static ActivityStreamMode FindValue(string value);
    public static ActivityStreamMode op_Implicit(string value);
}
public class Amazon.RDS.ActivityStreamPolicyStatus : ConstantClass {
    public static ActivityStreamPolicyStatus Locked;
    public static ActivityStreamPolicyStatus LockingPolicy;
    public static ActivityStreamPolicyStatus Unlocked;
    public static ActivityStreamPolicyStatus UnlockingPolicy;
    public ActivityStreamPolicyStatus(string value);
    private static ActivityStreamPolicyStatus();
    public static ActivityStreamPolicyStatus FindValue(string value);
    public static ActivityStreamPolicyStatus op_Implicit(string value);
}
public class Amazon.RDS.ActivityStreamStatus : ConstantClass {
    public static ActivityStreamStatus Started;
    public static ActivityStreamStatus Starting;
    public static ActivityStreamStatus Stopped;
    public static ActivityStreamStatus Stopping;
    public ActivityStreamStatus(string value);
    private static ActivityStreamStatus();
    public static ActivityStreamStatus FindValue(string value);
    public static ActivityStreamStatus op_Implicit(string value);
}
public class Amazon.RDS.AmazonRDSClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IRDSPaginatorFactory _paginators;
    public IRDSPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonRDSClient(RegionEndpoint region);
    public AmazonRDSClient(AmazonRDSConfig config);
    public AmazonRDSClient(AWSCredentials credentials);
    public AmazonRDSClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonRDSClient(AWSCredentials credentials, AmazonRDSConfig clientConfig);
    public AmazonRDSClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonRDSClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonRDSClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonRDSConfig clientConfig);
    public AmazonRDSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonRDSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonRDSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonRDSConfig clientConfig);
    private static AmazonRDSClient();
    public sealed virtual IRDSPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddRoleToDBClusterResponse AddRoleToDBCluster(AddRoleToDBClusterRequest request);
    public virtual Task`1<AddRoleToDBClusterResponse> AddRoleToDBClusterAsync(AddRoleToDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual AddRoleToDBInstanceResponse AddRoleToDBInstance(AddRoleToDBInstanceRequest request);
    public virtual Task`1<AddRoleToDBInstanceResponse> AddRoleToDBInstanceAsync(AddRoleToDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual AddSourceIdentifierToSubscriptionResponse AddSourceIdentifierToSubscription(AddSourceIdentifierToSubscriptionRequest request);
    public virtual Task`1<AddSourceIdentifierToSubscriptionResponse> AddSourceIdentifierToSubscriptionAsync(AddSourceIdentifierToSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual AddTagsToResourceResponse AddTagsToResource(AddTagsToResourceRequest request);
    public virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    internal virtual ApplyPendingMaintenanceActionResponse ApplyPendingMaintenanceAction(ApplyPendingMaintenanceActionRequest request);
    public virtual Task`1<ApplyPendingMaintenanceActionResponse> ApplyPendingMaintenanceActionAsync(ApplyPendingMaintenanceActionRequest request, CancellationToken cancellationToken);
    internal virtual AuthorizeDBSecurityGroupIngressResponse AuthorizeDBSecurityGroupIngress(AuthorizeDBSecurityGroupIngressRequest request);
    public virtual Task`1<AuthorizeDBSecurityGroupIngressResponse> AuthorizeDBSecurityGroupIngressAsync(AuthorizeDBSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    internal virtual BacktrackDBClusterResponse BacktrackDBCluster(BacktrackDBClusterRequest request);
    public virtual Task`1<BacktrackDBClusterResponse> BacktrackDBClusterAsync(BacktrackDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual CancelExportTaskResponse CancelExportTask(CancelExportTaskRequest request);
    public virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    internal virtual CopyDBClusterParameterGroupResponse CopyDBClusterParameterGroup(CopyDBClusterParameterGroupRequest request);
    public virtual Task`1<CopyDBClusterParameterGroupResponse> CopyDBClusterParameterGroupAsync(CopyDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual CopyDBClusterSnapshotResponse CopyDBClusterSnapshot(CopyDBClusterSnapshotRequest request);
    public virtual Task`1<CopyDBClusterSnapshotResponse> CopyDBClusterSnapshotAsync(CopyDBClusterSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual CopyDBParameterGroupResponse CopyDBParameterGroup(CopyDBParameterGroupRequest request);
    public virtual Task`1<CopyDBParameterGroupResponse> CopyDBParameterGroupAsync(CopyDBParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual CopyDBSnapshotResponse CopyDBSnapshot(CopyDBSnapshotRequest request);
    public virtual Task`1<CopyDBSnapshotResponse> CopyDBSnapshotAsync(CopyDBSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual CopyOptionGroupResponse CopyOptionGroup(CopyOptionGroupRequest request);
    public virtual Task`1<CopyOptionGroupResponse> CopyOptionGroupAsync(CopyOptionGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateBlueGreenDeploymentResponse CreateBlueGreenDeployment(CreateBlueGreenDeploymentRequest request);
    public virtual Task`1<CreateBlueGreenDeploymentResponse> CreateBlueGreenDeploymentAsync(CreateBlueGreenDeploymentRequest request, CancellationToken cancellationToken);
    internal virtual CreateCustomDBEngineVersionResponse CreateCustomDBEngineVersion(CreateCustomDBEngineVersionRequest request);
    public virtual Task`1<CreateCustomDBEngineVersionResponse> CreateCustomDBEngineVersionAsync(CreateCustomDBEngineVersionRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBClusterResponse CreateDBCluster(CreateDBClusterRequest request);
    public virtual Task`1<CreateDBClusterResponse> CreateDBClusterAsync(CreateDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBClusterEndpointResponse CreateDBClusterEndpoint(CreateDBClusterEndpointRequest request);
    public virtual Task`1<CreateDBClusterEndpointResponse> CreateDBClusterEndpointAsync(CreateDBClusterEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request);
    public virtual Task`1<CreateDBClusterParameterGroupResponse> CreateDBClusterParameterGroupAsync(CreateDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBClusterSnapshotResponse CreateDBClusterSnapshot(CreateDBClusterSnapshotRequest request);
    public virtual Task`1<CreateDBClusterSnapshotResponse> CreateDBClusterSnapshotAsync(CreateDBClusterSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBInstanceResponse CreateDBInstance(CreateDBInstanceRequest request);
    public virtual Task`1<CreateDBInstanceResponse> CreateDBInstanceAsync(CreateDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBInstanceReadReplicaResponse CreateDBInstanceReadReplica(CreateDBInstanceReadReplicaRequest request);
    public virtual Task`1<CreateDBInstanceReadReplicaResponse> CreateDBInstanceReadReplicaAsync(CreateDBInstanceReadReplicaRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBParameterGroupResponse CreateDBParameterGroup(CreateDBParameterGroupRequest request);
    public virtual Task`1<CreateDBParameterGroupResponse> CreateDBParameterGroupAsync(CreateDBParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBProxyResponse CreateDBProxy(CreateDBProxyRequest request);
    public virtual Task`1<CreateDBProxyResponse> CreateDBProxyAsync(CreateDBProxyRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBProxyEndpointResponse CreateDBProxyEndpoint(CreateDBProxyEndpointRequest request);
    public virtual Task`1<CreateDBProxyEndpointResponse> CreateDBProxyEndpointAsync(CreateDBProxyEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBSecurityGroupResponse CreateDBSecurityGroup(CreateDBSecurityGroupRequest request);
    public virtual Task`1<CreateDBSecurityGroupResponse> CreateDBSecurityGroupAsync(CreateDBSecurityGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBShardGroupResponse CreateDBShardGroup(CreateDBShardGroupRequest request);
    public virtual Task`1<CreateDBShardGroupResponse> CreateDBShardGroupAsync(CreateDBShardGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBSnapshotResponse CreateDBSnapshot(CreateDBSnapshotRequest request);
    public virtual Task`1<CreateDBSnapshotResponse> CreateDBSnapshotAsync(CreateDBSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request);
    public virtual Task`1<CreateDBSubnetGroupResponse> CreateDBSubnetGroupAsync(CreateDBSubnetGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateEventSubscriptionResponse CreateEventSubscription(CreateEventSubscriptionRequest request);
    public virtual Task`1<CreateEventSubscriptionResponse> CreateEventSubscriptionAsync(CreateEventSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual CreateGlobalClusterResponse CreateGlobalCluster(CreateGlobalClusterRequest request);
    public virtual Task`1<CreateGlobalClusterResponse> CreateGlobalClusterAsync(CreateGlobalClusterRequest request, CancellationToken cancellationToken);
    internal virtual CreateIntegrationResponse CreateIntegration(CreateIntegrationRequest request);
    public virtual Task`1<CreateIntegrationResponse> CreateIntegrationAsync(CreateIntegrationRequest request, CancellationToken cancellationToken);
    internal virtual CreateOptionGroupResponse CreateOptionGroup(CreateOptionGroupRequest request);
    public virtual Task`1<CreateOptionGroupResponse> CreateOptionGroupAsync(CreateOptionGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateTenantDatabaseResponse CreateTenantDatabase(CreateTenantDatabaseRequest request);
    public virtual Task`1<CreateTenantDatabaseResponse> CreateTenantDatabaseAsync(CreateTenantDatabaseRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBlueGreenDeploymentResponse DeleteBlueGreenDeployment(DeleteBlueGreenDeploymentRequest request);
    public virtual Task`1<DeleteBlueGreenDeploymentResponse> DeleteBlueGreenDeploymentAsync(DeleteBlueGreenDeploymentRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCustomDBEngineVersionResponse DeleteCustomDBEngineVersion(DeleteCustomDBEngineVersionRequest request);
    public virtual Task`1<DeleteCustomDBEngineVersionResponse> DeleteCustomDBEngineVersionAsync(DeleteCustomDBEngineVersionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBClusterResponse DeleteDBCluster(DeleteDBClusterRequest request);
    public virtual Task`1<DeleteDBClusterResponse> DeleteDBClusterAsync(DeleteDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBClusterAutomatedBackupResponse DeleteDBClusterAutomatedBackup(DeleteDBClusterAutomatedBackupRequest request);
    public virtual Task`1<DeleteDBClusterAutomatedBackupResponse> DeleteDBClusterAutomatedBackupAsync(DeleteDBClusterAutomatedBackupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBClusterEndpointResponse DeleteDBClusterEndpoint(DeleteDBClusterEndpointRequest request);
    public virtual Task`1<DeleteDBClusterEndpointResponse> DeleteDBClusterEndpointAsync(DeleteDBClusterEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBClusterParameterGroupResponse DeleteDBClusterParameterGroup(DeleteDBClusterParameterGroupRequest request);
    public virtual Task`1<DeleteDBClusterParameterGroupResponse> DeleteDBClusterParameterGroupAsync(DeleteDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBClusterSnapshotResponse DeleteDBClusterSnapshot(DeleteDBClusterSnapshotRequest request);
    public virtual Task`1<DeleteDBClusterSnapshotResponse> DeleteDBClusterSnapshotAsync(DeleteDBClusterSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBInstanceResponse DeleteDBInstance(DeleteDBInstanceRequest request);
    public virtual Task`1<DeleteDBInstanceResponse> DeleteDBInstanceAsync(DeleteDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBInstanceAutomatedBackupResponse DeleteDBInstanceAutomatedBackup(DeleteDBInstanceAutomatedBackupRequest request);
    public virtual Task`1<DeleteDBInstanceAutomatedBackupResponse> DeleteDBInstanceAutomatedBackupAsync(DeleteDBInstanceAutomatedBackupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBParameterGroupResponse DeleteDBParameterGroup(DeleteDBParameterGroupRequest request);
    public virtual Task`1<DeleteDBParameterGroupResponse> DeleteDBParameterGroupAsync(DeleteDBParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBProxyResponse DeleteDBProxy(DeleteDBProxyRequest request);
    public virtual Task`1<DeleteDBProxyResponse> DeleteDBProxyAsync(DeleteDBProxyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBProxyEndpointResponse DeleteDBProxyEndpoint(DeleteDBProxyEndpointRequest request);
    public virtual Task`1<DeleteDBProxyEndpointResponse> DeleteDBProxyEndpointAsync(DeleteDBProxyEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBSecurityGroupResponse DeleteDBSecurityGroup(DeleteDBSecurityGroupRequest request);
    public virtual Task`1<DeleteDBSecurityGroupResponse> DeleteDBSecurityGroupAsync(DeleteDBSecurityGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBShardGroupResponse DeleteDBShardGroup(DeleteDBShardGroupRequest request);
    public virtual Task`1<DeleteDBShardGroupResponse> DeleteDBShardGroupAsync(DeleteDBShardGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBSnapshotResponse DeleteDBSnapshot(DeleteDBSnapshotRequest request);
    public virtual Task`1<DeleteDBSnapshotResponse> DeleteDBSnapshotAsync(DeleteDBSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDBSubnetGroupResponse DeleteDBSubnetGroup(DeleteDBSubnetGroupRequest request);
    public virtual Task`1<DeleteDBSubnetGroupResponse> DeleteDBSubnetGroupAsync(DeleteDBSubnetGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteEventSubscriptionResponse DeleteEventSubscription(DeleteEventSubscriptionRequest request);
    public virtual Task`1<DeleteEventSubscriptionResponse> DeleteEventSubscriptionAsync(DeleteEventSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteGlobalClusterResponse DeleteGlobalCluster(DeleteGlobalClusterRequest request);
    public virtual Task`1<DeleteGlobalClusterResponse> DeleteGlobalClusterAsync(DeleteGlobalClusterRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIntegrationResponse DeleteIntegration(DeleteIntegrationRequest request);
    public virtual Task`1<DeleteIntegrationResponse> DeleteIntegrationAsync(DeleteIntegrationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteOptionGroupResponse DeleteOptionGroup(DeleteOptionGroupRequest request);
    public virtual Task`1<DeleteOptionGroupResponse> DeleteOptionGroupAsync(DeleteOptionGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTenantDatabaseResponse DeleteTenantDatabase(DeleteTenantDatabaseRequest request);
    public virtual Task`1<DeleteTenantDatabaseResponse> DeleteTenantDatabaseAsync(DeleteTenantDatabaseRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterDBProxyTargetsResponse DeregisterDBProxyTargets(DeregisterDBProxyTargetsRequest request);
    public virtual Task`1<DeregisterDBProxyTargetsResponse> DeregisterDBProxyTargetsAsync(DeregisterDBProxyTargetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAccountAttributesResponse DescribeAccountAttributes();
    internal virtual DescribeAccountAttributesResponse DescribeAccountAttributes(DescribeAccountAttributesRequest request);
    public virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBlueGreenDeploymentsResponse DescribeBlueGreenDeployments(DescribeBlueGreenDeploymentsRequest request);
    public virtual Task`1<DescribeBlueGreenDeploymentsResponse> DescribeBlueGreenDeploymentsAsync(DescribeBlueGreenDeploymentsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCertificatesResponse DescribeCertificates(DescribeCertificatesRequest request);
    public virtual Task`1<DescribeCertificatesResponse> DescribeCertificatesAsync(DescribeCertificatesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClusterAutomatedBackupsResponse DescribeDBClusterAutomatedBackups(DescribeDBClusterAutomatedBackupsRequest request);
    public virtual Task`1<DescribeDBClusterAutomatedBackupsResponse> DescribeDBClusterAutomatedBackupsAsync(DescribeDBClusterAutomatedBackupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClusterBacktracksResponse DescribeDBClusterBacktracks(DescribeDBClusterBacktracksRequest request);
    public virtual Task`1<DescribeDBClusterBacktracksResponse> DescribeDBClusterBacktracksAsync(DescribeDBClusterBacktracksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClusterEndpointsResponse DescribeDBClusterEndpoints(DescribeDBClusterEndpointsRequest request);
    public virtual Task`1<DescribeDBClusterEndpointsResponse> DescribeDBClusterEndpointsAsync(DescribeDBClusterEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClusterParameterGroupsResponse DescribeDBClusterParameterGroups(DescribeDBClusterParameterGroupsRequest request);
    public virtual Task`1<DescribeDBClusterParameterGroupsResponse> DescribeDBClusterParameterGroupsAsync(DescribeDBClusterParameterGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClusterParametersResponse DescribeDBClusterParameters(DescribeDBClusterParametersRequest request);
    public virtual Task`1<DescribeDBClusterParametersResponse> DescribeDBClusterParametersAsync(DescribeDBClusterParametersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClustersResponse DescribeDBClusters(DescribeDBClustersRequest request);
    public virtual Task`1<DescribeDBClustersResponse> DescribeDBClustersAsync(DescribeDBClustersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClusterSnapshotAttributesResponse DescribeDBClusterSnapshotAttributes(DescribeDBClusterSnapshotAttributesRequest request);
    public virtual Task`1<DescribeDBClusterSnapshotAttributesResponse> DescribeDBClusterSnapshotAttributesAsync(DescribeDBClusterSnapshotAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBClusterSnapshotsResponse DescribeDBClusterSnapshots(DescribeDBClusterSnapshotsRequest request);
    public virtual Task`1<DescribeDBClusterSnapshotsResponse> DescribeDBClusterSnapshotsAsync(DescribeDBClusterSnapshotsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBEngineVersionsResponse DescribeDBEngineVersions();
    internal virtual DescribeDBEngineVersionsResponse DescribeDBEngineVersions(DescribeDBEngineVersionsRequest request);
    public virtual Task`1<DescribeDBEngineVersionsResponse> DescribeDBEngineVersionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeDBEngineVersionsResponse> DescribeDBEngineVersionsAsync(DescribeDBEngineVersionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBInstanceAutomatedBackupsResponse DescribeDBInstanceAutomatedBackups(DescribeDBInstanceAutomatedBackupsRequest request);
    public virtual Task`1<DescribeDBInstanceAutomatedBackupsResponse> DescribeDBInstanceAutomatedBackupsAsync(DescribeDBInstanceAutomatedBackupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBInstancesResponse DescribeDBInstances();
    internal virtual DescribeDBInstancesResponse DescribeDBInstances(DescribeDBInstancesRequest request);
    public virtual Task`1<DescribeDBInstancesResponse> DescribeDBInstancesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeDBInstancesResponse> DescribeDBInstancesAsync(DescribeDBInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBLogFilesResponse DescribeDBLogFiles(DescribeDBLogFilesRequest request);
    public virtual Task`1<DescribeDBLogFilesResponse> DescribeDBLogFilesAsync(DescribeDBLogFilesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBParameterGroupsResponse DescribeDBParameterGroups();
    internal virtual DescribeDBParameterGroupsResponse DescribeDBParameterGroups(DescribeDBParameterGroupsRequest request);
    public virtual Task`1<DescribeDBParameterGroupsResponse> DescribeDBParameterGroupsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeDBParameterGroupsResponse> DescribeDBParameterGroupsAsync(DescribeDBParameterGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBParametersResponse DescribeDBParameters(DescribeDBParametersRequest request);
    public virtual Task`1<DescribeDBParametersResponse> DescribeDBParametersAsync(DescribeDBParametersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request);
    public virtual Task`1<DescribeDBProxiesResponse> DescribeDBProxiesAsync(DescribeDBProxiesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBProxyEndpointsResponse DescribeDBProxyEndpoints(DescribeDBProxyEndpointsRequest request);
    public virtual Task`1<DescribeDBProxyEndpointsResponse> DescribeDBProxyEndpointsAsync(DescribeDBProxyEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBProxyTargetGroupsResponse DescribeDBProxyTargetGroups(DescribeDBProxyTargetGroupsRequest request);
    public virtual Task`1<DescribeDBProxyTargetGroupsResponse> DescribeDBProxyTargetGroupsAsync(DescribeDBProxyTargetGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBProxyTargetsResponse DescribeDBProxyTargets(DescribeDBProxyTargetsRequest request);
    public virtual Task`1<DescribeDBProxyTargetsResponse> DescribeDBProxyTargetsAsync(DescribeDBProxyTargetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBRecommendationsResponse DescribeDBRecommendations(DescribeDBRecommendationsRequest request);
    public virtual Task`1<DescribeDBRecommendationsResponse> DescribeDBRecommendationsAsync(DescribeDBRecommendationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBSecurityGroupsResponse DescribeDBSecurityGroups();
    internal virtual DescribeDBSecurityGroupsResponse DescribeDBSecurityGroups(DescribeDBSecurityGroupsRequest request);
    public virtual Task`1<DescribeDBSecurityGroupsResponse> DescribeDBSecurityGroupsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeDBSecurityGroupsResponse> DescribeDBSecurityGroupsAsync(DescribeDBSecurityGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBShardGroupsResponse DescribeDBShardGroups(DescribeDBShardGroupsRequest request);
    public virtual Task`1<DescribeDBShardGroupsResponse> DescribeDBShardGroupsAsync(DescribeDBShardGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBSnapshotAttributesResponse DescribeDBSnapshotAttributes(DescribeDBSnapshotAttributesRequest request);
    public virtual Task`1<DescribeDBSnapshotAttributesResponse> DescribeDBSnapshotAttributesAsync(DescribeDBSnapshotAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBSnapshotsResponse DescribeDBSnapshots();
    internal virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request);
    public virtual Task`1<DescribeDBSnapshotsResponse> DescribeDBSnapshotsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeDBSnapshotsResponse> DescribeDBSnapshotsAsync(DescribeDBSnapshotsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBSnapshotTenantDatabasesResponse DescribeDBSnapshotTenantDatabases(DescribeDBSnapshotTenantDatabasesRequest request);
    public virtual Task`1<DescribeDBSnapshotTenantDatabasesResponse> DescribeDBSnapshotTenantDatabasesAsync(DescribeDBSnapshotTenantDatabasesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDBSubnetGroupsResponse DescribeDBSubnetGroups();
    internal virtual DescribeDBSubnetGroupsResponse DescribeDBSubnetGroups(DescribeDBSubnetGroupsRequest request);
    public virtual Task`1<DescribeDBSubnetGroupsResponse> DescribeDBSubnetGroupsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeDBSubnetGroupsResponse> DescribeDBSubnetGroupsAsync(DescribeDBSubnetGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEngineDefaultClusterParametersResponse DescribeEngineDefaultClusterParameters(DescribeEngineDefaultClusterParametersRequest request);
    public virtual Task`1<DescribeEngineDefaultClusterParametersResponse> DescribeEngineDefaultClusterParametersAsync(DescribeEngineDefaultClusterParametersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEngineDefaultParametersResponse DescribeEngineDefaultParameters(DescribeEngineDefaultParametersRequest request);
    public virtual Task`1<DescribeEngineDefaultParametersResponse> DescribeEngineDefaultParametersAsync(DescribeEngineDefaultParametersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEventCategoriesResponse DescribeEventCategories();
    internal virtual DescribeEventCategoriesResponse DescribeEventCategories(DescribeEventCategoriesRequest request);
    public virtual Task`1<DescribeEventCategoriesResponse> DescribeEventCategoriesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeEventCategoriesResponse> DescribeEventCategoriesAsync(DescribeEventCategoriesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEventsResponse DescribeEvents();
    internal virtual DescribeEventsResponse DescribeEvents(DescribeEventsRequest request);
    public virtual Task`1<DescribeEventsResponse> DescribeEventsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeEventsResponse> DescribeEventsAsync(DescribeEventsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEventSubscriptionsResponse DescribeEventSubscriptions();
    internal virtual DescribeEventSubscriptionsResponse DescribeEventSubscriptions(DescribeEventSubscriptionsRequest request);
    public virtual Task`1<DescribeEventSubscriptionsResponse> DescribeEventSubscriptionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeEventSubscriptionsResponse> DescribeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeExportTasksResponse DescribeExportTasks(DescribeExportTasksRequest request);
    public virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeGlobalClustersResponse DescribeGlobalClusters(DescribeGlobalClustersRequest request);
    public virtual Task`1<DescribeGlobalClustersResponse> DescribeGlobalClustersAsync(DescribeGlobalClustersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIntegrationsResponse DescribeIntegrations(DescribeIntegrationsRequest request);
    public virtual Task`1<DescribeIntegrationsResponse> DescribeIntegrationsAsync(DescribeIntegrationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeOptionGroupOptionsResponse DescribeOptionGroupOptions(DescribeOptionGroupOptionsRequest request);
    public virtual Task`1<DescribeOptionGroupOptionsResponse> DescribeOptionGroupOptionsAsync(DescribeOptionGroupOptionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeOptionGroupsResponse DescribeOptionGroups();
    internal virtual DescribeOptionGroupsResponse DescribeOptionGroups(DescribeOptionGroupsRequest request);
    public virtual Task`1<DescribeOptionGroupsResponse> DescribeOptionGroupsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeOptionGroupsResponse> DescribeOptionGroupsAsync(DescribeOptionGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeOrderableDBInstanceOptionsResponse DescribeOrderableDBInstanceOptions(DescribeOrderableDBInstanceOptionsRequest request);
    public virtual Task`1<DescribeOrderableDBInstanceOptionsResponse> DescribeOrderableDBInstanceOptionsAsync(DescribeOrderableDBInstanceOptionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribePendingMaintenanceActionsResponse DescribePendingMaintenanceActions(DescribePendingMaintenanceActionsRequest request);
    public virtual Task`1<DescribePendingMaintenanceActionsResponse> DescribePendingMaintenanceActionsAsync(DescribePendingMaintenanceActionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReservedDBInstancesResponse DescribeReservedDBInstances();
    internal virtual DescribeReservedDBInstancesResponse DescribeReservedDBInstances(DescribeReservedDBInstancesRequest request);
    public virtual Task`1<DescribeReservedDBInstancesResponse> DescribeReservedDBInstancesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeReservedDBInstancesResponse> DescribeReservedDBInstancesAsync(DescribeReservedDBInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReservedDBInstancesOfferingsResponse DescribeReservedDBInstancesOfferings();
    internal virtual DescribeReservedDBInstancesOfferingsResponse DescribeReservedDBInstancesOfferings(DescribeReservedDBInstancesOfferingsRequest request);
    public virtual Task`1<DescribeReservedDBInstancesOfferingsResponse> DescribeReservedDBInstancesOfferingsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeReservedDBInstancesOfferingsResponse> DescribeReservedDBInstancesOfferingsAsync(DescribeReservedDBInstancesOfferingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSourceRegionsResponse DescribeSourceRegions(DescribeSourceRegionsRequest request);
    public virtual Task`1<DescribeSourceRegionsResponse> DescribeSourceRegionsAsync(DescribeSourceRegionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTenantDatabasesResponse DescribeTenantDatabases(DescribeTenantDatabasesRequest request);
    public virtual Task`1<DescribeTenantDatabasesResponse> DescribeTenantDatabasesAsync(DescribeTenantDatabasesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeValidDBInstanceModificationsResponse DescribeValidDBInstanceModifications(DescribeValidDBInstanceModificationsRequest request);
    public virtual Task`1<DescribeValidDBInstanceModificationsResponse> DescribeValidDBInstanceModificationsAsync(DescribeValidDBInstanceModificationsRequest request, CancellationToken cancellationToken);
    internal virtual DisableHttpEndpointResponse DisableHttpEndpoint(DisableHttpEndpointRequest request);
    public virtual Task`1<DisableHttpEndpointResponse> DisableHttpEndpointAsync(DisableHttpEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DownloadDBLogFilePortionResponse DownloadDBLogFilePortion(DownloadDBLogFilePortionRequest request);
    public virtual Task`1<DownloadDBLogFilePortionResponse> DownloadDBLogFilePortionAsync(DownloadDBLogFilePortionRequest request, CancellationToken cancellationToken);
    internal virtual EnableHttpEndpointResponse EnableHttpEndpoint(EnableHttpEndpointRequest request);
    public virtual Task`1<EnableHttpEndpointResponse> EnableHttpEndpointAsync(EnableHttpEndpointRequest request, CancellationToken cancellationToken);
    internal virtual FailoverDBClusterResponse FailoverDBCluster(FailoverDBClusterRequest request);
    public virtual Task`1<FailoverDBClusterResponse> FailoverDBClusterAsync(FailoverDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual FailoverGlobalClusterResponse FailoverGlobalCluster(FailoverGlobalClusterRequest request);
    public virtual Task`1<FailoverGlobalClusterResponse> FailoverGlobalClusterAsync(FailoverGlobalClusterRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ModifyActivityStreamResponse ModifyActivityStream(ModifyActivityStreamRequest request);
    public virtual Task`1<ModifyActivityStreamResponse> ModifyActivityStreamAsync(ModifyActivityStreamRequest request, CancellationToken cancellationToken);
    internal virtual ModifyCertificatesResponse ModifyCertificates(ModifyCertificatesRequest request);
    public virtual Task`1<ModifyCertificatesResponse> ModifyCertificatesAsync(ModifyCertificatesRequest request, CancellationToken cancellationToken);
    internal virtual ModifyCurrentDBClusterCapacityResponse ModifyCurrentDBClusterCapacity(ModifyCurrentDBClusterCapacityRequest request);
    public virtual Task`1<ModifyCurrentDBClusterCapacityResponse> ModifyCurrentDBClusterCapacityAsync(ModifyCurrentDBClusterCapacityRequest request, CancellationToken cancellationToken);
    internal virtual ModifyCustomDBEngineVersionResponse ModifyCustomDBEngineVersion(ModifyCustomDBEngineVersionRequest request);
    public virtual Task`1<ModifyCustomDBEngineVersionResponse> ModifyCustomDBEngineVersionAsync(ModifyCustomDBEngineVersionRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBClusterResponse ModifyDBCluster(ModifyDBClusterRequest request);
    public virtual Task`1<ModifyDBClusterResponse> ModifyDBClusterAsync(ModifyDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBClusterEndpointResponse ModifyDBClusterEndpoint(ModifyDBClusterEndpointRequest request);
    public virtual Task`1<ModifyDBClusterEndpointResponse> ModifyDBClusterEndpointAsync(ModifyDBClusterEndpointRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBClusterParameterGroupResponse ModifyDBClusterParameterGroup(ModifyDBClusterParameterGroupRequest request);
    public virtual Task`1<ModifyDBClusterParameterGroupResponse> ModifyDBClusterParameterGroupAsync(ModifyDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBClusterSnapshotAttributeResponse ModifyDBClusterSnapshotAttribute(ModifyDBClusterSnapshotAttributeRequest request);
    public virtual Task`1<ModifyDBClusterSnapshotAttributeResponse> ModifyDBClusterSnapshotAttributeAsync(ModifyDBClusterSnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBInstanceResponse ModifyDBInstance(ModifyDBInstanceRequest request);
    public virtual Task`1<ModifyDBInstanceResponse> ModifyDBInstanceAsync(ModifyDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBParameterGroupResponse ModifyDBParameterGroup(ModifyDBParameterGroupRequest request);
    public virtual Task`1<ModifyDBParameterGroupResponse> ModifyDBParameterGroupAsync(ModifyDBParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBProxyResponse ModifyDBProxy(ModifyDBProxyRequest request);
    public virtual Task`1<ModifyDBProxyResponse> ModifyDBProxyAsync(ModifyDBProxyRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBProxyEndpointResponse ModifyDBProxyEndpoint(ModifyDBProxyEndpointRequest request);
    public virtual Task`1<ModifyDBProxyEndpointResponse> ModifyDBProxyEndpointAsync(ModifyDBProxyEndpointRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBProxyTargetGroupResponse ModifyDBProxyTargetGroup(ModifyDBProxyTargetGroupRequest request);
    public virtual Task`1<ModifyDBProxyTargetGroupResponse> ModifyDBProxyTargetGroupAsync(ModifyDBProxyTargetGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBRecommendationResponse ModifyDBRecommendation(ModifyDBRecommendationRequest request);
    public virtual Task`1<ModifyDBRecommendationResponse> ModifyDBRecommendationAsync(ModifyDBRecommendationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBShardGroupResponse ModifyDBShardGroup(ModifyDBShardGroupRequest request);
    public virtual Task`1<ModifyDBShardGroupResponse> ModifyDBShardGroupAsync(ModifyDBShardGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBSnapshotResponse ModifyDBSnapshot(ModifyDBSnapshotRequest request);
    public virtual Task`1<ModifyDBSnapshotResponse> ModifyDBSnapshotAsync(ModifyDBSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBSnapshotAttributeResponse ModifyDBSnapshotAttribute(ModifyDBSnapshotAttributeRequest request);
    public virtual Task`1<ModifyDBSnapshotAttributeResponse> ModifyDBSnapshotAttributeAsync(ModifyDBSnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDBSubnetGroupResponse ModifyDBSubnetGroup(ModifyDBSubnetGroupRequest request);
    public virtual Task`1<ModifyDBSubnetGroupResponse> ModifyDBSubnetGroupAsync(ModifyDBSubnetGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyEventSubscriptionResponse ModifyEventSubscription(ModifyEventSubscriptionRequest request);
    public virtual Task`1<ModifyEventSubscriptionResponse> ModifyEventSubscriptionAsync(ModifyEventSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual ModifyGlobalClusterResponse ModifyGlobalCluster(ModifyGlobalClusterRequest request);
    public virtual Task`1<ModifyGlobalClusterResponse> ModifyGlobalClusterAsync(ModifyGlobalClusterRequest request, CancellationToken cancellationToken);
    internal virtual ModifyIntegrationResponse ModifyIntegration(ModifyIntegrationRequest request);
    public virtual Task`1<ModifyIntegrationResponse> ModifyIntegrationAsync(ModifyIntegrationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyOptionGroupResponse ModifyOptionGroup(ModifyOptionGroupRequest request);
    public virtual Task`1<ModifyOptionGroupResponse> ModifyOptionGroupAsync(ModifyOptionGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyTenantDatabaseResponse ModifyTenantDatabase(ModifyTenantDatabaseRequest request);
    public virtual Task`1<ModifyTenantDatabaseResponse> ModifyTenantDatabaseAsync(ModifyTenantDatabaseRequest request, CancellationToken cancellationToken);
    internal virtual PromoteReadReplicaResponse PromoteReadReplica(PromoteReadReplicaRequest request);
    public virtual Task`1<PromoteReadReplicaResponse> PromoteReadReplicaAsync(PromoteReadReplicaRequest request, CancellationToken cancellationToken);
    internal virtual PromoteReadReplicaDBClusterResponse PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request);
    public virtual Task`1<PromoteReadReplicaDBClusterResponse> PromoteReadReplicaDBClusterAsync(PromoteReadReplicaDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual PurchaseReservedDBInstancesOfferingResponse PurchaseReservedDBInstancesOffering(PurchaseReservedDBInstancesOfferingRequest request);
    public virtual Task`1<PurchaseReservedDBInstancesOfferingResponse> PurchaseReservedDBInstancesOfferingAsync(PurchaseReservedDBInstancesOfferingRequest request, CancellationToken cancellationToken);
    internal virtual RebootDBClusterResponse RebootDBCluster(RebootDBClusterRequest request);
    public virtual Task`1<RebootDBClusterResponse> RebootDBClusterAsync(RebootDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual RebootDBInstanceResponse RebootDBInstance(RebootDBInstanceRequest request);
    public virtual Task`1<RebootDBInstanceResponse> RebootDBInstanceAsync(RebootDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual RebootDBShardGroupResponse RebootDBShardGroup(RebootDBShardGroupRequest request);
    public virtual Task`1<RebootDBShardGroupResponse> RebootDBShardGroupAsync(RebootDBShardGroupRequest request, CancellationToken cancellationToken);
    internal virtual RegisterDBProxyTargetsResponse RegisterDBProxyTargets(RegisterDBProxyTargetsRequest request);
    public virtual Task`1<RegisterDBProxyTargetsResponse> RegisterDBProxyTargetsAsync(RegisterDBProxyTargetsRequest request, CancellationToken cancellationToken);
    internal virtual RemoveFromGlobalClusterResponse RemoveFromGlobalCluster(RemoveFromGlobalClusterRequest request);
    public virtual Task`1<RemoveFromGlobalClusterResponse> RemoveFromGlobalClusterAsync(RemoveFromGlobalClusterRequest request, CancellationToken cancellationToken);
    internal virtual RemoveRoleFromDBClusterResponse RemoveRoleFromDBCluster(RemoveRoleFromDBClusterRequest request);
    public virtual Task`1<RemoveRoleFromDBClusterResponse> RemoveRoleFromDBClusterAsync(RemoveRoleFromDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual RemoveRoleFromDBInstanceResponse RemoveRoleFromDBInstance(RemoveRoleFromDBInstanceRequest request);
    public virtual Task`1<RemoveRoleFromDBInstanceResponse> RemoveRoleFromDBInstanceAsync(RemoveRoleFromDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual RemoveSourceIdentifierFromSubscriptionResponse RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request);
    public virtual Task`1<RemoveSourceIdentifierFromSubscriptionResponse> RemoveSourceIdentifierFromSubscriptionAsync(RemoveSourceIdentifierFromSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsFromResourceResponse RemoveTagsFromResource(RemoveTagsFromResourceRequest request);
    public virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    internal virtual ResetDBClusterParameterGroupResponse ResetDBClusterParameterGroup(ResetDBClusterParameterGroupRequest request);
    public virtual Task`1<ResetDBClusterParameterGroupResponse> ResetDBClusterParameterGroupAsync(ResetDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual ResetDBParameterGroupResponse ResetDBParameterGroup(ResetDBParameterGroupRequest request);
    public virtual Task`1<ResetDBParameterGroupResponse> ResetDBParameterGroupAsync(ResetDBParameterGroupRequest request, CancellationToken cancellationToken);
    internal virtual RestoreDBClusterFromS3Response RestoreDBClusterFromS3(RestoreDBClusterFromS3Request request);
    public virtual Task`1<RestoreDBClusterFromS3Response> RestoreDBClusterFromS3Async(RestoreDBClusterFromS3Request request, CancellationToken cancellationToken);
    internal virtual RestoreDBClusterFromSnapshotResponse RestoreDBClusterFromSnapshot(RestoreDBClusterFromSnapshotRequest request);
    public virtual Task`1<RestoreDBClusterFromSnapshotResponse> RestoreDBClusterFromSnapshotAsync(RestoreDBClusterFromSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual RestoreDBClusterToPointInTimeResponse RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request);
    public virtual Task`1<RestoreDBClusterToPointInTimeResponse> RestoreDBClusterToPointInTimeAsync(RestoreDBClusterToPointInTimeRequest request, CancellationToken cancellationToken);
    internal virtual RestoreDBInstanceFromDBSnapshotResponse RestoreDBInstanceFromDBSnapshot(RestoreDBInstanceFromDBSnapshotRequest request);
    public virtual Task`1<RestoreDBInstanceFromDBSnapshotResponse> RestoreDBInstanceFromDBSnapshotAsync(RestoreDBInstanceFromDBSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual RestoreDBInstanceFromS3Response RestoreDBInstanceFromS3(RestoreDBInstanceFromS3Request request);
    public virtual Task`1<RestoreDBInstanceFromS3Response> RestoreDBInstanceFromS3Async(RestoreDBInstanceFromS3Request request, CancellationToken cancellationToken);
    internal virtual RestoreDBInstanceToPointInTimeResponse RestoreDBInstanceToPointInTime(RestoreDBInstanceToPointInTimeRequest request);
    public virtual Task`1<RestoreDBInstanceToPointInTimeResponse> RestoreDBInstanceToPointInTimeAsync(RestoreDBInstanceToPointInTimeRequest request, CancellationToken cancellationToken);
    internal virtual RevokeDBSecurityGroupIngressResponse RevokeDBSecurityGroupIngress(RevokeDBSecurityGroupIngressRequest request);
    public virtual Task`1<RevokeDBSecurityGroupIngressResponse> RevokeDBSecurityGroupIngressAsync(RevokeDBSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    internal virtual StartActivityStreamResponse StartActivityStream(StartActivityStreamRequest request);
    public virtual Task`1<StartActivityStreamResponse> StartActivityStreamAsync(StartActivityStreamRequest request, CancellationToken cancellationToken);
    internal virtual StartDBClusterResponse StartDBCluster(StartDBClusterRequest request);
    public virtual Task`1<StartDBClusterResponse> StartDBClusterAsync(StartDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual StartDBInstanceResponse StartDBInstance(StartDBInstanceRequest request);
    public virtual Task`1<StartDBInstanceResponse> StartDBInstanceAsync(StartDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual StartDBInstanceAutomatedBackupsReplicationResponse StartDBInstanceAutomatedBackupsReplication(StartDBInstanceAutomatedBackupsReplicationRequest request);
    public virtual Task`1<StartDBInstanceAutomatedBackupsReplicationResponse> StartDBInstanceAutomatedBackupsReplicationAsync(StartDBInstanceAutomatedBackupsReplicationRequest request, CancellationToken cancellationToken);
    internal virtual StartExportTaskResponse StartExportTask(StartExportTaskRequest request);
    public virtual Task`1<StartExportTaskResponse> StartExportTaskAsync(StartExportTaskRequest request, CancellationToken cancellationToken);
    internal virtual StopActivityStreamResponse StopActivityStream(StopActivityStreamRequest request);
    public virtual Task`1<StopActivityStreamResponse> StopActivityStreamAsync(StopActivityStreamRequest request, CancellationToken cancellationToken);
    internal virtual StopDBClusterResponse StopDBCluster(StopDBClusterRequest request);
    public virtual Task`1<StopDBClusterResponse> StopDBClusterAsync(StopDBClusterRequest request, CancellationToken cancellationToken);
    internal virtual StopDBInstanceResponse StopDBInstance(StopDBInstanceRequest request);
    public virtual Task`1<StopDBInstanceResponse> StopDBInstanceAsync(StopDBInstanceRequest request, CancellationToken cancellationToken);
    internal virtual StopDBInstanceAutomatedBackupsReplicationResponse StopDBInstanceAutomatedBackupsReplication(StopDBInstanceAutomatedBackupsReplicationRequest request);
    public virtual Task`1<StopDBInstanceAutomatedBackupsReplicationResponse> StopDBInstanceAutomatedBackupsReplicationAsync(StopDBInstanceAutomatedBackupsReplicationRequest request, CancellationToken cancellationToken);
    internal virtual SwitchoverBlueGreenDeploymentResponse SwitchoverBlueGreenDeployment(SwitchoverBlueGreenDeploymentRequest request);
    public virtual Task`1<SwitchoverBlueGreenDeploymentResponse> SwitchoverBlueGreenDeploymentAsync(SwitchoverBlueGreenDeploymentRequest request, CancellationToken cancellationToken);
    internal virtual SwitchoverGlobalClusterResponse SwitchoverGlobalCluster(SwitchoverGlobalClusterRequest request);
    public virtual Task`1<SwitchoverGlobalClusterResponse> SwitchoverGlobalClusterAsync(SwitchoverGlobalClusterRequest request, CancellationToken cancellationToken);
    internal virtual SwitchoverReadReplicaResponse SwitchoverReadReplica(SwitchoverReadReplicaRequest request);
    public virtual Task`1<SwitchoverReadReplicaResponse> SwitchoverReadReplicaAsync(SwitchoverReadReplicaRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.RDS.AmazonRDSConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonRDSEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonRDSConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.RDS.AmazonRDSDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonRDSDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.RDS.AmazonRDSException : AmazonServiceException {
    public AmazonRDSException(string message);
    public AmazonRDSException(string message, Exception innerException);
    public AmazonRDSException(Exception innerException);
    public AmazonRDSException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonRDSException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.AmazonRDSRequest : AmazonWebServiceRequest {
}
public class Amazon.RDS.ApplyMethod : ConstantClass {
    public static ApplyMethod Immediate;
    public static ApplyMethod PendingReboot;
    public ApplyMethod(string value);
    private static ApplyMethod();
    public static ApplyMethod FindValue(string value);
    public static ApplyMethod op_Implicit(string value);
}
public class Amazon.RDS.AuditPolicyState : ConstantClass {
    public static AuditPolicyState Locked;
    public static AuditPolicyState Unlocked;
    public AuditPolicyState(string value);
    private static AuditPolicyState();
    public static AuditPolicyState FindValue(string value);
    public static AuditPolicyState op_Implicit(string value);
}
public class Amazon.RDS.AuthScheme : ConstantClass {
    public static AuthScheme SECRETS;
    public AuthScheme(string value);
    private static AuthScheme();
    public static AuthScheme FindValue(string value);
    public static AuthScheme op_Implicit(string value);
}
public class Amazon.RDS.AutomationMode : ConstantClass {
    public static AutomationMode AllPaused;
    public static AutomationMode Full;
    public AutomationMode(string value);
    private static AutomationMode();
    public static AutomationMode FindValue(string value);
    public static AutomationMode op_Implicit(string value);
}
public class Amazon.RDS.ClientPasswordAuthType : ConstantClass {
    public static ClientPasswordAuthType MYSQL_NATIVE_PASSWORD;
    public static ClientPasswordAuthType POSTGRES_MD5;
    public static ClientPasswordAuthType POSTGRES_SCRAM_SHA_256;
    public static ClientPasswordAuthType SQL_SERVER_AUTHENTICATION;
    public ClientPasswordAuthType(string value);
    private static ClientPasswordAuthType();
    public static ClientPasswordAuthType FindValue(string value);
    public static ClientPasswordAuthType op_Implicit(string value);
}
public class Amazon.RDS.CustomEngineVersionStatus : ConstantClass {
    public static CustomEngineVersionStatus Available;
    public static CustomEngineVersionStatus Inactive;
    public static CustomEngineVersionStatus InactiveExceptRestore;
    public CustomEngineVersionStatus(string value);
    private static CustomEngineVersionStatus();
    public static CustomEngineVersionStatus FindValue(string value);
    public static CustomEngineVersionStatus op_Implicit(string value);
}
public class Amazon.RDS.DBProxyEndpointStatus : ConstantClass {
    public static DBProxyEndpointStatus Available;
    public static DBProxyEndpointStatus Creating;
    public static DBProxyEndpointStatus Deleting;
    public static DBProxyEndpointStatus IncompatibleNetwork;
    public static DBProxyEndpointStatus InsufficientResourceLimits;
    public static DBProxyEndpointStatus Modifying;
    public DBProxyEndpointStatus(string value);
    private static DBProxyEndpointStatus();
    public static DBProxyEndpointStatus FindValue(string value);
    public static DBProxyEndpointStatus op_Implicit(string value);
}
public class Amazon.RDS.DBProxyEndpointTargetRole : ConstantClass {
    public static DBProxyEndpointTargetRole READ_ONLY;
    public static DBProxyEndpointTargetRole READ_WRITE;
    public DBProxyEndpointTargetRole(string value);
    private static DBProxyEndpointTargetRole();
    public static DBProxyEndpointTargetRole FindValue(string value);
    public static DBProxyEndpointTargetRole op_Implicit(string value);
}
public class Amazon.RDS.DBProxyStatus : ConstantClass {
    public static DBProxyStatus Available;
    public static DBProxyStatus Creating;
    public static DBProxyStatus Deleting;
    public static DBProxyStatus IncompatibleNetwork;
    public static DBProxyStatus InsufficientResourceLimits;
    public static DBProxyStatus Modifying;
    public static DBProxyStatus Reactivating;
    public static DBProxyStatus Suspended;
    public static DBProxyStatus Suspending;
    public DBProxyStatus(string value);
    private static DBProxyStatus();
    public static DBProxyStatus FindValue(string value);
    public static DBProxyStatus op_Implicit(string value);
}
public class Amazon.RDS.Endpoints.RDSEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.RDS.EngineFamily : ConstantClass {
    public static EngineFamily MYSQL;
    public static EngineFamily POSTGRESQL;
    public static EngineFamily SQLSERVER;
    public EngineFamily(string value);
    private static EngineFamily();
    public static EngineFamily FindValue(string value);
    public static EngineFamily op_Implicit(string value);
}
public class Amazon.RDS.ExportSourceType : ConstantClass {
    public static ExportSourceType CLUSTER;
    public static ExportSourceType SNAPSHOT;
    public ExportSourceType(string value);
    private static ExportSourceType();
    public static ExportSourceType FindValue(string value);
    public static ExportSourceType op_Implicit(string value);
}
public class Amazon.RDS.FailoverStatus : ConstantClass {
    public static FailoverStatus Cancelling;
    public static FailoverStatus FailingOver;
    public static FailoverStatus Pending;
    public FailoverStatus(string value);
    private static FailoverStatus();
    public static FailoverStatus FindValue(string value);
    public static FailoverStatus op_Implicit(string value);
}
public class Amazon.RDS.GlobalClusterMemberSynchronizationStatus : ConstantClass {
    public static GlobalClusterMemberSynchronizationStatus Connected;
    public static GlobalClusterMemberSynchronizationStatus PendingResync;
    public GlobalClusterMemberSynchronizationStatus(string value);
    private static GlobalClusterMemberSynchronizationStatus();
    public static GlobalClusterMemberSynchronizationStatus FindValue(string value);
    public static GlobalClusterMemberSynchronizationStatus op_Implicit(string value);
}
public class Amazon.RDS.IAMAuthMode : ConstantClass {
    public static IAMAuthMode DISABLED;
    public static IAMAuthMode ENABLED;
    public static IAMAuthMode REQUIRED;
    public IAMAuthMode(string value);
    private static IAMAuthMode();
    public static IAMAuthMode FindValue(string value);
    public static IAMAuthMode op_Implicit(string value);
}
public interface Amazon.RDS.IAmazonRDS {
    public IRDSPaginatorFactory Paginators { get; }
    public abstract virtual IRDSPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddRoleToDBClusterResponse> AddRoleToDBClusterAsync(AddRoleToDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddRoleToDBInstanceResponse> AddRoleToDBInstanceAsync(AddRoleToDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddSourceIdentifierToSubscriptionResponse> AddSourceIdentifierToSubscriptionAsync(AddSourceIdentifierToSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ApplyPendingMaintenanceActionResponse> ApplyPendingMaintenanceActionAsync(ApplyPendingMaintenanceActionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthorizeDBSecurityGroupIngressResponse> AuthorizeDBSecurityGroupIngressAsync(AuthorizeDBSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BacktrackDBClusterResponse> BacktrackDBClusterAsync(BacktrackDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyDBClusterParameterGroupResponse> CopyDBClusterParameterGroupAsync(CopyDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyDBClusterSnapshotResponse> CopyDBClusterSnapshotAsync(CopyDBClusterSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyDBParameterGroupResponse> CopyDBParameterGroupAsync(CopyDBParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyDBSnapshotResponse> CopyDBSnapshotAsync(CopyDBSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyOptionGroupResponse> CopyOptionGroupAsync(CopyOptionGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateBlueGreenDeploymentResponse> CreateBlueGreenDeploymentAsync(CreateBlueGreenDeploymentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCustomDBEngineVersionResponse> CreateCustomDBEngineVersionAsync(CreateCustomDBEngineVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBClusterResponse> CreateDBClusterAsync(CreateDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBClusterEndpointResponse> CreateDBClusterEndpointAsync(CreateDBClusterEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBClusterParameterGroupResponse> CreateDBClusterParameterGroupAsync(CreateDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBClusterSnapshotResponse> CreateDBClusterSnapshotAsync(CreateDBClusterSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBInstanceResponse> CreateDBInstanceAsync(CreateDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBInstanceReadReplicaResponse> CreateDBInstanceReadReplicaAsync(CreateDBInstanceReadReplicaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBParameterGroupResponse> CreateDBParameterGroupAsync(CreateDBParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBProxyResponse> CreateDBProxyAsync(CreateDBProxyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBProxyEndpointResponse> CreateDBProxyEndpointAsync(CreateDBProxyEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBSecurityGroupResponse> CreateDBSecurityGroupAsync(CreateDBSecurityGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBShardGroupResponse> CreateDBShardGroupAsync(CreateDBShardGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBSnapshotResponse> CreateDBSnapshotAsync(CreateDBSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDBSubnetGroupResponse> CreateDBSubnetGroupAsync(CreateDBSubnetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateEventSubscriptionResponse> CreateEventSubscriptionAsync(CreateEventSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateGlobalClusterResponse> CreateGlobalClusterAsync(CreateGlobalClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateIntegrationResponse> CreateIntegrationAsync(CreateIntegrationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOptionGroupResponse> CreateOptionGroupAsync(CreateOptionGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTenantDatabaseResponse> CreateTenantDatabaseAsync(CreateTenantDatabaseRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBlueGreenDeploymentResponse> DeleteBlueGreenDeploymentAsync(DeleteBlueGreenDeploymentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCustomDBEngineVersionResponse> DeleteCustomDBEngineVersionAsync(DeleteCustomDBEngineVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBClusterResponse> DeleteDBClusterAsync(DeleteDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBClusterAutomatedBackupResponse> DeleteDBClusterAutomatedBackupAsync(DeleteDBClusterAutomatedBackupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBClusterEndpointResponse> DeleteDBClusterEndpointAsync(DeleteDBClusterEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBClusterParameterGroupResponse> DeleteDBClusterParameterGroupAsync(DeleteDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBClusterSnapshotResponse> DeleteDBClusterSnapshotAsync(DeleteDBClusterSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBInstanceResponse> DeleteDBInstanceAsync(DeleteDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBInstanceAutomatedBackupResponse> DeleteDBInstanceAutomatedBackupAsync(DeleteDBInstanceAutomatedBackupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBParameterGroupResponse> DeleteDBParameterGroupAsync(DeleteDBParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBProxyResponse> DeleteDBProxyAsync(DeleteDBProxyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBProxyEndpointResponse> DeleteDBProxyEndpointAsync(DeleteDBProxyEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBSecurityGroupResponse> DeleteDBSecurityGroupAsync(DeleteDBSecurityGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBShardGroupResponse> DeleteDBShardGroupAsync(DeleteDBShardGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBSnapshotResponse> DeleteDBSnapshotAsync(DeleteDBSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDBSubnetGroupResponse> DeleteDBSubnetGroupAsync(DeleteDBSubnetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEventSubscriptionResponse> DeleteEventSubscriptionAsync(DeleteEventSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteGlobalClusterResponse> DeleteGlobalClusterAsync(DeleteGlobalClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIntegrationResponse> DeleteIntegrationAsync(DeleteIntegrationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteOptionGroupResponse> DeleteOptionGroupAsync(DeleteOptionGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTenantDatabaseResponse> DeleteTenantDatabaseAsync(DeleteTenantDatabaseRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterDBProxyTargetsResponse> DeregisterDBProxyTargetsAsync(DeregisterDBProxyTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBlueGreenDeploymentsResponse> DescribeBlueGreenDeploymentsAsync(DescribeBlueGreenDeploymentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCertificatesResponse> DescribeCertificatesAsync(DescribeCertificatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClusterAutomatedBackupsResponse> DescribeDBClusterAutomatedBackupsAsync(DescribeDBClusterAutomatedBackupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClusterBacktracksResponse> DescribeDBClusterBacktracksAsync(DescribeDBClusterBacktracksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClusterEndpointsResponse> DescribeDBClusterEndpointsAsync(DescribeDBClusterEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClusterParameterGroupsResponse> DescribeDBClusterParameterGroupsAsync(DescribeDBClusterParameterGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClusterParametersResponse> DescribeDBClusterParametersAsync(DescribeDBClusterParametersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClustersResponse> DescribeDBClustersAsync(DescribeDBClustersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClusterSnapshotAttributesResponse> DescribeDBClusterSnapshotAttributesAsync(DescribeDBClusterSnapshotAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBClusterSnapshotsResponse> DescribeDBClusterSnapshotsAsync(DescribeDBClusterSnapshotsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBEngineVersionsResponse> DescribeDBEngineVersionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBEngineVersionsResponse> DescribeDBEngineVersionsAsync(DescribeDBEngineVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBInstanceAutomatedBackupsResponse> DescribeDBInstanceAutomatedBackupsAsync(DescribeDBInstanceAutomatedBackupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBInstancesResponse> DescribeDBInstancesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBInstancesResponse> DescribeDBInstancesAsync(DescribeDBInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBLogFilesResponse> DescribeDBLogFilesAsync(DescribeDBLogFilesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBParameterGroupsResponse> DescribeDBParameterGroupsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBParameterGroupsResponse> DescribeDBParameterGroupsAsync(DescribeDBParameterGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBParametersResponse> DescribeDBParametersAsync(DescribeDBParametersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBProxiesResponse> DescribeDBProxiesAsync(DescribeDBProxiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBProxyEndpointsResponse> DescribeDBProxyEndpointsAsync(DescribeDBProxyEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBProxyTargetGroupsResponse> DescribeDBProxyTargetGroupsAsync(DescribeDBProxyTargetGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBProxyTargetsResponse> DescribeDBProxyTargetsAsync(DescribeDBProxyTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBRecommendationsResponse> DescribeDBRecommendationsAsync(DescribeDBRecommendationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSecurityGroupsResponse> DescribeDBSecurityGroupsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSecurityGroupsResponse> DescribeDBSecurityGroupsAsync(DescribeDBSecurityGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBShardGroupsResponse> DescribeDBShardGroupsAsync(DescribeDBShardGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSnapshotAttributesResponse> DescribeDBSnapshotAttributesAsync(DescribeDBSnapshotAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSnapshotsResponse> DescribeDBSnapshotsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSnapshotsResponse> DescribeDBSnapshotsAsync(DescribeDBSnapshotsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSnapshotTenantDatabasesResponse> DescribeDBSnapshotTenantDatabasesAsync(DescribeDBSnapshotTenantDatabasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSubnetGroupsResponse> DescribeDBSubnetGroupsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDBSubnetGroupsResponse> DescribeDBSubnetGroupsAsync(DescribeDBSubnetGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEngineDefaultClusterParametersResponse> DescribeEngineDefaultClusterParametersAsync(DescribeEngineDefaultClusterParametersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEngineDefaultParametersResponse> DescribeEngineDefaultParametersAsync(DescribeEngineDefaultParametersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventCategoriesResponse> DescribeEventCategoriesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventCategoriesResponse> DescribeEventCategoriesAsync(DescribeEventCategoriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventsResponse> DescribeEventsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventsResponse> DescribeEventsAsync(DescribeEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventSubscriptionsResponse> DescribeEventSubscriptionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventSubscriptionsResponse> DescribeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeGlobalClustersResponse> DescribeGlobalClustersAsync(DescribeGlobalClustersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIntegrationsResponse> DescribeIntegrationsAsync(DescribeIntegrationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOptionGroupOptionsResponse> DescribeOptionGroupOptionsAsync(DescribeOptionGroupOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOptionGroupsResponse> DescribeOptionGroupsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOptionGroupsResponse> DescribeOptionGroupsAsync(DescribeOptionGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOrderableDBInstanceOptionsResponse> DescribeOrderableDBInstanceOptionsAsync(DescribeOrderableDBInstanceOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePendingMaintenanceActionsResponse> DescribePendingMaintenanceActionsAsync(DescribePendingMaintenanceActionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedDBInstancesResponse> DescribeReservedDBInstancesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedDBInstancesResponse> DescribeReservedDBInstancesAsync(DescribeReservedDBInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedDBInstancesOfferingsResponse> DescribeReservedDBInstancesOfferingsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedDBInstancesOfferingsResponse> DescribeReservedDBInstancesOfferingsAsync(DescribeReservedDBInstancesOfferingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSourceRegionsResponse> DescribeSourceRegionsAsync(DescribeSourceRegionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTenantDatabasesResponse> DescribeTenantDatabasesAsync(DescribeTenantDatabasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeValidDBInstanceModificationsResponse> DescribeValidDBInstanceModificationsAsync(DescribeValidDBInstanceModificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableHttpEndpointResponse> DisableHttpEndpointAsync(DisableHttpEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DownloadDBLogFilePortionResponse> DownloadDBLogFilePortionAsync(DownloadDBLogFilePortionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableHttpEndpointResponse> EnableHttpEndpointAsync(EnableHttpEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<FailoverDBClusterResponse> FailoverDBClusterAsync(FailoverDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<FailoverGlobalClusterResponse> FailoverGlobalClusterAsync(FailoverGlobalClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyActivityStreamResponse> ModifyActivityStreamAsync(ModifyActivityStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyCertificatesResponse> ModifyCertificatesAsync(ModifyCertificatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyCurrentDBClusterCapacityResponse> ModifyCurrentDBClusterCapacityAsync(ModifyCurrentDBClusterCapacityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyCustomDBEngineVersionResponse> ModifyCustomDBEngineVersionAsync(ModifyCustomDBEngineVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBClusterResponse> ModifyDBClusterAsync(ModifyDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBClusterEndpointResponse> ModifyDBClusterEndpointAsync(ModifyDBClusterEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBClusterParameterGroupResponse> ModifyDBClusterParameterGroupAsync(ModifyDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBClusterSnapshotAttributeResponse> ModifyDBClusterSnapshotAttributeAsync(ModifyDBClusterSnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBInstanceResponse> ModifyDBInstanceAsync(ModifyDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBParameterGroupResponse> ModifyDBParameterGroupAsync(ModifyDBParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBProxyResponse> ModifyDBProxyAsync(ModifyDBProxyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBProxyEndpointResponse> ModifyDBProxyEndpointAsync(ModifyDBProxyEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBProxyTargetGroupResponse> ModifyDBProxyTargetGroupAsync(ModifyDBProxyTargetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBRecommendationResponse> ModifyDBRecommendationAsync(ModifyDBRecommendationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBShardGroupResponse> ModifyDBShardGroupAsync(ModifyDBShardGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBSnapshotResponse> ModifyDBSnapshotAsync(ModifyDBSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBSnapshotAttributeResponse> ModifyDBSnapshotAttributeAsync(ModifyDBSnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDBSubnetGroupResponse> ModifyDBSubnetGroupAsync(ModifyDBSubnetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyEventSubscriptionResponse> ModifyEventSubscriptionAsync(ModifyEventSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyGlobalClusterResponse> ModifyGlobalClusterAsync(ModifyGlobalClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyIntegrationResponse> ModifyIntegrationAsync(ModifyIntegrationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyOptionGroupResponse> ModifyOptionGroupAsync(ModifyOptionGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyTenantDatabaseResponse> ModifyTenantDatabaseAsync(ModifyTenantDatabaseRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PromoteReadReplicaResponse> PromoteReadReplicaAsync(PromoteReadReplicaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PromoteReadReplicaDBClusterResponse> PromoteReadReplicaDBClusterAsync(PromoteReadReplicaDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurchaseReservedDBInstancesOfferingResponse> PurchaseReservedDBInstancesOfferingAsync(PurchaseReservedDBInstancesOfferingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootDBClusterResponse> RebootDBClusterAsync(RebootDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootDBInstanceResponse> RebootDBInstanceAsync(RebootDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootDBShardGroupResponse> RebootDBShardGroupAsync(RebootDBShardGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterDBProxyTargetsResponse> RegisterDBProxyTargetsAsync(RegisterDBProxyTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveFromGlobalClusterResponse> RemoveFromGlobalClusterAsync(RemoveFromGlobalClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveRoleFromDBClusterResponse> RemoveRoleFromDBClusterAsync(RemoveRoleFromDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveRoleFromDBInstanceResponse> RemoveRoleFromDBInstanceAsync(RemoveRoleFromDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveSourceIdentifierFromSubscriptionResponse> RemoveSourceIdentifierFromSubscriptionAsync(RemoveSourceIdentifierFromSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetDBClusterParameterGroupResponse> ResetDBClusterParameterGroupAsync(ResetDBClusterParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetDBParameterGroupResponse> ResetDBParameterGroupAsync(ResetDBParameterGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreDBClusterFromS3Response> RestoreDBClusterFromS3Async(RestoreDBClusterFromS3Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreDBClusterFromSnapshotResponse> RestoreDBClusterFromSnapshotAsync(RestoreDBClusterFromSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreDBClusterToPointInTimeResponse> RestoreDBClusterToPointInTimeAsync(RestoreDBClusterToPointInTimeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreDBInstanceFromDBSnapshotResponse> RestoreDBInstanceFromDBSnapshotAsync(RestoreDBInstanceFromDBSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreDBInstanceFromS3Response> RestoreDBInstanceFromS3Async(RestoreDBInstanceFromS3Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreDBInstanceToPointInTimeResponse> RestoreDBInstanceToPointInTimeAsync(RestoreDBInstanceToPointInTimeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeDBSecurityGroupIngressResponse> RevokeDBSecurityGroupIngressAsync(RevokeDBSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartActivityStreamResponse> StartActivityStreamAsync(StartActivityStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartDBClusterResponse> StartDBClusterAsync(StartDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartDBInstanceResponse> StartDBInstanceAsync(StartDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartDBInstanceAutomatedBackupsReplicationResponse> StartDBInstanceAutomatedBackupsReplicationAsync(StartDBInstanceAutomatedBackupsReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartExportTaskResponse> StartExportTaskAsync(StartExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopActivityStreamResponse> StopActivityStreamAsync(StopActivityStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopDBClusterResponse> StopDBClusterAsync(StopDBClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopDBInstanceResponse> StopDBInstanceAsync(StopDBInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopDBInstanceAutomatedBackupsReplicationResponse> StopDBInstanceAutomatedBackupsReplicationAsync(StopDBInstanceAutomatedBackupsReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SwitchoverBlueGreenDeploymentResponse> SwitchoverBlueGreenDeploymentAsync(SwitchoverBlueGreenDeploymentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SwitchoverGlobalClusterResponse> SwitchoverGlobalClusterAsync(SwitchoverGlobalClusterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SwitchoverReadReplicaResponse> SwitchoverReadReplicaAsync(SwitchoverReadReplicaRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.RDS.IntegrationStatus : ConstantClass {
    public static IntegrationStatus Active;
    public static IntegrationStatus Creating;
    public static IntegrationStatus Deleting;
    public static IntegrationStatus Failed;
    public static IntegrationStatus Modifying;
    public static IntegrationStatus Needs_attention;
    public static IntegrationStatus Syncing;
    public IntegrationStatus(string value);
    private static IntegrationStatus();
    public static IntegrationStatus FindValue(string value);
    public static IntegrationStatus op_Implicit(string value);
}
public class Amazon.RDS.Internal.AmazonRDSEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.RDS.Internal.AmazonRDSEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.RDS.Internal.AmazonRDSMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public interface Amazon.RDS.Internal.IPreSignedUrlRequest {
    public string SourceRegion { get; public set; }
    public string PreSignedUrl { get; public set; }
    public abstract virtual string get_SourceRegion();
    public abstract virtual void set_SourceRegion(string value);
    public abstract virtual string get_PreSignedUrl();
    public abstract virtual void set_PreSignedUrl(string value);
}
public class Amazon.RDS.Internal.PreSignedUrlRequestHandler : PipelineHandler {
    private static string UriSchemeHTTPS;
    private static string RDSServiceNameForSigning;
    private static string HTTPGet;
    private static string DestinationRegionParameterKey;
    private AWSCredentials _credentials;
    public PreSignedUrlRequestHandler(AWSCredentials credentials);
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.RDS.LimitlessDatabaseStatus : ConstantClass {
    public static LimitlessDatabaseStatus Active;
    public static LimitlessDatabaseStatus Disabled;
    public static LimitlessDatabaseStatus Disabling;
    public static LimitlessDatabaseStatus Enabled;
    public static LimitlessDatabaseStatus Enabling;
    public static LimitlessDatabaseStatus Error;
    public static LimitlessDatabaseStatus ModifyingMaxCapacity;
    public static LimitlessDatabaseStatus NotInUse;
    public LimitlessDatabaseStatus(string value);
    private static LimitlessDatabaseStatus();
    public static LimitlessDatabaseStatus FindValue(string value);
    public static LimitlessDatabaseStatus op_Implicit(string value);
}
public class Amazon.RDS.LocalWriteForwardingStatus : ConstantClass {
    public static LocalWriteForwardingStatus Disabled;
    public static LocalWriteForwardingStatus Disabling;
    public static LocalWriteForwardingStatus Enabled;
    public static LocalWriteForwardingStatus Enabling;
    public static LocalWriteForwardingStatus Requested;
    public LocalWriteForwardingStatus(string value);
    private static LocalWriteForwardingStatus();
    public static LocalWriteForwardingStatus FindValue(string value);
    public static LocalWriteForwardingStatus op_Implicit(string value);
}
public class Amazon.RDS.Model.AccountQuota : object {
    private string _accountQuotaName;
    private Nullable`1<long> _max;
    private Nullable`1<long> _used;
    public string AccountQuotaName { get; public set; }
    public Nullable`1<long> Max { get; public set; }
    public Nullable`1<long> Used { get; public set; }
    public string get_AccountQuotaName();
    public void set_AccountQuotaName(string value);
    internal bool IsSetAccountQuotaName();
    public Nullable`1<long> get_Max();
    public void set_Max(Nullable`1<long> value);
    internal bool IsSetMax();
    public Nullable`1<long> get_Used();
    public void set_Used(Nullable`1<long> value);
    internal bool IsSetUsed();
}
public class Amazon.RDS.Model.AddRoleToDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private string _featureName;
    private string _roleArn;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string FeatureName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_FeatureName();
    public void set_FeatureName(string value);
    internal bool IsSetFeatureName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.RDS.Model.AddRoleToDBClusterResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.AddRoleToDBInstanceRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _featureName;
    private string _roleArn;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string FeatureName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_FeatureName();
    public void set_FeatureName(string value);
    internal bool IsSetFeatureName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.RDS.Model.AddRoleToDBInstanceResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.AddSourceIdentifierToSubscriptionRequest : AmazonRDSRequest {
    private string _sourceIdentifier;
    private string _subscriptionName;
    [AWSPropertyAttribute]
public string SourceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    internal bool IsSetSourceIdentifier();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.RDS.Model.AddSourceIdentifierToSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.RDS.Model.AddTagsToResourceRequest : AmazonRDSRequest {
    private string _resourceName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.AddTagsToResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.ApplyPendingMaintenanceActionRequest : AmazonRDSRequest {
    private string _applyAction;
    private string _optInType;
    private string _resourceIdentifier;
    [AWSPropertyAttribute]
public string ApplyAction { get; public set; }
    [AWSPropertyAttribute]
public string OptInType { get; public set; }
    [AWSPropertyAttribute]
public string ResourceIdentifier { get; public set; }
    public string get_ApplyAction();
    public void set_ApplyAction(string value);
    internal bool IsSetApplyAction();
    public string get_OptInType();
    public void set_OptInType(string value);
    internal bool IsSetOptInType();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
}
public class Amazon.RDS.Model.ApplyPendingMaintenanceActionResponse : AmazonWebServiceResponse {
    private ResourcePendingMaintenanceActions _resourcePendingMaintenanceActions;
    public ResourcePendingMaintenanceActions ResourcePendingMaintenanceActions { get; public set; }
    public ResourcePendingMaintenanceActions get_ResourcePendingMaintenanceActions();
    public void set_ResourcePendingMaintenanceActions(ResourcePendingMaintenanceActions value);
    internal bool IsSetResourcePendingMaintenanceActions();
}
public class Amazon.RDS.Model.AuthorizationAlreadyExistsException : AmazonRDSException {
    public AuthorizationAlreadyExistsException(string message);
    public AuthorizationAlreadyExistsException(string message, Exception innerException);
    public AuthorizationAlreadyExistsException(Exception innerException);
    public AuthorizationAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AuthorizationAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.AuthorizationNotFoundException : AmazonRDSException {
    public AuthorizationNotFoundException(string message);
    public AuthorizationNotFoundException(string message, Exception innerException);
    public AuthorizationNotFoundException(Exception innerException);
    public AuthorizationNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AuthorizationNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.AuthorizationQuotaExceededException : AmazonRDSException {
    public AuthorizationQuotaExceededException(string message);
    public AuthorizationQuotaExceededException(string message, Exception innerException);
    public AuthorizationQuotaExceededException(Exception innerException);
    public AuthorizationQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AuthorizationQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.AuthorizeDBSecurityGroupIngressRequest : AmazonRDSRequest {
    private string _cidrip;
    private string _dbSecurityGroupName;
    private string _ec2SecurityGroupId;
    private string _ec2SecurityGroupName;
    private string _ec2SecurityGroupOwnerId;
    public string CIDRIP { get; public set; }
    [AWSPropertyAttribute]
public string DBSecurityGroupName { get; public set; }
    public string EC2SecurityGroupId { get; public set; }
    public string EC2SecurityGroupName { get; public set; }
    public string EC2SecurityGroupOwnerId { get; public set; }
    public AuthorizeDBSecurityGroupIngressRequest(string dbSecurityGroupName);
    public string get_CIDRIP();
    public void set_CIDRIP(string value);
    internal bool IsSetCIDRIP();
    public string get_DBSecurityGroupName();
    public void set_DBSecurityGroupName(string value);
    internal bool IsSetDBSecurityGroupName();
    public string get_EC2SecurityGroupId();
    public void set_EC2SecurityGroupId(string value);
    internal bool IsSetEC2SecurityGroupId();
    public string get_EC2SecurityGroupName();
    public void set_EC2SecurityGroupName(string value);
    internal bool IsSetEC2SecurityGroupName();
    public string get_EC2SecurityGroupOwnerId();
    public void set_EC2SecurityGroupOwnerId(string value);
    internal bool IsSetEC2SecurityGroupOwnerId();
}
public class Amazon.RDS.Model.AuthorizeDBSecurityGroupIngressResponse : AmazonWebServiceResponse {
    private DBSecurityGroup _dbSecurityGroup;
    public DBSecurityGroup DBSecurityGroup { get; public set; }
    public DBSecurityGroup get_DBSecurityGroup();
    public void set_DBSecurityGroup(DBSecurityGroup value);
    internal bool IsSetDBSecurityGroup();
}
public class Amazon.RDS.Model.AvailabilityZone : object {
    private string _name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.RDS.Model.AvailableProcessorFeature : object {
    private string _allowedValues;
    private string _defaultValue;
    private string _name;
    public string AllowedValues { get; public set; }
    public string DefaultValue { get; public set; }
    public string Name { get; public set; }
    public string get_AllowedValues();
    public void set_AllowedValues(string value);
    internal bool IsSetAllowedValues();
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    internal bool IsSetDefaultValue();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.RDS.Model.BacktrackDBClusterRequest : AmazonRDSRequest {
    private Nullable`1<DateTime> _backtrackToUtc;
    private string _dbClusterIdentifier;
    private Nullable`1<bool> _force;
    private Nullable`1<bool> _useEarliestTimeOnPointInTimeUnavailable;
    private Nullable`1<DateTime> _backtrackTo;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> BacktrackToUtc { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public Nullable`1<bool> Force { get; public set; }
    public Nullable`1<bool> UseEarliestTimeOnPointInTimeUnavailable { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use BacktrackToUtc instead. Setting either BacktrackTo or BacktrackToUtc results in both BacktrackTo and BacktrackToUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. BacktrackTo is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> BacktrackTo { get; public set; }
    public Nullable`1<DateTime> get_BacktrackToUtc();
    public void set_BacktrackToUtc(Nullable`1<DateTime> value);
    internal bool IsSetBacktrackToUtc();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
    public Nullable`1<bool> get_UseEarliestTimeOnPointInTimeUnavailable();
    public void set_UseEarliestTimeOnPointInTimeUnavailable(Nullable`1<bool> value);
    internal bool IsSetUseEarliestTimeOnPointInTimeUnavailable();
    public Nullable`1<DateTime> get_BacktrackTo();
    public void set_BacktrackTo(Nullable`1<DateTime> value);
}
public class Amazon.RDS.Model.BacktrackDBClusterResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _backtrackedFrom;
    private string _backtrackIdentifier;
    private Nullable`1<DateTime> _backtrackRequestCreationTime;
    private Nullable`1<DateTime> _backtrackTo;
    private string _dbClusterIdentifier;
    private string _status;
    public Nullable`1<DateTime> BacktrackedFrom { get; public set; }
    public string BacktrackIdentifier { get; public set; }
    public Nullable`1<DateTime> BacktrackRequestCreationTime { get; public set; }
    public Nullable`1<DateTime> BacktrackTo { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<DateTime> get_BacktrackedFrom();
    public void set_BacktrackedFrom(Nullable`1<DateTime> value);
    internal bool IsSetBacktrackedFrom();
    public string get_BacktrackIdentifier();
    public void set_BacktrackIdentifier(string value);
    internal bool IsSetBacktrackIdentifier();
    public Nullable`1<DateTime> get_BacktrackRequestCreationTime();
    public void set_BacktrackRequestCreationTime(Nullable`1<DateTime> value);
    internal bool IsSetBacktrackRequestCreationTime();
    public Nullable`1<DateTime> get_BacktrackTo();
    public void set_BacktrackTo(Nullable`1<DateTime> value);
    internal bool IsSetBacktrackTo();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
[ObsoleteAttribute("Please avoid using this fault")]
public class Amazon.RDS.Model.BackupPolicyNotFoundException : AmazonRDSException {
    public BackupPolicyNotFoundException(string message);
    public BackupPolicyNotFoundException(string message, Exception innerException);
    public BackupPolicyNotFoundException(Exception innerException);
    public BackupPolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BackupPolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.BlueGreenDeployment : object {
    private string _blueGreenDeploymentIdentifier;
    private string _blueGreenDeploymentName;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<DateTime> _deleteTime;
    private string _source;
    private string _status;
    private string _statusDetails;
    private List`1<SwitchoverDetail> _switchoverDetails;
    private List`1<Tag> _tagList;
    private string _target;
    private List`1<BlueGreenDeploymentTask> _tasks;
    [AWSPropertyAttribute]
public string BlueGreenDeploymentIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string BlueGreenDeploymentName { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public Nullable`1<DateTime> DeleteTime { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public string Status { get; public set; }
    public string StatusDetails { get; public set; }
    public List`1<SwitchoverDetail> SwitchoverDetails { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    [AWSPropertyAttribute]
public string Target { get; public set; }
    public List`1<BlueGreenDeploymentTask> Tasks { get; public set; }
    public string get_BlueGreenDeploymentIdentifier();
    public void set_BlueGreenDeploymentIdentifier(string value);
    internal bool IsSetBlueGreenDeploymentIdentifier();
    public string get_BlueGreenDeploymentName();
    public void set_BlueGreenDeploymentName(string value);
    internal bool IsSetBlueGreenDeploymentName();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public Nullable`1<DateTime> get_DeleteTime();
    public void set_DeleteTime(Nullable`1<DateTime> value);
    internal bool IsSetDeleteTime();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public List`1<SwitchoverDetail> get_SwitchoverDetails();
    public void set_SwitchoverDetails(List`1<SwitchoverDetail> value);
    internal bool IsSetSwitchoverDetails();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public List`1<BlueGreenDeploymentTask> get_Tasks();
    public void set_Tasks(List`1<BlueGreenDeploymentTask> value);
    internal bool IsSetTasks();
}
public class Amazon.RDS.Model.BlueGreenDeploymentAlreadyExistsException : AmazonRDSException {
    public BlueGreenDeploymentAlreadyExistsException(string message);
    public BlueGreenDeploymentAlreadyExistsException(string message, Exception innerException);
    public BlueGreenDeploymentAlreadyExistsException(Exception innerException);
    public BlueGreenDeploymentAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BlueGreenDeploymentAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.BlueGreenDeploymentNotFoundException : AmazonRDSException {
    public BlueGreenDeploymentNotFoundException(string message);
    public BlueGreenDeploymentNotFoundException(string message, Exception innerException);
    public BlueGreenDeploymentNotFoundException(Exception innerException);
    public BlueGreenDeploymentNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BlueGreenDeploymentNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.BlueGreenDeploymentTask : object {
    private string _name;
    private string _status;
    public string Name { get; public set; }
    public string Status { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.CancelExportTaskRequest : AmazonRDSRequest {
    private string _exportTaskIdentifier;
    [AWSPropertyAttribute]
public string ExportTaskIdentifier { get; public set; }
    public string get_ExportTaskIdentifier();
    public void set_ExportTaskIdentifier(string value);
    internal bool IsSetExportTaskIdentifier();
}
public class Amazon.RDS.Model.CancelExportTaskResponse : AmazonWebServiceResponse {
    private List`1<string> _exportOnly;
    private string _exportTaskIdentifier;
    private string _failureCause;
    private string _iamRoleArn;
    private string _kmsKeyId;
    private Nullable`1<int> _percentProgress;
    private string _s3Bucket;
    private string _s3Prefix;
    private Nullable`1<DateTime> _snapshotTime;
    private string _sourceArn;
    private ExportSourceType _sourceType;
    private string _status;
    private Nullable`1<DateTime> _taskEndTime;
    private Nullable`1<DateTime> _taskStartTime;
    private Nullable`1<int> _totalExtractedDataInGB;
    private string _warningMessage;
    public List`1<string> ExportOnly { get; public set; }
    public string ExportTaskIdentifier { get; public set; }
    public string FailureCause { get; public set; }
    public string IamRoleArn { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<int> PercentProgress { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Prefix { get; public set; }
    public Nullable`1<DateTime> SnapshotTime { get; public set; }
    public string SourceArn { get; public set; }
    public ExportSourceType SourceType { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<DateTime> TaskEndTime { get; public set; }
    public Nullable`1<DateTime> TaskStartTime { get; public set; }
    public Nullable`1<int> TotalExtractedDataInGB { get; public set; }
    public string WarningMessage { get; public set; }
    public List`1<string> get_ExportOnly();
    public void set_ExportOnly(List`1<string> value);
    internal bool IsSetExportOnly();
    public string get_ExportTaskIdentifier();
    public void set_ExportTaskIdentifier(string value);
    internal bool IsSetExportTaskIdentifier();
    public string get_FailureCause();
    public void set_FailureCause(string value);
    internal bool IsSetFailureCause();
    public string get_IamRoleArn();
    public void set_IamRoleArn(string value);
    internal bool IsSetIamRoleArn();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<int> get_PercentProgress();
    public void set_PercentProgress(Nullable`1<int> value);
    internal bool IsSetPercentProgress();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public Nullable`1<DateTime> get_SnapshotTime();
    public void set_SnapshotTime(Nullable`1<DateTime> value);
    internal bool IsSetSnapshotTime();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public ExportSourceType get_SourceType();
    public void set_SourceType(ExportSourceType value);
    internal bool IsSetSourceType();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_TaskEndTime();
    public void set_TaskEndTime(Nullable`1<DateTime> value);
    internal bool IsSetTaskEndTime();
    public Nullable`1<DateTime> get_TaskStartTime();
    public void set_TaskStartTime(Nullable`1<DateTime> value);
    internal bool IsSetTaskStartTime();
    public Nullable`1<int> get_TotalExtractedDataInGB();
    public void set_TotalExtractedDataInGB(Nullable`1<int> value);
    internal bool IsSetTotalExtractedDataInGB();
    public string get_WarningMessage();
    public void set_WarningMessage(string value);
    internal bool IsSetWarningMessage();
}
public class Amazon.RDS.Model.Certificate : object {
    private string _certificateArn;
    private string _certificateIdentifier;
    private string _certificateType;
    private Nullable`1<bool> _customerOverride;
    private Nullable`1<DateTime> _customerOverrideValidTill;
    private string _thumbprint;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validTill;
    public string CertificateArn { get; public set; }
    public string CertificateIdentifier { get; public set; }
    public string CertificateType { get; public set; }
    public Nullable`1<bool> CustomerOverride { get; public set; }
    public Nullable`1<DateTime> CustomerOverrideValidTill { get; public set; }
    public string Thumbprint { get; public set; }
    public Nullable`1<DateTime> ValidFrom { get; public set; }
    public Nullable`1<DateTime> ValidTill { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_CertificateIdentifier();
    public void set_CertificateIdentifier(string value);
    internal bool IsSetCertificateIdentifier();
    public string get_CertificateType();
    public void set_CertificateType(string value);
    internal bool IsSetCertificateType();
    public Nullable`1<bool> get_CustomerOverride();
    public void set_CustomerOverride(Nullable`1<bool> value);
    internal bool IsSetCustomerOverride();
    public Nullable`1<DateTime> get_CustomerOverrideValidTill();
    public void set_CustomerOverrideValidTill(Nullable`1<DateTime> value);
    internal bool IsSetCustomerOverrideValidTill();
    public string get_Thumbprint();
    public void set_Thumbprint(string value);
    internal bool IsSetThumbprint();
    public Nullable`1<DateTime> get_ValidFrom();
    public void set_ValidFrom(Nullable`1<DateTime> value);
    internal bool IsSetValidFrom();
    public Nullable`1<DateTime> get_ValidTill();
    public void set_ValidTill(Nullable`1<DateTime> value);
    internal bool IsSetValidTill();
}
public class Amazon.RDS.Model.CertificateDetails : object {
    private string _caIdentifier;
    private Nullable`1<DateTime> _validTill;
    public string CAIdentifier { get; public set; }
    public Nullable`1<DateTime> ValidTill { get; public set; }
    public string get_CAIdentifier();
    public void set_CAIdentifier(string value);
    internal bool IsSetCAIdentifier();
    public Nullable`1<DateTime> get_ValidTill();
    public void set_ValidTill(Nullable`1<DateTime> value);
    internal bool IsSetValidTill();
}
public class Amazon.RDS.Model.CertificateNotFoundException : AmazonRDSException {
    public CertificateNotFoundException(string message);
    public CertificateNotFoundException(string message, Exception innerException);
    public CertificateNotFoundException(Exception innerException);
    public CertificateNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CertificateNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.CharacterSet : object {
    private string _characterSetDescription;
    private string _characterSetName;
    public string CharacterSetDescription { get; public set; }
    public string CharacterSetName { get; public set; }
    public string get_CharacterSetDescription();
    public void set_CharacterSetDescription(string value);
    internal bool IsSetCharacterSetDescription();
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
}
public class Amazon.RDS.Model.CloudwatchLogsExportConfiguration : object {
    private List`1<string> _disableLogTypes;
    private List`1<string> _enableLogTypes;
    public List`1<string> DisableLogTypes { get; public set; }
    public List`1<string> EnableLogTypes { get; public set; }
    public List`1<string> get_DisableLogTypes();
    public void set_DisableLogTypes(List`1<string> value);
    internal bool IsSetDisableLogTypes();
    public List`1<string> get_EnableLogTypes();
    public void set_EnableLogTypes(List`1<string> value);
    internal bool IsSetEnableLogTypes();
}
public class Amazon.RDS.Model.ClusterPendingModifiedValues : object {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<int> _backupRetentionPeriod;
    private CertificateDetails _certificateDetails;
    private string _dbClusterIdentifier;
    private string _engineVersion;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private Nullable`1<int> _iops;
    private string _masterUserPassword;
    private PendingCloudwatchLogsExports _pendingCloudwatchLogsExports;
    private RdsCustomClusterConfiguration _rdsCustomClusterConfiguration;
    private string _storageType;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public CertificateDetails CertificateDetails { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string MasterUserPassword { get; public set; }
    public PendingCloudwatchLogsExports PendingCloudwatchLogsExports { get; public set; }
    public RdsCustomClusterConfiguration RdsCustomClusterConfiguration { get; public set; }
    public string StorageType { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public CertificateDetails get_CertificateDetails();
    public void set_CertificateDetails(CertificateDetails value);
    internal bool IsSetCertificateDetails();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public PendingCloudwatchLogsExports get_PendingCloudwatchLogsExports();
    public void set_PendingCloudwatchLogsExports(PendingCloudwatchLogsExports value);
    internal bool IsSetPendingCloudwatchLogsExports();
    public RdsCustomClusterConfiguration get_RdsCustomClusterConfiguration();
    public void set_RdsCustomClusterConfiguration(RdsCustomClusterConfiguration value);
    internal bool IsSetRdsCustomClusterConfiguration();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
}
public class Amazon.RDS.Model.ConnectionPoolConfiguration : object {
    private Nullable`1<int> _connectionBorrowTimeout;
    private string _initQuery;
    private Nullable`1<int> _maxConnectionsPercent;
    private Nullable`1<int> _maxIdleConnectionsPercent;
    private List`1<string> _sessionPinningFilters;
    public Nullable`1<int> ConnectionBorrowTimeout { get; public set; }
    public string InitQuery { get; public set; }
    public Nullable`1<int> MaxConnectionsPercent { get; public set; }
    public Nullable`1<int> MaxIdleConnectionsPercent { get; public set; }
    public List`1<string> SessionPinningFilters { get; public set; }
    public Nullable`1<int> get_ConnectionBorrowTimeout();
    public void set_ConnectionBorrowTimeout(Nullable`1<int> value);
    internal bool IsSetConnectionBorrowTimeout();
    public string get_InitQuery();
    public void set_InitQuery(string value);
    internal bool IsSetInitQuery();
    public Nullable`1<int> get_MaxConnectionsPercent();
    public void set_MaxConnectionsPercent(Nullable`1<int> value);
    internal bool IsSetMaxConnectionsPercent();
    public Nullable`1<int> get_MaxIdleConnectionsPercent();
    public void set_MaxIdleConnectionsPercent(Nullable`1<int> value);
    internal bool IsSetMaxIdleConnectionsPercent();
    public List`1<string> get_SessionPinningFilters();
    public void set_SessionPinningFilters(List`1<string> value);
    internal bool IsSetSessionPinningFilters();
}
public class Amazon.RDS.Model.ConnectionPoolConfigurationInfo : object {
    private Nullable`1<int> _connectionBorrowTimeout;
    private string _initQuery;
    private Nullable`1<int> _maxConnectionsPercent;
    private Nullable`1<int> _maxIdleConnectionsPercent;
    private List`1<string> _sessionPinningFilters;
    public Nullable`1<int> ConnectionBorrowTimeout { get; public set; }
    public string InitQuery { get; public set; }
    public Nullable`1<int> MaxConnectionsPercent { get; public set; }
    public Nullable`1<int> MaxIdleConnectionsPercent { get; public set; }
    public List`1<string> SessionPinningFilters { get; public set; }
    public Nullable`1<int> get_ConnectionBorrowTimeout();
    public void set_ConnectionBorrowTimeout(Nullable`1<int> value);
    internal bool IsSetConnectionBorrowTimeout();
    public string get_InitQuery();
    public void set_InitQuery(string value);
    internal bool IsSetInitQuery();
    public Nullable`1<int> get_MaxConnectionsPercent();
    public void set_MaxConnectionsPercent(Nullable`1<int> value);
    internal bool IsSetMaxConnectionsPercent();
    public Nullable`1<int> get_MaxIdleConnectionsPercent();
    public void set_MaxIdleConnectionsPercent(Nullable`1<int> value);
    internal bool IsSetMaxIdleConnectionsPercent();
    public List`1<string> get_SessionPinningFilters();
    public void set_SessionPinningFilters(List`1<string> value);
    internal bool IsSetSessionPinningFilters();
}
public class Amazon.RDS.Model.ContextAttribute : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.RDS.Model.CopyDBClusterParameterGroupRequest : AmazonRDSRequest {
    private string _sourceDBClusterParameterGroupIdentifier;
    private List`1<Tag> _tags;
    private string _targetDBClusterParameterGroupDescription;
    private string _targetDBClusterParameterGroupIdentifier;
    [AWSPropertyAttribute]
public string SourceDBClusterParameterGroupIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBClusterParameterGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBClusterParameterGroupIdentifier { get; public set; }
    public string get_SourceDBClusterParameterGroupIdentifier();
    public void set_SourceDBClusterParameterGroupIdentifier(string value);
    internal bool IsSetSourceDBClusterParameterGroupIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetDBClusterParameterGroupDescription();
    public void set_TargetDBClusterParameterGroupDescription(string value);
    internal bool IsSetTargetDBClusterParameterGroupDescription();
    public string get_TargetDBClusterParameterGroupIdentifier();
    public void set_TargetDBClusterParameterGroupIdentifier(string value);
    internal bool IsSetTargetDBClusterParameterGroupIdentifier();
}
public class Amazon.RDS.Model.CopyDBClusterParameterGroupResponse : AmazonWebServiceResponse {
    private DBClusterParameterGroup _dbClusterParameterGroup;
    public DBClusterParameterGroup DBClusterParameterGroup { get; public set; }
    public DBClusterParameterGroup get_DBClusterParameterGroup();
    public void set_DBClusterParameterGroup(DBClusterParameterGroup value);
    internal bool IsSetDBClusterParameterGroup();
}
public class Amazon.RDS.Model.CopyDBClusterSnapshotRequest : AmazonRDSRequest {
    private string _sourceRegion;
    private Nullable`1<bool> _copyTags;
    private string _kmsKeyId;
    private string _preSignedUrl;
    private string _sourceDBClusterSnapshotIdentifier;
    private List`1<Tag> _tags;
    private string _targetDBClusterSnapshotIdentifier;
    public string SourceRegion { get; public set; }
    public Nullable`1<bool> CopyTags { get; public set; }
    public string KmsKeyId { get; public set; }
    public string PreSignedUrl { get; public set; }
    [AWSPropertyAttribute]
public string SourceDBClusterSnapshotIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBClusterSnapshotIdentifier { get; public set; }
    public sealed virtual string get_SourceRegion();
    public sealed virtual void set_SourceRegion(string value);
    public Nullable`1<bool> get_CopyTags();
    public void set_CopyTags(Nullable`1<bool> value);
    internal bool IsSetCopyTags();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public sealed virtual string get_PreSignedUrl();
    public sealed virtual void set_PreSignedUrl(string value);
    internal bool IsSetPreSignedUrl();
    public string get_SourceDBClusterSnapshotIdentifier();
    public void set_SourceDBClusterSnapshotIdentifier(string value);
    internal bool IsSetSourceDBClusterSnapshotIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetDBClusterSnapshotIdentifier();
    public void set_TargetDBClusterSnapshotIdentifier(string value);
    internal bool IsSetTargetDBClusterSnapshotIdentifier();
}
public class Amazon.RDS.Model.CopyDBClusterSnapshotResponse : AmazonWebServiceResponse {
    private DBClusterSnapshot _dbClusterSnapshot;
    public DBClusterSnapshot DBClusterSnapshot { get; public set; }
    public DBClusterSnapshot get_DBClusterSnapshot();
    public void set_DBClusterSnapshot(DBClusterSnapshot value);
    internal bool IsSetDBClusterSnapshot();
}
public class Amazon.RDS.Model.CopyDBParameterGroupRequest : AmazonRDSRequest {
    private string _sourceDBParameterGroupIdentifier;
    private List`1<Tag> _tags;
    private string _targetDBParameterGroupDescription;
    private string _targetDBParameterGroupIdentifier;
    [AWSPropertyAttribute]
public string SourceDBParameterGroupIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBParameterGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBParameterGroupIdentifier { get; public set; }
    public string get_SourceDBParameterGroupIdentifier();
    public void set_SourceDBParameterGroupIdentifier(string value);
    internal bool IsSetSourceDBParameterGroupIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetDBParameterGroupDescription();
    public void set_TargetDBParameterGroupDescription(string value);
    internal bool IsSetTargetDBParameterGroupDescription();
    public string get_TargetDBParameterGroupIdentifier();
    public void set_TargetDBParameterGroupIdentifier(string value);
    internal bool IsSetTargetDBParameterGroupIdentifier();
}
public class Amazon.RDS.Model.CopyDBParameterGroupResponse : AmazonWebServiceResponse {
    private DBParameterGroup _dbParameterGroup;
    public DBParameterGroup DBParameterGroup { get; public set; }
    public DBParameterGroup get_DBParameterGroup();
    public void set_DBParameterGroup(DBParameterGroup value);
    internal bool IsSetDBParameterGroup();
}
public class Amazon.RDS.Model.CopyDBSnapshotRequest : AmazonRDSRequest {
    private string _sourceRegion;
    private Nullable`1<bool> _copyOptionGroup;
    private Nullable`1<bool> _copyTags;
    private string _kmsKeyId;
    private string _optionGroupName;
    private string _preSignedUrl;
    private string _sourceDBSnapshotIdentifier;
    private List`1<Tag> _tags;
    private string _targetCustomAvailabilityZone;
    private string _targetDBSnapshotIdentifier;
    public string SourceRegion { get; public set; }
    public Nullable`1<bool> CopyOptionGroup { get; public set; }
    public Nullable`1<bool> CopyTags { get; public set; }
    public string KmsKeyId { get; public set; }
    public string OptionGroupName { get; public set; }
    public string PreSignedUrl { get; public set; }
    [AWSPropertyAttribute]
public string SourceDBSnapshotIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TargetCustomAvailabilityZone { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBSnapshotIdentifier { get; public set; }
    public sealed virtual string get_SourceRegion();
    public sealed virtual void set_SourceRegion(string value);
    public Nullable`1<bool> get_CopyOptionGroup();
    public void set_CopyOptionGroup(Nullable`1<bool> value);
    internal bool IsSetCopyOptionGroup();
    public Nullable`1<bool> get_CopyTags();
    public void set_CopyTags(Nullable`1<bool> value);
    internal bool IsSetCopyTags();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public sealed virtual string get_PreSignedUrl();
    public sealed virtual void set_PreSignedUrl(string value);
    internal bool IsSetPreSignedUrl();
    public string get_SourceDBSnapshotIdentifier();
    public void set_SourceDBSnapshotIdentifier(string value);
    internal bool IsSetSourceDBSnapshotIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetCustomAvailabilityZone();
    public void set_TargetCustomAvailabilityZone(string value);
    internal bool IsSetTargetCustomAvailabilityZone();
    public string get_TargetDBSnapshotIdentifier();
    public void set_TargetDBSnapshotIdentifier(string value);
    internal bool IsSetTargetDBSnapshotIdentifier();
}
public class Amazon.RDS.Model.CopyDBSnapshotResponse : AmazonWebServiceResponse {
    private DBSnapshot _dbSnapshot;
    public DBSnapshot DBSnapshot { get; public set; }
    public DBSnapshot get_DBSnapshot();
    public void set_DBSnapshot(DBSnapshot value);
    internal bool IsSetDBSnapshot();
}
public class Amazon.RDS.Model.CopyOptionGroupRequest : AmazonRDSRequest {
    private string _sourceOptionGroupIdentifier;
    private List`1<Tag> _tags;
    private string _targetOptionGroupDescription;
    private string _targetOptionGroupIdentifier;
    [AWSPropertyAttribute]
public string SourceOptionGroupIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetOptionGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string TargetOptionGroupIdentifier { get; public set; }
    public string get_SourceOptionGroupIdentifier();
    public void set_SourceOptionGroupIdentifier(string value);
    internal bool IsSetSourceOptionGroupIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetOptionGroupDescription();
    public void set_TargetOptionGroupDescription(string value);
    internal bool IsSetTargetOptionGroupDescription();
    public string get_TargetOptionGroupIdentifier();
    public void set_TargetOptionGroupIdentifier(string value);
    internal bool IsSetTargetOptionGroupIdentifier();
}
public class Amazon.RDS.Model.CopyOptionGroupResponse : AmazonWebServiceResponse {
    private OptionGroup _optionGroup;
    public OptionGroup OptionGroup { get; public set; }
    public OptionGroup get_OptionGroup();
    public void set_OptionGroup(OptionGroup value);
    internal bool IsSetOptionGroup();
}
public class Amazon.RDS.Model.CreateBlueGreenDeploymentRequest : AmazonRDSRequest {
    private string _blueGreenDeploymentName;
    private string _source;
    private List`1<Tag> _tags;
    private string _targetDBClusterParameterGroupName;
    private string _targetDBInstanceClass;
    private string _targetDBParameterGroupName;
    private string _targetEngineVersion;
    private Nullable`1<bool> _upgradeTargetStorageConfig;
    [AWSPropertyAttribute]
public string BlueGreenDeploymentName { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBClusterParameterGroupName { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBParameterGroupName { get; public set; }
    [AWSPropertyAttribute]
public string TargetEngineVersion { get; public set; }
    public Nullable`1<bool> UpgradeTargetStorageConfig { get; public set; }
    public string get_BlueGreenDeploymentName();
    public void set_BlueGreenDeploymentName(string value);
    internal bool IsSetBlueGreenDeploymentName();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetDBClusterParameterGroupName();
    public void set_TargetDBClusterParameterGroupName(string value);
    internal bool IsSetTargetDBClusterParameterGroupName();
    public string get_TargetDBInstanceClass();
    public void set_TargetDBInstanceClass(string value);
    internal bool IsSetTargetDBInstanceClass();
    public string get_TargetDBParameterGroupName();
    public void set_TargetDBParameterGroupName(string value);
    internal bool IsSetTargetDBParameterGroupName();
    public string get_TargetEngineVersion();
    public void set_TargetEngineVersion(string value);
    internal bool IsSetTargetEngineVersion();
    public Nullable`1<bool> get_UpgradeTargetStorageConfig();
    public void set_UpgradeTargetStorageConfig(Nullable`1<bool> value);
    internal bool IsSetUpgradeTargetStorageConfig();
}
public class Amazon.RDS.Model.CreateBlueGreenDeploymentResponse : AmazonWebServiceResponse {
    private BlueGreenDeployment _blueGreenDeployment;
    public BlueGreenDeployment BlueGreenDeployment { get; public set; }
    public BlueGreenDeployment get_BlueGreenDeployment();
    public void set_BlueGreenDeployment(BlueGreenDeployment value);
    internal bool IsSetBlueGreenDeployment();
}
public class Amazon.RDS.Model.CreateCustomDBEngineVersionException : AmazonRDSException {
    public CreateCustomDBEngineVersionException(string message);
    public CreateCustomDBEngineVersionException(string message, Exception innerException);
    public CreateCustomDBEngineVersionException(Exception innerException);
    public CreateCustomDBEngineVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CreateCustomDBEngineVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.CreateCustomDBEngineVersionRequest : AmazonRDSRequest {
    private string _databaseInstallationFilesS3BucketName;
    private string _databaseInstallationFilesS3Prefix;
    private string _description;
    private string _engine;
    private string _engineVersion;
    private string _imageId;
    private string _kmsKeyId;
    private string _manifest;
    private string _sourceCustomDbEngineVersionIdentifier;
    private List`1<Tag> _tags;
    private Nullable`1<bool> _useAwsProvidedLatestImage;
    [AWSPropertyAttribute]
public string DatabaseInstallationFilesS3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseInstallationFilesS3Prefix { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    [AWSPropertyAttribute]
public string EngineVersion { get; public set; }
    [AWSPropertyAttribute]
public string ImageId { get; public set; }
    [AWSPropertyAttribute]
public string KMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string Manifest { get; public set; }
    [AWSPropertyAttribute]
public string SourceCustomDbEngineVersionIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> UseAwsProvidedLatestImage { get; public set; }
    public string get_DatabaseInstallationFilesS3BucketName();
    public void set_DatabaseInstallationFilesS3BucketName(string value);
    internal bool IsSetDatabaseInstallationFilesS3BucketName();
    public string get_DatabaseInstallationFilesS3Prefix();
    public void set_DatabaseInstallationFilesS3Prefix(string value);
    internal bool IsSetDatabaseInstallationFilesS3Prefix();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_Manifest();
    public void set_Manifest(string value);
    internal bool IsSetManifest();
    public string get_SourceCustomDbEngineVersionIdentifier();
    public void set_SourceCustomDbEngineVersionIdentifier(string value);
    internal bool IsSetSourceCustomDbEngineVersionIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<bool> get_UseAwsProvidedLatestImage();
    public void set_UseAwsProvidedLatestImage(Nullable`1<bool> value);
    internal bool IsSetUseAwsProvidedLatestImage();
}
public class Amazon.RDS.Model.CreateCustomDBEngineVersionResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createTime;
    private string _customDBEngineVersionManifest;
    private string _databaseInstallationFilesS3BucketName;
    private string _databaseInstallationFilesS3Prefix;
    private string _dbEngineDescription;
    private string _dbEngineMediaType;
    private string _dbEngineVersionArn;
    private string _dbEngineVersionDescription;
    private string _dbParameterGroupFamily;
    private CharacterSet _defaultCharacterSet;
    private string _engine;
    private string _engineVersion;
    private List`1<string> _exportableLogTypes;
    private CustomDBEngineVersionAMI _image;
    private string _kmsKeyId;
    private string _majorEngineVersion;
    private string _status;
    private List`1<string> _supportedCACertificateIdentifiers;
    private List`1<CharacterSet> _supportedCharacterSets;
    private List`1<string> _supportedEngineModes;
    private List`1<string> _supportedFeatureNames;
    private List`1<CharacterSet> _supportedNcharCharacterSets;
    private List`1<Timezone> _supportedTimezones;
    private Nullable`1<bool> _supportsBabelfish;
    private Nullable`1<bool> _supportsCertificateRotationWithoutRestart;
    private Nullable`1<bool> _supportsGlobalDatabases;
    private Nullable`1<bool> _supportsIntegrations;
    private Nullable`1<bool> _supportsLimitlessDatabase;
    private Nullable`1<bool> _supportsLocalWriteForwarding;
    private Nullable`1<bool> _supportsLogExportsToCloudwatchLogs;
    private Nullable`1<bool> _supportsParallelQuery;
    private Nullable`1<bool> _supportsReadReplica;
    private List`1<Tag> _tagList;
    private List`1<UpgradeTarget> _validUpgradeTarget;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string CustomDBEngineVersionManifest { get; public set; }
    public string DatabaseInstallationFilesS3BucketName { get; public set; }
    public string DatabaseInstallationFilesS3Prefix { get; public set; }
    public string DBEngineDescription { get; public set; }
    public string DBEngineMediaType { get; public set; }
    public string DBEngineVersionArn { get; public set; }
    public string DBEngineVersionDescription { get; public set; }
    public string DBParameterGroupFamily { get; public set; }
    public CharacterSet DefaultCharacterSet { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public List`1<string> ExportableLogTypes { get; public set; }
    public CustomDBEngineVersionAMI Image { get; public set; }
    public string KMSKeyId { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string Status { get; public set; }
    public List`1<string> SupportedCACertificateIdentifiers { get; public set; }
    public List`1<CharacterSet> SupportedCharacterSets { get; public set; }
    public List`1<string> SupportedEngineModes { get; public set; }
    public List`1<string> SupportedFeatureNames { get; public set; }
    public List`1<CharacterSet> SupportedNcharCharacterSets { get; public set; }
    public List`1<Timezone> SupportedTimezones { get; public set; }
    public Nullable`1<bool> SupportsBabelfish { get; public set; }
    public Nullable`1<bool> SupportsCertificateRotationWithoutRestart { get; public set; }
    public Nullable`1<bool> SupportsGlobalDatabases { get; public set; }
    public Nullable`1<bool> SupportsIntegrations { get; public set; }
    public Nullable`1<bool> SupportsLimitlessDatabase { get; public set; }
    public Nullable`1<bool> SupportsLocalWriteForwarding { get; public set; }
    public Nullable`1<bool> SupportsLogExportsToCloudwatchLogs { get; public set; }
    public Nullable`1<bool> SupportsParallelQuery { get; public set; }
    public Nullable`1<bool> SupportsReadReplica { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public List`1<UpgradeTarget> ValidUpgradeTarget { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_CustomDBEngineVersionManifest();
    public void set_CustomDBEngineVersionManifest(string value);
    internal bool IsSetCustomDBEngineVersionManifest();
    public string get_DatabaseInstallationFilesS3BucketName();
    public void set_DatabaseInstallationFilesS3BucketName(string value);
    internal bool IsSetDatabaseInstallationFilesS3BucketName();
    public string get_DatabaseInstallationFilesS3Prefix();
    public void set_DatabaseInstallationFilesS3Prefix(string value);
    internal bool IsSetDatabaseInstallationFilesS3Prefix();
    public string get_DBEngineDescription();
    public void set_DBEngineDescription(string value);
    internal bool IsSetDBEngineDescription();
    public string get_DBEngineMediaType();
    public void set_DBEngineMediaType(string value);
    internal bool IsSetDBEngineMediaType();
    public string get_DBEngineVersionArn();
    public void set_DBEngineVersionArn(string value);
    internal bool IsSetDBEngineVersionArn();
    public string get_DBEngineVersionDescription();
    public void set_DBEngineVersionDescription(string value);
    internal bool IsSetDBEngineVersionDescription();
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public CharacterSet get_DefaultCharacterSet();
    public void set_DefaultCharacterSet(CharacterSet value);
    internal bool IsSetDefaultCharacterSet();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public List`1<string> get_ExportableLogTypes();
    public void set_ExportableLogTypes(List`1<string> value);
    internal bool IsSetExportableLogTypes();
    public CustomDBEngineVersionAMI get_Image();
    public void set_Image(CustomDBEngineVersionAMI value);
    internal bool IsSetImage();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<string> get_SupportedCACertificateIdentifiers();
    public void set_SupportedCACertificateIdentifiers(List`1<string> value);
    internal bool IsSetSupportedCACertificateIdentifiers();
    public List`1<CharacterSet> get_SupportedCharacterSets();
    public void set_SupportedCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedCharacterSets();
    public List`1<string> get_SupportedEngineModes();
    public void set_SupportedEngineModes(List`1<string> value);
    internal bool IsSetSupportedEngineModes();
    public List`1<string> get_SupportedFeatureNames();
    public void set_SupportedFeatureNames(List`1<string> value);
    internal bool IsSetSupportedFeatureNames();
    public List`1<CharacterSet> get_SupportedNcharCharacterSets();
    public void set_SupportedNcharCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedNcharCharacterSets();
    public List`1<Timezone> get_SupportedTimezones();
    public void set_SupportedTimezones(List`1<Timezone> value);
    internal bool IsSetSupportedTimezones();
    public Nullable`1<bool> get_SupportsBabelfish();
    public void set_SupportsBabelfish(Nullable`1<bool> value);
    internal bool IsSetSupportsBabelfish();
    public Nullable`1<bool> get_SupportsCertificateRotationWithoutRestart();
    public void set_SupportsCertificateRotationWithoutRestart(Nullable`1<bool> value);
    internal bool IsSetSupportsCertificateRotationWithoutRestart();
    public Nullable`1<bool> get_SupportsGlobalDatabases();
    public void set_SupportsGlobalDatabases(Nullable`1<bool> value);
    internal bool IsSetSupportsGlobalDatabases();
    public Nullable`1<bool> get_SupportsIntegrations();
    public void set_SupportsIntegrations(Nullable`1<bool> value);
    internal bool IsSetSupportsIntegrations();
    public Nullable`1<bool> get_SupportsLimitlessDatabase();
    public void set_SupportsLimitlessDatabase(Nullable`1<bool> value);
    internal bool IsSetSupportsLimitlessDatabase();
    public Nullable`1<bool> get_SupportsLocalWriteForwarding();
    public void set_SupportsLocalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetSupportsLocalWriteForwarding();
    public Nullable`1<bool> get_SupportsLogExportsToCloudwatchLogs();
    public void set_SupportsLogExportsToCloudwatchLogs(Nullable`1<bool> value);
    internal bool IsSetSupportsLogExportsToCloudwatchLogs();
    public Nullable`1<bool> get_SupportsParallelQuery();
    public void set_SupportsParallelQuery(Nullable`1<bool> value);
    internal bool IsSetSupportsParallelQuery();
    public Nullable`1<bool> get_SupportsReadReplica();
    public void set_SupportsReadReplica(Nullable`1<bool> value);
    internal bool IsSetSupportsReadReplica();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public List`1<UpgradeTarget> get_ValidUpgradeTarget();
    public void set_ValidUpgradeTarget(List`1<UpgradeTarget> value);
    internal bool IsSetValidUpgradeTarget();
}
public class Amazon.RDS.Model.CreateDBClusterEndpointRequest : AmazonRDSRequest {
    private string _dbClusterEndpointIdentifier;
    private string _dbClusterIdentifier;
    private string _endpointType;
    private List`1<string> _excludedMembers;
    private List`1<string> _staticMembers;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DBClusterEndpointIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string EndpointType { get; public set; }
    public List`1<string> ExcludedMembers { get; public set; }
    public List`1<string> StaticMembers { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_EndpointType();
    public void set_EndpointType(string value);
    internal bool IsSetEndpointType();
    public List`1<string> get_ExcludedMembers();
    public void set_ExcludedMembers(List`1<string> value);
    internal bool IsSetExcludedMembers();
    public List`1<string> get_StaticMembers();
    public void set_StaticMembers(List`1<string> value);
    internal bool IsSetStaticMembers();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateDBClusterEndpointResponse : AmazonWebServiceResponse {
    private string _customEndpointType;
    private string _dbClusterEndpointArn;
    private string _dbClusterEndpointIdentifier;
    private string _dbClusterEndpointResourceIdentifier;
    private string _dbClusterIdentifier;
    private string _endpoint;
    private string _endpointType;
    private List`1<string> _excludedMembers;
    private List`1<string> _staticMembers;
    private string _status;
    public string CustomEndpointType { get; public set; }
    public string DBClusterEndpointArn { get; public set; }
    public string DBClusterEndpointIdentifier { get; public set; }
    public string DBClusterEndpointResourceIdentifier { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string Endpoint { get; public set; }
    public string EndpointType { get; public set; }
    public List`1<string> ExcludedMembers { get; public set; }
    public List`1<string> StaticMembers { get; public set; }
    public string Status { get; public set; }
    public string get_CustomEndpointType();
    public void set_CustomEndpointType(string value);
    internal bool IsSetCustomEndpointType();
    public string get_DBClusterEndpointArn();
    public void set_DBClusterEndpointArn(string value);
    internal bool IsSetDBClusterEndpointArn();
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
    public string get_DBClusterEndpointResourceIdentifier();
    public void set_DBClusterEndpointResourceIdentifier(string value);
    internal bool IsSetDBClusterEndpointResourceIdentifier();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_EndpointType();
    public void set_EndpointType(string value);
    internal bool IsSetEndpointType();
    public List`1<string> get_ExcludedMembers();
    public void set_ExcludedMembers(List`1<string> value);
    internal bool IsSetExcludedMembers();
    public List`1<string> get_StaticMembers();
    public void set_StaticMembers(List`1<string> value);
    internal bool IsSetStaticMembers();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.CreateDBClusterParameterGroupRequest : AmazonRDSRequest {
    private string _dbClusterParameterGroupName;
    private string _dbParameterGroupFamily;
    private string _description;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DBClusterParameterGroupName { get; public set; }
    [AWSPropertyAttribute]
public string DBParameterGroupFamily { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateDBClusterParameterGroupResponse : AmazonWebServiceResponse {
    private DBClusterParameterGroup _dbClusterParameterGroup;
    public DBClusterParameterGroup DBClusterParameterGroup { get; public set; }
    public DBClusterParameterGroup get_DBClusterParameterGroup();
    public void set_DBClusterParameterGroup(DBClusterParameterGroup value);
    internal bool IsSetDBClusterParameterGroup();
}
public class Amazon.RDS.Model.CreateDBClusterRequest : AmazonRDSRequest {
    private string _sourceRegion;
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private List`1<string> _availabilityZones;
    private Nullable`1<long> _backtrackWindow;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _caCertificateIdentifier;
    private string _characterSetName;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _databaseName;
    private string _dbClusterIdentifier;
    private string _dbClusterInstanceClass;
    private string _dbClusterParameterGroupName;
    private string _dbSubnetGroupName;
    private string _dbSystemId;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainIAMRoleName;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableGlobalWriteForwarding;
    private Nullable`1<bool> _enableHttpEndpoint;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private Nullable`1<bool> _enableLimitlessDatabase;
    private Nullable`1<bool> _enableLocalWriteForwarding;
    private Nullable`1<bool> _enablePerformanceInsights;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineMode;
    private string _engineVersion;
    private string _globalClusterIdentifier;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private Nullable`1<bool> _manageMasterUserPassword;
    private string _masterUsername;
    private string _masterUserPassword;
    private string _masterUserSecretKmsKeyId;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private string _networkType;
    private string _optionGroupName;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private Nullable`1<int> _port;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private string _preSignedUrl;
    private Nullable`1<bool> _publiclyAccessible;
    private RdsCustomClusterConfiguration _rdsCustomClusterConfiguration;
    private string _replicationSourceIdentifier;
    private ScalingConfiguration _scalingConfiguration;
    private ServerlessV2ScalingConfiguration _serverlessV2ScalingConfiguration;
    private Nullable`1<bool> _storageEncrypted;
    private string _storageType;
    private List`1<Tag> _tags;
    private List`1<string> _vpcSecurityGroupIds;
    public string SourceRegion { get; public set; }
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public Nullable`1<long> BacktrackWindow { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public string CharacterSetName { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string DBClusterInstanceClass { get; public set; }
    public string DBClusterParameterGroupName { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public string DBSystemId { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableGlobalWriteForwarding { get; public set; }
    public Nullable`1<bool> EnableHttpEndpoint { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public Nullable`1<bool> EnableLimitlessDatabase { get; public set; }
    public Nullable`1<bool> EnableLocalWriteForwarding { get; public set; }
    public Nullable`1<bool> EnablePerformanceInsights { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineMode { get; public set; }
    public string EngineVersion { get; public set; }
    public string GlobalClusterIdentifier { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> ManageMasterUserPassword { get; public set; }
    public string MasterUsername { get; public set; }
    public string MasterUserPassword { get; public set; }
    public string MasterUserSecretKmsKeyId { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public string PreSignedUrl { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public RdsCustomClusterConfiguration RdsCustomClusterConfiguration { get; public set; }
    public string ReplicationSourceIdentifier { get; public set; }
    public ScalingConfiguration ScalingConfiguration { get; public set; }
    public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public sealed virtual string get_SourceRegion();
    public sealed virtual void set_SourceRegion(string value);
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public Nullable`1<long> get_BacktrackWindow();
    public void set_BacktrackWindow(Nullable`1<long> value);
    internal bool IsSetBacktrackWindow();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBClusterInstanceClass();
    public void set_DBClusterInstanceClass(string value);
    internal bool IsSetDBClusterInstanceClass();
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public string get_DBSystemId();
    public void set_DBSystemId(string value);
    internal bool IsSetDBSystemId();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableGlobalWriteForwarding();
    public void set_EnableGlobalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetEnableGlobalWriteForwarding();
    public Nullable`1<bool> get_EnableHttpEndpoint();
    public void set_EnableHttpEndpoint(Nullable`1<bool> value);
    internal bool IsSetEnableHttpEndpoint();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public Nullable`1<bool> get_EnableLimitlessDatabase();
    public void set_EnableLimitlessDatabase(Nullable`1<bool> value);
    internal bool IsSetEnableLimitlessDatabase();
    public Nullable`1<bool> get_EnableLocalWriteForwarding();
    public void set_EnableLocalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetEnableLocalWriteForwarding();
    public Nullable`1<bool> get_EnablePerformanceInsights();
    public void set_EnablePerformanceInsights(Nullable`1<bool> value);
    internal bool IsSetEnablePerformanceInsights();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineMode();
    public void set_EngineMode(string value);
    internal bool IsSetEngineMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_ManageMasterUserPassword();
    public void set_ManageMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetManageMasterUserPassword();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_MasterUserSecretKmsKeyId();
    public void set_MasterUserSecretKmsKeyId(string value);
    internal bool IsSetMasterUserSecretKmsKeyId();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public sealed virtual string get_PreSignedUrl();
    public sealed virtual void set_PreSignedUrl(string value);
    internal bool IsSetPreSignedUrl();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public RdsCustomClusterConfiguration get_RdsCustomClusterConfiguration();
    public void set_RdsCustomClusterConfiguration(RdsCustomClusterConfiguration value);
    internal bool IsSetRdsCustomClusterConfiguration();
    public string get_ReplicationSourceIdentifier();
    public void set_ReplicationSourceIdentifier(string value);
    internal bool IsSetReplicationSourceIdentifier();
    public ScalingConfiguration get_ScalingConfiguration();
    public void set_ScalingConfiguration(ScalingConfiguration value);
    internal bool IsSetScalingConfiguration();
    public ServerlessV2ScalingConfiguration get_ServerlessV2ScalingConfiguration();
    public void set_ServerlessV2ScalingConfiguration(ServerlessV2ScalingConfiguration value);
    internal bool IsSetServerlessV2ScalingConfiguration();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.CreateDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.CreateDBClusterSnapshotRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private string _dbClusterSnapshotIdentifier;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterSnapshotIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateDBClusterSnapshotResponse : AmazonWebServiceResponse {
    private DBClusterSnapshot _dbClusterSnapshot;
    public DBClusterSnapshot DBClusterSnapshot { get; public set; }
    public DBClusterSnapshot get_DBClusterSnapshot();
    public void set_DBClusterSnapshot(DBClusterSnapshot value);
    internal bool IsSetDBClusterSnapshot();
}
public class Amazon.RDS.Model.CreateDBInstanceReadReplicaRequest : AmazonRDSRequest {
    private string _sourceRegion;
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private string _caCertificateIdentifier;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _customIamInstanceProfile;
    private string _dbInstanceClass;
    private string _dbInstanceIdentifier;
    private string _dbParameterGroupName;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainAuthSecretArn;
    private List`1<string> _domainDnsIps;
    private string _domainFqdn;
    private string _domainIAMRoleName;
    private string _domainOu;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableCustomerOwnedIp;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private Nullable`1<bool> _enablePerformanceInsights;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private Nullable`1<int> _maxAllocatedStorage;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private string _optionGroupName;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private Nullable`1<int> _port;
    private string _preSignedUrl;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<bool> _publiclyAccessible;
    private ReplicaMode _replicaMode;
    private string _sourceDBClusterIdentifier;
    private string _sourceDBInstanceIdentifier;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tags;
    private Nullable`1<bool> _upgradeStorageConfig;
    private Nullable`1<bool> _useDefaultProcessorFeatures;
    private List`1<string> _vpcSecurityGroupIds;
    public string SourceRegion { get; public set; }
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string CustomIamInstanceProfile { get; public set; }
    public string DBInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string DBParameterGroupName { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainAuthSecretArn { get; public set; }
    public List`1<string> DomainDnsIps { get; public set; }
    public string DomainFqdn { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public string DomainOu { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableCustomerOwnedIp { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public Nullable`1<bool> EnablePerformanceInsights { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<int> MaxAllocatedStorage { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string PreSignedUrl { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public ReplicaMode ReplicaMode { get; public set; }
    public string SourceDBClusterIdentifier { get; public set; }
    public string SourceDBInstanceIdentifier { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> UpgradeStorageConfig { get; public set; }
    public Nullable`1<bool> UseDefaultProcessorFeatures { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public CreateDBInstanceReadReplicaRequest(string dbInstanceIdentifier, string sourceDBInstanceIdentifier);
    public sealed virtual string get_SourceRegion();
    public sealed virtual void set_SourceRegion(string value);
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_CustomIamInstanceProfile();
    public void set_CustomIamInstanceProfile(string value);
    internal bool IsSetCustomIamInstanceProfile();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainAuthSecretArn();
    public void set_DomainAuthSecretArn(string value);
    internal bool IsSetDomainAuthSecretArn();
    public List`1<string> get_DomainDnsIps();
    public void set_DomainDnsIps(List`1<string> value);
    internal bool IsSetDomainDnsIps();
    public string get_DomainFqdn();
    public void set_DomainFqdn(string value);
    internal bool IsSetDomainFqdn();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public string get_DomainOu();
    public void set_DomainOu(string value);
    internal bool IsSetDomainOu();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableCustomerOwnedIp();
    public void set_EnableCustomerOwnedIp(Nullable`1<bool> value);
    internal bool IsSetEnableCustomerOwnedIp();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public Nullable`1<bool> get_EnablePerformanceInsights();
    public void set_EnablePerformanceInsights(Nullable`1<bool> value);
    internal bool IsSetEnablePerformanceInsights();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<int> get_MaxAllocatedStorage();
    public void set_MaxAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMaxAllocatedStorage();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public sealed virtual string get_PreSignedUrl();
    public sealed virtual void set_PreSignedUrl(string value);
    internal bool IsSetPreSignedUrl();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public ReplicaMode get_ReplicaMode();
    public void set_ReplicaMode(ReplicaMode value);
    internal bool IsSetReplicaMode();
    public string get_SourceDBClusterIdentifier();
    public void set_SourceDBClusterIdentifier(string value);
    internal bool IsSetSourceDBClusterIdentifier();
    public string get_SourceDBInstanceIdentifier();
    public void set_SourceDBInstanceIdentifier(string value);
    internal bool IsSetSourceDBInstanceIdentifier();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<bool> get_UpgradeStorageConfig();
    public void set_UpgradeStorageConfig(Nullable`1<bool> value);
    internal bool IsSetUpgradeStorageConfig();
    public Nullable`1<bool> get_UseDefaultProcessorFeatures();
    public void set_UseDefaultProcessorFeatures(Nullable`1<bool> value);
    internal bool IsSetUseDefaultProcessorFeatures();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.CreateDBInstanceReadReplicaResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.CreateDBInstanceRequest : AmazonRDSRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _backupTarget;
    private string _caCertificateIdentifier;
    private string _characterSetName;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _customIamInstanceProfile;
    private string _dbClusterIdentifier;
    private string _dbInstanceClass;
    private string _dbInstanceIdentifier;
    private string _dbName;
    private string _dbParameterGroupName;
    private List`1<string> _dbSecurityGroups;
    private string _dbSubnetGroupName;
    private string _dbSystemId;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainAuthSecretArn;
    private List`1<string> _domainDnsIps;
    private string _domainFqdn;
    private string _domainIAMRoleName;
    private string _domainOu;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableCustomerOwnedIp;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private Nullable`1<bool> _enablePerformanceInsights;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineVersion;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _licenseModel;
    private Nullable`1<bool> _manageMasterUserPassword;
    private string _masterUsername;
    private string _masterUserPassword;
    private string _masterUserSecretKmsKeyId;
    private Nullable`1<int> _maxAllocatedStorage;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private Nullable`1<bool> _multiAZ;
    private Nullable`1<bool> _multiTenant;
    private string _ncharCharacterSetName;
    private string _networkType;
    private string _optionGroupName;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private Nullable`1<int> _port;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<int> _promotionTier;
    private Nullable`1<bool> _publiclyAccessible;
    private Nullable`1<bool> _storageEncrypted;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tags;
    private string _tdeCredentialArn;
    private string _tdeCredentialPassword;
    private string _timezone;
    private List`1<string> _vpcSecurityGroupIds;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string BackupTarget { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public string CharacterSetName { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string CustomIamInstanceProfile { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string DBName { get; public set; }
    public string DBParameterGroupName { get; public set; }
    public List`1<string> DBSecurityGroups { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public string DBSystemId { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainAuthSecretArn { get; public set; }
    public List`1<string> DomainDnsIps { get; public set; }
    public string DomainFqdn { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public string DomainOu { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableCustomerOwnedIp { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public Nullable`1<bool> EnablePerformanceInsights { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string LicenseModel { get; public set; }
    public Nullable`1<bool> ManageMasterUserPassword { get; public set; }
    public string MasterUsername { get; public set; }
    public string MasterUserPassword { get; public set; }
    public string MasterUserSecretKmsKeyId { get; public set; }
    public Nullable`1<int> MaxAllocatedStorage { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public Nullable`1<bool> MultiTenant { get; public set; }
    public string NcharCharacterSetName { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<int> PromotionTier { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TdeCredentialArn { get; public set; }
    public string TdeCredentialPassword { get; public set; }
    public string Timezone { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public CreateDBInstanceRequest(string dbInstanceIdentifier, Nullable`1<int> allocatedStorage, string dbInstanceClass, string engine, string masterUsername, string masterUserPassword);
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_BackupTarget();
    public void set_BackupTarget(string value);
    internal bool IsSetBackupTarget();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_CustomIamInstanceProfile();
    public void set_CustomIamInstanceProfile(string value);
    internal bool IsSetCustomIamInstanceProfile();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBName();
    public void set_DBName(string value);
    internal bool IsSetDBName();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public List`1<string> get_DBSecurityGroups();
    public void set_DBSecurityGroups(List`1<string> value);
    internal bool IsSetDBSecurityGroups();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public string get_DBSystemId();
    public void set_DBSystemId(string value);
    internal bool IsSetDBSystemId();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainAuthSecretArn();
    public void set_DomainAuthSecretArn(string value);
    internal bool IsSetDomainAuthSecretArn();
    public List`1<string> get_DomainDnsIps();
    public void set_DomainDnsIps(List`1<string> value);
    internal bool IsSetDomainDnsIps();
    public string get_DomainFqdn();
    public void set_DomainFqdn(string value);
    internal bool IsSetDomainFqdn();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public string get_DomainOu();
    public void set_DomainOu(string value);
    internal bool IsSetDomainOu();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableCustomerOwnedIp();
    public void set_EnableCustomerOwnedIp(Nullable`1<bool> value);
    internal bool IsSetEnableCustomerOwnedIp();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public Nullable`1<bool> get_EnablePerformanceInsights();
    public void set_EnablePerformanceInsights(Nullable`1<bool> value);
    internal bool IsSetEnablePerformanceInsights();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public Nullable`1<bool> get_ManageMasterUserPassword();
    public void set_ManageMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetManageMasterUserPassword();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_MasterUserSecretKmsKeyId();
    public void set_MasterUserSecretKmsKeyId(string value);
    internal bool IsSetMasterUserSecretKmsKeyId();
    public Nullable`1<int> get_MaxAllocatedStorage();
    public void set_MaxAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMaxAllocatedStorage();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public Nullable`1<bool> get_MultiTenant();
    public void set_MultiTenant(Nullable`1<bool> value);
    internal bool IsSetMultiTenant();
    public string get_NcharCharacterSetName();
    public void set_NcharCharacterSetName(string value);
    internal bool IsSetNcharCharacterSetName();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<int> get_PromotionTier();
    public void set_PromotionTier(Nullable`1<int> value);
    internal bool IsSetPromotionTier();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TdeCredentialArn();
    public void set_TdeCredentialArn(string value);
    internal bool IsSetTdeCredentialArn();
    public string get_TdeCredentialPassword();
    public void set_TdeCredentialPassword(string value);
    internal bool IsSetTdeCredentialPassword();
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.CreateDBInstanceResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.CreateDBParameterGroupRequest : AmazonRDSRequest {
    private string _dbParameterGroupFamily;
    private string _dbParameterGroupName;
    private string _description;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DBParameterGroupFamily { get; public set; }
    [AWSPropertyAttribute]
public string DBParameterGroupName { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public CreateDBParameterGroupRequest(string dbParameterGroupName, string dbParameterGroupFamily, string description);
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateDBParameterGroupResponse : AmazonWebServiceResponse {
    private DBParameterGroup _dbParameterGroup;
    public DBParameterGroup DBParameterGroup { get; public set; }
    public DBParameterGroup get_DBParameterGroup();
    public void set_DBParameterGroup(DBParameterGroup value);
    internal bool IsSetDBParameterGroup();
}
public class Amazon.RDS.Model.CreateDBProxyEndpointRequest : AmazonRDSRequest {
    private string _dbProxyEndpointName;
    private string _dbProxyName;
    private List`1<Tag> _tags;
    private DBProxyEndpointTargetRole _targetRole;
    private List`1<string> _vpcSecurityGroupIds;
    private List`1<string> _vpcSubnetIds;
    [AWSPropertyAttribute]
public string DBProxyEndpointName { get; public set; }
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public DBProxyEndpointTargetRole TargetRole { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VpcSubnetIds { get; public set; }
    public string get_DBProxyEndpointName();
    public void set_DBProxyEndpointName(string value);
    internal bool IsSetDBProxyEndpointName();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public DBProxyEndpointTargetRole get_TargetRole();
    public void set_TargetRole(DBProxyEndpointTargetRole value);
    internal bool IsSetTargetRole();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
    public List`1<string> get_VpcSubnetIds();
    public void set_VpcSubnetIds(List`1<string> value);
    internal bool IsSetVpcSubnetIds();
}
public class Amazon.RDS.Model.CreateDBProxyEndpointResponse : AmazonWebServiceResponse {
    private DBProxyEndpoint _dbProxyEndpoint;
    public DBProxyEndpoint DBProxyEndpoint { get; public set; }
    public DBProxyEndpoint get_DBProxyEndpoint();
    public void set_DBProxyEndpoint(DBProxyEndpoint value);
    internal bool IsSetDBProxyEndpoint();
}
public class Amazon.RDS.Model.CreateDBProxyRequest : AmazonRDSRequest {
    private List`1<UserAuthConfig> _auth;
    private string _dbProxyName;
    private Nullable`1<bool> _debugLogging;
    private EngineFamily _engineFamily;
    private Nullable`1<int> _idleClientTimeout;
    private Nullable`1<bool> _requireTLS;
    private string _roleArn;
    private List`1<Tag> _tags;
    private List`1<string> _vpcSecurityGroupIds;
    private List`1<string> _vpcSubnetIds;
    [AWSPropertyAttribute]
public List`1<UserAuthConfig> Auth { get; public set; }
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public Nullable`1<bool> DebugLogging { get; public set; }
    [AWSPropertyAttribute]
public EngineFamily EngineFamily { get; public set; }
    public Nullable`1<int> IdleClientTimeout { get; public set; }
    public Nullable`1<bool> RequireTLS { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VpcSubnetIds { get; public set; }
    public List`1<UserAuthConfig> get_Auth();
    public void set_Auth(List`1<UserAuthConfig> value);
    internal bool IsSetAuth();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public Nullable`1<bool> get_DebugLogging();
    public void set_DebugLogging(Nullable`1<bool> value);
    internal bool IsSetDebugLogging();
    public EngineFamily get_EngineFamily();
    public void set_EngineFamily(EngineFamily value);
    internal bool IsSetEngineFamily();
    public Nullable`1<int> get_IdleClientTimeout();
    public void set_IdleClientTimeout(Nullable`1<int> value);
    internal bool IsSetIdleClientTimeout();
    public Nullable`1<bool> get_RequireTLS();
    public void set_RequireTLS(Nullable`1<bool> value);
    internal bool IsSetRequireTLS();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
    public List`1<string> get_VpcSubnetIds();
    public void set_VpcSubnetIds(List`1<string> value);
    internal bool IsSetVpcSubnetIds();
}
public class Amazon.RDS.Model.CreateDBProxyResponse : AmazonWebServiceResponse {
    private DBProxy _dbProxy;
    public DBProxy DBProxy { get; public set; }
    public DBProxy get_DBProxy();
    public void set_DBProxy(DBProxy value);
    internal bool IsSetDBProxy();
}
public class Amazon.RDS.Model.CreateDBSecurityGroupRequest : AmazonRDSRequest {
    private string _dbSecurityGroupDescription;
    private string _dbSecurityGroupName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DBSecurityGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string DBSecurityGroupName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public CreateDBSecurityGroupRequest(string dbSecurityGroupName, string dbSecurityGroupDescription);
    public string get_DBSecurityGroupDescription();
    public void set_DBSecurityGroupDescription(string value);
    internal bool IsSetDBSecurityGroupDescription();
    public string get_DBSecurityGroupName();
    public void set_DBSecurityGroupName(string value);
    internal bool IsSetDBSecurityGroupName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateDBSecurityGroupResponse : AmazonWebServiceResponse {
    private DBSecurityGroup _dbSecurityGroup;
    public DBSecurityGroup DBSecurityGroup { get; public set; }
    public DBSecurityGroup get_DBSecurityGroup();
    public void set_DBSecurityGroup(DBSecurityGroup value);
    internal bool IsSetDBSecurityGroup();
}
public class Amazon.RDS.Model.CreateDBShardGroupRequest : AmazonRDSRequest {
    private Nullable`1<int> _computeRedundancy;
    private string _dbClusterIdentifier;
    private string _dbShardGroupIdentifier;
    private Nullable`1<double> _maxACU;
    private Nullable`1<double> _minACU;
    private Nullable`1<bool> _publiclyAccessible;
    public Nullable`1<int> ComputeRedundancy { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> MaxACU { get; public set; }
    public Nullable`1<double> MinACU { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public Nullable`1<int> get_ComputeRedundancy();
    public void set_ComputeRedundancy(Nullable`1<int> value);
    internal bool IsSetComputeRedundancy();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public Nullable`1<double> get_MaxACU();
    public void set_MaxACU(Nullable`1<double> value);
    internal bool IsSetMaxACU();
    public Nullable`1<double> get_MinACU();
    public void set_MinACU(Nullable`1<double> value);
    internal bool IsSetMinACU();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
}
public class Amazon.RDS.Model.CreateDBShardGroupResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _computeRedundancy;
    private string _dbClusterIdentifier;
    private string _dbShardGroupIdentifier;
    private string _dbShardGroupResourceId;
    private string _endpoint;
    private Nullable`1<double> _maxACU;
    private Nullable`1<double> _minACU;
    private Nullable`1<bool> _publiclyAccessible;
    private string _status;
    public Nullable`1<int> ComputeRedundancy { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public string DBShardGroupResourceId { get; public set; }
    public string Endpoint { get; public set; }
    public Nullable`1<double> MaxACU { get; public set; }
    public Nullable`1<double> MinACU { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<int> get_ComputeRedundancy();
    public void set_ComputeRedundancy(Nullable`1<int> value);
    internal bool IsSetComputeRedundancy();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public string get_DBShardGroupResourceId();
    public void set_DBShardGroupResourceId(string value);
    internal bool IsSetDBShardGroupResourceId();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public Nullable`1<double> get_MaxACU();
    public void set_MaxACU(Nullable`1<double> value);
    internal bool IsSetMaxACU();
    public Nullable`1<double> get_MinACU();
    public void set_MinACU(Nullable`1<double> value);
    internal bool IsSetMinACU();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.CreateDBSnapshotRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _dbSnapshotIdentifier;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBSnapshotIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public CreateDBSnapshotRequest(string dbSnapshotIdentifier, string dbInstanceIdentifier);
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateDBSnapshotResponse : AmazonWebServiceResponse {
    private DBSnapshot _dbSnapshot;
    public DBSnapshot DBSnapshot { get; public set; }
    public DBSnapshot get_DBSnapshot();
    public void set_DBSnapshot(DBSnapshot value);
    internal bool IsSetDBSnapshot();
}
public class Amazon.RDS.Model.CreateDBSubnetGroupRequest : AmazonRDSRequest {
    private string _dbSubnetGroupDescription;
    private string _dbSubnetGroupName;
    private List`1<string> _subnetIds;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DBSubnetGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string DBSubnetGroupName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_DBSubnetGroupDescription();
    public void set_DBSubnetGroupDescription(string value);
    internal bool IsSetDBSubnetGroupDescription();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateDBSubnetGroupResponse : AmazonWebServiceResponse {
    private DBSubnetGroup _dbSubnetGroup;
    public DBSubnetGroup DBSubnetGroup { get; public set; }
    public DBSubnetGroup get_DBSubnetGroup();
    public void set_DBSubnetGroup(DBSubnetGroup value);
    internal bool IsSetDBSubnetGroup();
}
public class Amazon.RDS.Model.CreateEventSubscriptionRequest : AmazonRDSRequest {
    private Nullable`1<bool> _enabled;
    private List`1<string> _eventCategories;
    private string _snsTopicArn;
    private List`1<string> _sourceIds;
    private string _sourceType;
    private string _subscriptionName;
    private List`1<Tag> _tags;
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    [AWSPropertyAttribute]
public string SnsTopicArn { get; public set; }
    public List`1<string> SourceIds { get; public set; }
    public string SourceType { get; public set; }
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_SnsTopicArn();
    public void set_SnsTopicArn(string value);
    internal bool IsSetSnsTopicArn();
    public List`1<string> get_SourceIds();
    public void set_SourceIds(List`1<string> value);
    internal bool IsSetSourceIds();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateEventSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.RDS.Model.CreateGlobalClusterRequest : AmazonRDSRequest {
    private string _databaseName;
    private Nullable`1<bool> _deletionProtection;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineVersion;
    private string _globalClusterIdentifier;
    private string _sourceDBClusterIdentifier;
    private Nullable`1<bool> _storageEncrypted;
    public string DatabaseName { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineVersion { get; public set; }
    public string GlobalClusterIdentifier { get; public set; }
    public string SourceDBClusterIdentifier { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
    public string get_SourceDBClusterIdentifier();
    public void set_SourceDBClusterIdentifier(string value);
    internal bool IsSetSourceDBClusterIdentifier();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
}
public class Amazon.RDS.Model.CreateGlobalClusterResponse : AmazonWebServiceResponse {
    private GlobalCluster _globalCluster;
    public GlobalCluster GlobalCluster { get; public set; }
    public GlobalCluster get_GlobalCluster();
    public void set_GlobalCluster(GlobalCluster value);
    internal bool IsSetGlobalCluster();
}
public class Amazon.RDS.Model.CreateIntegrationRequest : AmazonRDSRequest {
    private Dictionary`2<string, string> _additionalEncryptionContext;
    private string _dataFilter;
    private string _description;
    private string _integrationName;
    private string _kmsKeyId;
    private string _sourceArn;
    private List`1<Tag> _tags;
    private string _targetArn;
    public Dictionary`2<string, string> AdditionalEncryptionContext { get; public set; }
    [AWSPropertyAttribute]
public string DataFilter { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationName { get; public set; }
    public string KMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetArn { get; public set; }
    public Dictionary`2<string, string> get_AdditionalEncryptionContext();
    public void set_AdditionalEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalEncryptionContext();
    public string get_DataFilter();
    public void set_DataFilter(string value);
    internal bool IsSetDataFilter();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationName();
    public void set_IntegrationName(string value);
    internal bool IsSetIntegrationName();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.RDS.Model.CreateIntegrationResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _additionalEncryptionContext;
    private Nullable`1<DateTime> _createTime;
    private string _dataFilter;
    private string _description;
    private List`1<IntegrationError> _errors;
    private string _integrationArn;
    private string _integrationName;
    private string _kmsKeyId;
    private string _sourceArn;
    private IntegrationStatus _status;
    private List`1<Tag> _tags;
    private string _targetArn;
    public Dictionary`2<string, string> AdditionalEncryptionContext { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string DataFilter { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<IntegrationError> Errors { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationArn { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationName { get; public set; }
    public string KMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public IntegrationStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetArn { get; public set; }
    public Dictionary`2<string, string> get_AdditionalEncryptionContext();
    public void set_AdditionalEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalEncryptionContext();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_DataFilter();
    public void set_DataFilter(string value);
    internal bool IsSetDataFilter();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<IntegrationError> get_Errors();
    public void set_Errors(List`1<IntegrationError> value);
    internal bool IsSetErrors();
    public string get_IntegrationArn();
    public void set_IntegrationArn(string value);
    internal bool IsSetIntegrationArn();
    public string get_IntegrationName();
    public void set_IntegrationName(string value);
    internal bool IsSetIntegrationName();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public IntegrationStatus get_Status();
    public void set_Status(IntegrationStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.RDS.Model.CreateOptionGroupRequest : AmazonRDSRequest {
    private string _engineName;
    private string _majorEngineVersion;
    private string _optionGroupDescription;
    private string _optionGroupName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string EngineName { get; public set; }
    [AWSPropertyAttribute]
public string MajorEngineVersion { get; public set; }
    [AWSPropertyAttribute]
public string OptionGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string OptionGroupName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_OptionGroupDescription();
    public void set_OptionGroupDescription(string value);
    internal bool IsSetOptionGroupDescription();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.CreateOptionGroupResponse : AmazonWebServiceResponse {
    private OptionGroup _optionGroup;
    public OptionGroup OptionGroup { get; public set; }
    public OptionGroup get_OptionGroup();
    public void set_OptionGroup(OptionGroup value);
    internal bool IsSetOptionGroup();
}
public class Amazon.RDS.Model.CreateTenantDatabaseRequest : AmazonRDSRequest {
    private string _characterSetName;
    private string _dbInstanceIdentifier;
    private string _masterUsername;
    private string _masterUserPassword;
    private string _ncharCharacterSetName;
    private List`1<Tag> _tags;
    private string _tenantDBName;
    public string CharacterSetName { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string MasterUsername { get; public set; }
    [AWSPropertyAttribute]
public string MasterUserPassword { get; public set; }
    public string NcharCharacterSetName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TenantDBName { get; public set; }
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_NcharCharacterSetName();
    public void set_NcharCharacterSetName(string value);
    internal bool IsSetNcharCharacterSetName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TenantDBName();
    public void set_TenantDBName(string value);
    internal bool IsSetTenantDBName();
}
public class Amazon.RDS.Model.CreateTenantDatabaseResponse : AmazonWebServiceResponse {
    private TenantDatabase _tenantDatabase;
    public TenantDatabase TenantDatabase { get; public set; }
    public TenantDatabase get_TenantDatabase();
    public void set_TenantDatabase(TenantDatabase value);
    internal bool IsSetTenantDatabase();
}
public class Amazon.RDS.Model.CustomAvailabilityZoneNotFoundException : AmazonRDSException {
    public CustomAvailabilityZoneNotFoundException(string message);
    public CustomAvailabilityZoneNotFoundException(string message, Exception innerException);
    public CustomAvailabilityZoneNotFoundException(Exception innerException);
    public CustomAvailabilityZoneNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomAvailabilityZoneNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.CustomDBEngineVersionAlreadyExistsException : AmazonRDSException {
    public CustomDBEngineVersionAlreadyExistsException(string message);
    public CustomDBEngineVersionAlreadyExistsException(string message, Exception innerException);
    public CustomDBEngineVersionAlreadyExistsException(Exception innerException);
    public CustomDBEngineVersionAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomDBEngineVersionAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.CustomDBEngineVersionAMI : object {
    private string _imageId;
    private string _status;
    public string ImageId { get; public set; }
    public string Status { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.CustomDBEngineVersionNotFoundException : AmazonRDSException {
    public CustomDBEngineVersionNotFoundException(string message);
    public CustomDBEngineVersionNotFoundException(string message, Exception innerException);
    public CustomDBEngineVersionNotFoundException(Exception innerException);
    public CustomDBEngineVersionNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomDBEngineVersionNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.CustomDBEngineVersionQuotaExceededException : AmazonRDSException {
    public CustomDBEngineVersionQuotaExceededException(string message);
    public CustomDBEngineVersionQuotaExceededException(string message, Exception innerException);
    public CustomDBEngineVersionQuotaExceededException(Exception innerException);
    public CustomDBEngineVersionQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomDBEngineVersionQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBCluster : object {
    private string _activityStreamKinesisStreamName;
    private string _activityStreamKmsKeyId;
    private ActivityStreamMode _activityStreamMode;
    private ActivityStreamStatus _activityStreamStatus;
    private Nullable`1<int> _allocatedStorage;
    private List`1<DBClusterRole> _associatedRoles;
    private Nullable`1<DateTime> _automaticRestartTime;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private List`1<string> _availabilityZones;
    private string _awsBackupRecoveryPointArn;
    private Nullable`1<long> _backtrackConsumedChangeRecords;
    private Nullable`1<long> _backtrackWindow;
    private Nullable`1<int> _backupRetentionPeriod;
    private Nullable`1<int> _capacity;
    private CertificateDetails _certificateDetails;
    private string _characterSetName;
    private string _cloneGroupId;
    private Nullable`1<DateTime> _clusterCreateTime;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private Nullable`1<bool> _crossAccountClone;
    private List`1<string> _customEndpoints;
    private string _databaseName;
    private string _dbClusterArn;
    private string _dbClusterIdentifier;
    private string _dbClusterInstanceClass;
    private List`1<DBClusterMember> _dbClusterMembers;
    private List`1<DBClusterOptionGroupStatus> _dbClusterOptionGroupMemberships;
    private string _dbClusterParameterGroup;
    private string _dbClusterResourceId;
    private string _dbSubnetGroup;
    private string _dbSystemId;
    private Nullable`1<bool> _deletionProtection;
    private List`1<DomainMembership> _domainMemberships;
    private Nullable`1<DateTime> _earliestBacktrackTime;
    private Nullable`1<DateTime> _earliestRestorableTime;
    private List`1<string> _enabledCloudwatchLogsExports;
    private string _endpoint;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineMode;
    private string _engineVersion;
    private Nullable`1<bool> _globalWriteForwardingRequested;
    private WriteForwardingStatus _globalWriteForwardingStatus;
    private string _hostedZoneId;
    private Nullable`1<bool> _httpEndpointEnabled;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private Nullable`1<DateTime> _ioOptimizedNextAllowedModificationTime;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private Nullable`1<DateTime> _latestRestorableTime;
    private LimitlessDatabase _limitlessDatabase;
    private LocalWriteForwardingStatus _localWriteForwardingStatus;
    private string _masterUsername;
    private MasterUserSecret _masterUserSecret;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private ClusterPendingModifiedValues _pendingModifiedValues;
    private string _percentProgress;
    private Nullable`1<bool> _performanceInsightsEnabled;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private Nullable`1<int> _port;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private Nullable`1<bool> _publiclyAccessible;
    private RdsCustomClusterConfiguration _rdsCustomClusterConfiguration;
    private string _readerEndpoint;
    private List`1<string> _readReplicaIdentifiers;
    private string _replicationSourceIdentifier;
    private ScalingConfigurationInfo _scalingConfigurationInfo;
    private ServerlessV2ScalingConfigurationInfo _serverlessV2ScalingConfiguration;
    private string _status;
    private List`1<DBClusterStatusInfo> _statusInfos;
    private Nullable`1<bool> _storageEncrypted;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tagList;
    private List`1<VpcSecurityGroupMembership> _vpcSecurityGroups;
    public string ActivityStreamKinesisStreamName { get; public set; }
    public string ActivityStreamKmsKeyId { get; public set; }
    public ActivityStreamMode ActivityStreamMode { get; public set; }
    public ActivityStreamStatus ActivityStreamStatus { get; public set; }
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public List`1<DBClusterRole> AssociatedRoles { get; public set; }
    public Nullable`1<DateTime> AutomaticRestartTime { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public string AwsBackupRecoveryPointArn { get; public set; }
    public Nullable`1<long> BacktrackConsumedChangeRecords { get; public set; }
    public Nullable`1<long> BacktrackWindow { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public Nullable`1<int> Capacity { get; public set; }
    public CertificateDetails CertificateDetails { get; public set; }
    public string CharacterSetName { get; public set; }
    public string CloneGroupId { get; public set; }
    public Nullable`1<DateTime> ClusterCreateTime { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public Nullable`1<bool> CrossAccountClone { get; public set; }
    public List`1<string> CustomEndpoints { get; public set; }
    public string DatabaseName { get; public set; }
    public string DBClusterArn { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string DBClusterInstanceClass { get; public set; }
    public List`1<DBClusterMember> DBClusterMembers { get; public set; }
    public List`1<DBClusterOptionGroupStatus> DBClusterOptionGroupMemberships { get; public set; }
    public string DBClusterParameterGroup { get; public set; }
    public string DbClusterResourceId { get; public set; }
    public string DBSubnetGroup { get; public set; }
    public string DBSystemId { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public List`1<DomainMembership> DomainMemberships { get; public set; }
    public Nullable`1<DateTime> EarliestBacktrackTime { get; public set; }
    public Nullable`1<DateTime> EarliestRestorableTime { get; public set; }
    public List`1<string> EnabledCloudwatchLogsExports { get; public set; }
    public string Endpoint { get; public set; }
    public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineMode { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> GlobalWriteForwardingRequested { get; public set; }
    public WriteForwardingStatus GlobalWriteForwardingStatus { get; public set; }
    public string HostedZoneId { get; public set; }
    public Nullable`1<bool> HttpEndpointEnabled { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public Nullable`1<DateTime> IOOptimizedNextAllowedModificationTime { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<DateTime> LatestRestorableTime { get; public set; }
    public LimitlessDatabase LimitlessDatabase { get; public set; }
    public LocalWriteForwardingStatus LocalWriteForwardingStatus { get; public set; }
    public string MasterUsername { get; public set; }
    public MasterUserSecret MasterUserSecret { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public ClusterPendingModifiedValues PendingModifiedValues { get; public set; }
    public string PercentProgress { get; public set; }
    public Nullable`1<bool> PerformanceInsightsEnabled { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public RdsCustomClusterConfiguration RdsCustomClusterConfiguration { get; public set; }
    public string ReaderEndpoint { get; public set; }
    public List`1<string> ReadReplicaIdentifiers { get; public set; }
    public string ReplicationSourceIdentifier { get; public set; }
    public ScalingConfigurationInfo ScalingConfigurationInfo { get; public set; }
    public ServerlessV2ScalingConfigurationInfo ServerlessV2ScalingConfiguration { get; public set; }
    public string Status { get; public set; }
    public List`1<DBClusterStatusInfo> StatusInfos { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public List`1<VpcSecurityGroupMembership> VpcSecurityGroups { get; public set; }
    public string get_ActivityStreamKinesisStreamName();
    public void set_ActivityStreamKinesisStreamName(string value);
    internal bool IsSetActivityStreamKinesisStreamName();
    public string get_ActivityStreamKmsKeyId();
    public void set_ActivityStreamKmsKeyId(string value);
    internal bool IsSetActivityStreamKmsKeyId();
    public ActivityStreamMode get_ActivityStreamMode();
    public void set_ActivityStreamMode(ActivityStreamMode value);
    internal bool IsSetActivityStreamMode();
    public ActivityStreamStatus get_ActivityStreamStatus();
    public void set_ActivityStreamStatus(ActivityStreamStatus value);
    internal bool IsSetActivityStreamStatus();
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public List`1<DBClusterRole> get_AssociatedRoles();
    public void set_AssociatedRoles(List`1<DBClusterRole> value);
    internal bool IsSetAssociatedRoles();
    public Nullable`1<DateTime> get_AutomaticRestartTime();
    public void set_AutomaticRestartTime(Nullable`1<DateTime> value);
    internal bool IsSetAutomaticRestartTime();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public string get_AwsBackupRecoveryPointArn();
    public void set_AwsBackupRecoveryPointArn(string value);
    internal bool IsSetAwsBackupRecoveryPointArn();
    public Nullable`1<long> get_BacktrackConsumedChangeRecords();
    public void set_BacktrackConsumedChangeRecords(Nullable`1<long> value);
    internal bool IsSetBacktrackConsumedChangeRecords();
    public Nullable`1<long> get_BacktrackWindow();
    public void set_BacktrackWindow(Nullable`1<long> value);
    internal bool IsSetBacktrackWindow();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public Nullable`1<int> get_Capacity();
    public void set_Capacity(Nullable`1<int> value);
    internal bool IsSetCapacity();
    public CertificateDetails get_CertificateDetails();
    public void set_CertificateDetails(CertificateDetails value);
    internal bool IsSetCertificateDetails();
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public string get_CloneGroupId();
    public void set_CloneGroupId(string value);
    internal bool IsSetCloneGroupId();
    public Nullable`1<DateTime> get_ClusterCreateTime();
    public void set_ClusterCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetClusterCreateTime();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public Nullable`1<bool> get_CrossAccountClone();
    public void set_CrossAccountClone(Nullable`1<bool> value);
    internal bool IsSetCrossAccountClone();
    public List`1<string> get_CustomEndpoints();
    public void set_CustomEndpoints(List`1<string> value);
    internal bool IsSetCustomEndpoints();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DBClusterArn();
    public void set_DBClusterArn(string value);
    internal bool IsSetDBClusterArn();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBClusterInstanceClass();
    public void set_DBClusterInstanceClass(string value);
    internal bool IsSetDBClusterInstanceClass();
    public List`1<DBClusterMember> get_DBClusterMembers();
    public void set_DBClusterMembers(List`1<DBClusterMember> value);
    internal bool IsSetDBClusterMembers();
    public List`1<DBClusterOptionGroupStatus> get_DBClusterOptionGroupMemberships();
    public void set_DBClusterOptionGroupMemberships(List`1<DBClusterOptionGroupStatus> value);
    internal bool IsSetDBClusterOptionGroupMemberships();
    public string get_DBClusterParameterGroup();
    public void set_DBClusterParameterGroup(string value);
    internal bool IsSetDBClusterParameterGroup();
    public string get_DbClusterResourceId();
    public void set_DbClusterResourceId(string value);
    internal bool IsSetDbClusterResourceId();
    public string get_DBSubnetGroup();
    public void set_DBSubnetGroup(string value);
    internal bool IsSetDBSubnetGroup();
    public string get_DBSystemId();
    public void set_DBSystemId(string value);
    internal bool IsSetDBSystemId();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public List`1<DomainMembership> get_DomainMemberships();
    public void set_DomainMemberships(List`1<DomainMembership> value);
    internal bool IsSetDomainMemberships();
    public Nullable`1<DateTime> get_EarliestBacktrackTime();
    public void set_EarliestBacktrackTime(Nullable`1<DateTime> value);
    internal bool IsSetEarliestBacktrackTime();
    public Nullable`1<DateTime> get_EarliestRestorableTime();
    public void set_EarliestRestorableTime(Nullable`1<DateTime> value);
    internal bool IsSetEarliestRestorableTime();
    public List`1<string> get_EnabledCloudwatchLogsExports();
    public void set_EnabledCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnabledCloudwatchLogsExports();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineMode();
    public void set_EngineMode(string value);
    internal bool IsSetEngineMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_GlobalWriteForwardingRequested();
    public void set_GlobalWriteForwardingRequested(Nullable`1<bool> value);
    internal bool IsSetGlobalWriteForwardingRequested();
    public WriteForwardingStatus get_GlobalWriteForwardingStatus();
    public void set_GlobalWriteForwardingStatus(WriteForwardingStatus value);
    internal bool IsSetGlobalWriteForwardingStatus();
    public string get_HostedZoneId();
    public void set_HostedZoneId(string value);
    internal bool IsSetHostedZoneId();
    public Nullable`1<bool> get_HttpEndpointEnabled();
    public void set_HttpEndpointEnabled(Nullable`1<bool> value);
    internal bool IsSetHttpEndpointEnabled();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public Nullable`1<DateTime> get_IOOptimizedNextAllowedModificationTime();
    public void set_IOOptimizedNextAllowedModificationTime(Nullable`1<DateTime> value);
    internal bool IsSetIOOptimizedNextAllowedModificationTime();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<DateTime> get_LatestRestorableTime();
    public void set_LatestRestorableTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestRestorableTime();
    public LimitlessDatabase get_LimitlessDatabase();
    public void set_LimitlessDatabase(LimitlessDatabase value);
    internal bool IsSetLimitlessDatabase();
    public LocalWriteForwardingStatus get_LocalWriteForwardingStatus();
    public void set_LocalWriteForwardingStatus(LocalWriteForwardingStatus value);
    internal bool IsSetLocalWriteForwardingStatus();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public MasterUserSecret get_MasterUserSecret();
    public void set_MasterUserSecret(MasterUserSecret value);
    internal bool IsSetMasterUserSecret();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public ClusterPendingModifiedValues get_PendingModifiedValues();
    public void set_PendingModifiedValues(ClusterPendingModifiedValues value);
    internal bool IsSetPendingModifiedValues();
    public string get_PercentProgress();
    public void set_PercentProgress(string value);
    internal bool IsSetPercentProgress();
    public Nullable`1<bool> get_PerformanceInsightsEnabled();
    public void set_PerformanceInsightsEnabled(Nullable`1<bool> value);
    internal bool IsSetPerformanceInsightsEnabled();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public RdsCustomClusterConfiguration get_RdsCustomClusterConfiguration();
    public void set_RdsCustomClusterConfiguration(RdsCustomClusterConfiguration value);
    internal bool IsSetRdsCustomClusterConfiguration();
    public string get_ReaderEndpoint();
    public void set_ReaderEndpoint(string value);
    internal bool IsSetReaderEndpoint();
    public List`1<string> get_ReadReplicaIdentifiers();
    public void set_ReadReplicaIdentifiers(List`1<string> value);
    internal bool IsSetReadReplicaIdentifiers();
    public string get_ReplicationSourceIdentifier();
    public void set_ReplicationSourceIdentifier(string value);
    internal bool IsSetReplicationSourceIdentifier();
    public ScalingConfigurationInfo get_ScalingConfigurationInfo();
    public void set_ScalingConfigurationInfo(ScalingConfigurationInfo value);
    internal bool IsSetScalingConfigurationInfo();
    public ServerlessV2ScalingConfigurationInfo get_ServerlessV2ScalingConfiguration();
    public void set_ServerlessV2ScalingConfiguration(ServerlessV2ScalingConfigurationInfo value);
    internal bool IsSetServerlessV2ScalingConfiguration();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<DBClusterStatusInfo> get_StatusInfos();
    public void set_StatusInfos(List`1<DBClusterStatusInfo> value);
    internal bool IsSetStatusInfos();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public List`1<VpcSecurityGroupMembership> get_VpcSecurityGroups();
    public void set_VpcSecurityGroups(List`1<VpcSecurityGroupMembership> value);
    internal bool IsSetVpcSecurityGroups();
}
public class Amazon.RDS.Model.DBClusterAlreadyExistsException : AmazonRDSException {
    public DBClusterAlreadyExistsException(string message);
    public DBClusterAlreadyExistsException(string message, Exception innerException);
    public DBClusterAlreadyExistsException(Exception innerException);
    public DBClusterAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterAutomatedBackup : object {
    private Nullable`1<int> _allocatedStorage;
    private List`1<string> _availabilityZones;
    private string _awsBackupRecoveryPointArn;
    private Nullable`1<int> _backupRetentionPeriod;
    private Nullable`1<DateTime> _clusterCreateTime;
    private string _dbClusterArn;
    private string _dbClusterAutomatedBackupsArn;
    private string _dbClusterIdentifier;
    private string _dbClusterResourceId;
    private string _engine;
    private string _engineMode;
    private string _engineVersion;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _licenseModel;
    private string _masterUsername;
    private Nullable`1<int> _port;
    private string _region;
    private RestoreWindow _restoreWindow;
    private string _status;
    private Nullable`1<bool> _storageEncrypted;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private string _vpcId;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public string AwsBackupRecoveryPointArn { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public Nullable`1<DateTime> ClusterCreateTime { get; public set; }
    public string DBClusterArn { get; public set; }
    public string DBClusterAutomatedBackupsArn { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string DbClusterResourceId { get; public set; }
    public string Engine { get; public set; }
    public string EngineMode { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string LicenseModel { get; public set; }
    public string MasterUsername { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string Region { get; public set; }
    public RestoreWindow RestoreWindow { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public string get_AwsBackupRecoveryPointArn();
    public void set_AwsBackupRecoveryPointArn(string value);
    internal bool IsSetAwsBackupRecoveryPointArn();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public Nullable`1<DateTime> get_ClusterCreateTime();
    public void set_ClusterCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetClusterCreateTime();
    public string get_DBClusterArn();
    public void set_DBClusterArn(string value);
    internal bool IsSetDBClusterArn();
    public string get_DBClusterAutomatedBackupsArn();
    public void set_DBClusterAutomatedBackupsArn(string value);
    internal bool IsSetDBClusterAutomatedBackupsArn();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DbClusterResourceId();
    public void set_DbClusterResourceId(string value);
    internal bool IsSetDbClusterResourceId();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineMode();
    public void set_EngineMode(string value);
    internal bool IsSetEngineMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public RestoreWindow get_RestoreWindow();
    public void set_RestoreWindow(RestoreWindow value);
    internal bool IsSetRestoreWindow();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.RDS.Model.DBClusterAutomatedBackupNotFoundException : AmazonRDSException {
    public DBClusterAutomatedBackupNotFoundException(string message);
    public DBClusterAutomatedBackupNotFoundException(string message, Exception innerException);
    public DBClusterAutomatedBackupNotFoundException(Exception innerException);
    public DBClusterAutomatedBackupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterAutomatedBackupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterAutomatedBackupQuotaExceededException : AmazonRDSException {
    public DBClusterAutomatedBackupQuotaExceededException(string message);
    public DBClusterAutomatedBackupQuotaExceededException(string message, Exception innerException);
    public DBClusterAutomatedBackupQuotaExceededException(Exception innerException);
    public DBClusterAutomatedBackupQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterAutomatedBackupQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterBacktrack : object {
    private Nullable`1<DateTime> _backtrackedFrom;
    private string _backtrackIdentifier;
    private Nullable`1<DateTime> _backtrackRequestCreationTime;
    private Nullable`1<DateTime> _backtrackTo;
    private string _dbClusterIdentifier;
    private string _status;
    public Nullable`1<DateTime> BacktrackedFrom { get; public set; }
    public string BacktrackIdentifier { get; public set; }
    public Nullable`1<DateTime> BacktrackRequestCreationTime { get; public set; }
    public Nullable`1<DateTime> BacktrackTo { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<DateTime> get_BacktrackedFrom();
    public void set_BacktrackedFrom(Nullable`1<DateTime> value);
    internal bool IsSetBacktrackedFrom();
    public string get_BacktrackIdentifier();
    public void set_BacktrackIdentifier(string value);
    internal bool IsSetBacktrackIdentifier();
    public Nullable`1<DateTime> get_BacktrackRequestCreationTime();
    public void set_BacktrackRequestCreationTime(Nullable`1<DateTime> value);
    internal bool IsSetBacktrackRequestCreationTime();
    public Nullable`1<DateTime> get_BacktrackTo();
    public void set_BacktrackTo(Nullable`1<DateTime> value);
    internal bool IsSetBacktrackTo();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DBClusterBacktrackNotFoundException : AmazonRDSException {
    public DBClusterBacktrackNotFoundException(string message);
    public DBClusterBacktrackNotFoundException(string message, Exception innerException);
    public DBClusterBacktrackNotFoundException(Exception innerException);
    public DBClusterBacktrackNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterBacktrackNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterEndpoint : object {
    private string _customEndpointType;
    private string _dbClusterEndpointArn;
    private string _dbClusterEndpointIdentifier;
    private string _dbClusterEndpointResourceIdentifier;
    private string _dbClusterIdentifier;
    private string _endpoint;
    private string _endpointType;
    private List`1<string> _excludedMembers;
    private List`1<string> _staticMembers;
    private string _status;
    public string CustomEndpointType { get; public set; }
    public string DBClusterEndpointArn { get; public set; }
    public string DBClusterEndpointIdentifier { get; public set; }
    public string DBClusterEndpointResourceIdentifier { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string Endpoint { get; public set; }
    public string EndpointType { get; public set; }
    public List`1<string> ExcludedMembers { get; public set; }
    public List`1<string> StaticMembers { get; public set; }
    public string Status { get; public set; }
    public string get_CustomEndpointType();
    public void set_CustomEndpointType(string value);
    internal bool IsSetCustomEndpointType();
    public string get_DBClusterEndpointArn();
    public void set_DBClusterEndpointArn(string value);
    internal bool IsSetDBClusterEndpointArn();
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
    public string get_DBClusterEndpointResourceIdentifier();
    public void set_DBClusterEndpointResourceIdentifier(string value);
    internal bool IsSetDBClusterEndpointResourceIdentifier();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_EndpointType();
    public void set_EndpointType(string value);
    internal bool IsSetEndpointType();
    public List`1<string> get_ExcludedMembers();
    public void set_ExcludedMembers(List`1<string> value);
    internal bool IsSetExcludedMembers();
    public List`1<string> get_StaticMembers();
    public void set_StaticMembers(List`1<string> value);
    internal bool IsSetStaticMembers();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DBClusterEndpointAlreadyExistsException : AmazonRDSException {
    public DBClusterEndpointAlreadyExistsException(string message);
    public DBClusterEndpointAlreadyExistsException(string message, Exception innerException);
    public DBClusterEndpointAlreadyExistsException(Exception innerException);
    public DBClusterEndpointAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterEndpointAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterEndpointNotFoundException : AmazonRDSException {
    public DBClusterEndpointNotFoundException(string message);
    public DBClusterEndpointNotFoundException(string message, Exception innerException);
    public DBClusterEndpointNotFoundException(Exception innerException);
    public DBClusterEndpointNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterEndpointNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterEndpointQuotaExceededException : AmazonRDSException {
    public DBClusterEndpointQuotaExceededException(string message);
    public DBClusterEndpointQuotaExceededException(string message, Exception innerException);
    public DBClusterEndpointQuotaExceededException(Exception innerException);
    public DBClusterEndpointQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterEndpointQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterMember : object {
    private string _dbClusterParameterGroupStatus;
    private string _dbInstanceIdentifier;
    private Nullable`1<bool> _isClusterWriter;
    private Nullable`1<int> _promotionTier;
    public string DBClusterParameterGroupStatus { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public Nullable`1<bool> IsClusterWriter { get; public set; }
    public Nullable`1<int> PromotionTier { get; public set; }
    public string get_DBClusterParameterGroupStatus();
    public void set_DBClusterParameterGroupStatus(string value);
    internal bool IsSetDBClusterParameterGroupStatus();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public Nullable`1<bool> get_IsClusterWriter();
    public void set_IsClusterWriter(Nullable`1<bool> value);
    internal bool IsSetIsClusterWriter();
    public Nullable`1<int> get_PromotionTier();
    public void set_PromotionTier(Nullable`1<int> value);
    internal bool IsSetPromotionTier();
}
public class Amazon.RDS.Model.DBClusterNotFoundException : AmazonRDSException {
    public DBClusterNotFoundException(string message);
    public DBClusterNotFoundException(string message, Exception innerException);
    public DBClusterNotFoundException(Exception innerException);
    public DBClusterNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterOptionGroupStatus : object {
    private string _dbClusterOptionGroupName;
    private string _status;
    public string DBClusterOptionGroupName { get; public set; }
    public string Status { get; public set; }
    public string get_DBClusterOptionGroupName();
    public void set_DBClusterOptionGroupName(string value);
    internal bool IsSetDBClusterOptionGroupName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DBClusterParameterGroup : object {
    private string _dbClusterParameterGroupArn;
    private string _dbClusterParameterGroupName;
    private string _dbParameterGroupFamily;
    private string _description;
    public string DBClusterParameterGroupArn { get; public set; }
    public string DBClusterParameterGroupName { get; public set; }
    public string DBParameterGroupFamily { get; public set; }
    public string Description { get; public set; }
    public string get_DBClusterParameterGroupArn();
    public void set_DBClusterParameterGroupArn(string value);
    internal bool IsSetDBClusterParameterGroupArn();
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.RDS.Model.DBClusterParameterGroupNotFoundException : AmazonRDSException {
    public DBClusterParameterGroupNotFoundException(string message);
    public DBClusterParameterGroupNotFoundException(string message, Exception innerException);
    public DBClusterParameterGroupNotFoundException(Exception innerException);
    public DBClusterParameterGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterParameterGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterQuotaExceededException : AmazonRDSException {
    public DBClusterQuotaExceededException(string message);
    public DBClusterQuotaExceededException(string message, Exception innerException);
    public DBClusterQuotaExceededException(Exception innerException);
    public DBClusterQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterRole : object {
    private string _featureName;
    private string _roleArn;
    private string _status;
    public string FeatureName { get; public set; }
    public string RoleArn { get; public set; }
    public string Status { get; public set; }
    public string get_FeatureName();
    public void set_FeatureName(string value);
    internal bool IsSetFeatureName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DBClusterRoleAlreadyExistsException : AmazonRDSException {
    public DBClusterRoleAlreadyExistsException(string message);
    public DBClusterRoleAlreadyExistsException(string message, Exception innerException);
    public DBClusterRoleAlreadyExistsException(Exception innerException);
    public DBClusterRoleAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterRoleAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterRoleNotFoundException : AmazonRDSException {
    public DBClusterRoleNotFoundException(string message);
    public DBClusterRoleNotFoundException(string message, Exception innerException);
    public DBClusterRoleNotFoundException(Exception innerException);
    public DBClusterRoleNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterRoleNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterRoleQuotaExceededException : AmazonRDSException {
    public DBClusterRoleQuotaExceededException(string message);
    public DBClusterRoleQuotaExceededException(string message, Exception innerException);
    public DBClusterRoleQuotaExceededException(Exception innerException);
    public DBClusterRoleQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterRoleQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterSnapshot : object {
    private Nullable`1<int> _allocatedStorage;
    private List`1<string> _availabilityZones;
    private Nullable`1<DateTime> _clusterCreateTime;
    private string _dbClusterIdentifier;
    private string _dbClusterResourceId;
    private string _dbClusterSnapshotArn;
    private string _dbClusterSnapshotIdentifier;
    private string _dbSystemId;
    private string _engine;
    private string _engineMode;
    private string _engineVersion;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private string _kmsKeyId;
    private string _licenseModel;
    private string _masterUsername;
    private Nullable`1<int> _percentProgress;
    private Nullable`1<int> _port;
    private Nullable`1<DateTime> _snapshotCreateTime;
    private string _snapshotType;
    private string _sourceDBClusterSnapshotArn;
    private string _status;
    private Nullable`1<bool> _storageEncrypted;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tagList;
    private string _vpcId;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public Nullable`1<DateTime> ClusterCreateTime { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string DbClusterResourceId { get; public set; }
    public string DBClusterSnapshotArn { get; public set; }
    public string DBClusterSnapshotIdentifier { get; public set; }
    public string DBSystemId { get; public set; }
    public string Engine { get; public set; }
    public string EngineMode { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public string KmsKeyId { get; public set; }
    public string LicenseModel { get; public set; }
    public string MasterUsername { get; public set; }
    public Nullable`1<int> PercentProgress { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<DateTime> SnapshotCreateTime { get; public set; }
    public string SnapshotType { get; public set; }
    public string SourceDBClusterSnapshotArn { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public Nullable`1<DateTime> get_ClusterCreateTime();
    public void set_ClusterCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetClusterCreateTime();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DbClusterResourceId();
    public void set_DbClusterResourceId(string value);
    internal bool IsSetDbClusterResourceId();
    public string get_DBClusterSnapshotArn();
    public void set_DBClusterSnapshotArn(string value);
    internal bool IsSetDBClusterSnapshotArn();
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
    public string get_DBSystemId();
    public void set_DBSystemId(string value);
    internal bool IsSetDBSystemId();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineMode();
    public void set_EngineMode(string value);
    internal bool IsSetEngineMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public Nullable`1<int> get_PercentProgress();
    public void set_PercentProgress(Nullable`1<int> value);
    internal bool IsSetPercentProgress();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<DateTime> get_SnapshotCreateTime();
    public void set_SnapshotCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetSnapshotCreateTime();
    public string get_SnapshotType();
    public void set_SnapshotType(string value);
    internal bool IsSetSnapshotType();
    public string get_SourceDBClusterSnapshotArn();
    public void set_SourceDBClusterSnapshotArn(string value);
    internal bool IsSetSourceDBClusterSnapshotArn();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.RDS.Model.DBClusterSnapshotAlreadyExistsException : AmazonRDSException {
    public DBClusterSnapshotAlreadyExistsException(string message);
    public DBClusterSnapshotAlreadyExistsException(string message, Exception innerException);
    public DBClusterSnapshotAlreadyExistsException(Exception innerException);
    public DBClusterSnapshotAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterSnapshotAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterSnapshotAttribute : object {
    private string _attributeName;
    private List`1<string> _attributeValues;
    public string AttributeName { get; public set; }
    public List`1<string> AttributeValues { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public List`1<string> get_AttributeValues();
    public void set_AttributeValues(List`1<string> value);
    internal bool IsSetAttributeValues();
}
public class Amazon.RDS.Model.DBClusterSnapshotAttributesResult : object {
    private List`1<DBClusterSnapshotAttribute> _dbClusterSnapshotAttributes;
    private string _dbClusterSnapshotIdentifier;
    public List`1<DBClusterSnapshotAttribute> DBClusterSnapshotAttributes { get; public set; }
    public string DBClusterSnapshotIdentifier { get; public set; }
    public List`1<DBClusterSnapshotAttribute> get_DBClusterSnapshotAttributes();
    public void set_DBClusterSnapshotAttributes(List`1<DBClusterSnapshotAttribute> value);
    internal bool IsSetDBClusterSnapshotAttributes();
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
}
public class Amazon.RDS.Model.DBClusterSnapshotNotFoundException : AmazonRDSException {
    public DBClusterSnapshotNotFoundException(string message);
    public DBClusterSnapshotNotFoundException(string message, Exception innerException);
    public DBClusterSnapshotNotFoundException(Exception innerException);
    public DBClusterSnapshotNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBClusterSnapshotNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBClusterStatusInfo : object {
    private string _message;
    private Nullable`1<bool> _normal;
    private string _status;
    private string _statusType;
    public string Message { get; public set; }
    public Nullable`1<bool> Normal { get; public set; }
    public string Status { get; public set; }
    public string StatusType { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<bool> get_Normal();
    public void set_Normal(Nullable`1<bool> value);
    internal bool IsSetNormal();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusType();
    public void set_StatusType(string value);
    internal bool IsSetStatusType();
}
public class Amazon.RDS.Model.DBEngineVersion : object {
    private Nullable`1<DateTime> _createTime;
    private string _customDBEngineVersionManifest;
    private string _databaseInstallationFilesS3BucketName;
    private string _databaseInstallationFilesS3Prefix;
    private string _dbEngineDescription;
    private string _dbEngineMediaType;
    private string _dbEngineVersionArn;
    private string _dbEngineVersionDescription;
    private string _dbParameterGroupFamily;
    private CharacterSet _defaultCharacterSet;
    private string _engine;
    private string _engineVersion;
    private List`1<string> _exportableLogTypes;
    private CustomDBEngineVersionAMI _image;
    private string _kmsKeyId;
    private string _majorEngineVersion;
    private string _status;
    private List`1<string> _supportedCACertificateIdentifiers;
    private List`1<CharacterSet> _supportedCharacterSets;
    private List`1<string> _supportedEngineModes;
    private List`1<string> _supportedFeatureNames;
    private List`1<CharacterSet> _supportedNcharCharacterSets;
    private List`1<Timezone> _supportedTimezones;
    private Nullable`1<bool> _supportsBabelfish;
    private Nullable`1<bool> _supportsCertificateRotationWithoutRestart;
    private Nullable`1<bool> _supportsGlobalDatabases;
    private Nullable`1<bool> _supportsIntegrations;
    private Nullable`1<bool> _supportsLimitlessDatabase;
    private Nullable`1<bool> _supportsLocalWriteForwarding;
    private Nullable`1<bool> _supportsLogExportsToCloudwatchLogs;
    private Nullable`1<bool> _supportsParallelQuery;
    private Nullable`1<bool> _supportsReadReplica;
    private List`1<Tag> _tagList;
    private List`1<UpgradeTarget> _validUpgradeTarget;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string CustomDBEngineVersionManifest { get; public set; }
    public string DatabaseInstallationFilesS3BucketName { get; public set; }
    public string DatabaseInstallationFilesS3Prefix { get; public set; }
    public string DBEngineDescription { get; public set; }
    public string DBEngineMediaType { get; public set; }
    public string DBEngineVersionArn { get; public set; }
    public string DBEngineVersionDescription { get; public set; }
    public string DBParameterGroupFamily { get; public set; }
    public CharacterSet DefaultCharacterSet { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public List`1<string> ExportableLogTypes { get; public set; }
    public CustomDBEngineVersionAMI Image { get; public set; }
    public string KMSKeyId { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string Status { get; public set; }
    public List`1<string> SupportedCACertificateIdentifiers { get; public set; }
    public List`1<CharacterSet> SupportedCharacterSets { get; public set; }
    public List`1<string> SupportedEngineModes { get; public set; }
    public List`1<string> SupportedFeatureNames { get; public set; }
    public List`1<CharacterSet> SupportedNcharCharacterSets { get; public set; }
    public List`1<Timezone> SupportedTimezones { get; public set; }
    public Nullable`1<bool> SupportsBabelfish { get; public set; }
    public Nullable`1<bool> SupportsCertificateRotationWithoutRestart { get; public set; }
    public Nullable`1<bool> SupportsGlobalDatabases { get; public set; }
    public Nullable`1<bool> SupportsIntegrations { get; public set; }
    public Nullable`1<bool> SupportsLimitlessDatabase { get; public set; }
    public Nullable`1<bool> SupportsLocalWriteForwarding { get; public set; }
    public Nullable`1<bool> SupportsLogExportsToCloudwatchLogs { get; public set; }
    public Nullable`1<bool> SupportsParallelQuery { get; public set; }
    public Nullable`1<bool> SupportsReadReplica { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public List`1<UpgradeTarget> ValidUpgradeTarget { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_CustomDBEngineVersionManifest();
    public void set_CustomDBEngineVersionManifest(string value);
    internal bool IsSetCustomDBEngineVersionManifest();
    public string get_DatabaseInstallationFilesS3BucketName();
    public void set_DatabaseInstallationFilesS3BucketName(string value);
    internal bool IsSetDatabaseInstallationFilesS3BucketName();
    public string get_DatabaseInstallationFilesS3Prefix();
    public void set_DatabaseInstallationFilesS3Prefix(string value);
    internal bool IsSetDatabaseInstallationFilesS3Prefix();
    public string get_DBEngineDescription();
    public void set_DBEngineDescription(string value);
    internal bool IsSetDBEngineDescription();
    public string get_DBEngineMediaType();
    public void set_DBEngineMediaType(string value);
    internal bool IsSetDBEngineMediaType();
    public string get_DBEngineVersionArn();
    public void set_DBEngineVersionArn(string value);
    internal bool IsSetDBEngineVersionArn();
    public string get_DBEngineVersionDescription();
    public void set_DBEngineVersionDescription(string value);
    internal bool IsSetDBEngineVersionDescription();
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public CharacterSet get_DefaultCharacterSet();
    public void set_DefaultCharacterSet(CharacterSet value);
    internal bool IsSetDefaultCharacterSet();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public List`1<string> get_ExportableLogTypes();
    public void set_ExportableLogTypes(List`1<string> value);
    internal bool IsSetExportableLogTypes();
    public CustomDBEngineVersionAMI get_Image();
    public void set_Image(CustomDBEngineVersionAMI value);
    internal bool IsSetImage();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<string> get_SupportedCACertificateIdentifiers();
    public void set_SupportedCACertificateIdentifiers(List`1<string> value);
    internal bool IsSetSupportedCACertificateIdentifiers();
    public List`1<CharacterSet> get_SupportedCharacterSets();
    public void set_SupportedCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedCharacterSets();
    public List`1<string> get_SupportedEngineModes();
    public void set_SupportedEngineModes(List`1<string> value);
    internal bool IsSetSupportedEngineModes();
    public List`1<string> get_SupportedFeatureNames();
    public void set_SupportedFeatureNames(List`1<string> value);
    internal bool IsSetSupportedFeatureNames();
    public List`1<CharacterSet> get_SupportedNcharCharacterSets();
    public void set_SupportedNcharCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedNcharCharacterSets();
    public List`1<Timezone> get_SupportedTimezones();
    public void set_SupportedTimezones(List`1<Timezone> value);
    internal bool IsSetSupportedTimezones();
    public Nullable`1<bool> get_SupportsBabelfish();
    public void set_SupportsBabelfish(Nullable`1<bool> value);
    internal bool IsSetSupportsBabelfish();
    public Nullable`1<bool> get_SupportsCertificateRotationWithoutRestart();
    public void set_SupportsCertificateRotationWithoutRestart(Nullable`1<bool> value);
    internal bool IsSetSupportsCertificateRotationWithoutRestart();
    public Nullable`1<bool> get_SupportsGlobalDatabases();
    public void set_SupportsGlobalDatabases(Nullable`1<bool> value);
    internal bool IsSetSupportsGlobalDatabases();
    public Nullable`1<bool> get_SupportsIntegrations();
    public void set_SupportsIntegrations(Nullable`1<bool> value);
    internal bool IsSetSupportsIntegrations();
    public Nullable`1<bool> get_SupportsLimitlessDatabase();
    public void set_SupportsLimitlessDatabase(Nullable`1<bool> value);
    internal bool IsSetSupportsLimitlessDatabase();
    public Nullable`1<bool> get_SupportsLocalWriteForwarding();
    public void set_SupportsLocalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetSupportsLocalWriteForwarding();
    public Nullable`1<bool> get_SupportsLogExportsToCloudwatchLogs();
    public void set_SupportsLogExportsToCloudwatchLogs(Nullable`1<bool> value);
    internal bool IsSetSupportsLogExportsToCloudwatchLogs();
    public Nullable`1<bool> get_SupportsParallelQuery();
    public void set_SupportsParallelQuery(Nullable`1<bool> value);
    internal bool IsSetSupportsParallelQuery();
    public Nullable`1<bool> get_SupportsReadReplica();
    public void set_SupportsReadReplica(Nullable`1<bool> value);
    internal bool IsSetSupportsReadReplica();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public List`1<UpgradeTarget> get_ValidUpgradeTarget();
    public void set_ValidUpgradeTarget(List`1<UpgradeTarget> value);
    internal bool IsSetValidUpgradeTarget();
}
public class Amazon.RDS.Model.DBInstance : object {
    private Nullable`1<bool> _activityStreamEngineNativeAuditFieldsIncluded;
    private string _activityStreamKinesisStreamName;
    private string _activityStreamKmsKeyId;
    private ActivityStreamMode _activityStreamMode;
    private ActivityStreamPolicyStatus _activityStreamPolicyStatus;
    private ActivityStreamStatus _activityStreamStatus;
    private Nullable`1<int> _allocatedStorage;
    private List`1<DBInstanceRole> _associatedRoles;
    private Nullable`1<DateTime> _automaticRestartTime;
    private AutomationMode _automationMode;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private string _awsBackupRecoveryPointArn;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _backupTarget;
    private string _caCertificateIdentifier;
    private CertificateDetails _certificateDetails;
    private string _characterSetName;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private Nullable`1<bool> _customerOwnedIpEnabled;
    private string _customIamInstanceProfile;
    private string _dbClusterIdentifier;
    private string _dbInstanceArn;
    private List`1<DBInstanceAutomatedBackupsReplication> _dbInstanceAutomatedBackupsReplications;
    private string _dbInstanceClass;
    private string _dbInstanceIdentifier;
    private Nullable`1<int> _dbInstancePort;
    private string _dbInstanceStatus;
    private string _dbiResourceId;
    private string _dbName;
    private List`1<DBParameterGroupStatus> _dbParameterGroups;
    private List`1<DBSecurityGroupMembership> _dbSecurityGroups;
    private DBSubnetGroup _dbSubnetGroup;
    private string _dbSystemId;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _deletionProtection;
    private List`1<DomainMembership> _domainMemberships;
    private List`1<string> _enabledCloudwatchLogsExports;
    private Endpoint _endpoint;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineVersion;
    private string _enhancedMonitoringResourceArn;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private Nullable`1<DateTime> _instanceCreateTime;
    private Nullable`1<int> _iops;
    private Nullable`1<bool> _isStorageConfigUpgradeAvailable;
    private string _kmsKeyId;
    private Nullable`1<DateTime> _latestRestorableTime;
    private string _licenseModel;
    private Endpoint _listenerEndpoint;
    private string _masterUsername;
    private MasterUserSecret _masterUserSecret;
    private Nullable`1<int> _maxAllocatedStorage;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private Nullable`1<bool> _multiAZ;
    private Nullable`1<bool> _multiTenant;
    private string _ncharCharacterSetName;
    private string _networkType;
    private List`1<OptionGroupMembership> _optionGroupMemberships;
    private PendingModifiedValues _pendingModifiedValues;
    private string _percentProgress;
    private Nullable`1<bool> _performanceInsightsEnabled;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<int> _promotionTier;
    private Nullable`1<bool> _publiclyAccessible;
    private List`1<string> _readReplicaDBClusterIdentifiers;
    private List`1<string> _readReplicaDBInstanceIdentifiers;
    private string _readReplicaSourceDBClusterIdentifier;
    private string _readReplicaSourceDBInstanceIdentifier;
    private ReplicaMode _replicaMode;
    private Nullable`1<DateTime> _resumeFullAutomationModeTime;
    private string _secondaryAvailabilityZone;
    private List`1<DBInstanceStatusInfo> _statusInfos;
    private Nullable`1<bool> _storageEncrypted;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tagList;
    private string _tdeCredentialArn;
    private string _timezone;
    private List`1<VpcSecurityGroupMembership> _vpcSecurityGroups;
    public Nullable`1<bool> ActivityStreamEngineNativeAuditFieldsIncluded { get; public set; }
    public string ActivityStreamKinesisStreamName { get; public set; }
    public string ActivityStreamKmsKeyId { get; public set; }
    public ActivityStreamMode ActivityStreamMode { get; public set; }
    public ActivityStreamPolicyStatus ActivityStreamPolicyStatus { get; public set; }
    public ActivityStreamStatus ActivityStreamStatus { get; public set; }
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public List`1<DBInstanceRole> AssociatedRoles { get; public set; }
    public Nullable`1<DateTime> AutomaticRestartTime { get; public set; }
    public AutomationMode AutomationMode { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string AwsBackupRecoveryPointArn { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string BackupTarget { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public CertificateDetails CertificateDetails { get; public set; }
    public string CharacterSetName { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public Nullable`1<bool> CustomerOwnedIpEnabled { get; public set; }
    public string CustomIamInstanceProfile { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string DBInstanceArn { get; public set; }
    public List`1<DBInstanceAutomatedBackupsReplication> DBInstanceAutomatedBackupsReplications { get; public set; }
    public string DBInstanceClass { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public Nullable`1<int> DbInstancePort { get; public set; }
    public string DBInstanceStatus { get; public set; }
    public string DbiResourceId { get; public set; }
    public string DBName { get; public set; }
    public List`1<DBParameterGroupStatus> DBParameterGroups { get; public set; }
    public List`1<DBSecurityGroupMembership> DBSecurityGroups { get; public set; }
    public DBSubnetGroup DBSubnetGroup { get; public set; }
    public string DBSystemId { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public List`1<DomainMembership> DomainMemberships { get; public set; }
    public List`1<string> EnabledCloudwatchLogsExports { get; public set; }
    public Endpoint Endpoint { get; public set; }
    public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineVersion { get; public set; }
    public string EnhancedMonitoringResourceArn { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public Nullable`1<DateTime> InstanceCreateTime { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public Nullable`1<bool> IsStorageConfigUpgradeAvailable { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<DateTime> LatestRestorableTime { get; public set; }
    public string LicenseModel { get; public set; }
    public Endpoint ListenerEndpoint { get; public set; }
    public string MasterUsername { get; public set; }
    public MasterUserSecret MasterUserSecret { get; public set; }
    public Nullable`1<int> MaxAllocatedStorage { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public Nullable`1<bool> MultiTenant { get; public set; }
    public string NcharCharacterSetName { get; public set; }
    public string NetworkType { get; public set; }
    public List`1<OptionGroupMembership> OptionGroupMemberships { get; public set; }
    public PendingModifiedValues PendingModifiedValues { get; public set; }
    public string PercentProgress { get; public set; }
    public Nullable`1<bool> PerformanceInsightsEnabled { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<int> PromotionTier { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public List`1<string> ReadReplicaDBClusterIdentifiers { get; public set; }
    public List`1<string> ReadReplicaDBInstanceIdentifiers { get; public set; }
    public string ReadReplicaSourceDBClusterIdentifier { get; public set; }
    public string ReadReplicaSourceDBInstanceIdentifier { get; public set; }
    public ReplicaMode ReplicaMode { get; public set; }
    public Nullable`1<DateTime> ResumeFullAutomationModeTime { get; public set; }
    public string SecondaryAvailabilityZone { get; public set; }
    public List`1<DBInstanceStatusInfo> StatusInfos { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public string TdeCredentialArn { get; public set; }
    public string Timezone { get; public set; }
    public List`1<VpcSecurityGroupMembership> VpcSecurityGroups { get; public set; }
    public Nullable`1<bool> get_ActivityStreamEngineNativeAuditFieldsIncluded();
    public void set_ActivityStreamEngineNativeAuditFieldsIncluded(Nullable`1<bool> value);
    internal bool IsSetActivityStreamEngineNativeAuditFieldsIncluded();
    public string get_ActivityStreamKinesisStreamName();
    public void set_ActivityStreamKinesisStreamName(string value);
    internal bool IsSetActivityStreamKinesisStreamName();
    public string get_ActivityStreamKmsKeyId();
    public void set_ActivityStreamKmsKeyId(string value);
    internal bool IsSetActivityStreamKmsKeyId();
    public ActivityStreamMode get_ActivityStreamMode();
    public void set_ActivityStreamMode(ActivityStreamMode value);
    internal bool IsSetActivityStreamMode();
    public ActivityStreamPolicyStatus get_ActivityStreamPolicyStatus();
    public void set_ActivityStreamPolicyStatus(ActivityStreamPolicyStatus value);
    internal bool IsSetActivityStreamPolicyStatus();
    public ActivityStreamStatus get_ActivityStreamStatus();
    public void set_ActivityStreamStatus(ActivityStreamStatus value);
    internal bool IsSetActivityStreamStatus();
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public List`1<DBInstanceRole> get_AssociatedRoles();
    public void set_AssociatedRoles(List`1<DBInstanceRole> value);
    internal bool IsSetAssociatedRoles();
    public Nullable`1<DateTime> get_AutomaticRestartTime();
    public void set_AutomaticRestartTime(Nullable`1<DateTime> value);
    internal bool IsSetAutomaticRestartTime();
    public AutomationMode get_AutomationMode();
    public void set_AutomationMode(AutomationMode value);
    internal bool IsSetAutomationMode();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AwsBackupRecoveryPointArn();
    public void set_AwsBackupRecoveryPointArn(string value);
    internal bool IsSetAwsBackupRecoveryPointArn();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_BackupTarget();
    public void set_BackupTarget(string value);
    internal bool IsSetBackupTarget();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public CertificateDetails get_CertificateDetails();
    public void set_CertificateDetails(CertificateDetails value);
    internal bool IsSetCertificateDetails();
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public Nullable`1<bool> get_CustomerOwnedIpEnabled();
    public void set_CustomerOwnedIpEnabled(Nullable`1<bool> value);
    internal bool IsSetCustomerOwnedIpEnabled();
    public string get_CustomIamInstanceProfile();
    public void set_CustomIamInstanceProfile(string value);
    internal bool IsSetCustomIamInstanceProfile();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBInstanceArn();
    public void set_DBInstanceArn(string value);
    internal bool IsSetDBInstanceArn();
    public List`1<DBInstanceAutomatedBackupsReplication> get_DBInstanceAutomatedBackupsReplications();
    public void set_DBInstanceAutomatedBackupsReplications(List`1<DBInstanceAutomatedBackupsReplication> value);
    internal bool IsSetDBInstanceAutomatedBackupsReplications();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public Nullable`1<int> get_DbInstancePort();
    public void set_DbInstancePort(Nullable`1<int> value);
    internal bool IsSetDbInstancePort();
    public string get_DBInstanceStatus();
    public void set_DBInstanceStatus(string value);
    internal bool IsSetDBInstanceStatus();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public string get_DBName();
    public void set_DBName(string value);
    internal bool IsSetDBName();
    public List`1<DBParameterGroupStatus> get_DBParameterGroups();
    public void set_DBParameterGroups(List`1<DBParameterGroupStatus> value);
    internal bool IsSetDBParameterGroups();
    public List`1<DBSecurityGroupMembership> get_DBSecurityGroups();
    public void set_DBSecurityGroups(List`1<DBSecurityGroupMembership> value);
    internal bool IsSetDBSecurityGroups();
    public DBSubnetGroup get_DBSubnetGroup();
    public void set_DBSubnetGroup(DBSubnetGroup value);
    internal bool IsSetDBSubnetGroup();
    public string get_DBSystemId();
    public void set_DBSystemId(string value);
    internal bool IsSetDBSystemId();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public List`1<DomainMembership> get_DomainMemberships();
    public void set_DomainMemberships(List`1<DomainMembership> value);
    internal bool IsSetDomainMemberships();
    public List`1<string> get_EnabledCloudwatchLogsExports();
    public void set_EnabledCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnabledCloudwatchLogsExports();
    public Endpoint get_Endpoint();
    public void set_Endpoint(Endpoint value);
    internal bool IsSetEndpoint();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_EnhancedMonitoringResourceArn();
    public void set_EnhancedMonitoringResourceArn(string value);
    internal bool IsSetEnhancedMonitoringResourceArn();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public Nullable`1<DateTime> get_InstanceCreateTime();
    public void set_InstanceCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetInstanceCreateTime();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public Nullable`1<bool> get_IsStorageConfigUpgradeAvailable();
    public void set_IsStorageConfigUpgradeAvailable(Nullable`1<bool> value);
    internal bool IsSetIsStorageConfigUpgradeAvailable();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<DateTime> get_LatestRestorableTime();
    public void set_LatestRestorableTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestRestorableTime();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public Endpoint get_ListenerEndpoint();
    public void set_ListenerEndpoint(Endpoint value);
    internal bool IsSetListenerEndpoint();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public MasterUserSecret get_MasterUserSecret();
    public void set_MasterUserSecret(MasterUserSecret value);
    internal bool IsSetMasterUserSecret();
    public Nullable`1<int> get_MaxAllocatedStorage();
    public void set_MaxAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMaxAllocatedStorage();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public Nullable`1<bool> get_MultiTenant();
    public void set_MultiTenant(Nullable`1<bool> value);
    internal bool IsSetMultiTenant();
    public string get_NcharCharacterSetName();
    public void set_NcharCharacterSetName(string value);
    internal bool IsSetNcharCharacterSetName();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public List`1<OptionGroupMembership> get_OptionGroupMemberships();
    public void set_OptionGroupMemberships(List`1<OptionGroupMembership> value);
    internal bool IsSetOptionGroupMemberships();
    public PendingModifiedValues get_PendingModifiedValues();
    public void set_PendingModifiedValues(PendingModifiedValues value);
    internal bool IsSetPendingModifiedValues();
    public string get_PercentProgress();
    public void set_PercentProgress(string value);
    internal bool IsSetPercentProgress();
    public Nullable`1<bool> get_PerformanceInsightsEnabled();
    public void set_PerformanceInsightsEnabled(Nullable`1<bool> value);
    internal bool IsSetPerformanceInsightsEnabled();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<int> get_PromotionTier();
    public void set_PromotionTier(Nullable`1<int> value);
    internal bool IsSetPromotionTier();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public List`1<string> get_ReadReplicaDBClusterIdentifiers();
    public void set_ReadReplicaDBClusterIdentifiers(List`1<string> value);
    internal bool IsSetReadReplicaDBClusterIdentifiers();
    public List`1<string> get_ReadReplicaDBInstanceIdentifiers();
    public void set_ReadReplicaDBInstanceIdentifiers(List`1<string> value);
    internal bool IsSetReadReplicaDBInstanceIdentifiers();
    public string get_ReadReplicaSourceDBClusterIdentifier();
    public void set_ReadReplicaSourceDBClusterIdentifier(string value);
    internal bool IsSetReadReplicaSourceDBClusterIdentifier();
    public string get_ReadReplicaSourceDBInstanceIdentifier();
    public void set_ReadReplicaSourceDBInstanceIdentifier(string value);
    internal bool IsSetReadReplicaSourceDBInstanceIdentifier();
    public ReplicaMode get_ReplicaMode();
    public void set_ReplicaMode(ReplicaMode value);
    internal bool IsSetReplicaMode();
    public Nullable`1<DateTime> get_ResumeFullAutomationModeTime();
    public void set_ResumeFullAutomationModeTime(Nullable`1<DateTime> value);
    internal bool IsSetResumeFullAutomationModeTime();
    public string get_SecondaryAvailabilityZone();
    public void set_SecondaryAvailabilityZone(string value);
    internal bool IsSetSecondaryAvailabilityZone();
    public List`1<DBInstanceStatusInfo> get_StatusInfos();
    public void set_StatusInfos(List`1<DBInstanceStatusInfo> value);
    internal bool IsSetStatusInfos();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public string get_TdeCredentialArn();
    public void set_TdeCredentialArn(string value);
    internal bool IsSetTdeCredentialArn();
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
    public List`1<VpcSecurityGroupMembership> get_VpcSecurityGroups();
    public void set_VpcSecurityGroups(List`1<VpcSecurityGroupMembership> value);
    internal bool IsSetVpcSecurityGroups();
}
public class Amazon.RDS.Model.DBInstanceAlreadyExistsException : AmazonRDSException {
    public DBInstanceAlreadyExistsException(string message);
    public DBInstanceAlreadyExistsException(string message, Exception innerException);
    public DBInstanceAlreadyExistsException(Exception innerException);
    public DBInstanceAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBInstanceAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBInstanceAutomatedBackup : object {
    private Nullable`1<int> _allocatedStorage;
    private string _availabilityZone;
    private string _awsBackupRecoveryPointArn;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _backupTarget;
    private string _dbInstanceArn;
    private string _dbInstanceAutomatedBackupsArn;
    private List`1<DBInstanceAutomatedBackupsReplication> _dbInstanceAutomatedBackupsReplications;
    private string _dbInstanceIdentifier;
    private string _dbiResourceId;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _encrypted;
    private string _engine;
    private string _engineVersion;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private Nullable`1<DateTime> _instanceCreateTime;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _licenseModel;
    private string _masterUsername;
    private Nullable`1<bool> _multiTenant;
    private string _optionGroupName;
    private Nullable`1<int> _port;
    private string _region;
    private RestoreWindow _restoreWindow;
    private string _status;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private string _tdeCredentialArn;
    private string _timezone;
    private string _vpcId;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string AwsBackupRecoveryPointArn { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string BackupTarget { get; public set; }
    public string DBInstanceArn { get; public set; }
    public string DBInstanceAutomatedBackupsArn { get; public set; }
    public List`1<DBInstanceAutomatedBackupsReplication> DBInstanceAutomatedBackupsReplications { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public string DbiResourceId { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public Nullable`1<DateTime> InstanceCreateTime { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string LicenseModel { get; public set; }
    public string MasterUsername { get; public set; }
    public Nullable`1<bool> MultiTenant { get; public set; }
    public string OptionGroupName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string Region { get; public set; }
    public RestoreWindow RestoreWindow { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public string TdeCredentialArn { get; public set; }
    public string Timezone { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_AwsBackupRecoveryPointArn();
    public void set_AwsBackupRecoveryPointArn(string value);
    internal bool IsSetAwsBackupRecoveryPointArn();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_BackupTarget();
    public void set_BackupTarget(string value);
    internal bool IsSetBackupTarget();
    public string get_DBInstanceArn();
    public void set_DBInstanceArn(string value);
    internal bool IsSetDBInstanceArn();
    public string get_DBInstanceAutomatedBackupsArn();
    public void set_DBInstanceAutomatedBackupsArn(string value);
    internal bool IsSetDBInstanceAutomatedBackupsArn();
    public List`1<DBInstanceAutomatedBackupsReplication> get_DBInstanceAutomatedBackupsReplications();
    public void set_DBInstanceAutomatedBackupsReplications(List`1<DBInstanceAutomatedBackupsReplication> value);
    internal bool IsSetDBInstanceAutomatedBackupsReplications();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public Nullable`1<DateTime> get_InstanceCreateTime();
    public void set_InstanceCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetInstanceCreateTime();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public Nullable`1<bool> get_MultiTenant();
    public void set_MultiTenant(Nullable`1<bool> value);
    internal bool IsSetMultiTenant();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public RestoreWindow get_RestoreWindow();
    public void set_RestoreWindow(RestoreWindow value);
    internal bool IsSetRestoreWindow();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public string get_TdeCredentialArn();
    public void set_TdeCredentialArn(string value);
    internal bool IsSetTdeCredentialArn();
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.RDS.Model.DBInstanceAutomatedBackupNotFoundException : AmazonRDSException {
    public DBInstanceAutomatedBackupNotFoundException(string message);
    public DBInstanceAutomatedBackupNotFoundException(string message, Exception innerException);
    public DBInstanceAutomatedBackupNotFoundException(Exception innerException);
    public DBInstanceAutomatedBackupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBInstanceAutomatedBackupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBInstanceAutomatedBackupQuotaExceededException : AmazonRDSException {
    public DBInstanceAutomatedBackupQuotaExceededException(string message);
    public DBInstanceAutomatedBackupQuotaExceededException(string message, Exception innerException);
    public DBInstanceAutomatedBackupQuotaExceededException(Exception innerException);
    public DBInstanceAutomatedBackupQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBInstanceAutomatedBackupQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBInstanceAutomatedBackupsReplication : object {
    private string _dbInstanceAutomatedBackupsArn;
    public string DBInstanceAutomatedBackupsArn { get; public set; }
    public string get_DBInstanceAutomatedBackupsArn();
    public void set_DBInstanceAutomatedBackupsArn(string value);
    internal bool IsSetDBInstanceAutomatedBackupsArn();
}
public class Amazon.RDS.Model.DBInstanceNotFoundException : AmazonRDSException {
    public DBInstanceNotFoundException(string message);
    public DBInstanceNotFoundException(string message, Exception innerException);
    public DBInstanceNotFoundException(Exception innerException);
    public DBInstanceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBInstanceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBInstanceRole : object {
    private string _featureName;
    private string _roleArn;
    private string _status;
    public string FeatureName { get; public set; }
    public string RoleArn { get; public set; }
    public string Status { get; public set; }
    public string get_FeatureName();
    public void set_FeatureName(string value);
    internal bool IsSetFeatureName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DBInstanceRoleAlreadyExistsException : AmazonRDSException {
    public DBInstanceRoleAlreadyExistsException(string message);
    public DBInstanceRoleAlreadyExistsException(string message, Exception innerException);
    public DBInstanceRoleAlreadyExistsException(Exception innerException);
    public DBInstanceRoleAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBInstanceRoleAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBInstanceRoleNotFoundException : AmazonRDSException {
    public DBInstanceRoleNotFoundException(string message);
    public DBInstanceRoleNotFoundException(string message, Exception innerException);
    public DBInstanceRoleNotFoundException(Exception innerException);
    public DBInstanceRoleNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBInstanceRoleNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBInstanceRoleQuotaExceededException : AmazonRDSException {
    public DBInstanceRoleQuotaExceededException(string message);
    public DBInstanceRoleQuotaExceededException(string message, Exception innerException);
    public DBInstanceRoleQuotaExceededException(Exception innerException);
    public DBInstanceRoleQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBInstanceRoleQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBInstanceStatusInfo : object {
    private string _message;
    private Nullable`1<bool> _normal;
    private string _status;
    private string _statusType;
    public string Message { get; public set; }
    public Nullable`1<bool> Normal { get; public set; }
    public string Status { get; public set; }
    public string StatusType { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<bool> get_Normal();
    public void set_Normal(Nullable`1<bool> value);
    internal bool IsSetNormal();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusType();
    public void set_StatusType(string value);
    internal bool IsSetStatusType();
}
public class Amazon.RDS.Model.DBLogFileNotFoundException : AmazonRDSException {
    public DBLogFileNotFoundException(string message);
    public DBLogFileNotFoundException(string message, Exception innerException);
    public DBLogFileNotFoundException(Exception innerException);
    public DBLogFileNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBLogFileNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBParameterGroup : object {
    private string _dbParameterGroupArn;
    private string _dbParameterGroupFamily;
    private string _dbParameterGroupName;
    private string _description;
    public string DBParameterGroupArn { get; public set; }
    public string DBParameterGroupFamily { get; public set; }
    public string DBParameterGroupName { get; public set; }
    public string Description { get; public set; }
    public string get_DBParameterGroupArn();
    public void set_DBParameterGroupArn(string value);
    internal bool IsSetDBParameterGroupArn();
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.RDS.Model.DBParameterGroupAlreadyExistsException : AmazonRDSException {
    public DBParameterGroupAlreadyExistsException(string message);
    public DBParameterGroupAlreadyExistsException(string message, Exception innerException);
    public DBParameterGroupAlreadyExistsException(Exception innerException);
    public DBParameterGroupAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBParameterGroupAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBParameterGroupNotFoundException : AmazonRDSException {
    public DBParameterGroupNotFoundException(string message);
    public DBParameterGroupNotFoundException(string message, Exception innerException);
    public DBParameterGroupNotFoundException(Exception innerException);
    public DBParameterGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBParameterGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBParameterGroupQuotaExceededException : AmazonRDSException {
    public DBParameterGroupQuotaExceededException(string message);
    public DBParameterGroupQuotaExceededException(string message, Exception innerException);
    public DBParameterGroupQuotaExceededException(Exception innerException);
    public DBParameterGroupQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBParameterGroupQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBParameterGroupStatus : object {
    private string _dbParameterGroupName;
    private string _parameterApplyStatus;
    public string DBParameterGroupName { get; public set; }
    public string ParameterApplyStatus { get; public set; }
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public string get_ParameterApplyStatus();
    public void set_ParameterApplyStatus(string value);
    internal bool IsSetParameterApplyStatus();
}
public class Amazon.RDS.Model.DBProxy : object {
    private List`1<UserAuthConfigInfo> _auth;
    private Nullable`1<DateTime> _createdDate;
    private string _dbProxyArn;
    private string _dbProxyName;
    private Nullable`1<bool> _debugLogging;
    private string _endpoint;
    private string _engineFamily;
    private Nullable`1<int> _idleClientTimeout;
    private Nullable`1<bool> _requireTLS;
    private string _roleArn;
    private DBProxyStatus _status;
    private Nullable`1<DateTime> _updatedDate;
    private string _vpcId;
    private List`1<string> _vpcSecurityGroupIds;
    private List`1<string> _vpcSubnetIds;
    public List`1<UserAuthConfigInfo> Auth { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DBProxyArn { get; public set; }
    public string DBProxyName { get; public set; }
    public Nullable`1<bool> DebugLogging { get; public set; }
    public string Endpoint { get; public set; }
    public string EngineFamily { get; public set; }
    public Nullable`1<int> IdleClientTimeout { get; public set; }
    public Nullable`1<bool> RequireTLS { get; public set; }
    public string RoleArn { get; public set; }
    public DBProxyStatus Status { get; public set; }
    public Nullable`1<DateTime> UpdatedDate { get; public set; }
    public string VpcId { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public List`1<string> VpcSubnetIds { get; public set; }
    public List`1<UserAuthConfigInfo> get_Auth();
    public void set_Auth(List`1<UserAuthConfigInfo> value);
    internal bool IsSetAuth();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DBProxyArn();
    public void set_DBProxyArn(string value);
    internal bool IsSetDBProxyArn();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public Nullable`1<bool> get_DebugLogging();
    public void set_DebugLogging(Nullable`1<bool> value);
    internal bool IsSetDebugLogging();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_EngineFamily();
    public void set_EngineFamily(string value);
    internal bool IsSetEngineFamily();
    public Nullable`1<int> get_IdleClientTimeout();
    public void set_IdleClientTimeout(Nullable`1<int> value);
    internal bool IsSetIdleClientTimeout();
    public Nullable`1<bool> get_RequireTLS();
    public void set_RequireTLS(Nullable`1<bool> value);
    internal bool IsSetRequireTLS();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public DBProxyStatus get_Status();
    public void set_Status(DBProxyStatus value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_UpdatedDate();
    public void set_UpdatedDate(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedDate();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
    public List`1<string> get_VpcSubnetIds();
    public void set_VpcSubnetIds(List`1<string> value);
    internal bool IsSetVpcSubnetIds();
}
public class Amazon.RDS.Model.DBProxyAlreadyExistsException : AmazonRDSException {
    public DBProxyAlreadyExistsException(string message);
    public DBProxyAlreadyExistsException(string message, Exception innerException);
    public DBProxyAlreadyExistsException(Exception innerException);
    public DBProxyAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyEndpoint : object {
    private Nullable`1<DateTime> _createdDate;
    private string _dbProxyEndpointArn;
    private string _dbProxyEndpointName;
    private string _dbProxyName;
    private string _endpoint;
    private Nullable`1<bool> _isDefault;
    private DBProxyEndpointStatus _status;
    private DBProxyEndpointTargetRole _targetRole;
    private string _vpcId;
    private List`1<string> _vpcSecurityGroupIds;
    private List`1<string> _vpcSubnetIds;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DBProxyEndpointArn { get; public set; }
    public string DBProxyEndpointName { get; public set; }
    public string DBProxyName { get; public set; }
    public string Endpoint { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public DBProxyEndpointStatus Status { get; public set; }
    public DBProxyEndpointTargetRole TargetRole { get; public set; }
    public string VpcId { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public List`1<string> VpcSubnetIds { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DBProxyEndpointArn();
    public void set_DBProxyEndpointArn(string value);
    internal bool IsSetDBProxyEndpointArn();
    public string get_DBProxyEndpointName();
    public void set_DBProxyEndpointName(string value);
    internal bool IsSetDBProxyEndpointName();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public DBProxyEndpointStatus get_Status();
    public void set_Status(DBProxyEndpointStatus value);
    internal bool IsSetStatus();
    public DBProxyEndpointTargetRole get_TargetRole();
    public void set_TargetRole(DBProxyEndpointTargetRole value);
    internal bool IsSetTargetRole();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
    public List`1<string> get_VpcSubnetIds();
    public void set_VpcSubnetIds(List`1<string> value);
    internal bool IsSetVpcSubnetIds();
}
public class Amazon.RDS.Model.DBProxyEndpointAlreadyExistsException : AmazonRDSException {
    public DBProxyEndpointAlreadyExistsException(string message);
    public DBProxyEndpointAlreadyExistsException(string message, Exception innerException);
    public DBProxyEndpointAlreadyExistsException(Exception innerException);
    public DBProxyEndpointAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyEndpointAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyEndpointNotFoundException : AmazonRDSException {
    public DBProxyEndpointNotFoundException(string message);
    public DBProxyEndpointNotFoundException(string message, Exception innerException);
    public DBProxyEndpointNotFoundException(Exception innerException);
    public DBProxyEndpointNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyEndpointNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyEndpointQuotaExceededException : AmazonRDSException {
    public DBProxyEndpointQuotaExceededException(string message);
    public DBProxyEndpointQuotaExceededException(string message, Exception innerException);
    public DBProxyEndpointQuotaExceededException(Exception innerException);
    public DBProxyEndpointQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyEndpointQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyNotFoundException : AmazonRDSException {
    public DBProxyNotFoundException(string message);
    public DBProxyNotFoundException(string message, Exception innerException);
    public DBProxyNotFoundException(Exception innerException);
    public DBProxyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyQuotaExceededException : AmazonRDSException {
    public DBProxyQuotaExceededException(string message);
    public DBProxyQuotaExceededException(string message, Exception innerException);
    public DBProxyQuotaExceededException(Exception innerException);
    public DBProxyQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyTarget : object {
    private string _endpoint;
    private Nullable`1<int> _port;
    private string _rdsResourceId;
    private TargetRole _role;
    private string _targetArn;
    private TargetHealth _targetHealth;
    private string _trackedClusterId;
    private TargetType _type;
    public string Endpoint { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string RdsResourceId { get; public set; }
    public TargetRole Role { get; public set; }
    public string TargetArn { get; public set; }
    public TargetHealth TargetHealth { get; public set; }
    public string TrackedClusterId { get; public set; }
    public TargetType Type { get; public set; }
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_RdsResourceId();
    public void set_RdsResourceId(string value);
    internal bool IsSetRdsResourceId();
    public TargetRole get_Role();
    public void set_Role(TargetRole value);
    internal bool IsSetRole();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
    public TargetHealth get_TargetHealth();
    public void set_TargetHealth(TargetHealth value);
    internal bool IsSetTargetHealth();
    public string get_TrackedClusterId();
    public void set_TrackedClusterId(string value);
    internal bool IsSetTrackedClusterId();
    public TargetType get_Type();
    public void set_Type(TargetType value);
    internal bool IsSetType();
}
public class Amazon.RDS.Model.DBProxyTargetAlreadyRegisteredException : AmazonRDSException {
    public DBProxyTargetAlreadyRegisteredException(string message);
    public DBProxyTargetAlreadyRegisteredException(string message, Exception innerException);
    public DBProxyTargetAlreadyRegisteredException(Exception innerException);
    public DBProxyTargetAlreadyRegisteredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyTargetAlreadyRegisteredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyTargetGroup : object {
    private ConnectionPoolConfigurationInfo _connectionPoolConfig;
    private Nullable`1<DateTime> _createdDate;
    private string _dbProxyName;
    private Nullable`1<bool> _isDefault;
    private string _status;
    private string _targetGroupArn;
    private string _targetGroupName;
    private Nullable`1<DateTime> _updatedDate;
    public ConnectionPoolConfigurationInfo ConnectionPoolConfig { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DBProxyName { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public string Status { get; public set; }
    public string TargetGroupArn { get; public set; }
    public string TargetGroupName { get; public set; }
    public Nullable`1<DateTime> UpdatedDate { get; public set; }
    public ConnectionPoolConfigurationInfo get_ConnectionPoolConfig();
    public void set_ConnectionPoolConfig(ConnectionPoolConfigurationInfo value);
    internal bool IsSetConnectionPoolConfig();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_TargetGroupArn();
    public void set_TargetGroupArn(string value);
    internal bool IsSetTargetGroupArn();
    public string get_TargetGroupName();
    public void set_TargetGroupName(string value);
    internal bool IsSetTargetGroupName();
    public Nullable`1<DateTime> get_UpdatedDate();
    public void set_UpdatedDate(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedDate();
}
public class Amazon.RDS.Model.DBProxyTargetGroupNotFoundException : AmazonRDSException {
    public DBProxyTargetGroupNotFoundException(string message);
    public DBProxyTargetGroupNotFoundException(string message, Exception innerException);
    public DBProxyTargetGroupNotFoundException(Exception innerException);
    public DBProxyTargetGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyTargetGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBProxyTargetNotFoundException : AmazonRDSException {
    public DBProxyTargetNotFoundException(string message);
    public DBProxyTargetNotFoundException(string message, Exception innerException);
    public DBProxyTargetNotFoundException(Exception innerException);
    public DBProxyTargetNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBProxyTargetNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBRecommendation : object {
    private string _additionalInfo;
    private string _category;
    private Nullable`1<DateTime> _createdTime;
    private string _description;
    private string _detection;
    private string _impact;
    private IssueDetails _issueDetails;
    private List`1<DocLink> _links;
    private string _reason;
    private string _recommendation;
    private string _recommendationId;
    private List`1<RecommendedAction> _recommendedActions;
    private string _resourceArn;
    private string _severity;
    private string _source;
    private string _status;
    private string _typeDetection;
    private string _typeId;
    private string _typeRecommendation;
    private Nullable`1<DateTime> _updatedTime;
    public string AdditionalInfo { get; public set; }
    public string Category { get; public set; }
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    public string Description { get; public set; }
    public string Detection { get; public set; }
    public string Impact { get; public set; }
    public IssueDetails IssueDetails { get; public set; }
    public List`1<DocLink> Links { get; public set; }
    public string Reason { get; public set; }
    public string Recommendation { get; public set; }
    public string RecommendationId { get; public set; }
    public List`1<RecommendedAction> RecommendedActions { get; public set; }
    public string ResourceArn { get; public set; }
    public string Severity { get; public set; }
    public string Source { get; public set; }
    public string Status { get; public set; }
    public string TypeDetection { get; public set; }
    public string TypeId { get; public set; }
    public string TypeRecommendation { get; public set; }
    public Nullable`1<DateTime> UpdatedTime { get; public set; }
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public string get_Category();
    public void set_Category(string value);
    internal bool IsSetCategory();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Detection();
    public void set_Detection(string value);
    internal bool IsSetDetection();
    public string get_Impact();
    public void set_Impact(string value);
    internal bool IsSetImpact();
    public IssueDetails get_IssueDetails();
    public void set_IssueDetails(IssueDetails value);
    internal bool IsSetIssueDetails();
    public List`1<DocLink> get_Links();
    public void set_Links(List`1<DocLink> value);
    internal bool IsSetLinks();
    public string get_Reason();
    public void set_Reason(string value);
    internal bool IsSetReason();
    public string get_Recommendation();
    public void set_Recommendation(string value);
    internal bool IsSetRecommendation();
    public string get_RecommendationId();
    public void set_RecommendationId(string value);
    internal bool IsSetRecommendationId();
    public List`1<RecommendedAction> get_RecommendedActions();
    public void set_RecommendedActions(List`1<RecommendedAction> value);
    internal bool IsSetRecommendedActions();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_Severity();
    public void set_Severity(string value);
    internal bool IsSetSeverity();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_TypeDetection();
    public void set_TypeDetection(string value);
    internal bool IsSetTypeDetection();
    public string get_TypeId();
    public void set_TypeId(string value);
    internal bool IsSetTypeId();
    public string get_TypeRecommendation();
    public void set_TypeRecommendation(string value);
    internal bool IsSetTypeRecommendation();
    public Nullable`1<DateTime> get_UpdatedTime();
    public void set_UpdatedTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTime();
}
public class Amazon.RDS.Model.DBSecurityGroup : object {
    private string _dbSecurityGroupArn;
    private string _dbSecurityGroupDescription;
    private string _dbSecurityGroupName;
    private List`1<EC2SecurityGroup> _ec2SecurityGroups;
    private List`1<IPRange> _ipRanges;
    private string _ownerId;
    private string _vpcId;
    public string DBSecurityGroupArn { get; public set; }
    public string DBSecurityGroupDescription { get; public set; }
    public string DBSecurityGroupName { get; public set; }
    public List`1<EC2SecurityGroup> EC2SecurityGroups { get; public set; }
    public List`1<IPRange> IPRanges { get; public set; }
    public string OwnerId { get; public set; }
    public string VpcId { get; public set; }
    public string get_DBSecurityGroupArn();
    public void set_DBSecurityGroupArn(string value);
    internal bool IsSetDBSecurityGroupArn();
    public string get_DBSecurityGroupDescription();
    public void set_DBSecurityGroupDescription(string value);
    internal bool IsSetDBSecurityGroupDescription();
    public string get_DBSecurityGroupName();
    public void set_DBSecurityGroupName(string value);
    internal bool IsSetDBSecurityGroupName();
    public List`1<EC2SecurityGroup> get_EC2SecurityGroups();
    public void set_EC2SecurityGroups(List`1<EC2SecurityGroup> value);
    internal bool IsSetEC2SecurityGroups();
    public List`1<IPRange> get_IPRanges();
    public void set_IPRanges(List`1<IPRange> value);
    internal bool IsSetIPRanges();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.RDS.Model.DBSecurityGroupAlreadyExistsException : AmazonRDSException {
    public DBSecurityGroupAlreadyExistsException(string message);
    public DBSecurityGroupAlreadyExistsException(string message, Exception innerException);
    public DBSecurityGroupAlreadyExistsException(Exception innerException);
    public DBSecurityGroupAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSecurityGroupAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSecurityGroupMembership : object {
    private string _dbSecurityGroupName;
    private string _status;
    public string DBSecurityGroupName { get; public set; }
    public string Status { get; public set; }
    public string get_DBSecurityGroupName();
    public void set_DBSecurityGroupName(string value);
    internal bool IsSetDBSecurityGroupName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DBSecurityGroupNotFoundException : AmazonRDSException {
    public DBSecurityGroupNotFoundException(string message);
    public DBSecurityGroupNotFoundException(string message, Exception innerException);
    public DBSecurityGroupNotFoundException(Exception innerException);
    public DBSecurityGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSecurityGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSecurityGroupNotSupportedException : AmazonRDSException {
    public DBSecurityGroupNotSupportedException(string message);
    public DBSecurityGroupNotSupportedException(string message, Exception innerException);
    public DBSecurityGroupNotSupportedException(Exception innerException);
    public DBSecurityGroupNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSecurityGroupNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSecurityGroupQuotaExceededException : AmazonRDSException {
    public DBSecurityGroupQuotaExceededException(string message);
    public DBSecurityGroupQuotaExceededException(string message, Exception innerException);
    public DBSecurityGroupQuotaExceededException(Exception innerException);
    public DBSecurityGroupQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSecurityGroupQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBShardGroup : object {
    private Nullable`1<int> _computeRedundancy;
    private string _dbClusterIdentifier;
    private string _dbShardGroupIdentifier;
    private string _dbShardGroupResourceId;
    private string _endpoint;
    private Nullable`1<double> _maxACU;
    private Nullable`1<double> _minACU;
    private Nullable`1<bool> _publiclyAccessible;
    private string _status;
    public Nullable`1<int> ComputeRedundancy { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public string DBShardGroupResourceId { get; public set; }
    public string Endpoint { get; public set; }
    public Nullable`1<double> MaxACU { get; public set; }
    public Nullable`1<double> MinACU { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<int> get_ComputeRedundancy();
    public void set_ComputeRedundancy(Nullable`1<int> value);
    internal bool IsSetComputeRedundancy();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public string get_DBShardGroupResourceId();
    public void set_DBShardGroupResourceId(string value);
    internal bool IsSetDBShardGroupResourceId();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public Nullable`1<double> get_MaxACU();
    public void set_MaxACU(Nullable`1<double> value);
    internal bool IsSetMaxACU();
    public Nullable`1<double> get_MinACU();
    public void set_MinACU(Nullable`1<double> value);
    internal bool IsSetMinACU();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DBShardGroupAlreadyExistsException : AmazonRDSException {
    public DBShardGroupAlreadyExistsException(string message);
    public DBShardGroupAlreadyExistsException(string message, Exception innerException);
    public DBShardGroupAlreadyExistsException(Exception innerException);
    public DBShardGroupAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBShardGroupAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBShardGroupNotFoundException : AmazonRDSException {
    public DBShardGroupNotFoundException(string message);
    public DBShardGroupNotFoundException(string message, Exception innerException);
    public DBShardGroupNotFoundException(Exception innerException);
    public DBShardGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBShardGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSnapshot : object {
    private Nullable`1<int> _allocatedStorage;
    private string _availabilityZone;
    private string _dbInstanceIdentifier;
    private string _dbiResourceId;
    private string _dbSnapshotArn;
    private string _dbSnapshotIdentifier;
    private string _dbSystemId;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _encrypted;
    private string _engine;
    private string _engineVersion;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private Nullable`1<DateTime> _instanceCreateTime;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _licenseModel;
    private string _masterUsername;
    private Nullable`1<bool> _multiTenant;
    private string _optionGroupName;
    private Nullable`1<DateTime> _originalSnapshotCreateTime;
    private Nullable`1<int> _percentProgress;
    private Nullable`1<int> _port;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<DateTime> _snapshotCreateTime;
    private Nullable`1<DateTime> _snapshotDatabaseTime;
    private string _snapshotTarget;
    private string _snapshotType;
    private string _sourceDBSnapshotIdentifier;
    private string _sourceRegion;
    private string _status;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tagList;
    private string _tdeCredentialArn;
    private string _timezone;
    private string _vpcId;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public string DbiResourceId { get; public set; }
    public string DBSnapshotArn { get; public set; }
    public string DBSnapshotIdentifier { get; public set; }
    public string DBSystemId { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> Encrypted { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public Nullable`1<DateTime> InstanceCreateTime { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string LicenseModel { get; public set; }
    public string MasterUsername { get; public set; }
    public Nullable`1<bool> MultiTenant { get; public set; }
    public string OptionGroupName { get; public set; }
    public Nullable`1<DateTime> OriginalSnapshotCreateTime { get; public set; }
    public Nullable`1<int> PercentProgress { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<DateTime> SnapshotCreateTime { get; public set; }
    public Nullable`1<DateTime> SnapshotDatabaseTime { get; public set; }
    public string SnapshotTarget { get; public set; }
    public string SnapshotType { get; public set; }
    public string SourceDBSnapshotIdentifier { get; public set; }
    public string SourceRegion { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public string TdeCredentialArn { get; public set; }
    public string Timezone { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public string get_DBSnapshotArn();
    public void set_DBSnapshotArn(string value);
    internal bool IsSetDBSnapshotArn();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public string get_DBSystemId();
    public void set_DBSystemId(string value);
    internal bool IsSetDBSystemId();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_Encrypted();
    public void set_Encrypted(Nullable`1<bool> value);
    internal bool IsSetEncrypted();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public Nullable`1<DateTime> get_InstanceCreateTime();
    public void set_InstanceCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetInstanceCreateTime();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public Nullable`1<bool> get_MultiTenant();
    public void set_MultiTenant(Nullable`1<bool> value);
    internal bool IsSetMultiTenant();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public Nullable`1<DateTime> get_OriginalSnapshotCreateTime();
    public void set_OriginalSnapshotCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetOriginalSnapshotCreateTime();
    public Nullable`1<int> get_PercentProgress();
    public void set_PercentProgress(Nullable`1<int> value);
    internal bool IsSetPercentProgress();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<DateTime> get_SnapshotCreateTime();
    public void set_SnapshotCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetSnapshotCreateTime();
    public Nullable`1<DateTime> get_SnapshotDatabaseTime();
    public void set_SnapshotDatabaseTime(Nullable`1<DateTime> value);
    internal bool IsSetSnapshotDatabaseTime();
    public string get_SnapshotTarget();
    public void set_SnapshotTarget(string value);
    internal bool IsSetSnapshotTarget();
    public string get_SnapshotType();
    public void set_SnapshotType(string value);
    internal bool IsSetSnapshotType();
    public string get_SourceDBSnapshotIdentifier();
    public void set_SourceDBSnapshotIdentifier(string value);
    internal bool IsSetSourceDBSnapshotIdentifier();
    public string get_SourceRegion();
    public void set_SourceRegion(string value);
    internal bool IsSetSourceRegion();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public string get_TdeCredentialArn();
    public void set_TdeCredentialArn(string value);
    internal bool IsSetTdeCredentialArn();
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.RDS.Model.DBSnapshotAlreadyExistsException : AmazonRDSException {
    public DBSnapshotAlreadyExistsException(string message);
    public DBSnapshotAlreadyExistsException(string message, Exception innerException);
    public DBSnapshotAlreadyExistsException(Exception innerException);
    public DBSnapshotAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSnapshotAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSnapshotAttribute : object {
    private string _attributeName;
    private List`1<string> _attributeValues;
    public string AttributeName { get; public set; }
    public List`1<string> AttributeValues { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public List`1<string> get_AttributeValues();
    public void set_AttributeValues(List`1<string> value);
    internal bool IsSetAttributeValues();
}
public class Amazon.RDS.Model.DBSnapshotAttributesResult : object {
    private List`1<DBSnapshotAttribute> _dbSnapshotAttributes;
    private string _dbSnapshotIdentifier;
    public List`1<DBSnapshotAttribute> DBSnapshotAttributes { get; public set; }
    public string DBSnapshotIdentifier { get; public set; }
    public List`1<DBSnapshotAttribute> get_DBSnapshotAttributes();
    public void set_DBSnapshotAttributes(List`1<DBSnapshotAttribute> value);
    internal bool IsSetDBSnapshotAttributes();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
}
public class Amazon.RDS.Model.DBSnapshotNotFoundException : AmazonRDSException {
    public DBSnapshotNotFoundException(string message);
    public DBSnapshotNotFoundException(string message, Exception innerException);
    public DBSnapshotNotFoundException(Exception innerException);
    public DBSnapshotNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSnapshotNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSnapshotTenantDatabase : object {
    private string _characterSetName;
    private string _dbInstanceIdentifier;
    private string _dbiResourceId;
    private string _dbSnapshotIdentifier;
    private string _dbSnapshotTenantDatabaseARN;
    private string _engineName;
    private string _masterUsername;
    private string _ncharCharacterSetName;
    private string _snapshotType;
    private List`1<Tag> _tagList;
    private Nullable`1<DateTime> _tenantDatabaseCreateTime;
    private string _tenantDatabaseResourceId;
    private string _tenantDBName;
    public string CharacterSetName { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public string DbiResourceId { get; public set; }
    public string DBSnapshotIdentifier { get; public set; }
    public string DBSnapshotTenantDatabaseARN { get; public set; }
    public string EngineName { get; public set; }
    public string MasterUsername { get; public set; }
    public string NcharCharacterSetName { get; public set; }
    public string SnapshotType { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public Nullable`1<DateTime> TenantDatabaseCreateTime { get; public set; }
    public string TenantDatabaseResourceId { get; public set; }
    public string TenantDBName { get; public set; }
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public string get_DBSnapshotTenantDatabaseARN();
    public void set_DBSnapshotTenantDatabaseARN(string value);
    internal bool IsSetDBSnapshotTenantDatabaseARN();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public string get_NcharCharacterSetName();
    public void set_NcharCharacterSetName(string value);
    internal bool IsSetNcharCharacterSetName();
    public string get_SnapshotType();
    public void set_SnapshotType(string value);
    internal bool IsSetSnapshotType();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public Nullable`1<DateTime> get_TenantDatabaseCreateTime();
    public void set_TenantDatabaseCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetTenantDatabaseCreateTime();
    public string get_TenantDatabaseResourceId();
    public void set_TenantDatabaseResourceId(string value);
    internal bool IsSetTenantDatabaseResourceId();
    public string get_TenantDBName();
    public void set_TenantDBName(string value);
    internal bool IsSetTenantDBName();
}
public class Amazon.RDS.Model.DBSnapshotTenantDatabaseNotFoundException : AmazonRDSException {
    public DBSnapshotTenantDatabaseNotFoundException(string message);
    public DBSnapshotTenantDatabaseNotFoundException(string message, Exception innerException);
    public DBSnapshotTenantDatabaseNotFoundException(Exception innerException);
    public DBSnapshotTenantDatabaseNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSnapshotTenantDatabaseNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSubnetGroup : object {
    private string _dbSubnetGroupArn;
    private string _dbSubnetGroupDescription;
    private string _dbSubnetGroupName;
    private string _subnetGroupStatus;
    private List`1<Subnet> _subnets;
    private List`1<string> _supportedNetworkTypes;
    private string _vpcId;
    public string DBSubnetGroupArn { get; public set; }
    public string DBSubnetGroupDescription { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public string SubnetGroupStatus { get; public set; }
    public List`1<Subnet> Subnets { get; public set; }
    public List`1<string> SupportedNetworkTypes { get; public set; }
    public string VpcId { get; public set; }
    public string get_DBSubnetGroupArn();
    public void set_DBSubnetGroupArn(string value);
    internal bool IsSetDBSubnetGroupArn();
    public string get_DBSubnetGroupDescription();
    public void set_DBSubnetGroupDescription(string value);
    internal bool IsSetDBSubnetGroupDescription();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public string get_SubnetGroupStatus();
    public void set_SubnetGroupStatus(string value);
    internal bool IsSetSubnetGroupStatus();
    public List`1<Subnet> get_Subnets();
    public void set_Subnets(List`1<Subnet> value);
    internal bool IsSetSubnets();
    public List`1<string> get_SupportedNetworkTypes();
    public void set_SupportedNetworkTypes(List`1<string> value);
    internal bool IsSetSupportedNetworkTypes();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.RDS.Model.DBSubnetGroupAlreadyExistsException : AmazonRDSException {
    public DBSubnetGroupAlreadyExistsException(string message);
    public DBSubnetGroupAlreadyExistsException(string message, Exception innerException);
    public DBSubnetGroupAlreadyExistsException(Exception innerException);
    public DBSubnetGroupAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSubnetGroupAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSubnetGroupDoesNotCoverEnoughAZsException : AmazonRDSException {
    public DBSubnetGroupDoesNotCoverEnoughAZsException(string message);
    public DBSubnetGroupDoesNotCoverEnoughAZsException(string message, Exception innerException);
    public DBSubnetGroupDoesNotCoverEnoughAZsException(Exception innerException);
    public DBSubnetGroupDoesNotCoverEnoughAZsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSubnetGroupDoesNotCoverEnoughAZsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSubnetGroupNotAllowedException : AmazonRDSException {
    public DBSubnetGroupNotAllowedException(string message);
    public DBSubnetGroupNotAllowedException(string message, Exception innerException);
    public DBSubnetGroupNotAllowedException(Exception innerException);
    public DBSubnetGroupNotAllowedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSubnetGroupNotAllowedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSubnetGroupNotFoundException : AmazonRDSException {
    public DBSubnetGroupNotFoundException(string message);
    public DBSubnetGroupNotFoundException(string message, Exception innerException);
    public DBSubnetGroupNotFoundException(Exception innerException);
    public DBSubnetGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSubnetGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSubnetGroupQuotaExceededException : AmazonRDSException {
    public DBSubnetGroupQuotaExceededException(string message);
    public DBSubnetGroupQuotaExceededException(string message, Exception innerException);
    public DBSubnetGroupQuotaExceededException(Exception innerException);
    public DBSubnetGroupQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSubnetGroupQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBSubnetQuotaExceededException : AmazonRDSException {
    public DBSubnetQuotaExceededException(string message);
    public DBSubnetQuotaExceededException(string message, Exception innerException);
    public DBSubnetQuotaExceededException(Exception innerException);
    public DBSubnetQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBSubnetQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DBUpgradeDependencyFailureException : AmazonRDSException {
    public DBUpgradeDependencyFailureException(string message);
    public DBUpgradeDependencyFailureException(string message, Exception innerException);
    public DBUpgradeDependencyFailureException(Exception innerException);
    public DBUpgradeDependencyFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DBUpgradeDependencyFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DeleteBlueGreenDeploymentRequest : AmazonRDSRequest {
    private string _blueGreenDeploymentIdentifier;
    private Nullable`1<bool> _deleteTarget;
    [AWSPropertyAttribute]
public string BlueGreenDeploymentIdentifier { get; public set; }
    public Nullable`1<bool> DeleteTarget { get; public set; }
    public string get_BlueGreenDeploymentIdentifier();
    public void set_BlueGreenDeploymentIdentifier(string value);
    internal bool IsSetBlueGreenDeploymentIdentifier();
    public Nullable`1<bool> get_DeleteTarget();
    public void set_DeleteTarget(Nullable`1<bool> value);
    internal bool IsSetDeleteTarget();
}
public class Amazon.RDS.Model.DeleteBlueGreenDeploymentResponse : AmazonWebServiceResponse {
    private BlueGreenDeployment _blueGreenDeployment;
    public BlueGreenDeployment BlueGreenDeployment { get; public set; }
    public BlueGreenDeployment get_BlueGreenDeployment();
    public void set_BlueGreenDeployment(BlueGreenDeployment value);
    internal bool IsSetBlueGreenDeployment();
}
public class Amazon.RDS.Model.DeleteCustomDBEngineVersionRequest : AmazonRDSRequest {
    private string _engine;
    private string _engineVersion;
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    [AWSPropertyAttribute]
public string EngineVersion { get; public set; }
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
}
public class Amazon.RDS.Model.DeleteCustomDBEngineVersionResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createTime;
    private string _customDBEngineVersionManifest;
    private string _databaseInstallationFilesS3BucketName;
    private string _databaseInstallationFilesS3Prefix;
    private string _dbEngineDescription;
    private string _dbEngineMediaType;
    private string _dbEngineVersionArn;
    private string _dbEngineVersionDescription;
    private string _dbParameterGroupFamily;
    private CharacterSet _defaultCharacterSet;
    private string _engine;
    private string _engineVersion;
    private List`1<string> _exportableLogTypes;
    private CustomDBEngineVersionAMI _image;
    private string _kmsKeyId;
    private string _majorEngineVersion;
    private string _status;
    private List`1<string> _supportedCACertificateIdentifiers;
    private List`1<CharacterSet> _supportedCharacterSets;
    private List`1<string> _supportedEngineModes;
    private List`1<string> _supportedFeatureNames;
    private List`1<CharacterSet> _supportedNcharCharacterSets;
    private List`1<Timezone> _supportedTimezones;
    private Nullable`1<bool> _supportsBabelfish;
    private Nullable`1<bool> _supportsCertificateRotationWithoutRestart;
    private Nullable`1<bool> _supportsGlobalDatabases;
    private Nullable`1<bool> _supportsIntegrations;
    private Nullable`1<bool> _supportsLimitlessDatabase;
    private Nullable`1<bool> _supportsLocalWriteForwarding;
    private Nullable`1<bool> _supportsLogExportsToCloudwatchLogs;
    private Nullable`1<bool> _supportsParallelQuery;
    private Nullable`1<bool> _supportsReadReplica;
    private List`1<Tag> _tagList;
    private List`1<UpgradeTarget> _validUpgradeTarget;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string CustomDBEngineVersionManifest { get; public set; }
    public string DatabaseInstallationFilesS3BucketName { get; public set; }
    public string DatabaseInstallationFilesS3Prefix { get; public set; }
    public string DBEngineDescription { get; public set; }
    public string DBEngineMediaType { get; public set; }
    public string DBEngineVersionArn { get; public set; }
    public string DBEngineVersionDescription { get; public set; }
    public string DBParameterGroupFamily { get; public set; }
    public CharacterSet DefaultCharacterSet { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public List`1<string> ExportableLogTypes { get; public set; }
    public CustomDBEngineVersionAMI Image { get; public set; }
    public string KMSKeyId { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string Status { get; public set; }
    public List`1<string> SupportedCACertificateIdentifiers { get; public set; }
    public List`1<CharacterSet> SupportedCharacterSets { get; public set; }
    public List`1<string> SupportedEngineModes { get; public set; }
    public List`1<string> SupportedFeatureNames { get; public set; }
    public List`1<CharacterSet> SupportedNcharCharacterSets { get; public set; }
    public List`1<Timezone> SupportedTimezones { get; public set; }
    public Nullable`1<bool> SupportsBabelfish { get; public set; }
    public Nullable`1<bool> SupportsCertificateRotationWithoutRestart { get; public set; }
    public Nullable`1<bool> SupportsGlobalDatabases { get; public set; }
    public Nullable`1<bool> SupportsIntegrations { get; public set; }
    public Nullable`1<bool> SupportsLimitlessDatabase { get; public set; }
    public Nullable`1<bool> SupportsLocalWriteForwarding { get; public set; }
    public Nullable`1<bool> SupportsLogExportsToCloudwatchLogs { get; public set; }
    public Nullable`1<bool> SupportsParallelQuery { get; public set; }
    public Nullable`1<bool> SupportsReadReplica { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public List`1<UpgradeTarget> ValidUpgradeTarget { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_CustomDBEngineVersionManifest();
    public void set_CustomDBEngineVersionManifest(string value);
    internal bool IsSetCustomDBEngineVersionManifest();
    public string get_DatabaseInstallationFilesS3BucketName();
    public void set_DatabaseInstallationFilesS3BucketName(string value);
    internal bool IsSetDatabaseInstallationFilesS3BucketName();
    public string get_DatabaseInstallationFilesS3Prefix();
    public void set_DatabaseInstallationFilesS3Prefix(string value);
    internal bool IsSetDatabaseInstallationFilesS3Prefix();
    public string get_DBEngineDescription();
    public void set_DBEngineDescription(string value);
    internal bool IsSetDBEngineDescription();
    public string get_DBEngineMediaType();
    public void set_DBEngineMediaType(string value);
    internal bool IsSetDBEngineMediaType();
    public string get_DBEngineVersionArn();
    public void set_DBEngineVersionArn(string value);
    internal bool IsSetDBEngineVersionArn();
    public string get_DBEngineVersionDescription();
    public void set_DBEngineVersionDescription(string value);
    internal bool IsSetDBEngineVersionDescription();
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public CharacterSet get_DefaultCharacterSet();
    public void set_DefaultCharacterSet(CharacterSet value);
    internal bool IsSetDefaultCharacterSet();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public List`1<string> get_ExportableLogTypes();
    public void set_ExportableLogTypes(List`1<string> value);
    internal bool IsSetExportableLogTypes();
    public CustomDBEngineVersionAMI get_Image();
    public void set_Image(CustomDBEngineVersionAMI value);
    internal bool IsSetImage();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<string> get_SupportedCACertificateIdentifiers();
    public void set_SupportedCACertificateIdentifiers(List`1<string> value);
    internal bool IsSetSupportedCACertificateIdentifiers();
    public List`1<CharacterSet> get_SupportedCharacterSets();
    public void set_SupportedCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedCharacterSets();
    public List`1<string> get_SupportedEngineModes();
    public void set_SupportedEngineModes(List`1<string> value);
    internal bool IsSetSupportedEngineModes();
    public List`1<string> get_SupportedFeatureNames();
    public void set_SupportedFeatureNames(List`1<string> value);
    internal bool IsSetSupportedFeatureNames();
    public List`1<CharacterSet> get_SupportedNcharCharacterSets();
    public void set_SupportedNcharCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedNcharCharacterSets();
    public List`1<Timezone> get_SupportedTimezones();
    public void set_SupportedTimezones(List`1<Timezone> value);
    internal bool IsSetSupportedTimezones();
    public Nullable`1<bool> get_SupportsBabelfish();
    public void set_SupportsBabelfish(Nullable`1<bool> value);
    internal bool IsSetSupportsBabelfish();
    public Nullable`1<bool> get_SupportsCertificateRotationWithoutRestart();
    public void set_SupportsCertificateRotationWithoutRestart(Nullable`1<bool> value);
    internal bool IsSetSupportsCertificateRotationWithoutRestart();
    public Nullable`1<bool> get_SupportsGlobalDatabases();
    public void set_SupportsGlobalDatabases(Nullable`1<bool> value);
    internal bool IsSetSupportsGlobalDatabases();
    public Nullable`1<bool> get_SupportsIntegrations();
    public void set_SupportsIntegrations(Nullable`1<bool> value);
    internal bool IsSetSupportsIntegrations();
    public Nullable`1<bool> get_SupportsLimitlessDatabase();
    public void set_SupportsLimitlessDatabase(Nullable`1<bool> value);
    internal bool IsSetSupportsLimitlessDatabase();
    public Nullable`1<bool> get_SupportsLocalWriteForwarding();
    public void set_SupportsLocalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetSupportsLocalWriteForwarding();
    public Nullable`1<bool> get_SupportsLogExportsToCloudwatchLogs();
    public void set_SupportsLogExportsToCloudwatchLogs(Nullable`1<bool> value);
    internal bool IsSetSupportsLogExportsToCloudwatchLogs();
    public Nullable`1<bool> get_SupportsParallelQuery();
    public void set_SupportsParallelQuery(Nullable`1<bool> value);
    internal bool IsSetSupportsParallelQuery();
    public Nullable`1<bool> get_SupportsReadReplica();
    public void set_SupportsReadReplica(Nullable`1<bool> value);
    internal bool IsSetSupportsReadReplica();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public List`1<UpgradeTarget> get_ValidUpgradeTarget();
    public void set_ValidUpgradeTarget(List`1<UpgradeTarget> value);
    internal bool IsSetValidUpgradeTarget();
}
public class Amazon.RDS.Model.DeleteDBClusterAutomatedBackupRequest : AmazonRDSRequest {
    private string _dbClusterResourceId;
    [AWSPropertyAttribute]
public string DbClusterResourceId { get; public set; }
    public string get_DbClusterResourceId();
    public void set_DbClusterResourceId(string value);
    internal bool IsSetDbClusterResourceId();
}
public class Amazon.RDS.Model.DeleteDBClusterAutomatedBackupResponse : AmazonWebServiceResponse {
    private DBClusterAutomatedBackup _dbClusterAutomatedBackup;
    public DBClusterAutomatedBackup DBClusterAutomatedBackup { get; public set; }
    public DBClusterAutomatedBackup get_DBClusterAutomatedBackup();
    public void set_DBClusterAutomatedBackup(DBClusterAutomatedBackup value);
    internal bool IsSetDBClusterAutomatedBackup();
}
public class Amazon.RDS.Model.DeleteDBClusterEndpointRequest : AmazonRDSRequest {
    private string _dbClusterEndpointIdentifier;
    [AWSPropertyAttribute]
public string DBClusterEndpointIdentifier { get; public set; }
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
}
public class Amazon.RDS.Model.DeleteDBClusterEndpointResponse : AmazonWebServiceResponse {
    private string _customEndpointType;
    private string _dbClusterEndpointArn;
    private string _dbClusterEndpointIdentifier;
    private string _dbClusterEndpointResourceIdentifier;
    private string _dbClusterIdentifier;
    private string _endpoint;
    private string _endpointType;
    private List`1<string> _excludedMembers;
    private List`1<string> _staticMembers;
    private string _status;
    public string CustomEndpointType { get; public set; }
    public string DBClusterEndpointArn { get; public set; }
    public string DBClusterEndpointIdentifier { get; public set; }
    public string DBClusterEndpointResourceIdentifier { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string Endpoint { get; public set; }
    public string EndpointType { get; public set; }
    public List`1<string> ExcludedMembers { get; public set; }
    public List`1<string> StaticMembers { get; public set; }
    public string Status { get; public set; }
    public string get_CustomEndpointType();
    public void set_CustomEndpointType(string value);
    internal bool IsSetCustomEndpointType();
    public string get_DBClusterEndpointArn();
    public void set_DBClusterEndpointArn(string value);
    internal bool IsSetDBClusterEndpointArn();
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
    public string get_DBClusterEndpointResourceIdentifier();
    public void set_DBClusterEndpointResourceIdentifier(string value);
    internal bool IsSetDBClusterEndpointResourceIdentifier();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_EndpointType();
    public void set_EndpointType(string value);
    internal bool IsSetEndpointType();
    public List`1<string> get_ExcludedMembers();
    public void set_ExcludedMembers(List`1<string> value);
    internal bool IsSetExcludedMembers();
    public List`1<string> get_StaticMembers();
    public void set_StaticMembers(List`1<string> value);
    internal bool IsSetStaticMembers();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DeleteDBClusterParameterGroupRequest : AmazonRDSRequest {
    private string _dbClusterParameterGroupName;
    [AWSPropertyAttribute]
public string DBClusterParameterGroupName { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
}
public class Amazon.RDS.Model.DeleteDBClusterParameterGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.DeleteDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private Nullable`1<bool> _deleteAutomatedBackups;
    private string _finalDBSnapshotIdentifier;
    private Nullable`1<bool> _skipFinalSnapshot;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public Nullable`1<bool> DeleteAutomatedBackups { get; public set; }
    public string FinalDBSnapshotIdentifier { get; public set; }
    public Nullable`1<bool> SkipFinalSnapshot { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public Nullable`1<bool> get_DeleteAutomatedBackups();
    public void set_DeleteAutomatedBackups(Nullable`1<bool> value);
    internal bool IsSetDeleteAutomatedBackups();
    public string get_FinalDBSnapshotIdentifier();
    public void set_FinalDBSnapshotIdentifier(string value);
    internal bool IsSetFinalDBSnapshotIdentifier();
    public Nullable`1<bool> get_SkipFinalSnapshot();
    public void set_SkipFinalSnapshot(Nullable`1<bool> value);
    internal bool IsSetSkipFinalSnapshot();
}
public class Amazon.RDS.Model.DeleteDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.DeleteDBClusterSnapshotRequest : AmazonRDSRequest {
    private string _dbClusterSnapshotIdentifier;
    [AWSPropertyAttribute]
public string DBClusterSnapshotIdentifier { get; public set; }
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
}
public class Amazon.RDS.Model.DeleteDBClusterSnapshotResponse : AmazonWebServiceResponse {
    private DBClusterSnapshot _dbClusterSnapshot;
    public DBClusterSnapshot DBClusterSnapshot { get; public set; }
    public DBClusterSnapshot get_DBClusterSnapshot();
    public void set_DBClusterSnapshot(DBClusterSnapshot value);
    internal bool IsSetDBClusterSnapshot();
}
public class Amazon.RDS.Model.DeleteDBInstanceAutomatedBackupRequest : AmazonRDSRequest {
    private string _dbInstanceAutomatedBackupsArn;
    private string _dbiResourceId;
    public string DBInstanceAutomatedBackupsArn { get; public set; }
    public string DbiResourceId { get; public set; }
    public string get_DBInstanceAutomatedBackupsArn();
    public void set_DBInstanceAutomatedBackupsArn(string value);
    internal bool IsSetDBInstanceAutomatedBackupsArn();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
}
public class Amazon.RDS.Model.DeleteDBInstanceAutomatedBackupResponse : AmazonWebServiceResponse {
    private DBInstanceAutomatedBackup _dbInstanceAutomatedBackup;
    public DBInstanceAutomatedBackup DBInstanceAutomatedBackup { get; public set; }
    public DBInstanceAutomatedBackup get_DBInstanceAutomatedBackup();
    public void set_DBInstanceAutomatedBackup(DBInstanceAutomatedBackup value);
    internal bool IsSetDBInstanceAutomatedBackup();
}
public class Amazon.RDS.Model.DeleteDBInstanceRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private Nullable`1<bool> _deleteAutomatedBackups;
    private string _finalDBSnapshotIdentifier;
    private Nullable`1<bool> _skipFinalSnapshot;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public Nullable`1<bool> DeleteAutomatedBackups { get; public set; }
    public string FinalDBSnapshotIdentifier { get; public set; }
    public Nullable`1<bool> SkipFinalSnapshot { get; public set; }
    public DeleteDBInstanceRequest(string dbInstanceIdentifier);
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public Nullable`1<bool> get_DeleteAutomatedBackups();
    public void set_DeleteAutomatedBackups(Nullable`1<bool> value);
    internal bool IsSetDeleteAutomatedBackups();
    public string get_FinalDBSnapshotIdentifier();
    public void set_FinalDBSnapshotIdentifier(string value);
    internal bool IsSetFinalDBSnapshotIdentifier();
    public Nullable`1<bool> get_SkipFinalSnapshot();
    public void set_SkipFinalSnapshot(Nullable`1<bool> value);
    internal bool IsSetSkipFinalSnapshot();
}
public class Amazon.RDS.Model.DeleteDBInstanceResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.DeleteDBParameterGroupRequest : AmazonRDSRequest {
    private string _dbParameterGroupName;
    [AWSPropertyAttribute]
public string DBParameterGroupName { get; public set; }
    public DeleteDBParameterGroupRequest(string dbParameterGroupName);
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
}
public class Amazon.RDS.Model.DeleteDBParameterGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.DeleteDBProxyEndpointRequest : AmazonRDSRequest {
    private string _dbProxyEndpointName;
    [AWSPropertyAttribute]
public string DBProxyEndpointName { get; public set; }
    public string get_DBProxyEndpointName();
    public void set_DBProxyEndpointName(string value);
    internal bool IsSetDBProxyEndpointName();
}
public class Amazon.RDS.Model.DeleteDBProxyEndpointResponse : AmazonWebServiceResponse {
    private DBProxyEndpoint _dbProxyEndpoint;
    public DBProxyEndpoint DBProxyEndpoint { get; public set; }
    public DBProxyEndpoint get_DBProxyEndpoint();
    public void set_DBProxyEndpoint(DBProxyEndpoint value);
    internal bool IsSetDBProxyEndpoint();
}
public class Amazon.RDS.Model.DeleteDBProxyRequest : AmazonRDSRequest {
    private string _dbProxyName;
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
}
public class Amazon.RDS.Model.DeleteDBProxyResponse : AmazonWebServiceResponse {
    private DBProxy _dbProxy;
    public DBProxy DBProxy { get; public set; }
    public DBProxy get_DBProxy();
    public void set_DBProxy(DBProxy value);
    internal bool IsSetDBProxy();
}
public class Amazon.RDS.Model.DeleteDBSecurityGroupRequest : AmazonRDSRequest {
    private string _dbSecurityGroupName;
    [AWSPropertyAttribute]
public string DBSecurityGroupName { get; public set; }
    public DeleteDBSecurityGroupRequest(string dbSecurityGroupName);
    public string get_DBSecurityGroupName();
    public void set_DBSecurityGroupName(string value);
    internal bool IsSetDBSecurityGroupName();
}
public class Amazon.RDS.Model.DeleteDBSecurityGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.DeleteDBShardGroupRequest : AmazonRDSRequest {
    private string _dbShardGroupIdentifier;
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
}
public class Amazon.RDS.Model.DeleteDBShardGroupResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _computeRedundancy;
    private string _dbClusterIdentifier;
    private string _dbShardGroupIdentifier;
    private string _dbShardGroupResourceId;
    private string _endpoint;
    private Nullable`1<double> _maxACU;
    private Nullable`1<double> _minACU;
    private Nullable`1<bool> _publiclyAccessible;
    private string _status;
    public Nullable`1<int> ComputeRedundancy { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public string DBShardGroupResourceId { get; public set; }
    public string Endpoint { get; public set; }
    public Nullable`1<double> MaxACU { get; public set; }
    public Nullable`1<double> MinACU { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<int> get_ComputeRedundancy();
    public void set_ComputeRedundancy(Nullable`1<int> value);
    internal bool IsSetComputeRedundancy();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public string get_DBShardGroupResourceId();
    public void set_DBShardGroupResourceId(string value);
    internal bool IsSetDBShardGroupResourceId();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public Nullable`1<double> get_MaxACU();
    public void set_MaxACU(Nullable`1<double> value);
    internal bool IsSetMaxACU();
    public Nullable`1<double> get_MinACU();
    public void set_MinACU(Nullable`1<double> value);
    internal bool IsSetMinACU();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DeleteDBSnapshotRequest : AmazonRDSRequest {
    private string _dbSnapshotIdentifier;
    [AWSPropertyAttribute]
public string DBSnapshotIdentifier { get; public set; }
    public DeleteDBSnapshotRequest(string dbSnapshotIdentifier);
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
}
public class Amazon.RDS.Model.DeleteDBSnapshotResponse : AmazonWebServiceResponse {
    private DBSnapshot _dbSnapshot;
    public DBSnapshot DBSnapshot { get; public set; }
    public DBSnapshot get_DBSnapshot();
    public void set_DBSnapshot(DBSnapshot value);
    internal bool IsSetDBSnapshot();
}
public class Amazon.RDS.Model.DeleteDBSubnetGroupRequest : AmazonRDSRequest {
    private string _dbSubnetGroupName;
    [AWSPropertyAttribute]
public string DBSubnetGroupName { get; public set; }
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
}
public class Amazon.RDS.Model.DeleteDBSubnetGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.DeleteEventSubscriptionRequest : AmazonRDSRequest {
    private string _subscriptionName;
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.RDS.Model.DeleteEventSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.RDS.Model.DeleteGlobalClusterRequest : AmazonRDSRequest {
    private string _globalClusterIdentifier;
    [AWSPropertyAttribute]
public string GlobalClusterIdentifier { get; public set; }
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
}
public class Amazon.RDS.Model.DeleteGlobalClusterResponse : AmazonWebServiceResponse {
    private GlobalCluster _globalCluster;
    public GlobalCluster GlobalCluster { get; public set; }
    public GlobalCluster get_GlobalCluster();
    public void set_GlobalCluster(GlobalCluster value);
    internal bool IsSetGlobalCluster();
}
public class Amazon.RDS.Model.DeleteIntegrationRequest : AmazonRDSRequest {
    private string _integrationIdentifier;
    [AWSPropertyAttribute]
public string IntegrationIdentifier { get; public set; }
    public string get_IntegrationIdentifier();
    public void set_IntegrationIdentifier(string value);
    internal bool IsSetIntegrationIdentifier();
}
public class Amazon.RDS.Model.DeleteIntegrationResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _additionalEncryptionContext;
    private Nullable`1<DateTime> _createTime;
    private string _dataFilter;
    private string _description;
    private List`1<IntegrationError> _errors;
    private string _integrationArn;
    private string _integrationName;
    private string _kmsKeyId;
    private string _sourceArn;
    private IntegrationStatus _status;
    private List`1<Tag> _tags;
    private string _targetArn;
    public Dictionary`2<string, string> AdditionalEncryptionContext { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string DataFilter { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<IntegrationError> Errors { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationArn { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationName { get; public set; }
    public string KMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public IntegrationStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetArn { get; public set; }
    public Dictionary`2<string, string> get_AdditionalEncryptionContext();
    public void set_AdditionalEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalEncryptionContext();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_DataFilter();
    public void set_DataFilter(string value);
    internal bool IsSetDataFilter();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<IntegrationError> get_Errors();
    public void set_Errors(List`1<IntegrationError> value);
    internal bool IsSetErrors();
    public string get_IntegrationArn();
    public void set_IntegrationArn(string value);
    internal bool IsSetIntegrationArn();
    public string get_IntegrationName();
    public void set_IntegrationName(string value);
    internal bool IsSetIntegrationName();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public IntegrationStatus get_Status();
    public void set_Status(IntegrationStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.RDS.Model.DeleteOptionGroupRequest : AmazonRDSRequest {
    private string _optionGroupName;
    [AWSPropertyAttribute]
public string OptionGroupName { get; public set; }
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
}
public class Amazon.RDS.Model.DeleteOptionGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.DeleteTenantDatabaseRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _finalDBSnapshotIdentifier;
    private Nullable`1<bool> _skipFinalSnapshot;
    private string _tenantDBName;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string FinalDBSnapshotIdentifier { get; public set; }
    public Nullable`1<bool> SkipFinalSnapshot { get; public set; }
    [AWSPropertyAttribute]
public string TenantDBName { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_FinalDBSnapshotIdentifier();
    public void set_FinalDBSnapshotIdentifier(string value);
    internal bool IsSetFinalDBSnapshotIdentifier();
    public Nullable`1<bool> get_SkipFinalSnapshot();
    public void set_SkipFinalSnapshot(Nullable`1<bool> value);
    internal bool IsSetSkipFinalSnapshot();
    public string get_TenantDBName();
    public void set_TenantDBName(string value);
    internal bool IsSetTenantDBName();
}
public class Amazon.RDS.Model.DeleteTenantDatabaseResponse : AmazonWebServiceResponse {
    private TenantDatabase _tenantDatabase;
    public TenantDatabase TenantDatabase { get; public set; }
    public TenantDatabase get_TenantDatabase();
    public void set_TenantDatabase(TenantDatabase value);
    internal bool IsSetTenantDatabase();
}
public class Amazon.RDS.Model.DeregisterDBProxyTargetsRequest : AmazonRDSRequest {
    private List`1<string> _dbClusterIdentifiers;
    private List`1<string> _dbInstanceIdentifiers;
    private string _dbProxyName;
    private string _targetGroupName;
    public List`1<string> DBClusterIdentifiers { get; public set; }
    public List`1<string> DBInstanceIdentifiers { get; public set; }
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public string TargetGroupName { get; public set; }
    public List`1<string> get_DBClusterIdentifiers();
    public void set_DBClusterIdentifiers(List`1<string> value);
    internal bool IsSetDBClusterIdentifiers();
    public List`1<string> get_DBInstanceIdentifiers();
    public void set_DBInstanceIdentifiers(List`1<string> value);
    internal bool IsSetDBInstanceIdentifiers();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public string get_TargetGroupName();
    public void set_TargetGroupName(string value);
    internal bool IsSetTargetGroupName();
}
public class Amazon.RDS.Model.DeregisterDBProxyTargetsResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.DescribeAccountAttributesRequest : AmazonRDSRequest {
}
public class Amazon.RDS.Model.DescribeAccountAttributesResponse : AmazonWebServiceResponse {
    private List`1<AccountQuota> _accountQuotas;
    public List`1<AccountQuota> AccountQuotas { get; public set; }
    public List`1<AccountQuota> get_AccountQuotas();
    public void set_AccountQuotas(List`1<AccountQuota> value);
    internal bool IsSetAccountQuotas();
}
public class Amazon.RDS.Model.DescribeBlueGreenDeploymentsRequest : AmazonRDSRequest {
    private string _blueGreenDeploymentIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string BlueGreenDeploymentIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string get_BlueGreenDeploymentIdentifier();
    public void set_BlueGreenDeploymentIdentifier(string value);
    internal bool IsSetBlueGreenDeploymentIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeBlueGreenDeploymentsResponse : AmazonWebServiceResponse {
    private List`1<BlueGreenDeployment> _blueGreenDeployments;
    private string _marker;
    public List`1<BlueGreenDeployment> BlueGreenDeployments { get; public set; }
    public string Marker { get; public set; }
    public List`1<BlueGreenDeployment> get_BlueGreenDeployments();
    public void set_BlueGreenDeployments(List`1<BlueGreenDeployment> value);
    internal bool IsSetBlueGreenDeployments();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeCertificatesRequest : AmazonRDSRequest {
    private string _certificateIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string CertificateIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_CertificateIdentifier();
    public void set_CertificateIdentifier(string value);
    internal bool IsSetCertificateIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeCertificatesResponse : AmazonWebServiceResponse {
    private List`1<Certificate> _certificates;
    private string _defaultCertificateForNewLaunches;
    private string _marker;
    public List`1<Certificate> Certificates { get; public set; }
    public string DefaultCertificateForNewLaunches { get; public set; }
    public string Marker { get; public set; }
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public string get_DefaultCertificateForNewLaunches();
    public void set_DefaultCertificateForNewLaunches(string value);
    internal bool IsSetDefaultCertificateForNewLaunches();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBClusterAutomatedBackupsRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private string _dbClusterResourceId;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBClusterIdentifier { get; public set; }
    public string DbClusterResourceId { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DbClusterResourceId();
    public void set_DbClusterResourceId(string value);
    internal bool IsSetDbClusterResourceId();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBClusterAutomatedBackupsResponse : AmazonWebServiceResponse {
    private List`1<DBClusterAutomatedBackup> _dbClusterAutomatedBackups;
    private string _marker;
    public List`1<DBClusterAutomatedBackup> DBClusterAutomatedBackups { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBClusterAutomatedBackup> get_DBClusterAutomatedBackups();
    public void set_DBClusterAutomatedBackups(List`1<DBClusterAutomatedBackup> value);
    internal bool IsSetDBClusterAutomatedBackups();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBClusterBacktracksRequest : AmazonRDSRequest {
    private string _backtrackIdentifier;
    private string _dbClusterIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string BacktrackIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_BacktrackIdentifier();
    public void set_BacktrackIdentifier(string value);
    internal bool IsSetBacktrackIdentifier();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBClusterBacktracksResponse : AmazonWebServiceResponse {
    private List`1<DBClusterBacktrack> _dbClusterBacktracks;
    private string _marker;
    public List`1<DBClusterBacktrack> DBClusterBacktracks { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBClusterBacktrack> get_DBClusterBacktracks();
    public void set_DBClusterBacktracks(List`1<DBClusterBacktrack> value);
    internal bool IsSetDBClusterBacktracks();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBClusterEndpointsRequest : AmazonRDSRequest {
    private string _dbClusterEndpointIdentifier;
    private string _dbClusterIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBClusterEndpointIdentifier { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBClusterEndpointsResponse : AmazonWebServiceResponse {
    private List`1<DBClusterEndpoint> _dbClusterEndpoints;
    private string _marker;
    public List`1<DBClusterEndpoint> DBClusterEndpoints { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBClusterEndpoint> get_DBClusterEndpoints();
    public void set_DBClusterEndpoints(List`1<DBClusterEndpoint> value);
    internal bool IsSetDBClusterEndpoints();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBClusterParameterGroupsRequest : AmazonRDSRequest {
    private string _dbClusterParameterGroupName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBClusterParameterGroupName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBClusterParameterGroupsResponse : AmazonWebServiceResponse {
    private List`1<DBClusterParameterGroup> _dbClusterParameterGroups;
    private string _marker;
    public List`1<DBClusterParameterGroup> DBClusterParameterGroups { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBClusterParameterGroup> get_DBClusterParameterGroups();
    public void set_DBClusterParameterGroups(List`1<DBClusterParameterGroup> value);
    internal bool IsSetDBClusterParameterGroups();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBClusterParametersRequest : AmazonRDSRequest {
    private string _dbClusterParameterGroupName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _source;
    [AWSPropertyAttribute]
public string DBClusterParameterGroupName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string Source { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
}
public class Amazon.RDS.Model.DescribeDBClusterParametersResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<Parameter> _parameters;
    public string Marker { get; public set; }
    public List`1<Parameter> Parameters { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
}
public class Amazon.RDS.Model.DescribeDBClusterSnapshotAttributesRequest : AmazonRDSRequest {
    private string _dbClusterSnapshotIdentifier;
    [AWSPropertyAttribute]
public string DBClusterSnapshotIdentifier { get; public set; }
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
}
public class Amazon.RDS.Model.DescribeDBClusterSnapshotAttributesResponse : AmazonWebServiceResponse {
    private DBClusterSnapshotAttributesResult _dbClusterSnapshotAttributesResult;
    public DBClusterSnapshotAttributesResult DBClusterSnapshotAttributesResult { get; public set; }
    public DBClusterSnapshotAttributesResult get_DBClusterSnapshotAttributesResult();
    public void set_DBClusterSnapshotAttributesResult(DBClusterSnapshotAttributesResult value);
    internal bool IsSetDBClusterSnapshotAttributesResult();
}
public class Amazon.RDS.Model.DescribeDBClusterSnapshotsRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private string _dbClusterResourceId;
    private string _dbClusterSnapshotIdentifier;
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includePublic;
    private Nullable`1<bool> _includeShared;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _snapshotType;
    public string DBClusterIdentifier { get; public set; }
    public string DbClusterResourceId { get; public set; }
    public string DBClusterSnapshotIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludePublic { get; public set; }
    public Nullable`1<bool> IncludeShared { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string SnapshotType { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DbClusterResourceId();
    public void set_DbClusterResourceId(string value);
    internal bool IsSetDbClusterResourceId();
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludePublic();
    public void set_IncludePublic(Nullable`1<bool> value);
    internal bool IsSetIncludePublic();
    public Nullable`1<bool> get_IncludeShared();
    public void set_IncludeShared(Nullable`1<bool> value);
    internal bool IsSetIncludeShared();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SnapshotType();
    public void set_SnapshotType(string value);
    internal bool IsSetSnapshotType();
}
public class Amazon.RDS.Model.DescribeDBClusterSnapshotsResponse : AmazonWebServiceResponse {
    private List`1<DBClusterSnapshot> _dbClusterSnapshots;
    private string _marker;
    public List`1<DBClusterSnapshot> DBClusterSnapshots { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBClusterSnapshot> get_DBClusterSnapshots();
    public void set_DBClusterSnapshots(List`1<DBClusterSnapshot> value);
    internal bool IsSetDBClusterSnapshots();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBClustersRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includeShared;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBClusterIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludeShared { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludeShared();
    public void set_IncludeShared(Nullable`1<bool> value);
    internal bool IsSetIncludeShared();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBClustersResponse : AmazonWebServiceResponse {
    private List`1<DBCluster> _dbClusters;
    private string _marker;
    public List`1<DBCluster> DBClusters { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBCluster> get_DBClusters();
    public void set_DBClusters(List`1<DBCluster> value);
    internal bool IsSetDBClusters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeDBEngineVersionsPaginator : object {
    private IAmazonRDS _client;
    private DescribeDBEngineVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDBEngineVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBEngineVersion> DBEngineVersions { get; }
    internal DescribeDBEngineVersionsPaginator(IAmazonRDS client, DescribeDBEngineVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDBEngineVersionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DBEngineVersion> get_DBEngineVersions();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeDBEngineVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeDBEngineVersionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDBEngineVersionsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeDBEngineVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeDBEngineVersionsRequest : AmazonRDSRequest {
    private string _dbParameterGroupFamily;
    private Nullable`1<bool> _defaultOnly;
    private string _engine;
    private string _engineVersion;
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includeAll;
    private Nullable`1<bool> _listSupportedCharacterSets;
    private Nullable`1<bool> _listSupportedTimezones;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBParameterGroupFamily { get; public set; }
    public Nullable`1<bool> DefaultOnly { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludeAll { get; public set; }
    public Nullable`1<bool> ListSupportedCharacterSets { get; public set; }
    public Nullable`1<bool> ListSupportedTimezones { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public Nullable`1<bool> get_DefaultOnly();
    public void set_DefaultOnly(Nullable`1<bool> value);
    internal bool IsSetDefaultOnly();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludeAll();
    public void set_IncludeAll(Nullable`1<bool> value);
    internal bool IsSetIncludeAll();
    public Nullable`1<bool> get_ListSupportedCharacterSets();
    public void set_ListSupportedCharacterSets(Nullable`1<bool> value);
    internal bool IsSetListSupportedCharacterSets();
    public Nullable`1<bool> get_ListSupportedTimezones();
    public void set_ListSupportedTimezones(Nullable`1<bool> value);
    internal bool IsSetListSupportedTimezones();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBEngineVersionsResponse : AmazonWebServiceResponse {
    private List`1<DBEngineVersion> _dbEngineVersions;
    private string _marker;
    public List`1<DBEngineVersion> DBEngineVersions { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBEngineVersion> get_DBEngineVersions();
    public void set_DBEngineVersions(List`1<DBEngineVersion> value);
    internal bool IsSetDBEngineVersions();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBInstanceAutomatedBackupsRequest : AmazonRDSRequest {
    private string _dbInstanceAutomatedBackupsArn;
    private string _dbInstanceIdentifier;
    private string _dbiResourceId;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBInstanceAutomatedBackupsArn { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public string DbiResourceId { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBInstanceAutomatedBackupsArn();
    public void set_DBInstanceAutomatedBackupsArn(string value);
    internal bool IsSetDBInstanceAutomatedBackupsArn();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBInstanceAutomatedBackupsResponse : AmazonWebServiceResponse {
    private List`1<DBInstanceAutomatedBackup> _dbInstanceAutomatedBackups;
    private string _marker;
    public List`1<DBInstanceAutomatedBackup> DBInstanceAutomatedBackups { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBInstanceAutomatedBackup> get_DBInstanceAutomatedBackups();
    public void set_DBInstanceAutomatedBackups(List`1<DBInstanceAutomatedBackup> value);
    internal bool IsSetDBInstanceAutomatedBackups();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeDBInstancesPaginator : object {
    private IAmazonRDS _client;
    private DescribeDBInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDBInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBInstance> DBInstances { get; }
    internal DescribeDBInstancesPaginator(IAmazonRDS client, DescribeDBInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDBInstancesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DBInstance> get_DBInstances();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeDBInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeDBInstancesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDBInstancesResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeDBInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeDBInstancesRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBInstanceIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBInstancesResponse : AmazonWebServiceResponse {
    private List`1<DBInstance> _dbInstances;
    private string _marker;
    public List`1<DBInstance> DBInstances { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBInstance> get_DBInstances();
    public void set_DBInstances(List`1<DBInstance> value);
    internal bool IsSetDBInstances();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBLogFilesDetails : object {
    private Nullable`1<long> _lastWritten;
    private string _logFileName;
    private Nullable`1<long> _size;
    public Nullable`1<long> LastWritten { get; public set; }
    public string LogFileName { get; public set; }
    public Nullable`1<long> Size { get; public set; }
    public Nullable`1<long> get_LastWritten();
    public void set_LastWritten(Nullable`1<long> value);
    internal bool IsSetLastWritten();
    public string get_LogFileName();
    public void set_LogFileName(string value);
    internal bool IsSetLogFileName();
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    internal bool IsSetSize();
}
public class Amazon.RDS.Model.DescribeDBLogFilesRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private Nullable`1<long> _fileLastWritten;
    private string _filenameContains;
    private Nullable`1<long> _fileSize;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public Nullable`1<long> FileLastWritten { get; public set; }
    public string FilenameContains { get; public set; }
    public Nullable`1<long> FileSize { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public Nullable`1<long> get_FileLastWritten();
    public void set_FileLastWritten(Nullable`1<long> value);
    internal bool IsSetFileLastWritten();
    public string get_FilenameContains();
    public void set_FilenameContains(string value);
    internal bool IsSetFilenameContains();
    public Nullable`1<long> get_FileSize();
    public void set_FileSize(Nullable`1<long> value);
    internal bool IsSetFileSize();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBLogFilesResponse : AmazonWebServiceResponse {
    private List`1<DescribeDBLogFilesDetails> _describeDBLogFiles;
    private string _marker;
    public List`1<DescribeDBLogFilesDetails> DescribeDBLogFiles { get; public set; }
    public string Marker { get; public set; }
    public List`1<DescribeDBLogFilesDetails> get_DescribeDBLogFiles();
    public void set_DescribeDBLogFiles(List`1<DescribeDBLogFilesDetails> value);
    internal bool IsSetDescribeDBLogFiles();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeDBParameterGroupsPaginator : object {
    private IAmazonRDS _client;
    private DescribeDBParameterGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDBParameterGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBParameterGroup> DBParameterGroups { get; }
    internal DescribeDBParameterGroupsPaginator(IAmazonRDS client, DescribeDBParameterGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDBParameterGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DBParameterGroup> get_DBParameterGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeDBParameterGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeDBParameterGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDBParameterGroupsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeDBParameterGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeDBParameterGroupsRequest : AmazonRDSRequest {
    private string _dbParameterGroupName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBParameterGroupName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBParameterGroupsResponse : AmazonWebServiceResponse {
    private List`1<DBParameterGroup> _dbParameterGroups;
    private string _marker;
    public List`1<DBParameterGroup> DBParameterGroups { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBParameterGroup> get_DBParameterGroups();
    public void set_DBParameterGroups(List`1<DBParameterGroup> value);
    internal bool IsSetDBParameterGroups();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeDBParametersPaginator : object {
    private IAmazonRDS _client;
    private DescribeDBParametersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDBParametersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Parameter> Parameters { get; }
    internal DescribeDBParametersPaginator(IAmazonRDS client, DescribeDBParametersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDBParametersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Parameter> get_Parameters();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeDBParametersPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeDBParametersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDBParametersResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeDBParametersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeDBParametersRequest : AmazonRDSRequest {
    private string _dbParameterGroupName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _source;
    [AWSPropertyAttribute]
public string DBParameterGroupName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string Source { get; public set; }
    public DescribeDBParametersRequest(string dbParameterGroupName);
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
}
public class Amazon.RDS.Model.DescribeDBParametersResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<Parameter> _parameters;
    public string Marker { get; public set; }
    public List`1<Parameter> Parameters { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
}
public class Amazon.RDS.Model.DescribeDBProxiesRequest : AmazonRDSRequest {
    private string _dbProxyName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBProxyName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBProxiesResponse : AmazonWebServiceResponse {
    private List`1<DBProxy> _dbProxies;
    private string _marker;
    public List`1<DBProxy> DBProxies { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBProxy> get_DBProxies();
    public void set_DBProxies(List`1<DBProxy> value);
    internal bool IsSetDBProxies();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBProxyEndpointsRequest : AmazonRDSRequest {
    private string _dbProxyEndpointName;
    private string _dbProxyName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string DBProxyEndpointName { get; public set; }
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBProxyEndpointName();
    public void set_DBProxyEndpointName(string value);
    internal bool IsSetDBProxyEndpointName();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBProxyEndpointsResponse : AmazonWebServiceResponse {
    private List`1<DBProxyEndpoint> _dbProxyEndpoints;
    private string _marker;
    public List`1<DBProxyEndpoint> DBProxyEndpoints { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBProxyEndpoint> get_DBProxyEndpoints();
    public void set_DBProxyEndpoints(List`1<DBProxyEndpoint> value);
    internal bool IsSetDBProxyEndpoints();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBProxyTargetGroupsRequest : AmazonRDSRequest {
    private string _dbProxyName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _targetGroupName;
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string TargetGroupName { get; public set; }
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_TargetGroupName();
    public void set_TargetGroupName(string value);
    internal bool IsSetTargetGroupName();
}
public class Amazon.RDS.Model.DescribeDBProxyTargetGroupsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<DBProxyTargetGroup> _targetGroups;
    public string Marker { get; public set; }
    public List`1<DBProxyTargetGroup> TargetGroups { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<DBProxyTargetGroup> get_TargetGroups();
    public void set_TargetGroups(List`1<DBProxyTargetGroup> value);
    internal bool IsSetTargetGroups();
}
public class Amazon.RDS.Model.DescribeDBProxyTargetsRequest : AmazonRDSRequest {
    private string _dbProxyName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _targetGroupName;
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string TargetGroupName { get; public set; }
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_TargetGroupName();
    public void set_TargetGroupName(string value);
    internal bool IsSetTargetGroupName();
}
public class Amazon.RDS.Model.DescribeDBProxyTargetsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<DBProxyTarget> _targets;
    public string Marker { get; public set; }
    public List`1<DBProxyTarget> Targets { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<DBProxyTarget> get_Targets();
    public void set_Targets(List`1<DBProxyTarget> value);
    internal bool IsSetTargets();
}
public class Amazon.RDS.Model.DescribeDBRecommendationsRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private Nullable`1<DateTime> _lastUpdatedAfter;
    private Nullable`1<DateTime> _lastUpdatedBefore;
    private string _locale;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<DateTime> LastUpdatedAfter { get; public set; }
    public Nullable`1<DateTime> LastUpdatedBefore { get; public set; }
    public string Locale { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<DateTime> get_LastUpdatedAfter();
    public void set_LastUpdatedAfter(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedAfter();
    public Nullable`1<DateTime> get_LastUpdatedBefore();
    public void set_LastUpdatedBefore(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedBefore();
    public string get_Locale();
    public void set_Locale(string value);
    internal bool IsSetLocale();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBRecommendationsResponse : AmazonWebServiceResponse {
    private List`1<DBRecommendation> _dbRecommendations;
    private string _marker;
    public List`1<DBRecommendation> DBRecommendations { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBRecommendation> get_DBRecommendations();
    public void set_DBRecommendations(List`1<DBRecommendation> value);
    internal bool IsSetDBRecommendations();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeDBSecurityGroupsPaginator : object {
    private IAmazonRDS _client;
    private DescribeDBSecurityGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDBSecurityGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBSecurityGroup> DBSecurityGroups { get; }
    internal DescribeDBSecurityGroupsPaginator(IAmazonRDS client, DescribeDBSecurityGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDBSecurityGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DBSecurityGroup> get_DBSecurityGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeDBSecurityGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeDBSecurityGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDBSecurityGroupsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeDBSecurityGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeDBSecurityGroupsRequest : AmazonRDSRequest {
    private string _dbSecurityGroupName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBSecurityGroupName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBSecurityGroupName();
    public void set_DBSecurityGroupName(string value);
    internal bool IsSetDBSecurityGroupName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBSecurityGroupsResponse : AmazonWebServiceResponse {
    private List`1<DBSecurityGroup> _dbSecurityGroups;
    private string _marker;
    public List`1<DBSecurityGroup> DBSecurityGroups { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBSecurityGroup> get_DBSecurityGroups();
    public void set_DBSecurityGroups(List`1<DBSecurityGroup> value);
    internal bool IsSetDBSecurityGroups();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBShardGroupsRequest : AmazonRDSRequest {
    private string _dbShardGroupIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBShardGroupsResponse : AmazonWebServiceResponse {
    private List`1<DBShardGroup> _dbShardGroups;
    private string _marker;
    public List`1<DBShardGroup> DBShardGroups { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBShardGroup> get_DBShardGroups();
    public void set_DBShardGroups(List`1<DBShardGroup> value);
    internal bool IsSetDBShardGroups();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBSnapshotAttributesRequest : AmazonRDSRequest {
    private string _dbSnapshotIdentifier;
    [AWSPropertyAttribute]
public string DBSnapshotIdentifier { get; public set; }
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
}
public class Amazon.RDS.Model.DescribeDBSnapshotAttributesResponse : AmazonWebServiceResponse {
    private DBSnapshotAttributesResult _dbSnapshotAttributesResult;
    public DBSnapshotAttributesResult DBSnapshotAttributesResult { get; public set; }
    public DBSnapshotAttributesResult get_DBSnapshotAttributesResult();
    public void set_DBSnapshotAttributesResult(DBSnapshotAttributesResult value);
    internal bool IsSetDBSnapshotAttributesResult();
}
internal class Amazon.RDS.Model.DescribeDBSnapshotsPaginator : object {
    private IAmazonRDS _client;
    private DescribeDBSnapshotsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDBSnapshotsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBSnapshot> DBSnapshots { get; }
    internal DescribeDBSnapshotsPaginator(IAmazonRDS client, DescribeDBSnapshotsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDBSnapshotsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DBSnapshot> get_DBSnapshots();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeDBSnapshotsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeDBSnapshotsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDBSnapshotsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeDBSnapshotsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeDBSnapshotsRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _dbiResourceId;
    private string _dbSnapshotIdentifier;
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includePublic;
    private Nullable`1<bool> _includeShared;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _snapshotType;
    public string DBInstanceIdentifier { get; public set; }
    public string DbiResourceId { get; public set; }
    public string DBSnapshotIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludePublic { get; public set; }
    public Nullable`1<bool> IncludeShared { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string SnapshotType { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludePublic();
    public void set_IncludePublic(Nullable`1<bool> value);
    internal bool IsSetIncludePublic();
    public Nullable`1<bool> get_IncludeShared();
    public void set_IncludeShared(Nullable`1<bool> value);
    internal bool IsSetIncludeShared();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SnapshotType();
    public void set_SnapshotType(string value);
    internal bool IsSetSnapshotType();
}
public class Amazon.RDS.Model.DescribeDBSnapshotsResponse : AmazonWebServiceResponse {
    private List`1<DBSnapshot> _dbSnapshots;
    private string _marker;
    public List`1<DBSnapshot> DBSnapshots { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBSnapshot> get_DBSnapshots();
    public void set_DBSnapshots(List`1<DBSnapshot> value);
    internal bool IsSetDBSnapshots();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeDBSnapshotTenantDatabasesRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _dbiResourceId;
    private string _dbSnapshotIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _snapshotType;
    public string DBInstanceIdentifier { get; public set; }
    public string DbiResourceId { get; public set; }
    public string DBSnapshotIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string SnapshotType { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SnapshotType();
    public void set_SnapshotType(string value);
    internal bool IsSetSnapshotType();
}
public class Amazon.RDS.Model.DescribeDBSnapshotTenantDatabasesResponse : AmazonWebServiceResponse {
    private List`1<DBSnapshotTenantDatabase> _dbSnapshotTenantDatabases;
    private string _marker;
    public List`1<DBSnapshotTenantDatabase> DBSnapshotTenantDatabases { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBSnapshotTenantDatabase> get_DBSnapshotTenantDatabases();
    public void set_DBSnapshotTenantDatabases(List`1<DBSnapshotTenantDatabase> value);
    internal bool IsSetDBSnapshotTenantDatabases();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeDBSubnetGroupsPaginator : object {
    private IAmazonRDS _client;
    private DescribeDBSubnetGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDBSubnetGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBSubnetGroup> DBSubnetGroups { get; }
    internal DescribeDBSubnetGroupsPaginator(IAmazonRDS client, DescribeDBSubnetGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDBSubnetGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DBSubnetGroup> get_DBSubnetGroups();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeDBSubnetGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeDBSubnetGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeDBSubnetGroupsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeDBSubnetGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeDBSubnetGroupsRequest : AmazonRDSRequest {
    private string _dbSubnetGroupName;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string DBSubnetGroupName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeDBSubnetGroupsResponse : AmazonWebServiceResponse {
    private List`1<DBSubnetGroup> _dbSubnetGroups;
    private string _marker;
    public List`1<DBSubnetGroup> DBSubnetGroups { get; public set; }
    public string Marker { get; public set; }
    public List`1<DBSubnetGroup> get_DBSubnetGroups();
    public void set_DBSubnetGroups(List`1<DBSubnetGroup> value);
    internal bool IsSetDBSubnetGroups();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeEngineDefaultClusterParametersRequest : AmazonRDSRequest {
    private string _dbParameterGroupFamily;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string DBParameterGroupFamily { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeEngineDefaultClusterParametersResponse : AmazonWebServiceResponse {
    private EngineDefaults _engineDefaults;
    public EngineDefaults EngineDefaults { get; public set; }
    public EngineDefaults get_EngineDefaults();
    public void set_EngineDefaults(EngineDefaults value);
    internal bool IsSetEngineDefaults();
}
internal class Amazon.RDS.Model.DescribeEngineDefaultParametersPaginator : object {
    private IAmazonRDS _client;
    private DescribeEngineDefaultParametersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEngineDefaultParametersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Parameter> Parameters { get; }
    internal DescribeEngineDefaultParametersPaginator(IAmazonRDS client, DescribeEngineDefaultParametersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEngineDefaultParametersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Parameter> get_Parameters();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeEngineDefaultParametersPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeEngineDefaultParametersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeEngineDefaultParametersResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeEngineDefaultParametersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeEngineDefaultParametersRequest : AmazonRDSRequest {
    private string _dbParameterGroupFamily;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string DBParameterGroupFamily { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public DescribeEngineDefaultParametersRequest(string dbParameterGroupFamily);
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeEngineDefaultParametersResponse : AmazonWebServiceResponse {
    private EngineDefaults _engineDefaults;
    public EngineDefaults EngineDefaults { get; public set; }
    public EngineDefaults get_EngineDefaults();
    public void set_EngineDefaults(EngineDefaults value);
    internal bool IsSetEngineDefaults();
}
public class Amazon.RDS.Model.DescribeEventCategoriesRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private string _sourceType;
    public List`1<Filter> Filters { get; public set; }
    public string SourceType { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
}
public class Amazon.RDS.Model.DescribeEventCategoriesResponse : AmazonWebServiceResponse {
    private List`1<EventCategoriesMap> _eventCategoriesMapList;
    public List`1<EventCategoriesMap> EventCategoriesMapList { get; public set; }
    public List`1<EventCategoriesMap> get_EventCategoriesMapList();
    public void set_EventCategoriesMapList(List`1<EventCategoriesMap> value);
    internal bool IsSetEventCategoriesMapList();
}
internal class Amazon.RDS.Model.DescribeEventsPaginator : object {
    private IAmazonRDS _client;
    private DescribeEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Event> Events { get; }
    internal DescribeEventsPaginator(IAmazonRDS client, DescribeEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEventsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Event> get_Events();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeEventsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeEventsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeEventsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeEventsRequest : AmazonRDSRequest {
    private Nullable`1<int> _duration;
    private Nullable`1<DateTime> _endTimeUtc;
    private List`1<string> _eventCategories;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _sourceIdentifier;
    private SourceType _sourceType;
    private Nullable`1<DateTime> _startTimeUtc;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<DateTime> EndTimeUtc { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string SourceIdentifier { get; public set; }
    public SourceType SourceType { get; public set; }
    public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc results in both EndTime and EndTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EndTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EndTime { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<DateTime> get_EndTimeUtc();
    public void set_EndTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetEndTimeUtc();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    internal bool IsSetSourceIdentifier();
    public SourceType get_SourceType();
    public void set_SourceType(SourceType value);
    internal bool IsSetSourceType();
    public Nullable`1<DateTime> get_StartTimeUtc();
    public void set_StartTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartTimeUtc();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
}
public class Amazon.RDS.Model.DescribeEventsResponse : AmazonWebServiceResponse {
    private List`1<Event> _events;
    private string _marker;
    public List`1<Event> Events { get; public set; }
    public string Marker { get; public set; }
    public List`1<Event> get_Events();
    public void set_Events(List`1<Event> value);
    internal bool IsSetEvents();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeEventSubscriptionsPaginator : object {
    private IAmazonRDS _client;
    private DescribeEventSubscriptionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<EventSubscription> EventSubscriptionsList { get; }
    internal DescribeEventSubscriptionsPaginator(IAmazonRDS client, DescribeEventSubscriptionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<EventSubscription> get_EventSubscriptionsList();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeEventSubscriptionsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeEventSubscriptionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeEventSubscriptionsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeEventSubscriptionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeEventSubscriptionsRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _subscriptionName;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string SubscriptionName { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.RDS.Model.DescribeEventSubscriptionsResponse : AmazonWebServiceResponse {
    private List`1<EventSubscription> _eventSubscriptionsList;
    private string _marker;
    public List`1<EventSubscription> EventSubscriptionsList { get; public set; }
    public string Marker { get; public set; }
    public List`1<EventSubscription> get_EventSubscriptionsList();
    public void set_EventSubscriptionsList(List`1<EventSubscription> value);
    internal bool IsSetEventSubscriptionsList();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeExportTasksRequest : AmazonRDSRequest {
    private string _exportTaskIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _sourceArn;
    private ExportSourceType _sourceType;
    public string ExportTaskIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string SourceArn { get; public set; }
    public ExportSourceType SourceType { get; public set; }
    public string get_ExportTaskIdentifier();
    public void set_ExportTaskIdentifier(string value);
    internal bool IsSetExportTaskIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public ExportSourceType get_SourceType();
    public void set_SourceType(ExportSourceType value);
    internal bool IsSetSourceType();
}
public class Amazon.RDS.Model.DescribeExportTasksResponse : AmazonWebServiceResponse {
    private List`1<ExportTask> _exportTasks;
    private string _marker;
    public List`1<ExportTask> ExportTasks { get; public set; }
    public string Marker { get; public set; }
    public List`1<ExportTask> get_ExportTasks();
    public void set_ExportTasks(List`1<ExportTask> value);
    internal bool IsSetExportTasks();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeGlobalClustersRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private string _globalClusterIdentifier;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string GlobalClusterIdentifier { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeGlobalClustersResponse : AmazonWebServiceResponse {
    private List`1<GlobalCluster> _globalClusters;
    private string _marker;
    public List`1<GlobalCluster> GlobalClusters { get; public set; }
    public string Marker { get; public set; }
    public List`1<GlobalCluster> get_GlobalClusters();
    public void set_GlobalClusters(List`1<GlobalCluster> value);
    internal bool IsSetGlobalClusters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.DescribeIntegrationsRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private string _integrationIdentifier;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_IntegrationIdentifier();
    public void set_IntegrationIdentifier(string value);
    internal bool IsSetIntegrationIdentifier();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeIntegrationsResponse : AmazonWebServiceResponse {
    private List`1<Integration> _integrations;
    private string _marker;
    public List`1<Integration> Integrations { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<Integration> get_Integrations();
    public void set_Integrations(List`1<Integration> value);
    internal bool IsSetIntegrations();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.RDS.Model.DescribeOptionGroupOptionsPaginator : object {
    private IAmazonRDS _client;
    private DescribeOptionGroupOptionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeOptionGroupOptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OptionGroupOption> OptionGroupOptions { get; }
    internal DescribeOptionGroupOptionsPaginator(IAmazonRDS client, DescribeOptionGroupOptionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeOptionGroupOptionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OptionGroupOption> get_OptionGroupOptions();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeOptionGroupOptionsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeOptionGroupOptionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeOptionGroupOptionsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeOptionGroupOptionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeOptionGroupOptionsRequest : AmazonRDSRequest {
    private string _engineName;
    private List`1<Filter> _filters;
    private string _majorEngineVersion;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string EngineName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.RDS.Model.DescribeOptionGroupOptionsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<OptionGroupOption> _optionGroupOptions;
    public string Marker { get; public set; }
    public List`1<OptionGroupOption> OptionGroupOptions { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<OptionGroupOption> get_OptionGroupOptions();
    public void set_OptionGroupOptions(List`1<OptionGroupOption> value);
    internal bool IsSetOptionGroupOptions();
}
internal class Amazon.RDS.Model.DescribeOptionGroupsPaginator : object {
    private IAmazonRDS _client;
    private DescribeOptionGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeOptionGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OptionGroup> OptionGroupsList { get; }
    internal DescribeOptionGroupsPaginator(IAmazonRDS client, DescribeOptionGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeOptionGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OptionGroup> get_OptionGroupsList();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeOptionGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeOptionGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeOptionGroupsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeOptionGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeOptionGroupsRequest : AmazonRDSRequest {
    private string _engineName;
    private List`1<Filter> _filters;
    private string _majorEngineVersion;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _optionGroupName;
    public string EngineName { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string OptionGroupName { get; public set; }
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
}
public class Amazon.RDS.Model.DescribeOptionGroupsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<OptionGroup> _optionGroupsList;
    public string Marker { get; public set; }
    public List`1<OptionGroup> OptionGroupsList { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<OptionGroup> get_OptionGroupsList();
    public void set_OptionGroupsList(List`1<OptionGroup> value);
    internal bool IsSetOptionGroupsList();
}
internal class Amazon.RDS.Model.DescribeOrderableDBInstanceOptionsPaginator : object {
    private IAmazonRDS _client;
    private DescribeOrderableDBInstanceOptionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeOrderableDBInstanceOptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OrderableDBInstanceOption> OrderableDBInstanceOptions { get; }
    internal DescribeOrderableDBInstanceOptionsPaginator(IAmazonRDS client, DescribeOrderableDBInstanceOptionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeOrderableDBInstanceOptionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OrderableDBInstanceOption> get_OrderableDBInstanceOptions();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeOrderableDBInstanceOptionsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeOrderableDBInstanceOptionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeOrderableDBInstanceOptionsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeOrderableDBInstanceOptionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeOrderableDBInstanceOptionsRequest : AmazonRDSRequest {
    private string _availabilityZoneGroup;
    private string _dbInstanceClass;
    private string _engine;
    private string _engineVersion;
    private List`1<Filter> _filters;
    private string _licenseModel;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private Nullable`1<bool> _vpc;
    public string AvailabilityZoneGroup { get; public set; }
    public string DBInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string LicenseModel { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public Nullable`1<bool> Vpc { get; public set; }
    public string get_AvailabilityZoneGroup();
    public void set_AvailabilityZoneGroup(string value);
    internal bool IsSetAvailabilityZoneGroup();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public Nullable`1<bool> get_Vpc();
    public void set_Vpc(Nullable`1<bool> value);
    internal bool IsSetVpc();
}
public class Amazon.RDS.Model.DescribeOrderableDBInstanceOptionsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<OrderableDBInstanceOption> _orderableDBInstanceOptions;
    public string Marker { get; public set; }
    public List`1<OrderableDBInstanceOption> OrderableDBInstanceOptions { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<OrderableDBInstanceOption> get_OrderableDBInstanceOptions();
    public void set_OrderableDBInstanceOptions(List`1<OrderableDBInstanceOption> value);
    internal bool IsSetOrderableDBInstanceOptions();
}
public class Amazon.RDS.Model.DescribePendingMaintenanceActionsRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _resourceIdentifier;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string ResourceIdentifier { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
}
public class Amazon.RDS.Model.DescribePendingMaintenanceActionsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ResourcePendingMaintenanceActions> _pendingMaintenanceActions;
    public string Marker { get; public set; }
    public List`1<ResourcePendingMaintenanceActions> PendingMaintenanceActions { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ResourcePendingMaintenanceActions> get_PendingMaintenanceActions();
    public void set_PendingMaintenanceActions(List`1<ResourcePendingMaintenanceActions> value);
    internal bool IsSetPendingMaintenanceActions();
}
internal class Amazon.RDS.Model.DescribeReservedDBInstancesOfferingsPaginator : object {
    private IAmazonRDS _client;
    private DescribeReservedDBInstancesOfferingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReservedDBInstancesOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedDBInstancesOffering> ReservedDBInstancesOfferings { get; }
    internal DescribeReservedDBInstancesOfferingsPaginator(IAmazonRDS client, DescribeReservedDBInstancesOfferingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReservedDBInstancesOfferingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ReservedDBInstancesOffering> get_ReservedDBInstancesOfferings();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeReservedDBInstancesOfferingsPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeReservedDBInstancesOfferingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeReservedDBInstancesOfferingsResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeReservedDBInstancesOfferingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeReservedDBInstancesOfferingsRequest : AmazonRDSRequest {
    private string _dbInstanceClass;
    private string _duration;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private Nullable`1<bool> _multiAZ;
    private string _offeringType;
    private string _productDescription;
    private string _reservedDBInstancesOfferingId;
    public string DBInstanceClass { get; public set; }
    public string Duration { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string OfferingType { get; public set; }
    public string ProductDescription { get; public set; }
    public string ReservedDBInstancesOfferingId { get; public set; }
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_Duration();
    public void set_Duration(string value);
    internal bool IsSetDuration();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_OfferingType();
    public void set_OfferingType(string value);
    internal bool IsSetOfferingType();
    public string get_ProductDescription();
    public void set_ProductDescription(string value);
    internal bool IsSetProductDescription();
    public string get_ReservedDBInstancesOfferingId();
    public void set_ReservedDBInstancesOfferingId(string value);
    internal bool IsSetReservedDBInstancesOfferingId();
}
public class Amazon.RDS.Model.DescribeReservedDBInstancesOfferingsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReservedDBInstancesOffering> _reservedDBInstancesOfferings;
    public string Marker { get; public set; }
    public List`1<ReservedDBInstancesOffering> ReservedDBInstancesOfferings { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReservedDBInstancesOffering> get_ReservedDBInstancesOfferings();
    public void set_ReservedDBInstancesOfferings(List`1<ReservedDBInstancesOffering> value);
    internal bool IsSetReservedDBInstancesOfferings();
}
internal class Amazon.RDS.Model.DescribeReservedDBInstancesPaginator : object {
    private IAmazonRDS _client;
    private DescribeReservedDBInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReservedDBInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedDBInstance> ReservedDBInstances { get; }
    internal DescribeReservedDBInstancesPaginator(IAmazonRDS client, DescribeReservedDBInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReservedDBInstancesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ReservedDBInstance> get_ReservedDBInstances();
    [AsyncIteratorStateMachineAttribute("Amazon.RDS.Model.DescribeReservedDBInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-RDS-Model-DescribeReservedDBInstancesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeReservedDBInstancesResponse> Amazon.Runtime.IPaginator<Amazon.RDS.Model.DescribeReservedDBInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.RDS.Model.DescribeReservedDBInstancesRequest : AmazonRDSRequest {
    private string _dbInstanceClass;
    private string _duration;
    private List`1<Filter> _filters;
    private string _leaseId;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private Nullable`1<bool> _multiAZ;
    private string _offeringType;
    private string _productDescription;
    private string _reservedDBInstanceId;
    private string _reservedDBInstancesOfferingId;
    public string DBInstanceClass { get; public set; }
    public string Duration { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string LeaseId { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string OfferingType { get; public set; }
    public string ProductDescription { get; public set; }
    public string ReservedDBInstanceId { get; public set; }
    public string ReservedDBInstancesOfferingId { get; public set; }
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_Duration();
    public void set_Duration(string value);
    internal bool IsSetDuration();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_LeaseId();
    public void set_LeaseId(string value);
    internal bool IsSetLeaseId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_OfferingType();
    public void set_OfferingType(string value);
    internal bool IsSetOfferingType();
    public string get_ProductDescription();
    public void set_ProductDescription(string value);
    internal bool IsSetProductDescription();
    public string get_ReservedDBInstanceId();
    public void set_ReservedDBInstanceId(string value);
    internal bool IsSetReservedDBInstanceId();
    public string get_ReservedDBInstancesOfferingId();
    public void set_ReservedDBInstancesOfferingId(string value);
    internal bool IsSetReservedDBInstancesOfferingId();
}
public class Amazon.RDS.Model.DescribeReservedDBInstancesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReservedDBInstance> _reservedDBInstances;
    public string Marker { get; public set; }
    public List`1<ReservedDBInstance> ReservedDBInstances { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReservedDBInstance> get_ReservedDBInstances();
    public void set_ReservedDBInstances(List`1<ReservedDBInstance> value);
    internal bool IsSetReservedDBInstances();
}
public class Amazon.RDS.Model.DescribeSourceRegionsRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _regionName;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string RegionName { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.RDS.Model.DescribeSourceRegionsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SourceRegion> _sourceRegions;
    public string Marker { get; public set; }
    public List`1<SourceRegion> SourceRegions { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SourceRegion> get_SourceRegions();
    public void set_SourceRegions(List`1<SourceRegion> value);
    internal bool IsSetSourceRegions();
}
public class Amazon.RDS.Model.DescribeTenantDatabasesRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _tenantDBName;
    public string DBInstanceIdentifier { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string TenantDBName { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_TenantDBName();
    public void set_TenantDBName(string value);
    internal bool IsSetTenantDBName();
}
public class Amazon.RDS.Model.DescribeTenantDatabasesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<TenantDatabase> _tenantDatabases;
    public string Marker { get; public set; }
    public List`1<TenantDatabase> TenantDatabases { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<TenantDatabase> get_TenantDatabases();
    public void set_TenantDatabases(List`1<TenantDatabase> value);
    internal bool IsSetTenantDatabases();
}
public class Amazon.RDS.Model.DescribeValidDBInstanceModificationsRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
}
public class Amazon.RDS.Model.DescribeValidDBInstanceModificationsResponse : AmazonWebServiceResponse {
    private ValidDBInstanceModificationsMessage _validDBInstanceModificationsMessage;
    public ValidDBInstanceModificationsMessage ValidDBInstanceModificationsMessage { get; public set; }
    public ValidDBInstanceModificationsMessage get_ValidDBInstanceModificationsMessage();
    public void set_ValidDBInstanceModificationsMessage(ValidDBInstanceModificationsMessage value);
    internal bool IsSetValidDBInstanceModificationsMessage();
}
public class Amazon.RDS.Model.DisableHttpEndpointRequest : AmazonRDSRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.RDS.Model.DisableHttpEndpointResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _httpEndpointEnabled;
    private string _resourceArn;
    public Nullable`1<bool> HttpEndpointEnabled { get; public set; }
    public string ResourceArn { get; public set; }
    public Nullable`1<bool> get_HttpEndpointEnabled();
    public void set_HttpEndpointEnabled(Nullable`1<bool> value);
    internal bool IsSetHttpEndpointEnabled();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.RDS.Model.DocLink : object {
    private string _text;
    private string _url;
    public string Text { get; public set; }
    public string Url { get; public set; }
    public string get_Text();
    public void set_Text(string value);
    internal bool IsSetText();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
}
public class Amazon.RDS.Model.DomainMembership : object {
    private string _authSecretArn;
    private List`1<string> _dnsIps;
    private string _domain;
    private string _fqdn;
    private string _iamRoleName;
    private string _ou;
    private string _status;
    public string AuthSecretArn { get; public set; }
    public List`1<string> DnsIps { get; public set; }
    public string Domain { get; public set; }
    public string FQDN { get; public set; }
    public string IAMRoleName { get; public set; }
    public string OU { get; public set; }
    public string Status { get; public set; }
    public string get_AuthSecretArn();
    public void set_AuthSecretArn(string value);
    internal bool IsSetAuthSecretArn();
    public List`1<string> get_DnsIps();
    public void set_DnsIps(List`1<string> value);
    internal bool IsSetDnsIps();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_FQDN();
    public void set_FQDN(string value);
    internal bool IsSetFQDN();
    public string get_IAMRoleName();
    public void set_IAMRoleName(string value);
    internal bool IsSetIAMRoleName();
    public string get_OU();
    public void set_OU(string value);
    internal bool IsSetOU();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.DomainNotFoundException : AmazonRDSException {
    public DomainNotFoundException(string message);
    public DomainNotFoundException(string message, Exception innerException);
    public DomainNotFoundException(Exception innerException);
    public DomainNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DomainNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.DoubleRange : object {
    private Nullable`1<double> _from;
    private Nullable`1<double> _to;
    public Nullable`1<double> From { get; public set; }
    public Nullable`1<double> To { get; public set; }
    public Nullable`1<double> get_From();
    public void set_From(Nullable`1<double> value);
    internal bool IsSetFrom();
    public Nullable`1<double> get_To();
    public void set_To(Nullable`1<double> value);
    internal bool IsSetTo();
}
public class Amazon.RDS.Model.DownloadDBLogFilePortionRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _logFileName;
    private string _marker;
    private Nullable`1<int> _numberOfLines;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string LogFileName { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> NumberOfLines { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_LogFileName();
    public void set_LogFileName(string value);
    internal bool IsSetLogFileName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_NumberOfLines();
    public void set_NumberOfLines(Nullable`1<int> value);
    internal bool IsSetNumberOfLines();
}
public class Amazon.RDS.Model.DownloadDBLogFilePortionResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _additionalDataPending;
    private string _logFileData;
    private string _marker;
    public Nullable`1<bool> AdditionalDataPending { get; public set; }
    public string LogFileData { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<bool> get_AdditionalDataPending();
    public void set_AdditionalDataPending(Nullable`1<bool> value);
    internal bool IsSetAdditionalDataPending();
    public string get_LogFileData();
    public void set_LogFileData(string value);
    internal bool IsSetLogFileData();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.RDS.Model.Ec2ImagePropertiesNotSupportedException : AmazonRDSException {
    public Ec2ImagePropertiesNotSupportedException(string message);
    public Ec2ImagePropertiesNotSupportedException(string message, Exception innerException);
    public Ec2ImagePropertiesNotSupportedException(Exception innerException);
    public Ec2ImagePropertiesNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Ec2ImagePropertiesNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.EC2SecurityGroup : object {
    private string _ec2SecurityGroupId;
    private string _ec2SecurityGroupName;
    private string _ec2SecurityGroupOwnerId;
    private string _status;
    public string EC2SecurityGroupId { get; public set; }
    public string EC2SecurityGroupName { get; public set; }
    public string EC2SecurityGroupOwnerId { get; public set; }
    public string Status { get; public set; }
    public string get_EC2SecurityGroupId();
    public void set_EC2SecurityGroupId(string value);
    internal bool IsSetEC2SecurityGroupId();
    public string get_EC2SecurityGroupName();
    public void set_EC2SecurityGroupName(string value);
    internal bool IsSetEC2SecurityGroupName();
    public string get_EC2SecurityGroupOwnerId();
    public void set_EC2SecurityGroupOwnerId(string value);
    internal bool IsSetEC2SecurityGroupOwnerId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.EnableHttpEndpointRequest : AmazonRDSRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.RDS.Model.EnableHttpEndpointResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _httpEndpointEnabled;
    private string _resourceArn;
    public Nullable`1<bool> HttpEndpointEnabled { get; public set; }
    public string ResourceArn { get; public set; }
    public Nullable`1<bool> get_HttpEndpointEnabled();
    public void set_HttpEndpointEnabled(Nullable`1<bool> value);
    internal bool IsSetHttpEndpointEnabled();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.RDS.Model.Endpoint : object {
    private string _address;
    private string _hostedZoneId;
    private Nullable`1<int> _port;
    public string Address { get; public set; }
    public string HostedZoneId { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    internal bool IsSetAddress();
    public string get_HostedZoneId();
    public void set_HostedZoneId(string value);
    internal bool IsSetHostedZoneId();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
}
public class Amazon.RDS.Model.EngineDefaults : object {
    private string _dbParameterGroupFamily;
    private string _marker;
    private List`1<Parameter> _parameters;
    public string DBParameterGroupFamily { get; public set; }
    public string Marker { get; public set; }
    public List`1<Parameter> Parameters { get; public set; }
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
}
public class Amazon.RDS.Model.Event : object {
    private Nullable`1<DateTime> _date;
    private List`1<string> _eventCategories;
    private string _message;
    private string _sourceArn;
    private string _sourceIdentifier;
    private SourceType _sourceType;
    public Nullable`1<DateTime> Date { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public string Message { get; public set; }
    public string SourceArn { get; public set; }
    public string SourceIdentifier { get; public set; }
    public SourceType SourceType { get; public set; }
    public Nullable`1<DateTime> get_Date();
    public void set_Date(Nullable`1<DateTime> value);
    internal bool IsSetDate();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    internal bool IsSetSourceIdentifier();
    public SourceType get_SourceType();
    public void set_SourceType(SourceType value);
    internal bool IsSetSourceType();
}
public class Amazon.RDS.Model.EventCategoriesMap : object {
    private List`1<string> _eventCategories;
    private string _sourceType;
    public List`1<string> EventCategories { get; public set; }
    public string SourceType { get; public set; }
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
}
public class Amazon.RDS.Model.EventSubscription : object {
    private string _customerAwsId;
    private string _custSubscriptionId;
    private Nullable`1<bool> _enabled;
    private List`1<string> _eventCategoriesList;
    private string _eventSubscriptionArn;
    private string _snsTopicArn;
    private List`1<string> _sourceIdsList;
    private string _sourceType;
    private string _status;
    private string _subscriptionCreationTime;
    public string CustomerAwsId { get; public set; }
    public string CustSubscriptionId { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> EventCategoriesList { get; public set; }
    public string EventSubscriptionArn { get; public set; }
    public string SnsTopicArn { get; public set; }
    public List`1<string> SourceIdsList { get; public set; }
    public string SourceType { get; public set; }
    public string Status { get; public set; }
    public string SubscriptionCreationTime { get; public set; }
    public string get_CustomerAwsId();
    public void set_CustomerAwsId(string value);
    internal bool IsSetCustomerAwsId();
    public string get_CustSubscriptionId();
    public void set_CustSubscriptionId(string value);
    internal bool IsSetCustSubscriptionId();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_EventCategoriesList();
    public void set_EventCategoriesList(List`1<string> value);
    internal bool IsSetEventCategoriesList();
    public string get_EventSubscriptionArn();
    public void set_EventSubscriptionArn(string value);
    internal bool IsSetEventSubscriptionArn();
    public string get_SnsTopicArn();
    public void set_SnsTopicArn(string value);
    internal bool IsSetSnsTopicArn();
    public List`1<string> get_SourceIdsList();
    public void set_SourceIdsList(List`1<string> value);
    internal bool IsSetSourceIdsList();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_SubscriptionCreationTime();
    public void set_SubscriptionCreationTime(string value);
    internal bool IsSetSubscriptionCreationTime();
}
public class Amazon.RDS.Model.EventSubscriptionQuotaExceededException : AmazonRDSException {
    public EventSubscriptionQuotaExceededException(string message);
    public EventSubscriptionQuotaExceededException(string message, Exception innerException);
    public EventSubscriptionQuotaExceededException(Exception innerException);
    public EventSubscriptionQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventSubscriptionQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ExportTask : object {
    private List`1<string> _exportOnly;
    private string _exportTaskIdentifier;
    private string _failureCause;
    private string _iamRoleArn;
    private string _kmsKeyId;
    private Nullable`1<int> _percentProgress;
    private string _s3Bucket;
    private string _s3Prefix;
    private Nullable`1<DateTime> _snapshotTime;
    private string _sourceArn;
    private ExportSourceType _sourceType;
    private string _status;
    private Nullable`1<DateTime> _taskEndTime;
    private Nullable`1<DateTime> _taskStartTime;
    private Nullable`1<int> _totalExtractedDataInGB;
    private string _warningMessage;
    public List`1<string> ExportOnly { get; public set; }
    public string ExportTaskIdentifier { get; public set; }
    public string FailureCause { get; public set; }
    public string IamRoleArn { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<int> PercentProgress { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Prefix { get; public set; }
    public Nullable`1<DateTime> SnapshotTime { get; public set; }
    public string SourceArn { get; public set; }
    public ExportSourceType SourceType { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<DateTime> TaskEndTime { get; public set; }
    public Nullable`1<DateTime> TaskStartTime { get; public set; }
    public Nullable`1<int> TotalExtractedDataInGB { get; public set; }
    public string WarningMessage { get; public set; }
    public List`1<string> get_ExportOnly();
    public void set_ExportOnly(List`1<string> value);
    internal bool IsSetExportOnly();
    public string get_ExportTaskIdentifier();
    public void set_ExportTaskIdentifier(string value);
    internal bool IsSetExportTaskIdentifier();
    public string get_FailureCause();
    public void set_FailureCause(string value);
    internal bool IsSetFailureCause();
    public string get_IamRoleArn();
    public void set_IamRoleArn(string value);
    internal bool IsSetIamRoleArn();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<int> get_PercentProgress();
    public void set_PercentProgress(Nullable`1<int> value);
    internal bool IsSetPercentProgress();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public Nullable`1<DateTime> get_SnapshotTime();
    public void set_SnapshotTime(Nullable`1<DateTime> value);
    internal bool IsSetSnapshotTime();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public ExportSourceType get_SourceType();
    public void set_SourceType(ExportSourceType value);
    internal bool IsSetSourceType();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_TaskEndTime();
    public void set_TaskEndTime(Nullable`1<DateTime> value);
    internal bool IsSetTaskEndTime();
    public Nullable`1<DateTime> get_TaskStartTime();
    public void set_TaskStartTime(Nullable`1<DateTime> value);
    internal bool IsSetTaskStartTime();
    public Nullable`1<int> get_TotalExtractedDataInGB();
    public void set_TotalExtractedDataInGB(Nullable`1<int> value);
    internal bool IsSetTotalExtractedDataInGB();
    public string get_WarningMessage();
    public void set_WarningMessage(string value);
    internal bool IsSetWarningMessage();
}
public class Amazon.RDS.Model.ExportTaskAlreadyExistsException : AmazonRDSException {
    public ExportTaskAlreadyExistsException(string message);
    public ExportTaskAlreadyExistsException(string message, Exception innerException);
    public ExportTaskAlreadyExistsException(Exception innerException);
    public ExportTaskAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExportTaskAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ExportTaskNotFoundException : AmazonRDSException {
    public ExportTaskNotFoundException(string message);
    public ExportTaskNotFoundException(string message, Exception innerException);
    public ExportTaskNotFoundException(Exception innerException);
    public ExportTaskNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExportTaskNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.FailoverDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private string _targetDBInstanceIdentifier;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string TargetDBInstanceIdentifier { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_TargetDBInstanceIdentifier();
    public void set_TargetDBInstanceIdentifier(string value);
    internal bool IsSetTargetDBInstanceIdentifier();
}
public class Amazon.RDS.Model.FailoverDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.FailoverGlobalClusterRequest : AmazonRDSRequest {
    private Nullable`1<bool> _allowDataLoss;
    private string _globalClusterIdentifier;
    private Nullable`1<bool> _switchover;
    private string _targetDbClusterIdentifier;
    public Nullable`1<bool> AllowDataLoss { get; public set; }
    [AWSPropertyAttribute]
public string GlobalClusterIdentifier { get; public set; }
    public Nullable`1<bool> Switchover { get; public set; }
    [AWSPropertyAttribute]
public string TargetDbClusterIdentifier { get; public set; }
    public Nullable`1<bool> get_AllowDataLoss();
    public void set_AllowDataLoss(Nullable`1<bool> value);
    internal bool IsSetAllowDataLoss();
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
    public Nullable`1<bool> get_Switchover();
    public void set_Switchover(Nullable`1<bool> value);
    internal bool IsSetSwitchover();
    public string get_TargetDbClusterIdentifier();
    public void set_TargetDbClusterIdentifier(string value);
    internal bool IsSetTargetDbClusterIdentifier();
}
public class Amazon.RDS.Model.FailoverGlobalClusterResponse : AmazonWebServiceResponse {
    private GlobalCluster _globalCluster;
    public GlobalCluster GlobalCluster { get; public set; }
    public GlobalCluster get_GlobalCluster();
    public void set_GlobalCluster(GlobalCluster value);
    internal bool IsSetGlobalCluster();
}
public class Amazon.RDS.Model.FailoverState : object {
    private string _fromDbClusterArn;
    private Nullable`1<bool> _isDataLossAllowed;
    private FailoverStatus _status;
    private string _toDbClusterArn;
    public string FromDbClusterArn { get; public set; }
    public Nullable`1<bool> IsDataLossAllowed { get; public set; }
    public FailoverStatus Status { get; public set; }
    public string ToDbClusterArn { get; public set; }
    public string get_FromDbClusterArn();
    public void set_FromDbClusterArn(string value);
    internal bool IsSetFromDbClusterArn();
    public Nullable`1<bool> get_IsDataLossAllowed();
    public void set_IsDataLossAllowed(Nullable`1<bool> value);
    internal bool IsSetIsDataLossAllowed();
    public FailoverStatus get_Status();
    public void set_Status(FailoverStatus value);
    internal bool IsSetStatus();
    public string get_ToDbClusterArn();
    public void set_ToDbClusterArn(string value);
    internal bool IsSetToDbClusterArn();
}
public class Amazon.RDS.Model.Filter : object {
    private string _name;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.RDS.Model.GlobalCluster : object {
    private string _databaseName;
    private Nullable`1<bool> _deletionProtection;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineVersion;
    private FailoverState _failoverState;
    private string _globalClusterArn;
    private string _globalClusterIdentifier;
    private List`1<GlobalClusterMember> _globalClusterMembers;
    private string _globalClusterResourceId;
    private string _status;
    private Nullable`1<bool> _storageEncrypted;
    public string DatabaseName { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineVersion { get; public set; }
    public FailoverState FailoverState { get; public set; }
    public string GlobalClusterArn { get; public set; }
    public string GlobalClusterIdentifier { get; public set; }
    public List`1<GlobalClusterMember> GlobalClusterMembers { get; public set; }
    public string GlobalClusterResourceId { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public FailoverState get_FailoverState();
    public void set_FailoverState(FailoverState value);
    internal bool IsSetFailoverState();
    public string get_GlobalClusterArn();
    public void set_GlobalClusterArn(string value);
    internal bool IsSetGlobalClusterArn();
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
    public List`1<GlobalClusterMember> get_GlobalClusterMembers();
    public void set_GlobalClusterMembers(List`1<GlobalClusterMember> value);
    internal bool IsSetGlobalClusterMembers();
    public string get_GlobalClusterResourceId();
    public void set_GlobalClusterResourceId(string value);
    internal bool IsSetGlobalClusterResourceId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
}
public class Amazon.RDS.Model.GlobalClusterAlreadyExistsException : AmazonRDSException {
    public GlobalClusterAlreadyExistsException(string message);
    public GlobalClusterAlreadyExistsException(string message, Exception innerException);
    public GlobalClusterAlreadyExistsException(Exception innerException);
    public GlobalClusterAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public GlobalClusterAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.GlobalClusterMember : object {
    private string _dbClusterArn;
    private WriteForwardingStatus _globalWriteForwardingStatus;
    private Nullable`1<bool> _isWriter;
    private List`1<string> _readers;
    private GlobalClusterMemberSynchronizationStatus _synchronizationStatus;
    public string DBClusterArn { get; public set; }
    public WriteForwardingStatus GlobalWriteForwardingStatus { get; public set; }
    public Nullable`1<bool> IsWriter { get; public set; }
    public List`1<string> Readers { get; public set; }
    public GlobalClusterMemberSynchronizationStatus SynchronizationStatus { get; public set; }
    public string get_DBClusterArn();
    public void set_DBClusterArn(string value);
    internal bool IsSetDBClusterArn();
    public WriteForwardingStatus get_GlobalWriteForwardingStatus();
    public void set_GlobalWriteForwardingStatus(WriteForwardingStatus value);
    internal bool IsSetGlobalWriteForwardingStatus();
    public Nullable`1<bool> get_IsWriter();
    public void set_IsWriter(Nullable`1<bool> value);
    internal bool IsSetIsWriter();
    public List`1<string> get_Readers();
    public void set_Readers(List`1<string> value);
    internal bool IsSetReaders();
    public GlobalClusterMemberSynchronizationStatus get_SynchronizationStatus();
    public void set_SynchronizationStatus(GlobalClusterMemberSynchronizationStatus value);
    internal bool IsSetSynchronizationStatus();
}
public class Amazon.RDS.Model.GlobalClusterNotFoundException : AmazonRDSException {
    public GlobalClusterNotFoundException(string message);
    public GlobalClusterNotFoundException(string message, Exception innerException);
    public GlobalClusterNotFoundException(Exception innerException);
    public GlobalClusterNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public GlobalClusterNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.GlobalClusterQuotaExceededException : AmazonRDSException {
    public GlobalClusterQuotaExceededException(string message);
    public GlobalClusterQuotaExceededException(string message, Exception innerException);
    public GlobalClusterQuotaExceededException(Exception innerException);
    public GlobalClusterQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public GlobalClusterQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.IamRoleMissingPermissionsException : AmazonRDSException {
    public IamRoleMissingPermissionsException(string message);
    public IamRoleMissingPermissionsException(string message, Exception innerException);
    public IamRoleMissingPermissionsException(Exception innerException);
    public IamRoleMissingPermissionsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IamRoleMissingPermissionsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.IamRoleNotFoundException : AmazonRDSException {
    public IamRoleNotFoundException(string message);
    public IamRoleNotFoundException(string message, Exception innerException);
    public IamRoleNotFoundException(Exception innerException);
    public IamRoleNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IamRoleNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.RDS.Model.IDescribeDBEngineVersionsPaginator {
    public IPaginatedEnumerable`1<DescribeDBEngineVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBEngineVersion> DBEngineVersions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDBEngineVersionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DBEngineVersion> get_DBEngineVersions();
}
public interface Amazon.RDS.Model.IDescribeDBInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeDBInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBInstance> DBInstances { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDBInstancesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DBInstance> get_DBInstances();
}
public interface Amazon.RDS.Model.IDescribeDBParameterGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeDBParameterGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBParameterGroup> DBParameterGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDBParameterGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DBParameterGroup> get_DBParameterGroups();
}
public interface Amazon.RDS.Model.IDescribeDBParametersPaginator {
    public IPaginatedEnumerable`1<DescribeDBParametersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Parameter> Parameters { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDBParametersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Parameter> get_Parameters();
}
public interface Amazon.RDS.Model.IDescribeDBSecurityGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeDBSecurityGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBSecurityGroup> DBSecurityGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDBSecurityGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DBSecurityGroup> get_DBSecurityGroups();
}
public interface Amazon.RDS.Model.IDescribeDBSnapshotsPaginator {
    public IPaginatedEnumerable`1<DescribeDBSnapshotsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBSnapshot> DBSnapshots { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDBSnapshotsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DBSnapshot> get_DBSnapshots();
}
public interface Amazon.RDS.Model.IDescribeDBSubnetGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeDBSubnetGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DBSubnetGroup> DBSubnetGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDBSubnetGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DBSubnetGroup> get_DBSubnetGroups();
}
public interface Amazon.RDS.Model.IDescribeEngineDefaultParametersPaginator {
    public IPaginatedEnumerable`1<DescribeEngineDefaultParametersResponse> Responses { get; }
    public IPaginatedEnumerable`1<Parameter> Parameters { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEngineDefaultParametersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Parameter> get_Parameters();
}
public interface Amazon.RDS.Model.IDescribeEventsPaginator {
    public IPaginatedEnumerable`1<DescribeEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Event> Events { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEventsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Event> get_Events();
}
public interface Amazon.RDS.Model.IDescribeEventSubscriptionsPaginator {
    public IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<EventSubscription> EventSubscriptionsList { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<EventSubscription> get_EventSubscriptionsList();
}
public interface Amazon.RDS.Model.IDescribeOptionGroupOptionsPaginator {
    public IPaginatedEnumerable`1<DescribeOptionGroupOptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OptionGroupOption> OptionGroupOptions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeOptionGroupOptionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OptionGroupOption> get_OptionGroupOptions();
}
public interface Amazon.RDS.Model.IDescribeOptionGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeOptionGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OptionGroup> OptionGroupsList { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeOptionGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OptionGroup> get_OptionGroupsList();
}
public interface Amazon.RDS.Model.IDescribeOrderableDBInstanceOptionsPaginator {
    public IPaginatedEnumerable`1<DescribeOrderableDBInstanceOptionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OrderableDBInstanceOption> OrderableDBInstanceOptions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeOrderableDBInstanceOptionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OrderableDBInstanceOption> get_OrderableDBInstanceOptions();
}
public interface Amazon.RDS.Model.IDescribeReservedDBInstancesOfferingsPaginator {
    public IPaginatedEnumerable`1<DescribeReservedDBInstancesOfferingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedDBInstancesOffering> ReservedDBInstancesOfferings { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReservedDBInstancesOfferingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ReservedDBInstancesOffering> get_ReservedDBInstancesOfferings();
}
public interface Amazon.RDS.Model.IDescribeReservedDBInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeReservedDBInstancesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ReservedDBInstance> ReservedDBInstances { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReservedDBInstancesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ReservedDBInstance> get_ReservedDBInstances();
}
public class Amazon.RDS.Model.InstanceQuotaExceededException : AmazonRDSException {
    public InstanceQuotaExceededException(string message);
    public InstanceQuotaExceededException(string message, Exception innerException);
    public InstanceQuotaExceededException(Exception innerException);
    public InstanceQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InstanceQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InsufficientAvailableIPsInSubnetException : AmazonRDSException {
    public InsufficientAvailableIPsInSubnetException(string message);
    public InsufficientAvailableIPsInSubnetException(string message, Exception innerException);
    public InsufficientAvailableIPsInSubnetException(Exception innerException);
    public InsufficientAvailableIPsInSubnetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientAvailableIPsInSubnetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InsufficientDBClusterCapacityException : AmazonRDSException {
    public InsufficientDBClusterCapacityException(string message);
    public InsufficientDBClusterCapacityException(string message, Exception innerException);
    public InsufficientDBClusterCapacityException(Exception innerException);
    public InsufficientDBClusterCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientDBClusterCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InsufficientDBInstanceCapacityException : AmazonRDSException {
    public InsufficientDBInstanceCapacityException(string message);
    public InsufficientDBInstanceCapacityException(string message, Exception innerException);
    public InsufficientDBInstanceCapacityException(Exception innerException);
    public InsufficientDBInstanceCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientDBInstanceCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InsufficientStorageClusterCapacityException : AmazonRDSException {
    public InsufficientStorageClusterCapacityException(string message);
    public InsufficientStorageClusterCapacityException(string message, Exception innerException);
    public InsufficientStorageClusterCapacityException(Exception innerException);
    public InsufficientStorageClusterCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientStorageClusterCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.Integration : object {
    private Dictionary`2<string, string> _additionalEncryptionContext;
    private Nullable`1<DateTime> _createTime;
    private string _dataFilter;
    private string _description;
    private List`1<IntegrationError> _errors;
    private string _integrationArn;
    private string _integrationName;
    private string _kmsKeyId;
    private string _sourceArn;
    private IntegrationStatus _status;
    private List`1<Tag> _tags;
    private string _targetArn;
    public Dictionary`2<string, string> AdditionalEncryptionContext { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string DataFilter { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<IntegrationError> Errors { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationArn { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationName { get; public set; }
    public string KMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public IntegrationStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetArn { get; public set; }
    public Dictionary`2<string, string> get_AdditionalEncryptionContext();
    public void set_AdditionalEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalEncryptionContext();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_DataFilter();
    public void set_DataFilter(string value);
    internal bool IsSetDataFilter();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<IntegrationError> get_Errors();
    public void set_Errors(List`1<IntegrationError> value);
    internal bool IsSetErrors();
    public string get_IntegrationArn();
    public void set_IntegrationArn(string value);
    internal bool IsSetIntegrationArn();
    public string get_IntegrationName();
    public void set_IntegrationName(string value);
    internal bool IsSetIntegrationName();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public IntegrationStatus get_Status();
    public void set_Status(IntegrationStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.RDS.Model.IntegrationAlreadyExistsException : AmazonRDSException {
    public IntegrationAlreadyExistsException(string message);
    public IntegrationAlreadyExistsException(string message, Exception innerException);
    public IntegrationAlreadyExistsException(Exception innerException);
    public IntegrationAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IntegrationAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.IntegrationConflictOperationException : AmazonRDSException {
    public IntegrationConflictOperationException(string message);
    public IntegrationConflictOperationException(string message, Exception innerException);
    public IntegrationConflictOperationException(Exception innerException);
    public IntegrationConflictOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IntegrationConflictOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.IntegrationError : object {
    private string _errorCode;
    private string _errorMessage;
    [AWSPropertyAttribute]
public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
}
public class Amazon.RDS.Model.IntegrationNotFoundException : AmazonRDSException {
    public IntegrationNotFoundException(string message);
    public IntegrationNotFoundException(string message, Exception innerException);
    public IntegrationNotFoundException(Exception innerException);
    public IntegrationNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IntegrationNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.IntegrationQuotaExceededException : AmazonRDSException {
    public IntegrationQuotaExceededException(string message);
    public IntegrationQuotaExceededException(string message, Exception innerException);
    public IntegrationQuotaExceededException(Exception innerException);
    public IntegrationQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IntegrationQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AccountQuotaUnmarshaller : object {
    private static AccountQuotaUnmarshaller _instance;
    public static AccountQuotaUnmarshaller Instance { get; }
    private static AccountQuotaUnmarshaller();
    public sealed virtual AccountQuota Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountQuota Unmarshall(JsonUnmarshallerContext context);
    public static AccountQuotaUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddRoleToDBClusterRequestMarshaller : object {
    private static AddRoleToDBClusterRequestMarshaller _instance;
    public static AddRoleToDBClusterRequestMarshaller Instance { get; }
    private static AddRoleToDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddRoleToDBClusterRequest publicRequest);
    internal static AddRoleToDBClusterRequestMarshaller GetInstance();
    public static AddRoleToDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddRoleToDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddRoleToDBClusterResponseUnmarshaller _instance;
    public static AddRoleToDBClusterResponseUnmarshaller Instance { get; }
    private static AddRoleToDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddRoleToDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddRoleToDBClusterResponseUnmarshaller GetInstance();
    public static AddRoleToDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddRoleToDBInstanceRequestMarshaller : object {
    private static AddRoleToDBInstanceRequestMarshaller _instance;
    public static AddRoleToDBInstanceRequestMarshaller Instance { get; }
    private static AddRoleToDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddRoleToDBInstanceRequest publicRequest);
    internal static AddRoleToDBInstanceRequestMarshaller GetInstance();
    public static AddRoleToDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddRoleToDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddRoleToDBInstanceResponseUnmarshaller _instance;
    public static AddRoleToDBInstanceResponseUnmarshaller Instance { get; }
    private static AddRoleToDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddRoleToDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddRoleToDBInstanceResponseUnmarshaller GetInstance();
    public static AddRoleToDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller : object {
    private static AddSourceIdentifierToSubscriptionRequestMarshaller _instance;
    public static AddSourceIdentifierToSubscriptionRequestMarshaller Instance { get; }
    private static AddSourceIdentifierToSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddSourceIdentifierToSubscriptionRequest publicRequest);
    internal static AddSourceIdentifierToSubscriptionRequestMarshaller GetInstance();
    public static AddSourceIdentifierToSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddSourceIdentifierToSubscriptionResponseUnmarshaller _instance;
    public static AddSourceIdentifierToSubscriptionResponseUnmarshaller Instance { get; }
    private static AddSourceIdentifierToSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddSourceIdentifierToSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddSourceIdentifierToSubscriptionResponseUnmarshaller GetInstance();
    public static AddSourceIdentifierToSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller : object {
    private static AddTagsToResourceRequestMarshaller _instance;
    public static AddTagsToResourceRequestMarshaller Instance { get; }
    private static AddTagsToResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsToResourceRequest publicRequest);
    internal static AddTagsToResourceRequestMarshaller GetInstance();
    public static AddTagsToResourceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddTagsToResourceResponseUnmarshaller _instance;
    public static AddTagsToResourceResponseUnmarshaller Instance { get; }
    private static AddTagsToResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddTagsToResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsToResourceResponseUnmarshaller GetInstance();
    public static AddTagsToResourceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller : object {
    private static ApplyPendingMaintenanceActionRequestMarshaller _instance;
    public static ApplyPendingMaintenanceActionRequestMarshaller Instance { get; }
    private static ApplyPendingMaintenanceActionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ApplyPendingMaintenanceActionRequest publicRequest);
    internal static ApplyPendingMaintenanceActionRequestMarshaller GetInstance();
    public static ApplyPendingMaintenanceActionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ApplyPendingMaintenanceActionResponseUnmarshaller _instance;
    public static ApplyPendingMaintenanceActionResponseUnmarshaller Instance { get; }
    private static ApplyPendingMaintenanceActionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ApplyPendingMaintenanceActionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ApplyPendingMaintenanceActionResponseUnmarshaller GetInstance();
    public static ApplyPendingMaintenanceActionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AuthorizationAlreadyExistsExceptionUnmarshaller : object {
    private static AuthorizationAlreadyExistsExceptionUnmarshaller _instance;
    public static AuthorizationAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static AuthorizationAlreadyExistsExceptionUnmarshaller();
    public sealed virtual AuthorizationAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthorizationAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AuthorizationAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller : object {
    private static AuthorizationNotFoundExceptionUnmarshaller _instance;
    public static AuthorizationNotFoundExceptionUnmarshaller Instance { get; }
    private static AuthorizationNotFoundExceptionUnmarshaller();
    public sealed virtual AuthorizationNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthorizationNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AuthorizationNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AuthorizationQuotaExceededExceptionUnmarshaller : object {
    private static AuthorizationQuotaExceededExceptionUnmarshaller _instance;
    public static AuthorizationQuotaExceededExceptionUnmarshaller Instance { get; }
    private static AuthorizationQuotaExceededExceptionUnmarshaller();
    public sealed virtual AuthorizationQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthorizationQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AuthorizationQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AuthorizeDBSecurityGroupIngressRequestMarshaller : object {
    private static AuthorizeDBSecurityGroupIngressRequestMarshaller _instance;
    public static AuthorizeDBSecurityGroupIngressRequestMarshaller Instance { get; }
    private static AuthorizeDBSecurityGroupIngressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AuthorizeDBSecurityGroupIngressRequest publicRequest);
    internal static AuthorizeDBSecurityGroupIngressRequestMarshaller GetInstance();
    public static AuthorizeDBSecurityGroupIngressRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AuthorizeDBSecurityGroupIngressResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AuthorizeDBSecurityGroupIngressResponseUnmarshaller _instance;
    public static AuthorizeDBSecurityGroupIngressResponseUnmarshaller Instance { get; }
    private static AuthorizeDBSecurityGroupIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AuthorizeDBSecurityGroupIngressResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AuthorizeDBSecurityGroupIngressResponseUnmarshaller GetInstance();
    public static AuthorizeDBSecurityGroupIngressResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller : object {
    private static AvailabilityZoneUnmarshaller _instance;
    public static AvailabilityZoneUnmarshaller Instance { get; }
    private static AvailabilityZoneUnmarshaller();
    public sealed virtual AvailabilityZone Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZone Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.AvailableProcessorFeatureUnmarshaller : object {
    private static AvailableProcessorFeatureUnmarshaller _instance;
    public static AvailableProcessorFeatureUnmarshaller Instance { get; }
    private static AvailableProcessorFeatureUnmarshaller();
    public sealed virtual AvailableProcessorFeature Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailableProcessorFeature Unmarshall(JsonUnmarshallerContext context);
    public static AvailableProcessorFeatureUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.BacktrackDBClusterRequestMarshaller : object {
    private static BacktrackDBClusterRequestMarshaller _instance;
    public static BacktrackDBClusterRequestMarshaller Instance { get; }
    private static BacktrackDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BacktrackDBClusterRequest publicRequest);
    internal static BacktrackDBClusterRequestMarshaller GetInstance();
    public static BacktrackDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.BacktrackDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static BacktrackDBClusterResponseUnmarshaller _instance;
    public static BacktrackDBClusterResponseUnmarshaller Instance { get; }
    private static BacktrackDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, BacktrackDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BacktrackDBClusterResponseUnmarshaller GetInstance();
    public static BacktrackDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.BackupPolicyNotFoundExceptionUnmarshaller : object {
    private static BackupPolicyNotFoundExceptionUnmarshaller _instance;
    public static BackupPolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static BackupPolicyNotFoundExceptionUnmarshaller();
    public sealed virtual BackupPolicyNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BackupPolicyNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static BackupPolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.BlueGreenDeploymentAlreadyExistsExceptionUnmarshaller : object {
    private static BlueGreenDeploymentAlreadyExistsExceptionUnmarshaller _instance;
    public static BlueGreenDeploymentAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static BlueGreenDeploymentAlreadyExistsExceptionUnmarshaller();
    public sealed virtual BlueGreenDeploymentAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlueGreenDeploymentAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static BlueGreenDeploymentAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.BlueGreenDeploymentNotFoundExceptionUnmarshaller : object {
    private static BlueGreenDeploymentNotFoundExceptionUnmarshaller _instance;
    public static BlueGreenDeploymentNotFoundExceptionUnmarshaller Instance { get; }
    private static BlueGreenDeploymentNotFoundExceptionUnmarshaller();
    public sealed virtual BlueGreenDeploymentNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlueGreenDeploymentNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static BlueGreenDeploymentNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.BlueGreenDeploymentTaskUnmarshaller : object {
    private static BlueGreenDeploymentTaskUnmarshaller _instance;
    public static BlueGreenDeploymentTaskUnmarshaller Instance { get; }
    private static BlueGreenDeploymentTaskUnmarshaller();
    public sealed virtual BlueGreenDeploymentTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlueGreenDeploymentTask Unmarshall(JsonUnmarshallerContext context);
    public static BlueGreenDeploymentTaskUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.BlueGreenDeploymentUnmarshaller : object {
    private static BlueGreenDeploymentUnmarshaller _instance;
    public static BlueGreenDeploymentUnmarshaller Instance { get; }
    private static BlueGreenDeploymentUnmarshaller();
    public sealed virtual BlueGreenDeployment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlueGreenDeployment Unmarshall(JsonUnmarshallerContext context);
    public static BlueGreenDeploymentUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller : object {
    private static CancelExportTaskRequestMarshaller _instance;
    public static CancelExportTaskRequestMarshaller Instance { get; }
    private static CancelExportTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelExportTaskRequest publicRequest);
    internal static CancelExportTaskRequestMarshaller GetInstance();
    public static CancelExportTaskRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CancelExportTaskResponseUnmarshaller _instance;
    public static CancelExportTaskResponseUnmarshaller Instance { get; }
    private static CancelExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CancelExportTaskResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelExportTaskResponseUnmarshaller GetInstance();
    public static CancelExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CertificateDetailsUnmarshaller : object {
    private static CertificateDetailsUnmarshaller _instance;
    public static CertificateDetailsUnmarshaller Instance { get; }
    private static CertificateDetailsUnmarshaller();
    public sealed virtual CertificateDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CertificateDetails Unmarshall(JsonUnmarshallerContext context);
    public static CertificateDetailsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller : object {
    private static CertificateNotFoundExceptionUnmarshaller _instance;
    public static CertificateNotFoundExceptionUnmarshaller Instance { get; }
    private static CertificateNotFoundExceptionUnmarshaller();
    public sealed virtual CertificateNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CertificateNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CertificateNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CertificateUnmarshaller : object {
    private static CertificateUnmarshaller _instance;
    public static CertificateUnmarshaller Instance { get; }
    private static CertificateUnmarshaller();
    public sealed virtual Certificate Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Certificate Unmarshall(JsonUnmarshallerContext context);
    public static CertificateUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CharacterSetUnmarshaller : object {
    private static CharacterSetUnmarshaller _instance;
    public static CharacterSetUnmarshaller Instance { get; }
    private static CharacterSetUnmarshaller();
    public sealed virtual CharacterSet Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CharacterSet Unmarshall(JsonUnmarshallerContext context);
    public static CharacterSetUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ClusterPendingModifiedValuesUnmarshaller : object {
    private static ClusterPendingModifiedValuesUnmarshaller _instance;
    public static ClusterPendingModifiedValuesUnmarshaller Instance { get; }
    private static ClusterPendingModifiedValuesUnmarshaller();
    public sealed virtual ClusterPendingModifiedValues Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClusterPendingModifiedValues Unmarshall(JsonUnmarshallerContext context);
    public static ClusterPendingModifiedValuesUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ConnectionPoolConfigurationInfoUnmarshaller : object {
    private static ConnectionPoolConfigurationInfoUnmarshaller _instance;
    public static ConnectionPoolConfigurationInfoUnmarshaller Instance { get; }
    private static ConnectionPoolConfigurationInfoUnmarshaller();
    public sealed virtual ConnectionPoolConfigurationInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionPoolConfigurationInfo Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionPoolConfigurationInfoUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ContextAttributeUnmarshaller : object {
    private static ContextAttributeUnmarshaller _instance;
    public static ContextAttributeUnmarshaller Instance { get; }
    private static ContextAttributeUnmarshaller();
    public sealed virtual ContextAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContextAttribute Unmarshall(JsonUnmarshallerContext context);
    public static ContextAttributeUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller : object {
    private static CopyDBClusterParameterGroupRequestMarshaller _instance;
    public static CopyDBClusterParameterGroupRequestMarshaller Instance { get; }
    private static CopyDBClusterParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyDBClusterParameterGroupRequest publicRequest);
    internal static CopyDBClusterParameterGroupRequestMarshaller GetInstance();
    public static CopyDBClusterParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CopyDBClusterParameterGroupResponseUnmarshaller _instance;
    public static CopyDBClusterParameterGroupResponseUnmarshaller Instance { get; }
    private static CopyDBClusterParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyDBClusterParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyDBClusterParameterGroupResponseUnmarshaller GetInstance();
    public static CopyDBClusterParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller : object {
    private static CopyDBClusterSnapshotRequestMarshaller _instance;
    public static CopyDBClusterSnapshotRequestMarshaller Instance { get; }
    private static CopyDBClusterSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyDBClusterSnapshotRequest publicRequest);
    internal static CopyDBClusterSnapshotRequestMarshaller GetInstance();
    public static CopyDBClusterSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CopyDBClusterSnapshotResponseUnmarshaller _instance;
    public static CopyDBClusterSnapshotResponseUnmarshaller Instance { get; }
    private static CopyDBClusterSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyDBClusterSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyDBClusterSnapshotResponseUnmarshaller GetInstance();
    public static CopyDBClusterSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBParameterGroupRequestMarshaller : object {
    private static CopyDBParameterGroupRequestMarshaller _instance;
    public static CopyDBParameterGroupRequestMarshaller Instance { get; }
    private static CopyDBParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyDBParameterGroupRequest publicRequest);
    internal static CopyDBParameterGroupRequestMarshaller GetInstance();
    public static CopyDBParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CopyDBParameterGroupResponseUnmarshaller _instance;
    public static CopyDBParameterGroupResponseUnmarshaller Instance { get; }
    private static CopyDBParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyDBParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyDBParameterGroupResponseUnmarshaller GetInstance();
    public static CopyDBParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBSnapshotRequestMarshaller : object {
    private static CopyDBSnapshotRequestMarshaller _instance;
    public static CopyDBSnapshotRequestMarshaller Instance { get; }
    private static CopyDBSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyDBSnapshotRequest publicRequest);
    internal static CopyDBSnapshotRequestMarshaller GetInstance();
    public static CopyDBSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyDBSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CopyDBSnapshotResponseUnmarshaller _instance;
    public static CopyDBSnapshotResponseUnmarshaller Instance { get; }
    private static CopyDBSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyDBSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyDBSnapshotResponseUnmarshaller GetInstance();
    public static CopyDBSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyOptionGroupRequestMarshaller : object {
    private static CopyOptionGroupRequestMarshaller _instance;
    public static CopyOptionGroupRequestMarshaller Instance { get; }
    private static CopyOptionGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyOptionGroupRequest publicRequest);
    internal static CopyOptionGroupRequestMarshaller GetInstance();
    public static CopyOptionGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CopyOptionGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CopyOptionGroupResponseUnmarshaller _instance;
    public static CopyOptionGroupResponseUnmarshaller Instance { get; }
    private static CopyOptionGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyOptionGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyOptionGroupResponseUnmarshaller GetInstance();
    public static CopyOptionGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateBlueGreenDeploymentRequestMarshaller : object {
    private static CreateBlueGreenDeploymentRequestMarshaller _instance;
    public static CreateBlueGreenDeploymentRequestMarshaller Instance { get; }
    private static CreateBlueGreenDeploymentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateBlueGreenDeploymentRequest publicRequest);
    internal static CreateBlueGreenDeploymentRequestMarshaller GetInstance();
    public static CreateBlueGreenDeploymentRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateBlueGreenDeploymentResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateBlueGreenDeploymentResponseUnmarshaller _instance;
    public static CreateBlueGreenDeploymentResponseUnmarshaller Instance { get; }
    private static CreateBlueGreenDeploymentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateBlueGreenDeploymentResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateBlueGreenDeploymentResponseUnmarshaller GetInstance();
    public static CreateBlueGreenDeploymentResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateCustomDBEngineVersionExceptionUnmarshaller : object {
    private static CreateCustomDBEngineVersionExceptionUnmarshaller _instance;
    public static CreateCustomDBEngineVersionExceptionUnmarshaller Instance { get; }
    private static CreateCustomDBEngineVersionExceptionUnmarshaller();
    public sealed virtual CreateCustomDBEngineVersionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateCustomDBEngineVersionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CreateCustomDBEngineVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateCustomDBEngineVersionRequestMarshaller : object {
    private static CreateCustomDBEngineVersionRequestMarshaller _instance;
    public static CreateCustomDBEngineVersionRequestMarshaller Instance { get; }
    private static CreateCustomDBEngineVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCustomDBEngineVersionRequest publicRequest);
    internal static CreateCustomDBEngineVersionRequestMarshaller GetInstance();
    public static CreateCustomDBEngineVersionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateCustomDBEngineVersionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateCustomDBEngineVersionResponseUnmarshaller _instance;
    public static CreateCustomDBEngineVersionResponseUnmarshaller Instance { get; }
    private static CreateCustomDBEngineVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateCustomDBEngineVersionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCustomDBEngineVersionResponseUnmarshaller GetInstance();
    public static CreateCustomDBEngineVersionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterEndpointRequestMarshaller : object {
    private static CreateDBClusterEndpointRequestMarshaller _instance;
    public static CreateDBClusterEndpointRequestMarshaller Instance { get; }
    private static CreateDBClusterEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBClusterEndpointRequest publicRequest);
    internal static CreateDBClusterEndpointRequestMarshaller GetInstance();
    public static CreateDBClusterEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBClusterEndpointResponseUnmarshaller _instance;
    public static CreateDBClusterEndpointResponseUnmarshaller Instance { get; }
    private static CreateDBClusterEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBClusterEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBClusterEndpointResponseUnmarshaller GetInstance();
    public static CreateDBClusterEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller : object {
    private static CreateDBClusterParameterGroupRequestMarshaller _instance;
    public static CreateDBClusterParameterGroupRequestMarshaller Instance { get; }
    private static CreateDBClusterParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBClusterParameterGroupRequest publicRequest);
    internal static CreateDBClusterParameterGroupRequestMarshaller GetInstance();
    public static CreateDBClusterParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBClusterParameterGroupResponseUnmarshaller _instance;
    public static CreateDBClusterParameterGroupResponseUnmarshaller Instance { get; }
    private static CreateDBClusterParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBClusterParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBClusterParameterGroupResponseUnmarshaller GetInstance();
    public static CreateDBClusterParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller : object {
    private static CreateDBClusterRequestMarshaller _instance;
    public static CreateDBClusterRequestMarshaller Instance { get; }
    private static CreateDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBClusterRequest publicRequest);
    internal static CreateDBClusterRequestMarshaller GetInstance();
    public static CreateDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBClusterResponseUnmarshaller _instance;
    public static CreateDBClusterResponseUnmarshaller Instance { get; }
    private static CreateDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBClusterResponseUnmarshaller GetInstance();
    public static CreateDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller : object {
    private static CreateDBClusterSnapshotRequestMarshaller _instance;
    public static CreateDBClusterSnapshotRequestMarshaller Instance { get; }
    private static CreateDBClusterSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBClusterSnapshotRequest publicRequest);
    internal static CreateDBClusterSnapshotRequestMarshaller GetInstance();
    public static CreateDBClusterSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBClusterSnapshotResponseUnmarshaller _instance;
    public static CreateDBClusterSnapshotResponseUnmarshaller Instance { get; }
    private static CreateDBClusterSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBClusterSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBClusterSnapshotResponseUnmarshaller GetInstance();
    public static CreateDBClusterSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBInstanceReadReplicaRequestMarshaller : object {
    private static CreateDBInstanceReadReplicaRequestMarshaller _instance;
    public static CreateDBInstanceReadReplicaRequestMarshaller Instance { get; }
    private static CreateDBInstanceReadReplicaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBInstanceReadReplicaRequest publicRequest);
    internal static CreateDBInstanceReadReplicaRequestMarshaller GetInstance();
    public static CreateDBInstanceReadReplicaRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBInstanceReadReplicaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBInstanceReadReplicaResponseUnmarshaller _instance;
    public static CreateDBInstanceReadReplicaResponseUnmarshaller Instance { get; }
    private static CreateDBInstanceReadReplicaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBInstanceReadReplicaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBInstanceReadReplicaResponseUnmarshaller GetInstance();
    public static CreateDBInstanceReadReplicaResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller : object {
    private static CreateDBInstanceRequestMarshaller _instance;
    public static CreateDBInstanceRequestMarshaller Instance { get; }
    private static CreateDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBInstanceRequest publicRequest);
    internal static CreateDBInstanceRequestMarshaller GetInstance();
    public static CreateDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBInstanceResponseUnmarshaller _instance;
    public static CreateDBInstanceResponseUnmarshaller Instance { get; }
    private static CreateDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBInstanceResponseUnmarshaller GetInstance();
    public static CreateDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBParameterGroupRequestMarshaller : object {
    private static CreateDBParameterGroupRequestMarshaller _instance;
    public static CreateDBParameterGroupRequestMarshaller Instance { get; }
    private static CreateDBParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBParameterGroupRequest publicRequest);
    internal static CreateDBParameterGroupRequestMarshaller GetInstance();
    public static CreateDBParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBParameterGroupResponseUnmarshaller _instance;
    public static CreateDBParameterGroupResponseUnmarshaller Instance { get; }
    private static CreateDBParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBParameterGroupResponseUnmarshaller GetInstance();
    public static CreateDBParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBProxyEndpointRequestMarshaller : object {
    private static CreateDBProxyEndpointRequestMarshaller _instance;
    public static CreateDBProxyEndpointRequestMarshaller Instance { get; }
    private static CreateDBProxyEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBProxyEndpointRequest publicRequest);
    internal static CreateDBProxyEndpointRequestMarshaller GetInstance();
    public static CreateDBProxyEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBProxyEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBProxyEndpointResponseUnmarshaller _instance;
    public static CreateDBProxyEndpointResponseUnmarshaller Instance { get; }
    private static CreateDBProxyEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBProxyEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBProxyEndpointResponseUnmarshaller GetInstance();
    public static CreateDBProxyEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBProxyRequestMarshaller : object {
    private static CreateDBProxyRequestMarshaller _instance;
    public static CreateDBProxyRequestMarshaller Instance { get; }
    private static CreateDBProxyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBProxyRequest publicRequest);
    internal static CreateDBProxyRequestMarshaller GetInstance();
    public static CreateDBProxyRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBProxyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBProxyResponseUnmarshaller _instance;
    public static CreateDBProxyResponseUnmarshaller Instance { get; }
    private static CreateDBProxyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBProxyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBProxyResponseUnmarshaller GetInstance();
    public static CreateDBProxyResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBSecurityGroupRequestMarshaller : object {
    private static CreateDBSecurityGroupRequestMarshaller _instance;
    public static CreateDBSecurityGroupRequestMarshaller Instance { get; }
    private static CreateDBSecurityGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBSecurityGroupRequest publicRequest);
    internal static CreateDBSecurityGroupRequestMarshaller GetInstance();
    public static CreateDBSecurityGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBSecurityGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBSecurityGroupResponseUnmarshaller _instance;
    public static CreateDBSecurityGroupResponseUnmarshaller Instance { get; }
    private static CreateDBSecurityGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBSecurityGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBSecurityGroupResponseUnmarshaller GetInstance();
    public static CreateDBSecurityGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBShardGroupRequestMarshaller : object {
    private static CreateDBShardGroupRequestMarshaller _instance;
    public static CreateDBShardGroupRequestMarshaller Instance { get; }
    private static CreateDBShardGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBShardGroupRequest publicRequest);
    internal static CreateDBShardGroupRequestMarshaller GetInstance();
    public static CreateDBShardGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBShardGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBShardGroupResponseUnmarshaller _instance;
    public static CreateDBShardGroupResponseUnmarshaller Instance { get; }
    private static CreateDBShardGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBShardGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBShardGroupResponseUnmarshaller GetInstance();
    public static CreateDBShardGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBSnapshotRequestMarshaller : object {
    private static CreateDBSnapshotRequestMarshaller _instance;
    public static CreateDBSnapshotRequestMarshaller Instance { get; }
    private static CreateDBSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBSnapshotRequest publicRequest);
    internal static CreateDBSnapshotRequestMarshaller GetInstance();
    public static CreateDBSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBSnapshotResponseUnmarshaller _instance;
    public static CreateDBSnapshotResponseUnmarshaller Instance { get; }
    private static CreateDBSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBSnapshotResponseUnmarshaller GetInstance();
    public static CreateDBSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller : object {
    private static CreateDBSubnetGroupRequestMarshaller _instance;
    public static CreateDBSubnetGroupRequestMarshaller Instance { get; }
    private static CreateDBSubnetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDBSubnetGroupRequest publicRequest);
    internal static CreateDBSubnetGroupRequestMarshaller GetInstance();
    public static CreateDBSubnetGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDBSubnetGroupResponseUnmarshaller _instance;
    public static CreateDBSubnetGroupResponseUnmarshaller Instance { get; }
    private static CreateDBSubnetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDBSubnetGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDBSubnetGroupResponseUnmarshaller GetInstance();
    public static CreateDBSubnetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller : object {
    private static CreateEventSubscriptionRequestMarshaller _instance;
    public static CreateEventSubscriptionRequestMarshaller Instance { get; }
    private static CreateEventSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateEventSubscriptionRequest publicRequest);
    internal static CreateEventSubscriptionRequestMarshaller GetInstance();
    public static CreateEventSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateEventSubscriptionResponseUnmarshaller _instance;
    public static CreateEventSubscriptionResponseUnmarshaller Instance { get; }
    private static CreateEventSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateEventSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateEventSubscriptionResponseUnmarshaller GetInstance();
    public static CreateEventSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateGlobalClusterRequestMarshaller : object {
    private static CreateGlobalClusterRequestMarshaller _instance;
    public static CreateGlobalClusterRequestMarshaller Instance { get; }
    private static CreateGlobalClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateGlobalClusterRequest publicRequest);
    internal static CreateGlobalClusterRequestMarshaller GetInstance();
    public static CreateGlobalClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateGlobalClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateGlobalClusterResponseUnmarshaller _instance;
    public static CreateGlobalClusterResponseUnmarshaller Instance { get; }
    private static CreateGlobalClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateGlobalClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateGlobalClusterResponseUnmarshaller GetInstance();
    public static CreateGlobalClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateIntegrationRequestMarshaller : object {
    private static CreateIntegrationRequestMarshaller _instance;
    public static CreateIntegrationRequestMarshaller Instance { get; }
    private static CreateIntegrationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIntegrationRequest publicRequest);
    internal static CreateIntegrationRequestMarshaller GetInstance();
    public static CreateIntegrationRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateIntegrationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateIntegrationResponseUnmarshaller _instance;
    public static CreateIntegrationResponseUnmarshaller Instance { get; }
    private static CreateIntegrationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateIntegrationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIntegrationResponseUnmarshaller GetInstance();
    public static CreateIntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateOptionGroupRequestMarshaller : object {
    private static CreateOptionGroupRequestMarshaller _instance;
    public static CreateOptionGroupRequestMarshaller Instance { get; }
    private static CreateOptionGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOptionGroupRequest publicRequest);
    internal static CreateOptionGroupRequestMarshaller GetInstance();
    public static CreateOptionGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateOptionGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateOptionGroupResponseUnmarshaller _instance;
    public static CreateOptionGroupResponseUnmarshaller Instance { get; }
    private static CreateOptionGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateOptionGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOptionGroupResponseUnmarshaller GetInstance();
    public static CreateOptionGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateTenantDatabaseRequestMarshaller : object {
    private static CreateTenantDatabaseRequestMarshaller _instance;
    public static CreateTenantDatabaseRequestMarshaller Instance { get; }
    private static CreateTenantDatabaseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTenantDatabaseRequest publicRequest);
    internal static CreateTenantDatabaseRequestMarshaller GetInstance();
    public static CreateTenantDatabaseRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CreateTenantDatabaseResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateTenantDatabaseResponseUnmarshaller _instance;
    public static CreateTenantDatabaseResponseUnmarshaller Instance { get; }
    private static CreateTenantDatabaseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateTenantDatabaseResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTenantDatabaseResponseUnmarshaller GetInstance();
    public static CreateTenantDatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CustomAvailabilityZoneNotFoundExceptionUnmarshaller : object {
    private static CustomAvailabilityZoneNotFoundExceptionUnmarshaller _instance;
    public static CustomAvailabilityZoneNotFoundExceptionUnmarshaller Instance { get; }
    private static CustomAvailabilityZoneNotFoundExceptionUnmarshaller();
    public sealed virtual CustomAvailabilityZoneNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomAvailabilityZoneNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomAvailabilityZoneNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CustomDBEngineVersionAlreadyExistsExceptionUnmarshaller : object {
    private static CustomDBEngineVersionAlreadyExistsExceptionUnmarshaller _instance;
    public static CustomDBEngineVersionAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static CustomDBEngineVersionAlreadyExistsExceptionUnmarshaller();
    public sealed virtual CustomDBEngineVersionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomDBEngineVersionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomDBEngineVersionAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CustomDBEngineVersionAMIUnmarshaller : object {
    private static CustomDBEngineVersionAMIUnmarshaller _instance;
    public static CustomDBEngineVersionAMIUnmarshaller Instance { get; }
    private static CustomDBEngineVersionAMIUnmarshaller();
    public sealed virtual CustomDBEngineVersionAMI Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomDBEngineVersionAMI Unmarshall(JsonUnmarshallerContext context);
    public static CustomDBEngineVersionAMIUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CustomDBEngineVersionNotFoundExceptionUnmarshaller : object {
    private static CustomDBEngineVersionNotFoundExceptionUnmarshaller _instance;
    public static CustomDBEngineVersionNotFoundExceptionUnmarshaller Instance { get; }
    private static CustomDBEngineVersionNotFoundExceptionUnmarshaller();
    public sealed virtual CustomDBEngineVersionNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomDBEngineVersionNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomDBEngineVersionNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.CustomDBEngineVersionQuotaExceededExceptionUnmarshaller : object {
    private static CustomDBEngineVersionQuotaExceededExceptionUnmarshaller _instance;
    public static CustomDBEngineVersionQuotaExceededExceptionUnmarshaller Instance { get; }
    private static CustomDBEngineVersionQuotaExceededExceptionUnmarshaller();
    public sealed virtual CustomDBEngineVersionQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomDBEngineVersionQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomDBEngineVersionQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller : object {
    private static DBClusterAlreadyExistsExceptionUnmarshaller _instance;
    public static DBClusterAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBClusterAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBClusterAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterAutomatedBackupNotFoundExceptionUnmarshaller : object {
    private static DBClusterAutomatedBackupNotFoundExceptionUnmarshaller _instance;
    public static DBClusterAutomatedBackupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBClusterAutomatedBackupNotFoundExceptionUnmarshaller();
    public sealed virtual DBClusterAutomatedBackupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterAutomatedBackupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterAutomatedBackupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterAutomatedBackupQuotaExceededExceptionUnmarshaller : object {
    private static DBClusterAutomatedBackupQuotaExceededExceptionUnmarshaller _instance;
    public static DBClusterAutomatedBackupQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBClusterAutomatedBackupQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBClusterAutomatedBackupQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterAutomatedBackupQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterAutomatedBackupQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterAutomatedBackupUnmarshaller : object {
    private static DBClusterAutomatedBackupUnmarshaller _instance;
    public static DBClusterAutomatedBackupUnmarshaller Instance { get; }
    private static DBClusterAutomatedBackupUnmarshaller();
    public sealed virtual DBClusterAutomatedBackup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterAutomatedBackup Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterAutomatedBackupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterBacktrackNotFoundExceptionUnmarshaller : object {
    private static DBClusterBacktrackNotFoundExceptionUnmarshaller _instance;
    public static DBClusterBacktrackNotFoundExceptionUnmarshaller Instance { get; }
    private static DBClusterBacktrackNotFoundExceptionUnmarshaller();
    public sealed virtual DBClusterBacktrackNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterBacktrackNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterBacktrackNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterBacktrackUnmarshaller : object {
    private static DBClusterBacktrackUnmarshaller _instance;
    public static DBClusterBacktrackUnmarshaller Instance { get; }
    private static DBClusterBacktrackUnmarshaller();
    public sealed virtual DBClusterBacktrack Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterBacktrack Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterBacktrackUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterEndpointAlreadyExistsExceptionUnmarshaller : object {
    private static DBClusterEndpointAlreadyExistsExceptionUnmarshaller _instance;
    public static DBClusterEndpointAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBClusterEndpointAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBClusterEndpointAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterEndpointAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterEndpointAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterEndpointNotFoundExceptionUnmarshaller : object {
    private static DBClusterEndpointNotFoundExceptionUnmarshaller _instance;
    public static DBClusterEndpointNotFoundExceptionUnmarshaller Instance { get; }
    private static DBClusterEndpointNotFoundExceptionUnmarshaller();
    public sealed virtual DBClusterEndpointNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterEndpointNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterEndpointNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterEndpointQuotaExceededExceptionUnmarshaller : object {
    private static DBClusterEndpointQuotaExceededExceptionUnmarshaller _instance;
    public static DBClusterEndpointQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBClusterEndpointQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBClusterEndpointQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterEndpointQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterEndpointQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterEndpointUnmarshaller : object {
    private static DBClusterEndpointUnmarshaller _instance;
    public static DBClusterEndpointUnmarshaller Instance { get; }
    private static DBClusterEndpointUnmarshaller();
    public sealed virtual DBClusterEndpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterEndpointUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller : object {
    private static DBClusterMemberUnmarshaller _instance;
    public static DBClusterMemberUnmarshaller Instance { get; }
    private static DBClusterMemberUnmarshaller();
    public sealed virtual DBClusterMember Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterMember Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterMemberUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller : object {
    private static DBClusterNotFoundExceptionUnmarshaller _instance;
    public static DBClusterNotFoundExceptionUnmarshaller Instance { get; }
    private static DBClusterNotFoundExceptionUnmarshaller();
    public sealed virtual DBClusterNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterOptionGroupStatusUnmarshaller : object {
    private static DBClusterOptionGroupStatusUnmarshaller _instance;
    public static DBClusterOptionGroupStatusUnmarshaller Instance { get; }
    private static DBClusterOptionGroupStatusUnmarshaller();
    public sealed virtual DBClusterOptionGroupStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterOptionGroupStatus Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterOptionGroupStatusUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller : object {
    private static DBClusterParameterGroupNotFoundExceptionUnmarshaller _instance;
    public static DBClusterParameterGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBClusterParameterGroupNotFoundExceptionUnmarshaller();
    public sealed virtual DBClusterParameterGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterParameterGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterParameterGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller : object {
    private static DBClusterParameterGroupUnmarshaller _instance;
    public static DBClusterParameterGroupUnmarshaller Instance { get; }
    private static DBClusterParameterGroupUnmarshaller();
    public sealed virtual DBClusterParameterGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterParameterGroup Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterParameterGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller : object {
    private static DBClusterQuotaExceededExceptionUnmarshaller _instance;
    public static DBClusterQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBClusterQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBClusterQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterRoleAlreadyExistsExceptionUnmarshaller : object {
    private static DBClusterRoleAlreadyExistsExceptionUnmarshaller _instance;
    public static DBClusterRoleAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBClusterRoleAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBClusterRoleAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterRoleAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterRoleAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterRoleNotFoundExceptionUnmarshaller : object {
    private static DBClusterRoleNotFoundExceptionUnmarshaller _instance;
    public static DBClusterRoleNotFoundExceptionUnmarshaller Instance { get; }
    private static DBClusterRoleNotFoundExceptionUnmarshaller();
    public sealed virtual DBClusterRoleNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterRoleNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterRoleNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterRoleQuotaExceededExceptionUnmarshaller : object {
    private static DBClusterRoleQuotaExceededExceptionUnmarshaller _instance;
    public static DBClusterRoleQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBClusterRoleQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBClusterRoleQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterRoleQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterRoleQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller : object {
    private static DBClusterRoleUnmarshaller _instance;
    public static DBClusterRoleUnmarshaller Instance { get; }
    private static DBClusterRoleUnmarshaller();
    public sealed virtual DBClusterRole Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterRole Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterRoleUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller : object {
    private static DBClusterSnapshotAlreadyExistsExceptionUnmarshaller _instance;
    public static DBClusterSnapshotAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBClusterSnapshotAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBClusterSnapshotAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterSnapshotAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterSnapshotAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller : object {
    private static DBClusterSnapshotAttributesResultUnmarshaller _instance;
    public static DBClusterSnapshotAttributesResultUnmarshaller Instance { get; }
    private static DBClusterSnapshotAttributesResultUnmarshaller();
    public sealed virtual DBClusterSnapshotAttributesResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterSnapshotAttributesResult Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterSnapshotAttributesResultUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller : object {
    private static DBClusterSnapshotAttributeUnmarshaller _instance;
    public static DBClusterSnapshotAttributeUnmarshaller Instance { get; }
    private static DBClusterSnapshotAttributeUnmarshaller();
    public sealed virtual DBClusterSnapshotAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterSnapshotAttribute Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterSnapshotAttributeUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller : object {
    private static DBClusterSnapshotNotFoundExceptionUnmarshaller _instance;
    public static DBClusterSnapshotNotFoundExceptionUnmarshaller Instance { get; }
    private static DBClusterSnapshotNotFoundExceptionUnmarshaller();
    public sealed virtual DBClusterSnapshotNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterSnapshotNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBClusterSnapshotNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller : object {
    private static DBClusterSnapshotUnmarshaller _instance;
    public static DBClusterSnapshotUnmarshaller Instance { get; }
    private static DBClusterSnapshotUnmarshaller();
    public sealed virtual DBClusterSnapshot Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterSnapshot Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterSnapshotUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterStatusInfoUnmarshaller : object {
    private static DBClusterStatusInfoUnmarshaller _instance;
    public static DBClusterStatusInfoUnmarshaller Instance { get; }
    private static DBClusterStatusInfoUnmarshaller();
    public sealed virtual DBClusterStatusInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBClusterStatusInfo Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterStatusInfoUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBClusterUnmarshaller : object {
    private static DBClusterUnmarshaller _instance;
    public static DBClusterUnmarshaller Instance { get; }
    private static DBClusterUnmarshaller();
    public sealed virtual DBCluster Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBCluster Unmarshall(JsonUnmarshallerContext context);
    public static DBClusterUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller : object {
    private static DBEngineVersionUnmarshaller _instance;
    public static DBEngineVersionUnmarshaller Instance { get; }
    private static DBEngineVersionUnmarshaller();
    public sealed virtual DBEngineVersion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBEngineVersion Unmarshall(JsonUnmarshallerContext context);
    public static DBEngineVersionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller : object {
    private static DBInstanceAlreadyExistsExceptionUnmarshaller _instance;
    public static DBInstanceAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBInstanceAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBInstanceAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBInstanceAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceAutomatedBackupNotFoundExceptionUnmarshaller : object {
    private static DBInstanceAutomatedBackupNotFoundExceptionUnmarshaller _instance;
    public static DBInstanceAutomatedBackupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBInstanceAutomatedBackupNotFoundExceptionUnmarshaller();
    public sealed virtual DBInstanceAutomatedBackupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceAutomatedBackupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBInstanceAutomatedBackupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceAutomatedBackupQuotaExceededExceptionUnmarshaller : object {
    private static DBInstanceAutomatedBackupQuotaExceededExceptionUnmarshaller _instance;
    public static DBInstanceAutomatedBackupQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBInstanceAutomatedBackupQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBInstanceAutomatedBackupQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceAutomatedBackupQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBInstanceAutomatedBackupQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceAutomatedBackupsReplicationUnmarshaller : object {
    private static DBInstanceAutomatedBackupsReplicationUnmarshaller _instance;
    public static DBInstanceAutomatedBackupsReplicationUnmarshaller Instance { get; }
    private static DBInstanceAutomatedBackupsReplicationUnmarshaller();
    public sealed virtual DBInstanceAutomatedBackupsReplication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceAutomatedBackupsReplication Unmarshall(JsonUnmarshallerContext context);
    public static DBInstanceAutomatedBackupsReplicationUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceAutomatedBackupUnmarshaller : object {
    private static DBInstanceAutomatedBackupUnmarshaller _instance;
    public static DBInstanceAutomatedBackupUnmarshaller Instance { get; }
    private static DBInstanceAutomatedBackupUnmarshaller();
    public sealed virtual DBInstanceAutomatedBackup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceAutomatedBackup Unmarshall(JsonUnmarshallerContext context);
    public static DBInstanceAutomatedBackupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller : object {
    private static DBInstanceNotFoundExceptionUnmarshaller _instance;
    public static DBInstanceNotFoundExceptionUnmarshaller Instance { get; }
    private static DBInstanceNotFoundExceptionUnmarshaller();
    public sealed virtual DBInstanceNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBInstanceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceRoleAlreadyExistsExceptionUnmarshaller : object {
    private static DBInstanceRoleAlreadyExistsExceptionUnmarshaller _instance;
    public static DBInstanceRoleAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBInstanceRoleAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBInstanceRoleAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceRoleAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBInstanceRoleAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceRoleNotFoundExceptionUnmarshaller : object {
    private static DBInstanceRoleNotFoundExceptionUnmarshaller _instance;
    public static DBInstanceRoleNotFoundExceptionUnmarshaller Instance { get; }
    private static DBInstanceRoleNotFoundExceptionUnmarshaller();
    public sealed virtual DBInstanceRoleNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceRoleNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBInstanceRoleNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceRoleQuotaExceededExceptionUnmarshaller : object {
    private static DBInstanceRoleQuotaExceededExceptionUnmarshaller _instance;
    public static DBInstanceRoleQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBInstanceRoleQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBInstanceRoleQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceRoleQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBInstanceRoleQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceRoleUnmarshaller : object {
    private static DBInstanceRoleUnmarshaller _instance;
    public static DBInstanceRoleUnmarshaller Instance { get; }
    private static DBInstanceRoleUnmarshaller();
    public sealed virtual DBInstanceRole Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceRole Unmarshall(JsonUnmarshallerContext context);
    public static DBInstanceRoleUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller : object {
    private static DBInstanceStatusInfoUnmarshaller _instance;
    public static DBInstanceStatusInfoUnmarshaller Instance { get; }
    private static DBInstanceStatusInfoUnmarshaller();
    public sealed virtual DBInstanceStatusInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstanceStatusInfo Unmarshall(JsonUnmarshallerContext context);
    public static DBInstanceStatusInfoUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller : object {
    private static DBInstanceUnmarshaller _instance;
    public static DBInstanceUnmarshaller Instance { get; }
    private static DBInstanceUnmarshaller();
    public sealed virtual DBInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBInstance Unmarshall(JsonUnmarshallerContext context);
    public static DBInstanceUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBLogFileNotFoundExceptionUnmarshaller : object {
    private static DBLogFileNotFoundExceptionUnmarshaller _instance;
    public static DBLogFileNotFoundExceptionUnmarshaller Instance { get; }
    private static DBLogFileNotFoundExceptionUnmarshaller();
    public sealed virtual DBLogFileNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBLogFileNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBLogFileNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller : object {
    private static DBParameterGroupAlreadyExistsExceptionUnmarshaller _instance;
    public static DBParameterGroupAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBParameterGroupAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBParameterGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBParameterGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBParameterGroupAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller : object {
    private static DBParameterGroupNotFoundExceptionUnmarshaller _instance;
    public static DBParameterGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBParameterGroupNotFoundExceptionUnmarshaller();
    public sealed virtual DBParameterGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBParameterGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBParameterGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller : object {
    private static DBParameterGroupQuotaExceededExceptionUnmarshaller _instance;
    public static DBParameterGroupQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBParameterGroupQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBParameterGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBParameterGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBParameterGroupQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBParameterGroupStatusUnmarshaller : object {
    private static DBParameterGroupStatusUnmarshaller _instance;
    public static DBParameterGroupStatusUnmarshaller Instance { get; }
    private static DBParameterGroupStatusUnmarshaller();
    public sealed virtual DBParameterGroupStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBParameterGroupStatus Unmarshall(JsonUnmarshallerContext context);
    public static DBParameterGroupStatusUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBParameterGroupUnmarshaller : object {
    private static DBParameterGroupUnmarshaller _instance;
    public static DBParameterGroupUnmarshaller Instance { get; }
    private static DBParameterGroupUnmarshaller();
    public sealed virtual DBParameterGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBParameterGroup Unmarshall(JsonUnmarshallerContext context);
    public static DBParameterGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyAlreadyExistsExceptionUnmarshaller : object {
    private static DBProxyAlreadyExistsExceptionUnmarshaller _instance;
    public static DBProxyAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBProxyAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBProxyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyEndpointAlreadyExistsExceptionUnmarshaller : object {
    private static DBProxyEndpointAlreadyExistsExceptionUnmarshaller _instance;
    public static DBProxyEndpointAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBProxyEndpointAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBProxyEndpointAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyEndpointAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyEndpointAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyEndpointNotFoundExceptionUnmarshaller : object {
    private static DBProxyEndpointNotFoundExceptionUnmarshaller _instance;
    public static DBProxyEndpointNotFoundExceptionUnmarshaller Instance { get; }
    private static DBProxyEndpointNotFoundExceptionUnmarshaller();
    public sealed virtual DBProxyEndpointNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyEndpointNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyEndpointNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyEndpointQuotaExceededExceptionUnmarshaller : object {
    private static DBProxyEndpointQuotaExceededExceptionUnmarshaller _instance;
    public static DBProxyEndpointQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBProxyEndpointQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBProxyEndpointQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyEndpointQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyEndpointQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyEndpointUnmarshaller : object {
    private static DBProxyEndpointUnmarshaller _instance;
    public static DBProxyEndpointUnmarshaller Instance { get; }
    private static DBProxyEndpointUnmarshaller();
    public sealed virtual DBProxyEndpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static DBProxyEndpointUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyNotFoundExceptionUnmarshaller : object {
    private static DBProxyNotFoundExceptionUnmarshaller _instance;
    public static DBProxyNotFoundExceptionUnmarshaller Instance { get; }
    private static DBProxyNotFoundExceptionUnmarshaller();
    public sealed virtual DBProxyNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyQuotaExceededExceptionUnmarshaller : object {
    private static DBProxyQuotaExceededExceptionUnmarshaller _instance;
    public static DBProxyQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBProxyQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBProxyQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyTargetAlreadyRegisteredExceptionUnmarshaller : object {
    private static DBProxyTargetAlreadyRegisteredExceptionUnmarshaller _instance;
    public static DBProxyTargetAlreadyRegisteredExceptionUnmarshaller Instance { get; }
    private static DBProxyTargetAlreadyRegisteredExceptionUnmarshaller();
    public sealed virtual DBProxyTargetAlreadyRegisteredException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyTargetAlreadyRegisteredException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyTargetAlreadyRegisteredExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyTargetGroupNotFoundExceptionUnmarshaller : object {
    private static DBProxyTargetGroupNotFoundExceptionUnmarshaller _instance;
    public static DBProxyTargetGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBProxyTargetGroupNotFoundExceptionUnmarshaller();
    public sealed virtual DBProxyTargetGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyTargetGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyTargetGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyTargetGroupUnmarshaller : object {
    private static DBProxyTargetGroupUnmarshaller _instance;
    public static DBProxyTargetGroupUnmarshaller Instance { get; }
    private static DBProxyTargetGroupUnmarshaller();
    public sealed virtual DBProxyTargetGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyTargetGroup Unmarshall(JsonUnmarshallerContext context);
    public static DBProxyTargetGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyTargetNotFoundExceptionUnmarshaller : object {
    private static DBProxyTargetNotFoundExceptionUnmarshaller _instance;
    public static DBProxyTargetNotFoundExceptionUnmarshaller Instance { get; }
    private static DBProxyTargetNotFoundExceptionUnmarshaller();
    public sealed virtual DBProxyTargetNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyTargetNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBProxyTargetNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyTargetUnmarshaller : object {
    private static DBProxyTargetUnmarshaller _instance;
    public static DBProxyTargetUnmarshaller Instance { get; }
    private static DBProxyTargetUnmarshaller();
    public sealed virtual DBProxyTarget Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxyTarget Unmarshall(JsonUnmarshallerContext context);
    public static DBProxyTargetUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBProxyUnmarshaller : object {
    private static DBProxyUnmarshaller _instance;
    public static DBProxyUnmarshaller Instance { get; }
    private static DBProxyUnmarshaller();
    public sealed virtual DBProxy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBProxy Unmarshall(JsonUnmarshallerContext context);
    public static DBProxyUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBRecommendationUnmarshaller : object {
    private static DBRecommendationUnmarshaller _instance;
    public static DBRecommendationUnmarshaller Instance { get; }
    private static DBRecommendationUnmarshaller();
    public sealed virtual DBRecommendation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBRecommendation Unmarshall(JsonUnmarshallerContext context);
    public static DBRecommendationUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSecurityGroupAlreadyExistsExceptionUnmarshaller : object {
    private static DBSecurityGroupAlreadyExistsExceptionUnmarshaller _instance;
    public static DBSecurityGroupAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBSecurityGroupAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBSecurityGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSecurityGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSecurityGroupAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSecurityGroupMembershipUnmarshaller : object {
    private static DBSecurityGroupMembershipUnmarshaller _instance;
    public static DBSecurityGroupMembershipUnmarshaller Instance { get; }
    private static DBSecurityGroupMembershipUnmarshaller();
    public sealed virtual DBSecurityGroupMembership Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSecurityGroupMembership Unmarshall(JsonUnmarshallerContext context);
    public static DBSecurityGroupMembershipUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller : object {
    private static DBSecurityGroupNotFoundExceptionUnmarshaller _instance;
    public static DBSecurityGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBSecurityGroupNotFoundExceptionUnmarshaller();
    public sealed virtual DBSecurityGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSecurityGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSecurityGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSecurityGroupNotSupportedExceptionUnmarshaller : object {
    private static DBSecurityGroupNotSupportedExceptionUnmarshaller _instance;
    public static DBSecurityGroupNotSupportedExceptionUnmarshaller Instance { get; }
    private static DBSecurityGroupNotSupportedExceptionUnmarshaller();
    public sealed virtual DBSecurityGroupNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSecurityGroupNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSecurityGroupNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSecurityGroupQuotaExceededExceptionUnmarshaller : object {
    private static DBSecurityGroupQuotaExceededExceptionUnmarshaller _instance;
    public static DBSecurityGroupQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBSecurityGroupQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBSecurityGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSecurityGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSecurityGroupQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSecurityGroupUnmarshaller : object {
    private static DBSecurityGroupUnmarshaller _instance;
    public static DBSecurityGroupUnmarshaller Instance { get; }
    private static DBSecurityGroupUnmarshaller();
    public sealed virtual DBSecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static DBSecurityGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBShardGroupAlreadyExistsExceptionUnmarshaller : object {
    private static DBShardGroupAlreadyExistsExceptionUnmarshaller _instance;
    public static DBShardGroupAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBShardGroupAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBShardGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBShardGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBShardGroupAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBShardGroupNotFoundExceptionUnmarshaller : object {
    private static DBShardGroupNotFoundExceptionUnmarshaller _instance;
    public static DBShardGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBShardGroupNotFoundExceptionUnmarshaller();
    public sealed virtual DBShardGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBShardGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBShardGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBShardGroupUnmarshaller : object {
    private static DBShardGroupUnmarshaller _instance;
    public static DBShardGroupUnmarshaller Instance { get; }
    private static DBShardGroupUnmarshaller();
    public sealed virtual DBShardGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBShardGroup Unmarshall(JsonUnmarshallerContext context);
    public static DBShardGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller : object {
    private static DBSnapshotAlreadyExistsExceptionUnmarshaller _instance;
    public static DBSnapshotAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBSnapshotAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBSnapshotAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSnapshotAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSnapshotAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSnapshotAttributesResultUnmarshaller : object {
    private static DBSnapshotAttributesResultUnmarshaller _instance;
    public static DBSnapshotAttributesResultUnmarshaller Instance { get; }
    private static DBSnapshotAttributesResultUnmarshaller();
    public sealed virtual DBSnapshotAttributesResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSnapshotAttributesResult Unmarshall(JsonUnmarshallerContext context);
    public static DBSnapshotAttributesResultUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSnapshotAttributeUnmarshaller : object {
    private static DBSnapshotAttributeUnmarshaller _instance;
    public static DBSnapshotAttributeUnmarshaller Instance { get; }
    private static DBSnapshotAttributeUnmarshaller();
    public sealed virtual DBSnapshotAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSnapshotAttribute Unmarshall(JsonUnmarshallerContext context);
    public static DBSnapshotAttributeUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller : object {
    private static DBSnapshotNotFoundExceptionUnmarshaller _instance;
    public static DBSnapshotNotFoundExceptionUnmarshaller Instance { get; }
    private static DBSnapshotNotFoundExceptionUnmarshaller();
    public sealed virtual DBSnapshotNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSnapshotNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSnapshotNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSnapshotTenantDatabaseNotFoundExceptionUnmarshaller : object {
    private static DBSnapshotTenantDatabaseNotFoundExceptionUnmarshaller _instance;
    public static DBSnapshotTenantDatabaseNotFoundExceptionUnmarshaller Instance { get; }
    private static DBSnapshotTenantDatabaseNotFoundExceptionUnmarshaller();
    public sealed virtual DBSnapshotTenantDatabaseNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSnapshotTenantDatabaseNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSnapshotTenantDatabaseNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSnapshotTenantDatabaseUnmarshaller : object {
    private static DBSnapshotTenantDatabaseUnmarshaller _instance;
    public static DBSnapshotTenantDatabaseUnmarshaller Instance { get; }
    private static DBSnapshotTenantDatabaseUnmarshaller();
    public sealed virtual DBSnapshotTenantDatabase Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSnapshotTenantDatabase Unmarshall(JsonUnmarshallerContext context);
    public static DBSnapshotTenantDatabaseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSnapshotUnmarshaller : object {
    private static DBSnapshotUnmarshaller _instance;
    public static DBSnapshotUnmarshaller Instance { get; }
    private static DBSnapshotUnmarshaller();
    public sealed virtual DBSnapshot Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSnapshot Unmarshall(JsonUnmarshallerContext context);
    public static DBSnapshotUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller : object {
    private static DBSubnetGroupAlreadyExistsExceptionUnmarshaller _instance;
    public static DBSubnetGroupAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DBSubnetGroupAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DBSubnetGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSubnetGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSubnetGroupAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller : object {
    private static DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller _instance;
    public static DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller Instance { get; }
    private static DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller();
    public sealed virtual DBSubnetGroupDoesNotCoverEnoughAZsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSubnetGroupDoesNotCoverEnoughAZsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSubnetGroupNotAllowedExceptionUnmarshaller : object {
    private static DBSubnetGroupNotAllowedExceptionUnmarshaller _instance;
    public static DBSubnetGroupNotAllowedExceptionUnmarshaller Instance { get; }
    private static DBSubnetGroupNotAllowedExceptionUnmarshaller();
    public sealed virtual DBSubnetGroupNotAllowedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSubnetGroupNotAllowedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSubnetGroupNotAllowedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller : object {
    private static DBSubnetGroupNotFoundExceptionUnmarshaller _instance;
    public static DBSubnetGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static DBSubnetGroupNotFoundExceptionUnmarshaller();
    public sealed virtual DBSubnetGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSubnetGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSubnetGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller : object {
    private static DBSubnetGroupQuotaExceededExceptionUnmarshaller _instance;
    public static DBSubnetGroupQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBSubnetGroupQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBSubnetGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSubnetGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSubnetGroupQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller : object {
    private static DBSubnetGroupUnmarshaller _instance;
    public static DBSubnetGroupUnmarshaller Instance { get; }
    private static DBSubnetGroupUnmarshaller();
    public sealed virtual DBSubnetGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSubnetGroup Unmarshall(JsonUnmarshallerContext context);
    public static DBSubnetGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller : object {
    private static DBSubnetQuotaExceededExceptionUnmarshaller _instance;
    public static DBSubnetQuotaExceededExceptionUnmarshaller Instance { get; }
    private static DBSubnetQuotaExceededExceptionUnmarshaller();
    public sealed virtual DBSubnetQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBSubnetQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBSubnetQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller : object {
    private static DBUpgradeDependencyFailureExceptionUnmarshaller _instance;
    public static DBUpgradeDependencyFailureExceptionUnmarshaller Instance { get; }
    private static DBUpgradeDependencyFailureExceptionUnmarshaller();
    public sealed virtual DBUpgradeDependencyFailureException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DBUpgradeDependencyFailureException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DBUpgradeDependencyFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteBlueGreenDeploymentRequestMarshaller : object {
    private static DeleteBlueGreenDeploymentRequestMarshaller _instance;
    public static DeleteBlueGreenDeploymentRequestMarshaller Instance { get; }
    private static DeleteBlueGreenDeploymentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBlueGreenDeploymentRequest publicRequest);
    internal static DeleteBlueGreenDeploymentRequestMarshaller GetInstance();
    public static DeleteBlueGreenDeploymentRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteBlueGreenDeploymentResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteBlueGreenDeploymentResponseUnmarshaller _instance;
    public static DeleteBlueGreenDeploymentResponseUnmarshaller Instance { get; }
    private static DeleteBlueGreenDeploymentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteBlueGreenDeploymentResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBlueGreenDeploymentResponseUnmarshaller GetInstance();
    public static DeleteBlueGreenDeploymentResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteCustomDBEngineVersionRequestMarshaller : object {
    private static DeleteCustomDBEngineVersionRequestMarshaller _instance;
    public static DeleteCustomDBEngineVersionRequestMarshaller Instance { get; }
    private static DeleteCustomDBEngineVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCustomDBEngineVersionRequest publicRequest);
    internal static DeleteCustomDBEngineVersionRequestMarshaller GetInstance();
    public static DeleteCustomDBEngineVersionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteCustomDBEngineVersionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteCustomDBEngineVersionResponseUnmarshaller _instance;
    public static DeleteCustomDBEngineVersionResponseUnmarshaller Instance { get; }
    private static DeleteCustomDBEngineVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteCustomDBEngineVersionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCustomDBEngineVersionResponseUnmarshaller GetInstance();
    public static DeleteCustomDBEngineVersionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterAutomatedBackupRequestMarshaller : object {
    private static DeleteDBClusterAutomatedBackupRequestMarshaller _instance;
    public static DeleteDBClusterAutomatedBackupRequestMarshaller Instance { get; }
    private static DeleteDBClusterAutomatedBackupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBClusterAutomatedBackupRequest publicRequest);
    internal static DeleteDBClusterAutomatedBackupRequestMarshaller GetInstance();
    public static DeleteDBClusterAutomatedBackupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterAutomatedBackupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBClusterAutomatedBackupResponseUnmarshaller _instance;
    public static DeleteDBClusterAutomatedBackupResponseUnmarshaller Instance { get; }
    private static DeleteDBClusterAutomatedBackupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBClusterAutomatedBackupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBClusterAutomatedBackupResponseUnmarshaller GetInstance();
    public static DeleteDBClusterAutomatedBackupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointRequestMarshaller : object {
    private static DeleteDBClusterEndpointRequestMarshaller _instance;
    public static DeleteDBClusterEndpointRequestMarshaller Instance { get; }
    private static DeleteDBClusterEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBClusterEndpointRequest publicRequest);
    internal static DeleteDBClusterEndpointRequestMarshaller GetInstance();
    public static DeleteDBClusterEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBClusterEndpointResponseUnmarshaller _instance;
    public static DeleteDBClusterEndpointResponseUnmarshaller Instance { get; }
    private static DeleteDBClusterEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBClusterEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBClusterEndpointResponseUnmarshaller GetInstance();
    public static DeleteDBClusterEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller : object {
    private static DeleteDBClusterParameterGroupRequestMarshaller _instance;
    public static DeleteDBClusterParameterGroupRequestMarshaller Instance { get; }
    private static DeleteDBClusterParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBClusterParameterGroupRequest publicRequest);
    internal static DeleteDBClusterParameterGroupRequestMarshaller GetInstance();
    public static DeleteDBClusterParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBClusterParameterGroupResponseUnmarshaller _instance;
    public static DeleteDBClusterParameterGroupResponseUnmarshaller Instance { get; }
    private static DeleteDBClusterParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBClusterParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBClusterParameterGroupResponseUnmarshaller GetInstance();
    public static DeleteDBClusterParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller : object {
    private static DeleteDBClusterRequestMarshaller _instance;
    public static DeleteDBClusterRequestMarshaller Instance { get; }
    private static DeleteDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBClusterRequest publicRequest);
    internal static DeleteDBClusterRequestMarshaller GetInstance();
    public static DeleteDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBClusterResponseUnmarshaller _instance;
    public static DeleteDBClusterResponseUnmarshaller Instance { get; }
    private static DeleteDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBClusterResponseUnmarshaller GetInstance();
    public static DeleteDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller : object {
    private static DeleteDBClusterSnapshotRequestMarshaller _instance;
    public static DeleteDBClusterSnapshotRequestMarshaller Instance { get; }
    private static DeleteDBClusterSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBClusterSnapshotRequest publicRequest);
    internal static DeleteDBClusterSnapshotRequestMarshaller GetInstance();
    public static DeleteDBClusterSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBClusterSnapshotResponseUnmarshaller _instance;
    public static DeleteDBClusterSnapshotResponseUnmarshaller Instance { get; }
    private static DeleteDBClusterSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBClusterSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBClusterSnapshotResponseUnmarshaller GetInstance();
    public static DeleteDBClusterSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBInstanceAutomatedBackupRequestMarshaller : object {
    private static DeleteDBInstanceAutomatedBackupRequestMarshaller _instance;
    public static DeleteDBInstanceAutomatedBackupRequestMarshaller Instance { get; }
    private static DeleteDBInstanceAutomatedBackupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBInstanceAutomatedBackupRequest publicRequest);
    internal static DeleteDBInstanceAutomatedBackupRequestMarshaller GetInstance();
    public static DeleteDBInstanceAutomatedBackupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBInstanceAutomatedBackupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBInstanceAutomatedBackupResponseUnmarshaller _instance;
    public static DeleteDBInstanceAutomatedBackupResponseUnmarshaller Instance { get; }
    private static DeleteDBInstanceAutomatedBackupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBInstanceAutomatedBackupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBInstanceAutomatedBackupResponseUnmarshaller GetInstance();
    public static DeleteDBInstanceAutomatedBackupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller : object {
    private static DeleteDBInstanceRequestMarshaller _instance;
    public static DeleteDBInstanceRequestMarshaller Instance { get; }
    private static DeleteDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBInstanceRequest publicRequest);
    internal static DeleteDBInstanceRequestMarshaller GetInstance();
    public static DeleteDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBInstanceResponseUnmarshaller _instance;
    public static DeleteDBInstanceResponseUnmarshaller Instance { get; }
    private static DeleteDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBInstanceResponseUnmarshaller GetInstance();
    public static DeleteDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBParameterGroupRequestMarshaller : object {
    private static DeleteDBParameterGroupRequestMarshaller _instance;
    public static DeleteDBParameterGroupRequestMarshaller Instance { get; }
    private static DeleteDBParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBParameterGroupRequest publicRequest);
    internal static DeleteDBParameterGroupRequestMarshaller GetInstance();
    public static DeleteDBParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBParameterGroupResponseUnmarshaller _instance;
    public static DeleteDBParameterGroupResponseUnmarshaller Instance { get; }
    private static DeleteDBParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBParameterGroupResponseUnmarshaller GetInstance();
    public static DeleteDBParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBProxyEndpointRequestMarshaller : object {
    private static DeleteDBProxyEndpointRequestMarshaller _instance;
    public static DeleteDBProxyEndpointRequestMarshaller Instance { get; }
    private static DeleteDBProxyEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBProxyEndpointRequest publicRequest);
    internal static DeleteDBProxyEndpointRequestMarshaller GetInstance();
    public static DeleteDBProxyEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBProxyEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBProxyEndpointResponseUnmarshaller _instance;
    public static DeleteDBProxyEndpointResponseUnmarshaller Instance { get; }
    private static DeleteDBProxyEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBProxyEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBProxyEndpointResponseUnmarshaller GetInstance();
    public static DeleteDBProxyEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBProxyRequestMarshaller : object {
    private static DeleteDBProxyRequestMarshaller _instance;
    public static DeleteDBProxyRequestMarshaller Instance { get; }
    private static DeleteDBProxyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBProxyRequest publicRequest);
    internal static DeleteDBProxyRequestMarshaller GetInstance();
    public static DeleteDBProxyRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBProxyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBProxyResponseUnmarshaller _instance;
    public static DeleteDBProxyResponseUnmarshaller Instance { get; }
    private static DeleteDBProxyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBProxyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBProxyResponseUnmarshaller GetInstance();
    public static DeleteDBProxyResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBSecurityGroupRequestMarshaller : object {
    private static DeleteDBSecurityGroupRequestMarshaller _instance;
    public static DeleteDBSecurityGroupRequestMarshaller Instance { get; }
    private static DeleteDBSecurityGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBSecurityGroupRequest publicRequest);
    internal static DeleteDBSecurityGroupRequestMarshaller GetInstance();
    public static DeleteDBSecurityGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBSecurityGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBSecurityGroupResponseUnmarshaller _instance;
    public static DeleteDBSecurityGroupResponseUnmarshaller Instance { get; }
    private static DeleteDBSecurityGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBSecurityGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBSecurityGroupResponseUnmarshaller GetInstance();
    public static DeleteDBSecurityGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBShardGroupRequestMarshaller : object {
    private static DeleteDBShardGroupRequestMarshaller _instance;
    public static DeleteDBShardGroupRequestMarshaller Instance { get; }
    private static DeleteDBShardGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBShardGroupRequest publicRequest);
    internal static DeleteDBShardGroupRequestMarshaller GetInstance();
    public static DeleteDBShardGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBShardGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBShardGroupResponseUnmarshaller _instance;
    public static DeleteDBShardGroupResponseUnmarshaller Instance { get; }
    private static DeleteDBShardGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBShardGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBShardGroupResponseUnmarshaller GetInstance();
    public static DeleteDBShardGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBSnapshotRequestMarshaller : object {
    private static DeleteDBSnapshotRequestMarshaller _instance;
    public static DeleteDBSnapshotRequestMarshaller Instance { get; }
    private static DeleteDBSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBSnapshotRequest publicRequest);
    internal static DeleteDBSnapshotRequestMarshaller GetInstance();
    public static DeleteDBSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBSnapshotResponseUnmarshaller _instance;
    public static DeleteDBSnapshotResponseUnmarshaller Instance { get; }
    private static DeleteDBSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBSnapshotResponseUnmarshaller GetInstance();
    public static DeleteDBSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller : object {
    private static DeleteDBSubnetGroupRequestMarshaller _instance;
    public static DeleteDBSubnetGroupRequestMarshaller Instance { get; }
    private static DeleteDBSubnetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDBSubnetGroupRequest publicRequest);
    internal static DeleteDBSubnetGroupRequestMarshaller GetInstance();
    public static DeleteDBSubnetGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDBSubnetGroupResponseUnmarshaller _instance;
    public static DeleteDBSubnetGroupResponseUnmarshaller Instance { get; }
    private static DeleteDBSubnetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDBSubnetGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDBSubnetGroupResponseUnmarshaller GetInstance();
    public static DeleteDBSubnetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller : object {
    private static DeleteEventSubscriptionRequestMarshaller _instance;
    public static DeleteEventSubscriptionRequestMarshaller Instance { get; }
    private static DeleteEventSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEventSubscriptionRequest publicRequest);
    internal static DeleteEventSubscriptionRequestMarshaller GetInstance();
    public static DeleteEventSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteEventSubscriptionResponseUnmarshaller _instance;
    public static DeleteEventSubscriptionResponseUnmarshaller Instance { get; }
    private static DeleteEventSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteEventSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEventSubscriptionResponseUnmarshaller GetInstance();
    public static DeleteEventSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteGlobalClusterRequestMarshaller : object {
    private static DeleteGlobalClusterRequestMarshaller _instance;
    public static DeleteGlobalClusterRequestMarshaller Instance { get; }
    private static DeleteGlobalClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteGlobalClusterRequest publicRequest);
    internal static DeleteGlobalClusterRequestMarshaller GetInstance();
    public static DeleteGlobalClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteGlobalClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteGlobalClusterResponseUnmarshaller _instance;
    public static DeleteGlobalClusterResponseUnmarshaller Instance { get; }
    private static DeleteGlobalClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteGlobalClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteGlobalClusterResponseUnmarshaller GetInstance();
    public static DeleteGlobalClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteIntegrationRequestMarshaller : object {
    private static DeleteIntegrationRequestMarshaller _instance;
    public static DeleteIntegrationRequestMarshaller Instance { get; }
    private static DeleteIntegrationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIntegrationRequest publicRequest);
    internal static DeleteIntegrationRequestMarshaller GetInstance();
    public static DeleteIntegrationRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteIntegrationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteIntegrationResponseUnmarshaller _instance;
    public static DeleteIntegrationResponseUnmarshaller Instance { get; }
    private static DeleteIntegrationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteIntegrationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIntegrationResponseUnmarshaller GetInstance();
    public static DeleteIntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteOptionGroupRequestMarshaller : object {
    private static DeleteOptionGroupRequestMarshaller _instance;
    public static DeleteOptionGroupRequestMarshaller Instance { get; }
    private static DeleteOptionGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteOptionGroupRequest publicRequest);
    internal static DeleteOptionGroupRequestMarshaller GetInstance();
    public static DeleteOptionGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteOptionGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteOptionGroupResponseUnmarshaller _instance;
    public static DeleteOptionGroupResponseUnmarshaller Instance { get; }
    private static DeleteOptionGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteOptionGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteOptionGroupResponseUnmarshaller GetInstance();
    public static DeleteOptionGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteTenantDatabaseRequestMarshaller : object {
    private static DeleteTenantDatabaseRequestMarshaller _instance;
    public static DeleteTenantDatabaseRequestMarshaller Instance { get; }
    private static DeleteTenantDatabaseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTenantDatabaseRequest publicRequest);
    internal static DeleteTenantDatabaseRequestMarshaller GetInstance();
    public static DeleteTenantDatabaseRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeleteTenantDatabaseResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteTenantDatabaseResponseUnmarshaller _instance;
    public static DeleteTenantDatabaseResponseUnmarshaller Instance { get; }
    private static DeleteTenantDatabaseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteTenantDatabaseResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTenantDatabaseResponseUnmarshaller GetInstance();
    public static DeleteTenantDatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeregisterDBProxyTargetsRequestMarshaller : object {
    private static DeregisterDBProxyTargetsRequestMarshaller _instance;
    public static DeregisterDBProxyTargetsRequestMarshaller Instance { get; }
    private static DeregisterDBProxyTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterDBProxyTargetsRequest publicRequest);
    internal static DeregisterDBProxyTargetsRequestMarshaller GetInstance();
    public static DeregisterDBProxyTargetsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DeregisterDBProxyTargetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeregisterDBProxyTargetsResponseUnmarshaller _instance;
    public static DeregisterDBProxyTargetsResponseUnmarshaller Instance { get; }
    private static DeregisterDBProxyTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeregisterDBProxyTargetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterDBProxyTargetsResponseUnmarshaller GetInstance();
    public static DeregisterDBProxyTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller : object {
    private static DescribeAccountAttributesRequestMarshaller _instance;
    public static DescribeAccountAttributesRequestMarshaller Instance { get; }
    private static DescribeAccountAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountAttributesRequest publicRequest);
    internal static DescribeAccountAttributesRequestMarshaller GetInstance();
    public static DescribeAccountAttributesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAccountAttributesResponseUnmarshaller _instance;
    public static DescribeAccountAttributesResponseUnmarshaller Instance { get; }
    private static DescribeAccountAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAccountAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountAttributesResponseUnmarshaller GetInstance();
    public static DescribeAccountAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeBlueGreenDeploymentsRequestMarshaller : object {
    private static DescribeBlueGreenDeploymentsRequestMarshaller _instance;
    public static DescribeBlueGreenDeploymentsRequestMarshaller Instance { get; }
    private static DescribeBlueGreenDeploymentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBlueGreenDeploymentsRequest publicRequest);
    internal static DescribeBlueGreenDeploymentsRequestMarshaller GetInstance();
    public static DescribeBlueGreenDeploymentsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeBlueGreenDeploymentsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeBlueGreenDeploymentsResponseUnmarshaller _instance;
    public static DescribeBlueGreenDeploymentsResponseUnmarshaller Instance { get; }
    private static DescribeBlueGreenDeploymentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeBlueGreenDeploymentsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBlueGreenDeploymentsResponseUnmarshaller GetInstance();
    public static DescribeBlueGreenDeploymentsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeCertificatesRequestMarshaller : object {
    private static DescribeCertificatesRequestMarshaller _instance;
    public static DescribeCertificatesRequestMarshaller Instance { get; }
    private static DescribeCertificatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCertificatesRequest publicRequest);
    internal static DescribeCertificatesRequestMarshaller GetInstance();
    public static DescribeCertificatesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeCertificatesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeCertificatesResponseUnmarshaller _instance;
    public static DescribeCertificatesResponseUnmarshaller Instance { get; }
    private static DescribeCertificatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeCertificatesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCertificatesResponseUnmarshaller GetInstance();
    public static DescribeCertificatesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterAutomatedBackupsRequestMarshaller : object {
    private static DescribeDBClusterAutomatedBackupsRequestMarshaller _instance;
    public static DescribeDBClusterAutomatedBackupsRequestMarshaller Instance { get; }
    private static DescribeDBClusterAutomatedBackupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClusterAutomatedBackupsRequest publicRequest);
    internal static DescribeDBClusterAutomatedBackupsRequestMarshaller GetInstance();
    public static DescribeDBClusterAutomatedBackupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterAutomatedBackupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClusterAutomatedBackupsResponseUnmarshaller _instance;
    public static DescribeDBClusterAutomatedBackupsResponseUnmarshaller Instance { get; }
    private static DescribeDBClusterAutomatedBackupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClusterAutomatedBackupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClusterAutomatedBackupsResponseUnmarshaller GetInstance();
    public static DescribeDBClusterAutomatedBackupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterBacktracksRequestMarshaller : object {
    private static DescribeDBClusterBacktracksRequestMarshaller _instance;
    public static DescribeDBClusterBacktracksRequestMarshaller Instance { get; }
    private static DescribeDBClusterBacktracksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClusterBacktracksRequest publicRequest);
    internal static DescribeDBClusterBacktracksRequestMarshaller GetInstance();
    public static DescribeDBClusterBacktracksRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterBacktracksResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClusterBacktracksResponseUnmarshaller _instance;
    public static DescribeDBClusterBacktracksResponseUnmarshaller Instance { get; }
    private static DescribeDBClusterBacktracksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClusterBacktracksResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClusterBacktracksResponseUnmarshaller GetInstance();
    public static DescribeDBClusterBacktracksResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsRequestMarshaller : object {
    private static DescribeDBClusterEndpointsRequestMarshaller _instance;
    public static DescribeDBClusterEndpointsRequestMarshaller Instance { get; }
    private static DescribeDBClusterEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClusterEndpointsRequest publicRequest);
    internal static DescribeDBClusterEndpointsRequestMarshaller GetInstance();
    public static DescribeDBClusterEndpointsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClusterEndpointsResponseUnmarshaller _instance;
    public static DescribeDBClusterEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeDBClusterEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClusterEndpointsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClusterEndpointsResponseUnmarshaller GetInstance();
    public static DescribeDBClusterEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller : object {
    private static DescribeDBClusterParameterGroupsRequestMarshaller _instance;
    public static DescribeDBClusterParameterGroupsRequestMarshaller Instance { get; }
    private static DescribeDBClusterParameterGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClusterParameterGroupsRequest publicRequest);
    internal static DescribeDBClusterParameterGroupsRequestMarshaller GetInstance();
    public static DescribeDBClusterParameterGroupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClusterParameterGroupsResponseUnmarshaller _instance;
    public static DescribeDBClusterParameterGroupsResponseUnmarshaller Instance { get; }
    private static DescribeDBClusterParameterGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClusterParameterGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClusterParameterGroupsResponseUnmarshaller GetInstance();
    public static DescribeDBClusterParameterGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller : object {
    private static DescribeDBClusterParametersRequestMarshaller _instance;
    public static DescribeDBClusterParametersRequestMarshaller Instance { get; }
    private static DescribeDBClusterParametersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClusterParametersRequest publicRequest);
    internal static DescribeDBClusterParametersRequestMarshaller GetInstance();
    public static DescribeDBClusterParametersRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClusterParametersResponseUnmarshaller _instance;
    public static DescribeDBClusterParametersResponseUnmarshaller Instance { get; }
    private static DescribeDBClusterParametersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClusterParametersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClusterParametersResponseUnmarshaller GetInstance();
    public static DescribeDBClusterParametersResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller : object {
    private static DescribeDBClusterSnapshotAttributesRequestMarshaller _instance;
    public static DescribeDBClusterSnapshotAttributesRequestMarshaller Instance { get; }
    private static DescribeDBClusterSnapshotAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClusterSnapshotAttributesRequest publicRequest);
    internal static DescribeDBClusterSnapshotAttributesRequestMarshaller GetInstance();
    public static DescribeDBClusterSnapshotAttributesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClusterSnapshotAttributesResponseUnmarshaller _instance;
    public static DescribeDBClusterSnapshotAttributesResponseUnmarshaller Instance { get; }
    private static DescribeDBClusterSnapshotAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClusterSnapshotAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClusterSnapshotAttributesResponseUnmarshaller GetInstance();
    public static DescribeDBClusterSnapshotAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller : object {
    private static DescribeDBClusterSnapshotsRequestMarshaller _instance;
    public static DescribeDBClusterSnapshotsRequestMarshaller Instance { get; }
    private static DescribeDBClusterSnapshotsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClusterSnapshotsRequest publicRequest);
    internal static DescribeDBClusterSnapshotsRequestMarshaller GetInstance();
    public static DescribeDBClusterSnapshotsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClusterSnapshotsResponseUnmarshaller _instance;
    public static DescribeDBClusterSnapshotsResponseUnmarshaller Instance { get; }
    private static DescribeDBClusterSnapshotsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClusterSnapshotsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClusterSnapshotsResponseUnmarshaller GetInstance();
    public static DescribeDBClusterSnapshotsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller : object {
    private static DescribeDBClustersRequestMarshaller _instance;
    public static DescribeDBClustersRequestMarshaller Instance { get; }
    private static DescribeDBClustersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBClustersRequest publicRequest);
    internal static DescribeDBClustersRequestMarshaller GetInstance();
    public static DescribeDBClustersRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBClustersResponseUnmarshaller _instance;
    public static DescribeDBClustersResponseUnmarshaller Instance { get; }
    private static DescribeDBClustersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBClustersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBClustersResponseUnmarshaller GetInstance();
    public static DescribeDBClustersResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller : object {
    private static DescribeDBEngineVersionsRequestMarshaller _instance;
    public static DescribeDBEngineVersionsRequestMarshaller Instance { get; }
    private static DescribeDBEngineVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBEngineVersionsRequest publicRequest);
    internal static DescribeDBEngineVersionsRequestMarshaller GetInstance();
    public static DescribeDBEngineVersionsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBEngineVersionsResponseUnmarshaller _instance;
    public static DescribeDBEngineVersionsResponseUnmarshaller Instance { get; }
    private static DescribeDBEngineVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBEngineVersionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBEngineVersionsResponseUnmarshaller GetInstance();
    public static DescribeDBEngineVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBInstanceAutomatedBackupsRequestMarshaller : object {
    private static DescribeDBInstanceAutomatedBackupsRequestMarshaller _instance;
    public static DescribeDBInstanceAutomatedBackupsRequestMarshaller Instance { get; }
    private static DescribeDBInstanceAutomatedBackupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBInstanceAutomatedBackupsRequest publicRequest);
    internal static DescribeDBInstanceAutomatedBackupsRequestMarshaller GetInstance();
    public static DescribeDBInstanceAutomatedBackupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBInstanceAutomatedBackupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBInstanceAutomatedBackupsResponseUnmarshaller _instance;
    public static DescribeDBInstanceAutomatedBackupsResponseUnmarshaller Instance { get; }
    private static DescribeDBInstanceAutomatedBackupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBInstanceAutomatedBackupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBInstanceAutomatedBackupsResponseUnmarshaller GetInstance();
    public static DescribeDBInstanceAutomatedBackupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller : object {
    private static DescribeDBInstancesRequestMarshaller _instance;
    public static DescribeDBInstancesRequestMarshaller Instance { get; }
    private static DescribeDBInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBInstancesRequest publicRequest);
    internal static DescribeDBInstancesRequestMarshaller GetInstance();
    public static DescribeDBInstancesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBInstancesResponseUnmarshaller _instance;
    public static DescribeDBInstancesResponseUnmarshaller Instance { get; }
    private static DescribeDBInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBInstancesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBInstancesResponseUnmarshaller GetInstance();
    public static DescribeDBInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBLogFilesDetailsUnmarshaller : object {
    private static DescribeDBLogFilesDetailsUnmarshaller _instance;
    public static DescribeDBLogFilesDetailsUnmarshaller Instance { get; }
    private static DescribeDBLogFilesDetailsUnmarshaller();
    public sealed virtual DescribeDBLogFilesDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DescribeDBLogFilesDetails Unmarshall(JsonUnmarshallerContext context);
    public static DescribeDBLogFilesDetailsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBLogFilesRequestMarshaller : object {
    private static DescribeDBLogFilesRequestMarshaller _instance;
    public static DescribeDBLogFilesRequestMarshaller Instance { get; }
    private static DescribeDBLogFilesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBLogFilesRequest publicRequest);
    internal static DescribeDBLogFilesRequestMarshaller GetInstance();
    public static DescribeDBLogFilesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBLogFilesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBLogFilesResponseUnmarshaller _instance;
    public static DescribeDBLogFilesResponseUnmarshaller Instance { get; }
    private static DescribeDBLogFilesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBLogFilesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBLogFilesResponseUnmarshaller GetInstance();
    public static DescribeDBLogFilesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsRequestMarshaller : object {
    private static DescribeDBParameterGroupsRequestMarshaller _instance;
    public static DescribeDBParameterGroupsRequestMarshaller Instance { get; }
    private static DescribeDBParameterGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBParameterGroupsRequest publicRequest);
    internal static DescribeDBParameterGroupsRequestMarshaller GetInstance();
    public static DescribeDBParameterGroupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBParameterGroupsResponseUnmarshaller _instance;
    public static DescribeDBParameterGroupsResponseUnmarshaller Instance { get; }
    private static DescribeDBParameterGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBParameterGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBParameterGroupsResponseUnmarshaller GetInstance();
    public static DescribeDBParameterGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBParametersRequestMarshaller : object {
    private static DescribeDBParametersRequestMarshaller _instance;
    public static DescribeDBParametersRequestMarshaller Instance { get; }
    private static DescribeDBParametersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBParametersRequest publicRequest);
    internal static DescribeDBParametersRequestMarshaller GetInstance();
    public static DescribeDBParametersRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBParametersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBParametersResponseUnmarshaller _instance;
    public static DescribeDBParametersResponseUnmarshaller Instance { get; }
    private static DescribeDBParametersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBParametersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBParametersResponseUnmarshaller GetInstance();
    public static DescribeDBParametersResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxiesRequestMarshaller : object {
    private static DescribeDBProxiesRequestMarshaller _instance;
    public static DescribeDBProxiesRequestMarshaller Instance { get; }
    private static DescribeDBProxiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBProxiesRequest publicRequest);
    internal static DescribeDBProxiesRequestMarshaller GetInstance();
    public static DescribeDBProxiesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxiesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBProxiesResponseUnmarshaller _instance;
    public static DescribeDBProxiesResponseUnmarshaller Instance { get; }
    private static DescribeDBProxiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBProxiesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBProxiesResponseUnmarshaller GetInstance();
    public static DescribeDBProxiesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxyEndpointsRequestMarshaller : object {
    private static DescribeDBProxyEndpointsRequestMarshaller _instance;
    public static DescribeDBProxyEndpointsRequestMarshaller Instance { get; }
    private static DescribeDBProxyEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBProxyEndpointsRequest publicRequest);
    internal static DescribeDBProxyEndpointsRequestMarshaller GetInstance();
    public static DescribeDBProxyEndpointsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxyEndpointsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBProxyEndpointsResponseUnmarshaller _instance;
    public static DescribeDBProxyEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeDBProxyEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBProxyEndpointsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBProxyEndpointsResponseUnmarshaller GetInstance();
    public static DescribeDBProxyEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxyTargetGroupsRequestMarshaller : object {
    private static DescribeDBProxyTargetGroupsRequestMarshaller _instance;
    public static DescribeDBProxyTargetGroupsRequestMarshaller Instance { get; }
    private static DescribeDBProxyTargetGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBProxyTargetGroupsRequest publicRequest);
    internal static DescribeDBProxyTargetGroupsRequestMarshaller GetInstance();
    public static DescribeDBProxyTargetGroupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxyTargetGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBProxyTargetGroupsResponseUnmarshaller _instance;
    public static DescribeDBProxyTargetGroupsResponseUnmarshaller Instance { get; }
    private static DescribeDBProxyTargetGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBProxyTargetGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBProxyTargetGroupsResponseUnmarshaller GetInstance();
    public static DescribeDBProxyTargetGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxyTargetsRequestMarshaller : object {
    private static DescribeDBProxyTargetsRequestMarshaller _instance;
    public static DescribeDBProxyTargetsRequestMarshaller Instance { get; }
    private static DescribeDBProxyTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBProxyTargetsRequest publicRequest);
    internal static DescribeDBProxyTargetsRequestMarshaller GetInstance();
    public static DescribeDBProxyTargetsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBProxyTargetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBProxyTargetsResponseUnmarshaller _instance;
    public static DescribeDBProxyTargetsResponseUnmarshaller Instance { get; }
    private static DescribeDBProxyTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBProxyTargetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBProxyTargetsResponseUnmarshaller GetInstance();
    public static DescribeDBProxyTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBRecommendationsRequestMarshaller : object {
    private static DescribeDBRecommendationsRequestMarshaller _instance;
    public static DescribeDBRecommendationsRequestMarshaller Instance { get; }
    private static DescribeDBRecommendationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBRecommendationsRequest publicRequest);
    internal static DescribeDBRecommendationsRequestMarshaller GetInstance();
    public static DescribeDBRecommendationsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBRecommendationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBRecommendationsResponseUnmarshaller _instance;
    public static DescribeDBRecommendationsResponseUnmarshaller Instance { get; }
    private static DescribeDBRecommendationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBRecommendationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBRecommendationsResponseUnmarshaller GetInstance();
    public static DescribeDBRecommendationsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSecurityGroupsRequestMarshaller : object {
    private static DescribeDBSecurityGroupsRequestMarshaller _instance;
    public static DescribeDBSecurityGroupsRequestMarshaller Instance { get; }
    private static DescribeDBSecurityGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBSecurityGroupsRequest publicRequest);
    internal static DescribeDBSecurityGroupsRequestMarshaller GetInstance();
    public static DescribeDBSecurityGroupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSecurityGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBSecurityGroupsResponseUnmarshaller _instance;
    public static DescribeDBSecurityGroupsResponseUnmarshaller Instance { get; }
    private static DescribeDBSecurityGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBSecurityGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBSecurityGroupsResponseUnmarshaller GetInstance();
    public static DescribeDBSecurityGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBShardGroupsRequestMarshaller : object {
    private static DescribeDBShardGroupsRequestMarshaller _instance;
    public static DescribeDBShardGroupsRequestMarshaller Instance { get; }
    private static DescribeDBShardGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBShardGroupsRequest publicRequest);
    internal static DescribeDBShardGroupsRequestMarshaller GetInstance();
    public static DescribeDBShardGroupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBShardGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBShardGroupsResponseUnmarshaller _instance;
    public static DescribeDBShardGroupsResponseUnmarshaller Instance { get; }
    private static DescribeDBShardGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBShardGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBShardGroupsResponseUnmarshaller GetInstance();
    public static DescribeDBShardGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSnapshotAttributesRequestMarshaller : object {
    private static DescribeDBSnapshotAttributesRequestMarshaller _instance;
    public static DescribeDBSnapshotAttributesRequestMarshaller Instance { get; }
    private static DescribeDBSnapshotAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBSnapshotAttributesRequest publicRequest);
    internal static DescribeDBSnapshotAttributesRequestMarshaller GetInstance();
    public static DescribeDBSnapshotAttributesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSnapshotAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBSnapshotAttributesResponseUnmarshaller _instance;
    public static DescribeDBSnapshotAttributesResponseUnmarshaller Instance { get; }
    private static DescribeDBSnapshotAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBSnapshotAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBSnapshotAttributesResponseUnmarshaller GetInstance();
    public static DescribeDBSnapshotAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSnapshotsRequestMarshaller : object {
    private static DescribeDBSnapshotsRequestMarshaller _instance;
    public static DescribeDBSnapshotsRequestMarshaller Instance { get; }
    private static DescribeDBSnapshotsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBSnapshotsRequest publicRequest);
    internal static DescribeDBSnapshotsRequestMarshaller GetInstance();
    public static DescribeDBSnapshotsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSnapshotsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBSnapshotsResponseUnmarshaller _instance;
    public static DescribeDBSnapshotsResponseUnmarshaller Instance { get; }
    private static DescribeDBSnapshotsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBSnapshotsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBSnapshotsResponseUnmarshaller GetInstance();
    public static DescribeDBSnapshotsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSnapshotTenantDatabasesRequestMarshaller : object {
    private static DescribeDBSnapshotTenantDatabasesRequestMarshaller _instance;
    public static DescribeDBSnapshotTenantDatabasesRequestMarshaller Instance { get; }
    private static DescribeDBSnapshotTenantDatabasesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBSnapshotTenantDatabasesRequest publicRequest);
    internal static DescribeDBSnapshotTenantDatabasesRequestMarshaller GetInstance();
    public static DescribeDBSnapshotTenantDatabasesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSnapshotTenantDatabasesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBSnapshotTenantDatabasesResponseUnmarshaller _instance;
    public static DescribeDBSnapshotTenantDatabasesResponseUnmarshaller Instance { get; }
    private static DescribeDBSnapshotTenantDatabasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBSnapshotTenantDatabasesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBSnapshotTenantDatabasesResponseUnmarshaller GetInstance();
    public static DescribeDBSnapshotTenantDatabasesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller : object {
    private static DescribeDBSubnetGroupsRequestMarshaller _instance;
    public static DescribeDBSubnetGroupsRequestMarshaller Instance { get; }
    private static DescribeDBSubnetGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDBSubnetGroupsRequest publicRequest);
    internal static DescribeDBSubnetGroupsRequestMarshaller GetInstance();
    public static DescribeDBSubnetGroupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeDBSubnetGroupsResponseUnmarshaller _instance;
    public static DescribeDBSubnetGroupsResponseUnmarshaller Instance { get; }
    private static DescribeDBSubnetGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeDBSubnetGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDBSubnetGroupsResponseUnmarshaller GetInstance();
    public static DescribeDBSubnetGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller : object {
    private static DescribeEngineDefaultClusterParametersRequestMarshaller _instance;
    public static DescribeEngineDefaultClusterParametersRequestMarshaller Instance { get; }
    private static DescribeEngineDefaultClusterParametersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEngineDefaultClusterParametersRequest publicRequest);
    internal static DescribeEngineDefaultClusterParametersRequestMarshaller GetInstance();
    public static DescribeEngineDefaultClusterParametersRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeEngineDefaultClusterParametersResponseUnmarshaller _instance;
    public static DescribeEngineDefaultClusterParametersResponseUnmarshaller Instance { get; }
    private static DescribeEngineDefaultClusterParametersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeEngineDefaultClusterParametersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEngineDefaultClusterParametersResponseUnmarshaller GetInstance();
    public static DescribeEngineDefaultClusterParametersResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersRequestMarshaller : object {
    private static DescribeEngineDefaultParametersRequestMarshaller _instance;
    public static DescribeEngineDefaultParametersRequestMarshaller Instance { get; }
    private static DescribeEngineDefaultParametersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEngineDefaultParametersRequest publicRequest);
    internal static DescribeEngineDefaultParametersRequestMarshaller GetInstance();
    public static DescribeEngineDefaultParametersRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeEngineDefaultParametersResponseUnmarshaller _instance;
    public static DescribeEngineDefaultParametersResponseUnmarshaller Instance { get; }
    private static DescribeEngineDefaultParametersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeEngineDefaultParametersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEngineDefaultParametersResponseUnmarshaller GetInstance();
    public static DescribeEngineDefaultParametersResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller : object {
    private static DescribeEventCategoriesRequestMarshaller _instance;
    public static DescribeEventCategoriesRequestMarshaller Instance { get; }
    private static DescribeEventCategoriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEventCategoriesRequest publicRequest);
    internal static DescribeEventCategoriesRequestMarshaller GetInstance();
    public static DescribeEventCategoriesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeEventCategoriesResponseUnmarshaller _instance;
    public static DescribeEventCategoriesResponseUnmarshaller Instance { get; }
    private static DescribeEventCategoriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeEventCategoriesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEventCategoriesResponseUnmarshaller GetInstance();
    public static DescribeEventCategoriesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller : object {
    private static DescribeEventsRequestMarshaller _instance;
    public static DescribeEventsRequestMarshaller Instance { get; }
    private static DescribeEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEventsRequest publicRequest);
    internal static DescribeEventsRequestMarshaller GetInstance();
    public static DescribeEventsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeEventsResponseUnmarshaller _instance;
    public static DescribeEventsResponseUnmarshaller Instance { get; }
    private static DescribeEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeEventsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEventsResponseUnmarshaller GetInstance();
    public static DescribeEventsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller : object {
    private static DescribeEventSubscriptionsRequestMarshaller _instance;
    public static DescribeEventSubscriptionsRequestMarshaller Instance { get; }
    private static DescribeEventSubscriptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEventSubscriptionsRequest publicRequest);
    internal static DescribeEventSubscriptionsRequestMarshaller GetInstance();
    public static DescribeEventSubscriptionsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeEventSubscriptionsResponseUnmarshaller _instance;
    public static DescribeEventSubscriptionsResponseUnmarshaller Instance { get; }
    private static DescribeEventSubscriptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeEventSubscriptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEventSubscriptionsResponseUnmarshaller GetInstance();
    public static DescribeEventSubscriptionsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller : object {
    private static DescribeExportTasksRequestMarshaller _instance;
    public static DescribeExportTasksRequestMarshaller Instance { get; }
    private static DescribeExportTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeExportTasksRequest publicRequest);
    internal static DescribeExportTasksRequestMarshaller GetInstance();
    public static DescribeExportTasksRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeExportTasksResponseUnmarshaller _instance;
    public static DescribeExportTasksResponseUnmarshaller Instance { get; }
    private static DescribeExportTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeExportTasksResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeExportTasksResponseUnmarshaller GetInstance();
    public static DescribeExportTasksResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeGlobalClustersRequestMarshaller : object {
    private static DescribeGlobalClustersRequestMarshaller _instance;
    public static DescribeGlobalClustersRequestMarshaller Instance { get; }
    private static DescribeGlobalClustersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeGlobalClustersRequest publicRequest);
    internal static DescribeGlobalClustersRequestMarshaller GetInstance();
    public static DescribeGlobalClustersRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeGlobalClustersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeGlobalClustersResponseUnmarshaller _instance;
    public static DescribeGlobalClustersResponseUnmarshaller Instance { get; }
    private static DescribeGlobalClustersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeGlobalClustersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeGlobalClustersResponseUnmarshaller GetInstance();
    public static DescribeGlobalClustersResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeIntegrationsRequestMarshaller : object {
    private static DescribeIntegrationsRequestMarshaller _instance;
    public static DescribeIntegrationsRequestMarshaller Instance { get; }
    private static DescribeIntegrationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIntegrationsRequest publicRequest);
    internal static DescribeIntegrationsRequestMarshaller GetInstance();
    public static DescribeIntegrationsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeIntegrationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeIntegrationsResponseUnmarshaller _instance;
    public static DescribeIntegrationsResponseUnmarshaller Instance { get; }
    private static DescribeIntegrationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeIntegrationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIntegrationsResponseUnmarshaller GetInstance();
    public static DescribeIntegrationsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeOptionGroupOptionsRequestMarshaller : object {
    private static DescribeOptionGroupOptionsRequestMarshaller _instance;
    public static DescribeOptionGroupOptionsRequestMarshaller Instance { get; }
    private static DescribeOptionGroupOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeOptionGroupOptionsRequest publicRequest);
    internal static DescribeOptionGroupOptionsRequestMarshaller GetInstance();
    public static DescribeOptionGroupOptionsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeOptionGroupOptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeOptionGroupOptionsResponseUnmarshaller _instance;
    public static DescribeOptionGroupOptionsResponseUnmarshaller Instance { get; }
    private static DescribeOptionGroupOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeOptionGroupOptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeOptionGroupOptionsResponseUnmarshaller GetInstance();
    public static DescribeOptionGroupOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeOptionGroupsRequestMarshaller : object {
    private static DescribeOptionGroupsRequestMarshaller _instance;
    public static DescribeOptionGroupsRequestMarshaller Instance { get; }
    private static DescribeOptionGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeOptionGroupsRequest publicRequest);
    internal static DescribeOptionGroupsRequestMarshaller GetInstance();
    public static DescribeOptionGroupsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeOptionGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeOptionGroupsResponseUnmarshaller _instance;
    public static DescribeOptionGroupsResponseUnmarshaller Instance { get; }
    private static DescribeOptionGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeOptionGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeOptionGroupsResponseUnmarshaller GetInstance();
    public static DescribeOptionGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller : object {
    private static DescribeOrderableDBInstanceOptionsRequestMarshaller _instance;
    public static DescribeOrderableDBInstanceOptionsRequestMarshaller Instance { get; }
    private static DescribeOrderableDBInstanceOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeOrderableDBInstanceOptionsRequest publicRequest);
    internal static DescribeOrderableDBInstanceOptionsRequestMarshaller GetInstance();
    public static DescribeOrderableDBInstanceOptionsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeOrderableDBInstanceOptionsResponseUnmarshaller _instance;
    public static DescribeOrderableDBInstanceOptionsResponseUnmarshaller Instance { get; }
    private static DescribeOrderableDBInstanceOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeOrderableDBInstanceOptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeOrderableDBInstanceOptionsResponseUnmarshaller GetInstance();
    public static DescribeOrderableDBInstanceOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller : object {
    private static DescribePendingMaintenanceActionsRequestMarshaller _instance;
    public static DescribePendingMaintenanceActionsRequestMarshaller Instance { get; }
    private static DescribePendingMaintenanceActionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePendingMaintenanceActionsRequest publicRequest);
    internal static DescribePendingMaintenanceActionsRequestMarshaller GetInstance();
    public static DescribePendingMaintenanceActionsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribePendingMaintenanceActionsResponseUnmarshaller _instance;
    public static DescribePendingMaintenanceActionsResponseUnmarshaller Instance { get; }
    private static DescribePendingMaintenanceActionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribePendingMaintenanceActionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePendingMaintenanceActionsResponseUnmarshaller GetInstance();
    public static DescribePendingMaintenanceActionsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeReservedDBInstancesOfferingsRequestMarshaller : object {
    private static DescribeReservedDBInstancesOfferingsRequestMarshaller _instance;
    public static DescribeReservedDBInstancesOfferingsRequestMarshaller Instance { get; }
    private static DescribeReservedDBInstancesOfferingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedDBInstancesOfferingsRequest publicRequest);
    internal static DescribeReservedDBInstancesOfferingsRequestMarshaller GetInstance();
    public static DescribeReservedDBInstancesOfferingsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeReservedDBInstancesOfferingsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeReservedDBInstancesOfferingsResponseUnmarshaller _instance;
    public static DescribeReservedDBInstancesOfferingsResponseUnmarshaller Instance { get; }
    private static DescribeReservedDBInstancesOfferingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeReservedDBInstancesOfferingsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedDBInstancesOfferingsResponseUnmarshaller GetInstance();
    public static DescribeReservedDBInstancesOfferingsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeReservedDBInstancesRequestMarshaller : object {
    private static DescribeReservedDBInstancesRequestMarshaller _instance;
    public static DescribeReservedDBInstancesRequestMarshaller Instance { get; }
    private static DescribeReservedDBInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedDBInstancesRequest publicRequest);
    internal static DescribeReservedDBInstancesRequestMarshaller GetInstance();
    public static DescribeReservedDBInstancesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeReservedDBInstancesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeReservedDBInstancesResponseUnmarshaller _instance;
    public static DescribeReservedDBInstancesResponseUnmarshaller Instance { get; }
    private static DescribeReservedDBInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeReservedDBInstancesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedDBInstancesResponseUnmarshaller GetInstance();
    public static DescribeReservedDBInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeSourceRegionsRequestMarshaller : object {
    private static DescribeSourceRegionsRequestMarshaller _instance;
    public static DescribeSourceRegionsRequestMarshaller Instance { get; }
    private static DescribeSourceRegionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSourceRegionsRequest publicRequest);
    internal static DescribeSourceRegionsRequestMarshaller GetInstance();
    public static DescribeSourceRegionsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeSourceRegionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeSourceRegionsResponseUnmarshaller _instance;
    public static DescribeSourceRegionsResponseUnmarshaller Instance { get; }
    private static DescribeSourceRegionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeSourceRegionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSourceRegionsResponseUnmarshaller GetInstance();
    public static DescribeSourceRegionsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeTenantDatabasesRequestMarshaller : object {
    private static DescribeTenantDatabasesRequestMarshaller _instance;
    public static DescribeTenantDatabasesRequestMarshaller Instance { get; }
    private static DescribeTenantDatabasesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTenantDatabasesRequest publicRequest);
    internal static DescribeTenantDatabasesRequestMarshaller GetInstance();
    public static DescribeTenantDatabasesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeTenantDatabasesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTenantDatabasesResponseUnmarshaller _instance;
    public static DescribeTenantDatabasesResponseUnmarshaller Instance { get; }
    private static DescribeTenantDatabasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTenantDatabasesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTenantDatabasesResponseUnmarshaller GetInstance();
    public static DescribeTenantDatabasesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsRequestMarshaller : object {
    private static DescribeValidDBInstanceModificationsRequestMarshaller _instance;
    public static DescribeValidDBInstanceModificationsRequestMarshaller Instance { get; }
    private static DescribeValidDBInstanceModificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeValidDBInstanceModificationsRequest publicRequest);
    internal static DescribeValidDBInstanceModificationsRequestMarshaller GetInstance();
    public static DescribeValidDBInstanceModificationsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeValidDBInstanceModificationsResponseUnmarshaller _instance;
    public static DescribeValidDBInstanceModificationsResponseUnmarshaller Instance { get; }
    private static DescribeValidDBInstanceModificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeValidDBInstanceModificationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeValidDBInstanceModificationsResponseUnmarshaller GetInstance();
    public static DescribeValidDBInstanceModificationsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DisableHttpEndpointRequestMarshaller : object {
    private static DisableHttpEndpointRequestMarshaller _instance;
    public static DisableHttpEndpointRequestMarshaller Instance { get; }
    private static DisableHttpEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableHttpEndpointRequest publicRequest);
    internal static DisableHttpEndpointRequestMarshaller GetInstance();
    public static DisableHttpEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DisableHttpEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DisableHttpEndpointResponseUnmarshaller _instance;
    public static DisableHttpEndpointResponseUnmarshaller Instance { get; }
    private static DisableHttpEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DisableHttpEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableHttpEndpointResponseUnmarshaller GetInstance();
    public static DisableHttpEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DocLinkUnmarshaller : object {
    private static DocLinkUnmarshaller _instance;
    public static DocLinkUnmarshaller Instance { get; }
    private static DocLinkUnmarshaller();
    public sealed virtual DocLink Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocLink Unmarshall(JsonUnmarshallerContext context);
    public static DocLinkUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DomainMembershipUnmarshaller : object {
    private static DomainMembershipUnmarshaller _instance;
    public static DomainMembershipUnmarshaller Instance { get; }
    private static DomainMembershipUnmarshaller();
    public sealed virtual DomainMembership Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DomainMembership Unmarshall(JsonUnmarshallerContext context);
    public static DomainMembershipUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DomainNotFoundExceptionUnmarshaller : object {
    private static DomainNotFoundExceptionUnmarshaller _instance;
    public static DomainNotFoundExceptionUnmarshaller Instance { get; }
    private static DomainNotFoundExceptionUnmarshaller();
    public sealed virtual DomainNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DomainNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DomainNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DoubleRangeUnmarshaller : object {
    private static DoubleRangeUnmarshaller _instance;
    public static DoubleRangeUnmarshaller Instance { get; }
    private static DoubleRangeUnmarshaller();
    public sealed virtual DoubleRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DoubleRange Unmarshall(JsonUnmarshallerContext context);
    public static DoubleRangeUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DownloadDBLogFilePortionRequestMarshaller : object {
    private static DownloadDBLogFilePortionRequestMarshaller _instance;
    public static DownloadDBLogFilePortionRequestMarshaller Instance { get; }
    private static DownloadDBLogFilePortionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DownloadDBLogFilePortionRequest publicRequest);
    internal static DownloadDBLogFilePortionRequestMarshaller GetInstance();
    public static DownloadDBLogFilePortionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.DownloadDBLogFilePortionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DownloadDBLogFilePortionResponseUnmarshaller _instance;
    public static DownloadDBLogFilePortionResponseUnmarshaller Instance { get; }
    private static DownloadDBLogFilePortionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DownloadDBLogFilePortionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DownloadDBLogFilePortionResponseUnmarshaller GetInstance();
    public static DownloadDBLogFilePortionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.Ec2ImagePropertiesNotSupportedExceptionUnmarshaller : object {
    private static Ec2ImagePropertiesNotSupportedExceptionUnmarshaller _instance;
    public static Ec2ImagePropertiesNotSupportedExceptionUnmarshaller Instance { get; }
    private static Ec2ImagePropertiesNotSupportedExceptionUnmarshaller();
    public sealed virtual Ec2ImagePropertiesNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ec2ImagePropertiesNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static Ec2ImagePropertiesNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EC2SecurityGroupUnmarshaller : object {
    private static EC2SecurityGroupUnmarshaller _instance;
    public static EC2SecurityGroupUnmarshaller Instance { get; }
    private static EC2SecurityGroupUnmarshaller();
    public sealed virtual EC2SecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EC2SecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static EC2SecurityGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EnableHttpEndpointRequestMarshaller : object {
    private static EnableHttpEndpointRequestMarshaller _instance;
    public static EnableHttpEndpointRequestMarshaller Instance { get; }
    private static EnableHttpEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableHttpEndpointRequest publicRequest);
    internal static EnableHttpEndpointRequestMarshaller GetInstance();
    public static EnableHttpEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EnableHttpEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static EnableHttpEndpointResponseUnmarshaller _instance;
    public static EnableHttpEndpointResponseUnmarshaller Instance { get; }
    private static EnableHttpEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, EnableHttpEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableHttpEndpointResponseUnmarshaller GetInstance();
    public static EnableHttpEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EndpointUnmarshaller : object {
    private static EndpointUnmarshaller _instance;
    public static EndpointUnmarshaller Instance { get; }
    private static EndpointUnmarshaller();
    public sealed virtual Endpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Endpoint Unmarshall(JsonUnmarshallerContext context);
    public static EndpointUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller : object {
    private static EngineDefaultsUnmarshaller _instance;
    public static EngineDefaultsUnmarshaller Instance { get; }
    private static EngineDefaultsUnmarshaller();
    public sealed virtual EngineDefaults Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EngineDefaults Unmarshall(JsonUnmarshallerContext context);
    public static EngineDefaultsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller : object {
    private static EventCategoriesMapUnmarshaller _instance;
    public static EventCategoriesMapUnmarshaller Instance { get; }
    private static EventCategoriesMapUnmarshaller();
    public sealed virtual EventCategoriesMap Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventCategoriesMap Unmarshall(JsonUnmarshallerContext context);
    public static EventCategoriesMapUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller : object {
    private static EventSubscriptionQuotaExceededExceptionUnmarshaller _instance;
    public static EventSubscriptionQuotaExceededExceptionUnmarshaller Instance { get; }
    private static EventSubscriptionQuotaExceededExceptionUnmarshaller();
    public sealed virtual EventSubscriptionQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventSubscriptionQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventSubscriptionQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller : object {
    private static EventSubscriptionUnmarshaller _instance;
    public static EventSubscriptionUnmarshaller Instance { get; }
    private static EventSubscriptionUnmarshaller();
    public sealed virtual EventSubscription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventSubscription Unmarshall(JsonUnmarshallerContext context);
    public static EventSubscriptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.EventUnmarshaller : object {
    private static EventUnmarshaller _instance;
    public static EventUnmarshaller Instance { get; }
    private static EventUnmarshaller();
    public sealed virtual Event Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Event Unmarshall(JsonUnmarshallerContext context);
    public static EventUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ExportTaskAlreadyExistsExceptionUnmarshaller : object {
    private static ExportTaskAlreadyExistsExceptionUnmarshaller _instance;
    public static ExportTaskAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ExportTaskAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ExportTaskAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTaskAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExportTaskAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ExportTaskNotFoundExceptionUnmarshaller : object {
    private static ExportTaskNotFoundExceptionUnmarshaller _instance;
    public static ExportTaskNotFoundExceptionUnmarshaller Instance { get; }
    private static ExportTaskNotFoundExceptionUnmarshaller();
    public sealed virtual ExportTaskNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTaskNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExportTaskNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller : object {
    private static ExportTaskUnmarshaller _instance;
    public static ExportTaskUnmarshaller Instance { get; }
    private static ExportTaskUnmarshaller();
    public sealed virtual ExportTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTask Unmarshall(JsonUnmarshallerContext context);
    public static ExportTaskUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller : object {
    private static FailoverDBClusterRequestMarshaller _instance;
    public static FailoverDBClusterRequestMarshaller Instance { get; }
    private static FailoverDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(FailoverDBClusterRequest publicRequest);
    internal static FailoverDBClusterRequestMarshaller GetInstance();
    public static FailoverDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static FailoverDBClusterResponseUnmarshaller _instance;
    public static FailoverDBClusterResponseUnmarshaller Instance { get; }
    private static FailoverDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, FailoverDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static FailoverDBClusterResponseUnmarshaller GetInstance();
    public static FailoverDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.FailoverGlobalClusterRequestMarshaller : object {
    private static FailoverGlobalClusterRequestMarshaller _instance;
    public static FailoverGlobalClusterRequestMarshaller Instance { get; }
    private static FailoverGlobalClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(FailoverGlobalClusterRequest publicRequest);
    internal static FailoverGlobalClusterRequestMarshaller GetInstance();
    public static FailoverGlobalClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.FailoverGlobalClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static FailoverGlobalClusterResponseUnmarshaller _instance;
    public static FailoverGlobalClusterResponseUnmarshaller Instance { get; }
    private static FailoverGlobalClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, FailoverGlobalClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static FailoverGlobalClusterResponseUnmarshaller GetInstance();
    public static FailoverGlobalClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.FailoverStateUnmarshaller : object {
    private static FailoverStateUnmarshaller _instance;
    public static FailoverStateUnmarshaller Instance { get; }
    private static FailoverStateUnmarshaller();
    public sealed virtual FailoverState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FailoverState Unmarshall(JsonUnmarshallerContext context);
    public static FailoverStateUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.GlobalClusterAlreadyExistsExceptionUnmarshaller : object {
    private static GlobalClusterAlreadyExistsExceptionUnmarshaller _instance;
    public static GlobalClusterAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static GlobalClusterAlreadyExistsExceptionUnmarshaller();
    public sealed virtual GlobalClusterAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalClusterAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static GlobalClusterAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.GlobalClusterMemberUnmarshaller : object {
    private static GlobalClusterMemberUnmarshaller _instance;
    public static GlobalClusterMemberUnmarshaller Instance { get; }
    private static GlobalClusterMemberUnmarshaller();
    public sealed virtual GlobalClusterMember Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalClusterMember Unmarshall(JsonUnmarshallerContext context);
    public static GlobalClusterMemberUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.GlobalClusterNotFoundExceptionUnmarshaller : object {
    private static GlobalClusterNotFoundExceptionUnmarshaller _instance;
    public static GlobalClusterNotFoundExceptionUnmarshaller Instance { get; }
    private static GlobalClusterNotFoundExceptionUnmarshaller();
    public sealed virtual GlobalClusterNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalClusterNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static GlobalClusterNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.GlobalClusterQuotaExceededExceptionUnmarshaller : object {
    private static GlobalClusterQuotaExceededExceptionUnmarshaller _instance;
    public static GlobalClusterQuotaExceededExceptionUnmarshaller Instance { get; }
    private static GlobalClusterQuotaExceededExceptionUnmarshaller();
    public sealed virtual GlobalClusterQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalClusterQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static GlobalClusterQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.GlobalClusterUnmarshaller : object {
    private static GlobalClusterUnmarshaller _instance;
    public static GlobalClusterUnmarshaller Instance { get; }
    private static GlobalClusterUnmarshaller();
    public sealed virtual GlobalCluster Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalCluster Unmarshall(JsonUnmarshallerContext context);
    public static GlobalClusterUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IamRoleMissingPermissionsExceptionUnmarshaller : object {
    private static IamRoleMissingPermissionsExceptionUnmarshaller _instance;
    public static IamRoleMissingPermissionsExceptionUnmarshaller Instance { get; }
    private static IamRoleMissingPermissionsExceptionUnmarshaller();
    public sealed virtual IamRoleMissingPermissionsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamRoleMissingPermissionsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IamRoleMissingPermissionsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IamRoleNotFoundExceptionUnmarshaller : object {
    private static IamRoleNotFoundExceptionUnmarshaller _instance;
    public static IamRoleNotFoundExceptionUnmarshaller Instance { get; }
    private static IamRoleNotFoundExceptionUnmarshaller();
    public sealed virtual IamRoleNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamRoleNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IamRoleNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller : object {
    private static InstanceQuotaExceededExceptionUnmarshaller _instance;
    public static InstanceQuotaExceededExceptionUnmarshaller Instance { get; }
    private static InstanceQuotaExceededExceptionUnmarshaller();
    public sealed virtual InstanceQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InstanceQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InsufficientAvailableIPsInSubnetExceptionUnmarshaller : object {
    private static InsufficientAvailableIPsInSubnetExceptionUnmarshaller _instance;
    public static InsufficientAvailableIPsInSubnetExceptionUnmarshaller Instance { get; }
    private static InsufficientAvailableIPsInSubnetExceptionUnmarshaller();
    public sealed virtual InsufficientAvailableIPsInSubnetException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsufficientAvailableIPsInSubnetException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientAvailableIPsInSubnetExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller : object {
    private static InsufficientDBClusterCapacityExceptionUnmarshaller _instance;
    public static InsufficientDBClusterCapacityExceptionUnmarshaller Instance { get; }
    private static InsufficientDBClusterCapacityExceptionUnmarshaller();
    public sealed virtual InsufficientDBClusterCapacityException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsufficientDBClusterCapacityException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientDBClusterCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller : object {
    private static InsufficientDBInstanceCapacityExceptionUnmarshaller _instance;
    public static InsufficientDBInstanceCapacityExceptionUnmarshaller Instance { get; }
    private static InsufficientDBInstanceCapacityExceptionUnmarshaller();
    public sealed virtual InsufficientDBInstanceCapacityException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsufficientDBInstanceCapacityException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientDBInstanceCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller : object {
    private static InsufficientStorageClusterCapacityExceptionUnmarshaller _instance;
    public static InsufficientStorageClusterCapacityExceptionUnmarshaller Instance { get; }
    private static InsufficientStorageClusterCapacityExceptionUnmarshaller();
    public sealed virtual InsufficientStorageClusterCapacityException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsufficientStorageClusterCapacityException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientStorageClusterCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IntegrationAlreadyExistsExceptionUnmarshaller : object {
    private static IntegrationAlreadyExistsExceptionUnmarshaller _instance;
    public static IntegrationAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static IntegrationAlreadyExistsExceptionUnmarshaller();
    public sealed virtual IntegrationAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IntegrationAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IntegrationAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IntegrationConflictOperationExceptionUnmarshaller : object {
    private static IntegrationConflictOperationExceptionUnmarshaller _instance;
    public static IntegrationConflictOperationExceptionUnmarshaller Instance { get; }
    private static IntegrationConflictOperationExceptionUnmarshaller();
    public sealed virtual IntegrationConflictOperationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IntegrationConflictOperationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IntegrationConflictOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IntegrationErrorUnmarshaller : object {
    private static IntegrationErrorUnmarshaller _instance;
    public static IntegrationErrorUnmarshaller Instance { get; }
    private static IntegrationErrorUnmarshaller();
    public sealed virtual IntegrationError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IntegrationError Unmarshall(JsonUnmarshallerContext context);
    public static IntegrationErrorUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IntegrationNotFoundExceptionUnmarshaller : object {
    private static IntegrationNotFoundExceptionUnmarshaller _instance;
    public static IntegrationNotFoundExceptionUnmarshaller Instance { get; }
    private static IntegrationNotFoundExceptionUnmarshaller();
    public sealed virtual IntegrationNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IntegrationNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IntegrationNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IntegrationQuotaExceededExceptionUnmarshaller : object {
    private static IntegrationQuotaExceededExceptionUnmarshaller _instance;
    public static IntegrationQuotaExceededExceptionUnmarshaller Instance { get; }
    private static IntegrationQuotaExceededExceptionUnmarshaller();
    public sealed virtual IntegrationQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IntegrationQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IntegrationQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IntegrationUnmarshaller : object {
    private static IntegrationUnmarshaller _instance;
    public static IntegrationUnmarshaller Instance { get; }
    private static IntegrationUnmarshaller();
    public sealed virtual Integration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Integration Unmarshall(JsonUnmarshallerContext context);
    public static IntegrationUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidBlueGreenDeploymentStateExceptionUnmarshaller : object {
    private static InvalidBlueGreenDeploymentStateExceptionUnmarshaller _instance;
    public static InvalidBlueGreenDeploymentStateExceptionUnmarshaller Instance { get; }
    private static InvalidBlueGreenDeploymentStateExceptionUnmarshaller();
    public sealed virtual InvalidBlueGreenDeploymentStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidBlueGreenDeploymentStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidBlueGreenDeploymentStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidCustomDBEngineVersionStateExceptionUnmarshaller : object {
    private static InvalidCustomDBEngineVersionStateExceptionUnmarshaller _instance;
    public static InvalidCustomDBEngineVersionStateExceptionUnmarshaller Instance { get; }
    private static InvalidCustomDBEngineVersionStateExceptionUnmarshaller();
    public sealed virtual InvalidCustomDBEngineVersionStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidCustomDBEngineVersionStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCustomDBEngineVersionStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBClusterAutomatedBackupStateExceptionUnmarshaller : object {
    private static InvalidDBClusterAutomatedBackupStateExceptionUnmarshaller _instance;
    public static InvalidDBClusterAutomatedBackupStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBClusterAutomatedBackupStateExceptionUnmarshaller();
    public sealed virtual InvalidDBClusterAutomatedBackupStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBClusterAutomatedBackupStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBClusterAutomatedBackupStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBClusterCapacityExceptionUnmarshaller : object {
    private static InvalidDBClusterCapacityExceptionUnmarshaller _instance;
    public static InvalidDBClusterCapacityExceptionUnmarshaller Instance { get; }
    private static InvalidDBClusterCapacityExceptionUnmarshaller();
    public sealed virtual InvalidDBClusterCapacityException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBClusterCapacityException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBClusterCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBClusterEndpointStateExceptionUnmarshaller : object {
    private static InvalidDBClusterEndpointStateExceptionUnmarshaller _instance;
    public static InvalidDBClusterEndpointStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBClusterEndpointStateExceptionUnmarshaller();
    public sealed virtual InvalidDBClusterEndpointStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBClusterEndpointStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBClusterEndpointStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller : object {
    private static InvalidDBClusterSnapshotStateExceptionUnmarshaller _instance;
    public static InvalidDBClusterSnapshotStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBClusterSnapshotStateExceptionUnmarshaller();
    public sealed virtual InvalidDBClusterSnapshotStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBClusterSnapshotStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBClusterSnapshotStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller : object {
    private static InvalidDBClusterStateExceptionUnmarshaller _instance;
    public static InvalidDBClusterStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBClusterStateExceptionUnmarshaller();
    public sealed virtual InvalidDBClusterStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBClusterStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBClusterStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBInstanceAutomatedBackupStateExceptionUnmarshaller : object {
    private static InvalidDBInstanceAutomatedBackupStateExceptionUnmarshaller _instance;
    public static InvalidDBInstanceAutomatedBackupStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBInstanceAutomatedBackupStateExceptionUnmarshaller();
    public sealed virtual InvalidDBInstanceAutomatedBackupStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBInstanceAutomatedBackupStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBInstanceAutomatedBackupStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller : object {
    private static InvalidDBInstanceStateExceptionUnmarshaller _instance;
    public static InvalidDBInstanceStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBInstanceStateExceptionUnmarshaller();
    public sealed virtual InvalidDBInstanceStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBInstanceStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBInstanceStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller : object {
    private static InvalidDBParameterGroupStateExceptionUnmarshaller _instance;
    public static InvalidDBParameterGroupStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBParameterGroupStateExceptionUnmarshaller();
    public sealed virtual InvalidDBParameterGroupStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBParameterGroupStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBParameterGroupStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBProxyEndpointStateExceptionUnmarshaller : object {
    private static InvalidDBProxyEndpointStateExceptionUnmarshaller _instance;
    public static InvalidDBProxyEndpointStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBProxyEndpointStateExceptionUnmarshaller();
    public sealed virtual InvalidDBProxyEndpointStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBProxyEndpointStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBProxyEndpointStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBProxyStateExceptionUnmarshaller : object {
    private static InvalidDBProxyStateExceptionUnmarshaller _instance;
    public static InvalidDBProxyStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBProxyStateExceptionUnmarshaller();
    public sealed virtual InvalidDBProxyStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBProxyStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBProxyStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller : object {
    private static InvalidDBSecurityGroupStateExceptionUnmarshaller _instance;
    public static InvalidDBSecurityGroupStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBSecurityGroupStateExceptionUnmarshaller();
    public sealed virtual InvalidDBSecurityGroupStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBSecurityGroupStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBSecurityGroupStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBShardGroupStateExceptionUnmarshaller : object {
    private static InvalidDBShardGroupStateExceptionUnmarshaller _instance;
    public static InvalidDBShardGroupStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBShardGroupStateExceptionUnmarshaller();
    public sealed virtual InvalidDBShardGroupStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBShardGroupStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBShardGroupStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller : object {
    private static InvalidDBSnapshotStateExceptionUnmarshaller _instance;
    public static InvalidDBSnapshotStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBSnapshotStateExceptionUnmarshaller();
    public sealed virtual InvalidDBSnapshotStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBSnapshotStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBSnapshotStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupExceptionUnmarshaller : object {
    private static InvalidDBSubnetGroupExceptionUnmarshaller _instance;
    public static InvalidDBSubnetGroupExceptionUnmarshaller Instance { get; }
    private static InvalidDBSubnetGroupExceptionUnmarshaller();
    public sealed virtual InvalidDBSubnetGroupException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBSubnetGroupException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBSubnetGroupExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller : object {
    private static InvalidDBSubnetGroupStateExceptionUnmarshaller _instance;
    public static InvalidDBSubnetGroupStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBSubnetGroupStateExceptionUnmarshaller();
    public sealed virtual InvalidDBSubnetGroupStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBSubnetGroupStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBSubnetGroupStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller : object {
    private static InvalidDBSubnetStateExceptionUnmarshaller _instance;
    public static InvalidDBSubnetStateExceptionUnmarshaller Instance { get; }
    private static InvalidDBSubnetStateExceptionUnmarshaller();
    public sealed virtual InvalidDBSubnetStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDBSubnetStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDBSubnetStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller : object {
    private static InvalidEventSubscriptionStateExceptionUnmarshaller _instance;
    public static InvalidEventSubscriptionStateExceptionUnmarshaller Instance { get; }
    private static InvalidEventSubscriptionStateExceptionUnmarshaller();
    public sealed virtual InvalidEventSubscriptionStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidEventSubscriptionStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidEventSubscriptionStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidExportOnlyExceptionUnmarshaller : object {
    private static InvalidExportOnlyExceptionUnmarshaller _instance;
    public static InvalidExportOnlyExceptionUnmarshaller Instance { get; }
    private static InvalidExportOnlyExceptionUnmarshaller();
    public sealed virtual InvalidExportOnlyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidExportOnlyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidExportOnlyExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidExportSourceStateExceptionUnmarshaller : object {
    private static InvalidExportSourceStateExceptionUnmarshaller _instance;
    public static InvalidExportSourceStateExceptionUnmarshaller Instance { get; }
    private static InvalidExportSourceStateExceptionUnmarshaller();
    public sealed virtual InvalidExportSourceStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidExportSourceStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidExportSourceStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidExportTaskStateExceptionUnmarshaller : object {
    private static InvalidExportTaskStateExceptionUnmarshaller _instance;
    public static InvalidExportTaskStateExceptionUnmarshaller Instance { get; }
    private static InvalidExportTaskStateExceptionUnmarshaller();
    public sealed virtual InvalidExportTaskStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidExportTaskStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidExportTaskStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidGlobalClusterStateExceptionUnmarshaller : object {
    private static InvalidGlobalClusterStateExceptionUnmarshaller _instance;
    public static InvalidGlobalClusterStateExceptionUnmarshaller Instance { get; }
    private static InvalidGlobalClusterStateExceptionUnmarshaller();
    public sealed virtual InvalidGlobalClusterStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidGlobalClusterStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidGlobalClusterStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidIntegrationStateExceptionUnmarshaller : object {
    private static InvalidIntegrationStateExceptionUnmarshaller _instance;
    public static InvalidIntegrationStateExceptionUnmarshaller Instance { get; }
    private static InvalidIntegrationStateExceptionUnmarshaller();
    public sealed virtual InvalidIntegrationStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidIntegrationStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidIntegrationStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidMaxAcuExceptionUnmarshaller : object {
    private static InvalidMaxAcuExceptionUnmarshaller _instance;
    public static InvalidMaxAcuExceptionUnmarshaller Instance { get; }
    private static InvalidMaxAcuExceptionUnmarshaller();
    public sealed virtual InvalidMaxAcuException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidMaxAcuException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidMaxAcuExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidOptionGroupStateExceptionUnmarshaller : object {
    private static InvalidOptionGroupStateExceptionUnmarshaller _instance;
    public static InvalidOptionGroupStateExceptionUnmarshaller Instance { get; }
    private static InvalidOptionGroupStateExceptionUnmarshaller();
    public sealed virtual InvalidOptionGroupStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidOptionGroupStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOptionGroupStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidResourceStateExceptionUnmarshaller : object {
    private static InvalidResourceStateExceptionUnmarshaller _instance;
    public static InvalidResourceStateExceptionUnmarshaller Instance { get; }
    private static InvalidResourceStateExceptionUnmarshaller();
    public sealed virtual InvalidResourceStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidResourceStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidResourceStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller : object {
    private static InvalidRestoreExceptionUnmarshaller _instance;
    public static InvalidRestoreExceptionUnmarshaller Instance { get; }
    private static InvalidRestoreExceptionUnmarshaller();
    public sealed virtual InvalidRestoreException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidRestoreException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRestoreExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidS3BucketExceptionUnmarshaller : object {
    private static InvalidS3BucketExceptionUnmarshaller _instance;
    public static InvalidS3BucketExceptionUnmarshaller Instance { get; }
    private static InvalidS3BucketExceptionUnmarshaller();
    public sealed virtual InvalidS3BucketException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidS3BucketException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidS3BucketExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller : object {
    private static InvalidSubnetExceptionUnmarshaller _instance;
    public static InvalidSubnetExceptionUnmarshaller Instance { get; }
    private static InvalidSubnetExceptionUnmarshaller();
    public sealed virtual InvalidSubnetException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidSubnetException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSubnetExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller : object {
    private static InvalidVPCNetworkStateExceptionUnmarshaller _instance;
    public static InvalidVPCNetworkStateExceptionUnmarshaller Instance { get; }
    private static InvalidVPCNetworkStateExceptionUnmarshaller();
    public sealed virtual InvalidVPCNetworkStateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidVPCNetworkStateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidVPCNetworkStateExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IPRangeUnmarshaller : object {
    private static IPRangeUnmarshaller _instance;
    public static IPRangeUnmarshaller Instance { get; }
    private static IPRangeUnmarshaller();
    public sealed virtual IPRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IPRange Unmarshall(JsonUnmarshallerContext context);
    public static IPRangeUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.IssueDetailsUnmarshaller : object {
    private static IssueDetailsUnmarshaller _instance;
    public static IssueDetailsUnmarshaller Instance { get; }
    private static IssueDetailsUnmarshaller();
    public sealed virtual IssueDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IssueDetails Unmarshall(JsonUnmarshallerContext context);
    public static IssueDetailsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller : object {
    private static KMSKeyNotAccessibleExceptionUnmarshaller _instance;
    public static KMSKeyNotAccessibleExceptionUnmarshaller Instance { get; }
    private static KMSKeyNotAccessibleExceptionUnmarshaller();
    public sealed virtual KMSKeyNotAccessibleException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KMSKeyNotAccessibleException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSKeyNotAccessibleExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.LimitlessDatabaseUnmarshaller : object {
    private static LimitlessDatabaseUnmarshaller _instance;
    public static LimitlessDatabaseUnmarshaller Instance { get; }
    private static LimitlessDatabaseUnmarshaller();
    public sealed virtual LimitlessDatabase Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LimitlessDatabase Unmarshall(JsonUnmarshallerContext context);
    public static LimitlessDatabaseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListTagsForResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.MasterUserSecretUnmarshaller : object {
    private static MasterUserSecretUnmarshaller _instance;
    public static MasterUserSecretUnmarshaller Instance { get; }
    private static MasterUserSecretUnmarshaller();
    public sealed virtual MasterUserSecret Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MasterUserSecret Unmarshall(JsonUnmarshallerContext context);
    public static MasterUserSecretUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.MaxDBShardGroupLimitReachedExceptionUnmarshaller : object {
    private static MaxDBShardGroupLimitReachedExceptionUnmarshaller _instance;
    public static MaxDBShardGroupLimitReachedExceptionUnmarshaller Instance { get; }
    private static MaxDBShardGroupLimitReachedExceptionUnmarshaller();
    public sealed virtual MaxDBShardGroupLimitReachedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaxDBShardGroupLimitReachedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static MaxDBShardGroupLimitReachedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.MetricQueryUnmarshaller : object {
    private static MetricQueryUnmarshaller _instance;
    public static MetricQueryUnmarshaller Instance { get; }
    private static MetricQueryUnmarshaller();
    public sealed virtual MetricQuery Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricQuery Unmarshall(JsonUnmarshallerContext context);
    public static MetricQueryUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.MetricReferenceUnmarshaller : object {
    private static MetricReferenceUnmarshaller _instance;
    public static MetricReferenceUnmarshaller Instance { get; }
    private static MetricReferenceUnmarshaller();
    public sealed virtual MetricReference Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricReference Unmarshall(JsonUnmarshallerContext context);
    public static MetricReferenceUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.MetricUnmarshaller : object {
    private static MetricUnmarshaller _instance;
    public static MetricUnmarshaller Instance { get; }
    private static MetricUnmarshaller();
    public sealed virtual Metric Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Metric Unmarshall(JsonUnmarshallerContext context);
    public static MetricUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.MinimumEngineVersionPerAllowedValueUnmarshaller : object {
    private static MinimumEngineVersionPerAllowedValueUnmarshaller _instance;
    public static MinimumEngineVersionPerAllowedValueUnmarshaller Instance { get; }
    private static MinimumEngineVersionPerAllowedValueUnmarshaller();
    public sealed virtual MinimumEngineVersionPerAllowedValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MinimumEngineVersionPerAllowedValue Unmarshall(JsonUnmarshallerContext context);
    public static MinimumEngineVersionPerAllowedValueUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyActivityStreamRequestMarshaller : object {
    private static ModifyActivityStreamRequestMarshaller _instance;
    public static ModifyActivityStreamRequestMarshaller Instance { get; }
    private static ModifyActivityStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyActivityStreamRequest publicRequest);
    internal static ModifyActivityStreamRequestMarshaller GetInstance();
    public static ModifyActivityStreamRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyActivityStreamResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyActivityStreamResponseUnmarshaller _instance;
    public static ModifyActivityStreamResponseUnmarshaller Instance { get; }
    private static ModifyActivityStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyActivityStreamResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyActivityStreamResponseUnmarshaller GetInstance();
    public static ModifyActivityStreamResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyCertificatesRequestMarshaller : object {
    private static ModifyCertificatesRequestMarshaller _instance;
    public static ModifyCertificatesRequestMarshaller Instance { get; }
    private static ModifyCertificatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyCertificatesRequest publicRequest);
    internal static ModifyCertificatesRequestMarshaller GetInstance();
    public static ModifyCertificatesRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyCertificatesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyCertificatesResponseUnmarshaller _instance;
    public static ModifyCertificatesResponseUnmarshaller Instance { get; }
    private static ModifyCertificatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyCertificatesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyCertificatesResponseUnmarshaller GetInstance();
    public static ModifyCertificatesResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyCurrentDBClusterCapacityRequestMarshaller : object {
    private static ModifyCurrentDBClusterCapacityRequestMarshaller _instance;
    public static ModifyCurrentDBClusterCapacityRequestMarshaller Instance { get; }
    private static ModifyCurrentDBClusterCapacityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyCurrentDBClusterCapacityRequest publicRequest);
    internal static ModifyCurrentDBClusterCapacityRequestMarshaller GetInstance();
    public static ModifyCurrentDBClusterCapacityRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyCurrentDBClusterCapacityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyCurrentDBClusterCapacityResponseUnmarshaller _instance;
    public static ModifyCurrentDBClusterCapacityResponseUnmarshaller Instance { get; }
    private static ModifyCurrentDBClusterCapacityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyCurrentDBClusterCapacityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyCurrentDBClusterCapacityResponseUnmarshaller GetInstance();
    public static ModifyCurrentDBClusterCapacityResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyCustomDBEngineVersionRequestMarshaller : object {
    private static ModifyCustomDBEngineVersionRequestMarshaller _instance;
    public static ModifyCustomDBEngineVersionRequestMarshaller Instance { get; }
    private static ModifyCustomDBEngineVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyCustomDBEngineVersionRequest publicRequest);
    internal static ModifyCustomDBEngineVersionRequestMarshaller GetInstance();
    public static ModifyCustomDBEngineVersionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyCustomDBEngineVersionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyCustomDBEngineVersionResponseUnmarshaller _instance;
    public static ModifyCustomDBEngineVersionResponseUnmarshaller Instance { get; }
    private static ModifyCustomDBEngineVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyCustomDBEngineVersionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyCustomDBEngineVersionResponseUnmarshaller GetInstance();
    public static ModifyCustomDBEngineVersionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointRequestMarshaller : object {
    private static ModifyDBClusterEndpointRequestMarshaller _instance;
    public static ModifyDBClusterEndpointRequestMarshaller Instance { get; }
    private static ModifyDBClusterEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBClusterEndpointRequest publicRequest);
    internal static ModifyDBClusterEndpointRequestMarshaller GetInstance();
    public static ModifyDBClusterEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBClusterEndpointResponseUnmarshaller _instance;
    public static ModifyDBClusterEndpointResponseUnmarshaller Instance { get; }
    private static ModifyDBClusterEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBClusterEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBClusterEndpointResponseUnmarshaller GetInstance();
    public static ModifyDBClusterEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller : object {
    private static ModifyDBClusterParameterGroupRequestMarshaller _instance;
    public static ModifyDBClusterParameterGroupRequestMarshaller Instance { get; }
    private static ModifyDBClusterParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBClusterParameterGroupRequest publicRequest);
    internal static ModifyDBClusterParameterGroupRequestMarshaller GetInstance();
    public static ModifyDBClusterParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBClusterParameterGroupResponseUnmarshaller _instance;
    public static ModifyDBClusterParameterGroupResponseUnmarshaller Instance { get; }
    private static ModifyDBClusterParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBClusterParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBClusterParameterGroupResponseUnmarshaller GetInstance();
    public static ModifyDBClusterParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller : object {
    private static ModifyDBClusterRequestMarshaller _instance;
    public static ModifyDBClusterRequestMarshaller Instance { get; }
    private static ModifyDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBClusterRequest publicRequest);
    internal static ModifyDBClusterRequestMarshaller GetInstance();
    public static ModifyDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBClusterResponseUnmarshaller _instance;
    public static ModifyDBClusterResponseUnmarshaller Instance { get; }
    private static ModifyDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBClusterResponseUnmarshaller GetInstance();
    public static ModifyDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller : object {
    private static ModifyDBClusterSnapshotAttributeRequestMarshaller _instance;
    public static ModifyDBClusterSnapshotAttributeRequestMarshaller Instance { get; }
    private static ModifyDBClusterSnapshotAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBClusterSnapshotAttributeRequest publicRequest);
    internal static ModifyDBClusterSnapshotAttributeRequestMarshaller GetInstance();
    public static ModifyDBClusterSnapshotAttributeRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBClusterSnapshotAttributeResponseUnmarshaller _instance;
    public static ModifyDBClusterSnapshotAttributeResponseUnmarshaller Instance { get; }
    private static ModifyDBClusterSnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBClusterSnapshotAttributeResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBClusterSnapshotAttributeResponseUnmarshaller GetInstance();
    public static ModifyDBClusterSnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller : object {
    private static ModifyDBInstanceRequestMarshaller _instance;
    public static ModifyDBInstanceRequestMarshaller Instance { get; }
    private static ModifyDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBInstanceRequest publicRequest);
    internal static ModifyDBInstanceRequestMarshaller GetInstance();
    public static ModifyDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBInstanceResponseUnmarshaller _instance;
    public static ModifyDBInstanceResponseUnmarshaller Instance { get; }
    private static ModifyDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBInstanceResponseUnmarshaller GetInstance();
    public static ModifyDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBParameterGroupRequestMarshaller : object {
    private static ModifyDBParameterGroupRequestMarshaller _instance;
    public static ModifyDBParameterGroupRequestMarshaller Instance { get; }
    private static ModifyDBParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBParameterGroupRequest publicRequest);
    internal static ModifyDBParameterGroupRequestMarshaller GetInstance();
    public static ModifyDBParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBParameterGroupResponseUnmarshaller _instance;
    public static ModifyDBParameterGroupResponseUnmarshaller Instance { get; }
    private static ModifyDBParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBParameterGroupResponseUnmarshaller GetInstance();
    public static ModifyDBParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBProxyEndpointRequestMarshaller : object {
    private static ModifyDBProxyEndpointRequestMarshaller _instance;
    public static ModifyDBProxyEndpointRequestMarshaller Instance { get; }
    private static ModifyDBProxyEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBProxyEndpointRequest publicRequest);
    internal static ModifyDBProxyEndpointRequestMarshaller GetInstance();
    public static ModifyDBProxyEndpointRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBProxyEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBProxyEndpointResponseUnmarshaller _instance;
    public static ModifyDBProxyEndpointResponseUnmarshaller Instance { get; }
    private static ModifyDBProxyEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBProxyEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBProxyEndpointResponseUnmarshaller GetInstance();
    public static ModifyDBProxyEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBProxyRequestMarshaller : object {
    private static ModifyDBProxyRequestMarshaller _instance;
    public static ModifyDBProxyRequestMarshaller Instance { get; }
    private static ModifyDBProxyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBProxyRequest publicRequest);
    internal static ModifyDBProxyRequestMarshaller GetInstance();
    public static ModifyDBProxyRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBProxyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBProxyResponseUnmarshaller _instance;
    public static ModifyDBProxyResponseUnmarshaller Instance { get; }
    private static ModifyDBProxyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBProxyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBProxyResponseUnmarshaller GetInstance();
    public static ModifyDBProxyResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBProxyTargetGroupRequestMarshaller : object {
    private static ModifyDBProxyTargetGroupRequestMarshaller _instance;
    public static ModifyDBProxyTargetGroupRequestMarshaller Instance { get; }
    private static ModifyDBProxyTargetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBProxyTargetGroupRequest publicRequest);
    internal static ModifyDBProxyTargetGroupRequestMarshaller GetInstance();
    public static ModifyDBProxyTargetGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBProxyTargetGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBProxyTargetGroupResponseUnmarshaller _instance;
    public static ModifyDBProxyTargetGroupResponseUnmarshaller Instance { get; }
    private static ModifyDBProxyTargetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBProxyTargetGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBProxyTargetGroupResponseUnmarshaller GetInstance();
    public static ModifyDBProxyTargetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBRecommendationRequestMarshaller : object {
    private static ModifyDBRecommendationRequestMarshaller _instance;
    public static ModifyDBRecommendationRequestMarshaller Instance { get; }
    private static ModifyDBRecommendationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBRecommendationRequest publicRequest);
    internal static ModifyDBRecommendationRequestMarshaller GetInstance();
    public static ModifyDBRecommendationRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBRecommendationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBRecommendationResponseUnmarshaller _instance;
    public static ModifyDBRecommendationResponseUnmarshaller Instance { get; }
    private static ModifyDBRecommendationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBRecommendationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBRecommendationResponseUnmarshaller GetInstance();
    public static ModifyDBRecommendationResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBShardGroupRequestMarshaller : object {
    private static ModifyDBShardGroupRequestMarshaller _instance;
    public static ModifyDBShardGroupRequestMarshaller Instance { get; }
    private static ModifyDBShardGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBShardGroupRequest publicRequest);
    internal static ModifyDBShardGroupRequestMarshaller GetInstance();
    public static ModifyDBShardGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBShardGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBShardGroupResponseUnmarshaller _instance;
    public static ModifyDBShardGroupResponseUnmarshaller Instance { get; }
    private static ModifyDBShardGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBShardGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBShardGroupResponseUnmarshaller GetInstance();
    public static ModifyDBShardGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBSnapshotAttributeRequestMarshaller : object {
    private static ModifyDBSnapshotAttributeRequestMarshaller _instance;
    public static ModifyDBSnapshotAttributeRequestMarshaller Instance { get; }
    private static ModifyDBSnapshotAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBSnapshotAttributeRequest publicRequest);
    internal static ModifyDBSnapshotAttributeRequestMarshaller GetInstance();
    public static ModifyDBSnapshotAttributeRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBSnapshotAttributeResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBSnapshotAttributeResponseUnmarshaller _instance;
    public static ModifyDBSnapshotAttributeResponseUnmarshaller Instance { get; }
    private static ModifyDBSnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBSnapshotAttributeResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBSnapshotAttributeResponseUnmarshaller GetInstance();
    public static ModifyDBSnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBSnapshotRequestMarshaller : object {
    private static ModifyDBSnapshotRequestMarshaller _instance;
    public static ModifyDBSnapshotRequestMarshaller Instance { get; }
    private static ModifyDBSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBSnapshotRequest publicRequest);
    internal static ModifyDBSnapshotRequestMarshaller GetInstance();
    public static ModifyDBSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBSnapshotResponseUnmarshaller _instance;
    public static ModifyDBSnapshotResponseUnmarshaller Instance { get; }
    private static ModifyDBSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBSnapshotResponseUnmarshaller GetInstance();
    public static ModifyDBSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller : object {
    private static ModifyDBSubnetGroupRequestMarshaller _instance;
    public static ModifyDBSubnetGroupRequestMarshaller Instance { get; }
    private static ModifyDBSubnetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDBSubnetGroupRequest publicRequest);
    internal static ModifyDBSubnetGroupRequestMarshaller GetInstance();
    public static ModifyDBSubnetGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyDBSubnetGroupResponseUnmarshaller _instance;
    public static ModifyDBSubnetGroupResponseUnmarshaller Instance { get; }
    private static ModifyDBSubnetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyDBSubnetGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDBSubnetGroupResponseUnmarshaller GetInstance();
    public static ModifyDBSubnetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller : object {
    private static ModifyEventSubscriptionRequestMarshaller _instance;
    public static ModifyEventSubscriptionRequestMarshaller Instance { get; }
    private static ModifyEventSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyEventSubscriptionRequest publicRequest);
    internal static ModifyEventSubscriptionRequestMarshaller GetInstance();
    public static ModifyEventSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyEventSubscriptionResponseUnmarshaller _instance;
    public static ModifyEventSubscriptionResponseUnmarshaller Instance { get; }
    private static ModifyEventSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyEventSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyEventSubscriptionResponseUnmarshaller GetInstance();
    public static ModifyEventSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyGlobalClusterRequestMarshaller : object {
    private static ModifyGlobalClusterRequestMarshaller _instance;
    public static ModifyGlobalClusterRequestMarshaller Instance { get; }
    private static ModifyGlobalClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyGlobalClusterRequest publicRequest);
    internal static ModifyGlobalClusterRequestMarshaller GetInstance();
    public static ModifyGlobalClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyGlobalClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyGlobalClusterResponseUnmarshaller _instance;
    public static ModifyGlobalClusterResponseUnmarshaller Instance { get; }
    private static ModifyGlobalClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyGlobalClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyGlobalClusterResponseUnmarshaller GetInstance();
    public static ModifyGlobalClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyIntegrationRequestMarshaller : object {
    private static ModifyIntegrationRequestMarshaller _instance;
    public static ModifyIntegrationRequestMarshaller Instance { get; }
    private static ModifyIntegrationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyIntegrationRequest publicRequest);
    internal static ModifyIntegrationRequestMarshaller GetInstance();
    public static ModifyIntegrationRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyIntegrationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyIntegrationResponseUnmarshaller _instance;
    public static ModifyIntegrationResponseUnmarshaller Instance { get; }
    private static ModifyIntegrationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyIntegrationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyIntegrationResponseUnmarshaller GetInstance();
    public static ModifyIntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyOptionGroupRequestMarshaller : object {
    private static ModifyOptionGroupRequestMarshaller _instance;
    public static ModifyOptionGroupRequestMarshaller Instance { get; }
    private static ModifyOptionGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyOptionGroupRequest publicRequest);
    internal static ModifyOptionGroupRequestMarshaller GetInstance();
    public static ModifyOptionGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyOptionGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyOptionGroupResponseUnmarshaller _instance;
    public static ModifyOptionGroupResponseUnmarshaller Instance { get; }
    private static ModifyOptionGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyOptionGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyOptionGroupResponseUnmarshaller GetInstance();
    public static ModifyOptionGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyTenantDatabaseRequestMarshaller : object {
    private static ModifyTenantDatabaseRequestMarshaller _instance;
    public static ModifyTenantDatabaseRequestMarshaller Instance { get; }
    private static ModifyTenantDatabaseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyTenantDatabaseRequest publicRequest);
    internal static ModifyTenantDatabaseRequestMarshaller GetInstance();
    public static ModifyTenantDatabaseRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ModifyTenantDatabaseResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyTenantDatabaseResponseUnmarshaller _instance;
    public static ModifyTenantDatabaseResponseUnmarshaller Instance { get; }
    private static ModifyTenantDatabaseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyTenantDatabaseResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyTenantDatabaseResponseUnmarshaller GetInstance();
    public static ModifyTenantDatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.NetworkTypeNotSupportedExceptionUnmarshaller : object {
    private static NetworkTypeNotSupportedExceptionUnmarshaller _instance;
    public static NetworkTypeNotSupportedExceptionUnmarshaller Instance { get; }
    private static NetworkTypeNotSupportedExceptionUnmarshaller();
    public sealed virtual NetworkTypeNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkTypeNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NetworkTypeNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionGroupAlreadyExistsExceptionUnmarshaller : object {
    private static OptionGroupAlreadyExistsExceptionUnmarshaller _instance;
    public static OptionGroupAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static OptionGroupAlreadyExistsExceptionUnmarshaller();
    public sealed virtual OptionGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OptionGroupAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionGroupMembershipUnmarshaller : object {
    private static OptionGroupMembershipUnmarshaller _instance;
    public static OptionGroupMembershipUnmarshaller Instance { get; }
    private static OptionGroupMembershipUnmarshaller();
    public sealed virtual OptionGroupMembership Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionGroupMembership Unmarshall(JsonUnmarshallerContext context);
    public static OptionGroupMembershipUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionGroupNotFoundExceptionUnmarshaller : object {
    private static OptionGroupNotFoundExceptionUnmarshaller _instance;
    public static OptionGroupNotFoundExceptionUnmarshaller Instance { get; }
    private static OptionGroupNotFoundExceptionUnmarshaller();
    public sealed virtual OptionGroupNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionGroupNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OptionGroupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionGroupOptionSettingUnmarshaller : object {
    private static OptionGroupOptionSettingUnmarshaller _instance;
    public static OptionGroupOptionSettingUnmarshaller Instance { get; }
    private static OptionGroupOptionSettingUnmarshaller();
    public sealed virtual OptionGroupOptionSetting Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionGroupOptionSetting Unmarshall(JsonUnmarshallerContext context);
    public static OptionGroupOptionSettingUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionGroupOptionUnmarshaller : object {
    private static OptionGroupOptionUnmarshaller _instance;
    public static OptionGroupOptionUnmarshaller Instance { get; }
    private static OptionGroupOptionUnmarshaller();
    public sealed virtual OptionGroupOption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionGroupOption Unmarshall(JsonUnmarshallerContext context);
    public static OptionGroupOptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionGroupQuotaExceededExceptionUnmarshaller : object {
    private static OptionGroupQuotaExceededExceptionUnmarshaller _instance;
    public static OptionGroupQuotaExceededExceptionUnmarshaller Instance { get; }
    private static OptionGroupQuotaExceededExceptionUnmarshaller();
    public sealed virtual OptionGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionGroupQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OptionGroupQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionGroupUnmarshaller : object {
    private static OptionGroupUnmarshaller _instance;
    public static OptionGroupUnmarshaller Instance { get; }
    private static OptionGroupUnmarshaller();
    public sealed virtual OptionGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionGroup Unmarshall(JsonUnmarshallerContext context);
    public static OptionGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionSettingUnmarshaller : object {
    private static OptionSettingUnmarshaller _instance;
    public static OptionSettingUnmarshaller Instance { get; }
    private static OptionSettingUnmarshaller();
    public sealed virtual OptionSetting Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionSetting Unmarshall(JsonUnmarshallerContext context);
    public static OptionSettingUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionUnmarshaller : object {
    private static OptionUnmarshaller _instance;
    public static OptionUnmarshaller Instance { get; }
    private static OptionUnmarshaller();
    public sealed virtual Option Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Option Unmarshall(JsonUnmarshallerContext context);
    public static OptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OptionVersionUnmarshaller : object {
    private static OptionVersionUnmarshaller _instance;
    public static OptionVersionUnmarshaller Instance { get; }
    private static OptionVersionUnmarshaller();
    public sealed virtual OptionVersion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OptionVersion Unmarshall(JsonUnmarshallerContext context);
    public static OptionVersionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller : object {
    private static OrderableDBInstanceOptionUnmarshaller _instance;
    public static OrderableDBInstanceOptionUnmarshaller Instance { get; }
    private static OrderableDBInstanceOptionUnmarshaller();
    public sealed virtual OrderableDBInstanceOption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OrderableDBInstanceOption Unmarshall(JsonUnmarshallerContext context);
    public static OrderableDBInstanceOptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.OutpostUnmarshaller : object {
    private static OutpostUnmarshaller _instance;
    public static OutpostUnmarshaller Instance { get; }
    private static OutpostUnmarshaller();
    public sealed virtual Outpost Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Outpost Unmarshall(JsonUnmarshallerContext context);
    public static OutpostUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ParameterUnmarshaller : object {
    private static ParameterUnmarshaller _instance;
    public static ParameterUnmarshaller Instance { get; }
    private static ParameterUnmarshaller();
    public sealed virtual Parameter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Parameter Unmarshall(JsonUnmarshallerContext context);
    public static ParameterUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller : object {
    private static PendingCloudwatchLogsExportsUnmarshaller _instance;
    public static PendingCloudwatchLogsExportsUnmarshaller Instance { get; }
    private static PendingCloudwatchLogsExportsUnmarshaller();
    public sealed virtual PendingCloudwatchLogsExports Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PendingCloudwatchLogsExports Unmarshall(JsonUnmarshallerContext context);
    public static PendingCloudwatchLogsExportsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller : object {
    private static PendingMaintenanceActionUnmarshaller _instance;
    public static PendingMaintenanceActionUnmarshaller Instance { get; }
    private static PendingMaintenanceActionUnmarshaller();
    public sealed virtual PendingMaintenanceAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PendingMaintenanceAction Unmarshall(JsonUnmarshallerContext context);
    public static PendingMaintenanceActionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller : object {
    private static PendingModifiedValuesUnmarshaller _instance;
    public static PendingModifiedValuesUnmarshaller Instance { get; }
    private static PendingModifiedValuesUnmarshaller();
    public sealed virtual PendingModifiedValues Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PendingModifiedValues Unmarshall(JsonUnmarshallerContext context);
    public static PendingModifiedValuesUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PerformanceInsightsMetricDimensionGroupUnmarshaller : object {
    private static PerformanceInsightsMetricDimensionGroupUnmarshaller _instance;
    public static PerformanceInsightsMetricDimensionGroupUnmarshaller Instance { get; }
    private static PerformanceInsightsMetricDimensionGroupUnmarshaller();
    public sealed virtual PerformanceInsightsMetricDimensionGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PerformanceInsightsMetricDimensionGroup Unmarshall(JsonUnmarshallerContext context);
    public static PerformanceInsightsMetricDimensionGroupUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PerformanceInsightsMetricQueryUnmarshaller : object {
    private static PerformanceInsightsMetricQueryUnmarshaller _instance;
    public static PerformanceInsightsMetricQueryUnmarshaller Instance { get; }
    private static PerformanceInsightsMetricQueryUnmarshaller();
    public sealed virtual PerformanceInsightsMetricQuery Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PerformanceInsightsMetricQuery Unmarshall(JsonUnmarshallerContext context);
    public static PerformanceInsightsMetricQueryUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PerformanceIssueDetailsUnmarshaller : object {
    private static PerformanceIssueDetailsUnmarshaller _instance;
    public static PerformanceIssueDetailsUnmarshaller Instance { get; }
    private static PerformanceIssueDetailsUnmarshaller();
    public sealed virtual PerformanceIssueDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PerformanceIssueDetails Unmarshall(JsonUnmarshallerContext context);
    public static PerformanceIssueDetailsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PointInTimeRestoreNotEnabledExceptionUnmarshaller : object {
    private static PointInTimeRestoreNotEnabledExceptionUnmarshaller _instance;
    public static PointInTimeRestoreNotEnabledExceptionUnmarshaller Instance { get; }
    private static PointInTimeRestoreNotEnabledExceptionUnmarshaller();
    public sealed virtual PointInTimeRestoreNotEnabledException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PointInTimeRestoreNotEnabledException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static PointInTimeRestoreNotEnabledExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ProcessorFeatureUnmarshaller : object {
    private static ProcessorFeatureUnmarshaller _instance;
    public static ProcessorFeatureUnmarshaller Instance { get; }
    private static ProcessorFeatureUnmarshaller();
    public sealed virtual ProcessorFeature Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProcessorFeature Unmarshall(JsonUnmarshallerContext context);
    public static ProcessorFeatureUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterRequestMarshaller : object {
    private static PromoteReadReplicaDBClusterRequestMarshaller _instance;
    public static PromoteReadReplicaDBClusterRequestMarshaller Instance { get; }
    private static PromoteReadReplicaDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PromoteReadReplicaDBClusterRequest publicRequest);
    internal static PromoteReadReplicaDBClusterRequestMarshaller GetInstance();
    public static PromoteReadReplicaDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PromoteReadReplicaDBClusterResponseUnmarshaller _instance;
    public static PromoteReadReplicaDBClusterResponseUnmarshaller Instance { get; }
    private static PromoteReadReplicaDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PromoteReadReplicaDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PromoteReadReplicaDBClusterResponseUnmarshaller GetInstance();
    public static PromoteReadReplicaDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PromoteReadReplicaRequestMarshaller : object {
    private static PromoteReadReplicaRequestMarshaller _instance;
    public static PromoteReadReplicaRequestMarshaller Instance { get; }
    private static PromoteReadReplicaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PromoteReadReplicaRequest publicRequest);
    internal static PromoteReadReplicaRequestMarshaller GetInstance();
    public static PromoteReadReplicaRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PromoteReadReplicaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PromoteReadReplicaResponseUnmarshaller _instance;
    public static PromoteReadReplicaResponseUnmarshaller Instance { get; }
    private static PromoteReadReplicaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PromoteReadReplicaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PromoteReadReplicaResponseUnmarshaller GetInstance();
    public static PromoteReadReplicaResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ProvisionedIopsNotAvailableInAZExceptionUnmarshaller : object {
    private static ProvisionedIopsNotAvailableInAZExceptionUnmarshaller _instance;
    public static ProvisionedIopsNotAvailableInAZExceptionUnmarshaller Instance { get; }
    private static ProvisionedIopsNotAvailableInAZExceptionUnmarshaller();
    public sealed virtual ProvisionedIopsNotAvailableInAZException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedIopsNotAvailableInAZException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ProvisionedIopsNotAvailableInAZExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PurchaseReservedDBInstancesOfferingRequestMarshaller : object {
    private static PurchaseReservedDBInstancesOfferingRequestMarshaller _instance;
    public static PurchaseReservedDBInstancesOfferingRequestMarshaller Instance { get; }
    private static PurchaseReservedDBInstancesOfferingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurchaseReservedDBInstancesOfferingRequest publicRequest);
    internal static PurchaseReservedDBInstancesOfferingRequestMarshaller GetInstance();
    public static PurchaseReservedDBInstancesOfferingRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.PurchaseReservedDBInstancesOfferingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PurchaseReservedDBInstancesOfferingResponseUnmarshaller _instance;
    public static PurchaseReservedDBInstancesOfferingResponseUnmarshaller Instance { get; }
    private static PurchaseReservedDBInstancesOfferingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PurchaseReservedDBInstancesOfferingResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurchaseReservedDBInstancesOfferingResponseUnmarshaller GetInstance();
    public static PurchaseReservedDBInstancesOfferingResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RangeUnmarshaller : object {
    private static RangeUnmarshaller _instance;
    public static RangeUnmarshaller Instance { get; }
    private static RangeUnmarshaller();
    public sealed virtual Range Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Range Unmarshall(JsonUnmarshallerContext context);
    public static RangeUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RdsCustomClusterConfigurationUnmarshaller : object {
    private static RdsCustomClusterConfigurationUnmarshaller _instance;
    public static RdsCustomClusterConfigurationUnmarshaller Instance { get; }
    private static RdsCustomClusterConfigurationUnmarshaller();
    public sealed virtual RdsCustomClusterConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsCustomClusterConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static RdsCustomClusterConfigurationUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RebootDBClusterRequestMarshaller : object {
    private static RebootDBClusterRequestMarshaller _instance;
    public static RebootDBClusterRequestMarshaller Instance { get; }
    private static RebootDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootDBClusterRequest publicRequest);
    internal static RebootDBClusterRequestMarshaller GetInstance();
    public static RebootDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RebootDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RebootDBClusterResponseUnmarshaller _instance;
    public static RebootDBClusterResponseUnmarshaller Instance { get; }
    private static RebootDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RebootDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootDBClusterResponseUnmarshaller GetInstance();
    public static RebootDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller : object {
    private static RebootDBInstanceRequestMarshaller _instance;
    public static RebootDBInstanceRequestMarshaller Instance { get; }
    private static RebootDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootDBInstanceRequest publicRequest);
    internal static RebootDBInstanceRequestMarshaller GetInstance();
    public static RebootDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RebootDBInstanceResponseUnmarshaller _instance;
    public static RebootDBInstanceResponseUnmarshaller Instance { get; }
    private static RebootDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RebootDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootDBInstanceResponseUnmarshaller GetInstance();
    public static RebootDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RebootDBShardGroupRequestMarshaller : object {
    private static RebootDBShardGroupRequestMarshaller _instance;
    public static RebootDBShardGroupRequestMarshaller Instance { get; }
    private static RebootDBShardGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootDBShardGroupRequest publicRequest);
    internal static RebootDBShardGroupRequestMarshaller GetInstance();
    public static RebootDBShardGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RebootDBShardGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RebootDBShardGroupResponseUnmarshaller _instance;
    public static RebootDBShardGroupResponseUnmarshaller Instance { get; }
    private static RebootDBShardGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RebootDBShardGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootDBShardGroupResponseUnmarshaller GetInstance();
    public static RebootDBShardGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RecommendedActionParameterUnmarshaller : object {
    private static RecommendedActionParameterUnmarshaller _instance;
    public static RecommendedActionParameterUnmarshaller Instance { get; }
    private static RecommendedActionParameterUnmarshaller();
    public sealed virtual RecommendedActionParameter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecommendedActionParameter Unmarshall(JsonUnmarshallerContext context);
    public static RecommendedActionParameterUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RecommendedActionUnmarshaller : object {
    private static RecommendedActionUnmarshaller _instance;
    public static RecommendedActionUnmarshaller Instance { get; }
    private static RecommendedActionUnmarshaller();
    public sealed virtual RecommendedAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecommendedAction Unmarshall(JsonUnmarshallerContext context);
    public static RecommendedActionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller : object {
    private static RecurringChargeUnmarshaller _instance;
    public static RecurringChargeUnmarshaller Instance { get; }
    private static RecurringChargeUnmarshaller();
    public sealed virtual RecurringCharge Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecurringCharge Unmarshall(JsonUnmarshallerContext context);
    public static RecurringChargeUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ReferenceDetailsUnmarshaller : object {
    private static ReferenceDetailsUnmarshaller _instance;
    public static ReferenceDetailsUnmarshaller Instance { get; }
    private static ReferenceDetailsUnmarshaller();
    public sealed virtual ReferenceDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReferenceDetails Unmarshall(JsonUnmarshallerContext context);
    public static ReferenceDetailsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RegisterDBProxyTargetsRequestMarshaller : object {
    private static RegisterDBProxyTargetsRequestMarshaller _instance;
    public static RegisterDBProxyTargetsRequestMarshaller Instance { get; }
    private static RegisterDBProxyTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterDBProxyTargetsRequest publicRequest);
    internal static RegisterDBProxyTargetsRequestMarshaller GetInstance();
    public static RegisterDBProxyTargetsRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RegisterDBProxyTargetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RegisterDBProxyTargetsResponseUnmarshaller _instance;
    public static RegisterDBProxyTargetsResponseUnmarshaller Instance { get; }
    private static RegisterDBProxyTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RegisterDBProxyTargetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterDBProxyTargetsResponseUnmarshaller GetInstance();
    public static RegisterDBProxyTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterRequestMarshaller : object {
    private static RemoveFromGlobalClusterRequestMarshaller _instance;
    public static RemoveFromGlobalClusterRequestMarshaller Instance { get; }
    private static RemoveFromGlobalClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveFromGlobalClusterRequest publicRequest);
    internal static RemoveFromGlobalClusterRequestMarshaller GetInstance();
    public static RemoveFromGlobalClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveFromGlobalClusterResponseUnmarshaller _instance;
    public static RemoveFromGlobalClusterResponseUnmarshaller Instance { get; }
    private static RemoveFromGlobalClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveFromGlobalClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveFromGlobalClusterResponseUnmarshaller GetInstance();
    public static RemoveFromGlobalClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterRequestMarshaller : object {
    private static RemoveRoleFromDBClusterRequestMarshaller _instance;
    public static RemoveRoleFromDBClusterRequestMarshaller Instance { get; }
    private static RemoveRoleFromDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveRoleFromDBClusterRequest publicRequest);
    internal static RemoveRoleFromDBClusterRequestMarshaller GetInstance();
    public static RemoveRoleFromDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveRoleFromDBClusterResponseUnmarshaller _instance;
    public static RemoveRoleFromDBClusterResponseUnmarshaller Instance { get; }
    private static RemoveRoleFromDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveRoleFromDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveRoleFromDBClusterResponseUnmarshaller GetInstance();
    public static RemoveRoleFromDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveRoleFromDBInstanceRequestMarshaller : object {
    private static RemoveRoleFromDBInstanceRequestMarshaller _instance;
    public static RemoveRoleFromDBInstanceRequestMarshaller Instance { get; }
    private static RemoveRoleFromDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveRoleFromDBInstanceRequest publicRequest);
    internal static RemoveRoleFromDBInstanceRequestMarshaller GetInstance();
    public static RemoveRoleFromDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveRoleFromDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveRoleFromDBInstanceResponseUnmarshaller _instance;
    public static RemoveRoleFromDBInstanceResponseUnmarshaller Instance { get; }
    private static RemoveRoleFromDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveRoleFromDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveRoleFromDBInstanceResponseUnmarshaller GetInstance();
    public static RemoveRoleFromDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller : object {
    private static RemoveSourceIdentifierFromSubscriptionRequestMarshaller _instance;
    public static RemoveSourceIdentifierFromSubscriptionRequestMarshaller Instance { get; }
    private static RemoveSourceIdentifierFromSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveSourceIdentifierFromSubscriptionRequest publicRequest);
    internal static RemoveSourceIdentifierFromSubscriptionRequestMarshaller GetInstance();
    public static RemoveSourceIdentifierFromSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller _instance;
    public static RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller Instance { get; }
    private static RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveSourceIdentifierFromSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller GetInstance();
    public static RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller : object {
    private static RemoveTagsFromResourceRequestMarshaller _instance;
    public static RemoveTagsFromResourceRequestMarshaller Instance { get; }
    private static RemoveTagsFromResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsFromResourceRequest publicRequest);
    internal static RemoveTagsFromResourceRequestMarshaller GetInstance();
    public static RemoveTagsFromResourceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveTagsFromResourceResponseUnmarshaller _instance;
    public static RemoveTagsFromResourceResponseUnmarshaller Instance { get; }
    private static RemoveTagsFromResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveTagsFromResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsFromResourceResponseUnmarshaller GetInstance();
    public static RemoveTagsFromResourceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ReservedDBInstanceAlreadyExistsExceptionUnmarshaller : object {
    private static ReservedDBInstanceAlreadyExistsExceptionUnmarshaller _instance;
    public static ReservedDBInstanceAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ReservedDBInstanceAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ReservedDBInstanceAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedDBInstanceAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReservedDBInstanceAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ReservedDBInstanceNotFoundExceptionUnmarshaller : object {
    private static ReservedDBInstanceNotFoundExceptionUnmarshaller _instance;
    public static ReservedDBInstanceNotFoundExceptionUnmarshaller Instance { get; }
    private static ReservedDBInstanceNotFoundExceptionUnmarshaller();
    public sealed virtual ReservedDBInstanceNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedDBInstanceNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReservedDBInstanceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ReservedDBInstanceQuotaExceededExceptionUnmarshaller : object {
    private static ReservedDBInstanceQuotaExceededExceptionUnmarshaller _instance;
    public static ReservedDBInstanceQuotaExceededExceptionUnmarshaller Instance { get; }
    private static ReservedDBInstanceQuotaExceededExceptionUnmarshaller();
    public sealed virtual ReservedDBInstanceQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedDBInstanceQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReservedDBInstanceQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ReservedDBInstancesOfferingNotFoundExceptionUnmarshaller : object {
    private static ReservedDBInstancesOfferingNotFoundExceptionUnmarshaller _instance;
    public static ReservedDBInstancesOfferingNotFoundExceptionUnmarshaller Instance { get; }
    private static ReservedDBInstancesOfferingNotFoundExceptionUnmarshaller();
    public sealed virtual ReservedDBInstancesOfferingNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedDBInstancesOfferingNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReservedDBInstancesOfferingNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ReservedDBInstancesOfferingUnmarshaller : object {
    private static ReservedDBInstancesOfferingUnmarshaller _instance;
    public static ReservedDBInstancesOfferingUnmarshaller Instance { get; }
    private static ReservedDBInstancesOfferingUnmarshaller();
    public sealed virtual ReservedDBInstancesOffering Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedDBInstancesOffering Unmarshall(JsonUnmarshallerContext context);
    public static ReservedDBInstancesOfferingUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ReservedDBInstanceUnmarshaller : object {
    private static ReservedDBInstanceUnmarshaller _instance;
    public static ReservedDBInstanceUnmarshaller Instance { get; }
    private static ReservedDBInstanceUnmarshaller();
    public sealed virtual ReservedDBInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedDBInstance Unmarshall(JsonUnmarshallerContext context);
    public static ReservedDBInstanceUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller : object {
    private static ResetDBClusterParameterGroupRequestMarshaller _instance;
    public static ResetDBClusterParameterGroupRequestMarshaller Instance { get; }
    private static ResetDBClusterParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetDBClusterParameterGroupRequest publicRequest);
    internal static ResetDBClusterParameterGroupRequestMarshaller GetInstance();
    public static ResetDBClusterParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ResetDBClusterParameterGroupResponseUnmarshaller _instance;
    public static ResetDBClusterParameterGroupResponseUnmarshaller Instance { get; }
    private static ResetDBClusterParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ResetDBClusterParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetDBClusterParameterGroupResponseUnmarshaller GetInstance();
    public static ResetDBClusterParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ResetDBParameterGroupRequestMarshaller : object {
    private static ResetDBParameterGroupRequestMarshaller _instance;
    public static ResetDBParameterGroupRequestMarshaller Instance { get; }
    private static ResetDBParameterGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetDBParameterGroupRequest publicRequest);
    internal static ResetDBParameterGroupRequestMarshaller GetInstance();
    public static ResetDBParameterGroupRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ResetDBParameterGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ResetDBParameterGroupResponseUnmarshaller _instance;
    public static ResetDBParameterGroupResponseUnmarshaller Instance { get; }
    private static ResetDBParameterGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ResetDBParameterGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetDBParameterGroupResponseUnmarshaller GetInstance();
    public static ResetDBParameterGroupResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller : object {
    private static ResourcePendingMaintenanceActionsUnmarshaller _instance;
    public static ResourcePendingMaintenanceActionsUnmarshaller Instance { get; }
    private static ResourcePendingMaintenanceActionsUnmarshaller();
    public sealed virtual ResourcePendingMaintenanceActions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourcePendingMaintenanceActions Unmarshall(JsonUnmarshallerContext context);
    public static ResourcePendingMaintenanceActionsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBClusterFromS3RequestMarshaller : object {
    private static RestoreDBClusterFromS3RequestMarshaller _instance;
    public static RestoreDBClusterFromS3RequestMarshaller Instance { get; }
    private static RestoreDBClusterFromS3RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreDBClusterFromS3Request publicRequest);
    internal static RestoreDBClusterFromS3RequestMarshaller GetInstance();
    public static RestoreDBClusterFromS3RequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBClusterFromS3ResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RestoreDBClusterFromS3ResponseUnmarshaller _instance;
    public static RestoreDBClusterFromS3ResponseUnmarshaller Instance { get; }
    private static RestoreDBClusterFromS3ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RestoreDBClusterFromS3Response response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreDBClusterFromS3ResponseUnmarshaller GetInstance();
    public static RestoreDBClusterFromS3ResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller : object {
    private static RestoreDBClusterFromSnapshotRequestMarshaller _instance;
    public static RestoreDBClusterFromSnapshotRequestMarshaller Instance { get; }
    private static RestoreDBClusterFromSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreDBClusterFromSnapshotRequest publicRequest);
    internal static RestoreDBClusterFromSnapshotRequestMarshaller GetInstance();
    public static RestoreDBClusterFromSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RestoreDBClusterFromSnapshotResponseUnmarshaller _instance;
    public static RestoreDBClusterFromSnapshotResponseUnmarshaller Instance { get; }
    private static RestoreDBClusterFromSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RestoreDBClusterFromSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreDBClusterFromSnapshotResponseUnmarshaller GetInstance();
    public static RestoreDBClusterFromSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller : object {
    private static RestoreDBClusterToPointInTimeRequestMarshaller _instance;
    public static RestoreDBClusterToPointInTimeRequestMarshaller Instance { get; }
    private static RestoreDBClusterToPointInTimeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreDBClusterToPointInTimeRequest publicRequest);
    internal static RestoreDBClusterToPointInTimeRequestMarshaller GetInstance();
    public static RestoreDBClusterToPointInTimeRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RestoreDBClusterToPointInTimeResponseUnmarshaller _instance;
    public static RestoreDBClusterToPointInTimeResponseUnmarshaller Instance { get; }
    private static RestoreDBClusterToPointInTimeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RestoreDBClusterToPointInTimeResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreDBClusterToPointInTimeResponseUnmarshaller GetInstance();
    public static RestoreDBClusterToPointInTimeResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBInstanceFromDBSnapshotRequestMarshaller : object {
    private static RestoreDBInstanceFromDBSnapshotRequestMarshaller _instance;
    public static RestoreDBInstanceFromDBSnapshotRequestMarshaller Instance { get; }
    private static RestoreDBInstanceFromDBSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreDBInstanceFromDBSnapshotRequest publicRequest);
    internal static RestoreDBInstanceFromDBSnapshotRequestMarshaller GetInstance();
    public static RestoreDBInstanceFromDBSnapshotRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBInstanceFromDBSnapshotResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RestoreDBInstanceFromDBSnapshotResponseUnmarshaller _instance;
    public static RestoreDBInstanceFromDBSnapshotResponseUnmarshaller Instance { get; }
    private static RestoreDBInstanceFromDBSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RestoreDBInstanceFromDBSnapshotResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreDBInstanceFromDBSnapshotResponseUnmarshaller GetInstance();
    public static RestoreDBInstanceFromDBSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBInstanceFromS3RequestMarshaller : object {
    private static RestoreDBInstanceFromS3RequestMarshaller _instance;
    public static RestoreDBInstanceFromS3RequestMarshaller Instance { get; }
    private static RestoreDBInstanceFromS3RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreDBInstanceFromS3Request publicRequest);
    internal static RestoreDBInstanceFromS3RequestMarshaller GetInstance();
    public static RestoreDBInstanceFromS3RequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBInstanceFromS3ResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RestoreDBInstanceFromS3ResponseUnmarshaller _instance;
    public static RestoreDBInstanceFromS3ResponseUnmarshaller Instance { get; }
    private static RestoreDBInstanceFromS3ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RestoreDBInstanceFromS3Response response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreDBInstanceFromS3ResponseUnmarshaller GetInstance();
    public static RestoreDBInstanceFromS3ResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBInstanceToPointInTimeRequestMarshaller : object {
    private static RestoreDBInstanceToPointInTimeRequestMarshaller _instance;
    public static RestoreDBInstanceToPointInTimeRequestMarshaller Instance { get; }
    private static RestoreDBInstanceToPointInTimeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreDBInstanceToPointInTimeRequest publicRequest);
    internal static RestoreDBInstanceToPointInTimeRequestMarshaller GetInstance();
    public static RestoreDBInstanceToPointInTimeRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreDBInstanceToPointInTimeResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RestoreDBInstanceToPointInTimeResponseUnmarshaller _instance;
    public static RestoreDBInstanceToPointInTimeResponseUnmarshaller Instance { get; }
    private static RestoreDBInstanceToPointInTimeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RestoreDBInstanceToPointInTimeResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreDBInstanceToPointInTimeResponseUnmarshaller GetInstance();
    public static RestoreDBInstanceToPointInTimeResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RestoreWindowUnmarshaller : object {
    private static RestoreWindowUnmarshaller _instance;
    public static RestoreWindowUnmarshaller Instance { get; }
    private static RestoreWindowUnmarshaller();
    public sealed virtual RestoreWindow Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RestoreWindow Unmarshall(JsonUnmarshallerContext context);
    public static RestoreWindowUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RevokeDBSecurityGroupIngressRequestMarshaller : object {
    private static RevokeDBSecurityGroupIngressRequestMarshaller _instance;
    public static RevokeDBSecurityGroupIngressRequestMarshaller Instance { get; }
    private static RevokeDBSecurityGroupIngressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeDBSecurityGroupIngressRequest publicRequest);
    internal static RevokeDBSecurityGroupIngressRequestMarshaller GetInstance();
    public static RevokeDBSecurityGroupIngressRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.RevokeDBSecurityGroupIngressResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RevokeDBSecurityGroupIngressResponseUnmarshaller _instance;
    public static RevokeDBSecurityGroupIngressResponseUnmarshaller Instance { get; }
    private static RevokeDBSecurityGroupIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RevokeDBSecurityGroupIngressResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeDBSecurityGroupIngressResponseUnmarshaller GetInstance();
    public static RevokeDBSecurityGroupIngressResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ScalarReferenceDetailsUnmarshaller : object {
    private static ScalarReferenceDetailsUnmarshaller _instance;
    public static ScalarReferenceDetailsUnmarshaller Instance { get; }
    private static ScalarReferenceDetailsUnmarshaller();
    public sealed virtual ScalarReferenceDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScalarReferenceDetails Unmarshall(JsonUnmarshallerContext context);
    public static ScalarReferenceDetailsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ScalingConfigurationInfoUnmarshaller : object {
    private static ScalingConfigurationInfoUnmarshaller _instance;
    public static ScalingConfigurationInfoUnmarshaller Instance { get; }
    private static ScalingConfigurationInfoUnmarshaller();
    public sealed virtual ScalingConfigurationInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScalingConfigurationInfo Unmarshall(JsonUnmarshallerContext context);
    public static ScalingConfigurationInfoUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ServerlessV2ScalingConfigurationInfoUnmarshaller : object {
    private static ServerlessV2ScalingConfigurationInfoUnmarshaller _instance;
    public static ServerlessV2ScalingConfigurationInfoUnmarshaller Instance { get; }
    private static ServerlessV2ScalingConfigurationInfoUnmarshaller();
    public sealed virtual ServerlessV2ScalingConfigurationInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServerlessV2ScalingConfigurationInfo Unmarshall(JsonUnmarshallerContext context);
    public static ServerlessV2ScalingConfigurationInfoUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller : object {
    private static SharedSnapshotQuotaExceededExceptionUnmarshaller _instance;
    public static SharedSnapshotQuotaExceededExceptionUnmarshaller Instance { get; }
    private static SharedSnapshotQuotaExceededExceptionUnmarshaller();
    public sealed virtual SharedSnapshotQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SharedSnapshotQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SharedSnapshotQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller : object {
    private static SnapshotQuotaExceededExceptionUnmarshaller _instance;
    public static SnapshotQuotaExceededExceptionUnmarshaller Instance { get; }
    private static SnapshotQuotaExceededExceptionUnmarshaller();
    public sealed virtual SnapshotQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SnapshotQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller : object {
    private static SNSInvalidTopicExceptionUnmarshaller _instance;
    public static SNSInvalidTopicExceptionUnmarshaller Instance { get; }
    private static SNSInvalidTopicExceptionUnmarshaller();
    public sealed virtual SNSInvalidTopicException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SNSInvalidTopicException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SNSInvalidTopicExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller : object {
    private static SNSNoAuthorizationExceptionUnmarshaller _instance;
    public static SNSNoAuthorizationExceptionUnmarshaller Instance { get; }
    private static SNSNoAuthorizationExceptionUnmarshaller();
    public sealed virtual SNSNoAuthorizationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SNSNoAuthorizationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SNSNoAuthorizationExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller : object {
    private static SNSTopicArnNotFoundExceptionUnmarshaller _instance;
    public static SNSTopicArnNotFoundExceptionUnmarshaller Instance { get; }
    private static SNSTopicArnNotFoundExceptionUnmarshaller();
    public sealed virtual SNSTopicArnNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SNSTopicArnNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SNSTopicArnNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SourceClusterNotSupportedExceptionUnmarshaller : object {
    private static SourceClusterNotSupportedExceptionUnmarshaller _instance;
    public static SourceClusterNotSupportedExceptionUnmarshaller Instance { get; }
    private static SourceClusterNotSupportedExceptionUnmarshaller();
    public sealed virtual SourceClusterNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceClusterNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SourceClusterNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SourceDatabaseNotSupportedExceptionUnmarshaller : object {
    private static SourceDatabaseNotSupportedExceptionUnmarshaller _instance;
    public static SourceDatabaseNotSupportedExceptionUnmarshaller Instance { get; }
    private static SourceDatabaseNotSupportedExceptionUnmarshaller();
    public sealed virtual SourceDatabaseNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceDatabaseNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SourceDatabaseNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller : object {
    private static SourceNotFoundExceptionUnmarshaller _instance;
    public static SourceNotFoundExceptionUnmarshaller Instance { get; }
    private static SourceNotFoundExceptionUnmarshaller();
    public sealed virtual SourceNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SourceRegionUnmarshaller : object {
    private static SourceRegionUnmarshaller _instance;
    public static SourceRegionUnmarshaller Instance { get; }
    private static SourceRegionUnmarshaller();
    public sealed virtual SourceRegion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceRegion Unmarshall(JsonUnmarshallerContext context);
    public static SourceRegionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartActivityStreamRequestMarshaller : object {
    private static StartActivityStreamRequestMarshaller _instance;
    public static StartActivityStreamRequestMarshaller Instance { get; }
    private static StartActivityStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartActivityStreamRequest publicRequest);
    internal static StartActivityStreamRequestMarshaller GetInstance();
    public static StartActivityStreamRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartActivityStreamResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StartActivityStreamResponseUnmarshaller _instance;
    public static StartActivityStreamResponseUnmarshaller Instance { get; }
    private static StartActivityStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StartActivityStreamResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartActivityStreamResponseUnmarshaller GetInstance();
    public static StartActivityStreamResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller : object {
    private static StartDBClusterRequestMarshaller _instance;
    public static StartDBClusterRequestMarshaller Instance { get; }
    private static StartDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartDBClusterRequest publicRequest);
    internal static StartDBClusterRequestMarshaller GetInstance();
    public static StartDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StartDBClusterResponseUnmarshaller _instance;
    public static StartDBClusterResponseUnmarshaller Instance { get; }
    private static StartDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StartDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartDBClusterResponseUnmarshaller GetInstance();
    public static StartDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartDBInstanceAutomatedBackupsReplicationRequestMarshaller : object {
    private static StartDBInstanceAutomatedBackupsReplicationRequestMarshaller _instance;
    public static StartDBInstanceAutomatedBackupsReplicationRequestMarshaller Instance { get; }
    private static StartDBInstanceAutomatedBackupsReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartDBInstanceAutomatedBackupsReplicationRequest publicRequest);
    internal static StartDBInstanceAutomatedBackupsReplicationRequestMarshaller GetInstance();
    public static StartDBInstanceAutomatedBackupsReplicationRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartDBInstanceAutomatedBackupsReplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StartDBInstanceAutomatedBackupsReplicationResponseUnmarshaller _instance;
    public static StartDBInstanceAutomatedBackupsReplicationResponseUnmarshaller Instance { get; }
    private static StartDBInstanceAutomatedBackupsReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StartDBInstanceAutomatedBackupsReplicationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartDBInstanceAutomatedBackupsReplicationResponseUnmarshaller GetInstance();
    public static StartDBInstanceAutomatedBackupsReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartDBInstanceRequestMarshaller : object {
    private static StartDBInstanceRequestMarshaller _instance;
    public static StartDBInstanceRequestMarshaller Instance { get; }
    private static StartDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartDBInstanceRequest publicRequest);
    internal static StartDBInstanceRequestMarshaller GetInstance();
    public static StartDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StartDBInstanceResponseUnmarshaller _instance;
    public static StartDBInstanceResponseUnmarshaller Instance { get; }
    private static StartDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StartDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartDBInstanceResponseUnmarshaller GetInstance();
    public static StartDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartExportTaskRequestMarshaller : object {
    private static StartExportTaskRequestMarshaller _instance;
    public static StartExportTaskRequestMarshaller Instance { get; }
    private static StartExportTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartExportTaskRequest publicRequest);
    internal static StartExportTaskRequestMarshaller GetInstance();
    public static StartExportTaskRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StartExportTaskResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StartExportTaskResponseUnmarshaller _instance;
    public static StartExportTaskResponseUnmarshaller Instance { get; }
    private static StartExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StartExportTaskResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartExportTaskResponseUnmarshaller GetInstance();
    public static StartExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopActivityStreamRequestMarshaller : object {
    private static StopActivityStreamRequestMarshaller _instance;
    public static StopActivityStreamRequestMarshaller Instance { get; }
    private static StopActivityStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopActivityStreamRequest publicRequest);
    internal static StopActivityStreamRequestMarshaller GetInstance();
    public static StopActivityStreamRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopActivityStreamResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StopActivityStreamResponseUnmarshaller _instance;
    public static StopActivityStreamResponseUnmarshaller Instance { get; }
    private static StopActivityStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StopActivityStreamResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopActivityStreamResponseUnmarshaller GetInstance();
    public static StopActivityStreamResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller : object {
    private static StopDBClusterRequestMarshaller _instance;
    public static StopDBClusterRequestMarshaller Instance { get; }
    private static StopDBClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopDBClusterRequest publicRequest);
    internal static StopDBClusterRequestMarshaller GetInstance();
    public static StopDBClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StopDBClusterResponseUnmarshaller _instance;
    public static StopDBClusterResponseUnmarshaller Instance { get; }
    private static StopDBClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StopDBClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopDBClusterResponseUnmarshaller GetInstance();
    public static StopDBClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopDBInstanceAutomatedBackupsReplicationRequestMarshaller : object {
    private static StopDBInstanceAutomatedBackupsReplicationRequestMarshaller _instance;
    public static StopDBInstanceAutomatedBackupsReplicationRequestMarshaller Instance { get; }
    private static StopDBInstanceAutomatedBackupsReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopDBInstanceAutomatedBackupsReplicationRequest publicRequest);
    internal static StopDBInstanceAutomatedBackupsReplicationRequestMarshaller GetInstance();
    public static StopDBInstanceAutomatedBackupsReplicationRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopDBInstanceAutomatedBackupsReplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StopDBInstanceAutomatedBackupsReplicationResponseUnmarshaller _instance;
    public static StopDBInstanceAutomatedBackupsReplicationResponseUnmarshaller Instance { get; }
    private static StopDBInstanceAutomatedBackupsReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StopDBInstanceAutomatedBackupsReplicationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopDBInstanceAutomatedBackupsReplicationResponseUnmarshaller GetInstance();
    public static StopDBInstanceAutomatedBackupsReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopDBInstanceRequestMarshaller : object {
    private static StopDBInstanceRequestMarshaller _instance;
    public static StopDBInstanceRequestMarshaller Instance { get; }
    private static StopDBInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopDBInstanceRequest publicRequest);
    internal static StopDBInstanceRequestMarshaller GetInstance();
    public static StopDBInstanceRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StopDBInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StopDBInstanceResponseUnmarshaller _instance;
    public static StopDBInstanceResponseUnmarshaller Instance { get; }
    private static StopDBInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StopDBInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopDBInstanceResponseUnmarshaller GetInstance();
    public static StopDBInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller : object {
    private static StorageQuotaExceededExceptionUnmarshaller _instance;
    public static StorageQuotaExceededExceptionUnmarshaller Instance { get; }
    private static StorageQuotaExceededExceptionUnmarshaller();
    public sealed virtual StorageQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static StorageQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StorageTypeNotAvailableExceptionUnmarshaller : object {
    private static StorageTypeNotAvailableExceptionUnmarshaller _instance;
    public static StorageTypeNotAvailableExceptionUnmarshaller Instance { get; }
    private static StorageTypeNotAvailableExceptionUnmarshaller();
    public sealed virtual StorageTypeNotAvailableException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageTypeNotAvailableException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static StorageTypeNotAvailableExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller : object {
    private static StorageTypeNotSupportedExceptionUnmarshaller _instance;
    public static StorageTypeNotSupportedExceptionUnmarshaller Instance { get; }
    private static StorageTypeNotSupportedExceptionUnmarshaller();
    public sealed virtual StorageTypeNotSupportedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageTypeNotSupportedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static StorageTypeNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller : object {
    private static SubnetAlreadyInUseExceptionUnmarshaller _instance;
    public static SubnetAlreadyInUseExceptionUnmarshaller Instance { get; }
    private static SubnetAlreadyInUseExceptionUnmarshaller();
    public sealed virtual SubnetAlreadyInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubnetAlreadyInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubnetAlreadyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SubnetUnmarshaller : object {
    private static SubnetUnmarshaller _instance;
    public static SubnetUnmarshaller Instance { get; }
    private static SubnetUnmarshaller();
    public sealed virtual Subnet Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Subnet Unmarshall(JsonUnmarshallerContext context);
    public static SubnetUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller : object {
    private static SubscriptionAlreadyExistExceptionUnmarshaller _instance;
    public static SubscriptionAlreadyExistExceptionUnmarshaller Instance { get; }
    private static SubscriptionAlreadyExistExceptionUnmarshaller();
    public sealed virtual SubscriptionAlreadyExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubscriptionAlreadyExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubscriptionAlreadyExistExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller : object {
    private static SubscriptionCategoryNotFoundExceptionUnmarshaller _instance;
    public static SubscriptionCategoryNotFoundExceptionUnmarshaller Instance { get; }
    private static SubscriptionCategoryNotFoundExceptionUnmarshaller();
    public sealed virtual SubscriptionCategoryNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubscriptionCategoryNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubscriptionCategoryNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller : object {
    private static SubscriptionNotFoundExceptionUnmarshaller _instance;
    public static SubscriptionNotFoundExceptionUnmarshaller Instance { get; }
    private static SubscriptionNotFoundExceptionUnmarshaller();
    public sealed virtual SubscriptionNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubscriptionNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubscriptionNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SwitchoverBlueGreenDeploymentRequestMarshaller : object {
    private static SwitchoverBlueGreenDeploymentRequestMarshaller _instance;
    public static SwitchoverBlueGreenDeploymentRequestMarshaller Instance { get; }
    private static SwitchoverBlueGreenDeploymentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SwitchoverBlueGreenDeploymentRequest publicRequest);
    internal static SwitchoverBlueGreenDeploymentRequestMarshaller GetInstance();
    public static SwitchoverBlueGreenDeploymentRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SwitchoverBlueGreenDeploymentResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SwitchoverBlueGreenDeploymentResponseUnmarshaller _instance;
    public static SwitchoverBlueGreenDeploymentResponseUnmarshaller Instance { get; }
    private static SwitchoverBlueGreenDeploymentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SwitchoverBlueGreenDeploymentResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SwitchoverBlueGreenDeploymentResponseUnmarshaller GetInstance();
    public static SwitchoverBlueGreenDeploymentResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SwitchoverDetailUnmarshaller : object {
    private static SwitchoverDetailUnmarshaller _instance;
    public static SwitchoverDetailUnmarshaller Instance { get; }
    private static SwitchoverDetailUnmarshaller();
    public sealed virtual SwitchoverDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SwitchoverDetail Unmarshall(JsonUnmarshallerContext context);
    public static SwitchoverDetailUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SwitchoverGlobalClusterRequestMarshaller : object {
    private static SwitchoverGlobalClusterRequestMarshaller _instance;
    public static SwitchoverGlobalClusterRequestMarshaller Instance { get; }
    private static SwitchoverGlobalClusterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SwitchoverGlobalClusterRequest publicRequest);
    internal static SwitchoverGlobalClusterRequestMarshaller GetInstance();
    public static SwitchoverGlobalClusterRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SwitchoverGlobalClusterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SwitchoverGlobalClusterResponseUnmarshaller _instance;
    public static SwitchoverGlobalClusterResponseUnmarshaller Instance { get; }
    private static SwitchoverGlobalClusterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SwitchoverGlobalClusterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SwitchoverGlobalClusterResponseUnmarshaller GetInstance();
    public static SwitchoverGlobalClusterResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SwitchoverReadReplicaRequestMarshaller : object {
    private static SwitchoverReadReplicaRequestMarshaller _instance;
    public static SwitchoverReadReplicaRequestMarshaller Instance { get; }
    private static SwitchoverReadReplicaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SwitchoverReadReplicaRequest publicRequest);
    internal static SwitchoverReadReplicaRequestMarshaller GetInstance();
    public static SwitchoverReadReplicaRequestMarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.SwitchoverReadReplicaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SwitchoverReadReplicaResponseUnmarshaller _instance;
    public static SwitchoverReadReplicaResponseUnmarshaller Instance { get; }
    private static SwitchoverReadReplicaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SwitchoverReadReplicaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SwitchoverReadReplicaResponseUnmarshaller GetInstance();
    public static SwitchoverReadReplicaResponseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TargetHealthUnmarshaller : object {
    private static TargetHealthUnmarshaller _instance;
    public static TargetHealthUnmarshaller Instance { get; }
    private static TargetHealthUnmarshaller();
    public sealed virtual TargetHealth Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetHealth Unmarshall(JsonUnmarshallerContext context);
    public static TargetHealthUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TenantDatabaseAlreadyExistsExceptionUnmarshaller : object {
    private static TenantDatabaseAlreadyExistsExceptionUnmarshaller _instance;
    public static TenantDatabaseAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static TenantDatabaseAlreadyExistsExceptionUnmarshaller();
    public sealed virtual TenantDatabaseAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TenantDatabaseAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TenantDatabaseAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TenantDatabaseNotFoundExceptionUnmarshaller : object {
    private static TenantDatabaseNotFoundExceptionUnmarshaller _instance;
    public static TenantDatabaseNotFoundExceptionUnmarshaller Instance { get; }
    private static TenantDatabaseNotFoundExceptionUnmarshaller();
    public sealed virtual TenantDatabaseNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TenantDatabaseNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TenantDatabaseNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TenantDatabasePendingModifiedValuesUnmarshaller : object {
    private static TenantDatabasePendingModifiedValuesUnmarshaller _instance;
    public static TenantDatabasePendingModifiedValuesUnmarshaller Instance { get; }
    private static TenantDatabasePendingModifiedValuesUnmarshaller();
    public sealed virtual TenantDatabasePendingModifiedValues Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TenantDatabasePendingModifiedValues Unmarshall(JsonUnmarshallerContext context);
    public static TenantDatabasePendingModifiedValuesUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TenantDatabaseQuotaExceededExceptionUnmarshaller : object {
    private static TenantDatabaseQuotaExceededExceptionUnmarshaller _instance;
    public static TenantDatabaseQuotaExceededExceptionUnmarshaller Instance { get; }
    private static TenantDatabaseQuotaExceededExceptionUnmarshaller();
    public sealed virtual TenantDatabaseQuotaExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TenantDatabaseQuotaExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TenantDatabaseQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TenantDatabaseUnmarshaller : object {
    private static TenantDatabaseUnmarshaller _instance;
    public static TenantDatabaseUnmarshaller Instance { get; }
    private static TenantDatabaseUnmarshaller();
    public sealed virtual TenantDatabase Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TenantDatabase Unmarshall(JsonUnmarshallerContext context);
    public static TenantDatabaseUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.TimezoneUnmarshaller : object {
    private static TimezoneUnmarshaller _instance;
    public static TimezoneUnmarshaller Instance { get; }
    private static TimezoneUnmarshaller();
    public sealed virtual Timezone Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Timezone Unmarshall(JsonUnmarshallerContext context);
    public static TimezoneUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.UnsupportedDBEngineVersionExceptionUnmarshaller : object {
    private static UnsupportedDBEngineVersionExceptionUnmarshaller _instance;
    public static UnsupportedDBEngineVersionExceptionUnmarshaller Instance { get; }
    private static UnsupportedDBEngineVersionExceptionUnmarshaller();
    public sealed virtual UnsupportedDBEngineVersionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsupportedDBEngineVersionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedDBEngineVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller : object {
    private static UpgradeTargetUnmarshaller _instance;
    public static UpgradeTargetUnmarshaller Instance { get; }
    private static UpgradeTargetUnmarshaller();
    public sealed virtual UpgradeTarget Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UpgradeTarget Unmarshall(JsonUnmarshallerContext context);
    public static UpgradeTargetUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.UserAuthConfigInfoUnmarshaller : object {
    private static UserAuthConfigInfoUnmarshaller _instance;
    public static UserAuthConfigInfoUnmarshaller Instance { get; }
    private static UserAuthConfigInfoUnmarshaller();
    public sealed virtual UserAuthConfigInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserAuthConfigInfo Unmarshall(JsonUnmarshallerContext context);
    public static UserAuthConfigInfoUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ValidDBInstanceModificationsMessageUnmarshaller : object {
    private static ValidDBInstanceModificationsMessageUnmarshaller _instance;
    public static ValidDBInstanceModificationsMessageUnmarshaller Instance { get; }
    private static ValidDBInstanceModificationsMessageUnmarshaller();
    public sealed virtual ValidDBInstanceModificationsMessage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidDBInstanceModificationsMessage Unmarshall(JsonUnmarshallerContext context);
    public static ValidDBInstanceModificationsMessageUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.ValidStorageOptionsUnmarshaller : object {
    private static ValidStorageOptionsUnmarshaller _instance;
    public static ValidStorageOptionsUnmarshaller Instance { get; }
    private static ValidStorageOptionsUnmarshaller();
    public sealed virtual ValidStorageOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidStorageOptions Unmarshall(JsonUnmarshallerContext context);
    public static ValidStorageOptionsUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller : object {
    private static VpcSecurityGroupMembershipUnmarshaller _instance;
    public static VpcSecurityGroupMembershipUnmarshaller Instance { get; }
    private static VpcSecurityGroupMembershipUnmarshaller();
    public sealed virtual VpcSecurityGroupMembership Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcSecurityGroupMembership Unmarshall(JsonUnmarshallerContext context);
    public static VpcSecurityGroupMembershipUnmarshaller get_Instance();
}
public class Amazon.RDS.Model.InvalidBlueGreenDeploymentStateException : AmazonRDSException {
    public InvalidBlueGreenDeploymentStateException(string message);
    public InvalidBlueGreenDeploymentStateException(string message, Exception innerException);
    public InvalidBlueGreenDeploymentStateException(Exception innerException);
    public InvalidBlueGreenDeploymentStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidBlueGreenDeploymentStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidCustomDBEngineVersionStateException : AmazonRDSException {
    public InvalidCustomDBEngineVersionStateException(string message);
    public InvalidCustomDBEngineVersionStateException(string message, Exception innerException);
    public InvalidCustomDBEngineVersionStateException(Exception innerException);
    public InvalidCustomDBEngineVersionStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCustomDBEngineVersionStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBClusterAutomatedBackupStateException : AmazonRDSException {
    public InvalidDBClusterAutomatedBackupStateException(string message);
    public InvalidDBClusterAutomatedBackupStateException(string message, Exception innerException);
    public InvalidDBClusterAutomatedBackupStateException(Exception innerException);
    public InvalidDBClusterAutomatedBackupStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBClusterAutomatedBackupStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBClusterCapacityException : AmazonRDSException {
    public InvalidDBClusterCapacityException(string message);
    public InvalidDBClusterCapacityException(string message, Exception innerException);
    public InvalidDBClusterCapacityException(Exception innerException);
    public InvalidDBClusterCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBClusterCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBClusterEndpointStateException : AmazonRDSException {
    public InvalidDBClusterEndpointStateException(string message);
    public InvalidDBClusterEndpointStateException(string message, Exception innerException);
    public InvalidDBClusterEndpointStateException(Exception innerException);
    public InvalidDBClusterEndpointStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBClusterEndpointStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBClusterSnapshotStateException : AmazonRDSException {
    public InvalidDBClusterSnapshotStateException(string message);
    public InvalidDBClusterSnapshotStateException(string message, Exception innerException);
    public InvalidDBClusterSnapshotStateException(Exception innerException);
    public InvalidDBClusterSnapshotStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBClusterSnapshotStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBClusterStateException : AmazonRDSException {
    public InvalidDBClusterStateException(string message);
    public InvalidDBClusterStateException(string message, Exception innerException);
    public InvalidDBClusterStateException(Exception innerException);
    public InvalidDBClusterStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBClusterStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBInstanceAutomatedBackupStateException : AmazonRDSException {
    public InvalidDBInstanceAutomatedBackupStateException(string message);
    public InvalidDBInstanceAutomatedBackupStateException(string message, Exception innerException);
    public InvalidDBInstanceAutomatedBackupStateException(Exception innerException);
    public InvalidDBInstanceAutomatedBackupStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBInstanceAutomatedBackupStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBInstanceStateException : AmazonRDSException {
    public InvalidDBInstanceStateException(string message);
    public InvalidDBInstanceStateException(string message, Exception innerException);
    public InvalidDBInstanceStateException(Exception innerException);
    public InvalidDBInstanceStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBInstanceStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBParameterGroupStateException : AmazonRDSException {
    public InvalidDBParameterGroupStateException(string message);
    public InvalidDBParameterGroupStateException(string message, Exception innerException);
    public InvalidDBParameterGroupStateException(Exception innerException);
    public InvalidDBParameterGroupStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBParameterGroupStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBProxyEndpointStateException : AmazonRDSException {
    public InvalidDBProxyEndpointStateException(string message);
    public InvalidDBProxyEndpointStateException(string message, Exception innerException);
    public InvalidDBProxyEndpointStateException(Exception innerException);
    public InvalidDBProxyEndpointStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBProxyEndpointStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBProxyStateException : AmazonRDSException {
    public InvalidDBProxyStateException(string message);
    public InvalidDBProxyStateException(string message, Exception innerException);
    public InvalidDBProxyStateException(Exception innerException);
    public InvalidDBProxyStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBProxyStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBSecurityGroupStateException : AmazonRDSException {
    public InvalidDBSecurityGroupStateException(string message);
    public InvalidDBSecurityGroupStateException(string message, Exception innerException);
    public InvalidDBSecurityGroupStateException(Exception innerException);
    public InvalidDBSecurityGroupStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBSecurityGroupStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBShardGroupStateException : AmazonRDSException {
    public InvalidDBShardGroupStateException(string message);
    public InvalidDBShardGroupStateException(string message, Exception innerException);
    public InvalidDBShardGroupStateException(Exception innerException);
    public InvalidDBShardGroupStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBShardGroupStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBSnapshotStateException : AmazonRDSException {
    public InvalidDBSnapshotStateException(string message);
    public InvalidDBSnapshotStateException(string message, Exception innerException);
    public InvalidDBSnapshotStateException(Exception innerException);
    public InvalidDBSnapshotStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBSnapshotStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBSubnetGroupException : AmazonRDSException {
    public InvalidDBSubnetGroupException(string message);
    public InvalidDBSubnetGroupException(string message, Exception innerException);
    public InvalidDBSubnetGroupException(Exception innerException);
    public InvalidDBSubnetGroupException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBSubnetGroupException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBSubnetGroupStateException : AmazonRDSException {
    public InvalidDBSubnetGroupStateException(string message);
    public InvalidDBSubnetGroupStateException(string message, Exception innerException);
    public InvalidDBSubnetGroupStateException(Exception innerException);
    public InvalidDBSubnetGroupStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBSubnetGroupStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidDBSubnetStateException : AmazonRDSException {
    public InvalidDBSubnetStateException(string message);
    public InvalidDBSubnetStateException(string message, Exception innerException);
    public InvalidDBSubnetStateException(Exception innerException);
    public InvalidDBSubnetStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDBSubnetStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidEventSubscriptionStateException : AmazonRDSException {
    public InvalidEventSubscriptionStateException(string message);
    public InvalidEventSubscriptionStateException(string message, Exception innerException);
    public InvalidEventSubscriptionStateException(Exception innerException);
    public InvalidEventSubscriptionStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidEventSubscriptionStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidExportOnlyException : AmazonRDSException {
    public InvalidExportOnlyException(string message);
    public InvalidExportOnlyException(string message, Exception innerException);
    public InvalidExportOnlyException(Exception innerException);
    public InvalidExportOnlyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidExportOnlyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidExportSourceStateException : AmazonRDSException {
    public InvalidExportSourceStateException(string message);
    public InvalidExportSourceStateException(string message, Exception innerException);
    public InvalidExportSourceStateException(Exception innerException);
    public InvalidExportSourceStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidExportSourceStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidExportTaskStateException : AmazonRDSException {
    public InvalidExportTaskStateException(string message);
    public InvalidExportTaskStateException(string message, Exception innerException);
    public InvalidExportTaskStateException(Exception innerException);
    public InvalidExportTaskStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidExportTaskStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidGlobalClusterStateException : AmazonRDSException {
    public InvalidGlobalClusterStateException(string message);
    public InvalidGlobalClusterStateException(string message, Exception innerException);
    public InvalidGlobalClusterStateException(Exception innerException);
    public InvalidGlobalClusterStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidGlobalClusterStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidIntegrationStateException : AmazonRDSException {
    public InvalidIntegrationStateException(string message);
    public InvalidIntegrationStateException(string message, Exception innerException);
    public InvalidIntegrationStateException(Exception innerException);
    public InvalidIntegrationStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidIntegrationStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidMaxAcuException : AmazonRDSException {
    public InvalidMaxAcuException(string message);
    public InvalidMaxAcuException(string message, Exception innerException);
    public InvalidMaxAcuException(Exception innerException);
    public InvalidMaxAcuException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidMaxAcuException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidOptionGroupStateException : AmazonRDSException {
    public InvalidOptionGroupStateException(string message);
    public InvalidOptionGroupStateException(string message, Exception innerException);
    public InvalidOptionGroupStateException(Exception innerException);
    public InvalidOptionGroupStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOptionGroupStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidResourceStateException : AmazonRDSException {
    public InvalidResourceStateException(string message);
    public InvalidResourceStateException(string message, Exception innerException);
    public InvalidResourceStateException(Exception innerException);
    public InvalidResourceStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidResourceStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidRestoreException : AmazonRDSException {
    public InvalidRestoreException(string message);
    public InvalidRestoreException(string message, Exception innerException);
    public InvalidRestoreException(Exception innerException);
    public InvalidRestoreException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRestoreException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidS3BucketException : AmazonRDSException {
    public InvalidS3BucketException(string message);
    public InvalidS3BucketException(string message, Exception innerException);
    public InvalidS3BucketException(Exception innerException);
    public InvalidS3BucketException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidS3BucketException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidSubnetException : AmazonRDSException {
    public InvalidSubnetException(string message);
    public InvalidSubnetException(string message, Exception innerException);
    public InvalidSubnetException(Exception innerException);
    public InvalidSubnetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSubnetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.InvalidVPCNetworkStateException : AmazonRDSException {
    public InvalidVPCNetworkStateException(string message);
    public InvalidVPCNetworkStateException(string message, Exception innerException);
    public InvalidVPCNetworkStateException(Exception innerException);
    public InvalidVPCNetworkStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidVPCNetworkStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.IPRange : object {
    private string _cidrip;
    private string _status;
    public string CIDRIP { get; public set; }
    public string Status { get; public set; }
    public string get_CIDRIP();
    public void set_CIDRIP(string value);
    internal bool IsSetCIDRIP();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public interface Amazon.RDS.Model.IRDSPaginatorFactory {
    public abstract virtual IDescribeDBEngineVersionsPaginator DescribeDBEngineVersions(DescribeDBEngineVersionsRequest request);
    public abstract virtual IDescribeDBInstancesPaginator DescribeDBInstances(DescribeDBInstancesRequest request);
    public abstract virtual IDescribeDBParameterGroupsPaginator DescribeDBParameterGroups(DescribeDBParameterGroupsRequest request);
    public abstract virtual IDescribeDBParametersPaginator DescribeDBParameters(DescribeDBParametersRequest request);
    public abstract virtual IDescribeDBSecurityGroupsPaginator DescribeDBSecurityGroups(DescribeDBSecurityGroupsRequest request);
    public abstract virtual IDescribeDBSnapshotsPaginator DescribeDBSnapshots(DescribeDBSnapshotsRequest request);
    public abstract virtual IDescribeDBSubnetGroupsPaginator DescribeDBSubnetGroups(DescribeDBSubnetGroupsRequest request);
    public abstract virtual IDescribeEngineDefaultParametersPaginator DescribeEngineDefaultParameters(DescribeEngineDefaultParametersRequest request);
    public abstract virtual IDescribeEventsPaginator DescribeEvents(DescribeEventsRequest request);
    public abstract virtual IDescribeEventSubscriptionsPaginator DescribeEventSubscriptions(DescribeEventSubscriptionsRequest request);
    public abstract virtual IDescribeOptionGroupOptionsPaginator DescribeOptionGroupOptions(DescribeOptionGroupOptionsRequest request);
    public abstract virtual IDescribeOptionGroupsPaginator DescribeOptionGroups(DescribeOptionGroupsRequest request);
    public abstract virtual IDescribeOrderableDBInstanceOptionsPaginator DescribeOrderableDBInstanceOptions(DescribeOrderableDBInstanceOptionsRequest request);
    public abstract virtual IDescribeReservedDBInstancesPaginator DescribeReservedDBInstances(DescribeReservedDBInstancesRequest request);
    public abstract virtual IDescribeReservedDBInstancesOfferingsPaginator DescribeReservedDBInstancesOfferings(DescribeReservedDBInstancesOfferingsRequest request);
}
public class Amazon.RDS.Model.IssueDetails : object {
    private PerformanceIssueDetails _performanceIssueDetails;
    public PerformanceIssueDetails PerformanceIssueDetails { get; public set; }
    public PerformanceIssueDetails get_PerformanceIssueDetails();
    public void set_PerformanceIssueDetails(PerformanceIssueDetails value);
    internal bool IsSetPerformanceIssueDetails();
}
public class Amazon.RDS.Model.KMSKeyNotAccessibleException : AmazonRDSException {
    public KMSKeyNotAccessibleException(string message);
    public KMSKeyNotAccessibleException(string message, Exception innerException);
    public KMSKeyNotAccessibleException(Exception innerException);
    public KMSKeyNotAccessibleException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSKeyNotAccessibleException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.LimitlessDatabase : object {
    private Nullable`1<double> _minRequiredACU;
    private LimitlessDatabaseStatus _status;
    public Nullable`1<double> MinRequiredACU { get; public set; }
    public LimitlessDatabaseStatus Status { get; public set; }
    public Nullable`1<double> get_MinRequiredACU();
    public void set_MinRequiredACU(Nullable`1<double> value);
    internal bool IsSetMinRequiredACU();
    public LimitlessDatabaseStatus get_Status();
    public void set_Status(LimitlessDatabaseStatus value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.ListTagsForResourceRequest : AmazonRDSRequest {
    private List`1<Filter> _filters;
    private string _resourceName;
    public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string ResourceName { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
}
public class Amazon.RDS.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private List`1<Tag> _tagList;
    public List`1<Tag> TagList { get; public set; }
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
}
public class Amazon.RDS.Model.MasterUserSecret : object {
    private string _kmsKeyId;
    private string _secretArn;
    private string _secretStatus;
    public string KmsKeyId { get; public set; }
    public string SecretArn { get; public set; }
    public string SecretStatus { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_SecretArn();
    public void set_SecretArn(string value);
    internal bool IsSetSecretArn();
    public string get_SecretStatus();
    public void set_SecretStatus(string value);
    internal bool IsSetSecretStatus();
}
public class Amazon.RDS.Model.MaxDBShardGroupLimitReachedException : AmazonRDSException {
    public MaxDBShardGroupLimitReachedException(string message);
    public MaxDBShardGroupLimitReachedException(string message, Exception innerException);
    public MaxDBShardGroupLimitReachedException(Exception innerException);
    public MaxDBShardGroupLimitReachedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MaxDBShardGroupLimitReachedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.Metric : object {
    private MetricQuery _metricQuery;
    private string _name;
    private List`1<MetricReference> _references;
    private string _statisticsDetails;
    public MetricQuery MetricQuery { get; public set; }
    public string Name { get; public set; }
    public List`1<MetricReference> References { get; public set; }
    public string StatisticsDetails { get; public set; }
    public MetricQuery get_MetricQuery();
    public void set_MetricQuery(MetricQuery value);
    internal bool IsSetMetricQuery();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<MetricReference> get_References();
    public void set_References(List`1<MetricReference> value);
    internal bool IsSetReferences();
    public string get_StatisticsDetails();
    public void set_StatisticsDetails(string value);
    internal bool IsSetStatisticsDetails();
}
public class Amazon.RDS.Model.MetricQuery : object {
    private PerformanceInsightsMetricQuery _performanceInsightsMetricQuery;
    public PerformanceInsightsMetricQuery PerformanceInsightsMetricQuery { get; public set; }
    public PerformanceInsightsMetricQuery get_PerformanceInsightsMetricQuery();
    public void set_PerformanceInsightsMetricQuery(PerformanceInsightsMetricQuery value);
    internal bool IsSetPerformanceInsightsMetricQuery();
}
public class Amazon.RDS.Model.MetricReference : object {
    private string _name;
    private ReferenceDetails _referenceDetails;
    public string Name { get; public set; }
    public ReferenceDetails ReferenceDetails { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ReferenceDetails get_ReferenceDetails();
    public void set_ReferenceDetails(ReferenceDetails value);
    internal bool IsSetReferenceDetails();
}
public class Amazon.RDS.Model.MinimumEngineVersionPerAllowedValue : object {
    private string _allowedValue;
    private string _minimumEngineVersion;
    public string AllowedValue { get; public set; }
    public string MinimumEngineVersion { get; public set; }
    public string get_AllowedValue();
    public void set_AllowedValue(string value);
    internal bool IsSetAllowedValue();
    public string get_MinimumEngineVersion();
    public void set_MinimumEngineVersion(string value);
    internal bool IsSetMinimumEngineVersion();
}
public class Amazon.RDS.Model.ModifyActivityStreamRequest : AmazonRDSRequest {
    private AuditPolicyState _auditPolicyState;
    private string _resourceArn;
    public AuditPolicyState AuditPolicyState { get; public set; }
    public string ResourceArn { get; public set; }
    public AuditPolicyState get_AuditPolicyState();
    public void set_AuditPolicyState(AuditPolicyState value);
    internal bool IsSetAuditPolicyState();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.RDS.Model.ModifyActivityStreamResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _engineNativeAuditFieldsIncluded;
    private string _kinesisStreamName;
    private string _kmsKeyId;
    private ActivityStreamMode _mode;
    private ActivityStreamPolicyStatus _policyStatus;
    private ActivityStreamStatus _status;
    public Nullable`1<bool> EngineNativeAuditFieldsIncluded { get; public set; }
    public string KinesisStreamName { get; public set; }
    public string KmsKeyId { get; public set; }
    public ActivityStreamMode Mode { get; public set; }
    public ActivityStreamPolicyStatus PolicyStatus { get; public set; }
    public ActivityStreamStatus Status { get; public set; }
    public Nullable`1<bool> get_EngineNativeAuditFieldsIncluded();
    public void set_EngineNativeAuditFieldsIncluded(Nullable`1<bool> value);
    internal bool IsSetEngineNativeAuditFieldsIncluded();
    public string get_KinesisStreamName();
    public void set_KinesisStreamName(string value);
    internal bool IsSetKinesisStreamName();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public ActivityStreamMode get_Mode();
    public void set_Mode(ActivityStreamMode value);
    internal bool IsSetMode();
    public ActivityStreamPolicyStatus get_PolicyStatus();
    public void set_PolicyStatus(ActivityStreamPolicyStatus value);
    internal bool IsSetPolicyStatus();
    public ActivityStreamStatus get_Status();
    public void set_Status(ActivityStreamStatus value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.ModifyCertificatesRequest : AmazonRDSRequest {
    private string _certificateIdentifier;
    private Nullable`1<bool> _removeCustomerOverride;
    public string CertificateIdentifier { get; public set; }
    public Nullable`1<bool> RemoveCustomerOverride { get; public set; }
    public string get_CertificateIdentifier();
    public void set_CertificateIdentifier(string value);
    internal bool IsSetCertificateIdentifier();
    public Nullable`1<bool> get_RemoveCustomerOverride();
    public void set_RemoveCustomerOverride(Nullable`1<bool> value);
    internal bool IsSetRemoveCustomerOverride();
}
public class Amazon.RDS.Model.ModifyCertificatesResponse : AmazonWebServiceResponse {
    private Certificate _certificate;
    public Certificate Certificate { get; public set; }
    public Certificate get_Certificate();
    public void set_Certificate(Certificate value);
    internal bool IsSetCertificate();
}
public class Amazon.RDS.Model.ModifyCurrentDBClusterCapacityRequest : AmazonRDSRequest {
    private Nullable`1<int> _capacity;
    private string _dbClusterIdentifier;
    private Nullable`1<int> _secondsBeforeTimeout;
    private string _timeoutAction;
    public Nullable`1<int> Capacity { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public Nullable`1<int> SecondsBeforeTimeout { get; public set; }
    public string TimeoutAction { get; public set; }
    public Nullable`1<int> get_Capacity();
    public void set_Capacity(Nullable`1<int> value);
    internal bool IsSetCapacity();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public Nullable`1<int> get_SecondsBeforeTimeout();
    public void set_SecondsBeforeTimeout(Nullable`1<int> value);
    internal bool IsSetSecondsBeforeTimeout();
    public string get_TimeoutAction();
    public void set_TimeoutAction(string value);
    internal bool IsSetTimeoutAction();
}
public class Amazon.RDS.Model.ModifyCurrentDBClusterCapacityResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _currentCapacity;
    private string _dbClusterIdentifier;
    private Nullable`1<int> _pendingCapacity;
    private Nullable`1<int> _secondsBeforeTimeout;
    private string _timeoutAction;
    public Nullable`1<int> CurrentCapacity { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public Nullable`1<int> PendingCapacity { get; public set; }
    public Nullable`1<int> SecondsBeforeTimeout { get; public set; }
    public string TimeoutAction { get; public set; }
    public Nullable`1<int> get_CurrentCapacity();
    public void set_CurrentCapacity(Nullable`1<int> value);
    internal bool IsSetCurrentCapacity();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public Nullable`1<int> get_PendingCapacity();
    public void set_PendingCapacity(Nullable`1<int> value);
    internal bool IsSetPendingCapacity();
    public Nullable`1<int> get_SecondsBeforeTimeout();
    public void set_SecondsBeforeTimeout(Nullable`1<int> value);
    internal bool IsSetSecondsBeforeTimeout();
    public string get_TimeoutAction();
    public void set_TimeoutAction(string value);
    internal bool IsSetTimeoutAction();
}
public class Amazon.RDS.Model.ModifyCustomDBEngineVersionRequest : AmazonRDSRequest {
    private string _description;
    private string _engine;
    private string _engineVersion;
    private CustomEngineVersionStatus _status;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    [AWSPropertyAttribute]
public string EngineVersion { get; public set; }
    public CustomEngineVersionStatus Status { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public CustomEngineVersionStatus get_Status();
    public void set_Status(CustomEngineVersionStatus value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.ModifyCustomDBEngineVersionResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createTime;
    private string _customDBEngineVersionManifest;
    private string _databaseInstallationFilesS3BucketName;
    private string _databaseInstallationFilesS3Prefix;
    private string _dbEngineDescription;
    private string _dbEngineMediaType;
    private string _dbEngineVersionArn;
    private string _dbEngineVersionDescription;
    private string _dbParameterGroupFamily;
    private CharacterSet _defaultCharacterSet;
    private string _engine;
    private string _engineVersion;
    private List`1<string> _exportableLogTypes;
    private CustomDBEngineVersionAMI _image;
    private string _kmsKeyId;
    private string _majorEngineVersion;
    private string _status;
    private List`1<string> _supportedCACertificateIdentifiers;
    private List`1<CharacterSet> _supportedCharacterSets;
    private List`1<string> _supportedEngineModes;
    private List`1<string> _supportedFeatureNames;
    private List`1<CharacterSet> _supportedNcharCharacterSets;
    private List`1<Timezone> _supportedTimezones;
    private Nullable`1<bool> _supportsBabelfish;
    private Nullable`1<bool> _supportsCertificateRotationWithoutRestart;
    private Nullable`1<bool> _supportsGlobalDatabases;
    private Nullable`1<bool> _supportsIntegrations;
    private Nullable`1<bool> _supportsLimitlessDatabase;
    private Nullable`1<bool> _supportsLocalWriteForwarding;
    private Nullable`1<bool> _supportsLogExportsToCloudwatchLogs;
    private Nullable`1<bool> _supportsParallelQuery;
    private Nullable`1<bool> _supportsReadReplica;
    private List`1<Tag> _tagList;
    private List`1<UpgradeTarget> _validUpgradeTarget;
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string CustomDBEngineVersionManifest { get; public set; }
    public string DatabaseInstallationFilesS3BucketName { get; public set; }
    public string DatabaseInstallationFilesS3Prefix { get; public set; }
    public string DBEngineDescription { get; public set; }
    public string DBEngineMediaType { get; public set; }
    public string DBEngineVersionArn { get; public set; }
    public string DBEngineVersionDescription { get; public set; }
    public string DBParameterGroupFamily { get; public set; }
    public CharacterSet DefaultCharacterSet { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public List`1<string> ExportableLogTypes { get; public set; }
    public CustomDBEngineVersionAMI Image { get; public set; }
    public string KMSKeyId { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string Status { get; public set; }
    public List`1<string> SupportedCACertificateIdentifiers { get; public set; }
    public List`1<CharacterSet> SupportedCharacterSets { get; public set; }
    public List`1<string> SupportedEngineModes { get; public set; }
    public List`1<string> SupportedFeatureNames { get; public set; }
    public List`1<CharacterSet> SupportedNcharCharacterSets { get; public set; }
    public List`1<Timezone> SupportedTimezones { get; public set; }
    public Nullable`1<bool> SupportsBabelfish { get; public set; }
    public Nullable`1<bool> SupportsCertificateRotationWithoutRestart { get; public set; }
    public Nullable`1<bool> SupportsGlobalDatabases { get; public set; }
    public Nullable`1<bool> SupportsIntegrations { get; public set; }
    public Nullable`1<bool> SupportsLimitlessDatabase { get; public set; }
    public Nullable`1<bool> SupportsLocalWriteForwarding { get; public set; }
    public Nullable`1<bool> SupportsLogExportsToCloudwatchLogs { get; public set; }
    public Nullable`1<bool> SupportsParallelQuery { get; public set; }
    public Nullable`1<bool> SupportsReadReplica { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public List`1<UpgradeTarget> ValidUpgradeTarget { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_CustomDBEngineVersionManifest();
    public void set_CustomDBEngineVersionManifest(string value);
    internal bool IsSetCustomDBEngineVersionManifest();
    public string get_DatabaseInstallationFilesS3BucketName();
    public void set_DatabaseInstallationFilesS3BucketName(string value);
    internal bool IsSetDatabaseInstallationFilesS3BucketName();
    public string get_DatabaseInstallationFilesS3Prefix();
    public void set_DatabaseInstallationFilesS3Prefix(string value);
    internal bool IsSetDatabaseInstallationFilesS3Prefix();
    public string get_DBEngineDescription();
    public void set_DBEngineDescription(string value);
    internal bool IsSetDBEngineDescription();
    public string get_DBEngineMediaType();
    public void set_DBEngineMediaType(string value);
    internal bool IsSetDBEngineMediaType();
    public string get_DBEngineVersionArn();
    public void set_DBEngineVersionArn(string value);
    internal bool IsSetDBEngineVersionArn();
    public string get_DBEngineVersionDescription();
    public void set_DBEngineVersionDescription(string value);
    internal bool IsSetDBEngineVersionDescription();
    public string get_DBParameterGroupFamily();
    public void set_DBParameterGroupFamily(string value);
    internal bool IsSetDBParameterGroupFamily();
    public CharacterSet get_DefaultCharacterSet();
    public void set_DefaultCharacterSet(CharacterSet value);
    internal bool IsSetDefaultCharacterSet();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public List`1<string> get_ExportableLogTypes();
    public void set_ExportableLogTypes(List`1<string> value);
    internal bool IsSetExportableLogTypes();
    public CustomDBEngineVersionAMI get_Image();
    public void set_Image(CustomDBEngineVersionAMI value);
    internal bool IsSetImage();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<string> get_SupportedCACertificateIdentifiers();
    public void set_SupportedCACertificateIdentifiers(List`1<string> value);
    internal bool IsSetSupportedCACertificateIdentifiers();
    public List`1<CharacterSet> get_SupportedCharacterSets();
    public void set_SupportedCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedCharacterSets();
    public List`1<string> get_SupportedEngineModes();
    public void set_SupportedEngineModes(List`1<string> value);
    internal bool IsSetSupportedEngineModes();
    public List`1<string> get_SupportedFeatureNames();
    public void set_SupportedFeatureNames(List`1<string> value);
    internal bool IsSetSupportedFeatureNames();
    public List`1<CharacterSet> get_SupportedNcharCharacterSets();
    public void set_SupportedNcharCharacterSets(List`1<CharacterSet> value);
    internal bool IsSetSupportedNcharCharacterSets();
    public List`1<Timezone> get_SupportedTimezones();
    public void set_SupportedTimezones(List`1<Timezone> value);
    internal bool IsSetSupportedTimezones();
    public Nullable`1<bool> get_SupportsBabelfish();
    public void set_SupportsBabelfish(Nullable`1<bool> value);
    internal bool IsSetSupportsBabelfish();
    public Nullable`1<bool> get_SupportsCertificateRotationWithoutRestart();
    public void set_SupportsCertificateRotationWithoutRestart(Nullable`1<bool> value);
    internal bool IsSetSupportsCertificateRotationWithoutRestart();
    public Nullable`1<bool> get_SupportsGlobalDatabases();
    public void set_SupportsGlobalDatabases(Nullable`1<bool> value);
    internal bool IsSetSupportsGlobalDatabases();
    public Nullable`1<bool> get_SupportsIntegrations();
    public void set_SupportsIntegrations(Nullable`1<bool> value);
    internal bool IsSetSupportsIntegrations();
    public Nullable`1<bool> get_SupportsLimitlessDatabase();
    public void set_SupportsLimitlessDatabase(Nullable`1<bool> value);
    internal bool IsSetSupportsLimitlessDatabase();
    public Nullable`1<bool> get_SupportsLocalWriteForwarding();
    public void set_SupportsLocalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetSupportsLocalWriteForwarding();
    public Nullable`1<bool> get_SupportsLogExportsToCloudwatchLogs();
    public void set_SupportsLogExportsToCloudwatchLogs(Nullable`1<bool> value);
    internal bool IsSetSupportsLogExportsToCloudwatchLogs();
    public Nullable`1<bool> get_SupportsParallelQuery();
    public void set_SupportsParallelQuery(Nullable`1<bool> value);
    internal bool IsSetSupportsParallelQuery();
    public Nullable`1<bool> get_SupportsReadReplica();
    public void set_SupportsReadReplica(Nullable`1<bool> value);
    internal bool IsSetSupportsReadReplica();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public List`1<UpgradeTarget> get_ValidUpgradeTarget();
    public void set_ValidUpgradeTarget(List`1<UpgradeTarget> value);
    internal bool IsSetValidUpgradeTarget();
}
public class Amazon.RDS.Model.ModifyDBClusterEndpointRequest : AmazonRDSRequest {
    private string _dbClusterEndpointIdentifier;
    private string _endpointType;
    private List`1<string> _excludedMembers;
    private List`1<string> _staticMembers;
    [AWSPropertyAttribute]
public string DBClusterEndpointIdentifier { get; public set; }
    public string EndpointType { get; public set; }
    public List`1<string> ExcludedMembers { get; public set; }
    public List`1<string> StaticMembers { get; public set; }
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
    public string get_EndpointType();
    public void set_EndpointType(string value);
    internal bool IsSetEndpointType();
    public List`1<string> get_ExcludedMembers();
    public void set_ExcludedMembers(List`1<string> value);
    internal bool IsSetExcludedMembers();
    public List`1<string> get_StaticMembers();
    public void set_StaticMembers(List`1<string> value);
    internal bool IsSetStaticMembers();
}
public class Amazon.RDS.Model.ModifyDBClusterEndpointResponse : AmazonWebServiceResponse {
    private string _customEndpointType;
    private string _dbClusterEndpointArn;
    private string _dbClusterEndpointIdentifier;
    private string _dbClusterEndpointResourceIdentifier;
    private string _dbClusterIdentifier;
    private string _endpoint;
    private string _endpointType;
    private List`1<string> _excludedMembers;
    private List`1<string> _staticMembers;
    private string _status;
    public string CustomEndpointType { get; public set; }
    public string DBClusterEndpointArn { get; public set; }
    public string DBClusterEndpointIdentifier { get; public set; }
    public string DBClusterEndpointResourceIdentifier { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    public string Endpoint { get; public set; }
    public string EndpointType { get; public set; }
    public List`1<string> ExcludedMembers { get; public set; }
    public List`1<string> StaticMembers { get; public set; }
    public string Status { get; public set; }
    public string get_CustomEndpointType();
    public void set_CustomEndpointType(string value);
    internal bool IsSetCustomEndpointType();
    public string get_DBClusterEndpointArn();
    public void set_DBClusterEndpointArn(string value);
    internal bool IsSetDBClusterEndpointArn();
    public string get_DBClusterEndpointIdentifier();
    public void set_DBClusterEndpointIdentifier(string value);
    internal bool IsSetDBClusterEndpointIdentifier();
    public string get_DBClusterEndpointResourceIdentifier();
    public void set_DBClusterEndpointResourceIdentifier(string value);
    internal bool IsSetDBClusterEndpointResourceIdentifier();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_EndpointType();
    public void set_EndpointType(string value);
    internal bool IsSetEndpointType();
    public List`1<string> get_ExcludedMembers();
    public void set_ExcludedMembers(List`1<string> value);
    internal bool IsSetExcludedMembers();
    public List`1<string> get_StaticMembers();
    public void set_StaticMembers(List`1<string> value);
    internal bool IsSetStaticMembers();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.ModifyDBClusterParameterGroupRequest : AmazonRDSRequest {
    private string _dbClusterParameterGroupName;
    private List`1<Parameter> _parameters;
    [AWSPropertyAttribute]
public string DBClusterParameterGroupName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Parameter> Parameters { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
}
public class Amazon.RDS.Model.ModifyDBClusterParameterGroupResponse : AmazonWebServiceResponse {
    private string _dbClusterParameterGroupName;
    public string DBClusterParameterGroupName { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
}
public class Amazon.RDS.Model.ModifyDBClusterRequest : AmazonRDSRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _allowEngineModeChange;
    private Nullable`1<bool> _allowMajorVersionUpgrade;
    private Nullable`1<bool> _applyImmediately;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _awsBackupRecoveryPointArn;
    private Nullable`1<long> _backtrackWindow;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _caCertificateIdentifier;
    private CloudwatchLogsExportConfiguration _cloudwatchLogsExportConfiguration;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _dbClusterIdentifier;
    private string _dbClusterInstanceClass;
    private string _dbClusterParameterGroupName;
    private string _dbInstanceParameterGroupName;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainIAMRoleName;
    private Nullable`1<bool> _enableGlobalWriteForwarding;
    private Nullable`1<bool> _enableHttpEndpoint;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private Nullable`1<bool> _enableLimitlessDatabase;
    private Nullable`1<bool> _enableLocalWriteForwarding;
    private Nullable`1<bool> _enablePerformanceInsights;
    private string _engineMode;
    private string _engineVersion;
    private Nullable`1<int> _iops;
    private Nullable`1<bool> _manageMasterUserPassword;
    private string _masterUserPassword;
    private string _masterUserSecretKmsKeyId;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private string _networkType;
    private string _newDBClusterIdentifier;
    private string _optionGroupName;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private Nullable`1<int> _port;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private Nullable`1<bool> _rotateMasterUserPassword;
    private ScalingConfiguration _scalingConfiguration;
    private ServerlessV2ScalingConfiguration _serverlessV2ScalingConfiguration;
    private string _storageType;
    private List`1<string> _vpcSecurityGroupIds;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AllowEngineModeChange { get; public set; }
    public Nullable`1<bool> AllowMajorVersionUpgrade { get; public set; }
    public Nullable`1<bool> ApplyImmediately { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    [AWSPropertyAttribute]
public string AwsBackupRecoveryPointArn { get; public set; }
    public Nullable`1<long> BacktrackWindow { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public CloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string DBClusterInstanceClass { get; public set; }
    public string DBClusterParameterGroupName { get; public set; }
    public string DBInstanceParameterGroupName { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public Nullable`1<bool> EnableGlobalWriteForwarding { get; public set; }
    public Nullable`1<bool> EnableHttpEndpoint { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public Nullable`1<bool> EnableLimitlessDatabase { get; public set; }
    public Nullable`1<bool> EnableLocalWriteForwarding { get; public set; }
    public Nullable`1<bool> EnablePerformanceInsights { get; public set; }
    public string EngineMode { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public Nullable`1<bool> ManageMasterUserPassword { get; public set; }
    public string MasterUserPassword { get; public set; }
    public string MasterUserSecretKmsKeyId { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public string NetworkType { get; public set; }
    public string NewDBClusterIdentifier { get; public set; }
    public string OptionGroupName { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public Nullable`1<bool> RotateMasterUserPassword { get; public set; }
    public ScalingConfiguration ScalingConfiguration { get; public set; }
    public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; public set; }
    public string StorageType { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AllowEngineModeChange();
    public void set_AllowEngineModeChange(Nullable`1<bool> value);
    internal bool IsSetAllowEngineModeChange();
    public Nullable`1<bool> get_AllowMajorVersionUpgrade();
    public void set_AllowMajorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAllowMajorVersionUpgrade();
    public Nullable`1<bool> get_ApplyImmediately();
    public void set_ApplyImmediately(Nullable`1<bool> value);
    internal bool IsSetApplyImmediately();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AwsBackupRecoveryPointArn();
    public void set_AwsBackupRecoveryPointArn(string value);
    internal bool IsSetAwsBackupRecoveryPointArn();
    public Nullable`1<long> get_BacktrackWindow();
    public void set_BacktrackWindow(Nullable`1<long> value);
    internal bool IsSetBacktrackWindow();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public CloudwatchLogsExportConfiguration get_CloudwatchLogsExportConfiguration();
    public void set_CloudwatchLogsExportConfiguration(CloudwatchLogsExportConfiguration value);
    internal bool IsSetCloudwatchLogsExportConfiguration();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBClusterInstanceClass();
    public void set_DBClusterInstanceClass(string value);
    internal bool IsSetDBClusterInstanceClass();
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public string get_DBInstanceParameterGroupName();
    public void set_DBInstanceParameterGroupName(string value);
    internal bool IsSetDBInstanceParameterGroupName();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public Nullable`1<bool> get_EnableGlobalWriteForwarding();
    public void set_EnableGlobalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetEnableGlobalWriteForwarding();
    public Nullable`1<bool> get_EnableHttpEndpoint();
    public void set_EnableHttpEndpoint(Nullable`1<bool> value);
    internal bool IsSetEnableHttpEndpoint();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public Nullable`1<bool> get_EnableLimitlessDatabase();
    public void set_EnableLimitlessDatabase(Nullable`1<bool> value);
    internal bool IsSetEnableLimitlessDatabase();
    public Nullable`1<bool> get_EnableLocalWriteForwarding();
    public void set_EnableLocalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetEnableLocalWriteForwarding();
    public Nullable`1<bool> get_EnablePerformanceInsights();
    public void set_EnablePerformanceInsights(Nullable`1<bool> value);
    internal bool IsSetEnablePerformanceInsights();
    public string get_EngineMode();
    public void set_EngineMode(string value);
    internal bool IsSetEngineMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public Nullable`1<bool> get_ManageMasterUserPassword();
    public void set_ManageMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetManageMasterUserPassword();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_MasterUserSecretKmsKeyId();
    public void set_MasterUserSecretKmsKeyId(string value);
    internal bool IsSetMasterUserSecretKmsKeyId();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_NewDBClusterIdentifier();
    public void set_NewDBClusterIdentifier(string value);
    internal bool IsSetNewDBClusterIdentifier();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public Nullable`1<bool> get_RotateMasterUserPassword();
    public void set_RotateMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetRotateMasterUserPassword();
    public ScalingConfiguration get_ScalingConfiguration();
    public void set_ScalingConfiguration(ScalingConfiguration value);
    internal bool IsSetScalingConfiguration();
    public ServerlessV2ScalingConfiguration get_ServerlessV2ScalingConfiguration();
    public void set_ServerlessV2ScalingConfiguration(ServerlessV2ScalingConfiguration value);
    internal bool IsSetServerlessV2ScalingConfiguration();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.ModifyDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.ModifyDBClusterSnapshotAttributeRequest : AmazonRDSRequest {
    private string _attributeName;
    private string _dbClusterSnapshotIdentifier;
    private List`1<string> _valuesToAdd;
    private List`1<string> _valuesToRemove;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterSnapshotIdentifier { get; public set; }
    public List`1<string> ValuesToAdd { get; public set; }
    public List`1<string> ValuesToRemove { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
    public List`1<string> get_ValuesToAdd();
    public void set_ValuesToAdd(List`1<string> value);
    internal bool IsSetValuesToAdd();
    public List`1<string> get_ValuesToRemove();
    public void set_ValuesToRemove(List`1<string> value);
    internal bool IsSetValuesToRemove();
}
public class Amazon.RDS.Model.ModifyDBClusterSnapshotAttributeResponse : AmazonWebServiceResponse {
    private DBClusterSnapshotAttributesResult _dbClusterSnapshotAttributesResult;
    public DBClusterSnapshotAttributesResult DBClusterSnapshotAttributesResult { get; public set; }
    public DBClusterSnapshotAttributesResult get_DBClusterSnapshotAttributesResult();
    public void set_DBClusterSnapshotAttributesResult(DBClusterSnapshotAttributesResult value);
    internal bool IsSetDBClusterSnapshotAttributesResult();
}
public class Amazon.RDS.Model.ModifyDBInstanceRequest : AmazonRDSRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _allowMajorVersionUpgrade;
    private Nullable`1<bool> _applyImmediately;
    private AutomationMode _automationMode;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _awsBackupRecoveryPointArn;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _caCertificateIdentifier;
    private Nullable`1<bool> _certificateRotationRestart;
    private CloudwatchLogsExportConfiguration _cloudwatchLogsExportConfiguration;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _dbInstanceClass;
    private string _dbInstanceIdentifier;
    private string _dbParameterGroupName;
    private Nullable`1<int> _dbPortNumber;
    private List`1<string> _dbSecurityGroups;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _deletionProtection;
    private Nullable`1<bool> _disableDomain;
    private string _domain;
    private string _domainAuthSecretArn;
    private List`1<string> _domainDnsIps;
    private string _domainFqdn;
    private string _domainIAMRoleName;
    private string _domainOu;
    private Nullable`1<bool> _enableCustomerOwnedIp;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private Nullable`1<bool> _enablePerformanceInsights;
    private string _engine;
    private string _engineVersion;
    private Nullable`1<int> _iops;
    private string _licenseModel;
    private Nullable`1<bool> _manageMasterUserPassword;
    private string _masterUserPassword;
    private string _masterUserSecretKmsKeyId;
    private Nullable`1<int> _maxAllocatedStorage;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private Nullable`1<bool> _multiAZ;
    private Nullable`1<bool> _multiTenant;
    private string _networkType;
    private string _newDBInstanceIdentifier;
    private string _optionGroupName;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<int> _promotionTier;
    private Nullable`1<bool> _publiclyAccessible;
    private ReplicaMode _replicaMode;
    private Nullable`1<int> _resumeFullAutomationModeMinutes;
    private Nullable`1<bool> _rotateMasterUserPassword;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private string _tdeCredentialArn;
    private string _tdeCredentialPassword;
    private Nullable`1<bool> _useDefaultProcessorFeatures;
    private List`1<string> _vpcSecurityGroupIds;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AllowMajorVersionUpgrade { get; public set; }
    public Nullable`1<bool> ApplyImmediately { get; public set; }
    public AutomationMode AutomationMode { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    [AWSPropertyAttribute]
public string AwsBackupRecoveryPointArn { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public Nullable`1<bool> CertificateRotationRestart { get; public set; }
    public CloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string DBInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string DBParameterGroupName { get; public set; }
    public Nullable`1<int> DBPortNumber { get; public set; }
    public List`1<string> DBSecurityGroups { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public Nullable`1<bool> DisableDomain { get; public set; }
    public string Domain { get; public set; }
    public string DomainAuthSecretArn { get; public set; }
    public List`1<string> DomainDnsIps { get; public set; }
    public string DomainFqdn { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public string DomainOu { get; public set; }
    public Nullable`1<bool> EnableCustomerOwnedIp { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public Nullable`1<bool> EnablePerformanceInsights { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string LicenseModel { get; public set; }
    public Nullable`1<bool> ManageMasterUserPassword { get; public set; }
    public string MasterUserPassword { get; public set; }
    public string MasterUserSecretKmsKeyId { get; public set; }
    public Nullable`1<int> MaxAllocatedStorage { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public Nullable`1<bool> MultiTenant { get; public set; }
    public string NetworkType { get; public set; }
    public string NewDBInstanceIdentifier { get; public set; }
    public string OptionGroupName { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<int> PromotionTier { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public ReplicaMode ReplicaMode { get; public set; }
    public Nullable`1<int> ResumeFullAutomationModeMinutes { get; public set; }
    public Nullable`1<bool> RotateMasterUserPassword { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public string TdeCredentialArn { get; public set; }
    public string TdeCredentialPassword { get; public set; }
    public Nullable`1<bool> UseDefaultProcessorFeatures { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public ModifyDBInstanceRequest(string dbInstanceIdentifier);
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AllowMajorVersionUpgrade();
    public void set_AllowMajorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAllowMajorVersionUpgrade();
    public Nullable`1<bool> get_ApplyImmediately();
    public void set_ApplyImmediately(Nullable`1<bool> value);
    internal bool IsSetApplyImmediately();
    public AutomationMode get_AutomationMode();
    public void set_AutomationMode(AutomationMode value);
    internal bool IsSetAutomationMode();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AwsBackupRecoveryPointArn();
    public void set_AwsBackupRecoveryPointArn(string value);
    internal bool IsSetAwsBackupRecoveryPointArn();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public Nullable`1<bool> get_CertificateRotationRestart();
    public void set_CertificateRotationRestart(Nullable`1<bool> value);
    internal bool IsSetCertificateRotationRestart();
    public CloudwatchLogsExportConfiguration get_CloudwatchLogsExportConfiguration();
    public void set_CloudwatchLogsExportConfiguration(CloudwatchLogsExportConfiguration value);
    internal bool IsSetCloudwatchLogsExportConfiguration();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public Nullable`1<int> get_DBPortNumber();
    public void set_DBPortNumber(Nullable`1<int> value);
    internal bool IsSetDBPortNumber();
    public List`1<string> get_DBSecurityGroups();
    public void set_DBSecurityGroups(List`1<string> value);
    internal bool IsSetDBSecurityGroups();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public Nullable`1<bool> get_DisableDomain();
    public void set_DisableDomain(Nullable`1<bool> value);
    internal bool IsSetDisableDomain();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainAuthSecretArn();
    public void set_DomainAuthSecretArn(string value);
    internal bool IsSetDomainAuthSecretArn();
    public List`1<string> get_DomainDnsIps();
    public void set_DomainDnsIps(List`1<string> value);
    internal bool IsSetDomainDnsIps();
    public string get_DomainFqdn();
    public void set_DomainFqdn(string value);
    internal bool IsSetDomainFqdn();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public string get_DomainOu();
    public void set_DomainOu(string value);
    internal bool IsSetDomainOu();
    public Nullable`1<bool> get_EnableCustomerOwnedIp();
    public void set_EnableCustomerOwnedIp(Nullable`1<bool> value);
    internal bool IsSetEnableCustomerOwnedIp();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public Nullable`1<bool> get_EnablePerformanceInsights();
    public void set_EnablePerformanceInsights(Nullable`1<bool> value);
    internal bool IsSetEnablePerformanceInsights();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public Nullable`1<bool> get_ManageMasterUserPassword();
    public void set_ManageMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetManageMasterUserPassword();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_MasterUserSecretKmsKeyId();
    public void set_MasterUserSecretKmsKeyId(string value);
    internal bool IsSetMasterUserSecretKmsKeyId();
    public Nullable`1<int> get_MaxAllocatedStorage();
    public void set_MaxAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMaxAllocatedStorage();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public Nullable`1<bool> get_MultiTenant();
    public void set_MultiTenant(Nullable`1<bool> value);
    internal bool IsSetMultiTenant();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_NewDBInstanceIdentifier();
    public void set_NewDBInstanceIdentifier(string value);
    internal bool IsSetNewDBInstanceIdentifier();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<int> get_PromotionTier();
    public void set_PromotionTier(Nullable`1<int> value);
    internal bool IsSetPromotionTier();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public ReplicaMode get_ReplicaMode();
    public void set_ReplicaMode(ReplicaMode value);
    internal bool IsSetReplicaMode();
    public Nullable`1<int> get_ResumeFullAutomationModeMinutes();
    public void set_ResumeFullAutomationModeMinutes(Nullable`1<int> value);
    internal bool IsSetResumeFullAutomationModeMinutes();
    public Nullable`1<bool> get_RotateMasterUserPassword();
    public void set_RotateMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetRotateMasterUserPassword();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public string get_TdeCredentialArn();
    public void set_TdeCredentialArn(string value);
    internal bool IsSetTdeCredentialArn();
    public string get_TdeCredentialPassword();
    public void set_TdeCredentialPassword(string value);
    internal bool IsSetTdeCredentialPassword();
    public Nullable`1<bool> get_UseDefaultProcessorFeatures();
    public void set_UseDefaultProcessorFeatures(Nullable`1<bool> value);
    internal bool IsSetUseDefaultProcessorFeatures();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.ModifyDBInstanceResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.ModifyDBParameterGroupRequest : AmazonRDSRequest {
    private string _dbParameterGroupName;
    private List`1<Parameter> _parameters;
    [AWSPropertyAttribute]
public string DBParameterGroupName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Parameter> Parameters { get; public set; }
    public ModifyDBParameterGroupRequest(string dbParameterGroupName, List`1<Parameter> parameters);
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
}
public class Amazon.RDS.Model.ModifyDBParameterGroupResponse : AmazonWebServiceResponse {
    private string _dbParameterGroupName;
    public string DBParameterGroupName { get; public set; }
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
}
public class Amazon.RDS.Model.ModifyDBProxyEndpointRequest : AmazonRDSRequest {
    private string _dbProxyEndpointName;
    private string _newDBProxyEndpointName;
    private List`1<string> _vpcSecurityGroupIds;
    [AWSPropertyAttribute]
public string DBProxyEndpointName { get; public set; }
    [AWSPropertyAttribute]
public string NewDBProxyEndpointName { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public string get_DBProxyEndpointName();
    public void set_DBProxyEndpointName(string value);
    internal bool IsSetDBProxyEndpointName();
    public string get_NewDBProxyEndpointName();
    public void set_NewDBProxyEndpointName(string value);
    internal bool IsSetNewDBProxyEndpointName();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.ModifyDBProxyEndpointResponse : AmazonWebServiceResponse {
    private DBProxyEndpoint _dbProxyEndpoint;
    public DBProxyEndpoint DBProxyEndpoint { get; public set; }
    public DBProxyEndpoint get_DBProxyEndpoint();
    public void set_DBProxyEndpoint(DBProxyEndpoint value);
    internal bool IsSetDBProxyEndpoint();
}
public class Amazon.RDS.Model.ModifyDBProxyRequest : AmazonRDSRequest {
    private List`1<UserAuthConfig> _auth;
    private string _dbProxyName;
    private Nullable`1<bool> _debugLogging;
    private Nullable`1<int> _idleClientTimeout;
    private string _newDBProxyName;
    private Nullable`1<bool> _requireTLS;
    private string _roleArn;
    private List`1<string> _securityGroups;
    public List`1<UserAuthConfig> Auth { get; public set; }
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public Nullable`1<bool> DebugLogging { get; public set; }
    public Nullable`1<int> IdleClientTimeout { get; public set; }
    public string NewDBProxyName { get; public set; }
    public Nullable`1<bool> RequireTLS { get; public set; }
    public string RoleArn { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public List`1<UserAuthConfig> get_Auth();
    public void set_Auth(List`1<UserAuthConfig> value);
    internal bool IsSetAuth();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public Nullable`1<bool> get_DebugLogging();
    public void set_DebugLogging(Nullable`1<bool> value);
    internal bool IsSetDebugLogging();
    public Nullable`1<int> get_IdleClientTimeout();
    public void set_IdleClientTimeout(Nullable`1<int> value);
    internal bool IsSetIdleClientTimeout();
    public string get_NewDBProxyName();
    public void set_NewDBProxyName(string value);
    internal bool IsSetNewDBProxyName();
    public Nullable`1<bool> get_RequireTLS();
    public void set_RequireTLS(Nullable`1<bool> value);
    internal bool IsSetRequireTLS();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.RDS.Model.ModifyDBProxyResponse : AmazonWebServiceResponse {
    private DBProxy _dbProxy;
    public DBProxy DBProxy { get; public set; }
    public DBProxy get_DBProxy();
    public void set_DBProxy(DBProxy value);
    internal bool IsSetDBProxy();
}
public class Amazon.RDS.Model.ModifyDBProxyTargetGroupRequest : AmazonRDSRequest {
    private ConnectionPoolConfiguration _connectionPoolConfig;
    private string _dbProxyName;
    private string _newName;
    private string _targetGroupName;
    public ConnectionPoolConfiguration ConnectionPoolConfig { get; public set; }
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public string NewName { get; public set; }
    [AWSPropertyAttribute]
public string TargetGroupName { get; public set; }
    public ConnectionPoolConfiguration get_ConnectionPoolConfig();
    public void set_ConnectionPoolConfig(ConnectionPoolConfiguration value);
    internal bool IsSetConnectionPoolConfig();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public string get_NewName();
    public void set_NewName(string value);
    internal bool IsSetNewName();
    public string get_TargetGroupName();
    public void set_TargetGroupName(string value);
    internal bool IsSetTargetGroupName();
}
public class Amazon.RDS.Model.ModifyDBProxyTargetGroupResponse : AmazonWebServiceResponse {
    private DBProxyTargetGroup _dbProxyTargetGroup;
    public DBProxyTargetGroup DBProxyTargetGroup { get; public set; }
    public DBProxyTargetGroup get_DBProxyTargetGroup();
    public void set_DBProxyTargetGroup(DBProxyTargetGroup value);
    internal bool IsSetDBProxyTargetGroup();
}
public class Amazon.RDS.Model.ModifyDBRecommendationRequest : AmazonRDSRequest {
    private string _locale;
    private string _recommendationId;
    private List`1<RecommendedActionUpdate> _recommendedActionUpdates;
    private string _status;
    public string Locale { get; public set; }
    [AWSPropertyAttribute]
public string RecommendationId { get; public set; }
    public List`1<RecommendedActionUpdate> RecommendedActionUpdates { get; public set; }
    public string Status { get; public set; }
    public string get_Locale();
    public void set_Locale(string value);
    internal bool IsSetLocale();
    public string get_RecommendationId();
    public void set_RecommendationId(string value);
    internal bool IsSetRecommendationId();
    public List`1<RecommendedActionUpdate> get_RecommendedActionUpdates();
    public void set_RecommendedActionUpdates(List`1<RecommendedActionUpdate> value);
    internal bool IsSetRecommendedActionUpdates();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.ModifyDBRecommendationResponse : AmazonWebServiceResponse {
    private DBRecommendation _dbRecommendation;
    public DBRecommendation DBRecommendation { get; public set; }
    public DBRecommendation get_DBRecommendation();
    public void set_DBRecommendation(DBRecommendation value);
    internal bool IsSetDBRecommendation();
}
public class Amazon.RDS.Model.ModifyDBShardGroupRequest : AmazonRDSRequest {
    private string _dbShardGroupIdentifier;
    private Nullable`1<double> _maxACU;
    private Nullable`1<double> _minACU;
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public Nullable`1<double> MaxACU { get; public set; }
    public Nullable`1<double> MinACU { get; public set; }
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public Nullable`1<double> get_MaxACU();
    public void set_MaxACU(Nullable`1<double> value);
    internal bool IsSetMaxACU();
    public Nullable`1<double> get_MinACU();
    public void set_MinACU(Nullable`1<double> value);
    internal bool IsSetMinACU();
}
public class Amazon.RDS.Model.ModifyDBShardGroupResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _computeRedundancy;
    private string _dbClusterIdentifier;
    private string _dbShardGroupIdentifier;
    private string _dbShardGroupResourceId;
    private string _endpoint;
    private Nullable`1<double> _maxACU;
    private Nullable`1<double> _minACU;
    private Nullable`1<bool> _publiclyAccessible;
    private string _status;
    public Nullable`1<int> ComputeRedundancy { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public string DBShardGroupResourceId { get; public set; }
    public string Endpoint { get; public set; }
    public Nullable`1<double> MaxACU { get; public set; }
    public Nullable`1<double> MinACU { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<int> get_ComputeRedundancy();
    public void set_ComputeRedundancy(Nullable`1<int> value);
    internal bool IsSetComputeRedundancy();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public string get_DBShardGroupResourceId();
    public void set_DBShardGroupResourceId(string value);
    internal bool IsSetDBShardGroupResourceId();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public Nullable`1<double> get_MaxACU();
    public void set_MaxACU(Nullable`1<double> value);
    internal bool IsSetMaxACU();
    public Nullable`1<double> get_MinACU();
    public void set_MinACU(Nullable`1<double> value);
    internal bool IsSetMinACU();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.ModifyDBSnapshotAttributeRequest : AmazonRDSRequest {
    private string _attributeName;
    private string _dbSnapshotIdentifier;
    private List`1<string> _valuesToAdd;
    private List`1<string> _valuesToRemove;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public string DBSnapshotIdentifier { get; public set; }
    public List`1<string> ValuesToAdd { get; public set; }
    public List`1<string> ValuesToRemove { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public List`1<string> get_ValuesToAdd();
    public void set_ValuesToAdd(List`1<string> value);
    internal bool IsSetValuesToAdd();
    public List`1<string> get_ValuesToRemove();
    public void set_ValuesToRemove(List`1<string> value);
    internal bool IsSetValuesToRemove();
}
public class Amazon.RDS.Model.ModifyDBSnapshotAttributeResponse : AmazonWebServiceResponse {
    private DBSnapshotAttributesResult _dbSnapshotAttributesResult;
    public DBSnapshotAttributesResult DBSnapshotAttributesResult { get; public set; }
    public DBSnapshotAttributesResult get_DBSnapshotAttributesResult();
    public void set_DBSnapshotAttributesResult(DBSnapshotAttributesResult value);
    internal bool IsSetDBSnapshotAttributesResult();
}
public class Amazon.RDS.Model.ModifyDBSnapshotRequest : AmazonRDSRequest {
    private string _dbSnapshotIdentifier;
    private string _engineVersion;
    private string _optionGroupName;
    [AWSPropertyAttribute]
public string DBSnapshotIdentifier { get; public set; }
    public string EngineVersion { get; public set; }
    public string OptionGroupName { get; public set; }
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
}
public class Amazon.RDS.Model.ModifyDBSnapshotResponse : AmazonWebServiceResponse {
    private DBSnapshot _dbSnapshot;
    public DBSnapshot DBSnapshot { get; public set; }
    public DBSnapshot get_DBSnapshot();
    public void set_DBSnapshot(DBSnapshot value);
    internal bool IsSetDBSnapshot();
}
public class Amazon.RDS.Model.ModifyDBSubnetGroupRequest : AmazonRDSRequest {
    private string _dbSubnetGroupDescription;
    private string _dbSubnetGroupName;
    private List`1<string> _subnetIds;
    public string DBSubnetGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string DBSubnetGroupName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public string get_DBSubnetGroupDescription();
    public void set_DBSubnetGroupDescription(string value);
    internal bool IsSetDBSubnetGroupDescription();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.RDS.Model.ModifyDBSubnetGroupResponse : AmazonWebServiceResponse {
    private DBSubnetGroup _dbSubnetGroup;
    public DBSubnetGroup DBSubnetGroup { get; public set; }
    public DBSubnetGroup get_DBSubnetGroup();
    public void set_DBSubnetGroup(DBSubnetGroup value);
    internal bool IsSetDBSubnetGroup();
}
public class Amazon.RDS.Model.ModifyEventSubscriptionRequest : AmazonRDSRequest {
    private Nullable`1<bool> _enabled;
    private List`1<string> _eventCategories;
    private string _snsTopicArn;
    private string _sourceType;
    private string _subscriptionName;
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public string SnsTopicArn { get; public set; }
    public string SourceType { get; public set; }
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_SnsTopicArn();
    public void set_SnsTopicArn(string value);
    internal bool IsSetSnsTopicArn();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.RDS.Model.ModifyEventSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.RDS.Model.ModifyGlobalClusterRequest : AmazonRDSRequest {
    private Nullable`1<bool> _allowMajorVersionUpgrade;
    private Nullable`1<bool> _deletionProtection;
    private string _engineVersion;
    private string _globalClusterIdentifier;
    private string _newGlobalClusterIdentifier;
    public Nullable`1<bool> AllowMajorVersionUpgrade { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string EngineVersion { get; public set; }
    public string GlobalClusterIdentifier { get; public set; }
    public string NewGlobalClusterIdentifier { get; public set; }
    public Nullable`1<bool> get_AllowMajorVersionUpgrade();
    public void set_AllowMajorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAllowMajorVersionUpgrade();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
    public string get_NewGlobalClusterIdentifier();
    public void set_NewGlobalClusterIdentifier(string value);
    internal bool IsSetNewGlobalClusterIdentifier();
}
public class Amazon.RDS.Model.ModifyGlobalClusterResponse : AmazonWebServiceResponse {
    private GlobalCluster _globalCluster;
    public GlobalCluster GlobalCluster { get; public set; }
    public GlobalCluster get_GlobalCluster();
    public void set_GlobalCluster(GlobalCluster value);
    internal bool IsSetGlobalCluster();
}
public class Amazon.RDS.Model.ModifyIntegrationRequest : AmazonRDSRequest {
    private string _dataFilter;
    private string _description;
    private string _integrationIdentifier;
    private string _integrationName;
    [AWSPropertyAttribute]
public string DataFilter { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationName { get; public set; }
    public string get_DataFilter();
    public void set_DataFilter(string value);
    internal bool IsSetDataFilter();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationIdentifier();
    public void set_IntegrationIdentifier(string value);
    internal bool IsSetIntegrationIdentifier();
    public string get_IntegrationName();
    public void set_IntegrationName(string value);
    internal bool IsSetIntegrationName();
}
public class Amazon.RDS.Model.ModifyIntegrationResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _additionalEncryptionContext;
    private Nullable`1<DateTime> _createTime;
    private string _dataFilter;
    private string _description;
    private List`1<IntegrationError> _errors;
    private string _integrationArn;
    private string _integrationName;
    private string _kmsKeyId;
    private string _sourceArn;
    private IntegrationStatus _status;
    private List`1<Tag> _tags;
    private string _targetArn;
    public Dictionary`2<string, string> AdditionalEncryptionContext { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string DataFilter { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<IntegrationError> Errors { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationArn { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationName { get; public set; }
    public string KMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public IntegrationStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetArn { get; public set; }
    public Dictionary`2<string, string> get_AdditionalEncryptionContext();
    public void set_AdditionalEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetAdditionalEncryptionContext();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_DataFilter();
    public void set_DataFilter(string value);
    internal bool IsSetDataFilter();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<IntegrationError> get_Errors();
    public void set_Errors(List`1<IntegrationError> value);
    internal bool IsSetErrors();
    public string get_IntegrationArn();
    public void set_IntegrationArn(string value);
    internal bool IsSetIntegrationArn();
    public string get_IntegrationName();
    public void set_IntegrationName(string value);
    internal bool IsSetIntegrationName();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public IntegrationStatus get_Status();
    public void set_Status(IntegrationStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.RDS.Model.ModifyOptionGroupRequest : AmazonRDSRequest {
    private Nullable`1<bool> _applyImmediately;
    private string _optionGroupName;
    private List`1<OptionConfiguration> _optionsToInclude;
    private List`1<string> _optionsToRemove;
    public Nullable`1<bool> ApplyImmediately { get; public set; }
    [AWSPropertyAttribute]
public string OptionGroupName { get; public set; }
    public List`1<OptionConfiguration> OptionsToInclude { get; public set; }
    public List`1<string> OptionsToRemove { get; public set; }
    public Nullable`1<bool> get_ApplyImmediately();
    public void set_ApplyImmediately(Nullable`1<bool> value);
    internal bool IsSetApplyImmediately();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public List`1<OptionConfiguration> get_OptionsToInclude();
    public void set_OptionsToInclude(List`1<OptionConfiguration> value);
    internal bool IsSetOptionsToInclude();
    public List`1<string> get_OptionsToRemove();
    public void set_OptionsToRemove(List`1<string> value);
    internal bool IsSetOptionsToRemove();
}
public class Amazon.RDS.Model.ModifyOptionGroupResponse : AmazonWebServiceResponse {
    private OptionGroup _optionGroup;
    public OptionGroup OptionGroup { get; public set; }
    public OptionGroup get_OptionGroup();
    public void set_OptionGroup(OptionGroup value);
    internal bool IsSetOptionGroup();
}
public class Amazon.RDS.Model.ModifyTenantDatabaseRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _masterUserPassword;
    private string _newTenantDBName;
    private string _tenantDBName;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string MasterUserPassword { get; public set; }
    public string NewTenantDBName { get; public set; }
    [AWSPropertyAttribute]
public string TenantDBName { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_NewTenantDBName();
    public void set_NewTenantDBName(string value);
    internal bool IsSetNewTenantDBName();
    public string get_TenantDBName();
    public void set_TenantDBName(string value);
    internal bool IsSetTenantDBName();
}
public class Amazon.RDS.Model.ModifyTenantDatabaseResponse : AmazonWebServiceResponse {
    private TenantDatabase _tenantDatabase;
    public TenantDatabase TenantDatabase { get; public set; }
    public TenantDatabase get_TenantDatabase();
    public void set_TenantDatabase(TenantDatabase value);
    internal bool IsSetTenantDatabase();
}
public class Amazon.RDS.Model.NetworkTypeNotSupportedException : AmazonRDSException {
    public NetworkTypeNotSupportedException(string message);
    public NetworkTypeNotSupportedException(string message, Exception innerException);
    public NetworkTypeNotSupportedException(Exception innerException);
    public NetworkTypeNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NetworkTypeNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.Option : object {
    private List`1<DBSecurityGroupMembership> _dbSecurityGroupMemberships;
    private string _optionDescription;
    private string _optionName;
    private List`1<OptionSetting> _optionSettings;
    private string _optionVersion;
    private Nullable`1<bool> _permanent;
    private Nullable`1<bool> _persistent;
    private Nullable`1<int> _port;
    private List`1<VpcSecurityGroupMembership> _vpcSecurityGroupMemberships;
    public List`1<DBSecurityGroupMembership> DBSecurityGroupMemberships { get; public set; }
    public string OptionDescription { get; public set; }
    public string OptionName { get; public set; }
    public List`1<OptionSetting> OptionSettings { get; public set; }
    public string OptionVersion { get; public set; }
    public Nullable`1<bool> Permanent { get; public set; }
    public Nullable`1<bool> Persistent { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public List`1<VpcSecurityGroupMembership> VpcSecurityGroupMemberships { get; public set; }
    public List`1<DBSecurityGroupMembership> get_DBSecurityGroupMemberships();
    public void set_DBSecurityGroupMemberships(List`1<DBSecurityGroupMembership> value);
    internal bool IsSetDBSecurityGroupMemberships();
    public string get_OptionDescription();
    public void set_OptionDescription(string value);
    internal bool IsSetOptionDescription();
    public string get_OptionName();
    public void set_OptionName(string value);
    internal bool IsSetOptionName();
    public List`1<OptionSetting> get_OptionSettings();
    public void set_OptionSettings(List`1<OptionSetting> value);
    internal bool IsSetOptionSettings();
    public string get_OptionVersion();
    public void set_OptionVersion(string value);
    internal bool IsSetOptionVersion();
    public Nullable`1<bool> get_Permanent();
    public void set_Permanent(Nullable`1<bool> value);
    internal bool IsSetPermanent();
    public Nullable`1<bool> get_Persistent();
    public void set_Persistent(Nullable`1<bool> value);
    internal bool IsSetPersistent();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public List`1<VpcSecurityGroupMembership> get_VpcSecurityGroupMemberships();
    public void set_VpcSecurityGroupMemberships(List`1<VpcSecurityGroupMembership> value);
    internal bool IsSetVpcSecurityGroupMemberships();
}
public class Amazon.RDS.Model.OptionConfiguration : object {
    private List`1<string> _dbSecurityGroupMemberships;
    private string _optionName;
    private List`1<OptionSetting> _optionSettings;
    private string _optionVersion;
    private Nullable`1<int> _port;
    private List`1<string> _vpcSecurityGroupMemberships;
    public List`1<string> DBSecurityGroupMemberships { get; public set; }
    [AWSPropertyAttribute]
public string OptionName { get; public set; }
    public List`1<OptionSetting> OptionSettings { get; public set; }
    public string OptionVersion { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public List`1<string> VpcSecurityGroupMemberships { get; public set; }
    public List`1<string> get_DBSecurityGroupMemberships();
    public void set_DBSecurityGroupMemberships(List`1<string> value);
    internal bool IsSetDBSecurityGroupMemberships();
    public string get_OptionName();
    public void set_OptionName(string value);
    internal bool IsSetOptionName();
    public List`1<OptionSetting> get_OptionSettings();
    public void set_OptionSettings(List`1<OptionSetting> value);
    internal bool IsSetOptionSettings();
    public string get_OptionVersion();
    public void set_OptionVersion(string value);
    internal bool IsSetOptionVersion();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public List`1<string> get_VpcSecurityGroupMemberships();
    public void set_VpcSecurityGroupMemberships(List`1<string> value);
    internal bool IsSetVpcSecurityGroupMemberships();
}
public class Amazon.RDS.Model.OptionGroup : object {
    private Nullable`1<bool> _allowsVpcAndNonVpcInstanceMemberships;
    private Nullable`1<DateTime> _copyTimestamp;
    private string _engineName;
    private string _majorEngineVersion;
    private string _optionGroupArn;
    private string _optionGroupDescription;
    private string _optionGroupName;
    private List`1<Option> _options;
    private string _sourceAccountId;
    private string _sourceOptionGroup;
    private string _vpcId;
    public Nullable`1<bool> AllowsVpcAndNonVpcInstanceMemberships { get; public set; }
    public Nullable`1<DateTime> CopyTimestamp { get; public set; }
    public string EngineName { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string OptionGroupArn { get; public set; }
    public string OptionGroupDescription { get; public set; }
    public string OptionGroupName { get; public set; }
    public List`1<Option> Options { get; public set; }
    public string SourceAccountId { get; public set; }
    public string SourceOptionGroup { get; public set; }
    public string VpcId { get; public set; }
    public Nullable`1<bool> get_AllowsVpcAndNonVpcInstanceMemberships();
    public void set_AllowsVpcAndNonVpcInstanceMemberships(Nullable`1<bool> value);
    internal bool IsSetAllowsVpcAndNonVpcInstanceMemberships();
    public Nullable`1<DateTime> get_CopyTimestamp();
    public void set_CopyTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCopyTimestamp();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_OptionGroupArn();
    public void set_OptionGroupArn(string value);
    internal bool IsSetOptionGroupArn();
    public string get_OptionGroupDescription();
    public void set_OptionGroupDescription(string value);
    internal bool IsSetOptionGroupDescription();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public List`1<Option> get_Options();
    public void set_Options(List`1<Option> value);
    internal bool IsSetOptions();
    public string get_SourceAccountId();
    public void set_SourceAccountId(string value);
    internal bool IsSetSourceAccountId();
    public string get_SourceOptionGroup();
    public void set_SourceOptionGroup(string value);
    internal bool IsSetSourceOptionGroup();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.RDS.Model.OptionGroupAlreadyExistsException : AmazonRDSException {
    public OptionGroupAlreadyExistsException(string message);
    public OptionGroupAlreadyExistsException(string message, Exception innerException);
    public OptionGroupAlreadyExistsException(Exception innerException);
    public OptionGroupAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OptionGroupAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.OptionGroupMembership : object {
    private string _optionGroupName;
    private string _status;
    public string OptionGroupName { get; public set; }
    public string Status { get; public set; }
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.OptionGroupNotFoundException : AmazonRDSException {
    public OptionGroupNotFoundException(string message);
    public OptionGroupNotFoundException(string message, Exception innerException);
    public OptionGroupNotFoundException(Exception innerException);
    public OptionGroupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OptionGroupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.OptionGroupOption : object {
    private Nullable`1<bool> _copyableCrossAccount;
    private Nullable`1<int> _defaultPort;
    private string _description;
    private string _engineName;
    private string _majorEngineVersion;
    private string _minimumRequiredMinorEngineVersion;
    private string _name;
    private List`1<OptionGroupOptionSetting> _optionGroupOptionSettings;
    private List`1<OptionVersion> _optionGroupOptionVersions;
    private List`1<string> _optionsConflictsWith;
    private List`1<string> _optionsDependedOn;
    private Nullable`1<bool> _permanent;
    private Nullable`1<bool> _persistent;
    private Nullable`1<bool> _portRequired;
    private Nullable`1<bool> _requiresAutoMinorEngineVersionUpgrade;
    private Nullable`1<bool> _supportsOptionVersionDowngrade;
    private Nullable`1<bool> _vpcOnly;
    public Nullable`1<bool> CopyableCrossAccount { get; public set; }
    public Nullable`1<int> DefaultPort { get; public set; }
    public string Description { get; public set; }
    public string EngineName { get; public set; }
    public string MajorEngineVersion { get; public set; }
    public string MinimumRequiredMinorEngineVersion { get; public set; }
    public string Name { get; public set; }
    public List`1<OptionGroupOptionSetting> OptionGroupOptionSettings { get; public set; }
    public List`1<OptionVersion> OptionGroupOptionVersions { get; public set; }
    public List`1<string> OptionsConflictsWith { get; public set; }
    public List`1<string> OptionsDependedOn { get; public set; }
    public Nullable`1<bool> Permanent { get; public set; }
    public Nullable`1<bool> Persistent { get; public set; }
    public Nullable`1<bool> PortRequired { get; public set; }
    public Nullable`1<bool> RequiresAutoMinorEngineVersionUpgrade { get; public set; }
    public Nullable`1<bool> SupportsOptionVersionDowngrade { get; public set; }
    public Nullable`1<bool> VpcOnly { get; public set; }
    public Nullable`1<bool> get_CopyableCrossAccount();
    public void set_CopyableCrossAccount(Nullable`1<bool> value);
    internal bool IsSetCopyableCrossAccount();
    public Nullable`1<int> get_DefaultPort();
    public void set_DefaultPort(Nullable`1<int> value);
    internal bool IsSetDefaultPort();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_MajorEngineVersion();
    public void set_MajorEngineVersion(string value);
    internal bool IsSetMajorEngineVersion();
    public string get_MinimumRequiredMinorEngineVersion();
    public void set_MinimumRequiredMinorEngineVersion(string value);
    internal bool IsSetMinimumRequiredMinorEngineVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<OptionGroupOptionSetting> get_OptionGroupOptionSettings();
    public void set_OptionGroupOptionSettings(List`1<OptionGroupOptionSetting> value);
    internal bool IsSetOptionGroupOptionSettings();
    public List`1<OptionVersion> get_OptionGroupOptionVersions();
    public void set_OptionGroupOptionVersions(List`1<OptionVersion> value);
    internal bool IsSetOptionGroupOptionVersions();
    public List`1<string> get_OptionsConflictsWith();
    public void set_OptionsConflictsWith(List`1<string> value);
    internal bool IsSetOptionsConflictsWith();
    public List`1<string> get_OptionsDependedOn();
    public void set_OptionsDependedOn(List`1<string> value);
    internal bool IsSetOptionsDependedOn();
    public Nullable`1<bool> get_Permanent();
    public void set_Permanent(Nullable`1<bool> value);
    internal bool IsSetPermanent();
    public Nullable`1<bool> get_Persistent();
    public void set_Persistent(Nullable`1<bool> value);
    internal bool IsSetPersistent();
    public Nullable`1<bool> get_PortRequired();
    public void set_PortRequired(Nullable`1<bool> value);
    internal bool IsSetPortRequired();
    public Nullable`1<bool> get_RequiresAutoMinorEngineVersionUpgrade();
    public void set_RequiresAutoMinorEngineVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetRequiresAutoMinorEngineVersionUpgrade();
    public Nullable`1<bool> get_SupportsOptionVersionDowngrade();
    public void set_SupportsOptionVersionDowngrade(Nullable`1<bool> value);
    internal bool IsSetSupportsOptionVersionDowngrade();
    public Nullable`1<bool> get_VpcOnly();
    public void set_VpcOnly(Nullable`1<bool> value);
    internal bool IsSetVpcOnly();
}
public class Amazon.RDS.Model.OptionGroupOptionSetting : object {
    private string _allowedValues;
    private string _applyType;
    private string _defaultValue;
    private Nullable`1<bool> _isModifiable;
    private Nullable`1<bool> _isRequired;
    private List`1<MinimumEngineVersionPerAllowedValue> _minimumEngineVersionPerAllowedValue;
    private string _settingDescription;
    private string _settingName;
    public string AllowedValues { get; public set; }
    public string ApplyType { get; public set; }
    public string DefaultValue { get; public set; }
    public Nullable`1<bool> IsModifiable { get; public set; }
    public Nullable`1<bool> IsRequired { get; public set; }
    public List`1<MinimumEngineVersionPerAllowedValue> MinimumEngineVersionPerAllowedValue { get; public set; }
    public string SettingDescription { get; public set; }
    public string SettingName { get; public set; }
    public string get_AllowedValues();
    public void set_AllowedValues(string value);
    internal bool IsSetAllowedValues();
    public string get_ApplyType();
    public void set_ApplyType(string value);
    internal bool IsSetApplyType();
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    internal bool IsSetDefaultValue();
    public Nullable`1<bool> get_IsModifiable();
    public void set_IsModifiable(Nullable`1<bool> value);
    internal bool IsSetIsModifiable();
    public Nullable`1<bool> get_IsRequired();
    public void set_IsRequired(Nullable`1<bool> value);
    internal bool IsSetIsRequired();
    public List`1<MinimumEngineVersionPerAllowedValue> get_MinimumEngineVersionPerAllowedValue();
    public void set_MinimumEngineVersionPerAllowedValue(List`1<MinimumEngineVersionPerAllowedValue> value);
    internal bool IsSetMinimumEngineVersionPerAllowedValue();
    public string get_SettingDescription();
    public void set_SettingDescription(string value);
    internal bool IsSetSettingDescription();
    public string get_SettingName();
    public void set_SettingName(string value);
    internal bool IsSetSettingName();
}
public class Amazon.RDS.Model.OptionGroupQuotaExceededException : AmazonRDSException {
    public OptionGroupQuotaExceededException(string message);
    public OptionGroupQuotaExceededException(string message, Exception innerException);
    public OptionGroupQuotaExceededException(Exception innerException);
    public OptionGroupQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OptionGroupQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.OptionSetting : object {
    private string _allowedValues;
    private string _applyType;
    private string _dataType;
    private string _defaultValue;
    private string _description;
    private Nullable`1<bool> _isCollection;
    private Nullable`1<bool> _isModifiable;
    private string _name;
    private string _value;
    public string AllowedValues { get; public set; }
    public string ApplyType { get; public set; }
    public string DataType { get; public set; }
    public string DefaultValue { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> IsCollection { get; public set; }
    public Nullable`1<bool> IsModifiable { get; public set; }
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_AllowedValues();
    public void set_AllowedValues(string value);
    internal bool IsSetAllowedValues();
    public string get_ApplyType();
    public void set_ApplyType(string value);
    internal bool IsSetApplyType();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    internal bool IsSetDefaultValue();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_IsCollection();
    public void set_IsCollection(Nullable`1<bool> value);
    internal bool IsSetIsCollection();
    public Nullable`1<bool> get_IsModifiable();
    public void set_IsModifiable(Nullable`1<bool> value);
    internal bool IsSetIsModifiable();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.RDS.Model.OptionVersion : object {
    private Nullable`1<bool> _isDefault;
    private string _version;
    public Nullable`1<bool> IsDefault { get; public set; }
    public string Version { get; public set; }
    public Nullable`1<bool> get_IsDefault();
    public void set_IsDefault(Nullable`1<bool> value);
    internal bool IsSetIsDefault();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.RDS.Model.OrderableDBInstanceOption : object {
    private string _availabilityZoneGroup;
    private List`1<AvailabilityZone> _availabilityZones;
    private List`1<AvailableProcessorFeature> _availableProcessorFeatures;
    private string _dbInstanceClass;
    private string _engine;
    private string _engineVersion;
    private string _licenseModel;
    private Nullable`1<int> _maxIopsPerDbInstance;
    private Nullable`1<double> _maxIopsPerGib;
    private Nullable`1<int> _maxStorageSize;
    private Nullable`1<int> _maxStorageThroughputPerDbInstance;
    private Nullable`1<double> _maxStorageThroughputPerIops;
    private Nullable`1<int> _minIopsPerDbInstance;
    private Nullable`1<double> _minIopsPerGib;
    private Nullable`1<int> _minStorageSize;
    private Nullable`1<int> _minStorageThroughputPerDbInstance;
    private Nullable`1<double> _minStorageThroughputPerIops;
    private Nullable`1<bool> _multiAZCapable;
    private Nullable`1<bool> _outpostCapable;
    private Nullable`1<bool> _readReplicaCapable;
    private string _storageType;
    private List`1<string> _supportedActivityStreamModes;
    private List`1<string> _supportedEngineModes;
    private List`1<string> _supportedNetworkTypes;
    private Nullable`1<bool> _supportsClusters;
    private Nullable`1<bool> _supportsDedicatedLogVolume;
    private Nullable`1<bool> _supportsEnhancedMonitoring;
    private Nullable`1<bool> _supportsGlobalDatabases;
    private Nullable`1<bool> _supportsIAMDatabaseAuthentication;
    private Nullable`1<bool> _supportsIops;
    private Nullable`1<bool> _supportsKerberosAuthentication;
    private Nullable`1<bool> _supportsPerformanceInsights;
    private Nullable`1<bool> _supportsStorageAutoscaling;
    private Nullable`1<bool> _supportsStorageEncryption;
    private Nullable`1<bool> _supportsStorageThroughput;
    private Nullable`1<bool> _vpc;
    public string AvailabilityZoneGroup { get; public set; }
    public List`1<AvailabilityZone> AvailabilityZones { get; public set; }
    public List`1<AvailableProcessorFeature> AvailableProcessorFeatures { get; public set; }
    public string DBInstanceClass { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public string LicenseModel { get; public set; }
    public Nullable`1<int> MaxIopsPerDbInstance { get; public set; }
    public Nullable`1<double> MaxIopsPerGib { get; public set; }
    public Nullable`1<int> MaxStorageSize { get; public set; }
    public Nullable`1<int> MaxStorageThroughputPerDbInstance { get; public set; }
    public Nullable`1<double> MaxStorageThroughputPerIops { get; public set; }
    public Nullable`1<int> MinIopsPerDbInstance { get; public set; }
    public Nullable`1<double> MinIopsPerGib { get; public set; }
    public Nullable`1<int> MinStorageSize { get; public set; }
    public Nullable`1<int> MinStorageThroughputPerDbInstance { get; public set; }
    public Nullable`1<double> MinStorageThroughputPerIops { get; public set; }
    public Nullable`1<bool> MultiAZCapable { get; public set; }
    public Nullable`1<bool> OutpostCapable { get; public set; }
    public Nullable`1<bool> ReadReplicaCapable { get; public set; }
    public string StorageType { get; public set; }
    public List`1<string> SupportedActivityStreamModes { get; public set; }
    public List`1<string> SupportedEngineModes { get; public set; }
    public List`1<string> SupportedNetworkTypes { get; public set; }
    public Nullable`1<bool> SupportsClusters { get; public set; }
    public Nullable`1<bool> SupportsDedicatedLogVolume { get; public set; }
    public Nullable`1<bool> SupportsEnhancedMonitoring { get; public set; }
    public Nullable`1<bool> SupportsGlobalDatabases { get; public set; }
    public Nullable`1<bool> SupportsIAMDatabaseAuthentication { get; public set; }
    public Nullable`1<bool> SupportsIops { get; public set; }
    public Nullable`1<bool> SupportsKerberosAuthentication { get; public set; }
    public Nullable`1<bool> SupportsPerformanceInsights { get; public set; }
    public Nullable`1<bool> SupportsStorageAutoscaling { get; public set; }
    public Nullable`1<bool> SupportsStorageEncryption { get; public set; }
    public Nullable`1<bool> SupportsStorageThroughput { get; public set; }
    public Nullable`1<bool> Vpc { get; public set; }
    public string get_AvailabilityZoneGroup();
    public void set_AvailabilityZoneGroup(string value);
    internal bool IsSetAvailabilityZoneGroup();
    public List`1<AvailabilityZone> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<AvailabilityZone> value);
    internal bool IsSetAvailabilityZones();
    public List`1<AvailableProcessorFeature> get_AvailableProcessorFeatures();
    public void set_AvailableProcessorFeatures(List`1<AvailableProcessorFeature> value);
    internal bool IsSetAvailableProcessorFeatures();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public Nullable`1<int> get_MaxIopsPerDbInstance();
    public void set_MaxIopsPerDbInstance(Nullable`1<int> value);
    internal bool IsSetMaxIopsPerDbInstance();
    public Nullable`1<double> get_MaxIopsPerGib();
    public void set_MaxIopsPerGib(Nullable`1<double> value);
    internal bool IsSetMaxIopsPerGib();
    public Nullable`1<int> get_MaxStorageSize();
    public void set_MaxStorageSize(Nullable`1<int> value);
    internal bool IsSetMaxStorageSize();
    public Nullable`1<int> get_MaxStorageThroughputPerDbInstance();
    public void set_MaxStorageThroughputPerDbInstance(Nullable`1<int> value);
    internal bool IsSetMaxStorageThroughputPerDbInstance();
    public Nullable`1<double> get_MaxStorageThroughputPerIops();
    public void set_MaxStorageThroughputPerIops(Nullable`1<double> value);
    internal bool IsSetMaxStorageThroughputPerIops();
    public Nullable`1<int> get_MinIopsPerDbInstance();
    public void set_MinIopsPerDbInstance(Nullable`1<int> value);
    internal bool IsSetMinIopsPerDbInstance();
    public Nullable`1<double> get_MinIopsPerGib();
    public void set_MinIopsPerGib(Nullable`1<double> value);
    internal bool IsSetMinIopsPerGib();
    public Nullable`1<int> get_MinStorageSize();
    public void set_MinStorageSize(Nullable`1<int> value);
    internal bool IsSetMinStorageSize();
    public Nullable`1<int> get_MinStorageThroughputPerDbInstance();
    public void set_MinStorageThroughputPerDbInstance(Nullable`1<int> value);
    internal bool IsSetMinStorageThroughputPerDbInstance();
    public Nullable`1<double> get_MinStorageThroughputPerIops();
    public void set_MinStorageThroughputPerIops(Nullable`1<double> value);
    internal bool IsSetMinStorageThroughputPerIops();
    public Nullable`1<bool> get_MultiAZCapable();
    public void set_MultiAZCapable(Nullable`1<bool> value);
    internal bool IsSetMultiAZCapable();
    public Nullable`1<bool> get_OutpostCapable();
    public void set_OutpostCapable(Nullable`1<bool> value);
    internal bool IsSetOutpostCapable();
    public Nullable`1<bool> get_ReadReplicaCapable();
    public void set_ReadReplicaCapable(Nullable`1<bool> value);
    internal bool IsSetReadReplicaCapable();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<string> get_SupportedActivityStreamModes();
    public void set_SupportedActivityStreamModes(List`1<string> value);
    internal bool IsSetSupportedActivityStreamModes();
    public List`1<string> get_SupportedEngineModes();
    public void set_SupportedEngineModes(List`1<string> value);
    internal bool IsSetSupportedEngineModes();
    public List`1<string> get_SupportedNetworkTypes();
    public void set_SupportedNetworkTypes(List`1<string> value);
    internal bool IsSetSupportedNetworkTypes();
    public Nullable`1<bool> get_SupportsClusters();
    public void set_SupportsClusters(Nullable`1<bool> value);
    internal bool IsSetSupportsClusters();
    public Nullable`1<bool> get_SupportsDedicatedLogVolume();
    public void set_SupportsDedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetSupportsDedicatedLogVolume();
    public Nullable`1<bool> get_SupportsEnhancedMonitoring();
    public void set_SupportsEnhancedMonitoring(Nullable`1<bool> value);
    internal bool IsSetSupportsEnhancedMonitoring();
    public Nullable`1<bool> get_SupportsGlobalDatabases();
    public void set_SupportsGlobalDatabases(Nullable`1<bool> value);
    internal bool IsSetSupportsGlobalDatabases();
    public Nullable`1<bool> get_SupportsIAMDatabaseAuthentication();
    public void set_SupportsIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetSupportsIAMDatabaseAuthentication();
    public Nullable`1<bool> get_SupportsIops();
    public void set_SupportsIops(Nullable`1<bool> value);
    internal bool IsSetSupportsIops();
    public Nullable`1<bool> get_SupportsKerberosAuthentication();
    public void set_SupportsKerberosAuthentication(Nullable`1<bool> value);
    internal bool IsSetSupportsKerberosAuthentication();
    public Nullable`1<bool> get_SupportsPerformanceInsights();
    public void set_SupportsPerformanceInsights(Nullable`1<bool> value);
    internal bool IsSetSupportsPerformanceInsights();
    public Nullable`1<bool> get_SupportsStorageAutoscaling();
    public void set_SupportsStorageAutoscaling(Nullable`1<bool> value);
    internal bool IsSetSupportsStorageAutoscaling();
    public Nullable`1<bool> get_SupportsStorageEncryption();
    public void set_SupportsStorageEncryption(Nullable`1<bool> value);
    internal bool IsSetSupportsStorageEncryption();
    public Nullable`1<bool> get_SupportsStorageThroughput();
    public void set_SupportsStorageThroughput(Nullable`1<bool> value);
    internal bool IsSetSupportsStorageThroughput();
    public Nullable`1<bool> get_Vpc();
    public void set_Vpc(Nullable`1<bool> value);
    internal bool IsSetVpc();
}
public class Amazon.RDS.Model.Outpost : object {
    private string _arn;
    public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.RDS.Model.Parameter : object {
    private string _allowedValues;
    private ApplyMethod _applyMethod;
    private string _applyType;
    private string _dataType;
    private string _description;
    private Nullable`1<bool> _isModifiable;
    private string _minimumEngineVersion;
    private string _parameterName;
    private string _parameterValue;
    private string _source;
    private List`1<string> _supportedEngineModes;
    public string AllowedValues { get; public set; }
    public ApplyMethod ApplyMethod { get; public set; }
    public string ApplyType { get; public set; }
    public string DataType { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> IsModifiable { get; public set; }
    public string MinimumEngineVersion { get; public set; }
    public string ParameterName { get; public set; }
    public string ParameterValue { get; public set; }
    public string Source { get; public set; }
    public List`1<string> SupportedEngineModes { get; public set; }
    public string get_AllowedValues();
    public void set_AllowedValues(string value);
    internal bool IsSetAllowedValues();
    public ApplyMethod get_ApplyMethod();
    public void set_ApplyMethod(ApplyMethod value);
    internal bool IsSetApplyMethod();
    public string get_ApplyType();
    public void set_ApplyType(string value);
    internal bool IsSetApplyType();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_IsModifiable();
    public void set_IsModifiable(Nullable`1<bool> value);
    internal bool IsSetIsModifiable();
    public string get_MinimumEngineVersion();
    public void set_MinimumEngineVersion(string value);
    internal bool IsSetMinimumEngineVersion();
    public string get_ParameterName();
    public void set_ParameterName(string value);
    internal bool IsSetParameterName();
    public string get_ParameterValue();
    public void set_ParameterValue(string value);
    internal bool IsSetParameterValue();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public List`1<string> get_SupportedEngineModes();
    public void set_SupportedEngineModes(List`1<string> value);
    internal bool IsSetSupportedEngineModes();
}
public class Amazon.RDS.Model.PendingCloudwatchLogsExports : object {
    private List`1<string> _logTypesToDisable;
    private List`1<string> _logTypesToEnable;
    public List`1<string> LogTypesToDisable { get; public set; }
    public List`1<string> LogTypesToEnable { get; public set; }
    public List`1<string> get_LogTypesToDisable();
    public void set_LogTypesToDisable(List`1<string> value);
    internal bool IsSetLogTypesToDisable();
    public List`1<string> get_LogTypesToEnable();
    public void set_LogTypesToEnable(List`1<string> value);
    internal bool IsSetLogTypesToEnable();
}
public class Amazon.RDS.Model.PendingMaintenanceAction : object {
    private string _action;
    private Nullable`1<DateTime> _autoAppliedAfterDate;
    private Nullable`1<DateTime> _currentApplyDate;
    private string _description;
    private Nullable`1<DateTime> _forcedApplyDate;
    private string _optInStatus;
    public string Action { get; public set; }
    public Nullable`1<DateTime> AutoAppliedAfterDate { get; public set; }
    public Nullable`1<DateTime> CurrentApplyDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<DateTime> ForcedApplyDate { get; public set; }
    public string OptInStatus { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public Nullable`1<DateTime> get_AutoAppliedAfterDate();
    public void set_AutoAppliedAfterDate(Nullable`1<DateTime> value);
    internal bool IsSetAutoAppliedAfterDate();
    public Nullable`1<DateTime> get_CurrentApplyDate();
    public void set_CurrentApplyDate(Nullable`1<DateTime> value);
    internal bool IsSetCurrentApplyDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_ForcedApplyDate();
    public void set_ForcedApplyDate(Nullable`1<DateTime> value);
    internal bool IsSetForcedApplyDate();
    public string get_OptInStatus();
    public void set_OptInStatus(string value);
    internal bool IsSetOptInStatus();
}
public class Amazon.RDS.Model.PendingModifiedValues : object {
    private Nullable`1<int> _allocatedStorage;
    private AutomationMode _automationMode;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _caCertificateIdentifier;
    private string _dbInstanceClass;
    private string _dbInstanceIdentifier;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _dedicatedLogVolume;
    private string _engine;
    private string _engineVersion;
    private Nullable`1<bool> _iamDatabaseAuthenticationEnabled;
    private Nullable`1<int> _iops;
    private string _licenseModel;
    private string _masterUserPassword;
    private Nullable`1<bool> _multiAZ;
    private Nullable`1<bool> _multiTenant;
    private PendingCloudwatchLogsExports _pendingCloudwatchLogsExports;
    private Nullable`1<int> _port;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<DateTime> _resumeFullAutomationModeTime;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public AutomationMode AutomationMode { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public string DBInstanceClass { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> IAMDatabaseAuthenticationEnabled { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string LicenseModel { get; public set; }
    public string MasterUserPassword { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public Nullable`1<bool> MultiTenant { get; public set; }
    public PendingCloudwatchLogsExports PendingCloudwatchLogsExports { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<DateTime> ResumeFullAutomationModeTime { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public AutomationMode get_AutomationMode();
    public void set_AutomationMode(AutomationMode value);
    internal bool IsSetAutomationMode();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_IAMDatabaseAuthenticationEnabled();
    public void set_IAMDatabaseAuthenticationEnabled(Nullable`1<bool> value);
    internal bool IsSetIAMDatabaseAuthenticationEnabled();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public Nullable`1<bool> get_MultiTenant();
    public void set_MultiTenant(Nullable`1<bool> value);
    internal bool IsSetMultiTenant();
    public PendingCloudwatchLogsExports get_PendingCloudwatchLogsExports();
    public void set_PendingCloudwatchLogsExports(PendingCloudwatchLogsExports value);
    internal bool IsSetPendingCloudwatchLogsExports();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<DateTime> get_ResumeFullAutomationModeTime();
    public void set_ResumeFullAutomationModeTime(Nullable`1<DateTime> value);
    internal bool IsSetResumeFullAutomationModeTime();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
}
public class Amazon.RDS.Model.PerformanceInsightsMetricDimensionGroup : object {
    private List`1<string> _dimensions;
    private string _group;
    private Nullable`1<int> _limit;
    public List`1<string> Dimensions { get; public set; }
    public string Group { get; public set; }
    public Nullable`1<int> Limit { get; public set; }
    public List`1<string> get_Dimensions();
    public void set_Dimensions(List`1<string> value);
    internal bool IsSetDimensions();
    public string get_Group();
    public void set_Group(string value);
    internal bool IsSetGroup();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
}
public class Amazon.RDS.Model.PerformanceInsightsMetricQuery : object {
    private PerformanceInsightsMetricDimensionGroup _groupBy;
    private string _metric;
    public PerformanceInsightsMetricDimensionGroup GroupBy { get; public set; }
    public string Metric { get; public set; }
    public PerformanceInsightsMetricDimensionGroup get_GroupBy();
    public void set_GroupBy(PerformanceInsightsMetricDimensionGroup value);
    internal bool IsSetGroupBy();
    public string get_Metric();
    public void set_Metric(string value);
    internal bool IsSetMetric();
}
public class Amazon.RDS.Model.PerformanceIssueDetails : object {
    private string _analysis;
    private Nullable`1<DateTime> _endTime;
    private List`1<Metric> _metrics;
    private Nullable`1<DateTime> _startTime;
    public string Analysis { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public List`1<Metric> Metrics { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string get_Analysis();
    public void set_Analysis(string value);
    internal bool IsSetAnalysis();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public List`1<Metric> get_Metrics();
    public void set_Metrics(List`1<Metric> value);
    internal bool IsSetMetrics();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.RDS.Model.PointInTimeRestoreNotEnabledException : AmazonRDSException {
    public PointInTimeRestoreNotEnabledException(string message);
    public PointInTimeRestoreNotEnabledException(string message, Exception innerException);
    public PointInTimeRestoreNotEnabledException(Exception innerException);
    public PointInTimeRestoreNotEnabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PointInTimeRestoreNotEnabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ProcessorFeature : object {
    private string _name;
    private string _value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.RDS.Model.PromoteReadReplicaDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
}
public class Amazon.RDS.Model.PromoteReadReplicaDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.PromoteReadReplicaRequest : AmazonRDSRequest {
    private Nullable`1<int> _backupRetentionPeriod;
    private string _dbInstanceIdentifier;
    private string _preferredBackupWindow;
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
}
public class Amazon.RDS.Model.PromoteReadReplicaResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.ProvisionedIopsNotAvailableInAZException : AmazonRDSException {
    public ProvisionedIopsNotAvailableInAZException(string message);
    public ProvisionedIopsNotAvailableInAZException(string message, Exception innerException);
    public ProvisionedIopsNotAvailableInAZException(Exception innerException);
    public ProvisionedIopsNotAvailableInAZException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ProvisionedIopsNotAvailableInAZException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.PurchaseReservedDBInstancesOfferingRequest : AmazonRDSRequest {
    private Nullable`1<int> _dbInstanceCount;
    private string _reservedDBInstanceId;
    private string _reservedDBInstancesOfferingId;
    private List`1<Tag> _tags;
    public Nullable`1<int> DBInstanceCount { get; public set; }
    public string ReservedDBInstanceId { get; public set; }
    [AWSPropertyAttribute]
public string ReservedDBInstancesOfferingId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public PurchaseReservedDBInstancesOfferingRequest(string reservedDBInstancesOfferingId);
    public Nullable`1<int> get_DBInstanceCount();
    public void set_DBInstanceCount(Nullable`1<int> value);
    internal bool IsSetDBInstanceCount();
    public string get_ReservedDBInstanceId();
    public void set_ReservedDBInstanceId(string value);
    internal bool IsSetReservedDBInstanceId();
    public string get_ReservedDBInstancesOfferingId();
    public void set_ReservedDBInstancesOfferingId(string value);
    internal bool IsSetReservedDBInstancesOfferingId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.RDS.Model.PurchaseReservedDBInstancesOfferingResponse : AmazonWebServiceResponse {
    private ReservedDBInstance _reservedDBInstance;
    public ReservedDBInstance ReservedDBInstance { get; public set; }
    public ReservedDBInstance get_ReservedDBInstance();
    public void set_ReservedDBInstance(ReservedDBInstance value);
    internal bool IsSetReservedDBInstance();
}
public class Amazon.RDS.Model.Range : object {
    private Nullable`1<int> _from;
    private Nullable`1<int> _step;
    private Nullable`1<int> _to;
    public Nullable`1<int> From { get; public set; }
    public Nullable`1<int> Step { get; public set; }
    public Nullable`1<int> To { get; public set; }
    public Nullable`1<int> get_From();
    public void set_From(Nullable`1<int> value);
    internal bool IsSetFrom();
    public Nullable`1<int> get_Step();
    public void set_Step(Nullable`1<int> value);
    internal bool IsSetStep();
    public Nullable`1<int> get_To();
    public void set_To(Nullable`1<int> value);
    internal bool IsSetTo();
}
public class Amazon.RDS.Model.RdsCustomClusterConfiguration : object {
    private string _interconnectSubnetId;
    private ReplicaMode _replicaMode;
    private string _transitGatewayMulticastDomainId;
    public string InterconnectSubnetId { get; public set; }
    public ReplicaMode ReplicaMode { get; public set; }
    public string TransitGatewayMulticastDomainId { get; public set; }
    public string get_InterconnectSubnetId();
    public void set_InterconnectSubnetId(string value);
    internal bool IsSetInterconnectSubnetId();
    public ReplicaMode get_ReplicaMode();
    public void set_ReplicaMode(ReplicaMode value);
    internal bool IsSetReplicaMode();
    public string get_TransitGatewayMulticastDomainId();
    public void set_TransitGatewayMulticastDomainId(string value);
    internal bool IsSetTransitGatewayMulticastDomainId();
}
public class Amazon.RDS.Model.RDSPaginatorFactory : object {
    private IAmazonRDS client;
    internal RDSPaginatorFactory(IAmazonRDS client);
    public sealed virtual IDescribeDBEngineVersionsPaginator DescribeDBEngineVersions(DescribeDBEngineVersionsRequest request);
    public sealed virtual IDescribeDBInstancesPaginator DescribeDBInstances(DescribeDBInstancesRequest request);
    public sealed virtual IDescribeDBParameterGroupsPaginator DescribeDBParameterGroups(DescribeDBParameterGroupsRequest request);
    public sealed virtual IDescribeDBParametersPaginator DescribeDBParameters(DescribeDBParametersRequest request);
    public sealed virtual IDescribeDBSecurityGroupsPaginator DescribeDBSecurityGroups(DescribeDBSecurityGroupsRequest request);
    public sealed virtual IDescribeDBSnapshotsPaginator DescribeDBSnapshots(DescribeDBSnapshotsRequest request);
    public sealed virtual IDescribeDBSubnetGroupsPaginator DescribeDBSubnetGroups(DescribeDBSubnetGroupsRequest request);
    public sealed virtual IDescribeEngineDefaultParametersPaginator DescribeEngineDefaultParameters(DescribeEngineDefaultParametersRequest request);
    public sealed virtual IDescribeEventsPaginator DescribeEvents(DescribeEventsRequest request);
    public sealed virtual IDescribeEventSubscriptionsPaginator DescribeEventSubscriptions(DescribeEventSubscriptionsRequest request);
    public sealed virtual IDescribeOptionGroupOptionsPaginator DescribeOptionGroupOptions(DescribeOptionGroupOptionsRequest request);
    public sealed virtual IDescribeOptionGroupsPaginator DescribeOptionGroups(DescribeOptionGroupsRequest request);
    public sealed virtual IDescribeOrderableDBInstanceOptionsPaginator DescribeOrderableDBInstanceOptions(DescribeOrderableDBInstanceOptionsRequest request);
    public sealed virtual IDescribeReservedDBInstancesPaginator DescribeReservedDBInstances(DescribeReservedDBInstancesRequest request);
    public sealed virtual IDescribeReservedDBInstancesOfferingsPaginator DescribeReservedDBInstancesOfferings(DescribeReservedDBInstancesOfferingsRequest request);
}
public class Amazon.RDS.Model.RebootDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
}
public class Amazon.RDS.Model.RebootDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.RebootDBInstanceRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private Nullable`1<bool> _forceFailover;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public Nullable`1<bool> ForceFailover { get; public set; }
    public RebootDBInstanceRequest(string dbInstanceIdentifier);
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public Nullable`1<bool> get_ForceFailover();
    public void set_ForceFailover(Nullable`1<bool> value);
    internal bool IsSetForceFailover();
}
public class Amazon.RDS.Model.RebootDBInstanceResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.RebootDBShardGroupRequest : AmazonRDSRequest {
    private string _dbShardGroupIdentifier;
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
}
public class Amazon.RDS.Model.RebootDBShardGroupResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _computeRedundancy;
    private string _dbClusterIdentifier;
    private string _dbShardGroupIdentifier;
    private string _dbShardGroupResourceId;
    private string _endpoint;
    private Nullable`1<double> _maxACU;
    private Nullable`1<double> _minACU;
    private Nullable`1<bool> _publiclyAccessible;
    private string _status;
    public Nullable`1<int> ComputeRedundancy { get; public set; }
    public string DBClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DBShardGroupIdentifier { get; public set; }
    public string DBShardGroupResourceId { get; public set; }
    public string Endpoint { get; public set; }
    public Nullable`1<double> MaxACU { get; public set; }
    public Nullable`1<double> MinACU { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<int> get_ComputeRedundancy();
    public void set_ComputeRedundancy(Nullable`1<int> value);
    internal bool IsSetComputeRedundancy();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBShardGroupIdentifier();
    public void set_DBShardGroupIdentifier(string value);
    internal bool IsSetDBShardGroupIdentifier();
    public string get_DBShardGroupResourceId();
    public void set_DBShardGroupResourceId(string value);
    internal bool IsSetDBShardGroupResourceId();
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public Nullable`1<double> get_MaxACU();
    public void set_MaxACU(Nullable`1<double> value);
    internal bool IsSetMaxACU();
    public Nullable`1<double> get_MinACU();
    public void set_MinACU(Nullable`1<double> value);
    internal bool IsSetMinACU();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.RecommendedAction : object {
    private string _actionId;
    private List`1<string> _applyModes;
    private List`1<ContextAttribute> _contextAttributes;
    private string _description;
    private IssueDetails _issueDetails;
    private string _operation;
    private List`1<RecommendedActionParameter> _parameters;
    private string _status;
    private string _title;
    public string ActionId { get; public set; }
    public List`1<string> ApplyModes { get; public set; }
    public List`1<ContextAttribute> ContextAttributes { get; public set; }
    public string Description { get; public set; }
    public IssueDetails IssueDetails { get; public set; }
    public string Operation { get; public set; }
    public List`1<RecommendedActionParameter> Parameters { get; public set; }
    public string Status { get; public set; }
    public string Title { get; public set; }
    public string get_ActionId();
    public void set_ActionId(string value);
    internal bool IsSetActionId();
    public List`1<string> get_ApplyModes();
    public void set_ApplyModes(List`1<string> value);
    internal bool IsSetApplyModes();
    public List`1<ContextAttribute> get_ContextAttributes();
    public void set_ContextAttributes(List`1<ContextAttribute> value);
    internal bool IsSetContextAttributes();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public IssueDetails get_IssueDetails();
    public void set_IssueDetails(IssueDetails value);
    internal bool IsSetIssueDetails();
    public string get_Operation();
    public void set_Operation(string value);
    internal bool IsSetOperation();
    public List`1<RecommendedActionParameter> get_Parameters();
    public void set_Parameters(List`1<RecommendedActionParameter> value);
    internal bool IsSetParameters();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.RDS.Model.RecommendedActionParameter : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.RDS.Model.RecommendedActionUpdate : object {
    private string _actionId;
    private string _status;
    [AWSPropertyAttribute]
public string ActionId { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    public string get_ActionId();
    public void set_ActionId(string value);
    internal bool IsSetActionId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.RecurringCharge : object {
    private Nullable`1<double> _recurringChargeAmount;
    private string _recurringChargeFrequency;
    public Nullable`1<double> RecurringChargeAmount { get; public set; }
    public string RecurringChargeFrequency { get; public set; }
    public Nullable`1<double> get_RecurringChargeAmount();
    public void set_RecurringChargeAmount(Nullable`1<double> value);
    internal bool IsSetRecurringChargeAmount();
    public string get_RecurringChargeFrequency();
    public void set_RecurringChargeFrequency(string value);
    internal bool IsSetRecurringChargeFrequency();
}
public class Amazon.RDS.Model.ReferenceDetails : object {
    private ScalarReferenceDetails _scalarReferenceDetails;
    public ScalarReferenceDetails ScalarReferenceDetails { get; public set; }
    public ScalarReferenceDetails get_ScalarReferenceDetails();
    public void set_ScalarReferenceDetails(ScalarReferenceDetails value);
    internal bool IsSetScalarReferenceDetails();
}
public class Amazon.RDS.Model.RegisterDBProxyTargetsRequest : AmazonRDSRequest {
    private List`1<string> _dbClusterIdentifiers;
    private List`1<string> _dbInstanceIdentifiers;
    private string _dbProxyName;
    private string _targetGroupName;
    public List`1<string> DBClusterIdentifiers { get; public set; }
    public List`1<string> DBInstanceIdentifiers { get; public set; }
    [AWSPropertyAttribute]
public string DBProxyName { get; public set; }
    public string TargetGroupName { get; public set; }
    public List`1<string> get_DBClusterIdentifiers();
    public void set_DBClusterIdentifiers(List`1<string> value);
    internal bool IsSetDBClusterIdentifiers();
    public List`1<string> get_DBInstanceIdentifiers();
    public void set_DBInstanceIdentifiers(List`1<string> value);
    internal bool IsSetDBInstanceIdentifiers();
    public string get_DBProxyName();
    public void set_DBProxyName(string value);
    internal bool IsSetDBProxyName();
    public string get_TargetGroupName();
    public void set_TargetGroupName(string value);
    internal bool IsSetTargetGroupName();
}
public class Amazon.RDS.Model.RegisterDBProxyTargetsResponse : AmazonWebServiceResponse {
    private List`1<DBProxyTarget> _dbProxyTargets;
    public List`1<DBProxyTarget> DBProxyTargets { get; public set; }
    public List`1<DBProxyTarget> get_DBProxyTargets();
    public void set_DBProxyTargets(List`1<DBProxyTarget> value);
    internal bool IsSetDBProxyTargets();
}
public class Amazon.RDS.Model.RemoveFromGlobalClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private string _globalClusterIdentifier;
    public string DbClusterIdentifier { get; public set; }
    public string GlobalClusterIdentifier { get; public set; }
    public string get_DbClusterIdentifier();
    public void set_DbClusterIdentifier(string value);
    internal bool IsSetDbClusterIdentifier();
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
}
public class Amazon.RDS.Model.RemoveFromGlobalClusterResponse : AmazonWebServiceResponse {
    private GlobalCluster _globalCluster;
    public GlobalCluster GlobalCluster { get; public set; }
    public GlobalCluster get_GlobalCluster();
    public void set_GlobalCluster(GlobalCluster value);
    internal bool IsSetGlobalCluster();
}
public class Amazon.RDS.Model.RemoveRoleFromDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    private string _featureName;
    private string _roleArn;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string FeatureName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_FeatureName();
    public void set_FeatureName(string value);
    internal bool IsSetFeatureName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.RDS.Model.RemoveRoleFromDBClusterResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.RemoveRoleFromDBInstanceRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _featureName;
    private string _roleArn;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string FeatureName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_FeatureName();
    public void set_FeatureName(string value);
    internal bool IsSetFeatureName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.RDS.Model.RemoveRoleFromDBInstanceResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.RemoveSourceIdentifierFromSubscriptionRequest : AmazonRDSRequest {
    private string _sourceIdentifier;
    private string _subscriptionName;
    [AWSPropertyAttribute]
public string SourceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    internal bool IsSetSourceIdentifier();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.RDS.Model.RemoveSourceIdentifierFromSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.RDS.Model.RemoveTagsFromResourceRequest : AmazonRDSRequest {
    private string _resourceName;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.RDS.Model.RemoveTagsFromResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.RDS.Model.ReservedDBInstance : object {
    private string _currencyCode;
    private string _dbInstanceClass;
    private Nullable`1<int> _dbInstanceCount;
    private Nullable`1<int> _duration;
    private Nullable`1<double> _fixedPrice;
    private string _leaseId;
    private Nullable`1<bool> _multiAZ;
    private string _offeringType;
    private string _productDescription;
    private List`1<RecurringCharge> _recurringCharges;
    private string _reservedDBInstanceArn;
    private string _reservedDBInstanceId;
    private string _reservedDBInstancesOfferingId;
    private Nullable`1<DateTime> _startTime;
    private string _state;
    private Nullable`1<double> _usagePrice;
    public string CurrencyCode { get; public set; }
    public string DBInstanceClass { get; public set; }
    public Nullable`1<int> DBInstanceCount { get; public set; }
    public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<double> FixedPrice { get; public set; }
    public string LeaseId { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string OfferingType { get; public set; }
    public string ProductDescription { get; public set; }
    public List`1<RecurringCharge> RecurringCharges { get; public set; }
    public string ReservedDBInstanceArn { get; public set; }
    public string ReservedDBInstanceId { get; public set; }
    public string ReservedDBInstancesOfferingId { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string State { get; public set; }
    public Nullable`1<double> UsagePrice { get; public set; }
    public string get_CurrencyCode();
    public void set_CurrencyCode(string value);
    internal bool IsSetCurrencyCode();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public Nullable`1<int> get_DBInstanceCount();
    public void set_DBInstanceCount(Nullable`1<int> value);
    internal bool IsSetDBInstanceCount();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<double> get_FixedPrice();
    public void set_FixedPrice(Nullable`1<double> value);
    internal bool IsSetFixedPrice();
    public string get_LeaseId();
    public void set_LeaseId(string value);
    internal bool IsSetLeaseId();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_OfferingType();
    public void set_OfferingType(string value);
    internal bool IsSetOfferingType();
    public string get_ProductDescription();
    public void set_ProductDescription(string value);
    internal bool IsSetProductDescription();
    public List`1<RecurringCharge> get_RecurringCharges();
    public void set_RecurringCharges(List`1<RecurringCharge> value);
    internal bool IsSetRecurringCharges();
    public string get_ReservedDBInstanceArn();
    public void set_ReservedDBInstanceArn(string value);
    internal bool IsSetReservedDBInstanceArn();
    public string get_ReservedDBInstanceId();
    public void set_ReservedDBInstanceId(string value);
    internal bool IsSetReservedDBInstanceId();
    public string get_ReservedDBInstancesOfferingId();
    public void set_ReservedDBInstancesOfferingId(string value);
    internal bool IsSetReservedDBInstancesOfferingId();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public Nullable`1<double> get_UsagePrice();
    public void set_UsagePrice(Nullable`1<double> value);
    internal bool IsSetUsagePrice();
}
public class Amazon.RDS.Model.ReservedDBInstanceAlreadyExistsException : AmazonRDSException {
    public ReservedDBInstanceAlreadyExistsException(string message);
    public ReservedDBInstanceAlreadyExistsException(string message, Exception innerException);
    public ReservedDBInstanceAlreadyExistsException(Exception innerException);
    public ReservedDBInstanceAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReservedDBInstanceAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ReservedDBInstanceNotFoundException : AmazonRDSException {
    public ReservedDBInstanceNotFoundException(string message);
    public ReservedDBInstanceNotFoundException(string message, Exception innerException);
    public ReservedDBInstanceNotFoundException(Exception innerException);
    public ReservedDBInstanceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReservedDBInstanceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ReservedDBInstanceQuotaExceededException : AmazonRDSException {
    public ReservedDBInstanceQuotaExceededException(string message);
    public ReservedDBInstanceQuotaExceededException(string message, Exception innerException);
    public ReservedDBInstanceQuotaExceededException(Exception innerException);
    public ReservedDBInstanceQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReservedDBInstanceQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ReservedDBInstancesOffering : object {
    private string _currencyCode;
    private string _dbInstanceClass;
    private Nullable`1<int> _duration;
    private Nullable`1<double> _fixedPrice;
    private Nullable`1<bool> _multiAZ;
    private string _offeringType;
    private string _productDescription;
    private List`1<RecurringCharge> _recurringCharges;
    private string _reservedDBInstancesOfferingId;
    private Nullable`1<double> _usagePrice;
    public string CurrencyCode { get; public set; }
    public string DBInstanceClass { get; public set; }
    public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<double> FixedPrice { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string OfferingType { get; public set; }
    public string ProductDescription { get; public set; }
    public List`1<RecurringCharge> RecurringCharges { get; public set; }
    public string ReservedDBInstancesOfferingId { get; public set; }
    public Nullable`1<double> UsagePrice { get; public set; }
    public string get_CurrencyCode();
    public void set_CurrencyCode(string value);
    internal bool IsSetCurrencyCode();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<double> get_FixedPrice();
    public void set_FixedPrice(Nullable`1<double> value);
    internal bool IsSetFixedPrice();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_OfferingType();
    public void set_OfferingType(string value);
    internal bool IsSetOfferingType();
    public string get_ProductDescription();
    public void set_ProductDescription(string value);
    internal bool IsSetProductDescription();
    public List`1<RecurringCharge> get_RecurringCharges();
    public void set_RecurringCharges(List`1<RecurringCharge> value);
    internal bool IsSetRecurringCharges();
    public string get_ReservedDBInstancesOfferingId();
    public void set_ReservedDBInstancesOfferingId(string value);
    internal bool IsSetReservedDBInstancesOfferingId();
    public Nullable`1<double> get_UsagePrice();
    public void set_UsagePrice(Nullable`1<double> value);
    internal bool IsSetUsagePrice();
}
public class Amazon.RDS.Model.ReservedDBInstancesOfferingNotFoundException : AmazonRDSException {
    public ReservedDBInstancesOfferingNotFoundException(string message);
    public ReservedDBInstancesOfferingNotFoundException(string message, Exception innerException);
    public ReservedDBInstancesOfferingNotFoundException(Exception innerException);
    public ReservedDBInstancesOfferingNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReservedDBInstancesOfferingNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ResetDBClusterParameterGroupRequest : AmazonRDSRequest {
    private string _dbClusterParameterGroupName;
    private List`1<Parameter> _parameters;
    private Nullable`1<bool> _resetAllParameters;
    [AWSPropertyAttribute]
public string DBClusterParameterGroupName { get; public set; }
    public List`1<Parameter> Parameters { get; public set; }
    public Nullable`1<bool> ResetAllParameters { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
    public Nullable`1<bool> get_ResetAllParameters();
    public void set_ResetAllParameters(Nullable`1<bool> value);
    internal bool IsSetResetAllParameters();
}
public class Amazon.RDS.Model.ResetDBClusterParameterGroupResponse : AmazonWebServiceResponse {
    private string _dbClusterParameterGroupName;
    public string DBClusterParameterGroupName { get; public set; }
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
}
public class Amazon.RDS.Model.ResetDBParameterGroupRequest : AmazonRDSRequest {
    private string _dbParameterGroupName;
    private List`1<Parameter> _parameters;
    private Nullable`1<bool> _resetAllParameters;
    [AWSPropertyAttribute]
public string DBParameterGroupName { get; public set; }
    public List`1<Parameter> Parameters { get; public set; }
    public Nullable`1<bool> ResetAllParameters { get; public set; }
    public ResetDBParameterGroupRequest(string dbParameterGroupName);
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
    public Nullable`1<bool> get_ResetAllParameters();
    public void set_ResetAllParameters(Nullable`1<bool> value);
    internal bool IsSetResetAllParameters();
}
public class Amazon.RDS.Model.ResetDBParameterGroupResponse : AmazonWebServiceResponse {
    private string _dbParameterGroupName;
    public string DBParameterGroupName { get; public set; }
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
}
public class Amazon.RDS.Model.ResourceNotFoundException : AmazonRDSException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.ResourcePendingMaintenanceActions : object {
    private List`1<PendingMaintenanceAction> _pendingMaintenanceActionDetails;
    private string _resourceIdentifier;
    public List`1<PendingMaintenanceAction> PendingMaintenanceActionDetails { get; public set; }
    public string ResourceIdentifier { get; public set; }
    public List`1<PendingMaintenanceAction> get_PendingMaintenanceActionDetails();
    public void set_PendingMaintenanceActionDetails(List`1<PendingMaintenanceAction> value);
    internal bool IsSetPendingMaintenanceActionDetails();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
}
public class Amazon.RDS.Model.RestoreDBClusterFromS3Request : AmazonRDSRequest {
    private List`1<string> _availabilityZones;
    private Nullable`1<long> _backtrackWindow;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _characterSetName;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _databaseName;
    private string _dbClusterIdentifier;
    private string _dbClusterParameterGroupName;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainIAMRoleName;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineVersion;
    private string _kmsKeyId;
    private Nullable`1<bool> _manageMasterUserPassword;
    private string _masterUsername;
    private string _masterUserPassword;
    private string _masterUserSecretKmsKeyId;
    private string _networkType;
    private string _optionGroupName;
    private Nullable`1<int> _port;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private string _s3BucketName;
    private string _s3IngestionRoleArn;
    private string _s3Prefix;
    private ServerlessV2ScalingConfiguration _serverlessV2ScalingConfiguration;
    private string _sourceEngine;
    private string _sourceEngineVersion;
    private Nullable`1<bool> _storageEncrypted;
    private string _storageType;
    private List`1<Tag> _tags;
    private List`1<string> _vpcSecurityGroupIds;
    public List`1<string> AvailabilityZones { get; public set; }
    public Nullable`1<long> BacktrackWindow { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string CharacterSetName { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string DBClusterParameterGroupName { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineVersion { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> ManageMasterUserPassword { get; public set; }
    [AWSPropertyAttribute]
public string MasterUsername { get; public set; }
    public string MasterUserPassword { get; public set; }
    public string MasterUserSecretKmsKeyId { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string S3IngestionRoleArn { get; public set; }
    public string S3Prefix { get; public set; }
    public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string SourceEngine { get; public set; }
    [AWSPropertyAttribute]
public string SourceEngineVersion { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public Nullable`1<long> get_BacktrackWindow();
    public void set_BacktrackWindow(Nullable`1<long> value);
    internal bool IsSetBacktrackWindow();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_ManageMasterUserPassword();
    public void set_ManageMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetManageMasterUserPassword();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_MasterUserSecretKmsKeyId();
    public void set_MasterUserSecretKmsKeyId(string value);
    internal bool IsSetMasterUserSecretKmsKeyId();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3IngestionRoleArn();
    public void set_S3IngestionRoleArn(string value);
    internal bool IsSetS3IngestionRoleArn();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public ServerlessV2ScalingConfiguration get_ServerlessV2ScalingConfiguration();
    public void set_ServerlessV2ScalingConfiguration(ServerlessV2ScalingConfiguration value);
    internal bool IsSetServerlessV2ScalingConfiguration();
    public string get_SourceEngine();
    public void set_SourceEngine(string value);
    internal bool IsSetSourceEngine();
    public string get_SourceEngineVersion();
    public void set_SourceEngineVersion(string value);
    internal bool IsSetSourceEngineVersion();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.RestoreDBClusterFromS3Response : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.RestoreDBClusterFromSnapshotRequest : AmazonRDSRequest {
    private List`1<string> _availabilityZones;
    private Nullable`1<long> _backtrackWindow;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _databaseName;
    private string _dbClusterIdentifier;
    private string _dbClusterInstanceClass;
    private string _dbClusterParameterGroupName;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainIAMRoleName;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineMode;
    private string _engineVersion;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _networkType;
    private string _optionGroupName;
    private Nullable`1<int> _port;
    private Nullable`1<bool> _publiclyAccessible;
    private RdsCustomClusterConfiguration _rdsCustomClusterConfiguration;
    private ScalingConfiguration _scalingConfiguration;
    private ServerlessV2ScalingConfiguration _serverlessV2ScalingConfiguration;
    private string _snapshotIdentifier;
    private string _storageType;
    private List`1<Tag> _tags;
    private List`1<string> _vpcSecurityGroupIds;
    public List`1<string> AvailabilityZones { get; public set; }
    public Nullable`1<long> BacktrackWindow { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string DBClusterInstanceClass { get; public set; }
    public string DBClusterParameterGroupName { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineMode { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public RdsCustomClusterConfiguration RdsCustomClusterConfiguration { get; public set; }
    public ScalingConfiguration ScalingConfiguration { get; public set; }
    public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotIdentifier { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public Nullable`1<long> get_BacktrackWindow();
    public void set_BacktrackWindow(Nullable`1<long> value);
    internal bool IsSetBacktrackWindow();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBClusterInstanceClass();
    public void set_DBClusterInstanceClass(string value);
    internal bool IsSetDBClusterInstanceClass();
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineMode();
    public void set_EngineMode(string value);
    internal bool IsSetEngineMode();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public RdsCustomClusterConfiguration get_RdsCustomClusterConfiguration();
    public void set_RdsCustomClusterConfiguration(RdsCustomClusterConfiguration value);
    internal bool IsSetRdsCustomClusterConfiguration();
    public ScalingConfiguration get_ScalingConfiguration();
    public void set_ScalingConfiguration(ScalingConfiguration value);
    internal bool IsSetScalingConfiguration();
    public ServerlessV2ScalingConfiguration get_ServerlessV2ScalingConfiguration();
    public void set_ServerlessV2ScalingConfiguration(ServerlessV2ScalingConfiguration value);
    internal bool IsSetServerlessV2ScalingConfiguration();
    public string get_SnapshotIdentifier();
    public void set_SnapshotIdentifier(string value);
    internal bool IsSetSnapshotIdentifier();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.RestoreDBClusterFromSnapshotResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.RestoreDBClusterToPointInTimeRequest : AmazonRDSRequest {
    private Nullable`1<long> _backtrackWindow;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _dbClusterIdentifier;
    private string _dbClusterInstanceClass;
    private string _dbClusterParameterGroupName;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainIAMRoleName;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private string _engineLifecycleSupport;
    private string _engineMode;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _networkType;
    private string _optionGroupName;
    private Nullable`1<int> _port;
    private Nullable`1<bool> _publiclyAccessible;
    private RdsCustomClusterConfiguration _rdsCustomClusterConfiguration;
    private Nullable`1<DateTime> _restoreToTimeUtc;
    private string _restoreType;
    private ScalingConfiguration _scalingConfiguration;
    private ServerlessV2ScalingConfiguration _serverlessV2ScalingConfiguration;
    private string _sourceDBClusterIdentifier;
    private string _sourceDbClusterResourceId;
    private string _storageType;
    private List`1<Tag> _tags;
    private Nullable`1<bool> _useLatestRestorableTime;
    private List`1<string> _vpcSecurityGroupIds;
    private Nullable`1<DateTime> _restoreToTime;
    public Nullable`1<long> BacktrackWindow { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string DBClusterInstanceClass { get; public set; }
    public string DBClusterParameterGroupName { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineMode { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public RdsCustomClusterConfiguration RdsCustomClusterConfiguration { get; public set; }
    public Nullable`1<DateTime> RestoreToTimeUtc { get; public set; }
    public string RestoreType { get; public set; }
    public ScalingConfiguration ScalingConfiguration { get; public set; }
    public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; public set; }
    public string SourceDBClusterIdentifier { get; public set; }
    public string SourceDbClusterResourceId { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> UseLatestRestorableTime { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use RestoreToTimeUtc instead. Setting either RestoreToTime or RestoreToTimeUtc results in both RestoreToTime and RestoreToTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. RestoreToTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> RestoreToTime { get; public set; }
    public Nullable`1<long> get_BacktrackWindow();
    public void set_BacktrackWindow(Nullable`1<long> value);
    internal bool IsSetBacktrackWindow();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
    public string get_DBClusterInstanceClass();
    public void set_DBClusterInstanceClass(string value);
    internal bool IsSetDBClusterInstanceClass();
    public string get_DBClusterParameterGroupName();
    public void set_DBClusterParameterGroupName(string value);
    internal bool IsSetDBClusterParameterGroupName();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineMode();
    public void set_EngineMode(string value);
    internal bool IsSetEngineMode();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public RdsCustomClusterConfiguration get_RdsCustomClusterConfiguration();
    public void set_RdsCustomClusterConfiguration(RdsCustomClusterConfiguration value);
    internal bool IsSetRdsCustomClusterConfiguration();
    public Nullable`1<DateTime> get_RestoreToTimeUtc();
    public void set_RestoreToTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetRestoreToTimeUtc();
    public string get_RestoreType();
    public void set_RestoreType(string value);
    internal bool IsSetRestoreType();
    public ScalingConfiguration get_ScalingConfiguration();
    public void set_ScalingConfiguration(ScalingConfiguration value);
    internal bool IsSetScalingConfiguration();
    public ServerlessV2ScalingConfiguration get_ServerlessV2ScalingConfiguration();
    public void set_ServerlessV2ScalingConfiguration(ServerlessV2ScalingConfiguration value);
    internal bool IsSetServerlessV2ScalingConfiguration();
    public string get_SourceDBClusterIdentifier();
    public void set_SourceDBClusterIdentifier(string value);
    internal bool IsSetSourceDBClusterIdentifier();
    public string get_SourceDbClusterResourceId();
    public void set_SourceDbClusterResourceId(string value);
    internal bool IsSetSourceDbClusterResourceId();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<bool> get_UseLatestRestorableTime();
    public void set_UseLatestRestorableTime(Nullable`1<bool> value);
    internal bool IsSetUseLatestRestorableTime();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
    public Nullable`1<DateTime> get_RestoreToTime();
    public void set_RestoreToTime(Nullable`1<DateTime> value);
}
public class Amazon.RDS.Model.RestoreDBClusterToPointInTimeResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.RestoreDBInstanceFromDBSnapshotRequest : AmazonRDSRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private string _backupTarget;
    private string _caCertificateIdentifier;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _customIamInstanceProfile;
    private string _dbClusterSnapshotIdentifier;
    private string _dbInstanceClass;
    private string _dbInstanceIdentifier;
    private string _dbName;
    private string _dbParameterGroupName;
    private string _dbSnapshotIdentifier;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainAuthSecretArn;
    private List`1<string> _domainDnsIps;
    private string _domainFqdn;
    private string _domainIAMRoleName;
    private string _domainOu;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableCustomerOwnedIp;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private string _engine;
    private string _engineLifecycleSupport;
    private Nullable`1<int> _iops;
    private string _licenseModel;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private string _optionGroupName;
    private Nullable`1<int> _port;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<bool> _publiclyAccessible;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tags;
    private string _tdeCredentialArn;
    private string _tdeCredentialPassword;
    private Nullable`1<bool> _useDefaultProcessorFeatures;
    private List`1<string> _vpcSecurityGroupIds;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string BackupTarget { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string CustomIamInstanceProfile { get; public set; }
    public string DBClusterSnapshotIdentifier { get; public set; }
    public string DBInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string DBName { get; public set; }
    public string DBParameterGroupName { get; public set; }
    public string DBSnapshotIdentifier { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainAuthSecretArn { get; public set; }
    public List`1<string> DomainDnsIps { get; public set; }
    public string DomainFqdn { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public string DomainOu { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableCustomerOwnedIp { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string LicenseModel { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string TdeCredentialArn { get; public set; }
    public string TdeCredentialPassword { get; public set; }
    public Nullable`1<bool> UseDefaultProcessorFeatures { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public RestoreDBInstanceFromDBSnapshotRequest(string dbInstanceIdentifier, string dbSnapshotIdentifier);
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_BackupTarget();
    public void set_BackupTarget(string value);
    internal bool IsSetBackupTarget();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_CustomIamInstanceProfile();
    public void set_CustomIamInstanceProfile(string value);
    internal bool IsSetCustomIamInstanceProfile();
    public string get_DBClusterSnapshotIdentifier();
    public void set_DBClusterSnapshotIdentifier(string value);
    internal bool IsSetDBClusterSnapshotIdentifier();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBName();
    public void set_DBName(string value);
    internal bool IsSetDBName();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainAuthSecretArn();
    public void set_DomainAuthSecretArn(string value);
    internal bool IsSetDomainAuthSecretArn();
    public List`1<string> get_DomainDnsIps();
    public void set_DomainDnsIps(List`1<string> value);
    internal bool IsSetDomainDnsIps();
    public string get_DomainFqdn();
    public void set_DomainFqdn(string value);
    internal bool IsSetDomainFqdn();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public string get_DomainOu();
    public void set_DomainOu(string value);
    internal bool IsSetDomainOu();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableCustomerOwnedIp();
    public void set_EnableCustomerOwnedIp(Nullable`1<bool> value);
    internal bool IsSetEnableCustomerOwnedIp();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TdeCredentialArn();
    public void set_TdeCredentialArn(string value);
    internal bool IsSetTdeCredentialArn();
    public string get_TdeCredentialPassword();
    public void set_TdeCredentialPassword(string value);
    internal bool IsSetTdeCredentialPassword();
    public Nullable`1<bool> get_UseDefaultProcessorFeatures();
    public void set_UseDefaultProcessorFeatures(Nullable`1<bool> value);
    internal bool IsSetUseDefaultProcessorFeatures();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.RestoreDBInstanceFromDBSnapshotResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.RestoreDBInstanceFromS3Request : AmazonRDSRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _caCertificateIdentifier;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _dbInstanceClass;
    private string _dbInstanceIdentifier;
    private string _dbName;
    private string _dbParameterGroupName;
    private List`1<string> _dbSecurityGroups;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _deletionProtection;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private Nullable`1<bool> _enablePerformanceInsights;
    private string _engine;
    private string _engineLifecycleSupport;
    private string _engineVersion;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private string _licenseModel;
    private Nullable`1<bool> _manageMasterUserPassword;
    private string _masterUsername;
    private string _masterUserPassword;
    private string _masterUserSecretKmsKeyId;
    private Nullable`1<int> _maxAllocatedStorage;
    private Nullable`1<int> _monitoringInterval;
    private string _monitoringRoleArn;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private string _optionGroupName;
    private string _performanceInsightsKMSKeyId;
    private Nullable`1<int> _performanceInsightsRetentionPeriod;
    private Nullable`1<int> _port;
    private string _preferredBackupWindow;
    private string _preferredMaintenanceWindow;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<bool> _publiclyAccessible;
    private string _s3BucketName;
    private string _s3IngestionRoleArn;
    private string _s3Prefix;
    private string _sourceEngine;
    private string _sourceEngineVersion;
    private Nullable`1<bool> _storageEncrypted;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tags;
    private Nullable`1<bool> _useDefaultProcessorFeatures;
    private List`1<string> _vpcSecurityGroupIds;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string DBName { get; public set; }
    public string DBParameterGroupName { get; public set; }
    public List`1<string> DBSecurityGroups { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public Nullable`1<bool> EnablePerformanceInsights { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public string LicenseModel { get; public set; }
    public Nullable`1<bool> ManageMasterUserPassword { get; public set; }
    public string MasterUsername { get; public set; }
    public string MasterUserPassword { get; public set; }
    public string MasterUserSecretKmsKeyId { get; public set; }
    public Nullable`1<int> MaxAllocatedStorage { get; public set; }
    public Nullable`1<int> MonitoringInterval { get; public set; }
    public string MonitoringRoleArn { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public string PerformanceInsightsKMSKeyId { get; public set; }
    public Nullable`1<int> PerformanceInsightsRetentionPeriod { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string PreferredBackupWindow { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string S3IngestionRoleArn { get; public set; }
    public string S3Prefix { get; public set; }
    [AWSPropertyAttribute]
public string SourceEngine { get; public set; }
    [AWSPropertyAttribute]
public string SourceEngineVersion { get; public set; }
    public Nullable`1<bool> StorageEncrypted { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> UseDefaultProcessorFeatures { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBName();
    public void set_DBName(string value);
    internal bool IsSetDBName();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public List`1<string> get_DBSecurityGroups();
    public void set_DBSecurityGroups(List`1<string> value);
    internal bool IsSetDBSecurityGroups();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public Nullable`1<bool> get_EnablePerformanceInsights();
    public void set_EnablePerformanceInsights(Nullable`1<bool> value);
    internal bool IsSetEnablePerformanceInsights();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public Nullable`1<bool> get_ManageMasterUserPassword();
    public void set_ManageMasterUserPassword(Nullable`1<bool> value);
    internal bool IsSetManageMasterUserPassword();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_MasterUserSecretKmsKeyId();
    public void set_MasterUserSecretKmsKeyId(string value);
    internal bool IsSetMasterUserSecretKmsKeyId();
    public Nullable`1<int> get_MaxAllocatedStorage();
    public void set_MaxAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMaxAllocatedStorage();
    public Nullable`1<int> get_MonitoringInterval();
    public void set_MonitoringInterval(Nullable`1<int> value);
    internal bool IsSetMonitoringInterval();
    public string get_MonitoringRoleArn();
    public void set_MonitoringRoleArn(string value);
    internal bool IsSetMonitoringRoleArn();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public string get_PerformanceInsightsKMSKeyId();
    public void set_PerformanceInsightsKMSKeyId(string value);
    internal bool IsSetPerformanceInsightsKMSKeyId();
    public Nullable`1<int> get_PerformanceInsightsRetentionPeriod();
    public void set_PerformanceInsightsRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetPerformanceInsightsRetentionPeriod();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_PreferredBackupWindow();
    public void set_PreferredBackupWindow(string value);
    internal bool IsSetPreferredBackupWindow();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3IngestionRoleArn();
    public void set_S3IngestionRoleArn(string value);
    internal bool IsSetS3IngestionRoleArn();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public string get_SourceEngine();
    public void set_SourceEngine(string value);
    internal bool IsSetSourceEngine();
    public string get_SourceEngineVersion();
    public void set_SourceEngineVersion(string value);
    internal bool IsSetSourceEngineVersion();
    public Nullable`1<bool> get_StorageEncrypted();
    public void set_StorageEncrypted(Nullable`1<bool> value);
    internal bool IsSetStorageEncrypted();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<bool> get_UseDefaultProcessorFeatures();
    public void set_UseDefaultProcessorFeatures(Nullable`1<bool> value);
    internal bool IsSetUseDefaultProcessorFeatures();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.RDS.Model.RestoreDBInstanceFromS3Response : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.RestoreDBInstanceToPointInTimeRequest : AmazonRDSRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private string _backupTarget;
    private string _caCertificateIdentifier;
    private Nullable`1<bool> _copyTagsToSnapshot;
    private string _customIamInstanceProfile;
    private string _dbInstanceClass;
    private string _dbName;
    private string _dbParameterGroupName;
    private string _dbSubnetGroupName;
    private Nullable`1<bool> _dedicatedLogVolume;
    private Nullable`1<bool> _deletionProtection;
    private string _domain;
    private string _domainAuthSecretArn;
    private List`1<string> _domainDnsIps;
    private string _domainFqdn;
    private string _domainIAMRoleName;
    private string _domainOu;
    private List`1<string> _enableCloudwatchLogsExports;
    private Nullable`1<bool> _enableCustomerOwnedIp;
    private Nullable`1<bool> _enableIAMDatabaseAuthentication;
    private string _engine;
    private string _engineLifecycleSupport;
    private Nullable`1<int> _iops;
    private string _licenseModel;
    private Nullable`1<int> _maxAllocatedStorage;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private string _optionGroupName;
    private Nullable`1<int> _port;
    private List`1<ProcessorFeature> _processorFeatures;
    private Nullable`1<bool> _publiclyAccessible;
    private Nullable`1<DateTime> _restoreTimeUtc;
    private string _sourceDBInstanceAutomatedBackupsArn;
    private string _sourceDBInstanceIdentifier;
    private string _sourceDbiResourceId;
    private Nullable`1<int> _storageThroughput;
    private string _storageType;
    private List`1<Tag> _tags;
    private string _targetDBInstanceIdentifier;
    private string _tdeCredentialArn;
    private string _tdeCredentialPassword;
    private Nullable`1<bool> _useDefaultProcessorFeatures;
    private Nullable`1<bool> _useLatestRestorableTime;
    private List`1<string> _vpcSecurityGroupIds;
    private Nullable`1<DateTime> _restoreTime;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string BackupTarget { get; public set; }
    public string CACertificateIdentifier { get; public set; }
    public Nullable`1<bool> CopyTagsToSnapshot { get; public set; }
    public string CustomIamInstanceProfile { get; public set; }
    public string DBInstanceClass { get; public set; }
    public string DBName { get; public set; }
    public string DBParameterGroupName { get; public set; }
    public string DBSubnetGroupName { get; public set; }
    public Nullable`1<bool> DedicatedLogVolume { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string Domain { get; public set; }
    public string DomainAuthSecretArn { get; public set; }
    public List`1<string> DomainDnsIps { get; public set; }
    public string DomainFqdn { get; public set; }
    public string DomainIAMRoleName { get; public set; }
    public string DomainOu { get; public set; }
    public List`1<string> EnableCloudwatchLogsExports { get; public set; }
    public Nullable`1<bool> EnableCustomerOwnedIp { get; public set; }
    public Nullable`1<bool> EnableIAMDatabaseAuthentication { get; public set; }
    public string Engine { get; public set; }
    public string EngineLifecycleSupport { get; public set; }
    public Nullable`1<int> Iops { get; public set; }
    public string LicenseModel { get; public set; }
    public Nullable`1<int> MaxAllocatedStorage { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public string OptionGroupName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public List`1<ProcessorFeature> ProcessorFeatures { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public Nullable`1<DateTime> RestoreTimeUtc { get; public set; }
    public string SourceDBInstanceAutomatedBackupsArn { get; public set; }
    public string SourceDBInstanceIdentifier { get; public set; }
    public string SourceDbiResourceId { get; public set; }
    public Nullable`1<int> StorageThroughput { get; public set; }
    public string StorageType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetDBInstanceIdentifier { get; public set; }
    public string TdeCredentialArn { get; public set; }
    public string TdeCredentialPassword { get; public set; }
    public Nullable`1<bool> UseDefaultProcessorFeatures { get; public set; }
    public Nullable`1<bool> UseLatestRestorableTime { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use RestoreTimeUtc instead. Setting either RestoreTime or RestoreTimeUtc results in both RestoreTime and RestoreTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. RestoreTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> RestoreTime { get; public set; }
    public RestoreDBInstanceToPointInTimeRequest(string sourceDBInstanceIdentifier, string targetDBInstanceIdentifier);
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_BackupTarget();
    public void set_BackupTarget(string value);
    internal bool IsSetBackupTarget();
    public string get_CACertificateIdentifier();
    public void set_CACertificateIdentifier(string value);
    internal bool IsSetCACertificateIdentifier();
    public Nullable`1<bool> get_CopyTagsToSnapshot();
    public void set_CopyTagsToSnapshot(Nullable`1<bool> value);
    internal bool IsSetCopyTagsToSnapshot();
    public string get_CustomIamInstanceProfile();
    public void set_CustomIamInstanceProfile(string value);
    internal bool IsSetCustomIamInstanceProfile();
    public string get_DBInstanceClass();
    public void set_DBInstanceClass(string value);
    internal bool IsSetDBInstanceClass();
    public string get_DBName();
    public void set_DBName(string value);
    internal bool IsSetDBName();
    public string get_DBParameterGroupName();
    public void set_DBParameterGroupName(string value);
    internal bool IsSetDBParameterGroupName();
    public string get_DBSubnetGroupName();
    public void set_DBSubnetGroupName(string value);
    internal bool IsSetDBSubnetGroupName();
    public Nullable`1<bool> get_DedicatedLogVolume();
    public void set_DedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetDedicatedLogVolume();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_DomainAuthSecretArn();
    public void set_DomainAuthSecretArn(string value);
    internal bool IsSetDomainAuthSecretArn();
    public List`1<string> get_DomainDnsIps();
    public void set_DomainDnsIps(List`1<string> value);
    internal bool IsSetDomainDnsIps();
    public string get_DomainFqdn();
    public void set_DomainFqdn(string value);
    internal bool IsSetDomainFqdn();
    public string get_DomainIAMRoleName();
    public void set_DomainIAMRoleName(string value);
    internal bool IsSetDomainIAMRoleName();
    public string get_DomainOu();
    public void set_DomainOu(string value);
    internal bool IsSetDomainOu();
    public List`1<string> get_EnableCloudwatchLogsExports();
    public void set_EnableCloudwatchLogsExports(List`1<string> value);
    internal bool IsSetEnableCloudwatchLogsExports();
    public Nullable`1<bool> get_EnableCustomerOwnedIp();
    public void set_EnableCustomerOwnedIp(Nullable`1<bool> value);
    internal bool IsSetEnableCustomerOwnedIp();
    public Nullable`1<bool> get_EnableIAMDatabaseAuthentication();
    public void set_EnableIAMDatabaseAuthentication(Nullable`1<bool> value);
    internal bool IsSetEnableIAMDatabaseAuthentication();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineLifecycleSupport();
    public void set_EngineLifecycleSupport(string value);
    internal bool IsSetEngineLifecycleSupport();
    public Nullable`1<int> get_Iops();
    public void set_Iops(Nullable`1<int> value);
    internal bool IsSetIops();
    public string get_LicenseModel();
    public void set_LicenseModel(string value);
    internal bool IsSetLicenseModel();
    public Nullable`1<int> get_MaxAllocatedStorage();
    public void set_MaxAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMaxAllocatedStorage();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_OptionGroupName();
    public void set_OptionGroupName(string value);
    internal bool IsSetOptionGroupName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public List`1<ProcessorFeature> get_ProcessorFeatures();
    public void set_ProcessorFeatures(List`1<ProcessorFeature> value);
    internal bool IsSetProcessorFeatures();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public Nullable`1<DateTime> get_RestoreTimeUtc();
    public void set_RestoreTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetRestoreTimeUtc();
    public string get_SourceDBInstanceAutomatedBackupsArn();
    public void set_SourceDBInstanceAutomatedBackupsArn(string value);
    internal bool IsSetSourceDBInstanceAutomatedBackupsArn();
    public string get_SourceDBInstanceIdentifier();
    public void set_SourceDBInstanceIdentifier(string value);
    internal bool IsSetSourceDBInstanceIdentifier();
    public string get_SourceDbiResourceId();
    public void set_SourceDbiResourceId(string value);
    internal bool IsSetSourceDbiResourceId();
    public Nullable`1<int> get_StorageThroughput();
    public void set_StorageThroughput(Nullable`1<int> value);
    internal bool IsSetStorageThroughput();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetDBInstanceIdentifier();
    public void set_TargetDBInstanceIdentifier(string value);
    internal bool IsSetTargetDBInstanceIdentifier();
    public string get_TdeCredentialArn();
    public void set_TdeCredentialArn(string value);
    internal bool IsSetTdeCredentialArn();
    public string get_TdeCredentialPassword();
    public void set_TdeCredentialPassword(string value);
    internal bool IsSetTdeCredentialPassword();
    public Nullable`1<bool> get_UseDefaultProcessorFeatures();
    public void set_UseDefaultProcessorFeatures(Nullable`1<bool> value);
    internal bool IsSetUseDefaultProcessorFeatures();
    public Nullable`1<bool> get_UseLatestRestorableTime();
    public void set_UseLatestRestorableTime(Nullable`1<bool> value);
    internal bool IsSetUseLatestRestorableTime();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
    public Nullable`1<DateTime> get_RestoreTime();
    public void set_RestoreTime(Nullable`1<DateTime> value);
}
public class Amazon.RDS.Model.RestoreDBInstanceToPointInTimeResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.RestoreWindow : object {
    private Nullable`1<DateTime> _earliestTime;
    private Nullable`1<DateTime> _latestTime;
    public Nullable`1<DateTime> EarliestTime { get; public set; }
    public Nullable`1<DateTime> LatestTime { get; public set; }
    public Nullable`1<DateTime> get_EarliestTime();
    public void set_EarliestTime(Nullable`1<DateTime> value);
    internal bool IsSetEarliestTime();
    public Nullable`1<DateTime> get_LatestTime();
    public void set_LatestTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestTime();
}
public class Amazon.RDS.Model.RevokeDBSecurityGroupIngressRequest : AmazonRDSRequest {
    private string _cidrip;
    private string _dbSecurityGroupName;
    private string _ec2SecurityGroupId;
    private string _ec2SecurityGroupName;
    private string _ec2SecurityGroupOwnerId;
    public string CIDRIP { get; public set; }
    [AWSPropertyAttribute]
public string DBSecurityGroupName { get; public set; }
    public string EC2SecurityGroupId { get; public set; }
    public string EC2SecurityGroupName { get; public set; }
    public string EC2SecurityGroupOwnerId { get; public set; }
    public RevokeDBSecurityGroupIngressRequest(string dbSecurityGroupName);
    public string get_CIDRIP();
    public void set_CIDRIP(string value);
    internal bool IsSetCIDRIP();
    public string get_DBSecurityGroupName();
    public void set_DBSecurityGroupName(string value);
    internal bool IsSetDBSecurityGroupName();
    public string get_EC2SecurityGroupId();
    public void set_EC2SecurityGroupId(string value);
    internal bool IsSetEC2SecurityGroupId();
    public string get_EC2SecurityGroupName();
    public void set_EC2SecurityGroupName(string value);
    internal bool IsSetEC2SecurityGroupName();
    public string get_EC2SecurityGroupOwnerId();
    public void set_EC2SecurityGroupOwnerId(string value);
    internal bool IsSetEC2SecurityGroupOwnerId();
}
public class Amazon.RDS.Model.RevokeDBSecurityGroupIngressResponse : AmazonWebServiceResponse {
    private DBSecurityGroup _dbSecurityGroup;
    public DBSecurityGroup DBSecurityGroup { get; public set; }
    public DBSecurityGroup get_DBSecurityGroup();
    public void set_DBSecurityGroup(DBSecurityGroup value);
    internal bool IsSetDBSecurityGroup();
}
public class Amazon.RDS.Model.ScalarReferenceDetails : object {
    private Nullable`1<double> _value;
    public Nullable`1<double> Value { get; public set; }
    public Nullable`1<double> get_Value();
    public void set_Value(Nullable`1<double> value);
    internal bool IsSetValue();
}
public class Amazon.RDS.Model.ScalingConfiguration : object {
    private Nullable`1<bool> _autoPause;
    private Nullable`1<int> _maxCapacity;
    private Nullable`1<int> _minCapacity;
    private Nullable`1<int> _secondsBeforeTimeout;
    private Nullable`1<int> _secondsUntilAutoPause;
    private string _timeoutAction;
    public Nullable`1<bool> AutoPause { get; public set; }
    public Nullable`1<int> MaxCapacity { get; public set; }
    public Nullable`1<int> MinCapacity { get; public set; }
    public Nullable`1<int> SecondsBeforeTimeout { get; public set; }
    public Nullable`1<int> SecondsUntilAutoPause { get; public set; }
    public string TimeoutAction { get; public set; }
    public Nullable`1<bool> get_AutoPause();
    public void set_AutoPause(Nullable`1<bool> value);
    internal bool IsSetAutoPause();
    public Nullable`1<int> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<int> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MinCapacity();
    public void set_MinCapacity(Nullable`1<int> value);
    internal bool IsSetMinCapacity();
    public Nullable`1<int> get_SecondsBeforeTimeout();
    public void set_SecondsBeforeTimeout(Nullable`1<int> value);
    internal bool IsSetSecondsBeforeTimeout();
    public Nullable`1<int> get_SecondsUntilAutoPause();
    public void set_SecondsUntilAutoPause(Nullable`1<int> value);
    internal bool IsSetSecondsUntilAutoPause();
    public string get_TimeoutAction();
    public void set_TimeoutAction(string value);
    internal bool IsSetTimeoutAction();
}
public class Amazon.RDS.Model.ScalingConfigurationInfo : object {
    private Nullable`1<bool> _autoPause;
    private Nullable`1<int> _maxCapacity;
    private Nullable`1<int> _minCapacity;
    private Nullable`1<int> _secondsBeforeTimeout;
    private Nullable`1<int> _secondsUntilAutoPause;
    private string _timeoutAction;
    public Nullable`1<bool> AutoPause { get; public set; }
    public Nullable`1<int> MaxCapacity { get; public set; }
    public Nullable`1<int> MinCapacity { get; public set; }
    public Nullable`1<int> SecondsBeforeTimeout { get; public set; }
    public Nullable`1<int> SecondsUntilAutoPause { get; public set; }
    public string TimeoutAction { get; public set; }
    public Nullable`1<bool> get_AutoPause();
    public void set_AutoPause(Nullable`1<bool> value);
    internal bool IsSetAutoPause();
    public Nullable`1<int> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<int> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<int> get_MinCapacity();
    public void set_MinCapacity(Nullable`1<int> value);
    internal bool IsSetMinCapacity();
    public Nullable`1<int> get_SecondsBeforeTimeout();
    public void set_SecondsBeforeTimeout(Nullable`1<int> value);
    internal bool IsSetSecondsBeforeTimeout();
    public Nullable`1<int> get_SecondsUntilAutoPause();
    public void set_SecondsUntilAutoPause(Nullable`1<int> value);
    internal bool IsSetSecondsUntilAutoPause();
    public string get_TimeoutAction();
    public void set_TimeoutAction(string value);
    internal bool IsSetTimeoutAction();
}
public class Amazon.RDS.Model.ServerlessV2ScalingConfiguration : object {
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<double> _minCapacity;
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<double> MinCapacity { get; public set; }
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<double> get_MinCapacity();
    public void set_MinCapacity(Nullable`1<double> value);
    internal bool IsSetMinCapacity();
}
public class Amazon.RDS.Model.ServerlessV2ScalingConfigurationInfo : object {
    private Nullable`1<double> _maxCapacity;
    private Nullable`1<double> _minCapacity;
    public Nullable`1<double> MaxCapacity { get; public set; }
    public Nullable`1<double> MinCapacity { get; public set; }
    public Nullable`1<double> get_MaxCapacity();
    public void set_MaxCapacity(Nullable`1<double> value);
    internal bool IsSetMaxCapacity();
    public Nullable`1<double> get_MinCapacity();
    public void set_MinCapacity(Nullable`1<double> value);
    internal bool IsSetMinCapacity();
}
public class Amazon.RDS.Model.SharedSnapshotQuotaExceededException : AmazonRDSException {
    public SharedSnapshotQuotaExceededException(string message);
    public SharedSnapshotQuotaExceededException(string message, Exception innerException);
    public SharedSnapshotQuotaExceededException(Exception innerException);
    public SharedSnapshotQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SharedSnapshotQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SnapshotQuotaExceededException : AmazonRDSException {
    public SnapshotQuotaExceededException(string message);
    public SnapshotQuotaExceededException(string message, Exception innerException);
    public SnapshotQuotaExceededException(Exception innerException);
    public SnapshotQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SnapshotQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SNSInvalidTopicException : AmazonRDSException {
    public SNSInvalidTopicException(string message);
    public SNSInvalidTopicException(string message, Exception innerException);
    public SNSInvalidTopicException(Exception innerException);
    public SNSInvalidTopicException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SNSInvalidTopicException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SNSNoAuthorizationException : AmazonRDSException {
    public SNSNoAuthorizationException(string message);
    public SNSNoAuthorizationException(string message, Exception innerException);
    public SNSNoAuthorizationException(Exception innerException);
    public SNSNoAuthorizationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SNSNoAuthorizationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SNSTopicArnNotFoundException : AmazonRDSException {
    public SNSTopicArnNotFoundException(string message);
    public SNSTopicArnNotFoundException(string message, Exception innerException);
    public SNSTopicArnNotFoundException(Exception innerException);
    public SNSTopicArnNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SNSTopicArnNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SourceClusterNotSupportedException : AmazonRDSException {
    public SourceClusterNotSupportedException(string message);
    public SourceClusterNotSupportedException(string message, Exception innerException);
    public SourceClusterNotSupportedException(Exception innerException);
    public SourceClusterNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SourceClusterNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SourceDatabaseNotSupportedException : AmazonRDSException {
    public SourceDatabaseNotSupportedException(string message);
    public SourceDatabaseNotSupportedException(string message, Exception innerException);
    public SourceDatabaseNotSupportedException(Exception innerException);
    public SourceDatabaseNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SourceDatabaseNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SourceNotFoundException : AmazonRDSException {
    public SourceNotFoundException(string message);
    public SourceNotFoundException(string message, Exception innerException);
    public SourceNotFoundException(Exception innerException);
    public SourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SourceRegion : object {
    private string _endpoint;
    private string _regionName;
    private string _status;
    private Nullable`1<bool> _supportsDBInstanceAutomatedBackupsReplication;
    public string Endpoint { get; public set; }
    public string RegionName { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<bool> SupportsDBInstanceAutomatedBackupsReplication { get; public set; }
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_SupportsDBInstanceAutomatedBackupsReplication();
    public void set_SupportsDBInstanceAutomatedBackupsReplication(Nullable`1<bool> value);
    internal bool IsSetSupportsDBInstanceAutomatedBackupsReplication();
}
public class Amazon.RDS.Model.StartActivityStreamRequest : AmazonRDSRequest {
    private Nullable`1<bool> _applyImmediately;
    private Nullable`1<bool> _engineNativeAuditFieldsIncluded;
    private string _kmsKeyId;
    private ActivityStreamMode _mode;
    private string _resourceArn;
    public Nullable`1<bool> ApplyImmediately { get; public set; }
    public Nullable`1<bool> EngineNativeAuditFieldsIncluded { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public ActivityStreamMode Mode { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Nullable`1<bool> get_ApplyImmediately();
    public void set_ApplyImmediately(Nullable`1<bool> value);
    internal bool IsSetApplyImmediately();
    public Nullable`1<bool> get_EngineNativeAuditFieldsIncluded();
    public void set_EngineNativeAuditFieldsIncluded(Nullable`1<bool> value);
    internal bool IsSetEngineNativeAuditFieldsIncluded();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public ActivityStreamMode get_Mode();
    public void set_Mode(ActivityStreamMode value);
    internal bool IsSetMode();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.RDS.Model.StartActivityStreamResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _applyImmediately;
    private Nullable`1<bool> _engineNativeAuditFieldsIncluded;
    private string _kinesisStreamName;
    private string _kmsKeyId;
    private ActivityStreamMode _mode;
    private ActivityStreamStatus _status;
    public Nullable`1<bool> ApplyImmediately { get; public set; }
    public Nullable`1<bool> EngineNativeAuditFieldsIncluded { get; public set; }
    public string KinesisStreamName { get; public set; }
    public string KmsKeyId { get; public set; }
    public ActivityStreamMode Mode { get; public set; }
    public ActivityStreamStatus Status { get; public set; }
    public Nullable`1<bool> get_ApplyImmediately();
    public void set_ApplyImmediately(Nullable`1<bool> value);
    internal bool IsSetApplyImmediately();
    public Nullable`1<bool> get_EngineNativeAuditFieldsIncluded();
    public void set_EngineNativeAuditFieldsIncluded(Nullable`1<bool> value);
    internal bool IsSetEngineNativeAuditFieldsIncluded();
    public string get_KinesisStreamName();
    public void set_KinesisStreamName(string value);
    internal bool IsSetKinesisStreamName();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public ActivityStreamMode get_Mode();
    public void set_Mode(ActivityStreamMode value);
    internal bool IsSetMode();
    public ActivityStreamStatus get_Status();
    public void set_Status(ActivityStreamStatus value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.StartDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
}
public class Amazon.RDS.Model.StartDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.StartDBInstanceAutomatedBackupsReplicationRequest : AmazonRDSRequest {
    private string _sourceRegion;
    private Nullable`1<int> _backupRetentionPeriod;
    private string _kmsKeyId;
    private string _preSignedUrl;
    private string _sourceDBInstanceArn;
    public string SourceRegion { get; public set; }
    public Nullable`1<int> BackupRetentionPeriod { get; public set; }
    public string KmsKeyId { get; public set; }
    public string PreSignedUrl { get; public set; }
    [AWSPropertyAttribute]
public string SourceDBInstanceArn { get; public set; }
    public sealed virtual string get_SourceRegion();
    public sealed virtual void set_SourceRegion(string value);
    public Nullable`1<int> get_BackupRetentionPeriod();
    public void set_BackupRetentionPeriod(Nullable`1<int> value);
    internal bool IsSetBackupRetentionPeriod();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public sealed virtual string get_PreSignedUrl();
    public sealed virtual void set_PreSignedUrl(string value);
    internal bool IsSetPreSignedUrl();
    public string get_SourceDBInstanceArn();
    public void set_SourceDBInstanceArn(string value);
    internal bool IsSetSourceDBInstanceArn();
}
public class Amazon.RDS.Model.StartDBInstanceAutomatedBackupsReplicationResponse : AmazonWebServiceResponse {
    private DBInstanceAutomatedBackup _dbInstanceAutomatedBackup;
    public DBInstanceAutomatedBackup DBInstanceAutomatedBackup { get; public set; }
    public DBInstanceAutomatedBackup get_DBInstanceAutomatedBackup();
    public void set_DBInstanceAutomatedBackup(DBInstanceAutomatedBackup value);
    internal bool IsSetDBInstanceAutomatedBackup();
}
public class Amazon.RDS.Model.StartDBInstanceRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
}
public class Amazon.RDS.Model.StartDBInstanceResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.StartExportTaskRequest : AmazonRDSRequest {
    private List`1<string> _exportOnly;
    private string _exportTaskIdentifier;
    private string _iamRoleArn;
    private string _kmsKeyId;
    private string _s3BucketName;
    private string _s3Prefix;
    private string _sourceArn;
    public List`1<string> ExportOnly { get; public set; }
    [AWSPropertyAttribute]
public string ExportTaskIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string IamRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketName { get; public set; }
    public string S3Prefix { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public List`1<string> get_ExportOnly();
    public void set_ExportOnly(List`1<string> value);
    internal bool IsSetExportOnly();
    public string get_ExportTaskIdentifier();
    public void set_ExportTaskIdentifier(string value);
    internal bool IsSetExportTaskIdentifier();
    public string get_IamRoleArn();
    public void set_IamRoleArn(string value);
    internal bool IsSetIamRoleArn();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
}
public class Amazon.RDS.Model.StartExportTaskResponse : AmazonWebServiceResponse {
    private List`1<string> _exportOnly;
    private string _exportTaskIdentifier;
    private string _failureCause;
    private string _iamRoleArn;
    private string _kmsKeyId;
    private Nullable`1<int> _percentProgress;
    private string _s3Bucket;
    private string _s3Prefix;
    private Nullable`1<DateTime> _snapshotTime;
    private string _sourceArn;
    private ExportSourceType _sourceType;
    private string _status;
    private Nullable`1<DateTime> _taskEndTime;
    private Nullable`1<DateTime> _taskStartTime;
    private Nullable`1<int> _totalExtractedDataInGB;
    private string _warningMessage;
    public List`1<string> ExportOnly { get; public set; }
    public string ExportTaskIdentifier { get; public set; }
    public string FailureCause { get; public set; }
    public string IamRoleArn { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<int> PercentProgress { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Prefix { get; public set; }
    public Nullable`1<DateTime> SnapshotTime { get; public set; }
    public string SourceArn { get; public set; }
    public ExportSourceType SourceType { get; public set; }
    public string Status { get; public set; }
    public Nullable`1<DateTime> TaskEndTime { get; public set; }
    public Nullable`1<DateTime> TaskStartTime { get; public set; }
    public Nullable`1<int> TotalExtractedDataInGB { get; public set; }
    public string WarningMessage { get; public set; }
    public List`1<string> get_ExportOnly();
    public void set_ExportOnly(List`1<string> value);
    internal bool IsSetExportOnly();
    public string get_ExportTaskIdentifier();
    public void set_ExportTaskIdentifier(string value);
    internal bool IsSetExportTaskIdentifier();
    public string get_FailureCause();
    public void set_FailureCause(string value);
    internal bool IsSetFailureCause();
    public string get_IamRoleArn();
    public void set_IamRoleArn(string value);
    internal bool IsSetIamRoleArn();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<int> get_PercentProgress();
    public void set_PercentProgress(Nullable`1<int> value);
    internal bool IsSetPercentProgress();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public Nullable`1<DateTime> get_SnapshotTime();
    public void set_SnapshotTime(Nullable`1<DateTime> value);
    internal bool IsSetSnapshotTime();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public ExportSourceType get_SourceType();
    public void set_SourceType(ExportSourceType value);
    internal bool IsSetSourceType();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_TaskEndTime();
    public void set_TaskEndTime(Nullable`1<DateTime> value);
    internal bool IsSetTaskEndTime();
    public Nullable`1<DateTime> get_TaskStartTime();
    public void set_TaskStartTime(Nullable`1<DateTime> value);
    internal bool IsSetTaskStartTime();
    public Nullable`1<int> get_TotalExtractedDataInGB();
    public void set_TotalExtractedDataInGB(Nullable`1<int> value);
    internal bool IsSetTotalExtractedDataInGB();
    public string get_WarningMessage();
    public void set_WarningMessage(string value);
    internal bool IsSetWarningMessage();
}
public class Amazon.RDS.Model.StopActivityStreamRequest : AmazonRDSRequest {
    private Nullable`1<bool> _applyImmediately;
    private string _resourceArn;
    public Nullable`1<bool> ApplyImmediately { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Nullable`1<bool> get_ApplyImmediately();
    public void set_ApplyImmediately(Nullable`1<bool> value);
    internal bool IsSetApplyImmediately();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.RDS.Model.StopActivityStreamResponse : AmazonWebServiceResponse {
    private string _kinesisStreamName;
    private string _kmsKeyId;
    private ActivityStreamStatus _status;
    public string KinesisStreamName { get; public set; }
    public string KmsKeyId { get; public set; }
    public ActivityStreamStatus Status { get; public set; }
    public string get_KinesisStreamName();
    public void set_KinesisStreamName(string value);
    internal bool IsSetKinesisStreamName();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public ActivityStreamStatus get_Status();
    public void set_Status(ActivityStreamStatus value);
    internal bool IsSetStatus();
}
public class Amazon.RDS.Model.StopDBClusterRequest : AmazonRDSRequest {
    private string _dbClusterIdentifier;
    [AWSPropertyAttribute]
public string DBClusterIdentifier { get; public set; }
    public string get_DBClusterIdentifier();
    public void set_DBClusterIdentifier(string value);
    internal bool IsSetDBClusterIdentifier();
}
public class Amazon.RDS.Model.StopDBClusterResponse : AmazonWebServiceResponse {
    private DBCluster _dbCluster;
    public DBCluster DBCluster { get; public set; }
    public DBCluster get_DBCluster();
    public void set_DBCluster(DBCluster value);
    internal bool IsSetDBCluster();
}
public class Amazon.RDS.Model.StopDBInstanceAutomatedBackupsReplicationRequest : AmazonRDSRequest {
    private string _sourceDBInstanceArn;
    [AWSPropertyAttribute]
public string SourceDBInstanceArn { get; public set; }
    public string get_SourceDBInstanceArn();
    public void set_SourceDBInstanceArn(string value);
    internal bool IsSetSourceDBInstanceArn();
}
public class Amazon.RDS.Model.StopDBInstanceAutomatedBackupsReplicationResponse : AmazonWebServiceResponse {
    private DBInstanceAutomatedBackup _dbInstanceAutomatedBackup;
    public DBInstanceAutomatedBackup DBInstanceAutomatedBackup { get; public set; }
    public DBInstanceAutomatedBackup get_DBInstanceAutomatedBackup();
    public void set_DBInstanceAutomatedBackup(DBInstanceAutomatedBackup value);
    internal bool IsSetDBInstanceAutomatedBackup();
}
public class Amazon.RDS.Model.StopDBInstanceRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    private string _dbSnapshotIdentifier;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string DBSnapshotIdentifier { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DBSnapshotIdentifier();
    public void set_DBSnapshotIdentifier(string value);
    internal bool IsSetDBSnapshotIdentifier();
}
public class Amazon.RDS.Model.StopDBInstanceResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.StorageQuotaExceededException : AmazonRDSException {
    public StorageQuotaExceededException(string message);
    public StorageQuotaExceededException(string message, Exception innerException);
    public StorageQuotaExceededException(Exception innerException);
    public StorageQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StorageQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.StorageTypeNotAvailableException : AmazonRDSException {
    public StorageTypeNotAvailableException(string message);
    public StorageTypeNotAvailableException(string message, Exception innerException);
    public StorageTypeNotAvailableException(Exception innerException);
    public StorageTypeNotAvailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StorageTypeNotAvailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.StorageTypeNotSupportedException : AmazonRDSException {
    public StorageTypeNotSupportedException(string message);
    public StorageTypeNotSupportedException(string message, Exception innerException);
    public StorageTypeNotSupportedException(Exception innerException);
    public StorageTypeNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StorageTypeNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.Subnet : object {
    private AvailabilityZone _subnetAvailabilityZone;
    private string _subnetIdentifier;
    private Outpost _subnetOutpost;
    private string _subnetStatus;
    public AvailabilityZone SubnetAvailabilityZone { get; public set; }
    public string SubnetIdentifier { get; public set; }
    public Outpost SubnetOutpost { get; public set; }
    public string SubnetStatus { get; public set; }
    public AvailabilityZone get_SubnetAvailabilityZone();
    public void set_SubnetAvailabilityZone(AvailabilityZone value);
    internal bool IsSetSubnetAvailabilityZone();
    public string get_SubnetIdentifier();
    public void set_SubnetIdentifier(string value);
    internal bool IsSetSubnetIdentifier();
    public Outpost get_SubnetOutpost();
    public void set_SubnetOutpost(Outpost value);
    internal bool IsSetSubnetOutpost();
    public string get_SubnetStatus();
    public void set_SubnetStatus(string value);
    internal bool IsSetSubnetStatus();
}
public class Amazon.RDS.Model.SubnetAlreadyInUseException : AmazonRDSException {
    public SubnetAlreadyInUseException(string message);
    public SubnetAlreadyInUseException(string message, Exception innerException);
    public SubnetAlreadyInUseException(Exception innerException);
    public SubnetAlreadyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubnetAlreadyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SubscriptionAlreadyExistException : AmazonRDSException {
    public SubscriptionAlreadyExistException(string message);
    public SubscriptionAlreadyExistException(string message, Exception innerException);
    public SubscriptionAlreadyExistException(Exception innerException);
    public SubscriptionAlreadyExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubscriptionAlreadyExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SubscriptionCategoryNotFoundException : AmazonRDSException {
    public SubscriptionCategoryNotFoundException(string message);
    public SubscriptionCategoryNotFoundException(string message, Exception innerException);
    public SubscriptionCategoryNotFoundException(Exception innerException);
    public SubscriptionCategoryNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubscriptionCategoryNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SubscriptionNotFoundException : AmazonRDSException {
    public SubscriptionNotFoundException(string message);
    public SubscriptionNotFoundException(string message, Exception innerException);
    public SubscriptionNotFoundException(Exception innerException);
    public SubscriptionNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubscriptionNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.SwitchoverBlueGreenDeploymentRequest : AmazonRDSRequest {
    private string _blueGreenDeploymentIdentifier;
    private Nullable`1<int> _switchoverTimeout;
    [AWSPropertyAttribute]
public string BlueGreenDeploymentIdentifier { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SwitchoverTimeout { get; public set; }
    public string get_BlueGreenDeploymentIdentifier();
    public void set_BlueGreenDeploymentIdentifier(string value);
    internal bool IsSetBlueGreenDeploymentIdentifier();
    public Nullable`1<int> get_SwitchoverTimeout();
    public void set_SwitchoverTimeout(Nullable`1<int> value);
    internal bool IsSetSwitchoverTimeout();
}
public class Amazon.RDS.Model.SwitchoverBlueGreenDeploymentResponse : AmazonWebServiceResponse {
    private BlueGreenDeployment _blueGreenDeployment;
    public BlueGreenDeployment BlueGreenDeployment { get; public set; }
    public BlueGreenDeployment get_BlueGreenDeployment();
    public void set_BlueGreenDeployment(BlueGreenDeployment value);
    internal bool IsSetBlueGreenDeployment();
}
public class Amazon.RDS.Model.SwitchoverDetail : object {
    private string _sourceMember;
    private string _status;
    private string _targetMember;
    [AWSPropertyAttribute]
public string SourceMember { get; public set; }
    public string Status { get; public set; }
    [AWSPropertyAttribute]
public string TargetMember { get; public set; }
    public string get_SourceMember();
    public void set_SourceMember(string value);
    internal bool IsSetSourceMember();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_TargetMember();
    public void set_TargetMember(string value);
    internal bool IsSetTargetMember();
}
public class Amazon.RDS.Model.SwitchoverGlobalClusterRequest : AmazonRDSRequest {
    private string _globalClusterIdentifier;
    private string _targetDbClusterIdentifier;
    [AWSPropertyAttribute]
public string GlobalClusterIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string TargetDbClusterIdentifier { get; public set; }
    public string get_GlobalClusterIdentifier();
    public void set_GlobalClusterIdentifier(string value);
    internal bool IsSetGlobalClusterIdentifier();
    public string get_TargetDbClusterIdentifier();
    public void set_TargetDbClusterIdentifier(string value);
    internal bool IsSetTargetDbClusterIdentifier();
}
public class Amazon.RDS.Model.SwitchoverGlobalClusterResponse : AmazonWebServiceResponse {
    private GlobalCluster _globalCluster;
    public GlobalCluster GlobalCluster { get; public set; }
    public GlobalCluster get_GlobalCluster();
    public void set_GlobalCluster(GlobalCluster value);
    internal bool IsSetGlobalCluster();
}
public class Amazon.RDS.Model.SwitchoverReadReplicaRequest : AmazonRDSRequest {
    private string _dbInstanceIdentifier;
    [AWSPropertyAttribute]
public string DBInstanceIdentifier { get; public set; }
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
}
public class Amazon.RDS.Model.SwitchoverReadReplicaResponse : AmazonWebServiceResponse {
    private DBInstance _dbInstance;
    public DBInstance DBInstance { get; public set; }
    public DBInstance get_DBInstance();
    public void set_DBInstance(DBInstance value);
    internal bool IsSetDBInstance();
}
public class Amazon.RDS.Model.Tag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.RDS.Model.TargetHealth : object {
    private string _description;
    private TargetHealthReason _reason;
    private TargetState _state;
    public string Description { get; public set; }
    public TargetHealthReason Reason { get; public set; }
    public TargetState State { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public TargetHealthReason get_Reason();
    public void set_Reason(TargetHealthReason value);
    internal bool IsSetReason();
    public TargetState get_State();
    public void set_State(TargetState value);
    internal bool IsSetState();
}
public class Amazon.RDS.Model.TenantDatabase : object {
    private string _characterSetName;
    private string _dbInstanceIdentifier;
    private string _dbiResourceId;
    private Nullable`1<bool> _deletionProtection;
    private string _masterUsername;
    private string _ncharCharacterSetName;
    private TenantDatabasePendingModifiedValues _pendingModifiedValues;
    private string _status;
    private List`1<Tag> _tagList;
    private string _tenantDatabaseARN;
    private Nullable`1<DateTime> _tenantDatabaseCreateTime;
    private string _tenantDatabaseResourceId;
    private string _tenantDBName;
    public string CharacterSetName { get; public set; }
    public string DBInstanceIdentifier { get; public set; }
    public string DbiResourceId { get; public set; }
    public Nullable`1<bool> DeletionProtection { get; public set; }
    public string MasterUsername { get; public set; }
    public string NcharCharacterSetName { get; public set; }
    public TenantDatabasePendingModifiedValues PendingModifiedValues { get; public set; }
    public string Status { get; public set; }
    public List`1<Tag> TagList { get; public set; }
    public string TenantDatabaseARN { get; public set; }
    public Nullable`1<DateTime> TenantDatabaseCreateTime { get; public set; }
    public string TenantDatabaseResourceId { get; public set; }
    public string TenantDBName { get; public set; }
    public string get_CharacterSetName();
    public void set_CharacterSetName(string value);
    internal bool IsSetCharacterSetName();
    public string get_DBInstanceIdentifier();
    public void set_DBInstanceIdentifier(string value);
    internal bool IsSetDBInstanceIdentifier();
    public string get_DbiResourceId();
    public void set_DbiResourceId(string value);
    internal bool IsSetDbiResourceId();
    public Nullable`1<bool> get_DeletionProtection();
    public void set_DeletionProtection(Nullable`1<bool> value);
    internal bool IsSetDeletionProtection();
    public string get_MasterUsername();
    public void set_MasterUsername(string value);
    internal bool IsSetMasterUsername();
    public string get_NcharCharacterSetName();
    public void set_NcharCharacterSetName(string value);
    internal bool IsSetNcharCharacterSetName();
    public TenantDatabasePendingModifiedValues get_PendingModifiedValues();
    public void set_PendingModifiedValues(TenantDatabasePendingModifiedValues value);
    internal bool IsSetPendingModifiedValues();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
    public string get_TenantDatabaseARN();
    public void set_TenantDatabaseARN(string value);
    internal bool IsSetTenantDatabaseARN();
    public Nullable`1<DateTime> get_TenantDatabaseCreateTime();
    public void set_TenantDatabaseCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetTenantDatabaseCreateTime();
    public string get_TenantDatabaseResourceId();
    public void set_TenantDatabaseResourceId(string value);
    internal bool IsSetTenantDatabaseResourceId();
    public string get_TenantDBName();
    public void set_TenantDBName(string value);
    internal bool IsSetTenantDBName();
}
public class Amazon.RDS.Model.TenantDatabaseAlreadyExistsException : AmazonRDSException {
    public TenantDatabaseAlreadyExistsException(string message);
    public TenantDatabaseAlreadyExistsException(string message, Exception innerException);
    public TenantDatabaseAlreadyExistsException(Exception innerException);
    public TenantDatabaseAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TenantDatabaseAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.TenantDatabaseNotFoundException : AmazonRDSException {
    public TenantDatabaseNotFoundException(string message);
    public TenantDatabaseNotFoundException(string message, Exception innerException);
    public TenantDatabaseNotFoundException(Exception innerException);
    public TenantDatabaseNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TenantDatabaseNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.TenantDatabasePendingModifiedValues : object {
    private string _masterUserPassword;
    private string _tenantDBName;
    [AWSPropertyAttribute]
public string MasterUserPassword { get; public set; }
    public string TenantDBName { get; public set; }
    public string get_MasterUserPassword();
    public void set_MasterUserPassword(string value);
    internal bool IsSetMasterUserPassword();
    public string get_TenantDBName();
    public void set_TenantDBName(string value);
    internal bool IsSetTenantDBName();
}
public class Amazon.RDS.Model.TenantDatabaseQuotaExceededException : AmazonRDSException {
    public TenantDatabaseQuotaExceededException(string message);
    public TenantDatabaseQuotaExceededException(string message, Exception innerException);
    public TenantDatabaseQuotaExceededException(Exception innerException);
    public TenantDatabaseQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TenantDatabaseQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.Timezone : object {
    private string _timezoneName;
    public string TimezoneName { get; public set; }
    public string get_TimezoneName();
    public void set_TimezoneName(string value);
    internal bool IsSetTimezoneName();
}
public class Amazon.RDS.Model.UnsupportedDBEngineVersionException : AmazonRDSException {
    public UnsupportedDBEngineVersionException(string message);
    public UnsupportedDBEngineVersionException(string message, Exception innerException);
    public UnsupportedDBEngineVersionException(Exception innerException);
    public UnsupportedDBEngineVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedDBEngineVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.RDS.Model.UpgradeTarget : object {
    private Nullable`1<bool> _autoUpgrade;
    private string _description;
    private string _engine;
    private string _engineVersion;
    private Nullable`1<bool> _isMajorVersionUpgrade;
    private List`1<string> _supportedEngineModes;
    private Nullable`1<bool> _supportsBabelfish;
    private Nullable`1<bool> _supportsGlobalDatabases;
    private Nullable`1<bool> _supportsIntegrations;
    private Nullable`1<bool> _supportsLimitlessDatabase;
    private Nullable`1<bool> _supportsLocalWriteForwarding;
    private Nullable`1<bool> _supportsParallelQuery;
    public Nullable`1<bool> AutoUpgrade { get; public set; }
    public string Description { get; public set; }
    public string Engine { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> IsMajorVersionUpgrade { get; public set; }
    public List`1<string> SupportedEngineModes { get; public set; }
    public Nullable`1<bool> SupportsBabelfish { get; public set; }
    public Nullable`1<bool> SupportsGlobalDatabases { get; public set; }
    public Nullable`1<bool> SupportsIntegrations { get; public set; }
    public Nullable`1<bool> SupportsLimitlessDatabase { get; public set; }
    public Nullable`1<bool> SupportsLocalWriteForwarding { get; public set; }
    public Nullable`1<bool> SupportsParallelQuery { get; public set; }
    public Nullable`1<bool> get_AutoUpgrade();
    public void set_AutoUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoUpgrade();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_IsMajorVersionUpgrade();
    public void set_IsMajorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetIsMajorVersionUpgrade();
    public List`1<string> get_SupportedEngineModes();
    public void set_SupportedEngineModes(List`1<string> value);
    internal bool IsSetSupportedEngineModes();
    public Nullable`1<bool> get_SupportsBabelfish();
    public void set_SupportsBabelfish(Nullable`1<bool> value);
    internal bool IsSetSupportsBabelfish();
    public Nullable`1<bool> get_SupportsGlobalDatabases();
    public void set_SupportsGlobalDatabases(Nullable`1<bool> value);
    internal bool IsSetSupportsGlobalDatabases();
    public Nullable`1<bool> get_SupportsIntegrations();
    public void set_SupportsIntegrations(Nullable`1<bool> value);
    internal bool IsSetSupportsIntegrations();
    public Nullable`1<bool> get_SupportsLimitlessDatabase();
    public void set_SupportsLimitlessDatabase(Nullable`1<bool> value);
    internal bool IsSetSupportsLimitlessDatabase();
    public Nullable`1<bool> get_SupportsLocalWriteForwarding();
    public void set_SupportsLocalWriteForwarding(Nullable`1<bool> value);
    internal bool IsSetSupportsLocalWriteForwarding();
    public Nullable`1<bool> get_SupportsParallelQuery();
    public void set_SupportsParallelQuery(Nullable`1<bool> value);
    internal bool IsSetSupportsParallelQuery();
}
public class Amazon.RDS.Model.UserAuthConfig : object {
    private AuthScheme _authScheme;
    private ClientPasswordAuthType _clientPasswordAuthType;
    private string _description;
    private IAMAuthMode _iamAuth;
    private string _secretArn;
    private string _userName;
    public AuthScheme AuthScheme { get; public set; }
    public ClientPasswordAuthType ClientPasswordAuthType { get; public set; }
    public string Description { get; public set; }
    public IAMAuthMode IAMAuth { get; public set; }
    public string SecretArn { get; public set; }
    public string UserName { get; public set; }
    public AuthScheme get_AuthScheme();
    public void set_AuthScheme(AuthScheme value);
    internal bool IsSetAuthScheme();
    public ClientPasswordAuthType get_ClientPasswordAuthType();
    public void set_ClientPasswordAuthType(ClientPasswordAuthType value);
    internal bool IsSetClientPasswordAuthType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public IAMAuthMode get_IAMAuth();
    public void set_IAMAuth(IAMAuthMode value);
    internal bool IsSetIAMAuth();
    public string get_SecretArn();
    public void set_SecretArn(string value);
    internal bool IsSetSecretArn();
    public string get_UserName();
    public void set_UserName(string value);
    internal bool IsSetUserName();
}
public class Amazon.RDS.Model.UserAuthConfigInfo : object {
    private AuthScheme _authScheme;
    private ClientPasswordAuthType _clientPasswordAuthType;
    private string _description;
    private IAMAuthMode _iamAuth;
    private string _secretArn;
    private string _userName;
    public AuthScheme AuthScheme { get; public set; }
    public ClientPasswordAuthType ClientPasswordAuthType { get; public set; }
    public string Description { get; public set; }
    public IAMAuthMode IAMAuth { get; public set; }
    public string SecretArn { get; public set; }
    public string UserName { get; public set; }
    public AuthScheme get_AuthScheme();
    public void set_AuthScheme(AuthScheme value);
    internal bool IsSetAuthScheme();
    public ClientPasswordAuthType get_ClientPasswordAuthType();
    public void set_ClientPasswordAuthType(ClientPasswordAuthType value);
    internal bool IsSetClientPasswordAuthType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public IAMAuthMode get_IAMAuth();
    public void set_IAMAuth(IAMAuthMode value);
    internal bool IsSetIAMAuth();
    public string get_SecretArn();
    public void set_SecretArn(string value);
    internal bool IsSetSecretArn();
    public string get_UserName();
    public void set_UserName(string value);
    internal bool IsSetUserName();
}
public class Amazon.RDS.Model.ValidDBInstanceModificationsMessage : object {
    private List`1<ValidStorageOptions> _storage;
    private Nullable`1<bool> _supportsDedicatedLogVolume;
    private List`1<AvailableProcessorFeature> _validProcessorFeatures;
    public List`1<ValidStorageOptions> Storage { get; public set; }
    public Nullable`1<bool> SupportsDedicatedLogVolume { get; public set; }
    public List`1<AvailableProcessorFeature> ValidProcessorFeatures { get; public set; }
    public List`1<ValidStorageOptions> get_Storage();
    public void set_Storage(List`1<ValidStorageOptions> value);
    internal bool IsSetStorage();
    public Nullable`1<bool> get_SupportsDedicatedLogVolume();
    public void set_SupportsDedicatedLogVolume(Nullable`1<bool> value);
    internal bool IsSetSupportsDedicatedLogVolume();
    public List`1<AvailableProcessorFeature> get_ValidProcessorFeatures();
    public void set_ValidProcessorFeatures(List`1<AvailableProcessorFeature> value);
    internal bool IsSetValidProcessorFeatures();
}
public class Amazon.RDS.Model.ValidStorageOptions : object {
    private List`1<DoubleRange> _iopsToStorageRatio;
    private List`1<Range> _provisionedIops;
    private List`1<Range> _provisionedStorageThroughput;
    private List`1<Range> _storageSize;
    private List`1<DoubleRange> _storageThroughputToIopsRatio;
    private string _storageType;
    private Nullable`1<bool> _supportsStorageAutoscaling;
    public List`1<DoubleRange> IopsToStorageRatio { get; public set; }
    public List`1<Range> ProvisionedIops { get; public set; }
    public List`1<Range> ProvisionedStorageThroughput { get; public set; }
    public List`1<Range> StorageSize { get; public set; }
    public List`1<DoubleRange> StorageThroughputToIopsRatio { get; public set; }
    public string StorageType { get; public set; }
    public Nullable`1<bool> SupportsStorageAutoscaling { get; public set; }
    public List`1<DoubleRange> get_IopsToStorageRatio();
    public void set_IopsToStorageRatio(List`1<DoubleRange> value);
    internal bool IsSetIopsToStorageRatio();
    public List`1<Range> get_ProvisionedIops();
    public void set_ProvisionedIops(List`1<Range> value);
    internal bool IsSetProvisionedIops();
    public List`1<Range> get_ProvisionedStorageThroughput();
    public void set_ProvisionedStorageThroughput(List`1<Range> value);
    internal bool IsSetProvisionedStorageThroughput();
    public List`1<Range> get_StorageSize();
    public void set_StorageSize(List`1<Range> value);
    internal bool IsSetStorageSize();
    public List`1<DoubleRange> get_StorageThroughputToIopsRatio();
    public void set_StorageThroughputToIopsRatio(List`1<DoubleRange> value);
    internal bool IsSetStorageThroughputToIopsRatio();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
    public Nullable`1<bool> get_SupportsStorageAutoscaling();
    public void set_SupportsStorageAutoscaling(Nullable`1<bool> value);
    internal bool IsSetSupportsStorageAutoscaling();
}
public class Amazon.RDS.Model.VpcSecurityGroupMembership : object {
    private string _status;
    private string _vpcSecurityGroupId;
    public string Status { get; public set; }
    public string VpcSecurityGroupId { get; public set; }
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_VpcSecurityGroupId();
    public void set_VpcSecurityGroupId(string value);
    internal bool IsSetVpcSecurityGroupId();
}
public class Amazon.RDS.ReplicaMode : ConstantClass {
    public static ReplicaMode Mounted;
    public static ReplicaMode OpenReadOnly;
    public ReplicaMode(string value);
    private static ReplicaMode();
    public static ReplicaMode FindValue(string value);
    public static ReplicaMode op_Implicit(string value);
}
public class Amazon.RDS.SourceType : ConstantClass {
    public static SourceType BlueGreenDeployment;
    public static SourceType CustomEngineVersion;
    public static SourceType DbCluster;
    public static SourceType DbClusterSnapshot;
    public static SourceType DbInstance;
    public static SourceType DbParameterGroup;
    public static SourceType DbProxy;
    public static SourceType DbSecurityGroup;
    public static SourceType DbSnapshot;
    public SourceType(string value);
    private static SourceType();
    public static SourceType FindValue(string value);
    public static SourceType op_Implicit(string value);
}
public class Amazon.RDS.TargetHealthReason : ConstantClass {
    public static TargetHealthReason AUTH_FAILURE;
    public static TargetHealthReason CONNECTION_FAILED;
    public static TargetHealthReason INVALID_REPLICATION_STATE;
    public static TargetHealthReason PENDING_PROXY_CAPACITY;
    public static TargetHealthReason UNREACHABLE;
    public TargetHealthReason(string value);
    private static TargetHealthReason();
    public static TargetHealthReason FindValue(string value);
    public static TargetHealthReason op_Implicit(string value);
}
public class Amazon.RDS.TargetRole : ConstantClass {
    public static TargetRole READ_ONLY;
    public static TargetRole READ_WRITE;
    public static TargetRole UNKNOWN;
    public TargetRole(string value);
    private static TargetRole();
    public static TargetRole FindValue(string value);
    public static TargetRole op_Implicit(string value);
}
public class Amazon.RDS.TargetState : ConstantClass {
    public static TargetState AVAILABLE;
    public static TargetState REGISTERING;
    public static TargetState UNAVAILABLE;
    public TargetState(string value);
    private static TargetState();
    public static TargetState FindValue(string value);
    public static TargetState op_Implicit(string value);
}
public class Amazon.RDS.TargetType : ConstantClass {
    public static TargetType RDS_INSTANCE;
    public static TargetType RDS_SERVERLESS_ENDPOINT;
    public static TargetType TRACKED_CLUSTER;
    public TargetType(string value);
    private static TargetType();
    public static TargetType FindValue(string value);
    public static TargetType op_Implicit(string value);
}
public static class Amazon.RDS.Util.RDSAuthTokenGenerator : object {
    private static string RDSServiceName;
    private static string HTTPGet;
    private static string HTTPS;
    private static string URISchemeDelimiter;
    private static string ActionKey;
    private static string ActionValue;
    private static string DBUserKey;
    private static string XAmzExpires;
    private static string XAmzSecurityToken;
    private static TimeSpan FifteenMinutes;
    private static RDSAuthTokenGenerator();
    public static string GenerateAuthToken(string hostname, int port, string dbUser);
    public static string GenerateAuthToken(RegionEndpoint region, string hostname, int port, string dbUser);
    public static string GenerateAuthToken(AWSCredentials credentials, string hostname, int port, string dbUser);
    public static string GenerateAuthToken(AWSCredentials credentials, RegionEndpoint region, string hostname, int port, string dbUser);
    [AsyncStateMachineAttribute("Amazon.RDS.Util.RDSAuthTokenGenerator/<GenerateAuthTokenAsync>d__15")]
public static Task`1<string> GenerateAuthTokenAsync(AWSCredentials credentials, RegionEndpoint region, string hostname, int port, string dbUser);
    private static string GenerateAuthToken(ImmutableCredentials immutableCredentials, RegionEndpoint region, string hostname, int port, string dbUser);
}
public class Amazon.RDS.WriteForwardingStatus : ConstantClass {
    public static WriteForwardingStatus Disabled;
    public static WriteForwardingStatus Disabling;
    public static WriteForwardingStatus Enabled;
    public static WriteForwardingStatus Enabling;
    public static WriteForwardingStatus Unknown;
    public WriteForwardingStatus(string value);
    private static WriteForwardingStatus();
    public static WriteForwardingStatus FindValue(string value);
    public static WriteForwardingStatus op_Implicit(string value);
}
