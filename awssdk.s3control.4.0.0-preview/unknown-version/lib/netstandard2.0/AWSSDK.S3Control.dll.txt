public class Amazon.S3Control.AmazonS3ControlClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IS3ControlPaginatorFactory _paginators;
    public IS3ControlPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonS3ControlClient(RegionEndpoint region);
    public AmazonS3ControlClient(AmazonS3ControlConfig config);
    public AmazonS3ControlClient(AWSCredentials credentials);
    public AmazonS3ControlClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonS3ControlClient(AWSCredentials credentials, AmazonS3ControlConfig clientConfig);
    public AmazonS3ControlClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonS3ControlClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonS3ControlClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonS3ControlConfig clientConfig);
    public AmazonS3ControlClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonS3ControlClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonS3ControlClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonS3ControlConfig clientConfig);
    private static AmazonS3ControlClient();
    public sealed virtual IS3ControlPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AssociateAccessGrantsIdentityCenterResponse AssociateAccessGrantsIdentityCenter(AssociateAccessGrantsIdentityCenterRequest request);
    public virtual Task`1<AssociateAccessGrantsIdentityCenterResponse> AssociateAccessGrantsIdentityCenterAsync(AssociateAccessGrantsIdentityCenterRequest request, CancellationToken cancellationToken);
    internal virtual CreateAccessGrantResponse CreateAccessGrant(CreateAccessGrantRequest request);
    public virtual Task`1<CreateAccessGrantResponse> CreateAccessGrantAsync(CreateAccessGrantRequest request, CancellationToken cancellationToken);
    internal virtual CreateAccessGrantsInstanceResponse CreateAccessGrantsInstance(CreateAccessGrantsInstanceRequest request);
    public virtual Task`1<CreateAccessGrantsInstanceResponse> CreateAccessGrantsInstanceAsync(CreateAccessGrantsInstanceRequest request, CancellationToken cancellationToken);
    internal virtual CreateAccessGrantsLocationResponse CreateAccessGrantsLocation(CreateAccessGrantsLocationRequest request);
    public virtual Task`1<CreateAccessGrantsLocationResponse> CreateAccessGrantsLocationAsync(CreateAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    internal virtual CreateAccessPointResponse CreateAccessPoint(CreateAccessPointRequest request);
    public virtual Task`1<CreateAccessPointResponse> CreateAccessPointAsync(CreateAccessPointRequest request, CancellationToken cancellationToken);
    internal virtual CreateAccessPointForObjectLambdaResponse CreateAccessPointForObjectLambda(CreateAccessPointForObjectLambdaRequest request);
    public virtual Task`1<CreateAccessPointForObjectLambdaResponse> CreateAccessPointForObjectLambdaAsync(CreateAccessPointForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual CreateBucketResponse CreateBucket(CreateBucketRequest request);
    public virtual Task`1<CreateBucketResponse> CreateBucketAsync(CreateBucketRequest request, CancellationToken cancellationToken);
    internal virtual CreateJobResponse CreateJob(CreateJobRequest request);
    public virtual Task`1<CreateJobResponse> CreateJobAsync(CreateJobRequest request, CancellationToken cancellationToken);
    internal virtual CreateMultiRegionAccessPointResponse CreateMultiRegionAccessPoint(CreateMultiRegionAccessPointRequest request);
    public virtual Task`1<CreateMultiRegionAccessPointResponse> CreateMultiRegionAccessPointAsync(CreateMultiRegionAccessPointRequest request, CancellationToken cancellationToken);
    internal virtual CreateStorageLensGroupResponse CreateStorageLensGroup(CreateStorageLensGroupRequest request);
    public virtual Task`1<CreateStorageLensGroupResponse> CreateStorageLensGroupAsync(CreateStorageLensGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessGrantResponse DeleteAccessGrant(DeleteAccessGrantRequest request);
    public virtual Task`1<DeleteAccessGrantResponse> DeleteAccessGrantAsync(DeleteAccessGrantRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessGrantsInstanceResponse DeleteAccessGrantsInstance(DeleteAccessGrantsInstanceRequest request);
    public virtual Task`1<DeleteAccessGrantsInstanceResponse> DeleteAccessGrantsInstanceAsync(DeleteAccessGrantsInstanceRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessGrantsInstanceResourcePolicyResponse DeleteAccessGrantsInstanceResourcePolicy(DeleteAccessGrantsInstanceResourcePolicyRequest request);
    public virtual Task`1<DeleteAccessGrantsInstanceResourcePolicyResponse> DeleteAccessGrantsInstanceResourcePolicyAsync(DeleteAccessGrantsInstanceResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessGrantsLocationResponse DeleteAccessGrantsLocation(DeleteAccessGrantsLocationRequest request);
    public virtual Task`1<DeleteAccessGrantsLocationResponse> DeleteAccessGrantsLocationAsync(DeleteAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessPointResponse DeleteAccessPoint(DeleteAccessPointRequest request);
    public virtual Task`1<DeleteAccessPointResponse> DeleteAccessPointAsync(DeleteAccessPointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessPointForObjectLambdaResponse DeleteAccessPointForObjectLambda(DeleteAccessPointForObjectLambdaRequest request);
    public virtual Task`1<DeleteAccessPointForObjectLambdaResponse> DeleteAccessPointForObjectLambdaAsync(DeleteAccessPointForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessPointPolicyResponse DeleteAccessPointPolicy(DeleteAccessPointPolicyRequest request);
    public virtual Task`1<DeleteAccessPointPolicyResponse> DeleteAccessPointPolicyAsync(DeleteAccessPointPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAccessPointPolicyForObjectLambdaResponse DeleteAccessPointPolicyForObjectLambda(DeleteAccessPointPolicyForObjectLambdaRequest request);
    public virtual Task`1<DeleteAccessPointPolicyForObjectLambdaResponse> DeleteAccessPointPolicyForObjectLambdaAsync(DeleteAccessPointPolicyForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBucketResponse DeleteBucket(DeleteBucketRequest request);
    public virtual Task`1<DeleteBucketResponse> DeleteBucketAsync(DeleteBucketRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBucketLifecycleConfigurationResponse DeleteBucketLifecycleConfiguration(DeleteBucketLifecycleConfigurationRequest request);
    public virtual Task`1<DeleteBucketLifecycleConfigurationResponse> DeleteBucketLifecycleConfigurationAsync(DeleteBucketLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBucketPolicyResponse DeleteBucketPolicy(DeleteBucketPolicyRequest request);
    public virtual Task`1<DeleteBucketPolicyResponse> DeleteBucketPolicyAsync(DeleteBucketPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBucketReplicationResponse DeleteBucketReplication(DeleteBucketReplicationRequest request);
    public virtual Task`1<DeleteBucketReplicationResponse> DeleteBucketReplicationAsync(DeleteBucketReplicationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBucketTaggingResponse DeleteBucketTagging(DeleteBucketTaggingRequest request);
    public virtual Task`1<DeleteBucketTaggingResponse> DeleteBucketTaggingAsync(DeleteBucketTaggingRequest request, CancellationToken cancellationToken);
    internal virtual DeleteJobTaggingResponse DeleteJobTagging(DeleteJobTaggingRequest request);
    public virtual Task`1<DeleteJobTaggingResponse> DeleteJobTaggingAsync(DeleteJobTaggingRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMultiRegionAccessPointResponse DeleteMultiRegionAccessPoint(DeleteMultiRegionAccessPointRequest request);
    public virtual Task`1<DeleteMultiRegionAccessPointResponse> DeleteMultiRegionAccessPointAsync(DeleteMultiRegionAccessPointRequest request, CancellationToken cancellationToken);
    internal virtual DeletePublicAccessBlockResponse DeletePublicAccessBlock(DeletePublicAccessBlockRequest request);
    public virtual Task`1<DeletePublicAccessBlockResponse> DeletePublicAccessBlockAsync(DeletePublicAccessBlockRequest request, CancellationToken cancellationToken);
    internal virtual DeleteStorageLensConfigurationResponse DeleteStorageLensConfiguration(DeleteStorageLensConfigurationRequest request);
    public virtual Task`1<DeleteStorageLensConfigurationResponse> DeleteStorageLensConfigurationAsync(DeleteStorageLensConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteStorageLensConfigurationTaggingResponse DeleteStorageLensConfigurationTagging(DeleteStorageLensConfigurationTaggingRequest request);
    public virtual Task`1<DeleteStorageLensConfigurationTaggingResponse> DeleteStorageLensConfigurationTaggingAsync(DeleteStorageLensConfigurationTaggingRequest request, CancellationToken cancellationToken);
    internal virtual DeleteStorageLensGroupResponse DeleteStorageLensGroup(DeleteStorageLensGroupRequest request);
    public virtual Task`1<DeleteStorageLensGroupResponse> DeleteStorageLensGroupAsync(DeleteStorageLensGroupRequest request, CancellationToken cancellationToken);
    internal virtual DescribeJobResponse DescribeJob(DescribeJobRequest request);
    public virtual Task`1<DescribeJobResponse> DescribeJobAsync(DescribeJobRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMultiRegionAccessPointOperationResponse DescribeMultiRegionAccessPointOperation(DescribeMultiRegionAccessPointOperationRequest request);
    public virtual Task`1<DescribeMultiRegionAccessPointOperationResponse> DescribeMultiRegionAccessPointOperationAsync(DescribeMultiRegionAccessPointOperationRequest request, CancellationToken cancellationToken);
    internal virtual DissociateAccessGrantsIdentityCenterResponse DissociateAccessGrantsIdentityCenter(DissociateAccessGrantsIdentityCenterRequest request);
    public virtual Task`1<DissociateAccessGrantsIdentityCenterResponse> DissociateAccessGrantsIdentityCenterAsync(DissociateAccessGrantsIdentityCenterRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessGrantResponse GetAccessGrant(GetAccessGrantRequest request);
    public virtual Task`1<GetAccessGrantResponse> GetAccessGrantAsync(GetAccessGrantRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessGrantsInstanceResponse GetAccessGrantsInstance(GetAccessGrantsInstanceRequest request);
    public virtual Task`1<GetAccessGrantsInstanceResponse> GetAccessGrantsInstanceAsync(GetAccessGrantsInstanceRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessGrantsInstanceForPrefixResponse GetAccessGrantsInstanceForPrefix(GetAccessGrantsInstanceForPrefixRequest request);
    public virtual Task`1<GetAccessGrantsInstanceForPrefixResponse> GetAccessGrantsInstanceForPrefixAsync(GetAccessGrantsInstanceForPrefixRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessGrantsInstanceResourcePolicyResponse GetAccessGrantsInstanceResourcePolicy(GetAccessGrantsInstanceResourcePolicyRequest request);
    public virtual Task`1<GetAccessGrantsInstanceResourcePolicyResponse> GetAccessGrantsInstanceResourcePolicyAsync(GetAccessGrantsInstanceResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessGrantsLocationResponse GetAccessGrantsLocation(GetAccessGrantsLocationRequest request);
    public virtual Task`1<GetAccessGrantsLocationResponse> GetAccessGrantsLocationAsync(GetAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPointResponse GetAccessPoint(GetAccessPointRequest request);
    public virtual Task`1<GetAccessPointResponse> GetAccessPointAsync(GetAccessPointRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPointConfigurationForObjectLambdaResponse GetAccessPointConfigurationForObjectLambda(GetAccessPointConfigurationForObjectLambdaRequest request);
    public virtual Task`1<GetAccessPointConfigurationForObjectLambdaResponse> GetAccessPointConfigurationForObjectLambdaAsync(GetAccessPointConfigurationForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPointForObjectLambdaResponse GetAccessPointForObjectLambda(GetAccessPointForObjectLambdaRequest request);
    public virtual Task`1<GetAccessPointForObjectLambdaResponse> GetAccessPointForObjectLambdaAsync(GetAccessPointForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPointPolicyResponse GetAccessPointPolicy(GetAccessPointPolicyRequest request);
    public virtual Task`1<GetAccessPointPolicyResponse> GetAccessPointPolicyAsync(GetAccessPointPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPointPolicyForObjectLambdaResponse GetAccessPointPolicyForObjectLambda(GetAccessPointPolicyForObjectLambdaRequest request);
    public virtual Task`1<GetAccessPointPolicyForObjectLambdaResponse> GetAccessPointPolicyForObjectLambdaAsync(GetAccessPointPolicyForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPointPolicyStatusResponse GetAccessPointPolicyStatus(GetAccessPointPolicyStatusRequest request);
    public virtual Task`1<GetAccessPointPolicyStatusResponse> GetAccessPointPolicyStatusAsync(GetAccessPointPolicyStatusRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPointPolicyStatusForObjectLambdaResponse GetAccessPointPolicyStatusForObjectLambda(GetAccessPointPolicyStatusForObjectLambdaRequest request);
    public virtual Task`1<GetAccessPointPolicyStatusForObjectLambdaResponse> GetAccessPointPolicyStatusForObjectLambdaAsync(GetAccessPointPolicyStatusForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual GetBucketResponse GetBucket(GetBucketRequest request);
    public virtual Task`1<GetBucketResponse> GetBucketAsync(GetBucketRequest request, CancellationToken cancellationToken);
    internal virtual GetBucketLifecycleConfigurationResponse GetBucketLifecycleConfiguration(GetBucketLifecycleConfigurationRequest request);
    public virtual Task`1<GetBucketLifecycleConfigurationResponse> GetBucketLifecycleConfigurationAsync(GetBucketLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual GetBucketPolicyResponse GetBucketPolicy(GetBucketPolicyRequest request);
    public virtual Task`1<GetBucketPolicyResponse> GetBucketPolicyAsync(GetBucketPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetBucketReplicationResponse GetBucketReplication(GetBucketReplicationRequest request);
    public virtual Task`1<GetBucketReplicationResponse> GetBucketReplicationAsync(GetBucketReplicationRequest request, CancellationToken cancellationToken);
    internal virtual GetBucketTaggingResponse GetBucketTagging(GetBucketTaggingRequest request);
    public virtual Task`1<GetBucketTaggingResponse> GetBucketTaggingAsync(GetBucketTaggingRequest request, CancellationToken cancellationToken);
    internal virtual GetBucketVersioningResponse GetBucketVersioning(GetBucketVersioningRequest request);
    public virtual Task`1<GetBucketVersioningResponse> GetBucketVersioningAsync(GetBucketVersioningRequest request, CancellationToken cancellationToken);
    internal virtual GetDataAccessResponse GetDataAccess(GetDataAccessRequest request);
    public virtual Task`1<GetDataAccessResponse> GetDataAccessAsync(GetDataAccessRequest request, CancellationToken cancellationToken);
    internal virtual GetJobTaggingResponse GetJobTagging(GetJobTaggingRequest request);
    public virtual Task`1<GetJobTaggingResponse> GetJobTaggingAsync(GetJobTaggingRequest request, CancellationToken cancellationToken);
    internal virtual GetMultiRegionAccessPointResponse GetMultiRegionAccessPoint(GetMultiRegionAccessPointRequest request);
    public virtual Task`1<GetMultiRegionAccessPointResponse> GetMultiRegionAccessPointAsync(GetMultiRegionAccessPointRequest request, CancellationToken cancellationToken);
    internal virtual GetMultiRegionAccessPointPolicyResponse GetMultiRegionAccessPointPolicy(GetMultiRegionAccessPointPolicyRequest request);
    public virtual Task`1<GetMultiRegionAccessPointPolicyResponse> GetMultiRegionAccessPointPolicyAsync(GetMultiRegionAccessPointPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetMultiRegionAccessPointPolicyStatusResponse GetMultiRegionAccessPointPolicyStatus(GetMultiRegionAccessPointPolicyStatusRequest request);
    public virtual Task`1<GetMultiRegionAccessPointPolicyStatusResponse> GetMultiRegionAccessPointPolicyStatusAsync(GetMultiRegionAccessPointPolicyStatusRequest request, CancellationToken cancellationToken);
    internal virtual GetMultiRegionAccessPointRoutesResponse GetMultiRegionAccessPointRoutes(GetMultiRegionAccessPointRoutesRequest request);
    public virtual Task`1<GetMultiRegionAccessPointRoutesResponse> GetMultiRegionAccessPointRoutesAsync(GetMultiRegionAccessPointRoutesRequest request, CancellationToken cancellationToken);
    internal virtual GetPublicAccessBlockResponse GetPublicAccessBlock(GetPublicAccessBlockRequest request);
    public virtual Task`1<GetPublicAccessBlockResponse> GetPublicAccessBlockAsync(GetPublicAccessBlockRequest request, CancellationToken cancellationToken);
    internal virtual GetStorageLensConfigurationResponse GetStorageLensConfiguration(GetStorageLensConfigurationRequest request);
    public virtual Task`1<GetStorageLensConfigurationResponse> GetStorageLensConfigurationAsync(GetStorageLensConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual GetStorageLensConfigurationTaggingResponse GetStorageLensConfigurationTagging(GetStorageLensConfigurationTaggingRequest request);
    public virtual Task`1<GetStorageLensConfigurationTaggingResponse> GetStorageLensConfigurationTaggingAsync(GetStorageLensConfigurationTaggingRequest request, CancellationToken cancellationToken);
    internal virtual GetStorageLensGroupResponse GetStorageLensGroup(GetStorageLensGroupRequest request);
    public virtual Task`1<GetStorageLensGroupResponse> GetStorageLensGroupAsync(GetStorageLensGroupRequest request, CancellationToken cancellationToken);
    internal virtual ListAccessGrantsResponse ListAccessGrants(ListAccessGrantsRequest request);
    public virtual Task`1<ListAccessGrantsResponse> ListAccessGrantsAsync(ListAccessGrantsRequest request, CancellationToken cancellationToken);
    internal virtual ListAccessGrantsInstancesResponse ListAccessGrantsInstances(ListAccessGrantsInstancesRequest request);
    public virtual Task`1<ListAccessGrantsInstancesResponse> ListAccessGrantsInstancesAsync(ListAccessGrantsInstancesRequest request, CancellationToken cancellationToken);
    internal virtual ListAccessGrantsLocationsResponse ListAccessGrantsLocations(ListAccessGrantsLocationsRequest request);
    public virtual Task`1<ListAccessGrantsLocationsResponse> ListAccessGrantsLocationsAsync(ListAccessGrantsLocationsRequest request, CancellationToken cancellationToken);
    internal virtual ListAccessPointsResponse ListAccessPoints(ListAccessPointsRequest request);
    public virtual Task`1<ListAccessPointsResponse> ListAccessPointsAsync(ListAccessPointsRequest request, CancellationToken cancellationToken);
    internal virtual ListAccessPointsForObjectLambdaResponse ListAccessPointsForObjectLambda(ListAccessPointsForObjectLambdaRequest request);
    public virtual Task`1<ListAccessPointsForObjectLambdaResponse> ListAccessPointsForObjectLambdaAsync(ListAccessPointsForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual ListJobsResponse ListJobs(ListJobsRequest request);
    public virtual Task`1<ListJobsResponse> ListJobsAsync(ListJobsRequest request, CancellationToken cancellationToken);
    internal virtual ListMultiRegionAccessPointsResponse ListMultiRegionAccessPoints(ListMultiRegionAccessPointsRequest request);
    public virtual Task`1<ListMultiRegionAccessPointsResponse> ListMultiRegionAccessPointsAsync(ListMultiRegionAccessPointsRequest request, CancellationToken cancellationToken);
    internal virtual ListRegionalBucketsResponse ListRegionalBuckets(ListRegionalBucketsRequest request);
    public virtual Task`1<ListRegionalBucketsResponse> ListRegionalBucketsAsync(ListRegionalBucketsRequest request, CancellationToken cancellationToken);
    internal virtual ListStorageLensConfigurationsResponse ListStorageLensConfigurations(ListStorageLensConfigurationsRequest request);
    public virtual Task`1<ListStorageLensConfigurationsResponse> ListStorageLensConfigurationsAsync(ListStorageLensConfigurationsRequest request, CancellationToken cancellationToken);
    internal virtual ListStorageLensGroupsResponse ListStorageLensGroups(ListStorageLensGroupsRequest request);
    public virtual Task`1<ListStorageLensGroupsResponse> ListStorageLensGroupsAsync(ListStorageLensGroupsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual PutAccessGrantsInstanceResourcePolicyResponse PutAccessGrantsInstanceResourcePolicy(PutAccessGrantsInstanceResourcePolicyRequest request);
    public virtual Task`1<PutAccessGrantsInstanceResourcePolicyResponse> PutAccessGrantsInstanceResourcePolicyAsync(PutAccessGrantsInstanceResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual PutAccessPointConfigurationForObjectLambdaResponse PutAccessPointConfigurationForObjectLambda(PutAccessPointConfigurationForObjectLambdaRequest request);
    public virtual Task`1<PutAccessPointConfigurationForObjectLambdaResponse> PutAccessPointConfigurationForObjectLambdaAsync(PutAccessPointConfigurationForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual PutAccessPointPolicyResponse PutAccessPointPolicy(PutAccessPointPolicyRequest request);
    public virtual Task`1<PutAccessPointPolicyResponse> PutAccessPointPolicyAsync(PutAccessPointPolicyRequest request, CancellationToken cancellationToken);
    internal virtual PutAccessPointPolicyForObjectLambdaResponse PutAccessPointPolicyForObjectLambda(PutAccessPointPolicyForObjectLambdaRequest request);
    public virtual Task`1<PutAccessPointPolicyForObjectLambdaResponse> PutAccessPointPolicyForObjectLambdaAsync(PutAccessPointPolicyForObjectLambdaRequest request, CancellationToken cancellationToken);
    internal virtual PutBucketLifecycleConfigurationResponse PutBucketLifecycleConfiguration(PutBucketLifecycleConfigurationRequest request);
    public virtual Task`1<PutBucketLifecycleConfigurationResponse> PutBucketLifecycleConfigurationAsync(PutBucketLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual PutBucketPolicyResponse PutBucketPolicy(PutBucketPolicyRequest request);
    public virtual Task`1<PutBucketPolicyResponse> PutBucketPolicyAsync(PutBucketPolicyRequest request, CancellationToken cancellationToken);
    internal virtual PutBucketReplicationResponse PutBucketReplication(PutBucketReplicationRequest request);
    public virtual Task`1<PutBucketReplicationResponse> PutBucketReplicationAsync(PutBucketReplicationRequest request, CancellationToken cancellationToken);
    internal virtual PutBucketTaggingResponse PutBucketTagging(PutBucketTaggingRequest request);
    public virtual Task`1<PutBucketTaggingResponse> PutBucketTaggingAsync(PutBucketTaggingRequest request, CancellationToken cancellationToken);
    internal virtual PutBucketVersioningResponse PutBucketVersioning(PutBucketVersioningRequest request);
    public virtual Task`1<PutBucketVersioningResponse> PutBucketVersioningAsync(PutBucketVersioningRequest request, CancellationToken cancellationToken);
    internal virtual PutJobTaggingResponse PutJobTagging(PutJobTaggingRequest request);
    public virtual Task`1<PutJobTaggingResponse> PutJobTaggingAsync(PutJobTaggingRequest request, CancellationToken cancellationToken);
    internal virtual PutMultiRegionAccessPointPolicyResponse PutMultiRegionAccessPointPolicy(PutMultiRegionAccessPointPolicyRequest request);
    public virtual Task`1<PutMultiRegionAccessPointPolicyResponse> PutMultiRegionAccessPointPolicyAsync(PutMultiRegionAccessPointPolicyRequest request, CancellationToken cancellationToken);
    internal virtual PutPublicAccessBlockResponse PutPublicAccessBlock(PutPublicAccessBlockRequest request);
    public virtual Task`1<PutPublicAccessBlockResponse> PutPublicAccessBlockAsync(PutPublicAccessBlockRequest request, CancellationToken cancellationToken);
    internal virtual PutStorageLensConfigurationResponse PutStorageLensConfiguration(PutStorageLensConfigurationRequest request);
    public virtual Task`1<PutStorageLensConfigurationResponse> PutStorageLensConfigurationAsync(PutStorageLensConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual PutStorageLensConfigurationTaggingResponse PutStorageLensConfigurationTagging(PutStorageLensConfigurationTaggingRequest request);
    public virtual Task`1<PutStorageLensConfigurationTaggingResponse> PutStorageLensConfigurationTaggingAsync(PutStorageLensConfigurationTaggingRequest request, CancellationToken cancellationToken);
    internal virtual SubmitMultiRegionAccessPointRoutesResponse SubmitMultiRegionAccessPointRoutes(SubmitMultiRegionAccessPointRoutesRequest request);
    public virtual Task`1<SubmitMultiRegionAccessPointRoutesResponse> SubmitMultiRegionAccessPointRoutesAsync(SubmitMultiRegionAccessPointRoutesRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateAccessGrantsLocationResponse UpdateAccessGrantsLocation(UpdateAccessGrantsLocationRequest request);
    public virtual Task`1<UpdateAccessGrantsLocationResponse> UpdateAccessGrantsLocationAsync(UpdateAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateJobPriorityResponse UpdateJobPriority(UpdateJobPriorityRequest request);
    public virtual Task`1<UpdateJobPriorityResponse> UpdateJobPriorityAsync(UpdateJobPriorityRequest request, CancellationToken cancellationToken);
    internal virtual UpdateJobStatusResponse UpdateJobStatus(UpdateJobStatusRequest request);
    public virtual Task`1<UpdateJobStatusResponse> UpdateJobStatusAsync(UpdateJobStatusRequest request, CancellationToken cancellationToken);
    internal virtual UpdateStorageLensGroupResponse UpdateStorageLensGroup(UpdateStorageLensGroupRequest request);
    public virtual Task`1<UpdateStorageLensGroupResponse> UpdateStorageLensGroupAsync(UpdateStorageLensGroupRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("s3v4")]
public class Amazon.S3Control.AmazonS3ControlConfig : ClientConfig {
    private static string UseArnRegionEnvName;
    private static string AwsProfileEnvironmentVariable;
    private static string DefaultProfileName;
    private static CredentialProfileStoreChain credentialProfileChain;
    private static CredentialProfile _profile;
    private static object _triedToResolveProfileLock;
    private static bool _triedToResolveProfile;
    private Nullable`1<bool> _useArnRegion;
    private object _useArnRegionLock;
    private static string UserAgentString;
    private static AmazonS3ControlEndpointResolver EndpointResolver;
    private string _userAgent;
    public bool UseArnRegion { get; public set; }
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonS3ControlConfig();
    public bool get_UseArnRegion();
    public void set_UseArnRegion(bool value);
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.S3Control.AmazonS3ControlDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonS3ControlDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.S3Control.AmazonS3ControlException : AmazonServiceException {
    private string amazonId2;
    public string AmazonId2 { get; public set; }
    public AmazonS3ControlException(string message);
    public AmazonS3ControlException(string message, Exception innerException);
    public AmazonS3ControlException(Exception innerException);
    public AmazonS3ControlException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonS3ControlException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_AmazonId2();
    public void set_AmazonId2(string value);
}
public class Amazon.S3Control.AmazonS3ControlRequest : AmazonWebServiceRequest {
}
public class Amazon.S3Control.AsyncOperationName : ConstantClass {
    public static AsyncOperationName CreateMultiRegionAccessPoint;
    public static AsyncOperationName DeleteMultiRegionAccessPoint;
    public static AsyncOperationName PutMultiRegionAccessPointPolicy;
    public AsyncOperationName(string value);
    private static AsyncOperationName();
    public static AsyncOperationName FindValue(string value);
    public static AsyncOperationName op_Implicit(string value);
}
public class Amazon.S3Control.BucketCannedACL : ConstantClass {
    public static BucketCannedACL AuthenticatedRead;
    public static BucketCannedACL Private;
    public static BucketCannedACL PublicRead;
    public static BucketCannedACL PublicReadWrite;
    public BucketCannedACL(string value);
    private static BucketCannedACL();
    public static BucketCannedACL FindValue(string value);
    public static BucketCannedACL op_Implicit(string value);
}
public class Amazon.S3Control.BucketLocationConstraint : ConstantClass {
    public static BucketLocationConstraint ApNortheast1;
    public static BucketLocationConstraint ApSouth1;
    public static BucketLocationConstraint ApSoutheast1;
    public static BucketLocationConstraint ApSoutheast2;
    public static BucketLocationConstraint CnNorth1;
    public static BucketLocationConstraint EU;
    public static BucketLocationConstraint EuCentral1;
    public static BucketLocationConstraint EuWest1;
    public static BucketLocationConstraint SaEast1;
    public static BucketLocationConstraint UsWest1;
    public static BucketLocationConstraint UsWest2;
    public BucketLocationConstraint(string value);
    private static BucketLocationConstraint();
    public static BucketLocationConstraint FindValue(string value);
    public static BucketLocationConstraint op_Implicit(string value);
}
public class Amazon.S3Control.BucketVersioningStatus : ConstantClass {
    public static BucketVersioningStatus Enabled;
    public static BucketVersioningStatus Suspended;
    public BucketVersioningStatus(string value);
    private static BucketVersioningStatus();
    public static BucketVersioningStatus FindValue(string value);
    public static BucketVersioningStatus op_Implicit(string value);
}
public class Amazon.S3Control.DeleteMarkerReplicationStatus : ConstantClass {
    public static DeleteMarkerReplicationStatus Disabled;
    public static DeleteMarkerReplicationStatus Enabled;
    public DeleteMarkerReplicationStatus(string value);
    private static DeleteMarkerReplicationStatus();
    public static DeleteMarkerReplicationStatus FindValue(string value);
    public static DeleteMarkerReplicationStatus op_Implicit(string value);
}
public class Amazon.S3Control.Endpoints.S3ControlEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public string Endpoint { get; public set; }
    public string AccountId { get; public set; }
    public Nullable`1<bool> RequiresAccountId { get; public set; }
    public string OutpostId { get; public set; }
    public string Bucket { get; public set; }
    public string AccessPointName { get; public set; }
    public Nullable`1<bool> UseArnRegion { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
    public string get_AccountId();
    public void set_AccountId(string value);
    public Nullable`1<bool> get_RequiresAccountId();
    public void set_RequiresAccountId(Nullable`1<bool> value);
    public string get_OutpostId();
    public void set_OutpostId(string value);
    public string get_Bucket();
    public void set_Bucket(string value);
    public string get_AccessPointName();
    public void set_AccessPointName(string value);
    public Nullable`1<bool> get_UseArnRegion();
    public void set_UseArnRegion(Nullable`1<bool> value);
}
public class Amazon.S3Control.ExistingObjectReplicationStatus : ConstantClass {
    public static ExistingObjectReplicationStatus Disabled;
    public static ExistingObjectReplicationStatus Enabled;
    public ExistingObjectReplicationStatus(string value);
    private static ExistingObjectReplicationStatus();
    public static ExistingObjectReplicationStatus FindValue(string value);
    public static ExistingObjectReplicationStatus op_Implicit(string value);
}
public class Amazon.S3Control.ExpirationStatus : ConstantClass {
    public static ExpirationStatus Disabled;
    public static ExpirationStatus Enabled;
    public ExpirationStatus(string value);
    private static ExpirationStatus();
    public static ExpirationStatus FindValue(string value);
    public static ExpirationStatus op_Implicit(string value);
}
public class Amazon.S3Control.Format : ConstantClass {
    public static Format CSV;
    public static Format Parquet;
    public Format(string value);
    private static Format();
    public static Format FindValue(string value);
    public static Format op_Implicit(string value);
}
public class Amazon.S3Control.GeneratedManifestFormat : ConstantClass {
    public static GeneratedManifestFormat S3InventoryReport_CSV_20211130;
    public GeneratedManifestFormat(string value);
    private static GeneratedManifestFormat();
    public static GeneratedManifestFormat FindValue(string value);
    public static GeneratedManifestFormat op_Implicit(string value);
}
public class Amazon.S3Control.GranteeType : ConstantClass {
    public static GranteeType DIRECTORY_GROUP;
    public static GranteeType DIRECTORY_USER;
    public static GranteeType IAM;
    public GranteeType(string value);
    private static GranteeType();
    public static GranteeType FindValue(string value);
    public static GranteeType op_Implicit(string value);
}
public interface Amazon.S3Control.IAmazonS3Control {
    public IS3ControlPaginatorFactory Paginators { get; }
    public abstract virtual IS3ControlPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AssociateAccessGrantsIdentityCenterResponse> AssociateAccessGrantsIdentityCenterAsync(AssociateAccessGrantsIdentityCenterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAccessGrantResponse> CreateAccessGrantAsync(CreateAccessGrantRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAccessGrantsInstanceResponse> CreateAccessGrantsInstanceAsync(CreateAccessGrantsInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAccessGrantsLocationResponse> CreateAccessGrantsLocationAsync(CreateAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAccessPointResponse> CreateAccessPointAsync(CreateAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAccessPointForObjectLambdaResponse> CreateAccessPointForObjectLambdaAsync(CreateAccessPointForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateBucketResponse> CreateBucketAsync(CreateBucketRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateJobResponse> CreateJobAsync(CreateJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateMultiRegionAccessPointResponse> CreateMultiRegionAccessPointAsync(CreateMultiRegionAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateStorageLensGroupResponse> CreateStorageLensGroupAsync(CreateStorageLensGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessGrantResponse> DeleteAccessGrantAsync(DeleteAccessGrantRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessGrantsInstanceResponse> DeleteAccessGrantsInstanceAsync(DeleteAccessGrantsInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessGrantsInstanceResourcePolicyResponse> DeleteAccessGrantsInstanceResourcePolicyAsync(DeleteAccessGrantsInstanceResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessGrantsLocationResponse> DeleteAccessGrantsLocationAsync(DeleteAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessPointResponse> DeleteAccessPointAsync(DeleteAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessPointForObjectLambdaResponse> DeleteAccessPointForObjectLambdaAsync(DeleteAccessPointForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessPointPolicyResponse> DeleteAccessPointPolicyAsync(DeleteAccessPointPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAccessPointPolicyForObjectLambdaResponse> DeleteAccessPointPolicyForObjectLambdaAsync(DeleteAccessPointPolicyForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketResponse> DeleteBucketAsync(DeleteBucketRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketLifecycleConfigurationResponse> DeleteBucketLifecycleConfigurationAsync(DeleteBucketLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketPolicyResponse> DeleteBucketPolicyAsync(DeleteBucketPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketReplicationResponse> DeleteBucketReplicationAsync(DeleteBucketReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketTaggingResponse> DeleteBucketTaggingAsync(DeleteBucketTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteJobTaggingResponse> DeleteJobTaggingAsync(DeleteJobTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMultiRegionAccessPointResponse> DeleteMultiRegionAccessPointAsync(DeleteMultiRegionAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePublicAccessBlockResponse> DeletePublicAccessBlockAsync(DeletePublicAccessBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteStorageLensConfigurationResponse> DeleteStorageLensConfigurationAsync(DeleteStorageLensConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteStorageLensConfigurationTaggingResponse> DeleteStorageLensConfigurationTaggingAsync(DeleteStorageLensConfigurationTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteStorageLensGroupResponse> DeleteStorageLensGroupAsync(DeleteStorageLensGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeJobResponse> DescribeJobAsync(DescribeJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMultiRegionAccessPointOperationResponse> DescribeMultiRegionAccessPointOperationAsync(DescribeMultiRegionAccessPointOperationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DissociateAccessGrantsIdentityCenterResponse> DissociateAccessGrantsIdentityCenterAsync(DissociateAccessGrantsIdentityCenterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessGrantResponse> GetAccessGrantAsync(GetAccessGrantRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessGrantsInstanceResponse> GetAccessGrantsInstanceAsync(GetAccessGrantsInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessGrantsInstanceForPrefixResponse> GetAccessGrantsInstanceForPrefixAsync(GetAccessGrantsInstanceForPrefixRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessGrantsInstanceResourcePolicyResponse> GetAccessGrantsInstanceResourcePolicyAsync(GetAccessGrantsInstanceResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessGrantsLocationResponse> GetAccessGrantsLocationAsync(GetAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPointResponse> GetAccessPointAsync(GetAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPointConfigurationForObjectLambdaResponse> GetAccessPointConfigurationForObjectLambdaAsync(GetAccessPointConfigurationForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPointForObjectLambdaResponse> GetAccessPointForObjectLambdaAsync(GetAccessPointForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPointPolicyResponse> GetAccessPointPolicyAsync(GetAccessPointPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPointPolicyForObjectLambdaResponse> GetAccessPointPolicyForObjectLambdaAsync(GetAccessPointPolicyForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPointPolicyStatusResponse> GetAccessPointPolicyStatusAsync(GetAccessPointPolicyStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPointPolicyStatusForObjectLambdaResponse> GetAccessPointPolicyStatusForObjectLambdaAsync(GetAccessPointPolicyStatusForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketResponse> GetBucketAsync(GetBucketRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketLifecycleConfigurationResponse> GetBucketLifecycleConfigurationAsync(GetBucketLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketPolicyResponse> GetBucketPolicyAsync(GetBucketPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketReplicationResponse> GetBucketReplicationAsync(GetBucketReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketTaggingResponse> GetBucketTaggingAsync(GetBucketTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketVersioningResponse> GetBucketVersioningAsync(GetBucketVersioningRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataAccessResponse> GetDataAccessAsync(GetDataAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetJobTaggingResponse> GetJobTaggingAsync(GetJobTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMultiRegionAccessPointResponse> GetMultiRegionAccessPointAsync(GetMultiRegionAccessPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMultiRegionAccessPointPolicyResponse> GetMultiRegionAccessPointPolicyAsync(GetMultiRegionAccessPointPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMultiRegionAccessPointPolicyStatusResponse> GetMultiRegionAccessPointPolicyStatusAsync(GetMultiRegionAccessPointPolicyStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMultiRegionAccessPointRoutesResponse> GetMultiRegionAccessPointRoutesAsync(GetMultiRegionAccessPointRoutesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPublicAccessBlockResponse> GetPublicAccessBlockAsync(GetPublicAccessBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStorageLensConfigurationResponse> GetStorageLensConfigurationAsync(GetStorageLensConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStorageLensConfigurationTaggingResponse> GetStorageLensConfigurationTaggingAsync(GetStorageLensConfigurationTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStorageLensGroupResponse> GetStorageLensGroupAsync(GetStorageLensGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccessGrantsResponse> ListAccessGrantsAsync(ListAccessGrantsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccessGrantsInstancesResponse> ListAccessGrantsInstancesAsync(ListAccessGrantsInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccessGrantsLocationsResponse> ListAccessGrantsLocationsAsync(ListAccessGrantsLocationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccessPointsResponse> ListAccessPointsAsync(ListAccessPointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccessPointsForObjectLambdaResponse> ListAccessPointsForObjectLambdaAsync(ListAccessPointsForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListJobsResponse> ListJobsAsync(ListJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMultiRegionAccessPointsResponse> ListMultiRegionAccessPointsAsync(ListMultiRegionAccessPointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRegionalBucketsResponse> ListRegionalBucketsAsync(ListRegionalBucketsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStorageLensConfigurationsResponse> ListStorageLensConfigurationsAsync(ListStorageLensConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStorageLensGroupsResponse> ListStorageLensGroupsAsync(ListStorageLensGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutAccessGrantsInstanceResourcePolicyResponse> PutAccessGrantsInstanceResourcePolicyAsync(PutAccessGrantsInstanceResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutAccessPointConfigurationForObjectLambdaResponse> PutAccessPointConfigurationForObjectLambdaAsync(PutAccessPointConfigurationForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutAccessPointPolicyResponse> PutAccessPointPolicyAsync(PutAccessPointPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutAccessPointPolicyForObjectLambdaResponse> PutAccessPointPolicyForObjectLambdaAsync(PutAccessPointPolicyForObjectLambdaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketLifecycleConfigurationResponse> PutBucketLifecycleConfigurationAsync(PutBucketLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketPolicyResponse> PutBucketPolicyAsync(PutBucketPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketReplicationResponse> PutBucketReplicationAsync(PutBucketReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketTaggingResponse> PutBucketTaggingAsync(PutBucketTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketVersioningResponse> PutBucketVersioningAsync(PutBucketVersioningRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutJobTaggingResponse> PutJobTaggingAsync(PutJobTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutMultiRegionAccessPointPolicyResponse> PutMultiRegionAccessPointPolicyAsync(PutMultiRegionAccessPointPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutPublicAccessBlockResponse> PutPublicAccessBlockAsync(PutPublicAccessBlockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutStorageLensConfigurationResponse> PutStorageLensConfigurationAsync(PutStorageLensConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutStorageLensConfigurationTaggingResponse> PutStorageLensConfigurationTaggingAsync(PutStorageLensConfigurationTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SubmitMultiRegionAccessPointRoutesResponse> SubmitMultiRegionAccessPointRoutesAsync(SubmitMultiRegionAccessPointRoutesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAccessGrantsLocationResponse> UpdateAccessGrantsLocationAsync(UpdateAccessGrantsLocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateJobPriorityResponse> UpdateJobPriorityAsync(UpdateJobPriorityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateJobStatusResponse> UpdateJobStatusAsync(UpdateJobStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateStorageLensGroupResponse> UpdateStorageLensGroupAsync(UpdateStorageLensGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.S3Control.Internal.AmazonS3ControlEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.S3Control.Internal.AmazonS3ControlEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.S3Control.Internal.AmazonS3ControlExceptionHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.S3Control.Internal.AmazonS3ControlExceptionHandler/<InvokeAsync>d__1`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    private static void ExtractAmazonIdHeader(IExecutionContext executionContext, Exception exception);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<T> <>n__0(IExecutionContext executionContext);
}
public class Amazon.S3Control.Internal.AmazonS3ControlMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.S3Control.Internal.AmazonS3ControlPostUnmarshallHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.S3Control.Internal.AmazonS3ControlPostUnmarshallHandler/<InvokeAsync>d__1`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PostInvoke(IExecutionContext executionContext);
    private static void ProcessResponseHandlers(IExecutionContext executionContext);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<T> <>n__0(IExecutionContext executionContext);
}
[ExtensionAttribute]
public static class Amazon.S3Control.Internal.ArnExtensions : object {
    internal static string ResourceTypeAccessPoint;
    internal static string ResourceTypeBucket;
    internal static string ResourceTypeOutpost;
    [ExtensionAttribute]
public static bool IsOutpostArn(Arn arn);
    [ExtensionAttribute]
public static IS3Resource ParseOutpost(Arn arn, AmazonS3ControlConfig config);
    [ExtensionAttribute]
public static bool IsValidService(Arn arn);
    [ExtensionAttribute]
public static bool HasValidAccountId(Arn arn);
}
public interface Amazon.S3Control.Internal.IS3Resource {
    public S3ResourceType Type { get; public set; }
    public string Name { get; public set; }
    public string Key { get; public set; }
    public string FullResourceName { get; }
    public abstract virtual S3ResourceType get_Type();
    public abstract virtual void set_Type(S3ResourceType value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Key();
    public abstract virtual void set_Key(string value);
    public abstract virtual string get_FullResourceName();
    public abstract virtual void ValidateArnWithClientConfig(IClientConfig config, RegionEndpoint region);
    public abstract virtual Uri GetEndpoint(IClientConfig config);
}
public static class Amazon.S3Control.Internal.S3ArnUtils : object {
    private static Char[] separators;
    public static Char[] ArnSplit;
    public static string S3OutpostsService;
    public static string S3Service;
    private static S3ArnUtils();
    internal static string GetAccountIdBasedOnArn(string requestAccountId, string arnAccountId);
    internal static Uri GetNonStandardOutpostIdEndpoint(IClientConfig config);
    internal static bool ResourcePathContainsOutpostsResource(IRequest request);
    public static bool IsValidOutpostId(string outpostId);
    internal static bool RequestContainsArn(IRequest request, Arn& arn);
    internal static bool DictionaryContainsArn(IDictionary`2<string, string> dictValues, Arn& arn);
    public static void ReplacePathResourceArns(IDictionary`2<string, string> dictValues, string bucketOrAccessPointName);
    public static bool DoesRequestHaveOutpostId(AmazonWebServiceRequest request, String& outpostId);
}
public class Amazon.S3Control.Internal.S3OutpostResource : object {
    private Arn _arn;
    [CompilerGeneratedAttribute]
private S3ResourceType <Type>k__BackingField;
    private string _name;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    private string _outpostId;
    public S3ResourceType Type { get; public set; }
    public string Name { get; public set; }
    public string Key { get; public set; }
    public string OutpostId { get; public set; }
    public string FullResourceName { get; }
    public S3OutpostResource(Arn arn);
    [CompilerGeneratedAttribute]
public sealed virtual S3ResourceType get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(S3ResourceType value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Key();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Key(string value);
    public string get_OutpostId();
    public void set_OutpostId(string value);
    public sealed virtual string get_FullResourceName();
    public sealed virtual void ValidateArnWithClientConfig(IClientConfig config, RegionEndpoint region);
    public sealed virtual Uri GetEndpoint(IClientConfig config);
    internal string GetTypeString(bool inCaps, bool hasSpaces);
}
public enum Amazon.S3Control.Internal.S3ResourceType : Enum {
    public int value__;
    public static S3ResourceType AccessPoint;
    public static S3ResourceType Bucket;
}
public class Amazon.S3Control.JobManifestFieldName : ConstantClass {
    public static JobManifestFieldName Bucket;
    public static JobManifestFieldName Ignore;
    public static JobManifestFieldName Key;
    public static JobManifestFieldName VersionId;
    public JobManifestFieldName(string value);
    private static JobManifestFieldName();
    public static JobManifestFieldName FindValue(string value);
    public static JobManifestFieldName op_Implicit(string value);
}
public class Amazon.S3Control.JobManifestFormat : ConstantClass {
    public static JobManifestFormat S3BatchOperations_CSV_20180820;
    public static JobManifestFormat S3InventoryReport_CSV_20161130;
    public JobManifestFormat(string value);
    private static JobManifestFormat();
    public static JobManifestFormat FindValue(string value);
    public static JobManifestFormat op_Implicit(string value);
}
public class Amazon.S3Control.JobReportFormat : ConstantClass {
    public static JobReportFormat Report_CSV_20180820;
    public JobReportFormat(string value);
    private static JobReportFormat();
    public static JobReportFormat FindValue(string value);
    public static JobReportFormat op_Implicit(string value);
}
public class Amazon.S3Control.JobReportScope : ConstantClass {
    public static JobReportScope AllTasks;
    public static JobReportScope FailedTasksOnly;
    public JobReportScope(string value);
    private static JobReportScope();
    public static JobReportScope FindValue(string value);
    public static JobReportScope op_Implicit(string value);
}
public class Amazon.S3Control.JobStatus : ConstantClass {
    public static JobStatus Active;
    public static JobStatus Cancelled;
    public static JobStatus Cancelling;
    public static JobStatus Complete;
    public static JobStatus Completing;
    public static JobStatus Failed;
    public static JobStatus Failing;
    public static JobStatus New;
    public static JobStatus Paused;
    public static JobStatus Pausing;
    public static JobStatus Preparing;
    public static JobStatus Ready;
    public static JobStatus Suspended;
    public JobStatus(string value);
    private static JobStatus();
    public static JobStatus FindValue(string value);
    public static JobStatus op_Implicit(string value);
}
public class Amazon.S3Control.MetricsStatus : ConstantClass {
    public static MetricsStatus Disabled;
    public static MetricsStatus Enabled;
    public MetricsStatus(string value);
    private static MetricsStatus();
    public static MetricsStatus FindValue(string value);
    public static MetricsStatus op_Implicit(string value);
}
public class Amazon.S3Control.MFADelete : ConstantClass {
    public static MFADelete Disabled;
    public static MFADelete Enabled;
    public MFADelete(string value);
    private static MFADelete();
    public static MFADelete FindValue(string value);
    public static MFADelete op_Implicit(string value);
}
public class Amazon.S3Control.MFADeleteStatus : ConstantClass {
    public static MFADeleteStatus Disabled;
    public static MFADeleteStatus Enabled;
    public MFADeleteStatus(string value);
    private static MFADeleteStatus();
    public static MFADeleteStatus FindValue(string value);
    public static MFADeleteStatus op_Implicit(string value);
}
public class Amazon.S3Control.Model.AbortIncompleteMultipartUpload : object {
    private Nullable`1<int> _daysAfterInitiation;
    public Nullable`1<int> DaysAfterInitiation { get; public set; }
    public Nullable`1<int> get_DaysAfterInitiation();
    public void set_DaysAfterInitiation(Nullable`1<int> value);
    internal bool IsSetDaysAfterInitiation();
}
public class Amazon.S3Control.Model.AccessControlTranslation : object {
    private OwnerOverride _owner;
    [AWSPropertyAttribute]
public OwnerOverride Owner { get; public set; }
    public OwnerOverride get_Owner();
    public void set_Owner(OwnerOverride value);
    internal bool IsSetOwner();
}
public class Amazon.S3Control.Model.AccessGrantsLocationConfiguration : object {
    private string _s3SubPrefix;
    [AWSPropertyAttribute]
public string S3SubPrefix { get; public set; }
    public string get_S3SubPrefix();
    public void set_S3SubPrefix(string value);
    internal bool IsSetS3SubPrefix();
}
public class Amazon.S3Control.Model.AccessPoint : object {
    private string _accessPointArn;
    private string _alias;
    private string _bucket;
    private string _bucketAccountId;
    private string _name;
    private NetworkOrigin _networkOrigin;
    private VpcConfiguration _vpcConfiguration;
    [AWSPropertyAttribute]
public string AccessPointArn { get; public set; }
    [AWSPropertyAttribute]
public string Alias { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string BucketAccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public NetworkOrigin NetworkOrigin { get; public set; }
    public VpcConfiguration VpcConfiguration { get; public set; }
    public string get_AccessPointArn();
    public void set_AccessPointArn(string value);
    internal bool IsSetAccessPointArn();
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_BucketAccountId();
    public void set_BucketAccountId(string value);
    internal bool IsSetBucketAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public NetworkOrigin get_NetworkOrigin();
    public void set_NetworkOrigin(NetworkOrigin value);
    internal bool IsSetNetworkOrigin();
    public VpcConfiguration get_VpcConfiguration();
    public void set_VpcConfiguration(VpcConfiguration value);
    internal bool IsSetVpcConfiguration();
}
public class Amazon.S3Control.Model.AccountLevel : object {
    private ActivityMetrics _activityMetrics;
    private AdvancedCostOptimizationMetrics _advancedCostOptimizationMetrics;
    private AdvancedDataProtectionMetrics _advancedDataProtectionMetrics;
    private BucketLevel _bucketLevel;
    private DetailedStatusCodesMetrics _detailedStatusCodesMetrics;
    private StorageLensGroupLevel _storageLensGroupLevel;
    public ActivityMetrics ActivityMetrics { get; public set; }
    public AdvancedCostOptimizationMetrics AdvancedCostOptimizationMetrics { get; public set; }
    public AdvancedDataProtectionMetrics AdvancedDataProtectionMetrics { get; public set; }
    [AWSPropertyAttribute]
public BucketLevel BucketLevel { get; public set; }
    public DetailedStatusCodesMetrics DetailedStatusCodesMetrics { get; public set; }
    public StorageLensGroupLevel StorageLensGroupLevel { get; public set; }
    public ActivityMetrics get_ActivityMetrics();
    public void set_ActivityMetrics(ActivityMetrics value);
    internal bool IsSetActivityMetrics();
    public AdvancedCostOptimizationMetrics get_AdvancedCostOptimizationMetrics();
    public void set_AdvancedCostOptimizationMetrics(AdvancedCostOptimizationMetrics value);
    internal bool IsSetAdvancedCostOptimizationMetrics();
    public AdvancedDataProtectionMetrics get_AdvancedDataProtectionMetrics();
    public void set_AdvancedDataProtectionMetrics(AdvancedDataProtectionMetrics value);
    internal bool IsSetAdvancedDataProtectionMetrics();
    public BucketLevel get_BucketLevel();
    public void set_BucketLevel(BucketLevel value);
    internal bool IsSetBucketLevel();
    public DetailedStatusCodesMetrics get_DetailedStatusCodesMetrics();
    public void set_DetailedStatusCodesMetrics(DetailedStatusCodesMetrics value);
    internal bool IsSetDetailedStatusCodesMetrics();
    public StorageLensGroupLevel get_StorageLensGroupLevel();
    public void set_StorageLensGroupLevel(StorageLensGroupLevel value);
    internal bool IsSetStorageLensGroupLevel();
}
public class Amazon.S3Control.Model.ActivityMetrics : object {
    private Nullable`1<bool> _isEnabled;
    public Nullable`1<bool> IsEnabled { get; public set; }
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
}
public class Amazon.S3Control.Model.AdvancedCostOptimizationMetrics : object {
    private Nullable`1<bool> _isEnabled;
    public Nullable`1<bool> IsEnabled { get; public set; }
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
}
public class Amazon.S3Control.Model.AdvancedDataProtectionMetrics : object {
    private Nullable`1<bool> _isEnabled;
    public Nullable`1<bool> IsEnabled { get; public set; }
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
}
public class Amazon.S3Control.Model.AssociateAccessGrantsIdentityCenterRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _identityCenterArn;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityCenterArn { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_IdentityCenterArn();
    public void set_IdentityCenterArn(string value);
    internal bool IsSetIdentityCenterArn();
}
public class Amazon.S3Control.Model.AssociateAccessGrantsIdentityCenterResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.AsyncErrorDetails : object {
    private string _code;
    private string _message;
    private string _requestId;
    private string _resource;
    [AWSPropertyAttribute]
public string Code { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public string RequestId { get; public set; }
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_RequestId();
    public void set_RequestId(string value);
    internal bool IsSetRequestId();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
}
public class Amazon.S3Control.Model.AsyncOperation : object {
    private Nullable`1<DateTime> _creationTime;
    private AsyncOperationName _operation;
    private AsyncRequestParameters _requestParameters;
    private string _requestStatus;
    private string _requestTokenARN;
    private AsyncResponseDetails _responseDetails;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public AsyncOperationName Operation { get; public set; }
    public AsyncRequestParameters RequestParameters { get; public set; }
    public string RequestStatus { get; public set; }
    [AWSPropertyAttribute]
public string RequestTokenARN { get; public set; }
    public AsyncResponseDetails ResponseDetails { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public AsyncOperationName get_Operation();
    public void set_Operation(AsyncOperationName value);
    internal bool IsSetOperation();
    public AsyncRequestParameters get_RequestParameters();
    public void set_RequestParameters(AsyncRequestParameters value);
    internal bool IsSetRequestParameters();
    public string get_RequestStatus();
    public void set_RequestStatus(string value);
    internal bool IsSetRequestStatus();
    public string get_RequestTokenARN();
    public void set_RequestTokenARN(string value);
    internal bool IsSetRequestTokenARN();
    public AsyncResponseDetails get_ResponseDetails();
    public void set_ResponseDetails(AsyncResponseDetails value);
    internal bool IsSetResponseDetails();
}
public class Amazon.S3Control.Model.AsyncRequestParameters : object {
    private CreateMultiRegionAccessPointInput _createMultiRegionAccessPointRequest;
    private DeleteMultiRegionAccessPointInput _deleteMultiRegionAccessPointRequest;
    private PutMultiRegionAccessPointPolicyInput _putMultiRegionAccessPointPolicyRequest;
    public CreateMultiRegionAccessPointInput CreateMultiRegionAccessPointRequest { get; public set; }
    public DeleteMultiRegionAccessPointInput DeleteMultiRegionAccessPointRequest { get; public set; }
    public PutMultiRegionAccessPointPolicyInput PutMultiRegionAccessPointPolicyRequest { get; public set; }
    public CreateMultiRegionAccessPointInput get_CreateMultiRegionAccessPointRequest();
    public void set_CreateMultiRegionAccessPointRequest(CreateMultiRegionAccessPointInput value);
    internal bool IsSetCreateMultiRegionAccessPointRequest();
    public DeleteMultiRegionAccessPointInput get_DeleteMultiRegionAccessPointRequest();
    public void set_DeleteMultiRegionAccessPointRequest(DeleteMultiRegionAccessPointInput value);
    internal bool IsSetDeleteMultiRegionAccessPointRequest();
    public PutMultiRegionAccessPointPolicyInput get_PutMultiRegionAccessPointPolicyRequest();
    public void set_PutMultiRegionAccessPointPolicyRequest(PutMultiRegionAccessPointPolicyInput value);
    internal bool IsSetPutMultiRegionAccessPointPolicyRequest();
}
public class Amazon.S3Control.Model.AsyncResponseDetails : object {
    private AsyncErrorDetails _errorDetails;
    private MultiRegionAccessPointsAsyncResponse _multiRegionAccessPointDetails;
    public AsyncErrorDetails ErrorDetails { get; public set; }
    public MultiRegionAccessPointsAsyncResponse MultiRegionAccessPointDetails { get; public set; }
    public AsyncErrorDetails get_ErrorDetails();
    public void set_ErrorDetails(AsyncErrorDetails value);
    internal bool IsSetErrorDetails();
    public MultiRegionAccessPointsAsyncResponse get_MultiRegionAccessPointDetails();
    public void set_MultiRegionAccessPointDetails(MultiRegionAccessPointsAsyncResponse value);
    internal bool IsSetMultiRegionAccessPointDetails();
}
public class Amazon.S3Control.Model.AwsLambdaTransformation : object {
    private string _functionArn;
    private string _functionPayload;
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    public string FunctionPayload { get; public set; }
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionPayload();
    public void set_FunctionPayload(string value);
    internal bool IsSetFunctionPayload();
}
public class Amazon.S3Control.Model.BadRequestException : AmazonS3ControlException {
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
    public BadRequestException(Exception innerException);
    public BadRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BadRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.BucketAlreadyExistsException : AmazonS3ControlException {
    public BucketAlreadyExistsException(string message);
    public BucketAlreadyExistsException(string message, Exception innerException);
    public BucketAlreadyExistsException(Exception innerException);
    public BucketAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BucketAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.BucketAlreadyOwnedByYouException : AmazonS3ControlException {
    public BucketAlreadyOwnedByYouException(string message);
    public BucketAlreadyOwnedByYouException(string message, Exception innerException);
    public BucketAlreadyOwnedByYouException(Exception innerException);
    public BucketAlreadyOwnedByYouException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BucketAlreadyOwnedByYouException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.BucketLevel : object {
    private ActivityMetrics _activityMetrics;
    private AdvancedCostOptimizationMetrics _advancedCostOptimizationMetrics;
    private AdvancedDataProtectionMetrics _advancedDataProtectionMetrics;
    private DetailedStatusCodesMetrics _detailedStatusCodesMetrics;
    private PrefixLevel _prefixLevel;
    public ActivityMetrics ActivityMetrics { get; public set; }
    public AdvancedCostOptimizationMetrics AdvancedCostOptimizationMetrics { get; public set; }
    public AdvancedDataProtectionMetrics AdvancedDataProtectionMetrics { get; public set; }
    public DetailedStatusCodesMetrics DetailedStatusCodesMetrics { get; public set; }
    public PrefixLevel PrefixLevel { get; public set; }
    public ActivityMetrics get_ActivityMetrics();
    public void set_ActivityMetrics(ActivityMetrics value);
    internal bool IsSetActivityMetrics();
    public AdvancedCostOptimizationMetrics get_AdvancedCostOptimizationMetrics();
    public void set_AdvancedCostOptimizationMetrics(AdvancedCostOptimizationMetrics value);
    internal bool IsSetAdvancedCostOptimizationMetrics();
    public AdvancedDataProtectionMetrics get_AdvancedDataProtectionMetrics();
    public void set_AdvancedDataProtectionMetrics(AdvancedDataProtectionMetrics value);
    internal bool IsSetAdvancedDataProtectionMetrics();
    public DetailedStatusCodesMetrics get_DetailedStatusCodesMetrics();
    public void set_DetailedStatusCodesMetrics(DetailedStatusCodesMetrics value);
    internal bool IsSetDetailedStatusCodesMetrics();
    public PrefixLevel get_PrefixLevel();
    public void set_PrefixLevel(PrefixLevel value);
    internal bool IsSetPrefixLevel();
}
public class Amazon.S3Control.Model.CloudWatchMetrics : object {
    private Nullable`1<bool> _isEnabled;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsEnabled { get; public set; }
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
}
public class Amazon.S3Control.Model.CreateAccessGrantRequest : AmazonS3ControlRequest {
    private AccessGrantsLocationConfiguration _accessGrantsLocationConfiguration;
    private string _accessGrantsLocationId;
    private string _accountId;
    private string _applicationArn;
    private Grantee _grantee;
    private Permission _permission;
    private S3PrefixType _s3PrefixType;
    private List`1<Tag> _tags;
    public AccessGrantsLocationConfiguration AccessGrantsLocationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ApplicationArn { get; public set; }
    [AWSPropertyAttribute]
public Grantee Grantee { get; public set; }
    [AWSPropertyAttribute]
public Permission Permission { get; public set; }
    public S3PrefixType S3PrefixType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public AccessGrantsLocationConfiguration get_AccessGrantsLocationConfiguration();
    public void set_AccessGrantsLocationConfiguration(AccessGrantsLocationConfiguration value);
    internal bool IsSetAccessGrantsLocationConfiguration();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ApplicationArn();
    public void set_ApplicationArn(string value);
    internal bool IsSetApplicationArn();
    public Grantee get_Grantee();
    public void set_Grantee(Grantee value);
    internal bool IsSetGrantee();
    public Permission get_Permission();
    public void set_Permission(Permission value);
    internal bool IsSetPermission();
    public S3PrefixType get_S3PrefixType();
    public void set_S3PrefixType(S3PrefixType value);
    internal bool IsSetS3PrefixType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.CreateAccessGrantResponse : AmazonWebServiceResponse {
    private string _accessGrantArn;
    private string _accessGrantId;
    private AccessGrantsLocationConfiguration _accessGrantsLocationConfiguration;
    private string _accessGrantsLocationId;
    private string _applicationArn;
    private Nullable`1<DateTime> _createdAt;
    private Grantee _grantee;
    private string _grantScope;
    private Permission _permission;
    [AWSPropertyAttribute]
public string AccessGrantArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantId { get; public set; }
    public AccessGrantsLocationConfiguration AccessGrantsLocationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    [AWSPropertyAttribute]
public string ApplicationArn { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    public Grantee Grantee { get; public set; }
    [AWSPropertyAttribute]
public string GrantScope { get; public set; }
    public Permission Permission { get; public set; }
    public string get_AccessGrantArn();
    public void set_AccessGrantArn(string value);
    internal bool IsSetAccessGrantArn();
    public string get_AccessGrantId();
    public void set_AccessGrantId(string value);
    internal bool IsSetAccessGrantId();
    public AccessGrantsLocationConfiguration get_AccessGrantsLocationConfiguration();
    public void set_AccessGrantsLocationConfiguration(AccessGrantsLocationConfiguration value);
    internal bool IsSetAccessGrantsLocationConfiguration();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public string get_ApplicationArn();
    public void set_ApplicationArn(string value);
    internal bool IsSetApplicationArn();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public Grantee get_Grantee();
    public void set_Grantee(Grantee value);
    internal bool IsSetGrantee();
    public string get_GrantScope();
    public void set_GrantScope(string value);
    internal bool IsSetGrantScope();
    public Permission get_Permission();
    public void set_Permission(Permission value);
    internal bool IsSetPermission();
}
public class Amazon.S3Control.Model.CreateAccessGrantsInstanceRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _identityCenterArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityCenterArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_IdentityCenterArn();
    public void set_IdentityCenterArn(string value);
    internal bool IsSetIdentityCenterArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.CreateAccessGrantsInstanceResponse : AmazonWebServiceResponse {
    private string _accessGrantsInstanceArn;
    private string _accessGrantsInstanceId;
    private Nullable`1<DateTime> _createdAt;
    private string _identityCenterArn;
    [AWSPropertyAttribute]
public string AccessGrantsInstanceArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsInstanceId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string IdentityCenterArn { get; public set; }
    public string get_AccessGrantsInstanceArn();
    public void set_AccessGrantsInstanceArn(string value);
    internal bool IsSetAccessGrantsInstanceArn();
    public string get_AccessGrantsInstanceId();
    public void set_AccessGrantsInstanceId(string value);
    internal bool IsSetAccessGrantsInstanceId();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_IdentityCenterArn();
    public void set_IdentityCenterArn(string value);
    internal bool IsSetIdentityCenterArn();
}
public class Amazon.S3Control.Model.CreateAccessGrantsLocationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _iamRoleArn;
    private string _locationScope;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string IAMRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string LocationScope { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_IAMRoleArn();
    public void set_IAMRoleArn(string value);
    internal bool IsSetIAMRoleArn();
    public string get_LocationScope();
    public void set_LocationScope(string value);
    internal bool IsSetLocationScope();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.CreateAccessGrantsLocationResponse : AmazonWebServiceResponse {
    private string _accessGrantsLocationArn;
    private string _accessGrantsLocationId;
    private Nullable`1<DateTime> _createdAt;
    private string _iamRoleArn;
    private string _locationScope;
    [AWSPropertyAttribute]
public string AccessGrantsLocationArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string IAMRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string LocationScope { get; public set; }
    public string get_AccessGrantsLocationArn();
    public void set_AccessGrantsLocationArn(string value);
    internal bool IsSetAccessGrantsLocationArn();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_IAMRoleArn();
    public void set_IAMRoleArn(string value);
    internal bool IsSetIAMRoleArn();
    public string get_LocationScope();
    public void set_LocationScope(string value);
    internal bool IsSetLocationScope();
}
public class Amazon.S3Control.Model.CreateAccessPointForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private ObjectLambdaConfiguration _configuration;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public ObjectLambdaConfiguration Configuration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public ObjectLambdaConfiguration get_Configuration();
    public void set_Configuration(ObjectLambdaConfiguration value);
    internal bool IsSetConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.CreateAccessPointForObjectLambdaResponse : AmazonWebServiceResponse {
    private ObjectLambdaAccessPointAlias _alias;
    private string _objectLambdaAccessPointArn;
    public ObjectLambdaAccessPointAlias Alias { get; public set; }
    [AWSPropertyAttribute]
public string ObjectLambdaAccessPointArn { get; public set; }
    public ObjectLambdaAccessPointAlias get_Alias();
    public void set_Alias(ObjectLambdaAccessPointAlias value);
    internal bool IsSetAlias();
    public string get_ObjectLambdaAccessPointArn();
    public void set_ObjectLambdaAccessPointArn(string value);
    internal bool IsSetObjectLambdaAccessPointArn();
}
public class Amazon.S3Control.Model.CreateAccessPointRequest : AmazonS3ControlRequest {
    [CompilerGeneratedAttribute]
private string <OutpostId>k__BackingField;
    private string _accountId;
    private string _bucket;
    private string _bucketAccountId;
    private string _name;
    private PublicAccessBlockConfiguration _publicAccessBlockConfiguration;
    private VpcConfiguration _vpcConfiguration;
    internal string OutpostId { get; internal set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string BucketAccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; public set; }
    public VpcConfiguration VpcConfiguration { get; public set; }
    [CompilerGeneratedAttribute]
internal string get_OutpostId();
    [CompilerGeneratedAttribute]
internal void set_OutpostId(string value);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_BucketAccountId();
    public void set_BucketAccountId(string value);
    internal bool IsSetBucketAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PublicAccessBlockConfiguration get_PublicAccessBlockConfiguration();
    public void set_PublicAccessBlockConfiguration(PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlockConfiguration();
    public VpcConfiguration get_VpcConfiguration();
    public void set_VpcConfiguration(VpcConfiguration value);
    internal bool IsSetVpcConfiguration();
}
public class Amazon.S3Control.Model.CreateAccessPointResponse : AmazonWebServiceResponse {
    private string _accessPointArn;
    private string _alias;
    [AWSPropertyAttribute]
public string AccessPointArn { get; public set; }
    [AWSPropertyAttribute]
public string Alias { get; public set; }
    public string get_AccessPointArn();
    public void set_AccessPointArn(string value);
    internal bool IsSetAccessPointArn();
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
}
public class Amazon.S3Control.Model.CreateBucketConfiguration : object {
    private BucketLocationConstraint _locationConstraint;
    public BucketLocationConstraint LocationConstraint { get; public set; }
    public BucketLocationConstraint get_LocationConstraint();
    public void set_LocationConstraint(BucketLocationConstraint value);
    internal bool IsSetLocationConstraint();
}
public class Amazon.S3Control.Model.CreateBucketRequest : AmazonS3ControlRequest {
    private BucketCannedACL _acl;
    private string _bucket;
    private CreateBucketConfiguration _createBucketConfiguration;
    private string _grantFullControl;
    private string _grantRead;
    private string _grantReadACP;
    private string _grantWrite;
    private string _grantWriteACP;
    private Nullable`1<bool> _objectLockEnabledForBucket;
    private string _outpostId;
    public BucketCannedACL ACL { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public CreateBucketConfiguration CreateBucketConfiguration { get; public set; }
    public string GrantFullControl { get; public set; }
    public string GrantRead { get; public set; }
    public string GrantReadACP { get; public set; }
    public string GrantWrite { get; public set; }
    public string GrantWriteACP { get; public set; }
    public Nullable`1<bool> ObjectLockEnabledForBucket { get; public set; }
    [AWSPropertyAttribute]
public string OutpostId { get; public set; }
    public BucketCannedACL get_ACL();
    public void set_ACL(BucketCannedACL value);
    internal bool IsSetACL();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public CreateBucketConfiguration get_CreateBucketConfiguration();
    public void set_CreateBucketConfiguration(CreateBucketConfiguration value);
    internal bool IsSetCreateBucketConfiguration();
    public string get_GrantFullControl();
    public void set_GrantFullControl(string value);
    internal bool IsSetGrantFullControl();
    public string get_GrantRead();
    public void set_GrantRead(string value);
    internal bool IsSetGrantRead();
    public string get_GrantReadACP();
    public void set_GrantReadACP(string value);
    internal bool IsSetGrantReadACP();
    public string get_GrantWrite();
    public void set_GrantWrite(string value);
    internal bool IsSetGrantWrite();
    public string get_GrantWriteACP();
    public void set_GrantWriteACP(string value);
    internal bool IsSetGrantWriteACP();
    public Nullable`1<bool> get_ObjectLockEnabledForBucket();
    public void set_ObjectLockEnabledForBucket(Nullable`1<bool> value);
    internal bool IsSetObjectLockEnabledForBucket();
    public string get_OutpostId();
    public void set_OutpostId(string value);
    internal bool IsSetOutpostId();
}
public class Amazon.S3Control.Model.CreateBucketResponse : AmazonWebServiceResponse {
    private string _bucketArn;
    private string _location;
    [AWSPropertyAttribute]
public string BucketArn { get; public set; }
    public string Location { get; public set; }
    public string get_BucketArn();
    public void set_BucketArn(string value);
    internal bool IsSetBucketArn();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.S3Control.Model.CreateJobRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _clientRequestToken;
    private Nullable`1<bool> _confirmationRequired;
    private string _description;
    private JobManifest _manifest;
    private JobManifestGenerator _manifestGenerator;
    private JobOperation _operation;
    private Nullable`1<int> _priority;
    private JobReport _report;
    private string _roleArn;
    private List`1<S3Tag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ClientRequestToken { get; public set; }
    public Nullable`1<bool> ConfirmationRequired { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public JobManifest Manifest { get; public set; }
    public JobManifestGenerator ManifestGenerator { get; public set; }
    [AWSPropertyAttribute]
public JobOperation Operation { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    [AWSPropertyAttribute]
public JobReport Report { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public List`1<S3Tag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ClientRequestToken();
    public void set_ClientRequestToken(string value);
    internal bool IsSetClientRequestToken();
    public Nullable`1<bool> get_ConfirmationRequired();
    public void set_ConfirmationRequired(Nullable`1<bool> value);
    internal bool IsSetConfirmationRequired();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public JobManifest get_Manifest();
    public void set_Manifest(JobManifest value);
    internal bool IsSetManifest();
    public JobManifestGenerator get_ManifestGenerator();
    public void set_ManifestGenerator(JobManifestGenerator value);
    internal bool IsSetManifestGenerator();
    public JobOperation get_Operation();
    public void set_Operation(JobOperation value);
    internal bool IsSetOperation();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public JobReport get_Report();
    public void set_Report(JobReport value);
    internal bool IsSetReport();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public List`1<S3Tag> get_Tags();
    public void set_Tags(List`1<S3Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.CreateJobResponse : AmazonWebServiceResponse {
    private string _jobId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.S3Control.Model.CreateMultiRegionAccessPointInput : object {
    private string _name;
    private PublicAccessBlockConfiguration _publicAccessBlock;
    private List`1<Region> _regions;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PublicAccessBlockConfiguration PublicAccessBlock { get; public set; }
    [AWSPropertyAttribute]
public List`1<Region> Regions { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PublicAccessBlockConfiguration get_PublicAccessBlock();
    public void set_PublicAccessBlock(PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlock();
    public List`1<Region> get_Regions();
    public void set_Regions(List`1<Region> value);
    internal bool IsSetRegions();
}
public class Amazon.S3Control.Model.CreateMultiRegionAccessPointRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _clientToken;
    private CreateMultiRegionAccessPointInput _details;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public CreateMultiRegionAccessPointInput Details { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public CreateMultiRegionAccessPointInput get_Details();
    public void set_Details(CreateMultiRegionAccessPointInput value);
    internal bool IsSetDetails();
}
public class Amazon.S3Control.Model.CreateMultiRegionAccessPointResponse : AmazonWebServiceResponse {
    private string _requestTokenARN;
    [AWSPropertyAttribute]
public string RequestTokenARN { get; public set; }
    public string get_RequestTokenARN();
    public void set_RequestTokenARN(string value);
    internal bool IsSetRequestTokenARN();
}
public class Amazon.S3Control.Model.CreateStorageLensGroupRequest : AmazonS3ControlRequest {
    private string _accountId;
    private StorageLensGroup _storageLensGroup;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public StorageLensGroup StorageLensGroup { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public StorageLensGroup get_StorageLensGroup();
    public void set_StorageLensGroup(StorageLensGroup value);
    internal bool IsSetStorageLensGroup();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.CreateStorageLensGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.Credentials : object {
    private string _accessKeyId;
    private Nullable`1<DateTime> _expiration;
    private string _secretAccessKey;
    private string _sessionToken;
    [AWSPropertyAttribute]
public string AccessKeyId { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    [AWSPropertyAttribute]
public string SecretAccessKey { get; public set; }
    [AWSPropertyAttribute]
public string SessionToken { get; public set; }
    public string get_AccessKeyId();
    public void set_AccessKeyId(string value);
    internal bool IsSetAccessKeyId();
    public Nullable`1<DateTime> get_Expiration();
    public void set_Expiration(Nullable`1<DateTime> value);
    internal bool IsSetExpiration();
    public string get_SecretAccessKey();
    public void set_SecretAccessKey(string value);
    internal bool IsSetSecretAccessKey();
    public string get_SessionToken();
    public void set_SessionToken(string value);
    internal bool IsSetSessionToken();
}
public class Amazon.S3Control.Model.DeleteAccessGrantRequest : AmazonS3ControlRequest {
    private string _accessGrantId;
    private string _accountId;
    [AWSPropertyAttribute]
public string AccessGrantId { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccessGrantId();
    public void set_AccessGrantId(string value);
    internal bool IsSetAccessGrantId();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.DeleteAccessGrantResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteAccessGrantsInstanceRequest : AmazonS3ControlRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.DeleteAccessGrantsInstanceResourcePolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.DeleteAccessGrantsInstanceResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteAccessGrantsInstanceResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteAccessGrantsLocationRequest : AmazonS3ControlRequest {
    private string _accessGrantsLocationId;
    private string _accountId;
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.DeleteAccessGrantsLocationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteAccessPointForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.DeleteAccessPointForObjectLambdaResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteAccessPointPolicyForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.DeleteAccessPointPolicyForObjectLambdaResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteAccessPointPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.DeleteAccessPointPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteAccessPointRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.DeleteAccessPointResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteBucketLifecycleConfigurationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.DeleteBucketLifecycleConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteBucketPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.DeleteBucketPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteBucketReplicationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.DeleteBucketReplicationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteBucketRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.DeleteBucketResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteBucketTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.DeleteBucketTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteJobTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _jobId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.S3Control.Model.DeleteJobTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteMarkerReplication : object {
    private DeleteMarkerReplicationStatus _status;
    [AWSPropertyAttribute]
public DeleteMarkerReplicationStatus Status { get; public set; }
    public DeleteMarkerReplicationStatus get_Status();
    public void set_Status(DeleteMarkerReplicationStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.DeleteMultiRegionAccessPointInput : object {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.DeleteMultiRegionAccessPointRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _clientToken;
    private DeleteMultiRegionAccessPointInput _details;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public DeleteMultiRegionAccessPointInput Details { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public DeleteMultiRegionAccessPointInput get_Details();
    public void set_Details(DeleteMultiRegionAccessPointInput value);
    internal bool IsSetDetails();
}
public class Amazon.S3Control.Model.DeleteMultiRegionAccessPointResponse : AmazonWebServiceResponse {
    private string _requestTokenARN;
    [AWSPropertyAttribute]
public string RequestTokenARN { get; public set; }
    public string get_RequestTokenARN();
    public void set_RequestTokenARN(string value);
    internal bool IsSetRequestTokenARN();
}
public class Amazon.S3Control.Model.DeletePublicAccessBlockRequest : AmazonS3ControlRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.DeletePublicAccessBlockResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteStorageLensConfigurationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _configId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ConfigId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ConfigId();
    public void set_ConfigId(string value);
    internal bool IsSetConfigId();
}
public class Amazon.S3Control.Model.DeleteStorageLensConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteStorageLensConfigurationTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _configId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ConfigId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ConfigId();
    public void set_ConfigId(string value);
    internal bool IsSetConfigId();
}
public class Amazon.S3Control.Model.DeleteStorageLensConfigurationTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DeleteStorageLensGroupRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.DeleteStorageLensGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.DescribeJobRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _jobId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.S3Control.Model.DescribeJobResponse : AmazonWebServiceResponse {
    private JobDescriptor _job;
    public JobDescriptor Job { get; public set; }
    public JobDescriptor get_Job();
    public void set_Job(JobDescriptor value);
    internal bool IsSetJob();
}
public class Amazon.S3Control.Model.DescribeMultiRegionAccessPointOperationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _requestTokenARN;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string RequestTokenARN { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_RequestTokenARN();
    public void set_RequestTokenARN(string value);
    internal bool IsSetRequestTokenARN();
}
public class Amazon.S3Control.Model.DescribeMultiRegionAccessPointOperationResponse : AmazonWebServiceResponse {
    private AsyncOperation _asyncOperation;
    public AsyncOperation AsyncOperation { get; public set; }
    public AsyncOperation get_AsyncOperation();
    public void set_AsyncOperation(AsyncOperation value);
    internal bool IsSetAsyncOperation();
}
public class Amazon.S3Control.Model.Destination : object {
    private AccessControlTranslation _accessControlTranslation;
    private string _account;
    private string _bucket;
    private EncryptionConfiguration _encryptionConfiguration;
    private Metrics _metrics;
    private ReplicationTime _replicationTime;
    private ReplicationStorageClass _storageClass;
    public AccessControlTranslation AccessControlTranslation { get; public set; }
    [AWSPropertyAttribute]
public string Account { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public EncryptionConfiguration EncryptionConfiguration { get; public set; }
    public Metrics Metrics { get; public set; }
    public ReplicationTime ReplicationTime { get; public set; }
    public ReplicationStorageClass StorageClass { get; public set; }
    public AccessControlTranslation get_AccessControlTranslation();
    public void set_AccessControlTranslation(AccessControlTranslation value);
    internal bool IsSetAccessControlTranslation();
    public string get_Account();
    public void set_Account(string value);
    internal bool IsSetAccount();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public EncryptionConfiguration get_EncryptionConfiguration();
    public void set_EncryptionConfiguration(EncryptionConfiguration value);
    internal bool IsSetEncryptionConfiguration();
    public Metrics get_Metrics();
    public void set_Metrics(Metrics value);
    internal bool IsSetMetrics();
    public ReplicationTime get_ReplicationTime();
    public void set_ReplicationTime(ReplicationTime value);
    internal bool IsSetReplicationTime();
    public ReplicationStorageClass get_StorageClass();
    public void set_StorageClass(ReplicationStorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3Control.Model.DetailedStatusCodesMetrics : object {
    private Nullable`1<bool> _isEnabled;
    public Nullable`1<bool> IsEnabled { get; public set; }
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
}
public class Amazon.S3Control.Model.DissociateAccessGrantsIdentityCenterRequest : AmazonS3ControlRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.DissociateAccessGrantsIdentityCenterResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.EncryptionConfiguration : object {
    private string _replicaKmsKeyID;
    public string ReplicaKmsKeyID { get; public set; }
    public string get_ReplicaKmsKeyID();
    public void set_ReplicaKmsKeyID(string value);
    internal bool IsSetReplicaKmsKeyID();
}
public class Amazon.S3Control.Model.EstablishedMultiRegionAccessPointPolicy : object {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.Exclude : object {
    private List`1<string> _buckets;
    private List`1<string> _regions;
    public List`1<string> Buckets { get; public set; }
    public List`1<string> Regions { get; public set; }
    public List`1<string> get_Buckets();
    public void set_Buckets(List`1<string> value);
    internal bool IsSetBuckets();
    public List`1<string> get_Regions();
    public void set_Regions(List`1<string> value);
    internal bool IsSetRegions();
}
public class Amazon.S3Control.Model.ExistingObjectReplication : object {
    private ExistingObjectReplicationStatus _status;
    [AWSPropertyAttribute]
public ExistingObjectReplicationStatus Status { get; public set; }
    public ExistingObjectReplicationStatus get_Status();
    public void set_Status(ExistingObjectReplicationStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.GeneratedManifestEncryption : object {
    private SSEKMSEncryption _ssekms;
    private SSES3Encryption _sses3;
    public SSEKMSEncryption SSEKMS { get; public set; }
    public SSES3Encryption SSES3 { get; public set; }
    public SSEKMSEncryption get_SSEKMS();
    public void set_SSEKMS(SSEKMSEncryption value);
    internal bool IsSetSSEKMS();
    public SSES3Encryption get_SSES3();
    public void set_SSES3(SSES3Encryption value);
    internal bool IsSetSSES3();
}
public class Amazon.S3Control.Model.GetAccessGrantRequest : AmazonS3ControlRequest {
    private string _accessGrantId;
    private string _accountId;
    [AWSPropertyAttribute]
public string AccessGrantId { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccessGrantId();
    public void set_AccessGrantId(string value);
    internal bool IsSetAccessGrantId();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.GetAccessGrantResponse : AmazonWebServiceResponse {
    private string _accessGrantArn;
    private string _accessGrantId;
    private AccessGrantsLocationConfiguration _accessGrantsLocationConfiguration;
    private string _accessGrantsLocationId;
    private string _applicationArn;
    private Nullable`1<DateTime> _createdAt;
    private Grantee _grantee;
    private string _grantScope;
    private Permission _permission;
    [AWSPropertyAttribute]
public string AccessGrantArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantId { get; public set; }
    public AccessGrantsLocationConfiguration AccessGrantsLocationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    [AWSPropertyAttribute]
public string ApplicationArn { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    public Grantee Grantee { get; public set; }
    [AWSPropertyAttribute]
public string GrantScope { get; public set; }
    public Permission Permission { get; public set; }
    public string get_AccessGrantArn();
    public void set_AccessGrantArn(string value);
    internal bool IsSetAccessGrantArn();
    public string get_AccessGrantId();
    public void set_AccessGrantId(string value);
    internal bool IsSetAccessGrantId();
    public AccessGrantsLocationConfiguration get_AccessGrantsLocationConfiguration();
    public void set_AccessGrantsLocationConfiguration(AccessGrantsLocationConfiguration value);
    internal bool IsSetAccessGrantsLocationConfiguration();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public string get_ApplicationArn();
    public void set_ApplicationArn(string value);
    internal bool IsSetApplicationArn();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public Grantee get_Grantee();
    public void set_Grantee(Grantee value);
    internal bool IsSetGrantee();
    public string get_GrantScope();
    public void set_GrantScope(string value);
    internal bool IsSetGrantScope();
    public Permission get_Permission();
    public void set_Permission(Permission value);
    internal bool IsSetPermission();
}
public class Amazon.S3Control.Model.GetAccessGrantsInstanceForPrefixRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _s3Prefix;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string S3Prefix { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
}
public class Amazon.S3Control.Model.GetAccessGrantsInstanceForPrefixResponse : AmazonWebServiceResponse {
    private string _accessGrantsInstanceArn;
    private string _accessGrantsInstanceId;
    [AWSPropertyAttribute]
public string AccessGrantsInstanceArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsInstanceId { get; public set; }
    public string get_AccessGrantsInstanceArn();
    public void set_AccessGrantsInstanceArn(string value);
    internal bool IsSetAccessGrantsInstanceArn();
    public string get_AccessGrantsInstanceId();
    public void set_AccessGrantsInstanceId(string value);
    internal bool IsSetAccessGrantsInstanceId();
}
public class Amazon.S3Control.Model.GetAccessGrantsInstanceRequest : AmazonS3ControlRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.GetAccessGrantsInstanceResourcePolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.GetAccessGrantsInstanceResourcePolicyResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdAt;
    private string _organization;
    private string _policy;
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string Organization { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Organization();
    public void set_Organization(string value);
    internal bool IsSetOrganization();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.GetAccessGrantsInstanceResponse : AmazonWebServiceResponse {
    private string _accessGrantsInstanceArn;
    private string _accessGrantsInstanceId;
    private Nullable`1<DateTime> _createdAt;
    private string _identityCenterArn;
    [AWSPropertyAttribute]
public string AccessGrantsInstanceArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsInstanceId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string IdentityCenterArn { get; public set; }
    public string get_AccessGrantsInstanceArn();
    public void set_AccessGrantsInstanceArn(string value);
    internal bool IsSetAccessGrantsInstanceArn();
    public string get_AccessGrantsInstanceId();
    public void set_AccessGrantsInstanceId(string value);
    internal bool IsSetAccessGrantsInstanceId();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_IdentityCenterArn();
    public void set_IdentityCenterArn(string value);
    internal bool IsSetIdentityCenterArn();
}
public class Amazon.S3Control.Model.GetAccessGrantsLocationRequest : AmazonS3ControlRequest {
    private string _accessGrantsLocationId;
    private string _accountId;
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.GetAccessGrantsLocationResponse : AmazonWebServiceResponse {
    private string _accessGrantsLocationArn;
    private string _accessGrantsLocationId;
    private Nullable`1<DateTime> _createdAt;
    private string _iamRoleArn;
    private string _locationScope;
    [AWSPropertyAttribute]
public string AccessGrantsLocationArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string IAMRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string LocationScope { get; public set; }
    public string get_AccessGrantsLocationArn();
    public void set_AccessGrantsLocationArn(string value);
    internal bool IsSetAccessGrantsLocationArn();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_IAMRoleArn();
    public void set_IAMRoleArn(string value);
    internal bool IsSetIAMRoleArn();
    public string get_LocationScope();
    public void set_LocationScope(string value);
    internal bool IsSetLocationScope();
}
public class Amazon.S3Control.Model.GetAccessPointConfigurationForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetAccessPointConfigurationForObjectLambdaResponse : AmazonWebServiceResponse {
    private ObjectLambdaConfiguration _configuration;
    public ObjectLambdaConfiguration Configuration { get; public set; }
    public ObjectLambdaConfiguration get_Configuration();
    public void set_Configuration(ObjectLambdaConfiguration value);
    internal bool IsSetConfiguration();
}
public class Amazon.S3Control.Model.GetAccessPointForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetAccessPointForObjectLambdaResponse : AmazonWebServiceResponse {
    private ObjectLambdaAccessPointAlias _alias;
    private Nullable`1<DateTime> _creationDate;
    private string _name;
    private PublicAccessBlockConfiguration _publicAccessBlockConfiguration;
    public ObjectLambdaAccessPointAlias Alias { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; public set; }
    public ObjectLambdaAccessPointAlias get_Alias();
    public void set_Alias(ObjectLambdaAccessPointAlias value);
    internal bool IsSetAlias();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PublicAccessBlockConfiguration get_PublicAccessBlockConfiguration();
    public void set_PublicAccessBlockConfiguration(PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlockConfiguration();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyForObjectLambdaResponse : AmazonWebServiceResponse {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyStatusForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyStatusForObjectLambdaResponse : AmazonWebServiceResponse {
    private PolicyStatus _policyStatus;
    public PolicyStatus PolicyStatus { get; public set; }
    public PolicyStatus get_PolicyStatus();
    public void set_PolicyStatus(PolicyStatus value);
    internal bool IsSetPolicyStatus();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyStatusRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetAccessPointPolicyStatusResponse : AmazonWebServiceResponse {
    private PolicyStatus _policyStatus;
    public PolicyStatus PolicyStatus { get; public set; }
    public PolicyStatus get_PolicyStatus();
    public void set_PolicyStatus(PolicyStatus value);
    internal bool IsSetPolicyStatus();
}
public class Amazon.S3Control.Model.GetAccessPointRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetAccessPointResponse : AmazonWebServiceResponse {
    private string _accessPointArn;
    private string _alias;
    private string _bucket;
    private string _bucketAccountId;
    private Nullable`1<DateTime> _creationDate;
    private Dictionary`2<string, string> _endpoints;
    private string _name;
    private NetworkOrigin _networkOrigin;
    private PublicAccessBlockConfiguration _publicAccessBlockConfiguration;
    private VpcConfiguration _vpcConfiguration;
    [AWSPropertyAttribute]
public string AccessPointArn { get; public set; }
    [AWSPropertyAttribute]
public string Alias { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string BucketAccountId { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    public Dictionary`2<string, string> Endpoints { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public NetworkOrigin NetworkOrigin { get; public set; }
    public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; public set; }
    public VpcConfiguration VpcConfiguration { get; public set; }
    public string get_AccessPointArn();
    public void set_AccessPointArn(string value);
    internal bool IsSetAccessPointArn();
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_BucketAccountId();
    public void set_BucketAccountId(string value);
    internal bool IsSetBucketAccountId();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public Dictionary`2<string, string> get_Endpoints();
    public void set_Endpoints(Dictionary`2<string, string> value);
    internal bool IsSetEndpoints();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public NetworkOrigin get_NetworkOrigin();
    public void set_NetworkOrigin(NetworkOrigin value);
    internal bool IsSetNetworkOrigin();
    public PublicAccessBlockConfiguration get_PublicAccessBlockConfiguration();
    public void set_PublicAccessBlockConfiguration(PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlockConfiguration();
    public VpcConfiguration get_VpcConfiguration();
    public void set_VpcConfiguration(VpcConfiguration value);
    internal bool IsSetVpcConfiguration();
}
public class Amazon.S3Control.Model.GetBucketLifecycleConfigurationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.GetBucketLifecycleConfigurationResponse : AmazonWebServiceResponse {
    private List`1<LifecycleRule> _rules;
    public List`1<LifecycleRule> Rules { get; public set; }
    public List`1<LifecycleRule> get_Rules();
    public void set_Rules(List`1<LifecycleRule> value);
    internal bool IsSetRules();
}
public class Amazon.S3Control.Model.GetBucketPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.GetBucketPolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.GetBucketReplicationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.GetBucketReplicationResponse : AmazonWebServiceResponse {
    private ReplicationConfiguration _replicationConfiguration;
    public ReplicationConfiguration ReplicationConfiguration { get; public set; }
    public ReplicationConfiguration get_ReplicationConfiguration();
    public void set_ReplicationConfiguration(ReplicationConfiguration value);
    internal bool IsSetReplicationConfiguration();
}
public class Amazon.S3Control.Model.GetBucketRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.GetBucketResponse : AmazonWebServiceResponse {
    private string _bucket;
    private Nullable`1<DateTime> _creationDate;
    private Nullable`1<bool> _publicAccessBlockEnabled;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    public Nullable`1<bool> PublicAccessBlockEnabled { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public Nullable`1<bool> get_PublicAccessBlockEnabled();
    public void set_PublicAccessBlockEnabled(Nullable`1<bool> value);
    internal bool IsSetPublicAccessBlockEnabled();
}
public class Amazon.S3Control.Model.GetBucketTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.GetBucketTaggingResponse : AmazonWebServiceResponse {
    private List`1<S3Tag> _tagSet;
    [AWSPropertyAttribute]
public List`1<S3Tag> TagSet { get; public set; }
    public List`1<S3Tag> get_TagSet();
    public void set_TagSet(List`1<S3Tag> value);
    internal bool IsSetTagSet();
}
public class Amazon.S3Control.Model.GetBucketVersioningRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3Control.Model.GetBucketVersioningResponse : AmazonWebServiceResponse {
    private MFADeleteStatus _mfaDelete;
    private BucketVersioningStatus _status;
    public MFADeleteStatus MFADelete { get; public set; }
    public BucketVersioningStatus Status { get; public set; }
    public MFADeleteStatus get_MFADelete();
    public void set_MFADelete(MFADeleteStatus value);
    internal bool IsSetMFADelete();
    public BucketVersioningStatus get_Status();
    public void set_Status(BucketVersioningStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.GetDataAccessRequest : AmazonS3ControlRequest {
    private string _accountId;
    private Nullable`1<int> _durationSeconds;
    private Permission _permission;
    private Privilege _privilege;
    private string _target;
    private S3PrefixType _targetType;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> DurationSeconds { get; public set; }
    [AWSPropertyAttribute]
public Permission Permission { get; public set; }
    public Privilege Privilege { get; public set; }
    [AWSPropertyAttribute]
public string Target { get; public set; }
    public S3PrefixType TargetType { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_DurationSeconds();
    public void set_DurationSeconds(Nullable`1<int> value);
    internal bool IsSetDurationSeconds();
    public Permission get_Permission();
    public void set_Permission(Permission value);
    internal bool IsSetPermission();
    public Privilege get_Privilege();
    public void set_Privilege(Privilege value);
    internal bool IsSetPrivilege();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public S3PrefixType get_TargetType();
    public void set_TargetType(S3PrefixType value);
    internal bool IsSetTargetType();
}
public class Amazon.S3Control.Model.GetDataAccessResponse : AmazonWebServiceResponse {
    private Credentials _credentials;
    private string _matchedGrantTarget;
    [AWSPropertyAttribute]
public Credentials Credentials { get; public set; }
    [AWSPropertyAttribute]
public string MatchedGrantTarget { get; public set; }
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
    public string get_MatchedGrantTarget();
    public void set_MatchedGrantTarget(string value);
    internal bool IsSetMatchedGrantTarget();
}
public class Amazon.S3Control.Model.GetJobTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _jobId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.S3Control.Model.GetJobTaggingResponse : AmazonWebServiceResponse {
    private List`1<S3Tag> _tags;
    public List`1<S3Tag> Tags { get; public set; }
    public List`1<S3Tag> get_Tags();
    public void set_Tags(List`1<S3Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointPolicyResponse : AmazonWebServiceResponse {
    private MultiRegionAccessPointPolicyDocument _policy;
    public MultiRegionAccessPointPolicyDocument Policy { get; public set; }
    public MultiRegionAccessPointPolicyDocument get_Policy();
    public void set_Policy(MultiRegionAccessPointPolicyDocument value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointPolicyStatusRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointPolicyStatusResponse : AmazonWebServiceResponse {
    private PolicyStatus _established;
    public PolicyStatus Established { get; public set; }
    public PolicyStatus get_Established();
    public void set_Established(PolicyStatus value);
    internal bool IsSetEstablished();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointResponse : AmazonWebServiceResponse {
    private MultiRegionAccessPointReport _accessPoint;
    public MultiRegionAccessPointReport AccessPoint { get; public set; }
    public MultiRegionAccessPointReport get_AccessPoint();
    public void set_AccessPoint(MultiRegionAccessPointReport value);
    internal bool IsSetAccessPoint();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointRoutesRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _mrap;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Mrap { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Mrap();
    public void set_Mrap(string value);
    internal bool IsSetMrap();
}
public class Amazon.S3Control.Model.GetMultiRegionAccessPointRoutesResponse : AmazonWebServiceResponse {
    private string _mrap;
    private List`1<MultiRegionAccessPointRoute> _routes;
    [AWSPropertyAttribute]
public string Mrap { get; public set; }
    public List`1<MultiRegionAccessPointRoute> Routes { get; public set; }
    public string get_Mrap();
    public void set_Mrap(string value);
    internal bool IsSetMrap();
    public List`1<MultiRegionAccessPointRoute> get_Routes();
    public void set_Routes(List`1<MultiRegionAccessPointRoute> value);
    internal bool IsSetRoutes();
}
public class Amazon.S3Control.Model.GetPublicAccessBlockRequest : AmazonS3ControlRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.S3Control.Model.GetPublicAccessBlockResponse : AmazonWebServiceResponse {
    private PublicAccessBlockConfiguration _publicAccessBlockConfiguration;
    public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; public set; }
    public PublicAccessBlockConfiguration get_PublicAccessBlockConfiguration();
    public void set_PublicAccessBlockConfiguration(PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlockConfiguration();
}
public class Amazon.S3Control.Model.GetStorageLensConfigurationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _configId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ConfigId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ConfigId();
    public void set_ConfigId(string value);
    internal bool IsSetConfigId();
}
public class Amazon.S3Control.Model.GetStorageLensConfigurationResponse : AmazonWebServiceResponse {
    private StorageLensConfiguration _storageLensConfiguration;
    public StorageLensConfiguration StorageLensConfiguration { get; public set; }
    public StorageLensConfiguration get_StorageLensConfiguration();
    public void set_StorageLensConfiguration(StorageLensConfiguration value);
    internal bool IsSetStorageLensConfiguration();
}
public class Amazon.S3Control.Model.GetStorageLensConfigurationTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _configId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ConfigId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ConfigId();
    public void set_ConfigId(string value);
    internal bool IsSetConfigId();
}
public class Amazon.S3Control.Model.GetStorageLensConfigurationTaggingResponse : AmazonWebServiceResponse {
    private List`1<StorageLensTag> _tags;
    public List`1<StorageLensTag> Tags { get; public set; }
    public List`1<StorageLensTag> get_Tags();
    public void set_Tags(List`1<StorageLensTag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.GetStorageLensGroupRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.GetStorageLensGroupResponse : AmazonWebServiceResponse {
    private StorageLensGroup _storageLensGroup;
    public StorageLensGroup StorageLensGroup { get; public set; }
    public StorageLensGroup get_StorageLensGroup();
    public void set_StorageLensGroup(StorageLensGroup value);
    internal bool IsSetStorageLensGroup();
}
public class Amazon.S3Control.Model.Grantee : object {
    private string _granteeIdentifier;
    private GranteeType _granteeType;
    public string GranteeIdentifier { get; public set; }
    public GranteeType GranteeType { get; public set; }
    public string get_GranteeIdentifier();
    public void set_GranteeIdentifier(string value);
    internal bool IsSetGranteeIdentifier();
    public GranteeType get_GranteeType();
    public void set_GranteeType(GranteeType value);
    internal bool IsSetGranteeType();
}
public class Amazon.S3Control.Model.IdempotencyException : AmazonS3ControlException {
    public IdempotencyException(string message);
    public IdempotencyException(string message, Exception innerException);
    public IdempotencyException(Exception innerException);
    public IdempotencyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IdempotencyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.S3Control.Model.IListAccessGrantsInstancesPaginator {
    public IPaginatedEnumerable`1<ListAccessGrantsInstancesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccessGrantsInstancesResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListAccessGrantsLocationsPaginator {
    public IPaginatedEnumerable`1<ListAccessGrantsLocationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccessGrantsLocationsResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListAccessGrantsPaginator {
    public IPaginatedEnumerable`1<ListAccessGrantsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccessGrantsResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListAccessPointsForObjectLambdaPaginator {
    public IPaginatedEnumerable`1<ListAccessPointsForObjectLambdaResponse> Responses { get; }
    public IPaginatedEnumerable`1<ObjectLambdaAccessPoint> ObjectLambdaAccessPointList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccessPointsForObjectLambdaResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ObjectLambdaAccessPoint> get_ObjectLambdaAccessPointList();
}
public interface Amazon.S3Control.Model.IListAccessPointsPaginator {
    public IPaginatedEnumerable`1<ListAccessPointsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccessPointsResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListJobsPaginator {
    public IPaginatedEnumerable`1<ListJobsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListJobsResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListMultiRegionAccessPointsPaginator {
    public IPaginatedEnumerable`1<ListMultiRegionAccessPointsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListMultiRegionAccessPointsResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListRegionalBucketsPaginator {
    public IPaginatedEnumerable`1<ListRegionalBucketsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListRegionalBucketsResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListStorageLensConfigurationsPaginator {
    public IPaginatedEnumerable`1<ListStorageLensConfigurationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListStorageLensConfigurationsResponse> get_Responses();
}
public interface Amazon.S3Control.Model.IListStorageLensGroupsPaginator {
    public IPaginatedEnumerable`1<ListStorageLensGroupsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListStorageLensGroupsResponse> get_Responses();
}
public class Amazon.S3Control.Model.Include : object {
    private List`1<string> _buckets;
    private List`1<string> _regions;
    public List`1<string> Buckets { get; public set; }
    public List`1<string> Regions { get; public set; }
    public List`1<string> get_Buckets();
    public void set_Buckets(List`1<string> value);
    internal bool IsSetBuckets();
    public List`1<string> get_Regions();
    public void set_Regions(List`1<string> value);
    internal bool IsSetRegions();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AbortIncompleteMultipartUploadUnmarshaller : object {
    private static AbortIncompleteMultipartUploadUnmarshaller _instance;
    public static AbortIncompleteMultipartUploadUnmarshaller Instance { get; }
    private static AbortIncompleteMultipartUploadUnmarshaller();
    public sealed virtual AbortIncompleteMultipartUpload Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AbortIncompleteMultipartUpload Unmarshall(JsonUnmarshallerContext context);
    public static AbortIncompleteMultipartUploadUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AccessControlTranslationUnmarshaller : object {
    private static AccessControlTranslationUnmarshaller _instance;
    public static AccessControlTranslationUnmarshaller Instance { get; }
    private static AccessControlTranslationUnmarshaller();
    public sealed virtual AccessControlTranslation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessControlTranslation Unmarshall(JsonUnmarshallerContext context);
    public static AccessControlTranslationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AccessGrantsLocationConfigurationUnmarshaller : object {
    private static AccessGrantsLocationConfigurationUnmarshaller _instance;
    public static AccessGrantsLocationConfigurationUnmarshaller Instance { get; }
    private static AccessGrantsLocationConfigurationUnmarshaller();
    public sealed virtual AccessGrantsLocationConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessGrantsLocationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AccessGrantsLocationConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AccessPointUnmarshaller : object {
    private static AccessPointUnmarshaller _instance;
    public static AccessPointUnmarshaller Instance { get; }
    private static AccessPointUnmarshaller();
    public sealed virtual AccessPoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessPoint Unmarshall(JsonUnmarshallerContext context);
    public static AccessPointUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AccountLevelUnmarshaller : object {
    private static AccountLevelUnmarshaller _instance;
    public static AccountLevelUnmarshaller Instance { get; }
    private static AccountLevelUnmarshaller();
    public sealed virtual AccountLevel Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountLevel Unmarshall(JsonUnmarshallerContext context);
    public static AccountLevelUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ActivityMetricsUnmarshaller : object {
    private static ActivityMetricsUnmarshaller _instance;
    public static ActivityMetricsUnmarshaller Instance { get; }
    private static ActivityMetricsUnmarshaller();
    public sealed virtual ActivityMetrics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ActivityMetrics Unmarshall(JsonUnmarshallerContext context);
    public static ActivityMetricsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AdvancedCostOptimizationMetricsUnmarshaller : object {
    private static AdvancedCostOptimizationMetricsUnmarshaller _instance;
    public static AdvancedCostOptimizationMetricsUnmarshaller Instance { get; }
    private static AdvancedCostOptimizationMetricsUnmarshaller();
    public sealed virtual AdvancedCostOptimizationMetrics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdvancedCostOptimizationMetrics Unmarshall(JsonUnmarshallerContext context);
    public static AdvancedCostOptimizationMetricsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AdvancedDataProtectionMetricsUnmarshaller : object {
    private static AdvancedDataProtectionMetricsUnmarshaller _instance;
    public static AdvancedDataProtectionMetricsUnmarshaller Instance { get; }
    private static AdvancedDataProtectionMetricsUnmarshaller();
    public sealed virtual AdvancedDataProtectionMetrics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdvancedDataProtectionMetrics Unmarshall(JsonUnmarshallerContext context);
    public static AdvancedDataProtectionMetricsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AssociateAccessGrantsIdentityCenterRequestMarshaller : object {
    private static AssociateAccessGrantsIdentityCenterRequestMarshaller _instance;
    public static AssociateAccessGrantsIdentityCenterRequestMarshaller Instance { get; }
    private static AssociateAccessGrantsIdentityCenterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateAccessGrantsIdentityCenterRequest publicRequest);
    internal static AssociateAccessGrantsIdentityCenterRequestMarshaller GetInstance();
    public static AssociateAccessGrantsIdentityCenterRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AssociateAccessGrantsIdentityCenterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AssociateAccessGrantsIdentityCenterResponseUnmarshaller _instance;
    public static AssociateAccessGrantsIdentityCenterResponseUnmarshaller Instance { get; }
    private static AssociateAccessGrantsIdentityCenterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateAccessGrantsIdentityCenterResponseUnmarshaller GetInstance();
    public static AssociateAccessGrantsIdentityCenterResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AsyncErrorDetailsUnmarshaller : object {
    private static AsyncErrorDetailsUnmarshaller _instance;
    public static AsyncErrorDetailsUnmarshaller Instance { get; }
    private static AsyncErrorDetailsUnmarshaller();
    public sealed virtual AsyncErrorDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AsyncErrorDetails Unmarshall(JsonUnmarshallerContext context);
    public static AsyncErrorDetailsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AsyncOperationUnmarshaller : object {
    private static AsyncOperationUnmarshaller _instance;
    public static AsyncOperationUnmarshaller Instance { get; }
    private static AsyncOperationUnmarshaller();
    public sealed virtual AsyncOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AsyncOperation Unmarshall(JsonUnmarshallerContext context);
    public static AsyncOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AsyncRequestParametersUnmarshaller : object {
    private static AsyncRequestParametersUnmarshaller _instance;
    public static AsyncRequestParametersUnmarshaller Instance { get; }
    private static AsyncRequestParametersUnmarshaller();
    public sealed virtual AsyncRequestParameters Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AsyncRequestParameters Unmarshall(JsonUnmarshallerContext context);
    public static AsyncRequestParametersUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AsyncResponseDetailsUnmarshaller : object {
    private static AsyncResponseDetailsUnmarshaller _instance;
    public static AsyncResponseDetailsUnmarshaller Instance { get; }
    private static AsyncResponseDetailsUnmarshaller();
    public sealed virtual AsyncResponseDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AsyncResponseDetails Unmarshall(JsonUnmarshallerContext context);
    public static AsyncResponseDetailsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.AwsLambdaTransformationUnmarshaller : object {
    private static AwsLambdaTransformationUnmarshaller _instance;
    public static AwsLambdaTransformationUnmarshaller Instance { get; }
    private static AwsLambdaTransformationUnmarshaller();
    public sealed virtual AwsLambdaTransformation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AwsLambdaTransformation Unmarshall(JsonUnmarshallerContext context);
    public static AwsLambdaTransformationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller : object {
    private static BadRequestExceptionUnmarshaller _instance;
    public static BadRequestExceptionUnmarshaller Instance { get; }
    private static BadRequestExceptionUnmarshaller();
    public sealed virtual BadRequestException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BadRequestException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static BadRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.BucketAlreadyExistsExceptionUnmarshaller : object {
    private static BucketAlreadyExistsExceptionUnmarshaller _instance;
    public static BucketAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static BucketAlreadyExistsExceptionUnmarshaller();
    public sealed virtual BucketAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BucketAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static BucketAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.BucketAlreadyOwnedByYouExceptionUnmarshaller : object {
    private static BucketAlreadyOwnedByYouExceptionUnmarshaller _instance;
    public static BucketAlreadyOwnedByYouExceptionUnmarshaller Instance { get; }
    private static BucketAlreadyOwnedByYouExceptionUnmarshaller();
    public sealed virtual BucketAlreadyOwnedByYouException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BucketAlreadyOwnedByYouException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static BucketAlreadyOwnedByYouExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.BucketLevelUnmarshaller : object {
    private static BucketLevelUnmarshaller _instance;
    public static BucketLevelUnmarshaller Instance { get; }
    private static BucketLevelUnmarshaller();
    public sealed virtual BucketLevel Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BucketLevel Unmarshall(JsonUnmarshallerContext context);
    public static BucketLevelUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CloudWatchMetricsUnmarshaller : object {
    private static CloudWatchMetricsUnmarshaller _instance;
    public static CloudWatchMetricsUnmarshaller Instance { get; }
    private static CloudWatchMetricsUnmarshaller();
    public sealed virtual CloudWatchMetrics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchMetrics Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchMetricsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessGrantRequestMarshaller : object {
    private static CreateAccessGrantRequestMarshaller _instance;
    public static CreateAccessGrantRequestMarshaller Instance { get; }
    private static CreateAccessGrantRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccessGrantRequest publicRequest);
    internal static CreateAccessGrantRequestMarshaller GetInstance();
    public static CreateAccessGrantRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessGrantResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateAccessGrantResponseUnmarshaller _instance;
    public static CreateAccessGrantResponseUnmarshaller Instance { get; }
    private static CreateAccessGrantResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateAccessGrantResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccessGrantResponseUnmarshaller GetInstance();
    public static CreateAccessGrantResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessGrantsInstanceRequestMarshaller : object {
    private static CreateAccessGrantsInstanceRequestMarshaller _instance;
    public static CreateAccessGrantsInstanceRequestMarshaller Instance { get; }
    private static CreateAccessGrantsInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccessGrantsInstanceRequest publicRequest);
    internal static CreateAccessGrantsInstanceRequestMarshaller GetInstance();
    public static CreateAccessGrantsInstanceRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessGrantsInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateAccessGrantsInstanceResponseUnmarshaller _instance;
    public static CreateAccessGrantsInstanceResponseUnmarshaller Instance { get; }
    private static CreateAccessGrantsInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateAccessGrantsInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccessGrantsInstanceResponseUnmarshaller GetInstance();
    public static CreateAccessGrantsInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessGrantsLocationRequestMarshaller : object {
    private static CreateAccessGrantsLocationRequestMarshaller _instance;
    public static CreateAccessGrantsLocationRequestMarshaller Instance { get; }
    private static CreateAccessGrantsLocationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccessGrantsLocationRequest publicRequest);
    internal static CreateAccessGrantsLocationRequestMarshaller GetInstance();
    public static CreateAccessGrantsLocationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessGrantsLocationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateAccessGrantsLocationResponseUnmarshaller _instance;
    public static CreateAccessGrantsLocationResponseUnmarshaller Instance { get; }
    private static CreateAccessGrantsLocationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateAccessGrantsLocationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccessGrantsLocationResponseUnmarshaller GetInstance();
    public static CreateAccessGrantsLocationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessPointForObjectLambdaRequestMarshaller : object {
    private static CreateAccessPointForObjectLambdaRequestMarshaller _instance;
    public static CreateAccessPointForObjectLambdaRequestMarshaller Instance { get; }
    private static CreateAccessPointForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccessPointForObjectLambdaRequest publicRequest);
    internal static CreateAccessPointForObjectLambdaRequestMarshaller GetInstance();
    public static CreateAccessPointForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessPointForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateAccessPointForObjectLambdaResponseUnmarshaller _instance;
    public static CreateAccessPointForObjectLambdaResponseUnmarshaller Instance { get; }
    private static CreateAccessPointForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateAccessPointForObjectLambdaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccessPointForObjectLambdaResponseUnmarshaller GetInstance();
    public static CreateAccessPointForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessPointRequestMarshaller : object {
    private static CreateAccessPointRequestMarshaller _instance;
    public static CreateAccessPointRequestMarshaller Instance { get; }
    private static CreateAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccessPointRequest publicRequest);
    internal static CreateAccessPointRequestMarshaller GetInstance();
    public static CreateAccessPointRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateAccessPointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateAccessPointResponseUnmarshaller _instance;
    public static CreateAccessPointResponseUnmarshaller Instance { get; }
    private static CreateAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateAccessPointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccessPointResponseUnmarshaller GetInstance();
    public static CreateAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateBucketRequestMarshaller : object {
    private static CreateBucketRequestMarshaller _instance;
    public static CreateBucketRequestMarshaller Instance { get; }
    private static CreateBucketRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateBucketRequest publicRequest);
    internal static CreateBucketRequestMarshaller GetInstance();
    public static CreateBucketRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateBucketResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateBucketResponseUnmarshaller _instance;
    public static CreateBucketResponseUnmarshaller Instance { get; }
    private static CreateBucketResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateBucketResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateBucketResponseUnmarshaller GetInstance();
    public static CreateBucketResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateJobRequestMarshaller : object {
    private static CreateJobRequestMarshaller _instance;
    public static CreateJobRequestMarshaller Instance { get; }
    private static CreateJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateJobRequest publicRequest);
    internal static CreateJobRequestMarshaller GetInstance();
    public static CreateJobRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateJobResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateJobResponseUnmarshaller _instance;
    public static CreateJobResponseUnmarshaller Instance { get; }
    private static CreateJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateJobResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateJobResponseUnmarshaller GetInstance();
    public static CreateJobResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateMultiRegionAccessPointInputUnmarshaller : object {
    private static CreateMultiRegionAccessPointInputUnmarshaller _instance;
    public static CreateMultiRegionAccessPointInputUnmarshaller Instance { get; }
    private static CreateMultiRegionAccessPointInputUnmarshaller();
    public sealed virtual CreateMultiRegionAccessPointInput Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateMultiRegionAccessPointInput Unmarshall(JsonUnmarshallerContext context);
    public static CreateMultiRegionAccessPointInputUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateMultiRegionAccessPointRequestMarshaller : object {
    private static CreateMultiRegionAccessPointRequestMarshaller _instance;
    public static CreateMultiRegionAccessPointRequestMarshaller Instance { get; }
    private static CreateMultiRegionAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateMultiRegionAccessPointRequest publicRequest);
    internal static CreateMultiRegionAccessPointRequestMarshaller GetInstance();
    public static CreateMultiRegionAccessPointRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateMultiRegionAccessPointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateMultiRegionAccessPointResponseUnmarshaller _instance;
    public static CreateMultiRegionAccessPointResponseUnmarshaller Instance { get; }
    private static CreateMultiRegionAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateMultiRegionAccessPointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateMultiRegionAccessPointResponseUnmarshaller GetInstance();
    public static CreateMultiRegionAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateStorageLensGroupRequestMarshaller : object {
    private static CreateStorageLensGroupRequestMarshaller _instance;
    public static CreateStorageLensGroupRequestMarshaller Instance { get; }
    private static CreateStorageLensGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStorageLensGroupRequest publicRequest);
    internal static CreateStorageLensGroupRequestMarshaller GetInstance();
    public static CreateStorageLensGroupRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CreateStorageLensGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateStorageLensGroupResponseUnmarshaller _instance;
    public static CreateStorageLensGroupResponseUnmarshaller Instance { get; }
    private static CreateStorageLensGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStorageLensGroupResponseUnmarshaller GetInstance();
    public static CreateStorageLensGroupResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.CredentialsUnmarshaller : object {
    private static CredentialsUnmarshaller _instance;
    public static CredentialsUnmarshaller Instance { get; }
    private static CredentialsUnmarshaller();
    public sealed virtual Credentials Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Credentials Unmarshall(JsonUnmarshallerContext context);
    public static CredentialsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantRequestMarshaller : object {
    private static DeleteAccessGrantRequestMarshaller _instance;
    public static DeleteAccessGrantRequestMarshaller Instance { get; }
    private static DeleteAccessGrantRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessGrantRequest publicRequest);
    internal static DeleteAccessGrantRequestMarshaller GetInstance();
    public static DeleteAccessGrantRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessGrantResponseUnmarshaller _instance;
    public static DeleteAccessGrantResponseUnmarshaller Instance { get; }
    private static DeleteAccessGrantResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessGrantResponseUnmarshaller GetInstance();
    public static DeleteAccessGrantResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantsInstanceRequestMarshaller : object {
    private static DeleteAccessGrantsInstanceRequestMarshaller _instance;
    public static DeleteAccessGrantsInstanceRequestMarshaller Instance { get; }
    private static DeleteAccessGrantsInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessGrantsInstanceRequest publicRequest);
    internal static DeleteAccessGrantsInstanceRequestMarshaller GetInstance();
    public static DeleteAccessGrantsInstanceRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantsInstanceResourcePolicyRequestMarshaller : object {
    private static DeleteAccessGrantsInstanceResourcePolicyRequestMarshaller _instance;
    public static DeleteAccessGrantsInstanceResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteAccessGrantsInstanceResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessGrantsInstanceResourcePolicyRequest publicRequest);
    internal static DeleteAccessGrantsInstanceResourcePolicyRequestMarshaller GetInstance();
    public static DeleteAccessGrantsInstanceResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantsInstanceResourcePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessGrantsInstanceResourcePolicyResponseUnmarshaller _instance;
    public static DeleteAccessGrantsInstanceResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteAccessGrantsInstanceResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessGrantsInstanceResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteAccessGrantsInstanceResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantsInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessGrantsInstanceResponseUnmarshaller _instance;
    public static DeleteAccessGrantsInstanceResponseUnmarshaller Instance { get; }
    private static DeleteAccessGrantsInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessGrantsInstanceResponseUnmarshaller GetInstance();
    public static DeleteAccessGrantsInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantsLocationRequestMarshaller : object {
    private static DeleteAccessGrantsLocationRequestMarshaller _instance;
    public static DeleteAccessGrantsLocationRequestMarshaller Instance { get; }
    private static DeleteAccessGrantsLocationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessGrantsLocationRequest publicRequest);
    internal static DeleteAccessGrantsLocationRequestMarshaller GetInstance();
    public static DeleteAccessGrantsLocationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessGrantsLocationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessGrantsLocationResponseUnmarshaller _instance;
    public static DeleteAccessGrantsLocationResponseUnmarshaller Instance { get; }
    private static DeleteAccessGrantsLocationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessGrantsLocationResponseUnmarshaller GetInstance();
    public static DeleteAccessGrantsLocationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointForObjectLambdaRequestMarshaller : object {
    private static DeleteAccessPointForObjectLambdaRequestMarshaller _instance;
    public static DeleteAccessPointForObjectLambdaRequestMarshaller Instance { get; }
    private static DeleteAccessPointForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessPointForObjectLambdaRequest publicRequest);
    internal static DeleteAccessPointForObjectLambdaRequestMarshaller GetInstance();
    public static DeleteAccessPointForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessPointForObjectLambdaResponseUnmarshaller _instance;
    public static DeleteAccessPointForObjectLambdaResponseUnmarshaller Instance { get; }
    private static DeleteAccessPointForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessPointForObjectLambdaResponseUnmarshaller GetInstance();
    public static DeleteAccessPointForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointPolicyForObjectLambdaRequestMarshaller : object {
    private static DeleteAccessPointPolicyForObjectLambdaRequestMarshaller _instance;
    public static DeleteAccessPointPolicyForObjectLambdaRequestMarshaller Instance { get; }
    private static DeleteAccessPointPolicyForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessPointPolicyForObjectLambdaRequest publicRequest);
    internal static DeleteAccessPointPolicyForObjectLambdaRequestMarshaller GetInstance();
    public static DeleteAccessPointPolicyForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointPolicyForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessPointPolicyForObjectLambdaResponseUnmarshaller _instance;
    public static DeleteAccessPointPolicyForObjectLambdaResponseUnmarshaller Instance { get; }
    private static DeleteAccessPointPolicyForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessPointPolicyForObjectLambdaResponseUnmarshaller GetInstance();
    public static DeleteAccessPointPolicyForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointPolicyRequestMarshaller : object {
    private static DeleteAccessPointPolicyRequestMarshaller _instance;
    public static DeleteAccessPointPolicyRequestMarshaller Instance { get; }
    private static DeleteAccessPointPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessPointPolicyRequest publicRequest);
    internal static DeleteAccessPointPolicyRequestMarshaller GetInstance();
    public static DeleteAccessPointPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessPointPolicyResponseUnmarshaller _instance;
    public static DeleteAccessPointPolicyResponseUnmarshaller Instance { get; }
    private static DeleteAccessPointPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessPointPolicyResponseUnmarshaller GetInstance();
    public static DeleteAccessPointPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointRequestMarshaller : object {
    private static DeleteAccessPointRequestMarshaller _instance;
    public static DeleteAccessPointRequestMarshaller Instance { get; }
    private static DeleteAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessPointRequest publicRequest);
    internal static DeleteAccessPointRequestMarshaller GetInstance();
    public static DeleteAccessPointRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteAccessPointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAccessPointResponseUnmarshaller _instance;
    public static DeleteAccessPointResponseUnmarshaller Instance { get; }
    private static DeleteAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessPointResponseUnmarshaller GetInstance();
    public static DeleteAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketLifecycleConfigurationRequestMarshaller : object {
    private static DeleteBucketLifecycleConfigurationRequestMarshaller _instance;
    public static DeleteBucketLifecycleConfigurationRequestMarshaller Instance { get; }
    private static DeleteBucketLifecycleConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketLifecycleConfigurationRequest publicRequest);
    internal static DeleteBucketLifecycleConfigurationRequestMarshaller GetInstance();
    public static DeleteBucketLifecycleConfigurationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketLifecycleConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteBucketLifecycleConfigurationResponseUnmarshaller _instance;
    public static DeleteBucketLifecycleConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteBucketLifecycleConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBucketLifecycleConfigurationResponseUnmarshaller GetInstance();
    public static DeleteBucketLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketPolicyRequestMarshaller : object {
    private static DeleteBucketPolicyRequestMarshaller _instance;
    public static DeleteBucketPolicyRequestMarshaller Instance { get; }
    private static DeleteBucketPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketPolicyRequest publicRequest);
    internal static DeleteBucketPolicyRequestMarshaller GetInstance();
    public static DeleteBucketPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteBucketPolicyResponseUnmarshaller _instance;
    public static DeleteBucketPolicyResponseUnmarshaller Instance { get; }
    private static DeleteBucketPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBucketPolicyResponseUnmarshaller GetInstance();
    public static DeleteBucketPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketReplicationRequestMarshaller : object {
    private static DeleteBucketReplicationRequestMarshaller _instance;
    public static DeleteBucketReplicationRequestMarshaller Instance { get; }
    private static DeleteBucketReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketReplicationRequest publicRequest);
    internal static DeleteBucketReplicationRequestMarshaller GetInstance();
    public static DeleteBucketReplicationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketReplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteBucketReplicationResponseUnmarshaller _instance;
    public static DeleteBucketReplicationResponseUnmarshaller Instance { get; }
    private static DeleteBucketReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBucketReplicationResponseUnmarshaller GetInstance();
    public static DeleteBucketReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketRequestMarshaller : object {
    private static DeleteBucketRequestMarshaller _instance;
    public static DeleteBucketRequestMarshaller Instance { get; }
    private static DeleteBucketRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketRequest publicRequest);
    internal static DeleteBucketRequestMarshaller GetInstance();
    public static DeleteBucketRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteBucketResponseUnmarshaller _instance;
    public static DeleteBucketResponseUnmarshaller Instance { get; }
    private static DeleteBucketResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBucketResponseUnmarshaller GetInstance();
    public static DeleteBucketResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketTaggingRequestMarshaller : object {
    private static DeleteBucketTaggingRequestMarshaller _instance;
    public static DeleteBucketTaggingRequestMarshaller Instance { get; }
    private static DeleteBucketTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketTaggingRequest publicRequest);
    internal static DeleteBucketTaggingRequestMarshaller GetInstance();
    public static DeleteBucketTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteBucketTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteBucketTaggingResponseUnmarshaller _instance;
    public static DeleteBucketTaggingResponseUnmarshaller Instance { get; }
    private static DeleteBucketTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBucketTaggingResponseUnmarshaller GetInstance();
    public static DeleteBucketTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteJobTaggingRequestMarshaller : object {
    private static DeleteJobTaggingRequestMarshaller _instance;
    public static DeleteJobTaggingRequestMarshaller Instance { get; }
    private static DeleteJobTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteJobTaggingRequest publicRequest);
    internal static DeleteJobTaggingRequestMarshaller GetInstance();
    public static DeleteJobTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteJobTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteJobTaggingResponseUnmarshaller _instance;
    public static DeleteJobTaggingResponseUnmarshaller Instance { get; }
    private static DeleteJobTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteJobTaggingResponseUnmarshaller GetInstance();
    public static DeleteJobTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteMarkerReplicationUnmarshaller : object {
    private static DeleteMarkerReplicationUnmarshaller _instance;
    public static DeleteMarkerReplicationUnmarshaller Instance { get; }
    private static DeleteMarkerReplicationUnmarshaller();
    public sealed virtual DeleteMarkerReplication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteMarkerReplication Unmarshall(JsonUnmarshallerContext context);
    public static DeleteMarkerReplicationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteMultiRegionAccessPointInputUnmarshaller : object {
    private static DeleteMultiRegionAccessPointInputUnmarshaller _instance;
    public static DeleteMultiRegionAccessPointInputUnmarshaller Instance { get; }
    private static DeleteMultiRegionAccessPointInputUnmarshaller();
    public sealed virtual DeleteMultiRegionAccessPointInput Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteMultiRegionAccessPointInput Unmarshall(JsonUnmarshallerContext context);
    public static DeleteMultiRegionAccessPointInputUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteMultiRegionAccessPointRequestMarshaller : object {
    private static DeleteMultiRegionAccessPointRequestMarshaller _instance;
    public static DeleteMultiRegionAccessPointRequestMarshaller Instance { get; }
    private static DeleteMultiRegionAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMultiRegionAccessPointRequest publicRequest);
    internal static DeleteMultiRegionAccessPointRequestMarshaller GetInstance();
    public static DeleteMultiRegionAccessPointRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteMultiRegionAccessPointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteMultiRegionAccessPointResponseUnmarshaller _instance;
    public static DeleteMultiRegionAccessPointResponseUnmarshaller Instance { get; }
    private static DeleteMultiRegionAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteMultiRegionAccessPointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMultiRegionAccessPointResponseUnmarshaller GetInstance();
    public static DeleteMultiRegionAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeletePublicAccessBlockRequestMarshaller : object {
    private static DeletePublicAccessBlockRequestMarshaller _instance;
    public static DeletePublicAccessBlockRequestMarshaller Instance { get; }
    private static DeletePublicAccessBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePublicAccessBlockRequest publicRequest);
    internal static DeletePublicAccessBlockRequestMarshaller GetInstance();
    public static DeletePublicAccessBlockRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeletePublicAccessBlockResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeletePublicAccessBlockResponseUnmarshaller _instance;
    public static DeletePublicAccessBlockResponseUnmarshaller Instance { get; }
    private static DeletePublicAccessBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePublicAccessBlockResponseUnmarshaller GetInstance();
    public static DeletePublicAccessBlockResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteStorageLensConfigurationRequestMarshaller : object {
    private static DeleteStorageLensConfigurationRequestMarshaller _instance;
    public static DeleteStorageLensConfigurationRequestMarshaller Instance { get; }
    private static DeleteStorageLensConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteStorageLensConfigurationRequest publicRequest);
    internal static DeleteStorageLensConfigurationRequestMarshaller GetInstance();
    public static DeleteStorageLensConfigurationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteStorageLensConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteStorageLensConfigurationResponseUnmarshaller _instance;
    public static DeleteStorageLensConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteStorageLensConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteStorageLensConfigurationResponseUnmarshaller GetInstance();
    public static DeleteStorageLensConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteStorageLensConfigurationTaggingRequestMarshaller : object {
    private static DeleteStorageLensConfigurationTaggingRequestMarshaller _instance;
    public static DeleteStorageLensConfigurationTaggingRequestMarshaller Instance { get; }
    private static DeleteStorageLensConfigurationTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteStorageLensConfigurationTaggingRequest publicRequest);
    internal static DeleteStorageLensConfigurationTaggingRequestMarshaller GetInstance();
    public static DeleteStorageLensConfigurationTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteStorageLensConfigurationTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteStorageLensConfigurationTaggingResponseUnmarshaller _instance;
    public static DeleteStorageLensConfigurationTaggingResponseUnmarshaller Instance { get; }
    private static DeleteStorageLensConfigurationTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteStorageLensConfigurationTaggingResponseUnmarshaller GetInstance();
    public static DeleteStorageLensConfigurationTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteStorageLensGroupRequestMarshaller : object {
    private static DeleteStorageLensGroupRequestMarshaller _instance;
    public static DeleteStorageLensGroupRequestMarshaller Instance { get; }
    private static DeleteStorageLensGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteStorageLensGroupRequest publicRequest);
    internal static DeleteStorageLensGroupRequestMarshaller GetInstance();
    public static DeleteStorageLensGroupRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DeleteStorageLensGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteStorageLensGroupResponseUnmarshaller _instance;
    public static DeleteStorageLensGroupResponseUnmarshaller Instance { get; }
    private static DeleteStorageLensGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteStorageLensGroupResponseUnmarshaller GetInstance();
    public static DeleteStorageLensGroupResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DescribeJobRequestMarshaller : object {
    private static DescribeJobRequestMarshaller _instance;
    public static DescribeJobRequestMarshaller Instance { get; }
    private static DescribeJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeJobRequest publicRequest);
    internal static DescribeJobRequestMarshaller GetInstance();
    public static DescribeJobRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DescribeJobResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeJobResponseUnmarshaller _instance;
    public static DescribeJobResponseUnmarshaller Instance { get; }
    private static DescribeJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeJobResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeJobResponseUnmarshaller GetInstance();
    public static DescribeJobResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DescribeMultiRegionAccessPointOperationRequestMarshaller : object {
    private static DescribeMultiRegionAccessPointOperationRequestMarshaller _instance;
    public static DescribeMultiRegionAccessPointOperationRequestMarshaller Instance { get; }
    private static DescribeMultiRegionAccessPointOperationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMultiRegionAccessPointOperationRequest publicRequest);
    internal static DescribeMultiRegionAccessPointOperationRequestMarshaller GetInstance();
    public static DescribeMultiRegionAccessPointOperationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DescribeMultiRegionAccessPointOperationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeMultiRegionAccessPointOperationResponseUnmarshaller _instance;
    public static DescribeMultiRegionAccessPointOperationResponseUnmarshaller Instance { get; }
    private static DescribeMultiRegionAccessPointOperationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeMultiRegionAccessPointOperationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMultiRegionAccessPointOperationResponseUnmarshaller GetInstance();
    public static DescribeMultiRegionAccessPointOperationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DestinationUnmarshaller : object {
    private static DestinationUnmarshaller _instance;
    public static DestinationUnmarshaller Instance { get; }
    private static DestinationUnmarshaller();
    public sealed virtual Destination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Destination Unmarshall(JsonUnmarshallerContext context);
    public static DestinationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DetailedStatusCodesMetricsUnmarshaller : object {
    private static DetailedStatusCodesMetricsUnmarshaller _instance;
    public static DetailedStatusCodesMetricsUnmarshaller Instance { get; }
    private static DetailedStatusCodesMetricsUnmarshaller();
    public sealed virtual DetailedStatusCodesMetrics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DetailedStatusCodesMetrics Unmarshall(JsonUnmarshallerContext context);
    public static DetailedStatusCodesMetricsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DissociateAccessGrantsIdentityCenterRequestMarshaller : object {
    private static DissociateAccessGrantsIdentityCenterRequestMarshaller _instance;
    public static DissociateAccessGrantsIdentityCenterRequestMarshaller Instance { get; }
    private static DissociateAccessGrantsIdentityCenterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DissociateAccessGrantsIdentityCenterRequest publicRequest);
    internal static DissociateAccessGrantsIdentityCenterRequestMarshaller GetInstance();
    public static DissociateAccessGrantsIdentityCenterRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.DissociateAccessGrantsIdentityCenterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DissociateAccessGrantsIdentityCenterResponseUnmarshaller _instance;
    public static DissociateAccessGrantsIdentityCenterResponseUnmarshaller Instance { get; }
    private static DissociateAccessGrantsIdentityCenterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DissociateAccessGrantsIdentityCenterResponseUnmarshaller GetInstance();
    public static DissociateAccessGrantsIdentityCenterResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller : object {
    private static EncryptionConfigurationUnmarshaller _instance;
    public static EncryptionConfigurationUnmarshaller Instance { get; }
    private static EncryptionConfigurationUnmarshaller();
    public sealed virtual EncryptionConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.EstablishedMultiRegionAccessPointPolicyUnmarshaller : object {
    private static EstablishedMultiRegionAccessPointPolicyUnmarshaller _instance;
    public static EstablishedMultiRegionAccessPointPolicyUnmarshaller Instance { get; }
    private static EstablishedMultiRegionAccessPointPolicyUnmarshaller();
    public sealed virtual EstablishedMultiRegionAccessPointPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EstablishedMultiRegionAccessPointPolicy Unmarshall(JsonUnmarshallerContext context);
    public static EstablishedMultiRegionAccessPointPolicyUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ExcludeUnmarshaller : object {
    private static ExcludeUnmarshaller _instance;
    public static ExcludeUnmarshaller Instance { get; }
    private static ExcludeUnmarshaller();
    public sealed virtual Exclude Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Exclude Unmarshall(JsonUnmarshallerContext context);
    public static ExcludeUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ExistingObjectReplicationUnmarshaller : object {
    private static ExistingObjectReplicationUnmarshaller _instance;
    public static ExistingObjectReplicationUnmarshaller Instance { get; }
    private static ExistingObjectReplicationUnmarshaller();
    public sealed virtual ExistingObjectReplication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExistingObjectReplication Unmarshall(JsonUnmarshallerContext context);
    public static ExistingObjectReplicationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GeneratedManifestEncryptionUnmarshaller : object {
    private static GeneratedManifestEncryptionUnmarshaller _instance;
    public static GeneratedManifestEncryptionUnmarshaller Instance { get; }
    private static GeneratedManifestEncryptionUnmarshaller();
    public sealed virtual GeneratedManifestEncryption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GeneratedManifestEncryption Unmarshall(JsonUnmarshallerContext context);
    public static GeneratedManifestEncryptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantRequestMarshaller : object {
    private static GetAccessGrantRequestMarshaller _instance;
    public static GetAccessGrantRequestMarshaller Instance { get; }
    private static GetAccessGrantRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessGrantRequest publicRequest);
    internal static GetAccessGrantRequestMarshaller GetInstance();
    public static GetAccessGrantRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessGrantResponseUnmarshaller _instance;
    public static GetAccessGrantResponseUnmarshaller Instance { get; }
    private static GetAccessGrantResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessGrantResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessGrantResponseUnmarshaller GetInstance();
    public static GetAccessGrantResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsInstanceForPrefixRequestMarshaller : object {
    private static GetAccessGrantsInstanceForPrefixRequestMarshaller _instance;
    public static GetAccessGrantsInstanceForPrefixRequestMarshaller Instance { get; }
    private static GetAccessGrantsInstanceForPrefixRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessGrantsInstanceForPrefixRequest publicRequest);
    internal static GetAccessGrantsInstanceForPrefixRequestMarshaller GetInstance();
    public static GetAccessGrantsInstanceForPrefixRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsInstanceForPrefixResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessGrantsInstanceForPrefixResponseUnmarshaller _instance;
    public static GetAccessGrantsInstanceForPrefixResponseUnmarshaller Instance { get; }
    private static GetAccessGrantsInstanceForPrefixResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessGrantsInstanceForPrefixResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessGrantsInstanceForPrefixResponseUnmarshaller GetInstance();
    public static GetAccessGrantsInstanceForPrefixResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsInstanceRequestMarshaller : object {
    private static GetAccessGrantsInstanceRequestMarshaller _instance;
    public static GetAccessGrantsInstanceRequestMarshaller Instance { get; }
    private static GetAccessGrantsInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessGrantsInstanceRequest publicRequest);
    internal static GetAccessGrantsInstanceRequestMarshaller GetInstance();
    public static GetAccessGrantsInstanceRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsInstanceResourcePolicyRequestMarshaller : object {
    private static GetAccessGrantsInstanceResourcePolicyRequestMarshaller _instance;
    public static GetAccessGrantsInstanceResourcePolicyRequestMarshaller Instance { get; }
    private static GetAccessGrantsInstanceResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessGrantsInstanceResourcePolicyRequest publicRequest);
    internal static GetAccessGrantsInstanceResourcePolicyRequestMarshaller GetInstance();
    public static GetAccessGrantsInstanceResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsInstanceResourcePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessGrantsInstanceResourcePolicyResponseUnmarshaller _instance;
    public static GetAccessGrantsInstanceResourcePolicyResponseUnmarshaller Instance { get; }
    private static GetAccessGrantsInstanceResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessGrantsInstanceResourcePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessGrantsInstanceResourcePolicyResponseUnmarshaller GetInstance();
    public static GetAccessGrantsInstanceResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsInstanceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessGrantsInstanceResponseUnmarshaller _instance;
    public static GetAccessGrantsInstanceResponseUnmarshaller Instance { get; }
    private static GetAccessGrantsInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessGrantsInstanceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessGrantsInstanceResponseUnmarshaller GetInstance();
    public static GetAccessGrantsInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsLocationRequestMarshaller : object {
    private static GetAccessGrantsLocationRequestMarshaller _instance;
    public static GetAccessGrantsLocationRequestMarshaller Instance { get; }
    private static GetAccessGrantsLocationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessGrantsLocationRequest publicRequest);
    internal static GetAccessGrantsLocationRequestMarshaller GetInstance();
    public static GetAccessGrantsLocationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessGrantsLocationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessGrantsLocationResponseUnmarshaller _instance;
    public static GetAccessGrantsLocationResponseUnmarshaller Instance { get; }
    private static GetAccessGrantsLocationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessGrantsLocationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessGrantsLocationResponseUnmarshaller GetInstance();
    public static GetAccessGrantsLocationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointConfigurationForObjectLambdaRequestMarshaller : object {
    private static GetAccessPointConfigurationForObjectLambdaRequestMarshaller _instance;
    public static GetAccessPointConfigurationForObjectLambdaRequestMarshaller Instance { get; }
    private static GetAccessPointConfigurationForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPointConfigurationForObjectLambdaRequest publicRequest);
    internal static GetAccessPointConfigurationForObjectLambdaRequestMarshaller GetInstance();
    public static GetAccessPointConfigurationForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointConfigurationForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessPointConfigurationForObjectLambdaResponseUnmarshaller _instance;
    public static GetAccessPointConfigurationForObjectLambdaResponseUnmarshaller Instance { get; }
    private static GetAccessPointConfigurationForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessPointConfigurationForObjectLambdaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPointConfigurationForObjectLambdaResponseUnmarshaller GetInstance();
    public static GetAccessPointConfigurationForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointForObjectLambdaRequestMarshaller : object {
    private static GetAccessPointForObjectLambdaRequestMarshaller _instance;
    public static GetAccessPointForObjectLambdaRequestMarshaller Instance { get; }
    private static GetAccessPointForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPointForObjectLambdaRequest publicRequest);
    internal static GetAccessPointForObjectLambdaRequestMarshaller GetInstance();
    public static GetAccessPointForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessPointForObjectLambdaResponseUnmarshaller _instance;
    public static GetAccessPointForObjectLambdaResponseUnmarshaller Instance { get; }
    private static GetAccessPointForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessPointForObjectLambdaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPointForObjectLambdaResponseUnmarshaller GetInstance();
    public static GetAccessPointForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyForObjectLambdaRequestMarshaller : object {
    private static GetAccessPointPolicyForObjectLambdaRequestMarshaller _instance;
    public static GetAccessPointPolicyForObjectLambdaRequestMarshaller Instance { get; }
    private static GetAccessPointPolicyForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPointPolicyForObjectLambdaRequest publicRequest);
    internal static GetAccessPointPolicyForObjectLambdaRequestMarshaller GetInstance();
    public static GetAccessPointPolicyForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessPointPolicyForObjectLambdaResponseUnmarshaller _instance;
    public static GetAccessPointPolicyForObjectLambdaResponseUnmarshaller Instance { get; }
    private static GetAccessPointPolicyForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessPointPolicyForObjectLambdaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPointPolicyForObjectLambdaResponseUnmarshaller GetInstance();
    public static GetAccessPointPolicyForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyRequestMarshaller : object {
    private static GetAccessPointPolicyRequestMarshaller _instance;
    public static GetAccessPointPolicyRequestMarshaller Instance { get; }
    private static GetAccessPointPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPointPolicyRequest publicRequest);
    internal static GetAccessPointPolicyRequestMarshaller GetInstance();
    public static GetAccessPointPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessPointPolicyResponseUnmarshaller _instance;
    public static GetAccessPointPolicyResponseUnmarshaller Instance { get; }
    private static GetAccessPointPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessPointPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPointPolicyResponseUnmarshaller GetInstance();
    public static GetAccessPointPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyStatusForObjectLambdaRequestMarshaller : object {
    private static GetAccessPointPolicyStatusForObjectLambdaRequestMarshaller _instance;
    public static GetAccessPointPolicyStatusForObjectLambdaRequestMarshaller Instance { get; }
    private static GetAccessPointPolicyStatusForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPointPolicyStatusForObjectLambdaRequest publicRequest);
    internal static GetAccessPointPolicyStatusForObjectLambdaRequestMarshaller GetInstance();
    public static GetAccessPointPolicyStatusForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyStatusForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessPointPolicyStatusForObjectLambdaResponseUnmarshaller _instance;
    public static GetAccessPointPolicyStatusForObjectLambdaResponseUnmarshaller Instance { get; }
    private static GetAccessPointPolicyStatusForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessPointPolicyStatusForObjectLambdaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPointPolicyStatusForObjectLambdaResponseUnmarshaller GetInstance();
    public static GetAccessPointPolicyStatusForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyStatusRequestMarshaller : object {
    private static GetAccessPointPolicyStatusRequestMarshaller _instance;
    public static GetAccessPointPolicyStatusRequestMarshaller Instance { get; }
    private static GetAccessPointPolicyStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPointPolicyStatusRequest publicRequest);
    internal static GetAccessPointPolicyStatusRequestMarshaller GetInstance();
    public static GetAccessPointPolicyStatusRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointPolicyStatusResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessPointPolicyStatusResponseUnmarshaller _instance;
    public static GetAccessPointPolicyStatusResponseUnmarshaller Instance { get; }
    private static GetAccessPointPolicyStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessPointPolicyStatusResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPointPolicyStatusResponseUnmarshaller GetInstance();
    public static GetAccessPointPolicyStatusResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointRequestMarshaller : object {
    private static GetAccessPointRequestMarshaller _instance;
    public static GetAccessPointRequestMarshaller Instance { get; }
    private static GetAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPointRequest publicRequest);
    internal static GetAccessPointRequestMarshaller GetInstance();
    public static GetAccessPointRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetAccessPointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccessPointResponseUnmarshaller _instance;
    public static GetAccessPointResponseUnmarshaller Instance { get; }
    private static GetAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccessPointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPointResponseUnmarshaller GetInstance();
    public static GetAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketLifecycleConfigurationRequestMarshaller : object {
    private static GetBucketLifecycleConfigurationRequestMarshaller _instance;
    public static GetBucketLifecycleConfigurationRequestMarshaller Instance { get; }
    private static GetBucketLifecycleConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketLifecycleConfigurationRequest publicRequest);
    internal static GetBucketLifecycleConfigurationRequestMarshaller GetInstance();
    public static GetBucketLifecycleConfigurationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketLifecycleConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetBucketLifecycleConfigurationResponseUnmarshaller _instance;
    public static GetBucketLifecycleConfigurationResponseUnmarshaller Instance { get; }
    private static GetBucketLifecycleConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketLifecycleConfigurationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBucketLifecycleConfigurationResponseUnmarshaller GetInstance();
    public static GetBucketLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketPolicyRequestMarshaller : object {
    private static GetBucketPolicyRequestMarshaller _instance;
    public static GetBucketPolicyRequestMarshaller Instance { get; }
    private static GetBucketPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketPolicyRequest publicRequest);
    internal static GetBucketPolicyRequestMarshaller GetInstance();
    public static GetBucketPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetBucketPolicyResponseUnmarshaller _instance;
    public static GetBucketPolicyResponseUnmarshaller Instance { get; }
    private static GetBucketPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBucketPolicyResponseUnmarshaller GetInstance();
    public static GetBucketPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketReplicationRequestMarshaller : object {
    private static GetBucketReplicationRequestMarshaller _instance;
    public static GetBucketReplicationRequestMarshaller Instance { get; }
    private static GetBucketReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketReplicationRequest publicRequest);
    internal static GetBucketReplicationRequestMarshaller GetInstance();
    public static GetBucketReplicationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketReplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetBucketReplicationResponseUnmarshaller _instance;
    public static GetBucketReplicationResponseUnmarshaller Instance { get; }
    private static GetBucketReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketReplicationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBucketReplicationResponseUnmarshaller GetInstance();
    public static GetBucketReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketRequestMarshaller : object {
    private static GetBucketRequestMarshaller _instance;
    public static GetBucketRequestMarshaller Instance { get; }
    private static GetBucketRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketRequest publicRequest);
    internal static GetBucketRequestMarshaller GetInstance();
    public static GetBucketRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetBucketResponseUnmarshaller _instance;
    public static GetBucketResponseUnmarshaller Instance { get; }
    private static GetBucketResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBucketResponseUnmarshaller GetInstance();
    public static GetBucketResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketTaggingRequestMarshaller : object {
    private static GetBucketTaggingRequestMarshaller _instance;
    public static GetBucketTaggingRequestMarshaller Instance { get; }
    private static GetBucketTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketTaggingRequest publicRequest);
    internal static GetBucketTaggingRequestMarshaller GetInstance();
    public static GetBucketTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetBucketTaggingResponseUnmarshaller _instance;
    public static GetBucketTaggingResponseUnmarshaller Instance { get; }
    private static GetBucketTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketTaggingResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBucketTaggingResponseUnmarshaller GetInstance();
    public static GetBucketTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketVersioningRequestMarshaller : object {
    private static GetBucketVersioningRequestMarshaller _instance;
    public static GetBucketVersioningRequestMarshaller Instance { get; }
    private static GetBucketVersioningRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketVersioningRequest publicRequest);
    internal static GetBucketVersioningRequestMarshaller GetInstance();
    public static GetBucketVersioningRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetBucketVersioningResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetBucketVersioningResponseUnmarshaller _instance;
    public static GetBucketVersioningResponseUnmarshaller Instance { get; }
    private static GetBucketVersioningResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketVersioningResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBucketVersioningResponseUnmarshaller GetInstance();
    public static GetBucketVersioningResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetDataAccessRequestMarshaller : object {
    private static GetDataAccessRequestMarshaller _instance;
    public static GetDataAccessRequestMarshaller Instance { get; }
    private static GetDataAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataAccessRequest publicRequest);
    internal static GetDataAccessRequestMarshaller GetInstance();
    public static GetDataAccessRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetDataAccessResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetDataAccessResponseUnmarshaller _instance;
    public static GetDataAccessResponseUnmarshaller Instance { get; }
    private static GetDataAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetDataAccessResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataAccessResponseUnmarshaller GetInstance();
    public static GetDataAccessResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetJobTaggingRequestMarshaller : object {
    private static GetJobTaggingRequestMarshaller _instance;
    public static GetJobTaggingRequestMarshaller Instance { get; }
    private static GetJobTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetJobTaggingRequest publicRequest);
    internal static GetJobTaggingRequestMarshaller GetInstance();
    public static GetJobTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetJobTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetJobTaggingResponseUnmarshaller _instance;
    public static GetJobTaggingResponseUnmarshaller Instance { get; }
    private static GetJobTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetJobTaggingResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetJobTaggingResponseUnmarshaller GetInstance();
    public static GetJobTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointPolicyRequestMarshaller : object {
    private static GetMultiRegionAccessPointPolicyRequestMarshaller _instance;
    public static GetMultiRegionAccessPointPolicyRequestMarshaller Instance { get; }
    private static GetMultiRegionAccessPointPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMultiRegionAccessPointPolicyRequest publicRequest);
    internal static GetMultiRegionAccessPointPolicyRequestMarshaller GetInstance();
    public static GetMultiRegionAccessPointPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMultiRegionAccessPointPolicyResponseUnmarshaller _instance;
    public static GetMultiRegionAccessPointPolicyResponseUnmarshaller Instance { get; }
    private static GetMultiRegionAccessPointPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMultiRegionAccessPointPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMultiRegionAccessPointPolicyResponseUnmarshaller GetInstance();
    public static GetMultiRegionAccessPointPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointPolicyStatusRequestMarshaller : object {
    private static GetMultiRegionAccessPointPolicyStatusRequestMarshaller _instance;
    public static GetMultiRegionAccessPointPolicyStatusRequestMarshaller Instance { get; }
    private static GetMultiRegionAccessPointPolicyStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMultiRegionAccessPointPolicyStatusRequest publicRequest);
    internal static GetMultiRegionAccessPointPolicyStatusRequestMarshaller GetInstance();
    public static GetMultiRegionAccessPointPolicyStatusRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointPolicyStatusResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMultiRegionAccessPointPolicyStatusResponseUnmarshaller _instance;
    public static GetMultiRegionAccessPointPolicyStatusResponseUnmarshaller Instance { get; }
    private static GetMultiRegionAccessPointPolicyStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMultiRegionAccessPointPolicyStatusResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMultiRegionAccessPointPolicyStatusResponseUnmarshaller GetInstance();
    public static GetMultiRegionAccessPointPolicyStatusResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointRequestMarshaller : object {
    private static GetMultiRegionAccessPointRequestMarshaller _instance;
    public static GetMultiRegionAccessPointRequestMarshaller Instance { get; }
    private static GetMultiRegionAccessPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMultiRegionAccessPointRequest publicRequest);
    internal static GetMultiRegionAccessPointRequestMarshaller GetInstance();
    public static GetMultiRegionAccessPointRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMultiRegionAccessPointResponseUnmarshaller _instance;
    public static GetMultiRegionAccessPointResponseUnmarshaller Instance { get; }
    private static GetMultiRegionAccessPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMultiRegionAccessPointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMultiRegionAccessPointResponseUnmarshaller GetInstance();
    public static GetMultiRegionAccessPointResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointRoutesRequestMarshaller : object {
    private static GetMultiRegionAccessPointRoutesRequestMarshaller _instance;
    public static GetMultiRegionAccessPointRoutesRequestMarshaller Instance { get; }
    private static GetMultiRegionAccessPointRoutesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMultiRegionAccessPointRoutesRequest publicRequest);
    internal static GetMultiRegionAccessPointRoutesRequestMarshaller GetInstance();
    public static GetMultiRegionAccessPointRoutesRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetMultiRegionAccessPointRoutesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMultiRegionAccessPointRoutesResponseUnmarshaller _instance;
    public static GetMultiRegionAccessPointRoutesResponseUnmarshaller Instance { get; }
    private static GetMultiRegionAccessPointRoutesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMultiRegionAccessPointRoutesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMultiRegionAccessPointRoutesResponseUnmarshaller GetInstance();
    public static GetMultiRegionAccessPointRoutesResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetPublicAccessBlockRequestMarshaller : object {
    private static GetPublicAccessBlockRequestMarshaller _instance;
    public static GetPublicAccessBlockRequestMarshaller Instance { get; }
    private static GetPublicAccessBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPublicAccessBlockRequest publicRequest);
    internal static GetPublicAccessBlockRequestMarshaller GetInstance();
    public static GetPublicAccessBlockRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetPublicAccessBlockResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetPublicAccessBlockResponseUnmarshaller _instance;
    public static GetPublicAccessBlockResponseUnmarshaller Instance { get; }
    private static GetPublicAccessBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetPublicAccessBlockResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPublicAccessBlockResponseUnmarshaller GetInstance();
    public static GetPublicAccessBlockResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetStorageLensConfigurationRequestMarshaller : object {
    private static GetStorageLensConfigurationRequestMarshaller _instance;
    public static GetStorageLensConfigurationRequestMarshaller Instance { get; }
    private static GetStorageLensConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStorageLensConfigurationRequest publicRequest);
    internal static GetStorageLensConfigurationRequestMarshaller GetInstance();
    public static GetStorageLensConfigurationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetStorageLensConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetStorageLensConfigurationResponseUnmarshaller _instance;
    public static GetStorageLensConfigurationResponseUnmarshaller Instance { get; }
    private static GetStorageLensConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetStorageLensConfigurationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStorageLensConfigurationResponseUnmarshaller GetInstance();
    public static GetStorageLensConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetStorageLensConfigurationTaggingRequestMarshaller : object {
    private static GetStorageLensConfigurationTaggingRequestMarshaller _instance;
    public static GetStorageLensConfigurationTaggingRequestMarshaller Instance { get; }
    private static GetStorageLensConfigurationTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStorageLensConfigurationTaggingRequest publicRequest);
    internal static GetStorageLensConfigurationTaggingRequestMarshaller GetInstance();
    public static GetStorageLensConfigurationTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetStorageLensConfigurationTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetStorageLensConfigurationTaggingResponseUnmarshaller _instance;
    public static GetStorageLensConfigurationTaggingResponseUnmarshaller Instance { get; }
    private static GetStorageLensConfigurationTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetStorageLensConfigurationTaggingResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStorageLensConfigurationTaggingResponseUnmarshaller GetInstance();
    public static GetStorageLensConfigurationTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetStorageLensGroupRequestMarshaller : object {
    private static GetStorageLensGroupRequestMarshaller _instance;
    public static GetStorageLensGroupRequestMarshaller Instance { get; }
    private static GetStorageLensGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStorageLensGroupRequest publicRequest);
    internal static GetStorageLensGroupRequestMarshaller GetInstance();
    public static GetStorageLensGroupRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GetStorageLensGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetStorageLensGroupResponseUnmarshaller _instance;
    public static GetStorageLensGroupResponseUnmarshaller Instance { get; }
    private static GetStorageLensGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetStorageLensGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStorageLensGroupResponseUnmarshaller GetInstance();
    public static GetStorageLensGroupResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.GranteeUnmarshaller : object {
    private static GranteeUnmarshaller _instance;
    public static GranteeUnmarshaller Instance { get; }
    private static GranteeUnmarshaller();
    public sealed virtual Grantee Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Grantee Unmarshall(JsonUnmarshallerContext context);
    public static GranteeUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.IdempotencyExceptionUnmarshaller : object {
    private static IdempotencyExceptionUnmarshaller _instance;
    public static IdempotencyExceptionUnmarshaller Instance { get; }
    private static IdempotencyExceptionUnmarshaller();
    public sealed virtual IdempotencyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdempotencyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IdempotencyExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.IncludeUnmarshaller : object {
    private static IncludeUnmarshaller _instance;
    public static IncludeUnmarshaller Instance { get; }
    private static IncludeUnmarshaller();
    public sealed virtual Include Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Include Unmarshall(JsonUnmarshallerContext context);
    public static IncludeUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller : object {
    private static InternalServiceExceptionUnmarshaller _instance;
    public static InternalServiceExceptionUnmarshaller Instance { get; }
    private static InternalServiceExceptionUnmarshaller();
    public sealed virtual InternalServiceException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InternalServiceException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServiceExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller : object {
    private static InvalidNextTokenExceptionUnmarshaller _instance;
    public static InvalidNextTokenExceptionUnmarshaller Instance { get; }
    private static InvalidNextTokenExceptionUnmarshaller();
    public sealed virtual InvalidNextTokenException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidNextTokenException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidNextTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller : object {
    private static InvalidRequestExceptionUnmarshaller _instance;
    public static InvalidRequestExceptionUnmarshaller Instance { get; }
    private static InvalidRequestExceptionUnmarshaller();
    public sealed virtual InvalidRequestException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidRequestException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobDescriptorUnmarshaller : object {
    private static JobDescriptorUnmarshaller _instance;
    public static JobDescriptorUnmarshaller Instance { get; }
    private static JobDescriptorUnmarshaller();
    public sealed virtual JobDescriptor Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobDescriptor Unmarshall(JsonUnmarshallerContext context);
    public static JobDescriptorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobFailureUnmarshaller : object {
    private static JobFailureUnmarshaller _instance;
    public static JobFailureUnmarshaller Instance { get; }
    private static JobFailureUnmarshaller();
    public sealed virtual JobFailure Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobFailure Unmarshall(JsonUnmarshallerContext context);
    public static JobFailureUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobListDescriptorUnmarshaller : object {
    private static JobListDescriptorUnmarshaller _instance;
    public static JobListDescriptorUnmarshaller Instance { get; }
    private static JobListDescriptorUnmarshaller();
    public sealed virtual JobListDescriptor Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobListDescriptor Unmarshall(JsonUnmarshallerContext context);
    public static JobListDescriptorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobManifestGeneratorFilterUnmarshaller : object {
    private static JobManifestGeneratorFilterUnmarshaller _instance;
    public static JobManifestGeneratorFilterUnmarshaller Instance { get; }
    private static JobManifestGeneratorFilterUnmarshaller();
    public sealed virtual JobManifestGeneratorFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobManifestGeneratorFilter Unmarshall(JsonUnmarshallerContext context);
    public static JobManifestGeneratorFilterUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobManifestGeneratorUnmarshaller : object {
    private static JobManifestGeneratorUnmarshaller _instance;
    public static JobManifestGeneratorUnmarshaller Instance { get; }
    private static JobManifestGeneratorUnmarshaller();
    public sealed virtual JobManifestGenerator Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobManifestGenerator Unmarshall(JsonUnmarshallerContext context);
    public static JobManifestGeneratorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobManifestLocationUnmarshaller : object {
    private static JobManifestLocationUnmarshaller _instance;
    public static JobManifestLocationUnmarshaller Instance { get; }
    private static JobManifestLocationUnmarshaller();
    public sealed virtual JobManifestLocation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobManifestLocation Unmarshall(JsonUnmarshallerContext context);
    public static JobManifestLocationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobManifestSpecUnmarshaller : object {
    private static JobManifestSpecUnmarshaller _instance;
    public static JobManifestSpecUnmarshaller Instance { get; }
    private static JobManifestSpecUnmarshaller();
    public sealed virtual JobManifestSpec Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobManifestSpec Unmarshall(JsonUnmarshallerContext context);
    public static JobManifestSpecUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobManifestUnmarshaller : object {
    private static JobManifestUnmarshaller _instance;
    public static JobManifestUnmarshaller Instance { get; }
    private static JobManifestUnmarshaller();
    public sealed virtual JobManifest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobManifest Unmarshall(JsonUnmarshallerContext context);
    public static JobManifestUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobOperationUnmarshaller : object {
    private static JobOperationUnmarshaller _instance;
    public static JobOperationUnmarshaller Instance { get; }
    private static JobOperationUnmarshaller();
    public sealed virtual JobOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobOperation Unmarshall(JsonUnmarshallerContext context);
    public static JobOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobProgressSummaryUnmarshaller : object {
    private static JobProgressSummaryUnmarshaller _instance;
    public static JobProgressSummaryUnmarshaller Instance { get; }
    private static JobProgressSummaryUnmarshaller();
    public sealed virtual JobProgressSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobProgressSummary Unmarshall(JsonUnmarshallerContext context);
    public static JobProgressSummaryUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobReportUnmarshaller : object {
    private static JobReportUnmarshaller _instance;
    public static JobReportUnmarshaller Instance { get; }
    private static JobReportUnmarshaller();
    public sealed virtual JobReport Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobReport Unmarshall(JsonUnmarshallerContext context);
    public static JobReportUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobStatusExceptionUnmarshaller : object {
    private static JobStatusExceptionUnmarshaller _instance;
    public static JobStatusExceptionUnmarshaller Instance { get; }
    private static JobStatusExceptionUnmarshaller();
    public sealed virtual JobStatusException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobStatusException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static JobStatusExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.JobTimersUnmarshaller : object {
    private static JobTimersUnmarshaller _instance;
    public static JobTimersUnmarshaller Instance { get; }
    private static JobTimersUnmarshaller();
    public sealed virtual JobTimers Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobTimers Unmarshall(JsonUnmarshallerContext context);
    public static JobTimersUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.KeyNameConstraintUnmarshaller : object {
    private static KeyNameConstraintUnmarshaller _instance;
    public static KeyNameConstraintUnmarshaller Instance { get; }
    private static KeyNameConstraintUnmarshaller();
    public sealed virtual KeyNameConstraint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyNameConstraint Unmarshall(JsonUnmarshallerContext context);
    public static KeyNameConstraintUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.LambdaInvokeOperationUnmarshaller : object {
    private static LambdaInvokeOperationUnmarshaller _instance;
    public static LambdaInvokeOperationUnmarshaller Instance { get; }
    private static LambdaInvokeOperationUnmarshaller();
    public sealed virtual LambdaInvokeOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LambdaInvokeOperation Unmarshall(JsonUnmarshallerContext context);
    public static LambdaInvokeOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.LifecycleExpirationUnmarshaller : object {
    private static LifecycleExpirationUnmarshaller _instance;
    public static LifecycleExpirationUnmarshaller Instance { get; }
    private static LifecycleExpirationUnmarshaller();
    public sealed virtual LifecycleExpiration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleExpiration Unmarshall(JsonUnmarshallerContext context);
    public static LifecycleExpirationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.LifecycleRuleAndOperatorUnmarshaller : object {
    private static LifecycleRuleAndOperatorUnmarshaller _instance;
    public static LifecycleRuleAndOperatorUnmarshaller Instance { get; }
    private static LifecycleRuleAndOperatorUnmarshaller();
    public sealed virtual LifecycleRuleAndOperator Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleRuleAndOperator Unmarshall(JsonUnmarshallerContext context);
    public static LifecycleRuleAndOperatorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.LifecycleRuleFilterUnmarshaller : object {
    private static LifecycleRuleFilterUnmarshaller _instance;
    public static LifecycleRuleFilterUnmarshaller Instance { get; }
    private static LifecycleRuleFilterUnmarshaller();
    public sealed virtual LifecycleRuleFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleRuleFilter Unmarshall(JsonUnmarshallerContext context);
    public static LifecycleRuleFilterUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.LifecycleRuleUnmarshaller : object {
    private static LifecycleRuleUnmarshaller _instance;
    public static LifecycleRuleUnmarshaller Instance { get; }
    private static LifecycleRuleUnmarshaller();
    public sealed virtual LifecycleRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleRule Unmarshall(JsonUnmarshallerContext context);
    public static LifecycleRuleUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantEntryUnmarshaller : object {
    private static ListAccessGrantEntryUnmarshaller _instance;
    public static ListAccessGrantEntryUnmarshaller Instance { get; }
    private static ListAccessGrantEntryUnmarshaller();
    public sealed virtual ListAccessGrantEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListAccessGrantEntry Unmarshall(JsonUnmarshallerContext context);
    public static ListAccessGrantEntryUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsInstanceEntryUnmarshaller : object {
    private static ListAccessGrantsInstanceEntryUnmarshaller _instance;
    public static ListAccessGrantsInstanceEntryUnmarshaller Instance { get; }
    private static ListAccessGrantsInstanceEntryUnmarshaller();
    public sealed virtual ListAccessGrantsInstanceEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListAccessGrantsInstanceEntry Unmarshall(JsonUnmarshallerContext context);
    public static ListAccessGrantsInstanceEntryUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsInstancesRequestMarshaller : object {
    private static ListAccessGrantsInstancesRequestMarshaller _instance;
    public static ListAccessGrantsInstancesRequestMarshaller Instance { get; }
    private static ListAccessGrantsInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccessGrantsInstancesRequest publicRequest);
    internal static ListAccessGrantsInstancesRequestMarshaller GetInstance();
    public static ListAccessGrantsInstancesRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsInstancesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListAccessGrantsInstancesResponseUnmarshaller _instance;
    public static ListAccessGrantsInstancesResponseUnmarshaller Instance { get; }
    private static ListAccessGrantsInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListAccessGrantsInstancesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccessGrantsInstancesResponseUnmarshaller GetInstance();
    public static ListAccessGrantsInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsLocationsEntryUnmarshaller : object {
    private static ListAccessGrantsLocationsEntryUnmarshaller _instance;
    public static ListAccessGrantsLocationsEntryUnmarshaller Instance { get; }
    private static ListAccessGrantsLocationsEntryUnmarshaller();
    public sealed virtual ListAccessGrantsLocationsEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListAccessGrantsLocationsEntry Unmarshall(JsonUnmarshallerContext context);
    public static ListAccessGrantsLocationsEntryUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsLocationsRequestMarshaller : object {
    private static ListAccessGrantsLocationsRequestMarshaller _instance;
    public static ListAccessGrantsLocationsRequestMarshaller Instance { get; }
    private static ListAccessGrantsLocationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccessGrantsLocationsRequest publicRequest);
    internal static ListAccessGrantsLocationsRequestMarshaller GetInstance();
    public static ListAccessGrantsLocationsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsLocationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListAccessGrantsLocationsResponseUnmarshaller _instance;
    public static ListAccessGrantsLocationsResponseUnmarshaller Instance { get; }
    private static ListAccessGrantsLocationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListAccessGrantsLocationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccessGrantsLocationsResponseUnmarshaller GetInstance();
    public static ListAccessGrantsLocationsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsRequestMarshaller : object {
    private static ListAccessGrantsRequestMarshaller _instance;
    public static ListAccessGrantsRequestMarshaller Instance { get; }
    private static ListAccessGrantsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccessGrantsRequest publicRequest);
    internal static ListAccessGrantsRequestMarshaller GetInstance();
    public static ListAccessGrantsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessGrantsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListAccessGrantsResponseUnmarshaller _instance;
    public static ListAccessGrantsResponseUnmarshaller Instance { get; }
    private static ListAccessGrantsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListAccessGrantsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccessGrantsResponseUnmarshaller GetInstance();
    public static ListAccessGrantsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessPointsForObjectLambdaRequestMarshaller : object {
    private static ListAccessPointsForObjectLambdaRequestMarshaller _instance;
    public static ListAccessPointsForObjectLambdaRequestMarshaller Instance { get; }
    private static ListAccessPointsForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccessPointsForObjectLambdaRequest publicRequest);
    internal static ListAccessPointsForObjectLambdaRequestMarshaller GetInstance();
    public static ListAccessPointsForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessPointsForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListAccessPointsForObjectLambdaResponseUnmarshaller _instance;
    public static ListAccessPointsForObjectLambdaResponseUnmarshaller Instance { get; }
    private static ListAccessPointsForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListAccessPointsForObjectLambdaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccessPointsForObjectLambdaResponseUnmarshaller GetInstance();
    public static ListAccessPointsForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessPointsRequestMarshaller : object {
    private static ListAccessPointsRequestMarshaller _instance;
    public static ListAccessPointsRequestMarshaller Instance { get; }
    private static ListAccessPointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccessPointsRequest publicRequest);
    internal static ListAccessPointsRequestMarshaller GetInstance();
    public static ListAccessPointsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListAccessPointsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListAccessPointsResponseUnmarshaller _instance;
    public static ListAccessPointsResponseUnmarshaller Instance { get; }
    private static ListAccessPointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListAccessPointsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccessPointsResponseUnmarshaller GetInstance();
    public static ListAccessPointsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller : object {
    private static ListJobsRequestMarshaller _instance;
    public static ListJobsRequestMarshaller Instance { get; }
    private static ListJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListJobsRequest publicRequest);
    internal static ListJobsRequestMarshaller GetInstance();
    public static ListJobsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListJobsResponseUnmarshaller _instance;
    public static ListJobsResponseUnmarshaller Instance { get; }
    private static ListJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListJobsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListJobsResponseUnmarshaller GetInstance();
    public static ListJobsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListMultiRegionAccessPointsRequestMarshaller : object {
    private static ListMultiRegionAccessPointsRequestMarshaller _instance;
    public static ListMultiRegionAccessPointsRequestMarshaller Instance { get; }
    private static ListMultiRegionAccessPointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMultiRegionAccessPointsRequest publicRequest);
    internal static ListMultiRegionAccessPointsRequestMarshaller GetInstance();
    public static ListMultiRegionAccessPointsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListMultiRegionAccessPointsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListMultiRegionAccessPointsResponseUnmarshaller _instance;
    public static ListMultiRegionAccessPointsResponseUnmarshaller Instance { get; }
    private static ListMultiRegionAccessPointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListMultiRegionAccessPointsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMultiRegionAccessPointsResponseUnmarshaller GetInstance();
    public static ListMultiRegionAccessPointsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListRegionalBucketsRequestMarshaller : object {
    private static ListRegionalBucketsRequestMarshaller _instance;
    public static ListRegionalBucketsRequestMarshaller Instance { get; }
    private static ListRegionalBucketsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRegionalBucketsRequest publicRequest);
    internal static ListRegionalBucketsRequestMarshaller GetInstance();
    public static ListRegionalBucketsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListRegionalBucketsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListRegionalBucketsResponseUnmarshaller _instance;
    public static ListRegionalBucketsResponseUnmarshaller Instance { get; }
    private static ListRegionalBucketsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListRegionalBucketsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRegionalBucketsResponseUnmarshaller GetInstance();
    public static ListRegionalBucketsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListStorageLensConfigurationEntryUnmarshaller : object {
    private static ListStorageLensConfigurationEntryUnmarshaller _instance;
    public static ListStorageLensConfigurationEntryUnmarshaller Instance { get; }
    private static ListStorageLensConfigurationEntryUnmarshaller();
    public sealed virtual ListStorageLensConfigurationEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListStorageLensConfigurationEntry Unmarshall(JsonUnmarshallerContext context);
    public static ListStorageLensConfigurationEntryUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListStorageLensConfigurationsRequestMarshaller : object {
    private static ListStorageLensConfigurationsRequestMarshaller _instance;
    public static ListStorageLensConfigurationsRequestMarshaller Instance { get; }
    private static ListStorageLensConfigurationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStorageLensConfigurationsRequest publicRequest);
    internal static ListStorageLensConfigurationsRequestMarshaller GetInstance();
    public static ListStorageLensConfigurationsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListStorageLensConfigurationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListStorageLensConfigurationsResponseUnmarshaller _instance;
    public static ListStorageLensConfigurationsResponseUnmarshaller Instance { get; }
    private static ListStorageLensConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListStorageLensConfigurationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStorageLensConfigurationsResponseUnmarshaller GetInstance();
    public static ListStorageLensConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListStorageLensGroupEntryUnmarshaller : object {
    private static ListStorageLensGroupEntryUnmarshaller _instance;
    public static ListStorageLensGroupEntryUnmarshaller Instance { get; }
    private static ListStorageLensGroupEntryUnmarshaller();
    public sealed virtual ListStorageLensGroupEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListStorageLensGroupEntry Unmarshall(JsonUnmarshallerContext context);
    public static ListStorageLensGroupEntryUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListStorageLensGroupsRequestMarshaller : object {
    private static ListStorageLensGroupsRequestMarshaller _instance;
    public static ListStorageLensGroupsRequestMarshaller Instance { get; }
    private static ListStorageLensGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStorageLensGroupsRequest publicRequest);
    internal static ListStorageLensGroupsRequestMarshaller GetInstance();
    public static ListStorageLensGroupsRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListStorageLensGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListStorageLensGroupsResponseUnmarshaller _instance;
    public static ListStorageLensGroupsResponseUnmarshaller Instance { get; }
    private static ListStorageLensGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListStorageLensGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStorageLensGroupsResponseUnmarshaller GetInstance();
    public static ListStorageLensGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListTagsForResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MatchObjectAgeUnmarshaller : object {
    private static MatchObjectAgeUnmarshaller _instance;
    public static MatchObjectAgeUnmarshaller Instance { get; }
    private static MatchObjectAgeUnmarshaller();
    public sealed virtual MatchObjectAge Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MatchObjectAge Unmarshall(JsonUnmarshallerContext context);
    public static MatchObjectAgeUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MatchObjectSizeUnmarshaller : object {
    private static MatchObjectSizeUnmarshaller _instance;
    public static MatchObjectSizeUnmarshaller Instance { get; }
    private static MatchObjectSizeUnmarshaller();
    public sealed virtual MatchObjectSize Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MatchObjectSize Unmarshall(JsonUnmarshallerContext context);
    public static MatchObjectSizeUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MetricsUnmarshaller : object {
    private static MetricsUnmarshaller _instance;
    public static MetricsUnmarshaller Instance { get; }
    private static MetricsUnmarshaller();
    public sealed virtual Metrics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Metrics Unmarshall(JsonUnmarshallerContext context);
    public static MetricsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MultiRegionAccessPointPolicyDocumentUnmarshaller : object {
    private static MultiRegionAccessPointPolicyDocumentUnmarshaller _instance;
    public static MultiRegionAccessPointPolicyDocumentUnmarshaller Instance { get; }
    private static MultiRegionAccessPointPolicyDocumentUnmarshaller();
    public sealed virtual MultiRegionAccessPointPolicyDocument Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MultiRegionAccessPointPolicyDocument Unmarshall(JsonUnmarshallerContext context);
    public static MultiRegionAccessPointPolicyDocumentUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MultiRegionAccessPointRegionalResponseUnmarshaller : object {
    private static MultiRegionAccessPointRegionalResponseUnmarshaller _instance;
    public static MultiRegionAccessPointRegionalResponseUnmarshaller Instance { get; }
    private static MultiRegionAccessPointRegionalResponseUnmarshaller();
    public sealed virtual MultiRegionAccessPointRegionalResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MultiRegionAccessPointRegionalResponse Unmarshall(JsonUnmarshallerContext context);
    public static MultiRegionAccessPointRegionalResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MultiRegionAccessPointReportUnmarshaller : object {
    private static MultiRegionAccessPointReportUnmarshaller _instance;
    public static MultiRegionAccessPointReportUnmarshaller Instance { get; }
    private static MultiRegionAccessPointReportUnmarshaller();
    public sealed virtual MultiRegionAccessPointReport Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MultiRegionAccessPointReport Unmarshall(JsonUnmarshallerContext context);
    public static MultiRegionAccessPointReportUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MultiRegionAccessPointRouteUnmarshaller : object {
    private static MultiRegionAccessPointRouteUnmarshaller _instance;
    public static MultiRegionAccessPointRouteUnmarshaller Instance { get; }
    private static MultiRegionAccessPointRouteUnmarshaller();
    public sealed virtual MultiRegionAccessPointRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MultiRegionAccessPointRoute Unmarshall(JsonUnmarshallerContext context);
    public static MultiRegionAccessPointRouteUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.MultiRegionAccessPointsAsyncResponseUnmarshaller : object {
    private static MultiRegionAccessPointsAsyncResponseUnmarshaller _instance;
    public static MultiRegionAccessPointsAsyncResponseUnmarshaller Instance { get; }
    private static MultiRegionAccessPointsAsyncResponseUnmarshaller();
    public sealed virtual MultiRegionAccessPointsAsyncResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MultiRegionAccessPointsAsyncResponse Unmarshall(JsonUnmarshallerContext context);
    public static MultiRegionAccessPointsAsyncResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.NoncurrentVersionExpirationUnmarshaller : object {
    private static NoncurrentVersionExpirationUnmarshaller _instance;
    public static NoncurrentVersionExpirationUnmarshaller Instance { get; }
    private static NoncurrentVersionExpirationUnmarshaller();
    public sealed virtual NoncurrentVersionExpiration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoncurrentVersionExpiration Unmarshall(JsonUnmarshallerContext context);
    public static NoncurrentVersionExpirationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.NoncurrentVersionTransitionUnmarshaller : object {
    private static NoncurrentVersionTransitionUnmarshaller _instance;
    public static NoncurrentVersionTransitionUnmarshaller Instance { get; }
    private static NoncurrentVersionTransitionUnmarshaller();
    public sealed virtual NoncurrentVersionTransition Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoncurrentVersionTransition Unmarshall(JsonUnmarshallerContext context);
    public static NoncurrentVersionTransitionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.NoSuchPublicAccessBlockConfigurationExceptionUnmarshaller : object {
    private static NoSuchPublicAccessBlockConfigurationExceptionUnmarshaller _instance;
    public static NoSuchPublicAccessBlockConfigurationExceptionUnmarshaller Instance { get; }
    private static NoSuchPublicAccessBlockConfigurationExceptionUnmarshaller();
    public sealed virtual NoSuchPublicAccessBlockConfigurationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchPublicAccessBlockConfigurationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchPublicAccessBlockConfigurationExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller : object {
    private static NotFoundExceptionUnmarshaller _instance;
    public static NotFoundExceptionUnmarshaller Instance { get; }
    private static NotFoundExceptionUnmarshaller();
    public sealed virtual NotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ObjectLambdaAccessPointAliasUnmarshaller : object {
    private static ObjectLambdaAccessPointAliasUnmarshaller _instance;
    public static ObjectLambdaAccessPointAliasUnmarshaller Instance { get; }
    private static ObjectLambdaAccessPointAliasUnmarshaller();
    public sealed virtual ObjectLambdaAccessPointAlias Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ObjectLambdaAccessPointAlias Unmarshall(JsonUnmarshallerContext context);
    public static ObjectLambdaAccessPointAliasUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ObjectLambdaAccessPointUnmarshaller : object {
    private static ObjectLambdaAccessPointUnmarshaller _instance;
    public static ObjectLambdaAccessPointUnmarshaller Instance { get; }
    private static ObjectLambdaAccessPointUnmarshaller();
    public sealed virtual ObjectLambdaAccessPoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ObjectLambdaAccessPoint Unmarshall(JsonUnmarshallerContext context);
    public static ObjectLambdaAccessPointUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ObjectLambdaConfigurationUnmarshaller : object {
    private static ObjectLambdaConfigurationUnmarshaller _instance;
    public static ObjectLambdaConfigurationUnmarshaller Instance { get; }
    private static ObjectLambdaConfigurationUnmarshaller();
    public sealed virtual ObjectLambdaConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ObjectLambdaConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ObjectLambdaConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ObjectLambdaContentTransformationUnmarshaller : object {
    private static ObjectLambdaContentTransformationUnmarshaller _instance;
    public static ObjectLambdaContentTransformationUnmarshaller Instance { get; }
    private static ObjectLambdaContentTransformationUnmarshaller();
    public sealed virtual ObjectLambdaContentTransformation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ObjectLambdaContentTransformation Unmarshall(JsonUnmarshallerContext context);
    public static ObjectLambdaContentTransformationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ObjectLambdaTransformationConfigurationUnmarshaller : object {
    private static ObjectLambdaTransformationConfigurationUnmarshaller _instance;
    public static ObjectLambdaTransformationConfigurationUnmarshaller Instance { get; }
    private static ObjectLambdaTransformationConfigurationUnmarshaller();
    public sealed virtual ObjectLambdaTransformationConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ObjectLambdaTransformationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ObjectLambdaTransformationConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PolicyStatusUnmarshaller : object {
    private static PolicyStatusUnmarshaller _instance;
    public static PolicyStatusUnmarshaller Instance { get; }
    private static PolicyStatusUnmarshaller();
    public sealed virtual PolicyStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyStatus Unmarshall(JsonUnmarshallerContext context);
    public static PolicyStatusUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PrefixLevelStorageMetricsUnmarshaller : object {
    private static PrefixLevelStorageMetricsUnmarshaller _instance;
    public static PrefixLevelStorageMetricsUnmarshaller Instance { get; }
    private static PrefixLevelStorageMetricsUnmarshaller();
    public sealed virtual PrefixLevelStorageMetrics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixLevelStorageMetrics Unmarshall(JsonUnmarshallerContext context);
    public static PrefixLevelStorageMetricsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PrefixLevelUnmarshaller : object {
    private static PrefixLevelUnmarshaller _instance;
    public static PrefixLevelUnmarshaller Instance { get; }
    private static PrefixLevelUnmarshaller();
    public sealed virtual PrefixLevel Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixLevel Unmarshall(JsonUnmarshallerContext context);
    public static PrefixLevelUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ProposedMultiRegionAccessPointPolicyUnmarshaller : object {
    private static ProposedMultiRegionAccessPointPolicyUnmarshaller _instance;
    public static ProposedMultiRegionAccessPointPolicyUnmarshaller Instance { get; }
    private static ProposedMultiRegionAccessPointPolicyUnmarshaller();
    public sealed virtual ProposedMultiRegionAccessPointPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProposedMultiRegionAccessPointPolicy Unmarshall(JsonUnmarshallerContext context);
    public static ProposedMultiRegionAccessPointPolicyUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PublicAccessBlockConfigurationUnmarshaller : object {
    private static PublicAccessBlockConfigurationUnmarshaller _instance;
    public static PublicAccessBlockConfigurationUnmarshaller Instance { get; }
    private static PublicAccessBlockConfigurationUnmarshaller();
    public sealed virtual PublicAccessBlockConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicAccessBlockConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static PublicAccessBlockConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessGrantsInstanceResourcePolicyRequestMarshaller : object {
    private static PutAccessGrantsInstanceResourcePolicyRequestMarshaller _instance;
    public static PutAccessGrantsInstanceResourcePolicyRequestMarshaller Instance { get; }
    private static PutAccessGrantsInstanceResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAccessGrantsInstanceResourcePolicyRequest publicRequest);
    internal static PutAccessGrantsInstanceResourcePolicyRequestMarshaller GetInstance();
    public static PutAccessGrantsInstanceResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessGrantsInstanceResourcePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutAccessGrantsInstanceResourcePolicyResponseUnmarshaller _instance;
    public static PutAccessGrantsInstanceResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutAccessGrantsInstanceResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutAccessGrantsInstanceResourcePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAccessGrantsInstanceResourcePolicyResponseUnmarshaller GetInstance();
    public static PutAccessGrantsInstanceResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessPointConfigurationForObjectLambdaRequestMarshaller : object {
    private static PutAccessPointConfigurationForObjectLambdaRequestMarshaller _instance;
    public static PutAccessPointConfigurationForObjectLambdaRequestMarshaller Instance { get; }
    private static PutAccessPointConfigurationForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAccessPointConfigurationForObjectLambdaRequest publicRequest);
    internal static PutAccessPointConfigurationForObjectLambdaRequestMarshaller GetInstance();
    public static PutAccessPointConfigurationForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessPointConfigurationForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutAccessPointConfigurationForObjectLambdaResponseUnmarshaller _instance;
    public static PutAccessPointConfigurationForObjectLambdaResponseUnmarshaller Instance { get; }
    private static PutAccessPointConfigurationForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAccessPointConfigurationForObjectLambdaResponseUnmarshaller GetInstance();
    public static PutAccessPointConfigurationForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessPointPolicyForObjectLambdaRequestMarshaller : object {
    private static PutAccessPointPolicyForObjectLambdaRequestMarshaller _instance;
    public static PutAccessPointPolicyForObjectLambdaRequestMarshaller Instance { get; }
    private static PutAccessPointPolicyForObjectLambdaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAccessPointPolicyForObjectLambdaRequest publicRequest);
    internal static PutAccessPointPolicyForObjectLambdaRequestMarshaller GetInstance();
    public static PutAccessPointPolicyForObjectLambdaRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessPointPolicyForObjectLambdaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutAccessPointPolicyForObjectLambdaResponseUnmarshaller _instance;
    public static PutAccessPointPolicyForObjectLambdaResponseUnmarshaller Instance { get; }
    private static PutAccessPointPolicyForObjectLambdaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAccessPointPolicyForObjectLambdaResponseUnmarshaller GetInstance();
    public static PutAccessPointPolicyForObjectLambdaResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessPointPolicyRequestMarshaller : object {
    private static PutAccessPointPolicyRequestMarshaller _instance;
    public static PutAccessPointPolicyRequestMarshaller Instance { get; }
    private static PutAccessPointPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAccessPointPolicyRequest publicRequest);
    internal static PutAccessPointPolicyRequestMarshaller GetInstance();
    public static PutAccessPointPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutAccessPointPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutAccessPointPolicyResponseUnmarshaller _instance;
    public static PutAccessPointPolicyResponseUnmarshaller Instance { get; }
    private static PutAccessPointPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAccessPointPolicyResponseUnmarshaller GetInstance();
    public static PutAccessPointPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketLifecycleConfigurationRequestMarshaller : object {
    private static PutBucketLifecycleConfigurationRequestMarshaller _instance;
    public static PutBucketLifecycleConfigurationRequestMarshaller Instance { get; }
    private static PutBucketLifecycleConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketLifecycleConfigurationRequest publicRequest);
    internal static PutBucketLifecycleConfigurationRequestMarshaller GetInstance();
    public static PutBucketLifecycleConfigurationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketLifecycleConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutBucketLifecycleConfigurationResponseUnmarshaller _instance;
    public static PutBucketLifecycleConfigurationResponseUnmarshaller Instance { get; }
    private static PutBucketLifecycleConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutBucketLifecycleConfigurationResponseUnmarshaller GetInstance();
    public static PutBucketLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketPolicyRequestMarshaller : object {
    private static PutBucketPolicyRequestMarshaller _instance;
    public static PutBucketPolicyRequestMarshaller Instance { get; }
    private static PutBucketPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketPolicyRequest publicRequest);
    internal static PutBucketPolicyRequestMarshaller GetInstance();
    public static PutBucketPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutBucketPolicyResponseUnmarshaller _instance;
    public static PutBucketPolicyResponseUnmarshaller Instance { get; }
    private static PutBucketPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutBucketPolicyResponseUnmarshaller GetInstance();
    public static PutBucketPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketReplicationRequestMarshaller : object {
    private static PutBucketReplicationRequestMarshaller _instance;
    public static PutBucketReplicationRequestMarshaller Instance { get; }
    private static PutBucketReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketReplicationRequest publicRequest);
    internal static PutBucketReplicationRequestMarshaller GetInstance();
    public static PutBucketReplicationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketReplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutBucketReplicationResponseUnmarshaller _instance;
    public static PutBucketReplicationResponseUnmarshaller Instance { get; }
    private static PutBucketReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutBucketReplicationResponseUnmarshaller GetInstance();
    public static PutBucketReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketTaggingRequestMarshaller : object {
    private static PutBucketTaggingRequestMarshaller _instance;
    public static PutBucketTaggingRequestMarshaller Instance { get; }
    private static PutBucketTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketTaggingRequest publicRequest);
    internal static PutBucketTaggingRequestMarshaller GetInstance();
    public static PutBucketTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutBucketTaggingResponseUnmarshaller _instance;
    public static PutBucketTaggingResponseUnmarshaller Instance { get; }
    private static PutBucketTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutBucketTaggingResponseUnmarshaller GetInstance();
    public static PutBucketTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketVersioningRequestMarshaller : object {
    private static PutBucketVersioningRequestMarshaller _instance;
    public static PutBucketVersioningRequestMarshaller Instance { get; }
    private static PutBucketVersioningRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketVersioningRequest publicRequest);
    internal static PutBucketVersioningRequestMarshaller GetInstance();
    public static PutBucketVersioningRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutBucketVersioningResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutBucketVersioningResponseUnmarshaller _instance;
    public static PutBucketVersioningResponseUnmarshaller Instance { get; }
    private static PutBucketVersioningResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutBucketVersioningResponseUnmarshaller GetInstance();
    public static PutBucketVersioningResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutJobTaggingRequestMarshaller : object {
    private static PutJobTaggingRequestMarshaller _instance;
    public static PutJobTaggingRequestMarshaller Instance { get; }
    private static PutJobTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutJobTaggingRequest publicRequest);
    internal static PutJobTaggingRequestMarshaller GetInstance();
    public static PutJobTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutJobTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutJobTaggingResponseUnmarshaller _instance;
    public static PutJobTaggingResponseUnmarshaller Instance { get; }
    private static PutJobTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutJobTaggingResponseUnmarshaller GetInstance();
    public static PutJobTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutMultiRegionAccessPointPolicyInputUnmarshaller : object {
    private static PutMultiRegionAccessPointPolicyInputUnmarshaller _instance;
    public static PutMultiRegionAccessPointPolicyInputUnmarshaller Instance { get; }
    private static PutMultiRegionAccessPointPolicyInputUnmarshaller();
    public sealed virtual PutMultiRegionAccessPointPolicyInput Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PutMultiRegionAccessPointPolicyInput Unmarshall(JsonUnmarshallerContext context);
    public static PutMultiRegionAccessPointPolicyInputUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutMultiRegionAccessPointPolicyRequestMarshaller : object {
    private static PutMultiRegionAccessPointPolicyRequestMarshaller _instance;
    public static PutMultiRegionAccessPointPolicyRequestMarshaller Instance { get; }
    private static PutMultiRegionAccessPointPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutMultiRegionAccessPointPolicyRequest publicRequest);
    internal static PutMultiRegionAccessPointPolicyRequestMarshaller GetInstance();
    public static PutMultiRegionAccessPointPolicyRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutMultiRegionAccessPointPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutMultiRegionAccessPointPolicyResponseUnmarshaller _instance;
    public static PutMultiRegionAccessPointPolicyResponseUnmarshaller Instance { get; }
    private static PutMultiRegionAccessPointPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutMultiRegionAccessPointPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutMultiRegionAccessPointPolicyResponseUnmarshaller GetInstance();
    public static PutMultiRegionAccessPointPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutPublicAccessBlockRequestMarshaller : object {
    private static PutPublicAccessBlockRequestMarshaller _instance;
    public static PutPublicAccessBlockRequestMarshaller Instance { get; }
    private static PutPublicAccessBlockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutPublicAccessBlockRequest publicRequest);
    internal static PutPublicAccessBlockRequestMarshaller GetInstance();
    public static PutPublicAccessBlockRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutPublicAccessBlockResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutPublicAccessBlockResponseUnmarshaller _instance;
    public static PutPublicAccessBlockResponseUnmarshaller Instance { get; }
    private static PutPublicAccessBlockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutPublicAccessBlockResponseUnmarshaller GetInstance();
    public static PutPublicAccessBlockResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutStorageLensConfigurationRequestMarshaller : object {
    private static PutStorageLensConfigurationRequestMarshaller _instance;
    public static PutStorageLensConfigurationRequestMarshaller Instance { get; }
    private static PutStorageLensConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutStorageLensConfigurationRequest publicRequest);
    internal static PutStorageLensConfigurationRequestMarshaller GetInstance();
    public static PutStorageLensConfigurationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutStorageLensConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutStorageLensConfigurationResponseUnmarshaller _instance;
    public static PutStorageLensConfigurationResponseUnmarshaller Instance { get; }
    private static PutStorageLensConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutStorageLensConfigurationResponseUnmarshaller GetInstance();
    public static PutStorageLensConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutStorageLensConfigurationTaggingRequestMarshaller : object {
    private static PutStorageLensConfigurationTaggingRequestMarshaller _instance;
    public static PutStorageLensConfigurationTaggingRequestMarshaller Instance { get; }
    private static PutStorageLensConfigurationTaggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutStorageLensConfigurationTaggingRequest publicRequest);
    internal static PutStorageLensConfigurationTaggingRequestMarshaller GetInstance();
    public static PutStorageLensConfigurationTaggingRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.PutStorageLensConfigurationTaggingResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutStorageLensConfigurationTaggingResponseUnmarshaller _instance;
    public static PutStorageLensConfigurationTaggingResponseUnmarshaller Instance { get; }
    private static PutStorageLensConfigurationTaggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutStorageLensConfigurationTaggingResponseUnmarshaller GetInstance();
    public static PutStorageLensConfigurationTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.RegionalBucketUnmarshaller : object {
    private static RegionalBucketUnmarshaller _instance;
    public static RegionalBucketUnmarshaller Instance { get; }
    private static RegionalBucketUnmarshaller();
    public sealed virtual RegionalBucket Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RegionalBucket Unmarshall(JsonUnmarshallerContext context);
    public static RegionalBucketUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.RegionReportUnmarshaller : object {
    private static RegionReportUnmarshaller _instance;
    public static RegionReportUnmarshaller Instance { get; }
    private static RegionReportUnmarshaller();
    public sealed virtual RegionReport Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RegionReport Unmarshall(JsonUnmarshallerContext context);
    public static RegionReportUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.RegionUnmarshaller : object {
    private static RegionUnmarshaller _instance;
    public static RegionUnmarshaller Instance { get; }
    private static RegionUnmarshaller();
    public sealed virtual Region Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Region Unmarshall(JsonUnmarshallerContext context);
    public static RegionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ReplicaModificationsUnmarshaller : object {
    private static ReplicaModificationsUnmarshaller _instance;
    public static ReplicaModificationsUnmarshaller Instance { get; }
    private static ReplicaModificationsUnmarshaller();
    public sealed virtual ReplicaModifications Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicaModifications Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaModificationsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ReplicationConfigurationUnmarshaller : object {
    private static ReplicationConfigurationUnmarshaller _instance;
    public static ReplicationConfigurationUnmarshaller Instance { get; }
    private static ReplicationConfigurationUnmarshaller();
    public sealed virtual ReplicationConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ReplicationRuleAndOperatorUnmarshaller : object {
    private static ReplicationRuleAndOperatorUnmarshaller _instance;
    public static ReplicationRuleAndOperatorUnmarshaller Instance { get; }
    private static ReplicationRuleAndOperatorUnmarshaller();
    public sealed virtual ReplicationRuleAndOperator Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationRuleAndOperator Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationRuleAndOperatorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ReplicationRuleFilterUnmarshaller : object {
    private static ReplicationRuleFilterUnmarshaller _instance;
    public static ReplicationRuleFilterUnmarshaller Instance { get; }
    private static ReplicationRuleFilterUnmarshaller();
    public sealed virtual ReplicationRuleFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationRuleFilter Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationRuleFilterUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ReplicationRuleUnmarshaller : object {
    private static ReplicationRuleUnmarshaller _instance;
    public static ReplicationRuleUnmarshaller Instance { get; }
    private static ReplicationRuleUnmarshaller();
    public sealed virtual ReplicationRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationRule Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationRuleUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ReplicationTimeUnmarshaller : object {
    private static ReplicationTimeUnmarshaller _instance;
    public static ReplicationTimeUnmarshaller Instance { get; }
    private static ReplicationTimeUnmarshaller();
    public sealed virtual ReplicationTime Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTime Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTimeUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.ReplicationTimeValueUnmarshaller : object {
    private static ReplicationTimeValueUnmarshaller _instance;
    public static ReplicationTimeValueUnmarshaller Instance { get; }
    private static ReplicationTimeValueUnmarshaller();
    public sealed virtual ReplicationTimeValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTimeValue Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTimeValueUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3AccessControlListUnmarshaller : object {
    private static S3AccessControlListUnmarshaller _instance;
    public static S3AccessControlListUnmarshaller Instance { get; }
    private static S3AccessControlListUnmarshaller();
    public sealed virtual S3AccessControlList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3AccessControlList Unmarshall(JsonUnmarshallerContext context);
    public static S3AccessControlListUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3AccessControlPolicyUnmarshaller : object {
    private static S3AccessControlPolicyUnmarshaller _instance;
    public static S3AccessControlPolicyUnmarshaller Instance { get; }
    private static S3AccessControlPolicyUnmarshaller();
    public sealed virtual S3AccessControlPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3AccessControlPolicy Unmarshall(JsonUnmarshallerContext context);
    public static S3AccessControlPolicyUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3BucketDestinationUnmarshaller : object {
    private static S3BucketDestinationUnmarshaller _instance;
    public static S3BucketDestinationUnmarshaller Instance { get; }
    private static S3BucketDestinationUnmarshaller();
    public sealed virtual S3BucketDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3BucketDestination Unmarshall(JsonUnmarshallerContext context);
    public static S3BucketDestinationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3CopyObjectOperationUnmarshaller : object {
    private static S3CopyObjectOperationUnmarshaller _instance;
    public static S3CopyObjectOperationUnmarshaller Instance { get; }
    private static S3CopyObjectOperationUnmarshaller();
    public sealed virtual S3CopyObjectOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3CopyObjectOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3CopyObjectOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3DeleteObjectTaggingOperationUnmarshaller : object {
    private static S3DeleteObjectTaggingOperationUnmarshaller _instance;
    public static S3DeleteObjectTaggingOperationUnmarshaller Instance { get; }
    private static S3DeleteObjectTaggingOperationUnmarshaller();
    public sealed virtual S3DeleteObjectTaggingOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3DeleteObjectTaggingOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3DeleteObjectTaggingOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3GeneratedManifestDescriptorUnmarshaller : object {
    private static S3GeneratedManifestDescriptorUnmarshaller _instance;
    public static S3GeneratedManifestDescriptorUnmarshaller Instance { get; }
    private static S3GeneratedManifestDescriptorUnmarshaller();
    public sealed virtual S3GeneratedManifestDescriptor Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3GeneratedManifestDescriptor Unmarshall(JsonUnmarshallerContext context);
    public static S3GeneratedManifestDescriptorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3GranteeUnmarshaller : object {
    private static S3GranteeUnmarshaller _instance;
    public static S3GranteeUnmarshaller Instance { get; }
    private static S3GranteeUnmarshaller();
    public sealed virtual S3Grantee Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Grantee Unmarshall(JsonUnmarshallerContext context);
    public static S3GranteeUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3GrantUnmarshaller : object {
    private static S3GrantUnmarshaller _instance;
    public static S3GrantUnmarshaller Instance { get; }
    private static S3GrantUnmarshaller();
    public sealed virtual S3Grant Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Grant Unmarshall(JsonUnmarshallerContext context);
    public static S3GrantUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3InitiateRestoreObjectOperationUnmarshaller : object {
    private static S3InitiateRestoreObjectOperationUnmarshaller _instance;
    public static S3InitiateRestoreObjectOperationUnmarshaller Instance { get; }
    private static S3InitiateRestoreObjectOperationUnmarshaller();
    public sealed virtual S3InitiateRestoreObjectOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3InitiateRestoreObjectOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3InitiateRestoreObjectOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3JobManifestGeneratorUnmarshaller : object {
    private static S3JobManifestGeneratorUnmarshaller _instance;
    public static S3JobManifestGeneratorUnmarshaller Instance { get; }
    private static S3JobManifestGeneratorUnmarshaller();
    public sealed virtual S3JobManifestGenerator Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3JobManifestGenerator Unmarshall(JsonUnmarshallerContext context);
    public static S3JobManifestGeneratorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3ManifestOutputLocationUnmarshaller : object {
    private static S3ManifestOutputLocationUnmarshaller _instance;
    public static S3ManifestOutputLocationUnmarshaller Instance { get; }
    private static S3ManifestOutputLocationUnmarshaller();
    public sealed virtual S3ManifestOutputLocation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ManifestOutputLocation Unmarshall(JsonUnmarshallerContext context);
    public static S3ManifestOutputLocationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3ObjectLockLegalHoldUnmarshaller : object {
    private static S3ObjectLockLegalHoldUnmarshaller _instance;
    public static S3ObjectLockLegalHoldUnmarshaller Instance { get; }
    private static S3ObjectLockLegalHoldUnmarshaller();
    public sealed virtual S3ObjectLockLegalHold Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ObjectLockLegalHold Unmarshall(JsonUnmarshallerContext context);
    public static S3ObjectLockLegalHoldUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3ObjectMetadataUnmarshaller : object {
    private static S3ObjectMetadataUnmarshaller _instance;
    public static S3ObjectMetadataUnmarshaller Instance { get; }
    private static S3ObjectMetadataUnmarshaller();
    public sealed virtual S3ObjectMetadata Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ObjectMetadata Unmarshall(JsonUnmarshallerContext context);
    public static S3ObjectMetadataUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3ObjectOwnerUnmarshaller : object {
    private static S3ObjectOwnerUnmarshaller _instance;
    public static S3ObjectOwnerUnmarshaller Instance { get; }
    private static S3ObjectOwnerUnmarshaller();
    public sealed virtual S3ObjectOwner Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ObjectOwner Unmarshall(JsonUnmarshallerContext context);
    public static S3ObjectOwnerUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3ReplicateObjectOperationUnmarshaller : object {
    private static S3ReplicateObjectOperationUnmarshaller _instance;
    public static S3ReplicateObjectOperationUnmarshaller Instance { get; }
    private static S3ReplicateObjectOperationUnmarshaller();
    public sealed virtual S3ReplicateObjectOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ReplicateObjectOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3ReplicateObjectOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3RetentionUnmarshaller : object {
    private static S3RetentionUnmarshaller _instance;
    public static S3RetentionUnmarshaller Instance { get; }
    private static S3RetentionUnmarshaller();
    public sealed virtual S3Retention Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Retention Unmarshall(JsonUnmarshallerContext context);
    public static S3RetentionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3SetObjectAclOperationUnmarshaller : object {
    private static S3SetObjectAclOperationUnmarshaller _instance;
    public static S3SetObjectAclOperationUnmarshaller Instance { get; }
    private static S3SetObjectAclOperationUnmarshaller();
    public sealed virtual S3SetObjectAclOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3SetObjectAclOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3SetObjectAclOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3SetObjectLegalHoldOperationUnmarshaller : object {
    private static S3SetObjectLegalHoldOperationUnmarshaller _instance;
    public static S3SetObjectLegalHoldOperationUnmarshaller Instance { get; }
    private static S3SetObjectLegalHoldOperationUnmarshaller();
    public sealed virtual S3SetObjectLegalHoldOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3SetObjectLegalHoldOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3SetObjectLegalHoldOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3SetObjectRetentionOperationUnmarshaller : object {
    private static S3SetObjectRetentionOperationUnmarshaller _instance;
    public static S3SetObjectRetentionOperationUnmarshaller Instance { get; }
    private static S3SetObjectRetentionOperationUnmarshaller();
    public sealed virtual S3SetObjectRetentionOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3SetObjectRetentionOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3SetObjectRetentionOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3SetObjectTaggingOperationUnmarshaller : object {
    private static S3SetObjectTaggingOperationUnmarshaller _instance;
    public static S3SetObjectTaggingOperationUnmarshaller Instance { get; }
    private static S3SetObjectTaggingOperationUnmarshaller();
    public sealed virtual S3SetObjectTaggingOperation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3SetObjectTaggingOperation Unmarshall(JsonUnmarshallerContext context);
    public static S3SetObjectTaggingOperationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.S3TagUnmarshaller : object {
    private static S3TagUnmarshaller _instance;
    public static S3TagUnmarshaller Instance { get; }
    private static S3TagUnmarshaller();
    public sealed virtual S3Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Tag Unmarshall(JsonUnmarshallerContext context);
    public static S3TagUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SelectionCriteriaUnmarshaller : object {
    private static SelectionCriteriaUnmarshaller _instance;
    public static SelectionCriteriaUnmarshaller Instance { get; }
    private static SelectionCriteriaUnmarshaller();
    public sealed virtual SelectionCriteria Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SelectionCriteria Unmarshall(JsonUnmarshallerContext context);
    public static SelectionCriteriaUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SourceSelectionCriteriaUnmarshaller : object {
    private static SourceSelectionCriteriaUnmarshaller _instance;
    public static SourceSelectionCriteriaUnmarshaller Instance { get; }
    private static SourceSelectionCriteriaUnmarshaller();
    public sealed virtual SourceSelectionCriteria Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceSelectionCriteria Unmarshall(JsonUnmarshallerContext context);
    public static SourceSelectionCriteriaUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SseKmsEncryptedObjectsUnmarshaller : object {
    private static SseKmsEncryptedObjectsUnmarshaller _instance;
    public static SseKmsEncryptedObjectsUnmarshaller Instance { get; }
    private static SseKmsEncryptedObjectsUnmarshaller();
    public sealed virtual SseKmsEncryptedObjects Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SseKmsEncryptedObjects Unmarshall(JsonUnmarshallerContext context);
    public static SseKmsEncryptedObjectsUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SSEKMSEncryptionUnmarshaller : object {
    private static SSEKMSEncryptionUnmarshaller _instance;
    public static SSEKMSEncryptionUnmarshaller Instance { get; }
    private static SSEKMSEncryptionUnmarshaller();
    public sealed virtual SSEKMSEncryption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SSEKMSEncryption Unmarshall(JsonUnmarshallerContext context);
    public static SSEKMSEncryptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SSEKMSUnmarshaller : object {
    private static SSEKMSUnmarshaller _instance;
    public static SSEKMSUnmarshaller Instance { get; }
    private static SSEKMSUnmarshaller();
    public sealed virtual SSEKMS Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SSEKMS Unmarshall(JsonUnmarshallerContext context);
    public static SSEKMSUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SSES3EncryptionUnmarshaller : object {
    private static SSES3EncryptionUnmarshaller _instance;
    public static SSES3EncryptionUnmarshaller Instance { get; }
    private static SSES3EncryptionUnmarshaller();
    public sealed virtual SSES3Encryption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SSES3Encryption Unmarshall(JsonUnmarshallerContext context);
    public static SSES3EncryptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SSES3Unmarshaller : object {
    private static SSES3Unmarshaller _instance;
    public static SSES3Unmarshaller Instance { get; }
    private static SSES3Unmarshaller();
    public sealed virtual SSES3 Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SSES3 Unmarshall(JsonUnmarshallerContext context);
    public static SSES3Unmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensAwsOrgUnmarshaller : object {
    private static StorageLensAwsOrgUnmarshaller _instance;
    public static StorageLensAwsOrgUnmarshaller Instance { get; }
    private static StorageLensAwsOrgUnmarshaller();
    public sealed virtual StorageLensAwsOrg Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensAwsOrg Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensAwsOrgUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensConfigurationUnmarshaller : object {
    private static StorageLensConfigurationUnmarshaller _instance;
    public static StorageLensConfigurationUnmarshaller Instance { get; }
    private static StorageLensConfigurationUnmarshaller();
    public sealed virtual StorageLensConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensDataExportEncryptionUnmarshaller : object {
    private static StorageLensDataExportEncryptionUnmarshaller _instance;
    public static StorageLensDataExportEncryptionUnmarshaller Instance { get; }
    private static StorageLensDataExportEncryptionUnmarshaller();
    public sealed virtual StorageLensDataExportEncryption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensDataExportEncryption Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensDataExportEncryptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensDataExportUnmarshaller : object {
    private static StorageLensDataExportUnmarshaller _instance;
    public static StorageLensDataExportUnmarshaller Instance { get; }
    private static StorageLensDataExportUnmarshaller();
    public sealed virtual StorageLensDataExport Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensDataExport Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensDataExportUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensGroupAndOperatorUnmarshaller : object {
    private static StorageLensGroupAndOperatorUnmarshaller _instance;
    public static StorageLensGroupAndOperatorUnmarshaller Instance { get; }
    private static StorageLensGroupAndOperatorUnmarshaller();
    public sealed virtual StorageLensGroupAndOperator Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensGroupAndOperator Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensGroupAndOperatorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensGroupFilterUnmarshaller : object {
    private static StorageLensGroupFilterUnmarshaller _instance;
    public static StorageLensGroupFilterUnmarshaller Instance { get; }
    private static StorageLensGroupFilterUnmarshaller();
    public sealed virtual StorageLensGroupFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensGroupFilter Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensGroupFilterUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensGroupLevelSelectionCriteriaUnmarshaller : object {
    private static StorageLensGroupLevelSelectionCriteriaUnmarshaller _instance;
    public static StorageLensGroupLevelSelectionCriteriaUnmarshaller Instance { get; }
    private static StorageLensGroupLevelSelectionCriteriaUnmarshaller();
    public sealed virtual StorageLensGroupLevelSelectionCriteria Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensGroupLevelSelectionCriteria Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensGroupLevelSelectionCriteriaUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensGroupLevelUnmarshaller : object {
    private static StorageLensGroupLevelUnmarshaller _instance;
    public static StorageLensGroupLevelUnmarshaller Instance { get; }
    private static StorageLensGroupLevelUnmarshaller();
    public sealed virtual StorageLensGroupLevel Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensGroupLevel Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensGroupLevelUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensGroupOrOperatorUnmarshaller : object {
    private static StorageLensGroupOrOperatorUnmarshaller _instance;
    public static StorageLensGroupOrOperatorUnmarshaller Instance { get; }
    private static StorageLensGroupOrOperatorUnmarshaller();
    public sealed virtual StorageLensGroupOrOperator Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensGroupOrOperator Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensGroupOrOperatorUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensGroupUnmarshaller : object {
    private static StorageLensGroupUnmarshaller _instance;
    public static StorageLensGroupUnmarshaller Instance { get; }
    private static StorageLensGroupUnmarshaller();
    public sealed virtual StorageLensGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensGroup Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensGroupUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.StorageLensTagUnmarshaller : object {
    private static StorageLensTagUnmarshaller _instance;
    public static StorageLensTagUnmarshaller Instance { get; }
    private static StorageLensTagUnmarshaller();
    public sealed virtual StorageLensTag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageLensTag Unmarshall(JsonUnmarshallerContext context);
    public static StorageLensTagUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SubmitMultiRegionAccessPointRoutesRequestMarshaller : object {
    private static SubmitMultiRegionAccessPointRoutesRequestMarshaller _instance;
    public static SubmitMultiRegionAccessPointRoutesRequestMarshaller Instance { get; }
    private static SubmitMultiRegionAccessPointRoutesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SubmitMultiRegionAccessPointRoutesRequest publicRequest);
    internal static SubmitMultiRegionAccessPointRoutesRequestMarshaller GetInstance();
    public static SubmitMultiRegionAccessPointRoutesRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.SubmitMultiRegionAccessPointRoutesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SubmitMultiRegionAccessPointRoutesResponseUnmarshaller _instance;
    public static SubmitMultiRegionAccessPointRoutesResponseUnmarshaller Instance { get; }
    private static SubmitMultiRegionAccessPointRoutesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SubmitMultiRegionAccessPointRoutesResponseUnmarshaller GetInstance();
    public static SubmitMultiRegionAccessPointRoutesResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller : object {
    private static TooManyTagsExceptionUnmarshaller _instance;
    public static TooManyTagsExceptionUnmarshaller Instance { get; }
    private static TooManyTagsExceptionUnmarshaller();
    public sealed virtual TooManyTagsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyTagsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTagsExceptionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.TransitionUnmarshaller : object {
    private static TransitionUnmarshaller _instance;
    public static TransitionUnmarshaller Instance { get; }
    private static TransitionUnmarshaller();
    public sealed virtual Transition Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Transition Unmarshall(JsonUnmarshallerContext context);
    public static TransitionUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateAccessGrantsLocationRequestMarshaller : object {
    private static UpdateAccessGrantsLocationRequestMarshaller _instance;
    public static UpdateAccessGrantsLocationRequestMarshaller Instance { get; }
    private static UpdateAccessGrantsLocationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAccessGrantsLocationRequest publicRequest);
    internal static UpdateAccessGrantsLocationRequestMarshaller GetInstance();
    public static UpdateAccessGrantsLocationRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateAccessGrantsLocationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateAccessGrantsLocationResponseUnmarshaller _instance;
    public static UpdateAccessGrantsLocationResponseUnmarshaller Instance { get; }
    private static UpdateAccessGrantsLocationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateAccessGrantsLocationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAccessGrantsLocationResponseUnmarshaller GetInstance();
    public static UpdateAccessGrantsLocationResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateJobPriorityRequestMarshaller : object {
    private static UpdateJobPriorityRequestMarshaller _instance;
    public static UpdateJobPriorityRequestMarshaller Instance { get; }
    private static UpdateJobPriorityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateJobPriorityRequest publicRequest);
    internal static UpdateJobPriorityRequestMarshaller GetInstance();
    public static UpdateJobPriorityRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateJobPriorityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateJobPriorityResponseUnmarshaller _instance;
    public static UpdateJobPriorityResponseUnmarshaller Instance { get; }
    private static UpdateJobPriorityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateJobPriorityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateJobPriorityResponseUnmarshaller GetInstance();
    public static UpdateJobPriorityResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateJobStatusRequestMarshaller : object {
    private static UpdateJobStatusRequestMarshaller _instance;
    public static UpdateJobStatusRequestMarshaller Instance { get; }
    private static UpdateJobStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateJobStatusRequest publicRequest);
    internal static UpdateJobStatusRequestMarshaller GetInstance();
    public static UpdateJobStatusRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateJobStatusResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateJobStatusResponseUnmarshaller _instance;
    public static UpdateJobStatusResponseUnmarshaller Instance { get; }
    private static UpdateJobStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateJobStatusResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateJobStatusResponseUnmarshaller GetInstance();
    public static UpdateJobStatusResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateStorageLensGroupRequestMarshaller : object {
    private static UpdateStorageLensGroupRequestMarshaller _instance;
    public static UpdateStorageLensGroupRequestMarshaller Instance { get; }
    private static UpdateStorageLensGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateStorageLensGroupRequest publicRequest);
    internal static UpdateStorageLensGroupRequestMarshaller GetInstance();
    public static UpdateStorageLensGroupRequestMarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.UpdateStorageLensGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateStorageLensGroupResponseUnmarshaller _instance;
    public static UpdateStorageLensGroupResponseUnmarshaller Instance { get; }
    private static UpdateStorageLensGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateStorageLensGroupResponseUnmarshaller GetInstance();
    public static UpdateStorageLensGroupResponseUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.Internal.MarshallTransformations.VpcConfigurationUnmarshaller : object {
    private static VpcConfigurationUnmarshaller _instance;
    public static VpcConfigurationUnmarshaller Instance { get; }
    private static VpcConfigurationUnmarshaller();
    public sealed virtual VpcConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static VpcConfigurationUnmarshaller get_Instance();
}
public class Amazon.S3Control.Model.InternalServiceException : AmazonS3ControlException {
    public InternalServiceException(string message);
    public InternalServiceException(string message, Exception innerException);
    public InternalServiceException(Exception innerException);
    public InternalServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.InvalidNextTokenException : AmazonS3ControlException {
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.InvalidRequestException : AmazonS3ControlException {
    public InvalidRequestException(string message);
    public InvalidRequestException(string message, Exception innerException);
    public InvalidRequestException(Exception innerException);
    public InvalidRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.S3Control.Model.IS3ControlPaginatorFactory {
    public abstract virtual IListAccessGrantsPaginator ListAccessGrants(ListAccessGrantsRequest request);
    public abstract virtual IListAccessGrantsInstancesPaginator ListAccessGrantsInstances(ListAccessGrantsInstancesRequest request);
    public abstract virtual IListAccessGrantsLocationsPaginator ListAccessGrantsLocations(ListAccessGrantsLocationsRequest request);
    public abstract virtual IListAccessPointsPaginator ListAccessPoints(ListAccessPointsRequest request);
    public abstract virtual IListAccessPointsForObjectLambdaPaginator ListAccessPointsForObjectLambda(ListAccessPointsForObjectLambdaRequest request);
    public abstract virtual IListJobsPaginator ListJobs(ListJobsRequest request);
    public abstract virtual IListMultiRegionAccessPointsPaginator ListMultiRegionAccessPoints(ListMultiRegionAccessPointsRequest request);
    public abstract virtual IListRegionalBucketsPaginator ListRegionalBuckets(ListRegionalBucketsRequest request);
    public abstract virtual IListStorageLensConfigurationsPaginator ListStorageLensConfigurations(ListStorageLensConfigurationsRequest request);
    public abstract virtual IListStorageLensGroupsPaginator ListStorageLensGroups(ListStorageLensGroupsRequest request);
}
public class Amazon.S3Control.Model.JobDescriptor : object {
    private Nullable`1<bool> _confirmationRequired;
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private List`1<JobFailure> _failureReasons;
    private S3GeneratedManifestDescriptor _generatedManifestDescriptor;
    private string _jobArn;
    private string _jobId;
    private JobManifest _manifest;
    private JobManifestGenerator _manifestGenerator;
    private JobOperation _operation;
    private Nullable`1<int> _priority;
    private JobProgressSummary _progressSummary;
    private JobReport _report;
    private string _roleArn;
    private JobStatus _status;
    private string _statusUpdateReason;
    private string _suspendedCause;
    private Nullable`1<DateTime> _suspendedDate;
    private Nullable`1<DateTime> _terminationDate;
    public Nullable`1<bool> ConfirmationRequired { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<JobFailure> FailureReasons { get; public set; }
    public S3GeneratedManifestDescriptor GeneratedManifestDescriptor { get; public set; }
    [AWSPropertyAttribute]
public string JobArn { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public JobManifest Manifest { get; public set; }
    public JobManifestGenerator ManifestGenerator { get; public set; }
    public JobOperation Operation { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public JobProgressSummary ProgressSummary { get; public set; }
    public JobReport Report { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public JobStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusUpdateReason { get; public set; }
    [AWSPropertyAttribute]
public string SuspendedCause { get; public set; }
    public Nullable`1<DateTime> SuspendedDate { get; public set; }
    public Nullable`1<DateTime> TerminationDate { get; public set; }
    public Nullable`1<bool> get_ConfirmationRequired();
    public void set_ConfirmationRequired(Nullable`1<bool> value);
    internal bool IsSetConfirmationRequired();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<JobFailure> get_FailureReasons();
    public void set_FailureReasons(List`1<JobFailure> value);
    internal bool IsSetFailureReasons();
    public S3GeneratedManifestDescriptor get_GeneratedManifestDescriptor();
    public void set_GeneratedManifestDescriptor(S3GeneratedManifestDescriptor value);
    internal bool IsSetGeneratedManifestDescriptor();
    public string get_JobArn();
    public void set_JobArn(string value);
    internal bool IsSetJobArn();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public JobManifest get_Manifest();
    public void set_Manifest(JobManifest value);
    internal bool IsSetManifest();
    public JobManifestGenerator get_ManifestGenerator();
    public void set_ManifestGenerator(JobManifestGenerator value);
    internal bool IsSetManifestGenerator();
    public JobOperation get_Operation();
    public void set_Operation(JobOperation value);
    internal bool IsSetOperation();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public JobProgressSummary get_ProgressSummary();
    public void set_ProgressSummary(JobProgressSummary value);
    internal bool IsSetProgressSummary();
    public JobReport get_Report();
    public void set_Report(JobReport value);
    internal bool IsSetReport();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public JobStatus get_Status();
    public void set_Status(JobStatus value);
    internal bool IsSetStatus();
    public string get_StatusUpdateReason();
    public void set_StatusUpdateReason(string value);
    internal bool IsSetStatusUpdateReason();
    public string get_SuspendedCause();
    public void set_SuspendedCause(string value);
    internal bool IsSetSuspendedCause();
    public Nullable`1<DateTime> get_SuspendedDate();
    public void set_SuspendedDate(Nullable`1<DateTime> value);
    internal bool IsSetSuspendedDate();
    public Nullable`1<DateTime> get_TerminationDate();
    public void set_TerminationDate(Nullable`1<DateTime> value);
    internal bool IsSetTerminationDate();
}
public class Amazon.S3Control.Model.JobFailure : object {
    private string _failureCode;
    private string _failureReason;
    [AWSPropertyAttribute]
public string FailureCode { get; public set; }
    [AWSPropertyAttribute]
public string FailureReason { get; public set; }
    public string get_FailureCode();
    public void set_FailureCode(string value);
    internal bool IsSetFailureCode();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
}
public class Amazon.S3Control.Model.JobListDescriptor : object {
    private Nullable`1<DateTime> _creationTime;
    private string _description;
    private string _jobId;
    private OperationName _operation;
    private Nullable`1<int> _priority;
    private JobProgressSummary _progressSummary;
    private JobStatus _status;
    private Nullable`1<DateTime> _terminationDate;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public OperationName Operation { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public JobProgressSummary ProgressSummary { get; public set; }
    public JobStatus Status { get; public set; }
    public Nullable`1<DateTime> TerminationDate { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public OperationName get_Operation();
    public void set_Operation(OperationName value);
    internal bool IsSetOperation();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public JobProgressSummary get_ProgressSummary();
    public void set_ProgressSummary(JobProgressSummary value);
    internal bool IsSetProgressSummary();
    public JobStatus get_Status();
    public void set_Status(JobStatus value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_TerminationDate();
    public void set_TerminationDate(Nullable`1<DateTime> value);
    internal bool IsSetTerminationDate();
}
public class Amazon.S3Control.Model.JobManifest : object {
    private JobManifestLocation _location;
    private JobManifestSpec _spec;
    [AWSPropertyAttribute]
public JobManifestLocation Location { get; public set; }
    [AWSPropertyAttribute]
public JobManifestSpec Spec { get; public set; }
    public JobManifestLocation get_Location();
    public void set_Location(JobManifestLocation value);
    internal bool IsSetLocation();
    public JobManifestSpec get_Spec();
    public void set_Spec(JobManifestSpec value);
    internal bool IsSetSpec();
}
public class Amazon.S3Control.Model.JobManifestGenerator : object {
    private S3JobManifestGenerator _s3JobManifestGenerator;
    public S3JobManifestGenerator S3JobManifestGenerator { get; public set; }
    public S3JobManifestGenerator get_S3JobManifestGenerator();
    public void set_S3JobManifestGenerator(S3JobManifestGenerator value);
    internal bool IsSetS3JobManifestGenerator();
}
public class Amazon.S3Control.Model.JobManifestGeneratorFilter : object {
    private Nullable`1<DateTime> _createdAfter;
    private Nullable`1<DateTime> _createdBefore;
    private Nullable`1<bool> _eligibleForReplication;
    private KeyNameConstraint _keyNameConstraint;
    private List`1<string> _matchAnyStorageClass;
    private List`1<string> _objectReplicationStatuses;
    private Nullable`1<long> _objectSizeGreaterThanBytes;
    private Nullable`1<long> _objectSizeLessThanBytes;
    public Nullable`1<DateTime> CreatedAfter { get; public set; }
    public Nullable`1<DateTime> CreatedBefore { get; public set; }
    public Nullable`1<bool> EligibleForReplication { get; public set; }
    public KeyNameConstraint KeyNameConstraint { get; public set; }
    public List`1<string> MatchAnyStorageClass { get; public set; }
    public List`1<string> ObjectReplicationStatuses { get; public set; }
    public Nullable`1<long> ObjectSizeGreaterThanBytes { get; public set; }
    public Nullable`1<long> ObjectSizeLessThanBytes { get; public set; }
    public Nullable`1<DateTime> get_CreatedAfter();
    public void set_CreatedAfter(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAfter();
    public Nullable`1<DateTime> get_CreatedBefore();
    public void set_CreatedBefore(Nullable`1<DateTime> value);
    internal bool IsSetCreatedBefore();
    public Nullable`1<bool> get_EligibleForReplication();
    public void set_EligibleForReplication(Nullable`1<bool> value);
    internal bool IsSetEligibleForReplication();
    public KeyNameConstraint get_KeyNameConstraint();
    public void set_KeyNameConstraint(KeyNameConstraint value);
    internal bool IsSetKeyNameConstraint();
    public List`1<string> get_MatchAnyStorageClass();
    public void set_MatchAnyStorageClass(List`1<string> value);
    internal bool IsSetMatchAnyStorageClass();
    public List`1<string> get_ObjectReplicationStatuses();
    public void set_ObjectReplicationStatuses(List`1<string> value);
    internal bool IsSetObjectReplicationStatuses();
    public Nullable`1<long> get_ObjectSizeGreaterThanBytes();
    public void set_ObjectSizeGreaterThanBytes(Nullable`1<long> value);
    internal bool IsSetObjectSizeGreaterThanBytes();
    public Nullable`1<long> get_ObjectSizeLessThanBytes();
    public void set_ObjectSizeLessThanBytes(Nullable`1<long> value);
    internal bool IsSetObjectSizeLessThanBytes();
}
public class Amazon.S3Control.Model.JobManifestLocation : object {
    private string _eTag;
    private string _objectArn;
    private string _objectVersionId;
    [AWSPropertyAttribute]
public string ETag { get; public set; }
    [AWSPropertyAttribute]
public string ObjectArn { get; public set; }
    [AWSPropertyAttribute]
public string ObjectVersionId { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_ObjectArn();
    public void set_ObjectArn(string value);
    internal bool IsSetObjectArn();
    public string get_ObjectVersionId();
    public void set_ObjectVersionId(string value);
    internal bool IsSetObjectVersionId();
}
public class Amazon.S3Control.Model.JobManifestSpec : object {
    private List`1<string> _fields;
    private JobManifestFormat _format;
    public List`1<string> Fields { get; public set; }
    [AWSPropertyAttribute]
public JobManifestFormat Format { get; public set; }
    public List`1<string> get_Fields();
    public void set_Fields(List`1<string> value);
    internal bool IsSetFields();
    public JobManifestFormat get_Format();
    public void set_Format(JobManifestFormat value);
    internal bool IsSetFormat();
}
public class Amazon.S3Control.Model.JobOperation : object {
    private LambdaInvokeOperation _lambdaInvoke;
    private S3DeleteObjectTaggingOperation _s3DeleteObjectTagging;
    private S3InitiateRestoreObjectOperation _s3InitiateRestoreObject;
    private S3SetObjectAclOperation _s3PutObjectAcl;
    private S3CopyObjectOperation _s3PutObjectCopy;
    private S3SetObjectLegalHoldOperation _s3PutObjectLegalHold;
    private S3SetObjectRetentionOperation _s3PutObjectRetention;
    private S3SetObjectTaggingOperation _s3PutObjectTagging;
    private S3ReplicateObjectOperation _s3ReplicateObject;
    public LambdaInvokeOperation LambdaInvoke { get; public set; }
    public S3DeleteObjectTaggingOperation S3DeleteObjectTagging { get; public set; }
    public S3InitiateRestoreObjectOperation S3InitiateRestoreObject { get; public set; }
    public S3SetObjectAclOperation S3PutObjectAcl { get; public set; }
    public S3CopyObjectOperation S3PutObjectCopy { get; public set; }
    public S3SetObjectLegalHoldOperation S3PutObjectLegalHold { get; public set; }
    public S3SetObjectRetentionOperation S3PutObjectRetention { get; public set; }
    public S3SetObjectTaggingOperation S3PutObjectTagging { get; public set; }
    public S3ReplicateObjectOperation S3ReplicateObject { get; public set; }
    public LambdaInvokeOperation get_LambdaInvoke();
    public void set_LambdaInvoke(LambdaInvokeOperation value);
    internal bool IsSetLambdaInvoke();
    public S3DeleteObjectTaggingOperation get_S3DeleteObjectTagging();
    public void set_S3DeleteObjectTagging(S3DeleteObjectTaggingOperation value);
    internal bool IsSetS3DeleteObjectTagging();
    public S3InitiateRestoreObjectOperation get_S3InitiateRestoreObject();
    public void set_S3InitiateRestoreObject(S3InitiateRestoreObjectOperation value);
    internal bool IsSetS3InitiateRestoreObject();
    public S3SetObjectAclOperation get_S3PutObjectAcl();
    public void set_S3PutObjectAcl(S3SetObjectAclOperation value);
    internal bool IsSetS3PutObjectAcl();
    public S3CopyObjectOperation get_S3PutObjectCopy();
    public void set_S3PutObjectCopy(S3CopyObjectOperation value);
    internal bool IsSetS3PutObjectCopy();
    public S3SetObjectLegalHoldOperation get_S3PutObjectLegalHold();
    public void set_S3PutObjectLegalHold(S3SetObjectLegalHoldOperation value);
    internal bool IsSetS3PutObjectLegalHold();
    public S3SetObjectRetentionOperation get_S3PutObjectRetention();
    public void set_S3PutObjectRetention(S3SetObjectRetentionOperation value);
    internal bool IsSetS3PutObjectRetention();
    public S3SetObjectTaggingOperation get_S3PutObjectTagging();
    public void set_S3PutObjectTagging(S3SetObjectTaggingOperation value);
    internal bool IsSetS3PutObjectTagging();
    public S3ReplicateObjectOperation get_S3ReplicateObject();
    public void set_S3ReplicateObject(S3ReplicateObjectOperation value);
    internal bool IsSetS3ReplicateObject();
}
public class Amazon.S3Control.Model.JobProgressSummary : object {
    private Nullable`1<long> _numberOfTasksFailed;
    private Nullable`1<long> _numberOfTasksSucceeded;
    private JobTimers _timers;
    private Nullable`1<long> _totalNumberOfTasks;
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfTasksFailed { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfTasksSucceeded { get; public set; }
    public JobTimers Timers { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> TotalNumberOfTasks { get; public set; }
    public Nullable`1<long> get_NumberOfTasksFailed();
    public void set_NumberOfTasksFailed(Nullable`1<long> value);
    internal bool IsSetNumberOfTasksFailed();
    public Nullable`1<long> get_NumberOfTasksSucceeded();
    public void set_NumberOfTasksSucceeded(Nullable`1<long> value);
    internal bool IsSetNumberOfTasksSucceeded();
    public JobTimers get_Timers();
    public void set_Timers(JobTimers value);
    internal bool IsSetTimers();
    public Nullable`1<long> get_TotalNumberOfTasks();
    public void set_TotalNumberOfTasks(Nullable`1<long> value);
    internal bool IsSetTotalNumberOfTasks();
}
public class Amazon.S3Control.Model.JobReport : object {
    private string _bucket;
    private Nullable`1<bool> _enabled;
    private JobReportFormat _format;
    private string _prefix;
    private JobReportScope _reportScope;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public JobReportFormat Format { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    public JobReportScope ReportScope { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public JobReportFormat get_Format();
    public void set_Format(JobReportFormat value);
    internal bool IsSetFormat();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public JobReportScope get_ReportScope();
    public void set_ReportScope(JobReportScope value);
    internal bool IsSetReportScope();
}
public class Amazon.S3Control.Model.JobStatusException : AmazonS3ControlException {
    public JobStatusException(string message);
    public JobStatusException(string message, Exception innerException);
    public JobStatusException(Exception innerException);
    public JobStatusException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public JobStatusException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.JobTimers : object {
    private Nullable`1<long> _elapsedTimeInActiveSeconds;
    [AWSPropertyAttribute]
public Nullable`1<long> ElapsedTimeInActiveSeconds { get; public set; }
    public Nullable`1<long> get_ElapsedTimeInActiveSeconds();
    public void set_ElapsedTimeInActiveSeconds(Nullable`1<long> value);
    internal bool IsSetElapsedTimeInActiveSeconds();
}
public class Amazon.S3Control.Model.KeyNameConstraint : object {
    private List`1<string> _matchAnyPrefix;
    private List`1<string> _matchAnySubstring;
    private List`1<string> _matchAnySuffix;
    public List`1<string> MatchAnyPrefix { get; public set; }
    public List`1<string> MatchAnySubstring { get; public set; }
    public List`1<string> MatchAnySuffix { get; public set; }
    public List`1<string> get_MatchAnyPrefix();
    public void set_MatchAnyPrefix(List`1<string> value);
    internal bool IsSetMatchAnyPrefix();
    public List`1<string> get_MatchAnySubstring();
    public void set_MatchAnySubstring(List`1<string> value);
    internal bool IsSetMatchAnySubstring();
    public List`1<string> get_MatchAnySuffix();
    public void set_MatchAnySuffix(List`1<string> value);
    internal bool IsSetMatchAnySuffix();
}
public class Amazon.S3Control.Model.LambdaInvokeOperation : object {
    private string _functionArn;
    private string _invocationSchemaVersion;
    private Dictionary`2<string, string> _userArguments;
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    [AWSPropertyAttribute]
public string InvocationSchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> UserArguments { get; public set; }
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_InvocationSchemaVersion();
    public void set_InvocationSchemaVersion(string value);
    internal bool IsSetInvocationSchemaVersion();
    public Dictionary`2<string, string> get_UserArguments();
    public void set_UserArguments(Dictionary`2<string, string> value);
    internal bool IsSetUserArguments();
}
public class Amazon.S3Control.Model.LifecycleConfiguration : object {
    private List`1<LifecycleRule> _rules;
    public List`1<LifecycleRule> Rules { get; public set; }
    public List`1<LifecycleRule> get_Rules();
    public void set_Rules(List`1<LifecycleRule> value);
    internal bool IsSetRules();
}
public class Amazon.S3Control.Model.LifecycleExpiration : object {
    private Nullable`1<DateTime> _date;
    private Nullable`1<int> _days;
    private Nullable`1<bool> _expiredObjectDeleteMarker;
    public Nullable`1<DateTime> Date { get; public set; }
    public Nullable`1<int> Days { get; public set; }
    public Nullable`1<bool> ExpiredObjectDeleteMarker { get; public set; }
    public Nullable`1<DateTime> get_Date();
    public void set_Date(Nullable`1<DateTime> value);
    internal bool IsSetDate();
    public Nullable`1<int> get_Days();
    public void set_Days(Nullable`1<int> value);
    internal bool IsSetDays();
    public Nullable`1<bool> get_ExpiredObjectDeleteMarker();
    public void set_ExpiredObjectDeleteMarker(Nullable`1<bool> value);
    internal bool IsSetExpiredObjectDeleteMarker();
}
public class Amazon.S3Control.Model.LifecycleRule : object {
    private AbortIncompleteMultipartUpload _abortIncompleteMultipartUpload;
    private LifecycleExpiration _expiration;
    private LifecycleRuleFilter _filter;
    private string _id;
    private NoncurrentVersionExpiration _noncurrentVersionExpiration;
    private List`1<NoncurrentVersionTransition> _noncurrentVersionTransitions;
    private ExpirationStatus _status;
    private List`1<Transition> _transitions;
    public AbortIncompleteMultipartUpload AbortIncompleteMultipartUpload { get; public set; }
    public LifecycleExpiration Expiration { get; public set; }
    public LifecycleRuleFilter Filter { get; public set; }
    public string ID { get; public set; }
    public NoncurrentVersionExpiration NoncurrentVersionExpiration { get; public set; }
    public List`1<NoncurrentVersionTransition> NoncurrentVersionTransitions { get; public set; }
    [AWSPropertyAttribute]
public ExpirationStatus Status { get; public set; }
    public List`1<Transition> Transitions { get; public set; }
    public AbortIncompleteMultipartUpload get_AbortIncompleteMultipartUpload();
    public void set_AbortIncompleteMultipartUpload(AbortIncompleteMultipartUpload value);
    internal bool IsSetAbortIncompleteMultipartUpload();
    public LifecycleExpiration get_Expiration();
    public void set_Expiration(LifecycleExpiration value);
    internal bool IsSetExpiration();
    public LifecycleRuleFilter get_Filter();
    public void set_Filter(LifecycleRuleFilter value);
    internal bool IsSetFilter();
    public string get_ID();
    public void set_ID(string value);
    internal bool IsSetID();
    public NoncurrentVersionExpiration get_NoncurrentVersionExpiration();
    public void set_NoncurrentVersionExpiration(NoncurrentVersionExpiration value);
    internal bool IsSetNoncurrentVersionExpiration();
    public List`1<NoncurrentVersionTransition> get_NoncurrentVersionTransitions();
    public void set_NoncurrentVersionTransitions(List`1<NoncurrentVersionTransition> value);
    internal bool IsSetNoncurrentVersionTransitions();
    public ExpirationStatus get_Status();
    public void set_Status(ExpirationStatus value);
    internal bool IsSetStatus();
    public List`1<Transition> get_Transitions();
    public void set_Transitions(List`1<Transition> value);
    internal bool IsSetTransitions();
}
public class Amazon.S3Control.Model.LifecycleRuleAndOperator : object {
    private Nullable`1<long> _objectSizeGreaterThan;
    private Nullable`1<long> _objectSizeLessThan;
    private string _prefix;
    private List`1<S3Tag> _tags;
    public Nullable`1<long> ObjectSizeGreaterThan { get; public set; }
    public Nullable`1<long> ObjectSizeLessThan { get; public set; }
    public string Prefix { get; public set; }
    public List`1<S3Tag> Tags { get; public set; }
    public Nullable`1<long> get_ObjectSizeGreaterThan();
    public void set_ObjectSizeGreaterThan(Nullable`1<long> value);
    internal bool IsSetObjectSizeGreaterThan();
    public Nullable`1<long> get_ObjectSizeLessThan();
    public void set_ObjectSizeLessThan(Nullable`1<long> value);
    internal bool IsSetObjectSizeLessThan();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public List`1<S3Tag> get_Tags();
    public void set_Tags(List`1<S3Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.LifecycleRuleFilter : object {
    private LifecycleRuleAndOperator _and;
    private Nullable`1<long> _objectSizeGreaterThan;
    private Nullable`1<long> _objectSizeLessThan;
    private string _prefix;
    private S3Tag _tag;
    public LifecycleRuleAndOperator And { get; public set; }
    public Nullable`1<long> ObjectSizeGreaterThan { get; public set; }
    public Nullable`1<long> ObjectSizeLessThan { get; public set; }
    public string Prefix { get; public set; }
    public S3Tag Tag { get; public set; }
    public LifecycleRuleAndOperator get_And();
    public void set_And(LifecycleRuleAndOperator value);
    internal bool IsSetAnd();
    public Nullable`1<long> get_ObjectSizeGreaterThan();
    public void set_ObjectSizeGreaterThan(Nullable`1<long> value);
    internal bool IsSetObjectSizeGreaterThan();
    public Nullable`1<long> get_ObjectSizeLessThan();
    public void set_ObjectSizeLessThan(Nullable`1<long> value);
    internal bool IsSetObjectSizeLessThan();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public S3Tag get_Tag();
    public void set_Tag(S3Tag value);
    internal bool IsSetTag();
}
public class Amazon.S3Control.Model.ListAccessGrantEntry : object {
    private string _accessGrantArn;
    private string _accessGrantId;
    private AccessGrantsLocationConfiguration _accessGrantsLocationConfiguration;
    private string _accessGrantsLocationId;
    private string _applicationArn;
    private Nullable`1<DateTime> _createdAt;
    private Grantee _grantee;
    private string _grantScope;
    private Permission _permission;
    [AWSPropertyAttribute]
public string AccessGrantArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantId { get; public set; }
    public AccessGrantsLocationConfiguration AccessGrantsLocationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    [AWSPropertyAttribute]
public string ApplicationArn { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    public Grantee Grantee { get; public set; }
    [AWSPropertyAttribute]
public string GrantScope { get; public set; }
    public Permission Permission { get; public set; }
    public string get_AccessGrantArn();
    public void set_AccessGrantArn(string value);
    internal bool IsSetAccessGrantArn();
    public string get_AccessGrantId();
    public void set_AccessGrantId(string value);
    internal bool IsSetAccessGrantId();
    public AccessGrantsLocationConfiguration get_AccessGrantsLocationConfiguration();
    public void set_AccessGrantsLocationConfiguration(AccessGrantsLocationConfiguration value);
    internal bool IsSetAccessGrantsLocationConfiguration();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public string get_ApplicationArn();
    public void set_ApplicationArn(string value);
    internal bool IsSetApplicationArn();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public Grantee get_Grantee();
    public void set_Grantee(Grantee value);
    internal bool IsSetGrantee();
    public string get_GrantScope();
    public void set_GrantScope(string value);
    internal bool IsSetGrantScope();
    public Permission get_Permission();
    public void set_Permission(Permission value);
    internal bool IsSetPermission();
}
public class Amazon.S3Control.Model.ListAccessGrantsInstanceEntry : object {
    private string _accessGrantsInstanceArn;
    private string _accessGrantsInstanceId;
    private Nullable`1<DateTime> _createdAt;
    private string _identityCenterArn;
    [AWSPropertyAttribute]
public string AccessGrantsInstanceArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsInstanceId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string IdentityCenterArn { get; public set; }
    public string get_AccessGrantsInstanceArn();
    public void set_AccessGrantsInstanceArn(string value);
    internal bool IsSetAccessGrantsInstanceArn();
    public string get_AccessGrantsInstanceId();
    public void set_AccessGrantsInstanceId(string value);
    internal bool IsSetAccessGrantsInstanceId();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_IdentityCenterArn();
    public void set_IdentityCenterArn(string value);
    internal bool IsSetIdentityCenterArn();
}
internal class Amazon.S3Control.Model.ListAccessGrantsInstancesPaginator : object {
    private IAmazonS3Control _client;
    private ListAccessGrantsInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccessGrantsInstancesResponse> Responses { get; }
    internal ListAccessGrantsInstancesPaginator(IAmazonS3Control client, ListAccessGrantsInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccessGrantsInstancesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListAccessGrantsInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListAccessGrantsInstancesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListAccessGrantsInstancesResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListAccessGrantsInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListAccessGrantsInstancesRequest : AmazonS3ControlRequest {
    private string _accountId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListAccessGrantsInstancesResponse : AmazonWebServiceResponse {
    private List`1<ListAccessGrantsInstanceEntry> _accessGrantsInstancesList;
    private string _nextToken;
    public List`1<ListAccessGrantsInstanceEntry> AccessGrantsInstancesList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ListAccessGrantsInstanceEntry> get_AccessGrantsInstancesList();
    public void set_AccessGrantsInstancesList(List`1<ListAccessGrantsInstanceEntry> value);
    internal bool IsSetAccessGrantsInstancesList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListAccessGrantsLocationsEntry : object {
    private string _accessGrantsLocationArn;
    private string _accessGrantsLocationId;
    private Nullable`1<DateTime> _createdAt;
    private string _iamRoleArn;
    private string _locationScope;
    [AWSPropertyAttribute]
public string AccessGrantsLocationArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string IAMRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string LocationScope { get; public set; }
    public string get_AccessGrantsLocationArn();
    public void set_AccessGrantsLocationArn(string value);
    internal bool IsSetAccessGrantsLocationArn();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_IAMRoleArn();
    public void set_IAMRoleArn(string value);
    internal bool IsSetIAMRoleArn();
    public string get_LocationScope();
    public void set_LocationScope(string value);
    internal bool IsSetLocationScope();
}
internal class Amazon.S3Control.Model.ListAccessGrantsLocationsPaginator : object {
    private IAmazonS3Control _client;
    private ListAccessGrantsLocationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccessGrantsLocationsResponse> Responses { get; }
    internal ListAccessGrantsLocationsPaginator(IAmazonS3Control client, ListAccessGrantsLocationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccessGrantsLocationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListAccessGrantsLocationsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListAccessGrantsLocationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListAccessGrantsLocationsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListAccessGrantsLocationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListAccessGrantsLocationsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _locationScope;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string LocationScope { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_LocationScope();
    public void set_LocationScope(string value);
    internal bool IsSetLocationScope();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListAccessGrantsLocationsResponse : AmazonWebServiceResponse {
    private List`1<ListAccessGrantsLocationsEntry> _accessGrantsLocationsList;
    private string _nextToken;
    public List`1<ListAccessGrantsLocationsEntry> AccessGrantsLocationsList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ListAccessGrantsLocationsEntry> get_AccessGrantsLocationsList();
    public void set_AccessGrantsLocationsList(List`1<ListAccessGrantsLocationsEntry> value);
    internal bool IsSetAccessGrantsLocationsList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.S3Control.Model.ListAccessGrantsPaginator : object {
    private IAmazonS3Control _client;
    private ListAccessGrantsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccessGrantsResponse> Responses { get; }
    internal ListAccessGrantsPaginator(IAmazonS3Control client, ListAccessGrantsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccessGrantsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListAccessGrantsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListAccessGrantsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListAccessGrantsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListAccessGrantsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListAccessGrantsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _applicationArn;
    private string _granteeIdentifier;
    private GranteeType _granteeType;
    private string _grantScope;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Permission _permission;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ApplicationArn { get; public set; }
    public string GranteeIdentifier { get; public set; }
    public GranteeType GranteeType { get; public set; }
    [AWSPropertyAttribute]
public string GrantScope { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Permission Permission { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ApplicationArn();
    public void set_ApplicationArn(string value);
    internal bool IsSetApplicationArn();
    public string get_GranteeIdentifier();
    public void set_GranteeIdentifier(string value);
    internal bool IsSetGranteeIdentifier();
    public GranteeType get_GranteeType();
    public void set_GranteeType(GranteeType value);
    internal bool IsSetGranteeType();
    public string get_GrantScope();
    public void set_GrantScope(string value);
    internal bool IsSetGrantScope();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Permission get_Permission();
    public void set_Permission(Permission value);
    internal bool IsSetPermission();
}
public class Amazon.S3Control.Model.ListAccessGrantsResponse : AmazonWebServiceResponse {
    private List`1<ListAccessGrantEntry> _accessGrantsList;
    private string _nextToken;
    public List`1<ListAccessGrantEntry> AccessGrantsList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ListAccessGrantEntry> get_AccessGrantsList();
    public void set_AccessGrantsList(List`1<ListAccessGrantEntry> value);
    internal bool IsSetAccessGrantsList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.S3Control.Model.ListAccessPointsForObjectLambdaPaginator : object {
    private IAmazonS3Control _client;
    private ListAccessPointsForObjectLambdaRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccessPointsForObjectLambdaResponse> Responses { get; }
    public IPaginatedEnumerable`1<ObjectLambdaAccessPoint> ObjectLambdaAccessPointList { get; }
    internal ListAccessPointsForObjectLambdaPaginator(IAmazonS3Control client, ListAccessPointsForObjectLambdaRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccessPointsForObjectLambdaResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ObjectLambdaAccessPoint> get_ObjectLambdaAccessPointList();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListAccessPointsForObjectLambdaPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListAccessPointsForObjectLambdaResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAccessPointsForObjectLambdaResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListAccessPointsForObjectLambdaResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListAccessPointsForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListAccessPointsForObjectLambdaResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ObjectLambdaAccessPoint> _objectLambdaAccessPointList;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ObjectLambdaAccessPoint> ObjectLambdaAccessPointList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ObjectLambdaAccessPoint> get_ObjectLambdaAccessPointList();
    public void set_ObjectLambdaAccessPointList(List`1<ObjectLambdaAccessPoint> value);
    internal bool IsSetObjectLambdaAccessPointList();
}
internal class Amazon.S3Control.Model.ListAccessPointsPaginator : object {
    private IAmazonS3Control _client;
    private ListAccessPointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccessPointsResponse> Responses { get; }
    internal ListAccessPointsPaginator(IAmazonS3Control client, ListAccessPointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccessPointsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListAccessPointsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListAccessPointsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListAccessPointsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListAccessPointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListAccessPointsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListAccessPointsResponse : AmazonWebServiceResponse {
    private List`1<AccessPoint> _accessPointList;
    private string _nextToken;
    public List`1<AccessPoint> AccessPointList { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<AccessPoint> get_AccessPointList();
    public void set_AccessPointList(List`1<AccessPoint> value);
    internal bool IsSetAccessPointList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.S3Control.Model.ListJobsPaginator : object {
    private IAmazonS3Control _client;
    private ListJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListJobsResponse> Responses { get; }
    internal ListJobsPaginator(IAmazonS3Control client, ListJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListJobsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListJobsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListJobsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListJobsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListJobsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private List`1<string> _jobStatuses;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public List`1<string> JobStatuses { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<string> get_JobStatuses();
    public void set_JobStatuses(List`1<string> value);
    internal bool IsSetJobStatuses();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListJobsResponse : AmazonWebServiceResponse {
    private List`1<JobListDescriptor> _jobs;
    private string _nextToken;
    public List`1<JobListDescriptor> Jobs { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<JobListDescriptor> get_Jobs();
    public void set_Jobs(List`1<JobListDescriptor> value);
    internal bool IsSetJobs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.S3Control.Model.ListMultiRegionAccessPointsPaginator : object {
    private IAmazonS3Control _client;
    private ListMultiRegionAccessPointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListMultiRegionAccessPointsResponse> Responses { get; }
    internal ListMultiRegionAccessPointsPaginator(IAmazonS3Control client, ListMultiRegionAccessPointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListMultiRegionAccessPointsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListMultiRegionAccessPointsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListMultiRegionAccessPointsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListMultiRegionAccessPointsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListMultiRegionAccessPointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListMultiRegionAccessPointsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListMultiRegionAccessPointsResponse : AmazonWebServiceResponse {
    private List`1<MultiRegionAccessPointReport> _accessPoints;
    private string _nextToken;
    public List`1<MultiRegionAccessPointReport> AccessPoints { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<MultiRegionAccessPointReport> get_AccessPoints();
    public void set_AccessPoints(List`1<MultiRegionAccessPointReport> value);
    internal bool IsSetAccessPoints();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.S3Control.Model.ListRegionalBucketsPaginator : object {
    private IAmazonS3Control _client;
    private ListRegionalBucketsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListRegionalBucketsResponse> Responses { get; }
    internal ListRegionalBucketsPaginator(IAmazonS3Control client, ListRegionalBucketsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListRegionalBucketsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListRegionalBucketsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListRegionalBucketsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListRegionalBucketsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListRegionalBucketsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListRegionalBucketsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _outpostId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string OutpostId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_OutpostId();
    public void set_OutpostId(string value);
    internal bool IsSetOutpostId();
}
public class Amazon.S3Control.Model.ListRegionalBucketsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<RegionalBucket> _regionalBucketList;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<RegionalBucket> RegionalBucketList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<RegionalBucket> get_RegionalBucketList();
    public void set_RegionalBucketList(List`1<RegionalBucket> value);
    internal bool IsSetRegionalBucketList();
}
public class Amazon.S3Control.Model.ListStorageLensConfigurationEntry : object {
    private string _homeRegion;
    private string _id;
    private Nullable`1<bool> _isEnabled;
    private string _storageLensArn;
    [AWSPropertyAttribute]
public string HomeRegion { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<bool> IsEnabled { get; public set; }
    [AWSPropertyAttribute]
public string StorageLensArn { get; public set; }
    public string get_HomeRegion();
    public void set_HomeRegion(string value);
    internal bool IsSetHomeRegion();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
    public string get_StorageLensArn();
    public void set_StorageLensArn(string value);
    internal bool IsSetStorageLensArn();
}
internal class Amazon.S3Control.Model.ListStorageLensConfigurationsPaginator : object {
    private IAmazonS3Control _client;
    private ListStorageLensConfigurationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListStorageLensConfigurationsResponse> Responses { get; }
    internal ListStorageLensConfigurationsPaginator(IAmazonS3Control client, ListStorageLensConfigurationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListStorageLensConfigurationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListStorageLensConfigurationsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListStorageLensConfigurationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListStorageLensConfigurationsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListStorageLensConfigurationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListStorageLensConfigurationsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListStorageLensConfigurationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ListStorageLensConfigurationEntry> _storageLensConfigurationList;
    public string NextToken { get; public set; }
    public List`1<ListStorageLensConfigurationEntry> StorageLensConfigurationList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ListStorageLensConfigurationEntry> get_StorageLensConfigurationList();
    public void set_StorageLensConfigurationList(List`1<ListStorageLensConfigurationEntry> value);
    internal bool IsSetStorageLensConfigurationList();
}
public class Amazon.S3Control.Model.ListStorageLensGroupEntry : object {
    private string _homeRegion;
    private string _name;
    private string _storageLensGroupArn;
    [AWSPropertyAttribute]
public string HomeRegion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string StorageLensGroupArn { get; public set; }
    public string get_HomeRegion();
    public void set_HomeRegion(string value);
    internal bool IsSetHomeRegion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_StorageLensGroupArn();
    public void set_StorageLensGroupArn(string value);
    internal bool IsSetStorageLensGroupArn();
}
internal class Amazon.S3Control.Model.ListStorageLensGroupsPaginator : object {
    private IAmazonS3Control _client;
    private ListStorageLensGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListStorageLensGroupsResponse> Responses { get; }
    internal ListStorageLensGroupsPaginator(IAmazonS3Control client, ListStorageLensGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListStorageLensGroupsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.S3Control.Model.ListStorageLensGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-S3Control-Model-ListStorageLensGroupsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListStorageLensGroupsResponse> Amazon.Runtime.IPaginator<Amazon.S3Control.Model.ListStorageLensGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.S3Control.Model.ListStorageLensGroupsRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string NextToken { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.S3Control.Model.ListStorageLensGroupsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ListStorageLensGroupEntry> _storageLensGroupList;
    public string NextToken { get; public set; }
    public List`1<ListStorageLensGroupEntry> StorageLensGroupList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ListStorageLensGroupEntry> get_StorageLensGroupList();
    public void set_StorageLensGroupList(List`1<ListStorageLensGroupEntry> value);
    internal bool IsSetStorageLensGroupList();
}
public class Amazon.S3Control.Model.ListTagsForResourceRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _resourceArn;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.S3Control.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.MatchObjectAge : object {
    private Nullable`1<int> _daysGreaterThan;
    private Nullable`1<int> _daysLessThan;
    public Nullable`1<int> DaysGreaterThan { get; public set; }
    public Nullable`1<int> DaysLessThan { get; public set; }
    public Nullable`1<int> get_DaysGreaterThan();
    public void set_DaysGreaterThan(Nullable`1<int> value);
    internal bool IsSetDaysGreaterThan();
    public Nullable`1<int> get_DaysLessThan();
    public void set_DaysLessThan(Nullable`1<int> value);
    internal bool IsSetDaysLessThan();
}
public class Amazon.S3Control.Model.MatchObjectSize : object {
    private Nullable`1<long> _bytesGreaterThan;
    private Nullable`1<long> _bytesLessThan;
    public Nullable`1<long> BytesGreaterThan { get; public set; }
    public Nullable`1<long> BytesLessThan { get; public set; }
    public Nullable`1<long> get_BytesGreaterThan();
    public void set_BytesGreaterThan(Nullable`1<long> value);
    internal bool IsSetBytesGreaterThan();
    public Nullable`1<long> get_BytesLessThan();
    public void set_BytesLessThan(Nullable`1<long> value);
    internal bool IsSetBytesLessThan();
}
public class Amazon.S3Control.Model.Metrics : object {
    private ReplicationTimeValue _eventThreshold;
    private MetricsStatus _status;
    public ReplicationTimeValue EventThreshold { get; public set; }
    [AWSPropertyAttribute]
public MetricsStatus Status { get; public set; }
    public ReplicationTimeValue get_EventThreshold();
    public void set_EventThreshold(ReplicationTimeValue value);
    internal bool IsSetEventThreshold();
    public MetricsStatus get_Status();
    public void set_Status(MetricsStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.MultiRegionAccessPointPolicyDocument : object {
    private EstablishedMultiRegionAccessPointPolicy _established;
    private ProposedMultiRegionAccessPointPolicy _proposed;
    public EstablishedMultiRegionAccessPointPolicy Established { get; public set; }
    public ProposedMultiRegionAccessPointPolicy Proposed { get; public set; }
    public EstablishedMultiRegionAccessPointPolicy get_Established();
    public void set_Established(EstablishedMultiRegionAccessPointPolicy value);
    internal bool IsSetEstablished();
    public ProposedMultiRegionAccessPointPolicy get_Proposed();
    public void set_Proposed(ProposedMultiRegionAccessPointPolicy value);
    internal bool IsSetProposed();
}
public class Amazon.S3Control.Model.MultiRegionAccessPointRegionalResponse : object {
    private string _name;
    private string _requestStatus;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string RequestStatus { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RequestStatus();
    public void set_RequestStatus(string value);
    internal bool IsSetRequestStatus();
}
public class Amazon.S3Control.Model.MultiRegionAccessPointReport : object {
    private string _alias;
    private Nullable`1<DateTime> _createdAt;
    private string _name;
    private PublicAccessBlockConfiguration _publicAccessBlock;
    private List`1<RegionReport> _regions;
    private MultiRegionAccessPointStatus _status;
    [AWSPropertyAttribute]
public string Alias { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PublicAccessBlockConfiguration PublicAccessBlock { get; public set; }
    public List`1<RegionReport> Regions { get; public set; }
    public MultiRegionAccessPointStatus Status { get; public set; }
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PublicAccessBlockConfiguration get_PublicAccessBlock();
    public void set_PublicAccessBlock(PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlock();
    public List`1<RegionReport> get_Regions();
    public void set_Regions(List`1<RegionReport> value);
    internal bool IsSetRegions();
    public MultiRegionAccessPointStatus get_Status();
    public void set_Status(MultiRegionAccessPointStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.MultiRegionAccessPointRoute : object {
    private string _bucket;
    private string _region;
    private Nullable`1<int> _trafficDialPercentage;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TrafficDialPercentage { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public Nullable`1<int> get_TrafficDialPercentage();
    public void set_TrafficDialPercentage(Nullable`1<int> value);
    internal bool IsSetTrafficDialPercentage();
}
public class Amazon.S3Control.Model.MultiRegionAccessPointsAsyncResponse : object {
    private List`1<MultiRegionAccessPointRegionalResponse> _regions;
    public List`1<MultiRegionAccessPointRegionalResponse> Regions { get; public set; }
    public List`1<MultiRegionAccessPointRegionalResponse> get_Regions();
    public void set_Regions(List`1<MultiRegionAccessPointRegionalResponse> value);
    internal bool IsSetRegions();
}
public class Amazon.S3Control.Model.NoncurrentVersionExpiration : object {
    private Nullable`1<int> _newerNoncurrentVersions;
    private Nullable`1<int> _noncurrentDays;
    public Nullable`1<int> NewerNoncurrentVersions { get; public set; }
    public Nullable`1<int> NoncurrentDays { get; public set; }
    public Nullable`1<int> get_NewerNoncurrentVersions();
    public void set_NewerNoncurrentVersions(Nullable`1<int> value);
    internal bool IsSetNewerNoncurrentVersions();
    public Nullable`1<int> get_NoncurrentDays();
    public void set_NoncurrentDays(Nullable`1<int> value);
    internal bool IsSetNoncurrentDays();
}
public class Amazon.S3Control.Model.NoncurrentVersionTransition : object {
    private Nullable`1<int> _noncurrentDays;
    private TransitionStorageClass _storageClass;
    public Nullable`1<int> NoncurrentDays { get; public set; }
    public TransitionStorageClass StorageClass { get; public set; }
    public Nullable`1<int> get_NoncurrentDays();
    public void set_NoncurrentDays(Nullable`1<int> value);
    internal bool IsSetNoncurrentDays();
    public TransitionStorageClass get_StorageClass();
    public void set_StorageClass(TransitionStorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3Control.Model.NoSuchPublicAccessBlockConfigurationException : AmazonS3ControlException {
    public NoSuchPublicAccessBlockConfigurationException(string message);
    public NoSuchPublicAccessBlockConfigurationException(string message, Exception innerException);
    public NoSuchPublicAccessBlockConfigurationException(Exception innerException);
    public NoSuchPublicAccessBlockConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchPublicAccessBlockConfigurationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.NotFoundException : AmazonS3ControlException {
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
    public NotFoundException(Exception innerException);
    public NotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.ObjectLambdaAccessPoint : object {
    private ObjectLambdaAccessPointAlias _alias;
    private string _name;
    private string _objectLambdaAccessPointArn;
    public ObjectLambdaAccessPointAlias Alias { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string ObjectLambdaAccessPointArn { get; public set; }
    public ObjectLambdaAccessPointAlias get_Alias();
    public void set_Alias(ObjectLambdaAccessPointAlias value);
    internal bool IsSetAlias();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_ObjectLambdaAccessPointArn();
    public void set_ObjectLambdaAccessPointArn(string value);
    internal bool IsSetObjectLambdaAccessPointArn();
}
public class Amazon.S3Control.Model.ObjectLambdaAccessPointAlias : object {
    private ObjectLambdaAccessPointAliasStatus _status;
    private string _value;
    [AWSPropertyAttribute]
public ObjectLambdaAccessPointAliasStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public ObjectLambdaAccessPointAliasStatus get_Status();
    public void set_Status(ObjectLambdaAccessPointAliasStatus value);
    internal bool IsSetStatus();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.S3Control.Model.ObjectLambdaConfiguration : object {
    private List`1<string> _allowedFeatures;
    private Nullable`1<bool> _cloudWatchMetricsEnabled;
    private string _supportingAccessPoint;
    private List`1<ObjectLambdaTransformationConfiguration> _transformationConfigurations;
    public List`1<string> AllowedFeatures { get; public set; }
    public Nullable`1<bool> CloudWatchMetricsEnabled { get; public set; }
    [AWSPropertyAttribute]
public string SupportingAccessPoint { get; public set; }
    [AWSPropertyAttribute]
public List`1<ObjectLambdaTransformationConfiguration> TransformationConfigurations { get; public set; }
    public List`1<string> get_AllowedFeatures();
    public void set_AllowedFeatures(List`1<string> value);
    internal bool IsSetAllowedFeatures();
    public Nullable`1<bool> get_CloudWatchMetricsEnabled();
    public void set_CloudWatchMetricsEnabled(Nullable`1<bool> value);
    internal bool IsSetCloudWatchMetricsEnabled();
    public string get_SupportingAccessPoint();
    public void set_SupportingAccessPoint(string value);
    internal bool IsSetSupportingAccessPoint();
    public List`1<ObjectLambdaTransformationConfiguration> get_TransformationConfigurations();
    public void set_TransformationConfigurations(List`1<ObjectLambdaTransformationConfiguration> value);
    internal bool IsSetTransformationConfigurations();
}
public class Amazon.S3Control.Model.ObjectLambdaContentTransformation : object {
    private AwsLambdaTransformation _awsLambda;
    public AwsLambdaTransformation AwsLambda { get; public set; }
    public AwsLambdaTransformation get_AwsLambda();
    public void set_AwsLambda(AwsLambdaTransformation value);
    internal bool IsSetAwsLambda();
}
public class Amazon.S3Control.Model.ObjectLambdaTransformationConfiguration : object {
    private List`1<string> _actions;
    private ObjectLambdaContentTransformation _contentTransformation;
    [AWSPropertyAttribute]
public List`1<string> Actions { get; public set; }
    [AWSPropertyAttribute]
public ObjectLambdaContentTransformation ContentTransformation { get; public set; }
    public List`1<string> get_Actions();
    public void set_Actions(List`1<string> value);
    internal bool IsSetActions();
    public ObjectLambdaContentTransformation get_ContentTransformation();
    public void set_ContentTransformation(ObjectLambdaContentTransformation value);
    internal bool IsSetContentTransformation();
}
public class Amazon.S3Control.Model.PolicyStatus : object {
    private Nullable`1<bool> _isPublic;
    public Nullable`1<bool> IsPublic { get; public set; }
    public Nullable`1<bool> get_IsPublic();
    public void set_IsPublic(Nullable`1<bool> value);
    internal bool IsSetIsPublic();
}
public class Amazon.S3Control.Model.PrefixLevel : object {
    private PrefixLevelStorageMetrics _storageMetrics;
    [AWSPropertyAttribute]
public PrefixLevelStorageMetrics StorageMetrics { get; public set; }
    public PrefixLevelStorageMetrics get_StorageMetrics();
    public void set_StorageMetrics(PrefixLevelStorageMetrics value);
    internal bool IsSetStorageMetrics();
}
public class Amazon.S3Control.Model.PrefixLevelStorageMetrics : object {
    private Nullable`1<bool> _isEnabled;
    private SelectionCriteria _selectionCriteria;
    public Nullable`1<bool> IsEnabled { get; public set; }
    public SelectionCriteria SelectionCriteria { get; public set; }
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
    public SelectionCriteria get_SelectionCriteria();
    public void set_SelectionCriteria(SelectionCriteria value);
    internal bool IsSetSelectionCriteria();
}
public class Amazon.S3Control.Model.ProposedMultiRegionAccessPointPolicy : object {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.PublicAccessBlockConfiguration : object {
    private Nullable`1<bool> _blockPublicAcls;
    private Nullable`1<bool> _blockPublicPolicy;
    private Nullable`1<bool> _ignorePublicAcls;
    private Nullable`1<bool> _restrictPublicBuckets;
    public Nullable`1<bool> BlockPublicAcls { get; public set; }
    public Nullable`1<bool> BlockPublicPolicy { get; public set; }
    public Nullable`1<bool> IgnorePublicAcls { get; public set; }
    public Nullable`1<bool> RestrictPublicBuckets { get; public set; }
    public Nullable`1<bool> get_BlockPublicAcls();
    public void set_BlockPublicAcls(Nullable`1<bool> value);
    internal bool IsSetBlockPublicAcls();
    public Nullable`1<bool> get_BlockPublicPolicy();
    public void set_BlockPublicPolicy(Nullable`1<bool> value);
    internal bool IsSetBlockPublicPolicy();
    public Nullable`1<bool> get_IgnorePublicAcls();
    public void set_IgnorePublicAcls(Nullable`1<bool> value);
    internal bool IsSetIgnorePublicAcls();
    public Nullable`1<bool> get_RestrictPublicBuckets();
    public void set_RestrictPublicBuckets(Nullable`1<bool> value);
    internal bool IsSetRestrictPublicBuckets();
}
public class Amazon.S3Control.Model.PutAccessGrantsInstanceResourcePolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _organization;
    private string _policy;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Organization { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Organization();
    public void set_Organization(string value);
    internal bool IsSetOrganization();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.PutAccessGrantsInstanceResourcePolicyResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdAt;
    private string _organization;
    private string _policy;
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string Organization { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Organization();
    public void set_Organization(string value);
    internal bool IsSetOrganization();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.PutAccessPointConfigurationForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private ObjectLambdaConfiguration _configuration;
    private string _name;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public ObjectLambdaConfiguration Configuration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public ObjectLambdaConfiguration get_Configuration();
    public void set_Configuration(ObjectLambdaConfiguration value);
    internal bool IsSetConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.S3Control.Model.PutAccessPointConfigurationForObjectLambdaResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutAccessPointPolicyForObjectLambdaRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    private string _policy;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.PutAccessPointPolicyForObjectLambdaResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutAccessPointPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    private string _policy;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.PutAccessPointPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutBucketLifecycleConfigurationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    private LifecycleConfiguration _lifecycleConfiguration;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public LifecycleConfiguration LifecycleConfiguration { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public LifecycleConfiguration get_LifecycleConfiguration();
    public void set_LifecycleConfiguration(LifecycleConfiguration value);
    internal bool IsSetLifecycleConfiguration();
}
public class Amazon.S3Control.Model.PutBucketLifecycleConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutBucketPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    private Nullable`1<bool> _confirmRemoveSelfBucketAccess;
    private string _policy;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public Nullable`1<bool> ConfirmRemoveSelfBucketAccess { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<bool> get_ConfirmRemoveSelfBucketAccess();
    public void set_ConfirmRemoveSelfBucketAccess(Nullable`1<bool> value);
    internal bool IsSetConfirmRemoveSelfBucketAccess();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.PutBucketPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutBucketReplicationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    private ReplicationConfiguration _replicationConfiguration;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public ReplicationConfiguration ReplicationConfiguration { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public ReplicationConfiguration get_ReplicationConfiguration();
    public void set_ReplicationConfiguration(ReplicationConfiguration value);
    internal bool IsSetReplicationConfiguration();
}
public class Amazon.S3Control.Model.PutBucketReplicationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutBucketTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    private Tagging _tagging;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public Tagging Tagging { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Tagging get_Tagging();
    public void set_Tagging(Tagging value);
    internal bool IsSetTagging();
}
public class Amazon.S3Control.Model.PutBucketTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutBucketVersioningRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _bucket;
    private string _mfa;
    private VersioningConfiguration _versioningConfiguration;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public string MFA { get; public set; }
    [AWSPropertyAttribute]
public VersioningConfiguration VersioningConfiguration { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_MFA();
    public void set_MFA(string value);
    internal bool IsSetMFA();
    public VersioningConfiguration get_VersioningConfiguration();
    public void set_VersioningConfiguration(VersioningConfiguration value);
    internal bool IsSetVersioningConfiguration();
}
public class Amazon.S3Control.Model.PutBucketVersioningResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutJobTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _jobId;
    private List`1<S3Tag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public List`1<S3Tag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public List`1<S3Tag> get_Tags();
    public void set_Tags(List`1<S3Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.PutJobTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutMultiRegionAccessPointPolicyInput : object {
    private string _name;
    private string _policy;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3Control.Model.PutMultiRegionAccessPointPolicyRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _clientToken;
    private PutMultiRegionAccessPointPolicyInput _details;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public PutMultiRegionAccessPointPolicyInput Details { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public PutMultiRegionAccessPointPolicyInput get_Details();
    public void set_Details(PutMultiRegionAccessPointPolicyInput value);
    internal bool IsSetDetails();
}
public class Amazon.S3Control.Model.PutMultiRegionAccessPointPolicyResponse : AmazonWebServiceResponse {
    private string _requestTokenARN;
    [AWSPropertyAttribute]
public string RequestTokenARN { get; public set; }
    public string get_RequestTokenARN();
    public void set_RequestTokenARN(string value);
    internal bool IsSetRequestTokenARN();
}
public class Amazon.S3Control.Model.PutPublicAccessBlockRequest : AmazonS3ControlRequest {
    private string _accountId;
    private PublicAccessBlockConfiguration _publicAccessBlockConfiguration;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public PublicAccessBlockConfiguration get_PublicAccessBlockConfiguration();
    public void set_PublicAccessBlockConfiguration(PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlockConfiguration();
}
public class Amazon.S3Control.Model.PutPublicAccessBlockResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutStorageLensConfigurationRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _configId;
    private StorageLensConfiguration _storageLensConfiguration;
    private List`1<StorageLensTag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ConfigId { get; public set; }
    [AWSPropertyAttribute]
public StorageLensConfiguration StorageLensConfiguration { get; public set; }
    public List`1<StorageLensTag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ConfigId();
    public void set_ConfigId(string value);
    internal bool IsSetConfigId();
    public StorageLensConfiguration get_StorageLensConfiguration();
    public void set_StorageLensConfiguration(StorageLensConfiguration value);
    internal bool IsSetStorageLensConfiguration();
    public List`1<StorageLensTag> get_Tags();
    public void set_Tags(List`1<StorageLensTag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.PutStorageLensConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.PutStorageLensConfigurationTaggingRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _configId;
    private List`1<StorageLensTag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ConfigId { get; public set; }
    [AWSPropertyAttribute]
public List`1<StorageLensTag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ConfigId();
    public void set_ConfigId(string value);
    internal bool IsSetConfigId();
    public List`1<StorageLensTag> get_Tags();
    public void set_Tags(List`1<StorageLensTag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.PutStorageLensConfigurationTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.Region : object {
    private string _bucket;
    private string _bucketAccountId;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string BucketAccountId { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_BucketAccountId();
    public void set_BucketAccountId(string value);
    internal bool IsSetBucketAccountId();
}
public class Amazon.S3Control.Model.RegionalBucket : object {
    private string _bucket;
    private string _bucketArn;
    private Nullable`1<DateTime> _creationDate;
    private string _outpostId;
    private Nullable`1<bool> _publicAccessBlockEnabled;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string BucketArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string OutpostId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> PublicAccessBlockEnabled { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_BucketArn();
    public void set_BucketArn(string value);
    internal bool IsSetBucketArn();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_OutpostId();
    public void set_OutpostId(string value);
    internal bool IsSetOutpostId();
    public Nullable`1<bool> get_PublicAccessBlockEnabled();
    public void set_PublicAccessBlockEnabled(Nullable`1<bool> value);
    internal bool IsSetPublicAccessBlockEnabled();
}
public class Amazon.S3Control.Model.RegionReport : object {
    private string _bucket;
    private string _bucketAccountId;
    private string _region;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string BucketAccountId { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_BucketAccountId();
    public void set_BucketAccountId(string value);
    internal bool IsSetBucketAccountId();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
}
public class Amazon.S3Control.Model.ReplicaModifications : object {
    private ReplicaModificationsStatus _status;
    [AWSPropertyAttribute]
public ReplicaModificationsStatus Status { get; public set; }
    public ReplicaModificationsStatus get_Status();
    public void set_Status(ReplicaModificationsStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.ReplicationConfiguration : object {
    private string _role;
    private List`1<ReplicationRule> _rules;
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReplicationRule> Rules { get; public set; }
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public List`1<ReplicationRule> get_Rules();
    public void set_Rules(List`1<ReplicationRule> value);
    internal bool IsSetRules();
}
public class Amazon.S3Control.Model.ReplicationRule : object {
    private string _bucket;
    private DeleteMarkerReplication _deleteMarkerReplication;
    private Destination _destination;
    private ExistingObjectReplication _existingObjectReplication;
    private ReplicationRuleFilter _filter;
    private string _id;
    private string _prefix;
    private Nullable`1<int> _priority;
    private SourceSelectionCriteria _sourceSelectionCriteria;
    private ReplicationRuleStatus _status;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    public DeleteMarkerReplication DeleteMarkerReplication { get; public set; }
    [AWSPropertyAttribute]
public Destination Destination { get; public set; }
    public ExistingObjectReplication ExistingObjectReplication { get; public set; }
    public ReplicationRuleFilter Filter { get; public set; }
    public string ID { get; public set; }
    [ObsoleteAttribute("Prefix has been deprecated")]
public string Prefix { get; public set; }
    public Nullable`1<int> Priority { get; public set; }
    public SourceSelectionCriteria SourceSelectionCriteria { get; public set; }
    [AWSPropertyAttribute]
public ReplicationRuleStatus Status { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public DeleteMarkerReplication get_DeleteMarkerReplication();
    public void set_DeleteMarkerReplication(DeleteMarkerReplication value);
    internal bool IsSetDeleteMarkerReplication();
    public Destination get_Destination();
    public void set_Destination(Destination value);
    internal bool IsSetDestination();
    public ExistingObjectReplication get_ExistingObjectReplication();
    public void set_ExistingObjectReplication(ExistingObjectReplication value);
    internal bool IsSetExistingObjectReplication();
    public ReplicationRuleFilter get_Filter();
    public void set_Filter(ReplicationRuleFilter value);
    internal bool IsSetFilter();
    public string get_ID();
    public void set_ID(string value);
    internal bool IsSetID();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public SourceSelectionCriteria get_SourceSelectionCriteria();
    public void set_SourceSelectionCriteria(SourceSelectionCriteria value);
    internal bool IsSetSourceSelectionCriteria();
    public ReplicationRuleStatus get_Status();
    public void set_Status(ReplicationRuleStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.ReplicationRuleAndOperator : object {
    private string _prefix;
    private List`1<S3Tag> _tags;
    public string Prefix { get; public set; }
    public List`1<S3Tag> Tags { get; public set; }
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public List`1<S3Tag> get_Tags();
    public void set_Tags(List`1<S3Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.ReplicationRuleFilter : object {
    private ReplicationRuleAndOperator _and;
    private string _prefix;
    private S3Tag _tag;
    public ReplicationRuleAndOperator And { get; public set; }
    public string Prefix { get; public set; }
    public S3Tag Tag { get; public set; }
    public ReplicationRuleAndOperator get_And();
    public void set_And(ReplicationRuleAndOperator value);
    internal bool IsSetAnd();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public S3Tag get_Tag();
    public void set_Tag(S3Tag value);
    internal bool IsSetTag();
}
public class Amazon.S3Control.Model.ReplicationTime : object {
    private ReplicationTimeStatus _status;
    private ReplicationTimeValue _time;
    [AWSPropertyAttribute]
public ReplicationTimeStatus Status { get; public set; }
    [AWSPropertyAttribute]
public ReplicationTimeValue Time { get; public set; }
    public ReplicationTimeStatus get_Status();
    public void set_Status(ReplicationTimeStatus value);
    internal bool IsSetStatus();
    public ReplicationTimeValue get_Time();
    public void set_Time(ReplicationTimeValue value);
    internal bool IsSetTime();
}
public class Amazon.S3Control.Model.ReplicationTimeValue : object {
    private Nullable`1<int> _minutes;
    public Nullable`1<int> Minutes { get; public set; }
    public Nullable`1<int> get_Minutes();
    public void set_Minutes(Nullable`1<int> value);
    internal bool IsSetMinutes();
}
public class Amazon.S3Control.Model.S3AccessControlList : object {
    private List`1<S3Grant> _grants;
    private S3ObjectOwner _owner;
    public List`1<S3Grant> Grants { get; public set; }
    [AWSPropertyAttribute]
public S3ObjectOwner Owner { get; public set; }
    public List`1<S3Grant> get_Grants();
    public void set_Grants(List`1<S3Grant> value);
    internal bool IsSetGrants();
    public S3ObjectOwner get_Owner();
    public void set_Owner(S3ObjectOwner value);
    internal bool IsSetOwner();
}
public class Amazon.S3Control.Model.S3AccessControlPolicy : object {
    private S3AccessControlList _accessControlList;
    private S3CannedAccessControlList _cannedAccessControlList;
    public S3AccessControlList AccessControlList { get; public set; }
    public S3CannedAccessControlList CannedAccessControlList { get; public set; }
    public S3AccessControlList get_AccessControlList();
    public void set_AccessControlList(S3AccessControlList value);
    internal bool IsSetAccessControlList();
    public S3CannedAccessControlList get_CannedAccessControlList();
    public void set_CannedAccessControlList(S3CannedAccessControlList value);
    internal bool IsSetCannedAccessControlList();
}
public class Amazon.S3Control.Model.S3BucketDestination : object {
    private string _accountId;
    private string _arn;
    private StorageLensDataExportEncryption _encryption;
    private Format _format;
    private OutputSchemaVersion _outputSchemaVersion;
    private string _prefix;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public StorageLensDataExportEncryption Encryption { get; public set; }
    [AWSPropertyAttribute]
public Format Format { get; public set; }
    [AWSPropertyAttribute]
public OutputSchemaVersion OutputSchemaVersion { get; public set; }
    public string Prefix { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public StorageLensDataExportEncryption get_Encryption();
    public void set_Encryption(StorageLensDataExportEncryption value);
    internal bool IsSetEncryption();
    public Format get_Format();
    public void set_Format(Format value);
    internal bool IsSetFormat();
    public OutputSchemaVersion get_OutputSchemaVersion();
    public void set_OutputSchemaVersion(OutputSchemaVersion value);
    internal bool IsSetOutputSchemaVersion();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.S3Control.Model.S3ControlPaginatorFactory : object {
    private IAmazonS3Control client;
    internal S3ControlPaginatorFactory(IAmazonS3Control client);
    public sealed virtual IListAccessGrantsPaginator ListAccessGrants(ListAccessGrantsRequest request);
    public sealed virtual IListAccessGrantsInstancesPaginator ListAccessGrantsInstances(ListAccessGrantsInstancesRequest request);
    public sealed virtual IListAccessGrantsLocationsPaginator ListAccessGrantsLocations(ListAccessGrantsLocationsRequest request);
    public sealed virtual IListAccessPointsPaginator ListAccessPoints(ListAccessPointsRequest request);
    public sealed virtual IListAccessPointsForObjectLambdaPaginator ListAccessPointsForObjectLambda(ListAccessPointsForObjectLambdaRequest request);
    public sealed virtual IListJobsPaginator ListJobs(ListJobsRequest request);
    public sealed virtual IListMultiRegionAccessPointsPaginator ListMultiRegionAccessPoints(ListMultiRegionAccessPointsRequest request);
    public sealed virtual IListRegionalBucketsPaginator ListRegionalBuckets(ListRegionalBucketsRequest request);
    public sealed virtual IListStorageLensConfigurationsPaginator ListStorageLensConfigurations(ListStorageLensConfigurationsRequest request);
    public sealed virtual IListStorageLensGroupsPaginator ListStorageLensGroups(ListStorageLensGroupsRequest request);
}
public class Amazon.S3Control.Model.S3CopyObjectOperation : object {
    private List`1<S3Grant> _accessControlGrants;
    private Nullable`1<bool> _bucketKeyEnabled;
    private S3CannedAccessControlList _cannedAccessControlList;
    private S3ChecksumAlgorithm _checksumAlgorithm;
    private S3MetadataDirective _metadataDirective;
    private Nullable`1<DateTime> _modifiedSinceConstraint;
    private S3ObjectMetadata _newObjectMetadata;
    private List`1<S3Tag> _newObjectTagging;
    private S3ObjectLockLegalHoldStatus _objectLockLegalHoldStatus;
    private S3ObjectLockMode _objectLockMode;
    private Nullable`1<DateTime> _objectLockRetainUntilDate;
    private string _redirectLocation;
    private Nullable`1<bool> _requesterPays;
    private string _sseAwsKmsKeyId;
    private S3StorageClass _storageClass;
    private string _targetKeyPrefix;
    private string _targetResource;
    private Nullable`1<DateTime> _unModifiedSinceConstraint;
    public List`1<S3Grant> AccessControlGrants { get; public set; }
    public Nullable`1<bool> BucketKeyEnabled { get; public set; }
    public S3CannedAccessControlList CannedAccessControlList { get; public set; }
    public S3ChecksumAlgorithm ChecksumAlgorithm { get; public set; }
    public S3MetadataDirective MetadataDirective { get; public set; }
    public Nullable`1<DateTime> ModifiedSinceConstraint { get; public set; }
    public S3ObjectMetadata NewObjectMetadata { get; public set; }
    public List`1<S3Tag> NewObjectTagging { get; public set; }
    public S3ObjectLockLegalHoldStatus ObjectLockLegalHoldStatus { get; public set; }
    public S3ObjectLockMode ObjectLockMode { get; public set; }
    public Nullable`1<DateTime> ObjectLockRetainUntilDate { get; public set; }
    [AWSPropertyAttribute]
public string RedirectLocation { get; public set; }
    public Nullable`1<bool> RequesterPays { get; public set; }
    [AWSPropertyAttribute]
public string SSEAwsKmsKeyId { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    [AWSPropertyAttribute]
public string TargetKeyPrefix { get; public set; }
    [AWSPropertyAttribute]
public string TargetResource { get; public set; }
    public Nullable`1<DateTime> UnModifiedSinceConstraint { get; public set; }
    public List`1<S3Grant> get_AccessControlGrants();
    public void set_AccessControlGrants(List`1<S3Grant> value);
    internal bool IsSetAccessControlGrants();
    public Nullable`1<bool> get_BucketKeyEnabled();
    public void set_BucketKeyEnabled(Nullable`1<bool> value);
    internal bool IsSetBucketKeyEnabled();
    public S3CannedAccessControlList get_CannedAccessControlList();
    public void set_CannedAccessControlList(S3CannedAccessControlList value);
    internal bool IsSetCannedAccessControlList();
    public S3ChecksumAlgorithm get_ChecksumAlgorithm();
    public void set_ChecksumAlgorithm(S3ChecksumAlgorithm value);
    internal bool IsSetChecksumAlgorithm();
    public S3MetadataDirective get_MetadataDirective();
    public void set_MetadataDirective(S3MetadataDirective value);
    internal bool IsSetMetadataDirective();
    public Nullable`1<DateTime> get_ModifiedSinceConstraint();
    public void set_ModifiedSinceConstraint(Nullable`1<DateTime> value);
    internal bool IsSetModifiedSinceConstraint();
    public S3ObjectMetadata get_NewObjectMetadata();
    public void set_NewObjectMetadata(S3ObjectMetadata value);
    internal bool IsSetNewObjectMetadata();
    public List`1<S3Tag> get_NewObjectTagging();
    public void set_NewObjectTagging(List`1<S3Tag> value);
    internal bool IsSetNewObjectTagging();
    public S3ObjectLockLegalHoldStatus get_ObjectLockLegalHoldStatus();
    public void set_ObjectLockLegalHoldStatus(S3ObjectLockLegalHoldStatus value);
    internal bool IsSetObjectLockLegalHoldStatus();
    public S3ObjectLockMode get_ObjectLockMode();
    public void set_ObjectLockMode(S3ObjectLockMode value);
    internal bool IsSetObjectLockMode();
    public Nullable`1<DateTime> get_ObjectLockRetainUntilDate();
    public void set_ObjectLockRetainUntilDate(Nullable`1<DateTime> value);
    internal bool IsSetObjectLockRetainUntilDate();
    public string get_RedirectLocation();
    public void set_RedirectLocation(string value);
    internal bool IsSetRedirectLocation();
    public Nullable`1<bool> get_RequesterPays();
    public void set_RequesterPays(Nullable`1<bool> value);
    internal bool IsSetRequesterPays();
    public string get_SSEAwsKmsKeyId();
    public void set_SSEAwsKmsKeyId(string value);
    internal bool IsSetSSEAwsKmsKeyId();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
    public string get_TargetKeyPrefix();
    public void set_TargetKeyPrefix(string value);
    internal bool IsSetTargetKeyPrefix();
    public string get_TargetResource();
    public void set_TargetResource(string value);
    internal bool IsSetTargetResource();
    public Nullable`1<DateTime> get_UnModifiedSinceConstraint();
    public void set_UnModifiedSinceConstraint(Nullable`1<DateTime> value);
    internal bool IsSetUnModifiedSinceConstraint();
}
public class Amazon.S3Control.Model.S3DeleteObjectTaggingOperation : object {
}
public class Amazon.S3Control.Model.S3GeneratedManifestDescriptor : object {
    private GeneratedManifestFormat _format;
    private JobManifestLocation _location;
    public GeneratedManifestFormat Format { get; public set; }
    public JobManifestLocation Location { get; public set; }
    public GeneratedManifestFormat get_Format();
    public void set_Format(GeneratedManifestFormat value);
    internal bool IsSetFormat();
    public JobManifestLocation get_Location();
    public void set_Location(JobManifestLocation value);
    internal bool IsSetLocation();
}
public class Amazon.S3Control.Model.S3Grant : object {
    private S3Grantee _grantee;
    private S3Permission _permission;
    public S3Grantee Grantee { get; public set; }
    public S3Permission Permission { get; public set; }
    public S3Grantee get_Grantee();
    public void set_Grantee(S3Grantee value);
    internal bool IsSetGrantee();
    public S3Permission get_Permission();
    public void set_Permission(S3Permission value);
    internal bool IsSetPermission();
}
public class Amazon.S3Control.Model.S3Grantee : object {
    private string _displayName;
    private string _identifier;
    private S3GranteeTypeIdentifier _typeIdentifier;
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    public S3GranteeTypeIdentifier TypeIdentifier { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
    public S3GranteeTypeIdentifier get_TypeIdentifier();
    public void set_TypeIdentifier(S3GranteeTypeIdentifier value);
    internal bool IsSetTypeIdentifier();
}
public class Amazon.S3Control.Model.S3InitiateRestoreObjectOperation : object {
    private Nullable`1<int> _expirationInDays;
    private S3GlacierJobTier _glacierJobTier;
    [AWSPropertyAttribute]
public Nullable`1<int> ExpirationInDays { get; public set; }
    public S3GlacierJobTier GlacierJobTier { get; public set; }
    public Nullable`1<int> get_ExpirationInDays();
    public void set_ExpirationInDays(Nullable`1<int> value);
    internal bool IsSetExpirationInDays();
    public S3GlacierJobTier get_GlacierJobTier();
    public void set_GlacierJobTier(S3GlacierJobTier value);
    internal bool IsSetGlacierJobTier();
}
public class Amazon.S3Control.Model.S3JobManifestGenerator : object {
    private Nullable`1<bool> _enableManifestOutput;
    private string _expectedBucketOwner;
    private JobManifestGeneratorFilter _filter;
    private S3ManifestOutputLocation _manifestOutputLocation;
    private string _sourceBucket;
    [AWSPropertyAttribute]
public Nullable`1<bool> EnableManifestOutput { get; public set; }
    [AWSPropertyAttribute]
public string ExpectedBucketOwner { get; public set; }
    public JobManifestGeneratorFilter Filter { get; public set; }
    public S3ManifestOutputLocation ManifestOutputLocation { get; public set; }
    [AWSPropertyAttribute]
public string SourceBucket { get; public set; }
    public Nullable`1<bool> get_EnableManifestOutput();
    public void set_EnableManifestOutput(Nullable`1<bool> value);
    internal bool IsSetEnableManifestOutput();
    public string get_ExpectedBucketOwner();
    public void set_ExpectedBucketOwner(string value);
    internal bool IsSetExpectedBucketOwner();
    public JobManifestGeneratorFilter get_Filter();
    public void set_Filter(JobManifestGeneratorFilter value);
    internal bool IsSetFilter();
    public S3ManifestOutputLocation get_ManifestOutputLocation();
    public void set_ManifestOutputLocation(S3ManifestOutputLocation value);
    internal bool IsSetManifestOutputLocation();
    public string get_SourceBucket();
    public void set_SourceBucket(string value);
    internal bool IsSetSourceBucket();
}
public class Amazon.S3Control.Model.S3ManifestOutputLocation : object {
    private string _bucket;
    private string _expectedManifestBucketOwner;
    private GeneratedManifestEncryption _manifestEncryption;
    private GeneratedManifestFormat _manifestFormat;
    private string _manifestPrefix;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public string ExpectedManifestBucketOwner { get; public set; }
    public GeneratedManifestEncryption ManifestEncryption { get; public set; }
    [AWSPropertyAttribute]
public GeneratedManifestFormat ManifestFormat { get; public set; }
    [AWSPropertyAttribute]
public string ManifestPrefix { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_ExpectedManifestBucketOwner();
    public void set_ExpectedManifestBucketOwner(string value);
    internal bool IsSetExpectedManifestBucketOwner();
    public GeneratedManifestEncryption get_ManifestEncryption();
    public void set_ManifestEncryption(GeneratedManifestEncryption value);
    internal bool IsSetManifestEncryption();
    public GeneratedManifestFormat get_ManifestFormat();
    public void set_ManifestFormat(GeneratedManifestFormat value);
    internal bool IsSetManifestFormat();
    public string get_ManifestPrefix();
    public void set_ManifestPrefix(string value);
    internal bool IsSetManifestPrefix();
}
public class Amazon.S3Control.Model.S3ObjectLockLegalHold : object {
    private S3ObjectLockLegalHoldStatus _status;
    [AWSPropertyAttribute]
public S3ObjectLockLegalHoldStatus Status { get; public set; }
    public S3ObjectLockLegalHoldStatus get_Status();
    public void set_Status(S3ObjectLockLegalHoldStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.S3ObjectMetadata : object {
    private string _cacheControl;
    private string _contentDisposition;
    private string _contentEncoding;
    private string _contentLanguage;
    private Nullable`1<long> _contentLength;
    private string _contentMD5;
    private string _contentType;
    private Nullable`1<DateTime> _httpExpiresDate;
    private Nullable`1<bool> _requesterCharged;
    private S3SSEAlgorithm _sseAlgorithm;
    private Dictionary`2<string, string> _userMetadata;
    [AWSPropertyAttribute]
public string CacheControl { get; public set; }
    [AWSPropertyAttribute]
public string ContentDisposition { get; public set; }
    [AWSPropertyAttribute]
public string ContentEncoding { get; public set; }
    [AWSPropertyAttribute]
public string ContentLanguage { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ContentLength { get; public set; }
    [AWSPropertyAttribute]
public string ContentMD5 { get; public set; }
    [AWSPropertyAttribute]
public string ContentType { get; public set; }
    public Nullable`1<DateTime> HttpExpiresDate { get; public set; }
    public Nullable`1<bool> RequesterCharged { get; public set; }
    public S3SSEAlgorithm SSEAlgorithm { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> UserMetadata { get; public set; }
    public string get_CacheControl();
    public void set_CacheControl(string value);
    internal bool IsSetCacheControl();
    public string get_ContentDisposition();
    public void set_ContentDisposition(string value);
    internal bool IsSetContentDisposition();
    public string get_ContentEncoding();
    public void set_ContentEncoding(string value);
    internal bool IsSetContentEncoding();
    public string get_ContentLanguage();
    public void set_ContentLanguage(string value);
    internal bool IsSetContentLanguage();
    public Nullable`1<long> get_ContentLength();
    public void set_ContentLength(Nullable`1<long> value);
    internal bool IsSetContentLength();
    public string get_ContentMD5();
    public void set_ContentMD5(string value);
    internal bool IsSetContentMD5();
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public Nullable`1<DateTime> get_HttpExpiresDate();
    public void set_HttpExpiresDate(Nullable`1<DateTime> value);
    internal bool IsSetHttpExpiresDate();
    public Nullable`1<bool> get_RequesterCharged();
    public void set_RequesterCharged(Nullable`1<bool> value);
    internal bool IsSetRequesterCharged();
    public S3SSEAlgorithm get_SSEAlgorithm();
    public void set_SSEAlgorithm(S3SSEAlgorithm value);
    internal bool IsSetSSEAlgorithm();
    public Dictionary`2<string, string> get_UserMetadata();
    public void set_UserMetadata(Dictionary`2<string, string> value);
    internal bool IsSetUserMetadata();
}
public class Amazon.S3Control.Model.S3ObjectOwner : object {
    private string _displayName;
    private string _id;
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    [AWSPropertyAttribute]
public string ID { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public string get_ID();
    public void set_ID(string value);
    internal bool IsSetID();
}
public class Amazon.S3Control.Model.S3ReplicateObjectOperation : object {
}
public class Amazon.S3Control.Model.S3Retention : object {
    private S3ObjectLockRetentionMode _mode;
    private Nullable`1<DateTime> _retainUntilDate;
    public S3ObjectLockRetentionMode Mode { get; public set; }
    public Nullable`1<DateTime> RetainUntilDate { get; public set; }
    public S3ObjectLockRetentionMode get_Mode();
    public void set_Mode(S3ObjectLockRetentionMode value);
    internal bool IsSetMode();
    public Nullable`1<DateTime> get_RetainUntilDate();
    public void set_RetainUntilDate(Nullable`1<DateTime> value);
    internal bool IsSetRetainUntilDate();
}
public class Amazon.S3Control.Model.S3SetObjectAclOperation : object {
    private S3AccessControlPolicy _accessControlPolicy;
    public S3AccessControlPolicy AccessControlPolicy { get; public set; }
    public S3AccessControlPolicy get_AccessControlPolicy();
    public void set_AccessControlPolicy(S3AccessControlPolicy value);
    internal bool IsSetAccessControlPolicy();
}
public class Amazon.S3Control.Model.S3SetObjectLegalHoldOperation : object {
    private S3ObjectLockLegalHold _legalHold;
    [AWSPropertyAttribute]
public S3ObjectLockLegalHold LegalHold { get; public set; }
    public S3ObjectLockLegalHold get_LegalHold();
    public void set_LegalHold(S3ObjectLockLegalHold value);
    internal bool IsSetLegalHold();
}
public class Amazon.S3Control.Model.S3SetObjectRetentionOperation : object {
    private Nullable`1<bool> _bypassGovernanceRetention;
    private S3Retention _retention;
    public Nullable`1<bool> BypassGovernanceRetention { get; public set; }
    [AWSPropertyAttribute]
public S3Retention Retention { get; public set; }
    public Nullable`1<bool> get_BypassGovernanceRetention();
    public void set_BypassGovernanceRetention(Nullable`1<bool> value);
    internal bool IsSetBypassGovernanceRetention();
    public S3Retention get_Retention();
    public void set_Retention(S3Retention value);
    internal bool IsSetRetention();
}
public class Amazon.S3Control.Model.S3SetObjectTaggingOperation : object {
    private List`1<S3Tag> _tagSet;
    public List`1<S3Tag> TagSet { get; public set; }
    public List`1<S3Tag> get_TagSet();
    public void set_TagSet(List`1<S3Tag> value);
    internal bool IsSetTagSet();
}
public class Amazon.S3Control.Model.S3Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.S3Control.Model.SelectionCriteria : object {
    private string _delimiter;
    private Nullable`1<int> _maxDepth;
    private Nullable`1<double> _minStorageBytesPercentage;
    [AWSPropertyAttribute]
public string Delimiter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxDepth { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> MinStorageBytesPercentage { get; public set; }
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public Nullable`1<int> get_MaxDepth();
    public void set_MaxDepth(Nullable`1<int> value);
    internal bool IsSetMaxDepth();
    public Nullable`1<double> get_MinStorageBytesPercentage();
    public void set_MinStorageBytesPercentage(Nullable`1<double> value);
    internal bool IsSetMinStorageBytesPercentage();
}
public class Amazon.S3Control.Model.SourceSelectionCriteria : object {
    private ReplicaModifications _replicaModifications;
    private SseKmsEncryptedObjects _sseKmsEncryptedObjects;
    public ReplicaModifications ReplicaModifications { get; public set; }
    public SseKmsEncryptedObjects SseKmsEncryptedObjects { get; public set; }
    public ReplicaModifications get_ReplicaModifications();
    public void set_ReplicaModifications(ReplicaModifications value);
    internal bool IsSetReplicaModifications();
    public SseKmsEncryptedObjects get_SseKmsEncryptedObjects();
    public void set_SseKmsEncryptedObjects(SseKmsEncryptedObjects value);
    internal bool IsSetSseKmsEncryptedObjects();
}
public class Amazon.S3Control.Model.SSEKMS : object {
    private string _keyId;
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.S3Control.Model.SseKmsEncryptedObjects : object {
    private SseKmsEncryptedObjectsStatus _status;
    [AWSPropertyAttribute]
public SseKmsEncryptedObjectsStatus Status { get; public set; }
    public SseKmsEncryptedObjectsStatus get_Status();
    public void set_Status(SseKmsEncryptedObjectsStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.SSEKMSEncryption : object {
    private string _keyId;
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.S3Control.Model.SSES3 : object {
}
public class Amazon.S3Control.Model.SSES3Encryption : object {
}
public class Amazon.S3Control.Model.StorageLensAwsOrg : object {
    private string _arn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.S3Control.Model.StorageLensConfiguration : object {
    private AccountLevel _accountLevel;
    private StorageLensAwsOrg _awsOrg;
    private StorageLensDataExport _dataExport;
    private Exclude _exclude;
    private string _id;
    private Include _include;
    private Nullable`1<bool> _isEnabled;
    private string _storageLensArn;
    [AWSPropertyAttribute]
public AccountLevel AccountLevel { get; public set; }
    public StorageLensAwsOrg AwsOrg { get; public set; }
    public StorageLensDataExport DataExport { get; public set; }
    public Exclude Exclude { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Include Include { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> IsEnabled { get; public set; }
    [AWSPropertyAttribute]
public string StorageLensArn { get; public set; }
    public AccountLevel get_AccountLevel();
    public void set_AccountLevel(AccountLevel value);
    internal bool IsSetAccountLevel();
    public StorageLensAwsOrg get_AwsOrg();
    public void set_AwsOrg(StorageLensAwsOrg value);
    internal bool IsSetAwsOrg();
    public StorageLensDataExport get_DataExport();
    public void set_DataExport(StorageLensDataExport value);
    internal bool IsSetDataExport();
    public Exclude get_Exclude();
    public void set_Exclude(Exclude value);
    internal bool IsSetExclude();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Include get_Include();
    public void set_Include(Include value);
    internal bool IsSetInclude();
    public Nullable`1<bool> get_IsEnabled();
    public void set_IsEnabled(Nullable`1<bool> value);
    internal bool IsSetIsEnabled();
    public string get_StorageLensArn();
    public void set_StorageLensArn(string value);
    internal bool IsSetStorageLensArn();
}
public class Amazon.S3Control.Model.StorageLensDataExport : object {
    private CloudWatchMetrics _cloudWatchMetrics;
    private S3BucketDestination _s3BucketDestination;
    public CloudWatchMetrics CloudWatchMetrics { get; public set; }
    public S3BucketDestination S3BucketDestination { get; public set; }
    public CloudWatchMetrics get_CloudWatchMetrics();
    public void set_CloudWatchMetrics(CloudWatchMetrics value);
    internal bool IsSetCloudWatchMetrics();
    public S3BucketDestination get_S3BucketDestination();
    public void set_S3BucketDestination(S3BucketDestination value);
    internal bool IsSetS3BucketDestination();
}
public class Amazon.S3Control.Model.StorageLensDataExportEncryption : object {
    private SSEKMS _ssekms;
    private SSES3 _sses3;
    public SSEKMS SSEKMS { get; public set; }
    public SSES3 SSES3 { get; public set; }
    public SSEKMS get_SSEKMS();
    public void set_SSEKMS(SSEKMS value);
    internal bool IsSetSSEKMS();
    public SSES3 get_SSES3();
    public void set_SSES3(SSES3 value);
    internal bool IsSetSSES3();
}
public class Amazon.S3Control.Model.StorageLensGroup : object {
    private StorageLensGroupFilter _filter;
    private string _name;
    private string _storageLensGroupArn;
    [AWSPropertyAttribute]
public StorageLensGroupFilter Filter { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string StorageLensGroupArn { get; public set; }
    public StorageLensGroupFilter get_Filter();
    public void set_Filter(StorageLensGroupFilter value);
    internal bool IsSetFilter();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_StorageLensGroupArn();
    public void set_StorageLensGroupArn(string value);
    internal bool IsSetStorageLensGroupArn();
}
public class Amazon.S3Control.Model.StorageLensGroupAndOperator : object {
    private List`1<string> _matchAnyPrefix;
    private List`1<string> _matchAnySuffix;
    private List`1<S3Tag> _matchAnyTag;
    private MatchObjectAge _matchObjectAge;
    private MatchObjectSize _matchObjectSize;
    public List`1<string> MatchAnyPrefix { get; public set; }
    public List`1<string> MatchAnySuffix { get; public set; }
    public List`1<S3Tag> MatchAnyTag { get; public set; }
    public MatchObjectAge MatchObjectAge { get; public set; }
    public MatchObjectSize MatchObjectSize { get; public set; }
    public List`1<string> get_MatchAnyPrefix();
    public void set_MatchAnyPrefix(List`1<string> value);
    internal bool IsSetMatchAnyPrefix();
    public List`1<string> get_MatchAnySuffix();
    public void set_MatchAnySuffix(List`1<string> value);
    internal bool IsSetMatchAnySuffix();
    public List`1<S3Tag> get_MatchAnyTag();
    public void set_MatchAnyTag(List`1<S3Tag> value);
    internal bool IsSetMatchAnyTag();
    public MatchObjectAge get_MatchObjectAge();
    public void set_MatchObjectAge(MatchObjectAge value);
    internal bool IsSetMatchObjectAge();
    public MatchObjectSize get_MatchObjectSize();
    public void set_MatchObjectSize(MatchObjectSize value);
    internal bool IsSetMatchObjectSize();
}
public class Amazon.S3Control.Model.StorageLensGroupFilter : object {
    private StorageLensGroupAndOperator _and;
    private List`1<string> _matchAnyPrefix;
    private List`1<string> _matchAnySuffix;
    private List`1<S3Tag> _matchAnyTag;
    private MatchObjectAge _matchObjectAge;
    private MatchObjectSize _matchObjectSize;
    private StorageLensGroupOrOperator _or;
    public StorageLensGroupAndOperator And { get; public set; }
    public List`1<string> MatchAnyPrefix { get; public set; }
    public List`1<string> MatchAnySuffix { get; public set; }
    public List`1<S3Tag> MatchAnyTag { get; public set; }
    public MatchObjectAge MatchObjectAge { get; public set; }
    public MatchObjectSize MatchObjectSize { get; public set; }
    public StorageLensGroupOrOperator Or { get; public set; }
    public StorageLensGroupAndOperator get_And();
    public void set_And(StorageLensGroupAndOperator value);
    internal bool IsSetAnd();
    public List`1<string> get_MatchAnyPrefix();
    public void set_MatchAnyPrefix(List`1<string> value);
    internal bool IsSetMatchAnyPrefix();
    public List`1<string> get_MatchAnySuffix();
    public void set_MatchAnySuffix(List`1<string> value);
    internal bool IsSetMatchAnySuffix();
    public List`1<S3Tag> get_MatchAnyTag();
    public void set_MatchAnyTag(List`1<S3Tag> value);
    internal bool IsSetMatchAnyTag();
    public MatchObjectAge get_MatchObjectAge();
    public void set_MatchObjectAge(MatchObjectAge value);
    internal bool IsSetMatchObjectAge();
    public MatchObjectSize get_MatchObjectSize();
    public void set_MatchObjectSize(MatchObjectSize value);
    internal bool IsSetMatchObjectSize();
    public StorageLensGroupOrOperator get_Or();
    public void set_Or(StorageLensGroupOrOperator value);
    internal bool IsSetOr();
}
public class Amazon.S3Control.Model.StorageLensGroupLevel : object {
    private StorageLensGroupLevelSelectionCriteria _selectionCriteria;
    public StorageLensGroupLevelSelectionCriteria SelectionCriteria { get; public set; }
    public StorageLensGroupLevelSelectionCriteria get_SelectionCriteria();
    public void set_SelectionCriteria(StorageLensGroupLevelSelectionCriteria value);
    internal bool IsSetSelectionCriteria();
}
public class Amazon.S3Control.Model.StorageLensGroupLevelSelectionCriteria : object {
    private List`1<string> _exclude;
    private List`1<string> _include;
    public List`1<string> Exclude { get; public set; }
    public List`1<string> Include { get; public set; }
    public List`1<string> get_Exclude();
    public void set_Exclude(List`1<string> value);
    internal bool IsSetExclude();
    public List`1<string> get_Include();
    public void set_Include(List`1<string> value);
    internal bool IsSetInclude();
}
public class Amazon.S3Control.Model.StorageLensGroupOrOperator : object {
    private List`1<string> _matchAnyPrefix;
    private List`1<string> _matchAnySuffix;
    private List`1<S3Tag> _matchAnyTag;
    private MatchObjectAge _matchObjectAge;
    private MatchObjectSize _matchObjectSize;
    public List`1<string> MatchAnyPrefix { get; public set; }
    public List`1<string> MatchAnySuffix { get; public set; }
    public List`1<S3Tag> MatchAnyTag { get; public set; }
    public MatchObjectAge MatchObjectAge { get; public set; }
    public MatchObjectSize MatchObjectSize { get; public set; }
    public List`1<string> get_MatchAnyPrefix();
    public void set_MatchAnyPrefix(List`1<string> value);
    internal bool IsSetMatchAnyPrefix();
    public List`1<string> get_MatchAnySuffix();
    public void set_MatchAnySuffix(List`1<string> value);
    internal bool IsSetMatchAnySuffix();
    public List`1<S3Tag> get_MatchAnyTag();
    public void set_MatchAnyTag(List`1<S3Tag> value);
    internal bool IsSetMatchAnyTag();
    public MatchObjectAge get_MatchObjectAge();
    public void set_MatchObjectAge(MatchObjectAge value);
    internal bool IsSetMatchObjectAge();
    public MatchObjectSize get_MatchObjectSize();
    public void set_MatchObjectSize(MatchObjectSize value);
    internal bool IsSetMatchObjectSize();
}
public class Amazon.S3Control.Model.StorageLensTag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.S3Control.Model.SubmitMultiRegionAccessPointRoutesRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _mrap;
    private List`1<MultiRegionAccessPointRoute> _routeUpdates;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Mrap { get; public set; }
    [AWSPropertyAttribute]
public List`1<MultiRegionAccessPointRoute> RouteUpdates { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Mrap();
    public void set_Mrap(string value);
    internal bool IsSetMrap();
    public List`1<MultiRegionAccessPointRoute> get_RouteUpdates();
    public void set_RouteUpdates(List`1<MultiRegionAccessPointRoute> value);
    internal bool IsSetRouteUpdates();
}
public class Amazon.S3Control.Model.SubmitMultiRegionAccessPointRoutesResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.S3Control.Model.Tagging : object {
    private List`1<S3Tag> _tagSet;
    [AWSPropertyAttribute]
public List`1<S3Tag> TagSet { get; public set; }
    public List`1<S3Tag> get_TagSet();
    public void set_TagSet(List`1<S3Tag> value);
    internal bool IsSetTagSet();
}
public class Amazon.S3Control.Model.TagResourceRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _resourceArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.S3Control.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.TooManyRequestsException : AmazonS3ControlException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.TooManyTagsException : AmazonS3ControlException {
    public TooManyTagsException(string message);
    public TooManyTagsException(string message, Exception innerException);
    public TooManyTagsException(Exception innerException);
    public TooManyTagsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTagsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.S3Control.Model.Transition : object {
    private Nullable`1<DateTime> _date;
    private Nullable`1<int> _days;
    private TransitionStorageClass _storageClass;
    public Nullable`1<DateTime> Date { get; public set; }
    public Nullable`1<int> Days { get; public set; }
    public TransitionStorageClass StorageClass { get; public set; }
    public Nullable`1<DateTime> get_Date();
    public void set_Date(Nullable`1<DateTime> value);
    internal bool IsSetDate();
    public Nullable`1<int> get_Days();
    public void set_Days(Nullable`1<int> value);
    internal bool IsSetDays();
    public TransitionStorageClass get_StorageClass();
    public void set_StorageClass(TransitionStorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3Control.Model.UntagResourceRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.S3Control.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.UpdateAccessGrantsLocationRequest : AmazonS3ControlRequest {
    private string _accessGrantsLocationId;
    private string _accountId;
    private string _iamRoleArn;
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string IAMRoleArn { get; public set; }
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_IAMRoleArn();
    public void set_IAMRoleArn(string value);
    internal bool IsSetIAMRoleArn();
}
public class Amazon.S3Control.Model.UpdateAccessGrantsLocationResponse : AmazonWebServiceResponse {
    private string _accessGrantsLocationArn;
    private string _accessGrantsLocationId;
    private Nullable`1<DateTime> _createdAt;
    private string _iamRoleArn;
    private string _locationScope;
    [AWSPropertyAttribute]
public string AccessGrantsLocationArn { get; public set; }
    [AWSPropertyAttribute]
public string AccessGrantsLocationId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string IAMRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string LocationScope { get; public set; }
    public string get_AccessGrantsLocationArn();
    public void set_AccessGrantsLocationArn(string value);
    internal bool IsSetAccessGrantsLocationArn();
    public string get_AccessGrantsLocationId();
    public void set_AccessGrantsLocationId(string value);
    internal bool IsSetAccessGrantsLocationId();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_IAMRoleArn();
    public void set_IAMRoleArn(string value);
    internal bool IsSetIAMRoleArn();
    public string get_LocationScope();
    public void set_LocationScope(string value);
    internal bool IsSetLocationScope();
}
public class Amazon.S3Control.Model.UpdateJobPriorityRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _jobId;
    private Nullable`1<int> _priority;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
}
public class Amazon.S3Control.Model.UpdateJobPriorityResponse : AmazonWebServiceResponse {
    private string _jobId;
    private Nullable`1<int> _priority;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
}
public class Amazon.S3Control.Model.UpdateJobStatusRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _jobId;
    private RequestedJobStatus _requestedJobStatus;
    private string _statusUpdateReason;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public RequestedJobStatus RequestedJobStatus { get; public set; }
    [AWSPropertyAttribute]
public string StatusUpdateReason { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public RequestedJobStatus get_RequestedJobStatus();
    public void set_RequestedJobStatus(RequestedJobStatus value);
    internal bool IsSetRequestedJobStatus();
    public string get_StatusUpdateReason();
    public void set_StatusUpdateReason(string value);
    internal bool IsSetStatusUpdateReason();
}
public class Amazon.S3Control.Model.UpdateJobStatusResponse : AmazonWebServiceResponse {
    private string _jobId;
    private JobStatus _status;
    private string _statusUpdateReason;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public JobStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusUpdateReason { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public JobStatus get_Status();
    public void set_Status(JobStatus value);
    internal bool IsSetStatus();
    public string get_StatusUpdateReason();
    public void set_StatusUpdateReason(string value);
    internal bool IsSetStatusUpdateReason();
}
public class Amazon.S3Control.Model.UpdateStorageLensGroupRequest : AmazonS3ControlRequest {
    private string _accountId;
    private string _name;
    private StorageLensGroup _storageLensGroup;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public StorageLensGroup StorageLensGroup { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public StorageLensGroup get_StorageLensGroup();
    public void set_StorageLensGroup(StorageLensGroup value);
    internal bool IsSetStorageLensGroup();
}
public class Amazon.S3Control.Model.UpdateStorageLensGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.S3Control.Model.VersioningConfiguration : object {
    private MFADelete _mfaDelete;
    private BucketVersioningStatus _status;
    public MFADelete MFADelete { get; public set; }
    public BucketVersioningStatus Status { get; public set; }
    public MFADelete get_MFADelete();
    public void set_MFADelete(MFADelete value);
    internal bool IsSetMFADelete();
    public BucketVersioningStatus get_Status();
    public void set_Status(BucketVersioningStatus value);
    internal bool IsSetStatus();
}
public class Amazon.S3Control.Model.VpcConfiguration : object {
    private string _vpcId;
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.S3Control.MultiRegionAccessPointStatus : ConstantClass {
    public static MultiRegionAccessPointStatus CREATING;
    public static MultiRegionAccessPointStatus DELETING;
    public static MultiRegionAccessPointStatus INCONSISTENT_ACROSS_REGIONS;
    public static MultiRegionAccessPointStatus PARTIALLY_CREATED;
    public static MultiRegionAccessPointStatus PARTIALLY_DELETED;
    public static MultiRegionAccessPointStatus READY;
    public MultiRegionAccessPointStatus(string value);
    private static MultiRegionAccessPointStatus();
    public static MultiRegionAccessPointStatus FindValue(string value);
    public static MultiRegionAccessPointStatus op_Implicit(string value);
}
public class Amazon.S3Control.NetworkOrigin : ConstantClass {
    public static NetworkOrigin Internet;
    public static NetworkOrigin VPC;
    public NetworkOrigin(string value);
    private static NetworkOrigin();
    public static NetworkOrigin FindValue(string value);
    public static NetworkOrigin op_Implicit(string value);
}
public class Amazon.S3Control.ObjectLambdaAccessPointAliasStatus : ConstantClass {
    public static ObjectLambdaAccessPointAliasStatus PROVISIONING;
    public static ObjectLambdaAccessPointAliasStatus READY;
    public ObjectLambdaAccessPointAliasStatus(string value);
    private static ObjectLambdaAccessPointAliasStatus();
    public static ObjectLambdaAccessPointAliasStatus FindValue(string value);
    public static ObjectLambdaAccessPointAliasStatus op_Implicit(string value);
}
public class Amazon.S3Control.ObjectLambdaAllowedFeature : ConstantClass {
    public static ObjectLambdaAllowedFeature GetObjectPartNumber;
    public static ObjectLambdaAllowedFeature GetObjectRange;
    public static ObjectLambdaAllowedFeature HeadObjectPartNumber;
    public static ObjectLambdaAllowedFeature HeadObjectRange;
    public ObjectLambdaAllowedFeature(string value);
    private static ObjectLambdaAllowedFeature();
    public static ObjectLambdaAllowedFeature FindValue(string value);
    public static ObjectLambdaAllowedFeature op_Implicit(string value);
}
public class Amazon.S3Control.ObjectLambdaTransformationConfigurationAction : ConstantClass {
    public static ObjectLambdaTransformationConfigurationAction GetObject;
    public static ObjectLambdaTransformationConfigurationAction HeadObject;
    public static ObjectLambdaTransformationConfigurationAction ListObjects;
    public static ObjectLambdaTransformationConfigurationAction ListObjectsV2;
    public ObjectLambdaTransformationConfigurationAction(string value);
    private static ObjectLambdaTransformationConfigurationAction();
    public static ObjectLambdaTransformationConfigurationAction FindValue(string value);
    public static ObjectLambdaTransformationConfigurationAction op_Implicit(string value);
}
public class Amazon.S3Control.OperationName : ConstantClass {
    public static OperationName LambdaInvoke;
    public static OperationName S3DeleteObjectTagging;
    public static OperationName S3InitiateRestoreObject;
    public static OperationName S3PutObjectAcl;
    public static OperationName S3PutObjectCopy;
    public static OperationName S3PutObjectLegalHold;
    public static OperationName S3PutObjectRetention;
    public static OperationName S3PutObjectTagging;
    public static OperationName S3ReplicateObject;
    public OperationName(string value);
    private static OperationName();
    public static OperationName FindValue(string value);
    public static OperationName op_Implicit(string value);
}
public class Amazon.S3Control.OutputSchemaVersion : ConstantClass {
    public static OutputSchemaVersion V_1;
    public OutputSchemaVersion(string value);
    private static OutputSchemaVersion();
    public static OutputSchemaVersion FindValue(string value);
    public static OutputSchemaVersion op_Implicit(string value);
}
public class Amazon.S3Control.OwnerOverride : ConstantClass {
    public static OwnerOverride Destination;
    public OwnerOverride(string value);
    private static OwnerOverride();
    public static OwnerOverride FindValue(string value);
    public static OwnerOverride op_Implicit(string value);
}
public class Amazon.S3Control.Permission : ConstantClass {
    public static Permission READ;
    public static Permission READWRITE;
    public static Permission WRITE;
    public Permission(string value);
    private static Permission();
    public static Permission FindValue(string value);
    public static Permission op_Implicit(string value);
}
public class Amazon.S3Control.Privilege : ConstantClass {
    public static Privilege Default;
    public static Privilege Minimal;
    public Privilege(string value);
    private static Privilege();
    public static Privilege FindValue(string value);
    public static Privilege op_Implicit(string value);
}
public class Amazon.S3Control.ReplicaModificationsStatus : ConstantClass {
    public static ReplicaModificationsStatus Disabled;
    public static ReplicaModificationsStatus Enabled;
    public ReplicaModificationsStatus(string value);
    private static ReplicaModificationsStatus();
    public static ReplicaModificationsStatus FindValue(string value);
    public static ReplicaModificationsStatus op_Implicit(string value);
}
public class Amazon.S3Control.ReplicationRuleStatus : ConstantClass {
    public static ReplicationRuleStatus Disabled;
    public static ReplicationRuleStatus Enabled;
    public ReplicationRuleStatus(string value);
    private static ReplicationRuleStatus();
    public static ReplicationRuleStatus FindValue(string value);
    public static ReplicationRuleStatus op_Implicit(string value);
}
public class Amazon.S3Control.ReplicationStatus : ConstantClass {
    public static ReplicationStatus COMPLETED;
    public static ReplicationStatus FAILED;
    public static ReplicationStatus NONE;
    public static ReplicationStatus REPLICA;
    public ReplicationStatus(string value);
    private static ReplicationStatus();
    public static ReplicationStatus FindValue(string value);
    public static ReplicationStatus op_Implicit(string value);
}
public class Amazon.S3Control.ReplicationStorageClass : ConstantClass {
    public static ReplicationStorageClass DEEP_ARCHIVE;
    public static ReplicationStorageClass GLACIER;
    public static ReplicationStorageClass GLACIER_IR;
    public static ReplicationStorageClass INTELLIGENT_TIERING;
    public static ReplicationStorageClass ONEZONE_IA;
    public static ReplicationStorageClass OUTPOSTS;
    public static ReplicationStorageClass REDUCED_REDUNDANCY;
    public static ReplicationStorageClass STANDARD;
    public static ReplicationStorageClass STANDARD_IA;
    public ReplicationStorageClass(string value);
    private static ReplicationStorageClass();
    public static ReplicationStorageClass FindValue(string value);
    public static ReplicationStorageClass op_Implicit(string value);
}
public class Amazon.S3Control.ReplicationTimeStatus : ConstantClass {
    public static ReplicationTimeStatus Disabled;
    public static ReplicationTimeStatus Enabled;
    public ReplicationTimeStatus(string value);
    private static ReplicationTimeStatus();
    public static ReplicationTimeStatus FindValue(string value);
    public static ReplicationTimeStatus op_Implicit(string value);
}
public class Amazon.S3Control.RequestedJobStatus : ConstantClass {
    public static RequestedJobStatus Cancelled;
    public static RequestedJobStatus Ready;
    public RequestedJobStatus(string value);
    private static RequestedJobStatus();
    public static RequestedJobStatus FindValue(string value);
    public static RequestedJobStatus op_Implicit(string value);
}
public class Amazon.S3Control.S3CannedAccessControlList : ConstantClass {
    public static S3CannedAccessControlList AuthenticatedRead;
    public static S3CannedAccessControlList AwsExecRead;
    public static S3CannedAccessControlList BucketOwnerFullControl;
    public static S3CannedAccessControlList BucketOwnerRead;
    public static S3CannedAccessControlList Private;
    public static S3CannedAccessControlList PublicRead;
    public static S3CannedAccessControlList PublicReadWrite;
    public S3CannedAccessControlList(string value);
    private static S3CannedAccessControlList();
    public static S3CannedAccessControlList FindValue(string value);
    public static S3CannedAccessControlList op_Implicit(string value);
}
public class Amazon.S3Control.S3ChecksumAlgorithm : ConstantClass {
    public static S3ChecksumAlgorithm CRC32;
    public static S3ChecksumAlgorithm CRC32C;
    public static S3ChecksumAlgorithm SHA1;
    public static S3ChecksumAlgorithm SHA256;
    public S3ChecksumAlgorithm(string value);
    private static S3ChecksumAlgorithm();
    public static S3ChecksumAlgorithm FindValue(string value);
    public static S3ChecksumAlgorithm op_Implicit(string value);
}
public class Amazon.S3Control.S3GlacierJobTier : ConstantClass {
    public static S3GlacierJobTier BULK;
    public static S3GlacierJobTier STANDARD;
    public S3GlacierJobTier(string value);
    private static S3GlacierJobTier();
    public static S3GlacierJobTier FindValue(string value);
    public static S3GlacierJobTier op_Implicit(string value);
}
public class Amazon.S3Control.S3GranteeTypeIdentifier : ConstantClass {
    public static S3GranteeTypeIdentifier EmailAddress;
    public static S3GranteeTypeIdentifier Id;
    public static S3GranteeTypeIdentifier Uri;
    public S3GranteeTypeIdentifier(string value);
    private static S3GranteeTypeIdentifier();
    public static S3GranteeTypeIdentifier FindValue(string value);
    public static S3GranteeTypeIdentifier op_Implicit(string value);
}
public class Amazon.S3Control.S3MetadataDirective : ConstantClass {
    public static S3MetadataDirective COPY;
    public static S3MetadataDirective REPLACE;
    public S3MetadataDirective(string value);
    private static S3MetadataDirective();
    public static S3MetadataDirective FindValue(string value);
    public static S3MetadataDirective op_Implicit(string value);
}
public class Amazon.S3Control.S3ObjectLockLegalHoldStatus : ConstantClass {
    public static S3ObjectLockLegalHoldStatus OFF;
    public static S3ObjectLockLegalHoldStatus ON;
    public S3ObjectLockLegalHoldStatus(string value);
    private static S3ObjectLockLegalHoldStatus();
    public static S3ObjectLockLegalHoldStatus FindValue(string value);
    public static S3ObjectLockLegalHoldStatus op_Implicit(string value);
}
public class Amazon.S3Control.S3ObjectLockMode : ConstantClass {
    public static S3ObjectLockMode COMPLIANCE;
    public static S3ObjectLockMode GOVERNANCE;
    public S3ObjectLockMode(string value);
    private static S3ObjectLockMode();
    public static S3ObjectLockMode FindValue(string value);
    public static S3ObjectLockMode op_Implicit(string value);
}
public class Amazon.S3Control.S3ObjectLockRetentionMode : ConstantClass {
    public static S3ObjectLockRetentionMode COMPLIANCE;
    public static S3ObjectLockRetentionMode GOVERNANCE;
    public S3ObjectLockRetentionMode(string value);
    private static S3ObjectLockRetentionMode();
    public static S3ObjectLockRetentionMode FindValue(string value);
    public static S3ObjectLockRetentionMode op_Implicit(string value);
}
public class Amazon.S3Control.S3Permission : ConstantClass {
    public static S3Permission FULL_CONTROL;
    public static S3Permission READ;
    public static S3Permission READ_ACP;
    public static S3Permission WRITE;
    public static S3Permission WRITE_ACP;
    public S3Permission(string value);
    private static S3Permission();
    public static S3Permission FindValue(string value);
    public static S3Permission op_Implicit(string value);
}
public class Amazon.S3Control.S3PrefixType : ConstantClass {
    public static S3PrefixType Object;
    public S3PrefixType(string value);
    private static S3PrefixType();
    public static S3PrefixType FindValue(string value);
    public static S3PrefixType op_Implicit(string value);
}
public class Amazon.S3Control.S3SSEAlgorithm : ConstantClass {
    public static S3SSEAlgorithm AES256;
    public static S3SSEAlgorithm KMS;
    public S3SSEAlgorithm(string value);
    private static S3SSEAlgorithm();
    public static S3SSEAlgorithm FindValue(string value);
    public static S3SSEAlgorithm op_Implicit(string value);
}
public class Amazon.S3Control.S3StorageClass : ConstantClass {
    public static S3StorageClass DEEP_ARCHIVE;
    public static S3StorageClass GLACIER;
    public static S3StorageClass GLACIER_IR;
    public static S3StorageClass INTELLIGENT_TIERING;
    public static S3StorageClass ONEZONE_IA;
    public static S3StorageClass STANDARD;
    public static S3StorageClass STANDARD_IA;
    public S3StorageClass(string value);
    private static S3StorageClass();
    public static S3StorageClass FindValue(string value);
    public static S3StorageClass op_Implicit(string value);
}
public class Amazon.S3Control.SseKmsEncryptedObjectsStatus : ConstantClass {
    public static SseKmsEncryptedObjectsStatus Disabled;
    public static SseKmsEncryptedObjectsStatus Enabled;
    public SseKmsEncryptedObjectsStatus(string value);
    private static SseKmsEncryptedObjectsStatus();
    public static SseKmsEncryptedObjectsStatus FindValue(string value);
    public static SseKmsEncryptedObjectsStatus op_Implicit(string value);
}
public class Amazon.S3Control.TransitionStorageClass : ConstantClass {
    public static TransitionStorageClass DEEP_ARCHIVE;
    public static TransitionStorageClass GLACIER;
    public static TransitionStorageClass INTELLIGENT_TIERING;
    public static TransitionStorageClass ONEZONE_IA;
    public static TransitionStorageClass STANDARD_IA;
    public TransitionStorageClass(string value);
    private static TransitionStorageClass();
    public static TransitionStorageClass FindValue(string value);
    public static TransitionStorageClass op_Implicit(string value);
}
